id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Timba.SacredTails.Arena
  commentId: N:Timba.SacredTails.Arena
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Arena
    VB: Timba.SacredTails.Arena
  nameWithType:
    CSharp: Timba.SacredTails.Arena
    VB: Timba.SacredTails.Arena
  qualifiedName:
    CSharp: Timba.SacredTails.Arena
    VB: Timba.SacredTails.Arena
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Arena.BattleShinseiSpawner
    commentId: T:Timba.SacredTails.Arena.BattleShinseiSpawner
    language: CSharp
    name:
      CSharp: BattleShinseiSpawner
      VB: BattleShinseiSpawner
    nameWithType:
      CSharp: BattleShinseiSpawner
      VB: BattleShinseiSpawner
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner
      VB: Timba.SacredTails.Arena.BattleShinseiSpawner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleShinseiSpawner
      path: ''
      startLine: 5590
    summary: "\nSpawns Player&apos;s and Oponent&apos;s shinseis for the arena instances\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleShinseiSpawner : MonoBehaviour'
        VB: >-
          Public Class BattleShinseiSpawner

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
      commentId: F:Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
      language: CSharp
      name:
        CSharp: enemyParent
        VB: enemyParent
      nameWithType:
        CSharp: BattleShinseiSpawner.enemyParent
        VB: BattleShinseiSpawner.enemyParent
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
        VB: Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: enemyParent
        path: ''
        startLine: 5595
      syntax:
        content:
          CSharp: public Transform enemyParent
          VB: Public enemyParent As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean,System.String)
      commentId: M:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: SpawnPlayerShinseis(Boolean, String)
        VB: SpawnPlayerShinseis(Boolean, String)
      nameWithType:
        CSharp: BattleShinseiSpawner.SpawnPlayerShinseis(Boolean, String)
        VB: BattleShinseiSpawner.SpawnPlayerShinseis(Boolean, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean, System.String)
        VB: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SpawnPlayerShinseis
        path: ''
        startLine: 5605
      syntax:
        content:
          CSharp: public CharacterSlot SpawnPlayerShinseis(bool isEnemy, string dna)
          VB: Public Function SpawnPlayerShinseis(isEnemy As Boolean, dna As String) As CharacterSlot
        parameters:
        - id: isEnemy
          type: System.Boolean
        - id: dna
          type: System.String
        return:
          type: Global.CharacterSlot
      overload: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List{System.String},Transform)
      commentId: M:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List{System.String},Transform)
      language: CSharp
      name:
        CSharp: SpawnShinseiEndGame(List<String>, Transform)
        VB: SpawnShinseiEndGame(List(Of String), Transform)
      nameWithType:
        CSharp: BattleShinseiSpawner.SpawnShinseiEndGame(List<String>, Transform)
        VB: BattleShinseiSpawner.SpawnShinseiEndGame(List(Of String), Transform)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List<System.String>, Transform)
        VB: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List(Of System.String), Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SpawnShinseiEndGame
        path: ''
        startLine: 5613
      syntax:
        content:
          CSharp: public void SpawnShinseiEndGame(List<string> dnas, Transform parent)
          VB: Public Sub SpawnShinseiEndGame(dnas As List(Of String), parent As Transform)
        parameters:
        - id: dnas
          type: System.Collections.Generic.List{System.String}
        - id: parent
          type: Global.Transform
      overload: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.BattleUIController
    commentId: T:Timba.SacredTails.Arena.BattleUIController
    language: CSharp
    name:
      CSharp: BattleUIController
      VB: BattleUIController
    nameWithType:
      CSharp: BattleUIController
      VB: BattleUIController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleUIController
      VB: Timba.SacredTails.Arena.BattleUIController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleUIController
      path: ''
      startLine: 5661
    summary: "\nHandles all of the events present in the UI of the Combat arena Mode\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleUIController : MonoBehaviour'
        VB: >-
          Public Class BattleUIController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
      commentId: F:Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
      language: CSharp
      name:
        CSharp: titleEndMatchPanel
        VB: titleEndMatchPanel
      nameWithType:
        CSharp: BattleUIController.titleEndMatchPanel
        VB: BattleUIController.titleEndMatchPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
        VB: Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: titleEndMatchPanel
        path: ''
        startLine: 5664
      syntax:
        content:
          CSharp: public TMP_Text titleEndMatchPanel
          VB: Public titleEndMatchPanel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.versusPanelController
      commentId: F:Timba.SacredTails.Arena.BattleUIController.versusPanelController
      language: CSharp
      name:
        CSharp: versusPanelController
        VB: versusPanelController
      nameWithType:
        CSharp: BattleUIController.versusPanelController
        VB: BattleUIController.versusPanelController
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.versusPanelController
        VB: Timba.SacredTails.Arena.BattleUIController.versusPanelController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: versusPanelController
        path: ''
        startLine: 5669
      syntax:
        content:
          CSharp: public VersusPanelController versusPanelController
          VB: Public versusPanelController As VersusPanelController
        return:
          type: Global.VersusPanelController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.battleMenu
      commentId: F:Timba.SacredTails.Arena.BattleUIController.battleMenu
      language: CSharp
      name:
        CSharp: battleMenu
        VB: battleMenu
      nameWithType:
        CSharp: BattleUIController.battleMenu
        VB: BattleUIController.battleMenu
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.battleMenu
        VB: Timba.SacredTails.Arena.BattleUIController.battleMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleMenu
        path: ''
        startLine: 5687
      syntax:
        content:
          CSharp: public GameObject battleMenu
          VB: Public battleMenu As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
      commentId: F:Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
      language: CSharp
      name:
        CSharp: viewingBackToLobbyButton
        VB: viewingBackToLobbyButton
      nameWithType:
        CSharp: BattleUIController.viewingBackToLobbyButton
        VB: BattleUIController.viewingBackToLobbyButton
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
        VB: Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: viewingBackToLobbyButton
        path: ''
        startLine: 5688
      syntax:
        content:
          CSharp: public GameObject viewingBackToLobbyButton
          VB: Public viewingBackToLobbyButton As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.cardContainer
      commentId: F:Timba.SacredTails.Arena.BattleUIController.cardContainer
      language: CSharp
      name:
        CSharp: cardContainer
        VB: cardContainer
      nameWithType:
        CSharp: BattleUIController.cardContainer
        VB: BattleUIController.cardContainer
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.cardContainer
        VB: Timba.SacredTails.Arena.BattleUIController.cardContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardContainer
        path: ''
        startLine: 5689
      syntax:
        content:
          CSharp: public GameObject cardContainer
          VB: Public cardContainer As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
      commentId: F:Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
      language: CSharp
      name:
        CSharp: battleNotificationSystem
        VB: battleNotificationSystem
      nameWithType:
        CSharp: BattleUIController.battleNotificationSystem
        VB: BattleUIController.battleNotificationSystem
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
        VB: Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleNotificationSystem
        path: ''
        startLine: 5690
      syntax:
        content:
          CSharp: public BattleNotificationSystem battleNotificationSystem
          VB: Public battleNotificationSystem As BattleNotificationSystem
        return:
          type: Global.BattleNotificationSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.cardUis
      commentId: F:Timba.SacredTails.Arena.BattleUIController.cardUis
      language: CSharp
      name:
        CSharp: cardUis
        VB: cardUis
      nameWithType:
        CSharp: BattleUIController.cardUis
        VB: BattleUIController.cardUis
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.cardUis
        VB: Timba.SacredTails.Arena.BattleUIController.cardUis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardUis
        path: ''
        startLine: 5691
      syntax:
        content:
          CSharp: public List<CardUI> cardUis
          VB: Public cardUis As List(Of CardUI)
        return:
          type: System.Collections.Generic.List{CardUI}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.uIDisolver
      commentId: F:Timba.SacredTails.Arena.BattleUIController.uIDisolver
      language: CSharp
      name:
        CSharp: uIDisolver
        VB: uIDisolver
      nameWithType:
        CSharp: BattleUIController.uIDisolver
        VB: BattleUIController.uIDisolver
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.uIDisolver
        VB: Timba.SacredTails.Arena.BattleUIController.uIDisolver
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: uIDisolver
        path: ''
        startLine: 5701
      syntax:
        content:
          CSharp: public UIDisolver uIDisolver
          VB: Public uIDisolver As UIDisolver
        return:
          type: Global.UIDisolver
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,System.String,System.String,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
        VB: Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
      nameWithType:
        CSharp: BattleUIController.Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
        VB: BattleUIController.Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, System.String, System.String, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, System.String, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 5704
      syntax:
        content:
          CSharp: public void Init(ResourceBarValues player1Hp, ResourceBarValues player2Hp, ResourceBarValues player1Pp, ResourceBarValues player2Pp, string playerName, string enemyName, bool isViewing = false)
          VB: Public Sub Init(player1Hp As ResourceBarValues, player2Hp As ResourceBarValues, player1Pp As ResourceBarValues, player2Pp As ResourceBarValues, playerName As String, enemyName As String, isViewing As Boolean = False)
        parameters:
        - id: player1Hp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: player2Hp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: player1Pp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: player2Pp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: playerName
          type: System.String
        - id: enemyName
          type: System.String
        - id: isViewing
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32,Shinsei)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32,Shinsei)
      language: CSharp
      name:
        CSharp: UpdateShinseiPicture(Int32, Shinsei)
        VB: UpdateShinseiPicture(Int32, Shinsei)
      nameWithType:
        CSharp: BattleUIController.UpdateShinseiPicture(Int32, Shinsei)
        VB: BattleUIController.UpdateShinseiPicture(Int32, Shinsei)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32, Shinsei)
        VB: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32, Shinsei)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateShinseiPicture
        path: ''
        startLine: 5774
      syntax:
        content:
          CSharp: public void UpdateShinseiPicture(int playerIndex, Shinsei playerShinsei)
          VB: Public Sub UpdateShinseiPicture(playerIndex As Integer, playerShinsei As Shinsei)
        parameters:
        - id: playerIndex
          type: System.Int32
        - id: playerShinsei
          type: Global.Shinsei
      overload: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single,System.String)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single,System.String)
      language: CSharp
      name:
        CSharp: UpdateTimer(Single, String)
        VB: UpdateTimer(Single, String)
      nameWithType:
        CSharp: BattleUIController.UpdateTimer(Single, String)
        VB: BattleUIController.UpdateTimer(Single, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single, System.String)
        VB: Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateTimer
        path: ''
        startLine: 5780
      syntax:
        content:
          CSharp: public void UpdateTimer(float timeInSeconds, string colorText = null)
          VB: Public Sub UpdateTimer(timeInSeconds As Single, colorText As String = Nothing)
        parameters:
        - id: timeInSeconds
          type: System.Single
        - id: colorText
          type: System.String
      overload: Timba.SacredTails.Arena.BattleUIController.UpdateTimer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
      language: CSharp
      name:
        CSharp: ChangeHealthColorBar(Int32)
        VB: ChangeHealthColorBar(Int32)
      nameWithType:
        CSharp: BattleUIController.ChangeHealthColorBar(Int32)
        VB: BattleUIController.ChangeHealthColorBar(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeHealthColorBar
        path: ''
        startLine: 5794
      syntax:
        content:
          CSharp: public void ChangeHealthColorBar(int indexBar)
          VB: Public Sub ChangeHealthColorBar(indexBar As Integer)
        parameters:
        - id: indexBar
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
        VB: InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
      nameWithType:
        CSharp: BattleUIController.InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
        VB: BattleUIController.InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitializeBars
        path: ''
        startLine: 5816
      syntax:
        content:
          CSharp: public void InitializeBars(int playerHealth, int healthBarIndex, int maxValueHealth, int playerEnergy, int energyBarIndex, int maxValueEnergy)
          VB: Public Sub InitializeBars(playerHealth As Integer, healthBarIndex As Integer, maxValueHealth As Integer, playerEnergy As Integer, energyBarIndex As Integer, maxValueEnergy As Integer)
        parameters:
        - id: playerHealth
          type: System.Int32
        - id: healthBarIndex
          type: System.Int32
        - id: maxValueHealth
          type: System.Int32
        - id: playerEnergy
          type: System.Int32
        - id: energyBarIndex
          type: System.Int32
        - id: maxValueEnergy
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.InitializeBars*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
      language: CSharp
      name:
        CSharp: ShowFaster(Int32)
        VB: ShowFaster(Int32)
      nameWithType:
        CSharp: BattleUIController.ShowFaster(Int32)
        VB: BattleUIController.ShowFaster(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowFaster
        path: ''
        startLine: 5842
      syntax:
        content:
          CSharp: public void ShowFaster(int index)
          VB: Public Sub ShowFaster(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.ShowFaster*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
      commentId: F:Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
      language: CSharp
      name:
        CSharp: OnGetValueOfBars
        VB: OnGetValueOfBars
      nameWithType:
        CSharp: BattleUIController.OnGetValueOfBars
        VB: BattleUIController.OnGetValueOfBars
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
        VB: Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnGetValueOfBars
        path: ''
        startLine: 5847
      syntax:
        content:
          CSharp: public Func<List<int>> OnGetValueOfBars
          VB: Public OnGetValueOfBars As Func(Of List(Of Integer))
        return:
          type: Global.Func{System.Collections.Generic.List{System.Int32}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
      language: CSharp
      name:
        CSharp: ChangeHealthbarView()
        VB: ChangeHealthbarView()
      nameWithType:
        CSharp: BattleUIController.ChangeHealthbarView()
        VB: BattleUIController.ChangeHealthbarView()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView()
        VB: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeHealthbarView
        path: ''
        startLine: 5848
      syntax:
        content:
          CSharp: public void ChangeHealthbarView()
          VB: Public Sub ChangeHealthbarView
      overload: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: ApplyEnergyChange(Int32, Int32)
        VB: ApplyEnergyChange(Int32, Int32)
      nameWithType:
        CSharp: BattleUIController.ApplyEnergyChange(Int32, Int32)
        VB: BattleUIController.ApplyEnergyChange(Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ApplyEnergyChange
        path: ''
        startLine: 5866
      syntax:
        content:
          CSharp: public void ApplyEnergyChange(int energyBarIndex, int newEnergyValue)
          VB: Public Sub ApplyEnergyChange(energyBarIndex As Integer, newEnergyValue As Integer)
        parameters:
        - id: energyBarIndex
          type: System.Int32
        - id: newEnergyValue
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
      language: CSharp
      name:
        CSharp: HideEverythingForWatchMatch(Boolean)
        VB: HideEverythingForWatchMatch(Boolean)
      nameWithType:
        CSharp: BattleUIController.HideEverythingForWatchMatch(Boolean)
        VB: BattleUIController.HideEverythingForWatchMatch(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: HideEverythingForWatchMatch
        path: ''
        startLine: 5873
      syntax:
        content:
          CSharp: public void HideEverythingForWatchMatch(bool isViewer)
          VB: Public Sub HideEverythingForWatchMatch(isViewer As Boolean)
        parameters:
        - id: isViewer
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleWaitingPrompt(Boolean)
        VB: ToggleWaitingPrompt(Boolean)
      nameWithType:
        CSharp: BattleUIController.ToggleWaitingPrompt(Boolean)
        VB: BattleUIController.ToggleWaitingPrompt(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ToggleWaitingPrompt
        path: ''
        startLine: 5889
      syntax:
        content:
          CSharp: public void ToggleWaitingPrompt(bool isWaiting)
          VB: Public Sub ToggleWaitingPrompt(isWaiting As Boolean)
        parameters:
        - id: isWaiting
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowCards(Boolean)
        VB: ShowCards(Boolean)
      nameWithType:
        CSharp: BattleUIController.ShowCards(Boolean)
        VB: BattleUIController.ShowCards(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowCards
        path: ''
        startLine: 5902
      syntax:
        content:
          CSharp: public void ShowCards(bool isShow)
          VB: Public Sub ShowCards(isShow As Boolean)
        parameters:
        - id: isShow
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.ShowCards*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.VfxInfo
    commentId: T:Timba.SacredTails.Arena.VfxInfo
    language: CSharp
    name:
      CSharp: VfxInfo
      VB: VfxInfo
    nameWithType:
      CSharp: VfxInfo
      VB: VfxInfo
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.VfxInfo
      VB: Timba.SacredTails.Arena.VfxInfo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: VfxInfo
      path: ''
      startLine: 7055
    syntax:
      content:
        CSharp: 'public class VfxInfo : MonoBehaviour'
        VB: >-
          Public Class VfxInfo

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.VfxInfo.isVfxReversed
      commentId: F:Timba.SacredTails.Arena.VfxInfo.isVfxReversed
      language: CSharp
      name:
        CSharp: isVfxReversed
        VB: isVfxReversed
      nameWithType:
        CSharp: VfxInfo.isVfxReversed
        VB: VfxInfo.isVfxReversed
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.VfxInfo.isVfxReversed
        VB: Timba.SacredTails.Arena.VfxInfo.isVfxReversed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isVfxReversed
        path: ''
        startLine: 7057
      syntax:
        content:
          CSharp: public bool isVfxReversed
          VB: Public isVfxReversed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.VfxInfo.vfxDuration
      commentId: F:Timba.SacredTails.Arena.VfxInfo.vfxDuration
      language: CSharp
      name:
        CSharp: vfxDuration
        VB: vfxDuration
      nameWithType:
        CSharp: VfxInfo.vfxDuration
        VB: VfxInfo.vfxDuration
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.VfxInfo.vfxDuration
        VB: Timba.SacredTails.Arena.VfxInfo.vfxDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxDuration
        path: ''
        startLine: 7058
      syntax:
        content:
          CSharp: public float vfxDuration
          VB: Public vfxDuration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionController
    language: CSharp
    name:
      CSharp: ArenaShinseiSelectionController
      VB: ArenaShinseiSelectionController
    nameWithType:
      CSharp: ArenaShinseiSelectionController
      VB: ArenaShinseiSelectionController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController
      VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ArenaShinseiSelectionController
      path: ''
      startLine: 8608
    syntax:
      content:
        CSharp: 'public class ArenaShinseiSelectionController : MonoBehaviour'
        VB: >-
          Public Class ArenaShinseiSelectionController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
      language: CSharp
      name:
        CSharp: OnShinseisSelected
        VB: OnShinseisSelected
      nameWithType:
        CSharp: ArenaShinseiSelectionController.OnShinseisSelected
        VB: ArenaShinseiSelectionController.OnShinseisSelected
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnShinseisSelected
        path: ''
        startLine: 8616
      syntax:
        content:
          CSharp: public Action<bool, List<int>> OnShinseisSelected
          VB: Public OnShinseisSelected As Action(Of Boolean, List(Of Integer))
        return:
          type: Global.Action{System.Boolean,System.Collections.Generic.List{System.Int32}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData,System.Int32,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: Init(MatchData, Int32, Boolean)
        VB: Init(MatchData, Int32, Boolean)
      nameWithType:
        CSharp: ArenaShinseiSelectionController.Init(MatchData, Int32, Boolean)
        VB: ArenaShinseiSelectionController.Init(MatchData, Int32, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData, System.Int32, System.Boolean)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 8626
      syntax:
        content:
          CSharp: public void Init(MatchData matchData, int playerIndex, bool isViewer = false)
          VB: Public Sub Init(matchData As MatchData, playerIndex As Integer, isViewer As Boolean = False)
        parameters:
        - id: matchData
          type: Global.MatchData
        - id: playerIndex
          type: System.Int32
        - id: isViewer
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
      language: CSharp
      name:
        CSharp: OnShinseiSelectionCompleted()
        VB: OnShinseiSelectionCompleted()
      nameWithType:
        CSharp: ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
        VB: ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnShinseiSelectionCompleted
        path: ''
        startLine: 8644
      syntax:
        content:
          CSharp: public void OnShinseiSelectionCompleted()
          VB: Public Sub OnShinseiSelectionCompleted
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    language: CSharp
    name:
      CSharp: ArenaShinseiSelectionUserPanelController
      VB: ArenaShinseiSelectionUserPanelController
    nameWithType:
      CSharp: ArenaShinseiSelectionUserPanelController
      VB: ArenaShinseiSelectionUserPanelController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
      VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ArenaShinseiSelectionUserPanelController
      path: ''
      startLine: 8686
    syntax:
      content:
        CSharp: 'public class ArenaShinseiSelectionUserPanelController : MonoBehaviour'
        VB: >-
          Public Class ArenaShinseiSelectionUserPanelController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
      language: CSharp
      name:
        CSharp: selectionIndicators
        VB: selectionIndicators
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.selectionIndicators
        VB: ArenaShinseiSelectionUserPanelController.selectionIndicators
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: selectionIndicators
        path: ''
        startLine: 8690
      syntax:
        content:
          CSharp: public List<Image> selectionIndicators
          VB: Public selectionIndicators As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      language: CSharp
      name:
        CSharp: selectionIndicatorsDetail
        VB: selectionIndicatorsDetail
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
        VB: ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: selectionIndicatorsDetail
        path: ''
        startLine: 8690
      syntax:
        content:
          CSharp: public List<Image> selectionIndicatorsDetail
          VB: Public selectionIndicatorsDetail As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
      language: CSharp
      name:
        CSharp: selectedIndicator
        VB: selectedIndicator
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.selectedIndicator
        VB: ArenaShinseiSelectionUserPanelController.selectedIndicator
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: selectedIndicator
        path: ''
        startLine: 8691
      syntax:
        content:
          CSharp: public Sprite selectedIndicator
          VB: Public selectedIndicator As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
      language: CSharp
      name:
        CSharp: unselectedIndicator
        VB: unselectedIndicator
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.unselectedIndicator
        VB: ArenaShinseiSelectionUserPanelController.unselectedIndicator
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: unselectedIndicator
        path: ''
        startLine: 8692
      syntax:
        content:
          CSharp: public Sprite unselectedIndicator
          VB: Public unselectedIndicator As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      language: CSharp
      name:
        CSharp: shinseSlotPrefab
        VB: shinseSlotPrefab
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
        VB: ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseSlotPrefab
        path: ''
        startLine: 8693
      syntax:
        content:
          CSharp: public ShinseiSlot shinseSlotPrefab
          VB: Public shinseSlotPrefab As ShinseiSlot
        return:
          type: Timba.SacredTails.Arena.ShinseiSlot
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
      language: CSharp
      name:
        CSharp: partyRow1
        VB: partyRow1
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.partyRow1
        VB: ArenaShinseiSelectionUserPanelController.partyRow1
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: partyRow1
        path: ''
        startLine: 8695
      syntax:
        content:
          CSharp: public Transform partyRow1
          VB: Public partyRow1 As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
      language: CSharp
      name:
        CSharp: partyRow2
        VB: partyRow2
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.partyRow2
        VB: ArenaShinseiSelectionUserPanelController.partyRow2
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: partyRow2
        path: ''
        startLine: 8696
      syntax:
        content:
          CSharp: public Transform partyRow2
          VB: Public partyRow2 As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
      language: CSharp
      name:
        CSharp: nameLabel
        VB: nameLabel
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.nameLabel
        VB: ArenaShinseiSelectionUserPanelController.nameLabel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: nameLabel
        path: ''
        startLine: 8697
      syntax:
        content:
          CSharp: public TMP_Text nameLabel
          VB: Public nameLabel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
      language: CSharp
      name:
        CSharp: textCounter
        VB: textCounter
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.textCounter
        VB: ArenaShinseiSelectionUserPanelController.textCounter
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: textCounter
        path: ''
        startLine: 8698
      syntax:
        content:
          CSharp: public TextMeshProUGUI textCounter
          VB: Public textCounter As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
      language: CSharp
      name:
        CSharp: isEnemyPanel
        VB: isEnemyPanel
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.isEnemyPanel
        VB: ArenaShinseiSelectionUserPanelController.isEnemyPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isEnemyPanel
        path: ''
        startLine: 8701
      syntax:
        content:
          CSharp: public bool isEnemyPanel
          VB: Public isEnemyPanel As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
      language: CSharp
      name:
        CSharp: previewPanel
        VB: previewPanel
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.previewPanel
        VB: ArenaShinseiSelectionUserPanelController.previewPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: previewPanel
        path: ''
        startLine: 8702
      syntax:
        content:
          CSharp: public ShinseiPreviewPanelManager previewPanel
          VB: Public previewPanel As ShinseiPreviewPanelManager
        return:
          type: Global.ShinseiPreviewPanelManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
      language: CSharp
      name:
        CSharp: Init(CombatPlayer)
        VB: Init(CombatPlayer)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
        VB: ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 8708
      syntax:
        content:
          CSharp: public void Init(CombatPlayer combatPlayer)
          VB: Public Sub Init(combatPlayer As CombatPlayer)
        parameters:
        - id: combatPlayer
          type: Global.CombatPlayer
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowNext(Boolean)
        VB: ShowNext(Boolean)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.ShowNext(Boolean)
        VB: ArenaShinseiSelectionUserPanelController.ShowNext(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowNext
        path: ''
        startLine: 8758
      syntax:
        content:
          CSharp: public void ShowNext(bool direction)
          VB: Public Sub ShowNext(direction As Boolean)
        parameters:
        - id: direction
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
      language: CSharp
      name:
        CSharp: Show(Int32)
        VB: Show(Int32)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.Show(Int32)
        VB: ArenaShinseiSelectionUserPanelController.Show(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Show
        path: ''
        startLine: 8763
      syntax:
        content:
          CSharp: public void Show(int direction)
          VB: Public Sub Show(direction As Integer)
        parameters:
        - id: direction
          type: System.Int32
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32,Timba.SacredTails.Arena.ShinseiSlot)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32,Timba.SacredTails.Arena.ShinseiSlot)
      language: CSharp
      name:
        CSharp: SelectShinseiForBattle(Int32, ShinseiSlot)
        VB: SelectShinseiForBattle(Int32, ShinseiSlot)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(Int32, ShinseiSlot)
        VB: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32, Timba.SacredTails.Arena.ShinseiSlot)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32, Timba.SacredTails.Arena.ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SelectShinseiForBattle
        path: ''
        startLine: 8785
      syntax:
        content:
          CSharp: public void SelectShinseiForBattle(int listIndex, ShinseiSlot shinseiSlot)
          VB: Public Sub SelectShinseiForBattle(listIndex As Integer, shinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: shinseiSlot
          type: Timba.SacredTails.Arena.ShinseiSlot
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
      language: CSharp
      name:
        CSharp: MakeSlotsUnclickeable()
        VB: MakeSlotsUnclickeable()
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
        VB: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: MakeSlotsUnclickeable
        path: ''
        startLine: 8845
      syntax:
        content:
          CSharp: public void MakeSlotsUnclickeable()
          VB: Public Sub MakeSlotsUnclickeable
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
      language: CSharp
      name:
        CSharp: GetShinseisSelected()
        VB: GetShinseisSelected()
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
        VB: ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetShinseisSelected
        path: ''
        startLine: 8854
      syntax:
        content:
          CSharp: public List<int> GetShinseisSelected()
          VB: Public Function GetShinseisSelected As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.UserInfo
    commentId: T:Timba.SacredTails.Arena.UserInfo
    language: CSharp
    name:
      CSharp: UserInfo
      VB: UserInfo
    nameWithType:
      CSharp: UserInfo
      VB: UserInfo
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.UserInfo
      VB: Timba.SacredTails.Arena.UserInfo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: UserInfo
      path: ''
      startLine: 9740
    syntax:
      content:
        CSharp: public class UserInfo
        VB: Public Class UserInfo
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.UserInfo.healthbars
      commentId: F:Timba.SacredTails.Arena.UserInfo.healthbars
      language: CSharp
      name:
        CSharp: healthbars
        VB: healthbars
      nameWithType:
        CSharp: UserInfo.healthbars
        VB: UserInfo.healthbars
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.healthbars
        VB: Timba.SacredTails.Arena.UserInfo.healthbars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: healthbars
        path: ''
        startLine: 9743
      syntax:
        content:
          CSharp: public List<ResourceBarValues> healthbars
          VB: Public healthbars As List(Of ResourceBarValues)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.energybars
      commentId: F:Timba.SacredTails.Arena.UserInfo.energybars
      language: CSharp
      name:
        CSharp: energybars
        VB: energybars
      nameWithType:
        CSharp: UserInfo.energybars
        VB: UserInfo.energybars
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.energybars
        VB: Timba.SacredTails.Arena.UserInfo.energybars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: energybars
        path: ''
        startLine: 9744
      syntax:
        content:
          CSharp: public List<ResourceBarValues> energybars
          VB: Public energybars As List(Of ResourceBarValues)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.userIndex
      commentId: F:Timba.SacredTails.Arena.UserInfo.userIndex
      language: CSharp
      name:
        CSharp: userIndex
        VB: userIndex
      nameWithType:
        CSharp: UserInfo.userIndex
        VB: UserInfo.userIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.userIndex
        VB: Timba.SacredTails.Arena.UserInfo.userIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: userIndex
        path: ''
        startLine: 9745
      syntax:
        content:
          CSharp: public int userIndex
          VB: Public userIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.spawnedShinsei
      commentId: F:Timba.SacredTails.Arena.UserInfo.spawnedShinsei
      language: CSharp
      name:
        CSharp: spawnedShinsei
        VB: spawnedShinsei
      nameWithType:
        CSharp: UserInfo.spawnedShinsei
        VB: UserInfo.spawnedShinsei
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.spawnedShinsei
        VB: Timba.SacredTails.Arena.UserInfo.spawnedShinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: spawnedShinsei
        path: ''
        startLine: 9746
      syntax:
        content:
          CSharp: public CharacterSlot spawnedShinsei
          VB: Public spawnedShinsei As CharacterSlot
        return:
          type: Global.CharacterSlot
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.battleShinseis
      commentId: F:Timba.SacredTails.Arena.UserInfo.battleShinseis
      language: CSharp
      name:
        CSharp: battleShinseis
        VB: battleShinseis
      nameWithType:
        CSharp: UserInfo.battleShinseis
        VB: UserInfo.battleShinseis
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.battleShinseis
        VB: Timba.SacredTails.Arena.UserInfo.battleShinseis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleShinseis
        path: ''
        startLine: 9747
      syntax:
        content:
          CSharp: public List<Shinsei> battleShinseis
          VB: Public battleShinseis As List(Of Shinsei)
        return:
          type: System.Collections.Generic.List{Shinsei}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.turnActions
      commentId: F:Timba.SacredTails.Arena.UserInfo.turnActions
      language: CSharp
      name:
        CSharp: turnActions
        VB: turnActions
      nameWithType:
        CSharp: UserInfo.turnActions
        VB: UserInfo.turnActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.turnActions
        VB: Timba.SacredTails.Arena.UserInfo.turnActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnActions
        path: ''
        startLine: 9748
      syntax:
        content:
          CSharp: public List<BattleActionsBase> turnActions
          VB: Public turnActions As List(Of BattleActionsBase)
        return:
          type: System.Collections.Generic.List{BattleActionsBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
      commentId: F:Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
      language: CSharp
      name:
        CSharp: currentShinseiIndex
        VB: currentShinseiIndex
      nameWithType:
        CSharp: UserInfo.currentShinseiIndex
        VB: UserInfo.currentShinseiIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
        VB: Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: currentShinseiIndex
        path: ''
        startLine: 9749
      syntax:
        content:
          CSharp: public int currentShinseiIndex
          VB: Public currentShinseiIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.isLocalPlayer
      commentId: F:Timba.SacredTails.Arena.UserInfo.isLocalPlayer
      language: CSharp
      name:
        CSharp: isLocalPlayer
        VB: isLocalPlayer
      nameWithType:
        CSharp: UserInfo.isLocalPlayer
        VB: UserInfo.isLocalPlayer
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.isLocalPlayer
        VB: Timba.SacredTails.Arena.UserInfo.isLocalPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isLocalPlayer
        path: ''
        startLine: 9750
      syntax:
        content:
          CSharp: public bool isLocalPlayer
          VB: Public isLocalPlayer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ResourceBarValues
    commentId: T:Timba.SacredTails.Arena.ResourceBarValues
    language: CSharp
    name:
      CSharp: ResourceBarValues
      VB: ResourceBarValues
    nameWithType:
      CSharp: ResourceBarValues
      VB: ResourceBarValues
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ResourceBarValues
      VB: Timba.SacredTails.Arena.ResourceBarValues
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ResourceBarValues
      path: ''
      startLine: 9753
    syntax:
      content:
        CSharp: public class ResourceBarValues
        VB: Public Class ResourceBarValues
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ResourceBarValues.currentValue
      commentId: F:Timba.SacredTails.Arena.ResourceBarValues.currentValue
      language: CSharp
      name:
        CSharp: currentValue
        VB: currentValue
      nameWithType:
        CSharp: ResourceBarValues.currentValue
        VB: ResourceBarValues.currentValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ResourceBarValues.currentValue
        VB: Timba.SacredTails.Arena.ResourceBarValues.currentValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: currentValue
        path: ''
        startLine: 9756
      syntax:
        content:
          CSharp: public int currentValue
          VB: Public currentValue As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ResourceBarValues.maxValue
      commentId: F:Timba.SacredTails.Arena.ResourceBarValues.maxValue
      language: CSharp
      name:
        CSharp: maxValue
        VB: maxValue
      nameWithType:
        CSharp: ResourceBarValues.maxValue
        VB: ResourceBarValues.maxValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ResourceBarValues.maxValue
        VB: Timba.SacredTails.Arena.ResourceBarValues.maxValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: maxValue
        path: ''
        startLine: 9757
      syntax:
        content:
          CSharp: public int maxValue
          VB: Public maxValue As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.BattleGameMode
    commentId: T:Timba.SacredTails.Arena.BattleGameMode
    language: CSharp
    name:
      CSharp: BattleGameMode
      VB: BattleGameMode
    nameWithType:
      CSharp: BattleGameMode
      VB: BattleGameMode
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleGameMode
      VB: Timba.SacredTails.Arena.BattleGameMode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleGameMode
      path: ''
      startLine: 11342
    syntax:
      content:
        CSharp: 'public class BattleGameMode : MonoBehaviour'
        VB: >-
          Public Class BattleGameMode

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
      language: CSharp
      name:
        CSharp: gameSceneManager
        VB: gameSceneManager
      nameWithType:
        CSharp: BattleGameMode.gameSceneManager
        VB: BattleGameMode.gameSceneManager
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
        VB: Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: gameSceneManager
        path: ''
        startLine: 11348
      syntax:
        content:
          CSharp: public GameSceneManager gameSceneManager
          VB: Public gameSceneManager As GameSceneManager
        return:
          type: Timba.SacredTails.Arena.GameSceneManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.turnsController
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.turnsController
      language: CSharp
      name:
        CSharp: turnsController
        VB: turnsController
      nameWithType:
        CSharp: BattleGameMode.turnsController
        VB: BattleGameMode.turnsController
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.turnsController
        VB: Timba.SacredTails.Arena.BattleGameMode.turnsController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnsController
        path: ''
        startLine: 11349
      syntax:
        content:
          CSharp: public TurnsController turnsController
          VB: Public turnsController As TurnsController
        return:
          type: Timba.SacredTails.Arena.TurnsController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.delayTime
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.delayTime
      language: CSharp
      name:
        CSharp: delayTime
        VB: delayTime
      nameWithType:
        CSharp: BattleGameMode.delayTime
        VB: BattleGameMode.delayTime
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.delayTime
        VB: Timba.SacredTails.Arena.BattleGameMode.delayTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: delayTime
        path: ''
        startLine: 11352
      syntax:
        content:
          CSharp: public float delayTime
          VB: Public delayTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
      language: CSharp
      name:
        CSharp: matchIdSeed
        VB: matchIdSeed
      nameWithType:
        CSharp: BattleGameMode.matchIdSeed
        VB: BattleGameMode.matchIdSeed
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
        VB: Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: matchIdSeed
        path: ''
        startLine: 11353
      syntax:
        content:
          CSharp: public int matchIdSeed
          VB: Public matchIdSeed As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
      language: CSharp
      name:
        CSharp: isViewingMatch
        VB: isViewingMatch
      nameWithType:
        CSharp: BattleGameMode.isViewingMatch
        VB: BattleGameMode.isViewingMatch
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
        VB: Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isViewingMatch
        path: ''
        startLine: 11354
      syntax:
        content:
          CSharp: public bool isViewingMatch
          VB: Public isViewingMatch As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.currentTerrain
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.currentTerrain
      language: CSharp
      name:
        CSharp: currentTerrain
        VB: currentTerrain
      nameWithType:
        CSharp: BattleGameMode.currentTerrain
        VB: BattleGameMode.currentTerrain
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.currentTerrain
        VB: Timba.SacredTails.Arena.BattleGameMode.currentTerrain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: currentTerrain
        path: ''
        startLine: 11359
      syntax:
        content:
          CSharp: public BattleTerrainBehavioursBase currentTerrain
          VB: Public currentTerrain As BattleTerrainBehavioursBase
        return:
          type: Global.BattleTerrainBehavioursBase
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.playerInfo
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.playerInfo
      language: CSharp
      name:
        CSharp: playerInfo
        VB: playerInfo
      nameWithType:
        CSharp: BattleGameMode.playerInfo
        VB: BattleGameMode.playerInfo
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.playerInfo
        VB: Timba.SacredTails.Arena.BattleGameMode.playerInfo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: playerInfo
        path: ''
        startLine: 11365
      syntax:
        content:
          CSharp: public UserInfo playerInfo
          VB: Public playerInfo As UserInfo
        return:
          type: Timba.SacredTails.Arena.UserInfo
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.localCombat
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.localCombat
      language: CSharp
      name:
        CSharp: localCombat
        VB: localCombat
      nameWithType:
        CSharp: BattleGameMode.localCombat
        VB: BattleGameMode.localCombat
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.localCombat
        VB: Timba.SacredTails.Arena.BattleGameMode.localCombat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: localCombat
        path: ''
        startLine: 11366
      syntax:
        content:
          CSharp: public Combat localCombat
          VB: Public localCombat As Combat
        return:
          type: Global.Combat
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.enemyInfo
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.enemyInfo
      language: CSharp
      name:
        CSharp: enemyInfo
        VB: enemyInfo
      nameWithType:
        CSharp: BattleGameMode.enemyInfo
        VB: BattleGameMode.enemyInfo
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.enemyInfo
        VB: Timba.SacredTails.Arena.BattleGameMode.enemyInfo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: enemyInfo
        path: ''
        startLine: 11371
      syntax:
        content:
          CSharp: public UserInfo enemyInfo
          VB: Public enemyInfo As UserInfo
        return:
          type: Timba.SacredTails.Arena.UserInfo
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
      language: CSharp
      name:
        CSharp: titleEndMatchPanel
        VB: titleEndMatchPanel
      nameWithType:
        CSharp: BattleGameMode.titleEndMatchPanel
        VB: BattleGameMode.titleEndMatchPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
        VB: Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: titleEndMatchPanel
        path: ''
        startLine: 11395
      syntax:
        content:
          CSharp: public TMP_Text titleEndMatchPanel
          VB: Public titleEndMatchPanel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.blackSprites
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.blackSprites
      language: CSharp
      name:
        CSharp: blackSprites
        VB: blackSprites
      nameWithType:
        CSharp: BattleGameMode.blackSprites
        VB: BattleGameMode.blackSprites
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.blackSprites
        VB: Timba.SacredTails.Arena.BattleGameMode.blackSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: blackSprites
        path: ''
        startLine: 11396
      syntax:
        content:
          CSharp: public List<Sprite> blackSprites
          VB: Public blackSprites As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.whiteSprites
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.whiteSprites
      language: CSharp
      name:
        CSharp: whiteSprites
        VB: whiteSprites
      nameWithType:
        CSharp: BattleGameMode.whiteSprites
        VB: BattleGameMode.whiteSprites
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.whiteSprites
        VB: Timba.SacredTails.Arena.BattleGameMode.whiteSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: whiteSprites
        path: ''
        startLine: 11397
      syntax:
        content:
          CSharp: public List<Sprite> whiteSprites
          VB: Public whiteSprites As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.texts
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.texts
      language: CSharp
      name:
        CSharp: texts
        VB: texts
      nameWithType:
        CSharp: BattleGameMode.texts
        VB: BattleGameMode.texts
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.texts
        VB: Timba.SacredTails.Arena.BattleGameMode.texts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: texts
        path: ''
        startLine: 11398
      syntax:
        content:
          CSharp: public List<TextMeshProUGUI> texts
          VB: Public texts As List(Of TextMeshProUGUI)
        return:
          type: System.Collections.Generic.List{TextMeshProUGUI}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.changeColorElements
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.changeColorElements
      language: CSharp
      name:
        CSharp: changeColorElements
        VB: changeColorElements
      nameWithType:
        CSharp: BattleGameMode.changeColorElements
        VB: BattleGameMode.changeColorElements
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.changeColorElements
        VB: Timba.SacredTails.Arena.BattleGameMode.changeColorElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: changeColorElements
        path: ''
        startLine: 11399
      syntax:
        content:
          CSharp: public List<Image> changeColorElements
          VB: Public changeColorElements As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
      language: CSharp
      name:
        CSharp: changeColorInvertElements
        VB: changeColorInvertElements
      nameWithType:
        CSharp: BattleGameMode.changeColorInvertElements
        VB: BattleGameMode.changeColorInvertElements
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
        VB: Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: changeColorInvertElements
        path: ''
        startLine: 11399
      syntax:
        content:
          CSharp: public List<Image> changeColorInvertElements
          VB: Public changeColorInvertElements As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
      language: CSharp
      name:
        CSharp: changeSpriteElements
        VB: changeSpriteElements
      nameWithType:
        CSharp: BattleGameMode.changeSpriteElements
        VB: BattleGameMode.changeSpriteElements
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
        VB: Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: changeSpriteElements
        path: ''
        startLine: 11400
      syntax:
        content:
          CSharp: public List<Image> changeSpriteElements
          VB: Public changeSpriteElements As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.colors
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.colors
      language: CSharp
      name:
        CSharp: colors
        VB: colors
      nameWithType:
        CSharp: BattleGameMode.colors
        VB: BattleGameMode.colors
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.colors
        VB: Timba.SacredTails.Arena.BattleGameMode.colors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: colors
        path: ''
        startLine: 11401
      syntax:
        content:
          CSharp: public List<Color> colors
          VB: Public colors As List(Of Color)
        return:
          type: System.Collections.Generic.List{Color}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
      language: CSharp
      name:
        CSharp: cameraEndBattle
        VB: cameraEndBattle
      nameWithType:
        CSharp: BattleGameMode.cameraEndBattle
        VB: BattleGameMode.cameraEndBattle
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
        VB: Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cameraEndBattle
        path: ''
        startLine: 11411
      syntax:
        content:
          CSharp: public Camera cameraEndBattle
          VB: Public cameraEndBattle As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
      language: CSharp
      name:
        CSharp: OnStartMatch(GetMatchResult)
        VB: OnStartMatch(GetMatchResult)
      nameWithType:
        CSharp: BattleGameMode.OnStartMatch(GetMatchResult)
        VB: BattleGameMode.OnStartMatch(GetMatchResult)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
        VB: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnStartMatch
        path: ''
        startLine: 11428
      syntax:
        content:
          CSharp: public void OnStartMatch(GetMatchResult getMatchResult)
          VB: Public Sub OnStartMatch(getMatchResult As GetMatchResult)
        parameters:
        - id: getMatchResult
          type: Global.GetMatchResult
      overload: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      language: CSharp
      name:
        CSharp: OnStartMatchRoutine(GetMatchResult)
        VB: OnStartMatchRoutine(GetMatchResult)
      nameWithType:
        CSharp: BattleGameMode.OnStartMatchRoutine(GetMatchResult)
        VB: BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
        VB: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnStartMatchRoutine
        path: ''
        startLine: 11433
      syntax:
        content:
          CSharp: public IEnumerator OnStartMatchRoutine(GetMatchResult getMatchResult)
          VB: Public Function OnStartMatchRoutine(getMatchResult As GetMatchResult) As IEnumerator
        parameters:
        - id: getMatchResult
          type: Global.GetMatchResult
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
      language: CSharp
      name:
        CSharp: MakeShinseiPartyUsingPlayfabId(String)
        VB: MakeShinseiPartyUsingPlayfabId(String)
      nameWithType:
        CSharp: BattleGameMode.MakeShinseiPartyUsingPlayfabId(String)
        VB: BattleGameMode.MakeShinseiPartyUsingPlayfabId(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
        VB: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: MakeShinseiPartyUsingPlayfabId
        path: ''
        startLine: 11492
      summary: "\nBring shinsei party from playfab\n"
      example: []
      syntax:
        content:
          CSharp: public void MakeShinseiPartyUsingPlayfabId(string playfabId)
          VB: Public Sub MakeShinseiPartyUsingPlayfabId(playfabId As String)
        parameters:
        - id: playfabId
          type: System.String
          description: Playfab ID
      overload: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
      language: CSharp
      name:
        CSharp: Initialize(MatchData)
        VB: Initialize(MatchData)
      nameWithType:
        CSharp: BattleGameMode.Initialize(MatchData)
        VB: BattleGameMode.Initialize(MatchData)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
        VB: Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Initialize
        path: ''
        startLine: 11511
      syntax:
        content:
          CSharp: public void Initialize(MatchData matchData)
          VB: Public Sub Initialize(matchData As MatchData)
        parameters:
        - id: matchData
          type: Global.MatchData
      overload: Timba.SacredTails.Arena.BattleGameMode.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean,System.Collections.Generic.List{System.Int32})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean,System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: ShinseiSelected(Boolean, List<Int32>)
        VB: ShinseiSelected(Boolean, List(Of Int32))
      nameWithType:
        CSharp: BattleGameMode.ShinseiSelected(Boolean, List<Int32>)
        VB: BattleGameMode.ShinseiSelected(Boolean, List(Of Int32))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean, System.Collections.Generic.List<System.Int32>)
        VB: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean, System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShinseiSelected
        path: ''
        startLine: 11538
      syntax:
        content:
          CSharp: public void ShinseiSelected(bool endTime, List<int> shinseisPlayer)
          VB: Public Sub ShinseiSelected(endTime As Boolean, shinseisPlayer As List(Of Integer))
        parameters:
        - id: endTime
          type: System.Boolean
        - id: shinseisPlayer
          type: System.Collections.Generic.List{System.Int32}
      overload: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnDisable
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: BattleGameMode.OnDisable()
        VB: BattleGameMode.OnDisable()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnDisable()
        VB: Timba.SacredTails.Arena.BattleGameMode.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnDisable
        path: ''
        startLine: 11566
      syntax:
        content:
          CSharp: public void OnDisable()
          VB: Public Sub OnDisable
      overload: Timba.SacredTails.Arena.BattleGameMode.OnDisable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
      language: CSharp
      name:
        CSharp: OnApplicationQuit()
        VB: OnApplicationQuit()
      nameWithType:
        CSharp: BattleGameMode.OnApplicationQuit()
        VB: BattleGameMode.OnApplicationQuit()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit()
        VB: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnApplicationQuit
        path: ''
        startLine: 11570
      syntax:
        content:
          CSharp: public void OnApplicationQuit()
          VB: Public Sub OnApplicationQuit
      overload: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
      language: CSharp
      name:
        CSharp: CancelSelectShinsei()
        VB: CancelSelectShinsei()
      nameWithType:
        CSharp: BattleGameMode.CancelSelectShinsei()
        VB: BattleGameMode.CancelSelectShinsei()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei()
        VB: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CancelSelectShinsei
        path: ''
        startLine: 11575
      syntax:
        content:
          CSharp: public void CancelSelectShinsei()
          VB: Public Sub CancelSelectShinsei
      overload: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
      language: CSharp
      name:
        CSharp: WaitForOpponentToSelectViewMatch()
        VB: WaitForOpponentToSelectViewMatch()
      nameWithType:
        CSharp: BattleGameMode.WaitForOpponentToSelectViewMatch()
        VB: BattleGameMode.WaitForOpponentToSelectViewMatch()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch()
        VB: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitForOpponentToSelectViewMatch
        path: ''
        startLine: 11586
      syntax:
        content:
          CSharp: public void WaitForOpponentToSelectViewMatch()
          VB: Public Sub WaitForOpponentToSelectViewMatch
      overload: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
      language: CSharp
      name:
        CSharp: WaitForOpponentToSelect()
        VB: WaitForOpponentToSelect()
      nameWithType:
        CSharp: BattleGameMode.WaitForOpponentToSelect()
        VB: BattleGameMode.WaitForOpponentToSelect()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect()
        VB: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitForOpponentToSelect
        path: ''
        startLine: 11593
      syntax:
        content:
          CSharp: public IEnumerator WaitForOpponentToSelect()
          VB: Public Function WaitForOpponentToSelect As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.InitBattle
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.InitBattle
      language: CSharp
      name:
        CSharp: InitBattle()
        VB: InitBattle()
      nameWithType:
        CSharp: BattleGameMode.InitBattle()
        VB: BattleGameMode.InitBattle()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.InitBattle()
        VB: Timba.SacredTails.Arena.BattleGameMode.InitBattle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitBattle
        path: ''
        startLine: 11645
      syntax:
        content:
          CSharp: public void InitBattle()
          VB: Public Sub InitBattle
      overload: Timba.SacredTails.Arena.BattleGameMode.InitBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
      language: CSharp
      name:
        CSharp: OpenChangeShinseiPanel()
        VB: OpenChangeShinseiPanel()
      nameWithType:
        CSharp: BattleGameMode.OpenChangeShinseiPanel()
        VB: BattleGameMode.OpenChangeShinseiPanel()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel()
        VB: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OpenChangeShinseiPanel
        path: ''
        startLine: 11739
      syntax:
        content:
          CSharp: public void OpenChangeShinseiPanel()
          VB: Public Sub OpenChangeShinseiPanel
      overload: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(Timba.SacredTails.Arena.UserInfo@)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(Timba.SacredTails.Arena.UserInfo@)
      language: CSharp
      name:
        CSharp: UpdateCurrentShinsei(ref UserInfo)
        VB: UpdateCurrentShinsei(ByRef UserInfo)
      nameWithType:
        CSharp: BattleGameMode.UpdateCurrentShinsei(ref UserInfo)
        VB: BattleGameMode.UpdateCurrentShinsei(ByRef UserInfo)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(ref Timba.SacredTails.Arena.UserInfo)
        VB: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(ByRef Timba.SacredTails.Arena.UserInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateCurrentShinsei
        path: ''
        startLine: 11792
      syntax:
        content:
          CSharp: public void UpdateCurrentShinsei(ref UserInfo userInfo)
          VB: Public Sub UpdateCurrentShinsei(ByRef userInfo As UserInfo)
        parameters:
        - id: userInfo
          type: Timba.SacredTails.Arena.UserInfo
      overload: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action,System.String,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: ShowPopupEndMatch(Action, String, Boolean)
        VB: ShowPopupEndMatch(Action, String, Boolean)
      nameWithType:
        CSharp: BattleGameMode.ShowPopupEndMatch(Action, String, Boolean)
        VB: BattleGameMode.ShowPopupEndMatch(Action, String, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action, System.String, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowPopupEndMatch
        path: ''
        startLine: 11826
      syntax:
        content:
          CSharp: public void ShowPopupEndMatch(Action callback, string message, bool localPlayerWon)
          VB: Public Sub ShowPopupEndMatch(callback As Action, message As String, localPlayerWon As Boolean)
        parameters:
        - id: callback
          type: Global.Action
        - id: message
          type: System.String
        - id: localPlayerWon
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
      language: CSharp
      name:
        CSharp: hasShowEndResult
        VB: hasShowEndResult
      nameWithType:
        CSharp: BattleGameMode.hasShowEndResult
        VB: BattleGameMode.hasShowEndResult
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
        VB: Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: hasShowEndResult
        path: ''
        startLine: 11845
      syntax:
        content:
          CSharp: public bool hasShowEndResult
          VB: Public hasShowEndResult As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean,Action)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean,Action)
      language: CSharp
      name:
        CSharp: ShowEndResultPanel(Boolean, Action)
        VB: ShowEndResultPanel(Boolean, Action)
      nameWithType:
        CSharp: BattleGameMode.ShowEndResultPanel(Boolean, Action)
        VB: BattleGameMode.ShowEndResultPanel(Boolean, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean, Action)
        VB: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowEndResultPanel
        path: ''
        startLine: 11846
      syntax:
        content:
          CSharp: public void ShowEndResultPanel(bool localPlayerWon, Action onEndAnimations = null)
          VB: Public Sub ShowEndResultPanel(localPlayerWon As Boolean, onEndAnimations As Action = Nothing)
        parameters:
        - id: localPlayerWon
          type: System.Boolean
        - id: onEndAnimations
          type: Global.Action
      overload: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean,Action)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean,Action)
      language: CSharp
      name:
        CSharp: SpawnWinnerShisneis(Boolean, Action)
        VB: SpawnWinnerShisneis(Boolean, Action)
      nameWithType:
        CSharp: BattleGameMode.SpawnWinnerShisneis(Boolean, Action)
        VB: BattleGameMode.SpawnWinnerShisneis(Boolean, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean, Action)
        VB: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SpawnWinnerShisneis
        path: ''
        startLine: 11867
      syntax:
        content:
          CSharp: public void SpawnWinnerShisneis(bool localPlayerWon, Action onEndAnimations = null)
          VB: Public Sub SpawnWinnerShisneis(localPlayerWon As Boolean, onEndAnimations As Action = Nothing)
        parameters:
        - id: localPlayerWon
          type: System.Boolean
        - id: onEndAnimations
          type: Global.Action
      overload: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
      language: CSharp
      name:
        CSharp: GoBackToLobbyPopup()
        VB: GoBackToLobbyPopup()
      nameWithType:
        CSharp: BattleGameMode.GoBackToLobbyPopup()
        VB: BattleGameMode.GoBackToLobbyPopup()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup()
        VB: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GoBackToLobbyPopup
        path: ''
        startLine: 11922
      syntax:
        content:
          CSharp: public void GoBackToLobbyPopup()
          VB: Public Sub GoBackToLobbyPopup
      overload: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
      language: CSharp
      name:
        CSharp: GoBackToLobby()
        VB: GoBackToLobby()
      nameWithType:
        CSharp: BattleGameMode.GoBackToLobby()
        VB: BattleGameMode.GoBackToLobby()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby()
        VB: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GoBackToLobby
        path: ''
        startLine: 11935
      syntax:
        content:
          CSharp: public void GoBackToLobby()
          VB: Public Sub GoBackToLobby
      overload: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues})
      language: CSharp
      name:
        CSharp: EndMatchCheck(List<ResourceBarValues>)
        VB: EndMatchCheck(List(Of ResourceBarValues))
      nameWithType:
        CSharp: BattleGameMode.EndMatchCheck(List<ResourceBarValues>)
        VB: BattleGameMode.EndMatchCheck(List(Of ResourceBarValues))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List<Timba.SacredTails.Arena.ResourceBarValues>)
        VB: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List(Of Timba.SacredTails.Arena.ResourceBarValues))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: EndMatchCheck
        path: ''
        startLine: 11943
      syntax:
        content:
          CSharp: public bool EndMatchCheck(List<ResourceBarValues> healthBars)
          VB: Public Function EndMatchCheck(healthBars As List(Of ResourceBarValues)) As Boolean
        parameters:
        - id: healthBars
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: AddTextToLog(String, Dictionary<String, String>)
        VB: AddTextToLog(String, Dictionary(Of String, String))
      nameWithType:
        CSharp: BattleGameMode.AddTextToLog(String, Dictionary<String, String>)
        VB: BattleGameMode.AddTextToLog(String, Dictionary(Of String, String))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
        VB: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: AddTextToLog
        path: ''
        startLine: 11969
      syntax:
        content:
          CSharp: public void AddTextToLog(string text, Dictionary<string, string> customCodes = null)
          VB: Public Sub AddTextToLog(text As String, customCodes As Dictionary(Of String, String) = Nothing)
        parameters:
        - id: text
          type: System.String
        - id: customCodes
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action{Combat})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action{Combat})
      language: CSharp
      name:
        CSharp: GetOwnCombatData(Action<Combat>)
        VB: GetOwnCombatData(Action(Of Combat))
      nameWithType:
        CSharp: BattleGameMode.GetOwnCombatData(Action<Combat>)
        VB: BattleGameMode.GetOwnCombatData(Action(Of Combat))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action<Combat>)
        VB: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action(Of Combat))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetOwnCombatData
        path: ''
        startLine: 11976
      syntax:
        content:
          CSharp: public void GetOwnCombatData(Action<Combat> onRecieveData)
          VB: Public Sub GetOwnCombatData(onRecieveData As Action(Of Combat))
        parameters:
        - id: onRecieveData
          type: Global.Action{Combat}
      overload: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
      language: CSharp
      name:
        CSharp: GetCurrentShinseiEnergy()
        VB: GetCurrentShinseiEnergy()
      nameWithType:
        CSharp: BattleGameMode.GetCurrentShinseiEnergy()
        VB: BattleGameMode.GetCurrentShinseiEnergy()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy()
        VB: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetCurrentShinseiEnergy
        path: ''
        startLine: 12001
      syntax:
        content:
          CSharp: public int GetCurrentShinseiEnergy()
          VB: Public Function GetCurrentShinseiEnergy As Integer
        return:
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.BattleViewerController
    commentId: T:Timba.SacredTails.Arena.BattleViewerController
    language: CSharp
    name:
      CSharp: BattleViewerController
      VB: BattleViewerController
    nameWithType:
      CSharp: BattleViewerController
      VB: BattleViewerController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleViewerController
      VB: Timba.SacredTails.Arena.BattleViewerController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleViewerController
      path: ''
      startLine: 12023
    syntax:
      content:
        CSharp: 'public class BattleViewerController : MonoBehaviour'
        VB: >-
          Public Class BattleViewerController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleViewerController.battleGameMode
      commentId: F:Timba.SacredTails.Arena.BattleViewerController.battleGameMode
      language: CSharp
      name:
        CSharp: battleGameMode
        VB: battleGameMode
      nameWithType:
        CSharp: BattleViewerController.battleGameMode
        VB: BattleViewerController.battleGameMode
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleViewerController.battleGameMode
        VB: Timba.SacredTails.Arena.BattleViewerController.battleGameMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleGameMode
        path: ''
        startLine: 12025
      syntax:
        content:
          CSharp: public BattleGameMode battleGameMode
          VB: Public battleGameMode As BattleGameMode
        return:
          type: Timba.SacredTails.Arena.BattleGameMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: Initialize(String, Boolean)
        VB: Initialize(String, Boolean)
      nameWithType:
        CSharp: BattleViewerController.Initialize(String, Boolean)
        VB: BattleViewerController.Initialize(String, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Initialize
        path: ''
        startLine: 12027
      syntax:
        content:
          CSharp: public void Initialize(string matchId, bool isViewing)
          VB: Public Sub Initialize(matchId As String, isViewing As Boolean)
        parameters:
        - id: matchId
          type: System.String
        - id: isViewing
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleViewerController.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.TurnsController
    commentId: T:Timba.SacredTails.Arena.TurnsController
    language: CSharp
    name:
      CSharp: TurnsController
      VB: TurnsController
    nameWithType:
      CSharp: TurnsController
      VB: TurnsController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.TurnsController
      VB: Timba.SacredTails.Arena.TurnsController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: TurnsController
      path: ''
      startLine: 12072
    syntax:
      content:
        CSharp: 'public class TurnsController : MonoBehaviour'
        VB: >-
          Public Class TurnsController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
      commentId: F:Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
      language: CSharp
      name:
        CSharp: turnActionsDatabase
        VB: turnActionsDatabase
      nameWithType:
        CSharp: TurnsController.turnActionsDatabase
        VB: TurnsController.turnActionsDatabase
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
        VB: Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnActionsDatabase
        path: ''
        startLine: 12087
      syntax:
        content:
          CSharp: public List<BattleActionsBase> turnActionsDatabase
          VB: Public turnActionsDatabase As List(Of BattleActionsBase)
        return:
          type: System.Collections.Generic.List{BattleActionsBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
      commentId: F:Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
      language: CSharp
      name:
        CSharp: turnActionsDatabaseDictionary
        VB: turnActionsDatabaseDictionary
      nameWithType:
        CSharp: TurnsController.turnActionsDatabaseDictionary
        VB: TurnsController.turnActionsDatabaseDictionary
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
        VB: Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnActionsDatabaseDictionary
        path: ''
        startLine: 12089
      syntax:
        content:
          CSharp: public Dictionary<ActionTypeEnum, BattleActionsBase> turnActionsDatabaseDictionary
          VB: Public turnActionsDatabaseDictionary As Dictionary(Of ActionTypeEnum, BattleActionsBase)
        return:
          type: System.Collections.Generic.Dictionary{ActionTypeEnum,BattleActionsBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.alteredStates
      commentId: F:Timba.SacredTails.Arena.TurnsController.alteredStates
      language: CSharp
      name:
        CSharp: alteredStates
        VB: alteredStates
      nameWithType:
        CSharp: TurnsController.alteredStates
        VB: TurnsController.alteredStates
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.alteredStates
        VB: Timba.SacredTails.Arena.TurnsController.alteredStates
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: alteredStates
        path: ''
        startLine: 12091
      syntax:
        content:
          CSharp: public List<BattleAlteredStateBase> alteredStates
          VB: Public alteredStates As List(Of BattleAlteredStateBase)
        return:
          type: System.Collections.Generic.List{BattleAlteredStateBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.localPlayer
      commentId: F:Timba.SacredTails.Arena.TurnsController.localPlayer
      language: CSharp
      name:
        CSharp: localPlayer
        VB: localPlayer
      nameWithType:
        CSharp: TurnsController.localPlayer
        VB: TurnsController.localPlayer
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.localPlayer
        VB: Timba.SacredTails.Arena.TurnsController.localPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: localPlayer
        path: ''
        startLine: 12095
      syntax:
        content:
          CSharp: public CombatPlayer localPlayer
          VB: Public localPlayer As CombatPlayer
        return:
          type: Global.CombatPlayer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.vfxsActionType
      commentId: F:Timba.SacredTails.Arena.TurnsController.vfxsActionType
      language: CSharp
      name:
        CSharp: vfxsActionType
        VB: vfxsActionType
      nameWithType:
        CSharp: TurnsController.vfxsActionType
        VB: TurnsController.vfxsActionType
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.vfxsActionType
        VB: Timba.SacredTails.Arena.TurnsController.vfxsActionType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxsActionType
        path: ''
        startLine: 12096
      syntax:
        content:
          CSharp: public List<VFXTypeData> vfxsActionType
          VB: Public vfxsActionType As List(Of VFXTypeData)
        return:
          type: System.Collections.Generic.List{VFXTypeData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.isViewingMatch
      commentId: F:Timba.SacredTails.Arena.TurnsController.isViewingMatch
      language: CSharp
      name:
        CSharp: isViewingMatch
        VB: isViewingMatch
      nameWithType:
        CSharp: TurnsController.isViewingMatch
        VB: TurnsController.isViewingMatch
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.isViewingMatch
        VB: Timba.SacredTails.Arena.TurnsController.isViewingMatch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isViewingMatch
        path: ''
        startLine: 12097
      syntax:
        content:
          CSharp: public bool isViewingMatch
          VB: Public isViewingMatch As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.matchEnded
      commentId: F:Timba.SacredTails.Arena.TurnsController.matchEnded
      language: CSharp
      name:
        CSharp: matchEnded
        VB: matchEnded
      nameWithType:
        CSharp: TurnsController.matchEnded
        VB: TurnsController.matchEnded
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.matchEnded
        VB: Timba.SacredTails.Arena.TurnsController.matchEnded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: matchEnded
        path: ''
        startLine: 12111
      syntax:
        content:
          CSharp: public bool matchEnded
          VB: Public matchEnded As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
      commentId: F:Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
      language: CSharp
      name:
        CSharp: battlePlayerCurrentActions
        VB: battlePlayerCurrentActions
      nameWithType:
        CSharp: TurnsController.battlePlayerCurrentActions
        VB: TurnsController.battlePlayerCurrentActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
        VB: Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battlePlayerCurrentActions
        path: ''
        startLine: 12113
      syntax:
        content:
          CSharp: public List<BattleActionData> battlePlayerCurrentActions
          VB: Public battlePlayerCurrentActions As List(Of BattleActionData)
        return:
          type: System.Collections.Generic.List{BattleActionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
      commentId: F:Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
      language: CSharp
      name:
        CSharp: battleEnemyCurrentActions
        VB: battleEnemyCurrentActions
      nameWithType:
        CSharp: TurnsController.battleEnemyCurrentActions
        VB: TurnsController.battleEnemyCurrentActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
        VB: Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleEnemyCurrentActions
        path: ''
        startLine: 12114
      syntax:
        content:
          CSharp: public List<BattleActionData> battleEnemyCurrentActions
          VB: Public battleEnemyCurrentActions As List(Of BattleActionData)
        return:
          type: System.Collections.Generic.List{BattleActionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.uiCards
      commentId: F:Timba.SacredTails.Arena.TurnsController.uiCards
      language: CSharp
      name:
        CSharp: uiCards
        VB: uiCards
      nameWithType:
        CSharp: TurnsController.uiCards
        VB: TurnsController.uiCards
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.uiCards
        VB: Timba.SacredTails.Arena.TurnsController.uiCards
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: uiCards
        path: ''
        startLine: 12122
      syntax:
        content:
          CSharp: public List<CardUI> uiCards
          VB: Public uiCards As List(Of CardUI)
        return:
          type: System.Collections.Generic.List{CardUI}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.camManager
      commentId: F:Timba.SacredTails.Arena.TurnsController.camManager
      language: CSharp
      name:
        CSharp: camManager
        VB: camManager
      nameWithType:
        CSharp: TurnsController.camManager
        VB: TurnsController.camManager
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.camManager
        VB: Timba.SacredTails.Arena.TurnsController.camManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: camManager
        path: ''
        startLine: 12128
      syntax:
        content:
          CSharp: public CameraPlaneController camManager
          VB: Public camManager As CameraPlaneController
        return:
          type: Global.CameraPlaneController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.vfxPositions
      commentId: F:Timba.SacredTails.Arena.TurnsController.vfxPositions
      language: CSharp
      name:
        CSharp: vfxPositions
        VB: vfxPositions
      nameWithType:
        CSharp: TurnsController.vfxPositions
        VB: TurnsController.vfxPositions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.vfxPositions
        VB: Timba.SacredTails.Arena.TurnsController.vfxPositions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxPositions
        path: ''
        startLine: 12135
      syntax:
        content:
          CSharp: public List<VFXPositionData> vfxPositions
          VB: Public vfxPositions As List(Of VFXPositionData)
        return:
          type: System.Collections.Generic.List{VFXPositionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
      commentId: F:Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
      language: CSharp
      name:
        CSharp: vfxPositionsDictionary
        VB: vfxPositionsDictionary
      nameWithType:
        CSharp: TurnsController.vfxPositionsDictionary
        VB: TurnsController.vfxPositionsDictionary
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
        VB: Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxPositionsDictionary
        path: ''
        startLine: 12136
      syntax:
        content:
          CSharp: public Dictionary<VFXPositionEnum, Transform> vfxPositionsDictionary
          VB: Public vfxPositionsDictionary As Dictionary(Of VFXPositionEnum, Transform)
        return:
          type: System.Collections.Generic.Dictionary{VFXPositionEnum,Transform}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.isPlayerSleep
      commentId: F:Timba.SacredTails.Arena.TurnsController.isPlayerSleep
      language: CSharp
      name:
        CSharp: isPlayerSleep
        VB: isPlayerSleep
      nameWithType:
        CSharp: TurnsController.isPlayerSleep
        VB: TurnsController.isPlayerSleep
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.isPlayerSleep
        VB: Timba.SacredTails.Arena.TurnsController.isPlayerSleep
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isPlayerSleep
        path: ''
        startLine: 12138
      syntax:
        content:
          CSharp: public bool isPlayerSleep
          VB: Public isPlayerSleep As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.isEnemySleep
      commentId: F:Timba.SacredTails.Arena.TurnsController.isEnemySleep
      language: CSharp
      name:
        CSharp: isEnemySleep
        VB: isEnemySleep
      nameWithType:
        CSharp: TurnsController.isEnemySleep
        VB: TurnsController.isEnemySleep
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.isEnemySleep
        VB: Timba.SacredTails.Arena.TurnsController.isEnemySleep
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isEnemySleep
        path: ''
        startLine: 12139
      syntax:
        content:
          CSharp: public bool isEnemySleep
          VB: Public isEnemySleep As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
      commentId: F:Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
      language: CSharp
      name:
        CSharp: testMatchSendTurnAutomatically
        VB: testMatchSendTurnAutomatically
      nameWithType:
        CSharp: TurnsController.testMatchSendTurnAutomatically
        VB: TurnsController.testMatchSendTurnAutomatically
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
        VB: Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: testMatchSendTurnAutomatically
        path: ''
        startLine: 12144
      syntax:
        content:
          CSharp: public bool testMatchSendTurnAutomatically
          VB: Public testMatchSendTurnAutomatically As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.cardToTest
      commentId: F:Timba.SacredTails.Arena.TurnsController.cardToTest
      language: CSharp
      name:
        CSharp: cardToTest
        VB: cardToTest
      nameWithType:
        CSharp: TurnsController.cardToTest
        VB: TurnsController.cardToTest
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.cardToTest
        VB: Timba.SacredTails.Arena.TurnsController.cardToTest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardToTest
        path: ''
        startLine: 12145
      syntax:
        content:
          CSharp: public int cardToTest
          VB: Public cardToTest As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode,System.Boolean)
      language: CSharp
      name:
        CSharp: Init(BattleGameMode, Boolean)
        VB: Init(BattleGameMode, Boolean)
      nameWithType:
        CSharp: TurnsController.Init(BattleGameMode, Boolean)
        VB: TurnsController.Init(BattleGameMode, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode, System.Boolean)
        VB: Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 12166
      summary: "\nInitialize turns controller\n"
      example: []
      syntax:
        content:
          CSharp: public void Init(BattleGameMode battleGameMode, bool isViewing = false)
          VB: Public Sub Init(battleGameMode As BattleGameMode, isViewing As Boolean = False)
        parameters:
        - id: battleGameMode
          type: Timba.SacredTails.Arena.BattleGameMode
          description: ''
        - id: isViewing
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.InitCountDown
      commentId: M:Timba.SacredTails.Arena.TurnsController.InitCountDown
      language: CSharp
      name:
        CSharp: InitCountDown()
        VB: InitCountDown()
      nameWithType:
        CSharp: TurnsController.InitCountDown()
        VB: TurnsController.InitCountDown()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.InitCountDown()
        VB: Timba.SacredTails.Arena.TurnsController.InitCountDown()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitCountDown
        path: ''
        startLine: 12195
      summary: "\nInit turn countdown\n"
      example: []
      syntax:
        content:
          CSharp: public void InitCountDown()
          VB: Public Sub InitCountDown
      overload: Timba.SacredTails.Arena.TurnsController.InitCountDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.InitNewTurn
      commentId: M:Timba.SacredTails.Arena.TurnsController.InitNewTurn
      language: CSharp
      name:
        CSharp: InitNewTurn()
        VB: InitNewTurn()
      nameWithType:
        CSharp: TurnsController.InitNewTurn()
        VB: TurnsController.InitNewTurn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.InitNewTurn()
        VB: Timba.SacredTails.Arena.TurnsController.InitNewTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitNewTurn
        path: ''
        startLine: 12212
      summary: "\nCamera change on turn change.\n"
      example: []
      syntax:
        content:
          CSharp: public void InitNewTurn()
          VB: Public Sub InitNewTurn
      overload: Timba.SacredTails.Arena.TurnsController.InitNewTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
      commentId: M:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
      language: CSharp
      name:
        CSharp: CurrentActionsHasSkipTurnForLocalPlayer()
        VB: CurrentActionsHasSkipTurnForLocalPlayer()
      nameWithType:
        CSharp: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
        VB: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
        VB: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CurrentActionsHasSkipTurnForLocalPlayer
        path: ''
        startLine: 12275
      syntax:
        content:
          CSharp: public bool CurrentActionsHasSkipTurnForLocalPlayer()
          VB: Public Function CurrentActionsHasSkipTurnForLocalPlayer As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
      commentId: M:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
      language: CSharp
      name:
        CSharp: CurrentActionsHasSkipTurnForEnemy()
        VB: CurrentActionsHasSkipTurnForEnemy()
      nameWithType:
        CSharp: TurnsController.CurrentActionsHasSkipTurnForEnemy()
        VB: TurnsController.CurrentActionsHasSkipTurnForEnemy()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy()
        VB: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CurrentActionsHasSkipTurnForEnemy
        path: ''
        startLine: 12286
      syntax:
        content:
          CSharp: public bool CurrentActionsHasSkipTurnForEnemy()
          VB: Public Function CurrentActionsHasSkipTurnForEnemy As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ShowPopupStrike(System.Int32)
      language: CSharp
      name:
        CSharp: ShowPopupStrike(Int32)
        VB: ShowPopupStrike(Int32)
      nameWithType:
        CSharp: TurnsController.ShowPopupStrike(Int32)
        VB: TurnsController.ShowPopupStrike(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowPopupStrike
        path: ''
        startLine: 12338
      syntax:
        content:
          CSharp: public void ShowPopupStrike(int strikeCount)
          VB: Public Sub ShowPopupStrike(strikeCount As Integer)
        parameters:
        - id: strikeCount
          type: System.Int32
      overload: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
      language: CSharp
      name:
        CSharp: BtnSendTurn(Int32)
        VB: BtnSendTurn(Int32)
      nameWithType:
        CSharp: TurnsController.BtnSendTurn(Int32)
        VB: TurnsController.BtnSendTurn(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: BtnSendTurn
        path: ''
        startLine: 12371
      syntax:
        content:
          CSharp: public void BtnSendTurn(int indexCard)
          VB: Public Sub BtnSendTurn(indexCard As Integer)
        parameters:
        - id: indexCard
          type: System.Int32
      overload: Timba.SacredTails.Arena.TurnsController.BtnSendTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
      language: CSharp
      name:
        CSharp: SendMyTurn(Int32)
        VB: SendMyTurn(Int32)
      nameWithType:
        CSharp: TurnsController.SendMyTurn(Int32)
        VB: TurnsController.SendMyTurn(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SendMyTurn
        path: ''
        startLine: 12381
      summary: "\nPrepare my turn with the card selected, execute it in local and send it to the other player\n"
      example: []
      syntax:
        content:
          CSharp: public void SendMyTurn(int indexCard)
          VB: Public Sub SendMyTurn(indexCard As Integer)
        parameters:
        - id: indexCard
          type: System.Int32
          description: Index of card
      overload: Timba.SacredTails.Arena.TurnsController.SendMyTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.TestSendTurn
      commentId: M:Timba.SacredTails.Arena.TurnsController.TestSendTurn
      language: CSharp
      name:
        CSharp: TestSendTurn()
        VB: TestSendTurn()
      nameWithType:
        CSharp: TurnsController.TestSendTurn()
        VB: TurnsController.TestSendTurn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.TestSendTurn()
        VB: Timba.SacredTails.Arena.TurnsController.TestSendTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: TestSendTurn
        path: ''
        startLine: 12410
      syntax:
        content:
          CSharp: public void TestSendTurn()
          VB: Public Sub TestSendTurn
      overload: Timba.SacredTails.Arena.TurnsController.TestSendTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SendTurnRequest(Int32, Int32)
        VB: SendTurnRequest(Int32, Int32)
      nameWithType:
        CSharp: TurnsController.SendTurnRequest(Int32, Int32)
        VB: TurnsController.SendTurnRequest(Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SendTurnRequest
        path: ''
        startLine: 12428
      syntax:
        content:
          CSharp: public void SendTurnRequest(int indexCard, int timesTryingToSendTurn = 0)
          VB: Public Sub SendTurnRequest(indexCard As Integer, timesTryingToSendTurn As Integer = 0)
        parameters:
        - id: indexCard
          type: System.Int32
        - id: timesTryingToSendTurn
          type: System.Int32
      overload: Timba.SacredTails.Arena.TurnsController.SendTurnRequest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(ActionCard)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(ActionCard)
      language: CSharp
      name:
        CSharp: ForbiddenActionCheck(ActionCard)
        VB: ForbiddenActionCheck(ActionCard)
      nameWithType:
        CSharp: TurnsController.ForbiddenActionCheck(ActionCard)
        VB: TurnsController.ForbiddenActionCheck(ActionCard)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(ActionCard)
        VB: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(ActionCard)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ForbiddenActionCheck
        path: ''
        startLine: 12471
      syntax:
        content:
          CSharp: public bool ForbiddenActionCheck(ActionCard actionCard)
          VB: Public Function ForbiddenActionCheck(actionCard As ActionCard) As Boolean
        parameters:
        - id: actionCard
          type: Global.ActionCard
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(ActionCard)
      commentId: M:Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(ActionCard)
      language: CSharp
      name:
        CSharp: SetForbiddenActions(ActionCard)
        VB: SetForbiddenActions(ActionCard)
      nameWithType:
        CSharp: TurnsController.SetForbiddenActions(ActionCard)
        VB: TurnsController.SetForbiddenActions(ActionCard)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(ActionCard)
        VB: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(ActionCard)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetForbiddenActions
        path: ''
        startLine: 12480
      syntax:
        content:
          CSharp: public void SetForbiddenActions(ActionCard actionCard)
          VB: Public Sub SetForbiddenActions(actionCard As ActionCard)
        parameters:
        - id: actionCard
          type: Global.ActionCard
      overload: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
      commentId: M:Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
      language: CSharp
      name:
        CSharp: ReduceForbiddenActionsDuration()
        VB: ReduceForbiddenActionsDuration()
      nameWithType:
        CSharp: TurnsController.ReduceForbiddenActionsDuration()
        VB: TurnsController.ReduceForbiddenActionsDuration()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration()
        VB: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ReduceForbiddenActionsDuration
        path: ''
        startLine: 12493
      syntax:
        content:
          CSharp: public void ReduceForbiddenActionsDuration()
          VB: Public Sub ReduceForbiddenActionsDuration
      overload: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(System.Collections.Generic.List{BattleActionData}@,System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(System.Collections.Generic.List{BattleActionData}@,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: CalculateIncomingActions(ref List<BattleActionData>, Int32, Int32)
        VB: CalculateIncomingActions(ByRef List(Of BattleActionData), Int32, Int32)
      nameWithType:
        CSharp: TurnsController.CalculateIncomingActions(ref List<BattleActionData>, Int32, Int32)
        VB: TurnsController.CalculateIncomingActions(ByRef List(Of BattleActionData), Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(ref System.Collections.Generic.List<BattleActionData>, System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(ByRef System.Collections.Generic.List(Of BattleActionData), System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CalculateIncomingActions
        path: ''
        startLine: 12510
      summary: "\nExecute the action of the target player on this turn\n"
      example: []
      syntax:
        content:
          CSharp: public void CalculateIncomingActions(ref List<BattleActionData> currentActionsData, int playerIndex, int ppCost)
          VB: Public Sub CalculateIncomingActions(ByRef currentActionsData As List(Of BattleActionData), playerIndex As Integer, ppCost As Integer)
        parameters:
        - id: currentActionsData
          type: System.Collections.Generic.List{BattleActionData}
          description: Actions executed this turn
        - id: playerIndex
          type: System.Int32
          description: Index of user
        - id: ppCost
          type: System.Int32
          description: ppCost of card
      overload: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean,Timba.SacredTails.Arena.UserInfo)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean,Timba.SacredTails.Arena.UserInfo)
      language: CSharp
      name:
        CSharp: CheckEndMatch(Boolean, UserInfo)
        VB: CheckEndMatch(Boolean, UserInfo)
      nameWithType:
        CSharp: TurnsController.CheckEndMatch(Boolean, UserInfo)
        VB: TurnsController.CheckEndMatch(Boolean, UserInfo)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean, Timba.SacredTails.Arena.UserInfo)
        VB: Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean, Timba.SacredTails.Arena.UserInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckEndMatch
        path: ''
        startLine: 12624
      syntax:
        content:
          CSharp: public void CheckEndMatch(bool isLocalPlayer, UserInfo otherPlayer)
          VB: Public Sub CheckEndMatch(isLocalPlayer As Boolean, otherPlayer As UserInfo)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: otherPlayer
          type: Timba.SacredTails.Arena.UserInfo
      overload: Timba.SacredTails.Arena.TurnsController.CheckEndMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: CheckDeadTime(Int32, Int32)
        VB: CheckDeadTime(Int32, Int32)
      nameWithType:
        CSharp: TurnsController.CheckDeadTime(Int32, Int32)
        VB: TurnsController.CheckDeadTime(Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckDeadTime
        path: ''
        startLine: 12636
      syntax:
        content:
          CSharp: public int CheckDeadTime(int healthOwner, int healthOther)
          VB: Public Function CheckDeadTime(healthOwner As Integer, healthOther As Integer) As Integer
        parameters:
        - id: healthOwner
          type: System.Int32
        - id: healthOther
          type: System.Int32
        return:
          type: System.Int32
      overload: Timba.SacredTails.Arena.TurnsController.CheckDeadTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.deathTime
      commentId: F:Timba.SacredTails.Arena.TurnsController.deathTime
      language: CSharp
      name:
        CSharp: deathTime
        VB: deathTime
      nameWithType:
        CSharp: TurnsController.deathTime
        VB: TurnsController.deathTime
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.deathTime
        VB: Timba.SacredTails.Arena.TurnsController.deathTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: deathTime
        path: ''
        startLine: 12692
      syntax:
        content:
          CSharp: public int deathTime
          VB: Public deathTime As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
      commentId: F:Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
      language: CSharp
      name:
        CSharp: calculateEndMatchAgain
        VB: calculateEndMatchAgain
      nameWithType:
        CSharp: TurnsController.calculateEndMatchAgain
        VB: TurnsController.calculateEndMatchAgain
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
        VB: Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: calculateEndMatchAgain
        path: ''
        startLine: 12708
      summary: "\nBring data and actions from the enemy and execute them.\n"
      example: []
      syntax:
        content:
          CSharp: public bool calculateEndMatchAgain
          VB: Public calculateEndMatchAgain As Boolean
        return:
          type: System.Boolean
          description: ''
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
      commentId: M:Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
      language: CSharp
      name:
        CSharp: WaitOponentTurn()
        VB: WaitOponentTurn()
      nameWithType:
        CSharp: TurnsController.WaitOponentTurn()
        VB: TurnsController.WaitOponentTurn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn()
        VB: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitOponentTurn
        path: ''
        startLine: 12709
      syntax:
        content:
          CSharp: public IEnumerator WaitOponentTurn()
          VB: Public Function WaitOponentTurn As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch(System.Boolean,System.String)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch(System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: ShowForcedEndMatch(Boolean, String)
        VB: ShowForcedEndMatch(Boolean, String)
      nameWithType:
        CSharp: TurnsController.ShowForcedEndMatch(Boolean, String)
        VB: TurnsController.ShowForcedEndMatch(Boolean, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch(System.Boolean, System.String)
        VB: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch(System.Boolean, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowForcedEndMatch
        path: ''
        startLine: 12814
      syntax:
        content:
          CSharp: public void ShowForcedEndMatch(bool localPlayerWinMatch, string message = null)
          VB: Public Sub ShowForcedEndMatch(localPlayerWinMatch As Boolean, message As String = Nothing)
        parameters:
        - id: localPlayerWinMatch
          type: System.Boolean
        - id: message
          type: System.String
      overload: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates(System.Boolean,ActionCardDto)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckAlteredStates(System.Boolean,ActionCardDto)
      language: CSharp
      name:
        CSharp: CheckAlteredStates(Boolean, ActionCardDto)
        VB: CheckAlteredStates(Boolean, ActionCardDto)
      nameWithType:
        CSharp: TurnsController.CheckAlteredStates(Boolean, ActionCardDto)
        VB: TurnsController.CheckAlteredStates(Boolean, ActionCardDto)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates(System.Boolean, ActionCardDto)
        VB: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates(System.Boolean, ActionCardDto)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckAlteredStates
        path: ''
        startLine: 12827
      syntax:
        content:
          CSharp: public bool CheckAlteredStates(bool isPlayer, ActionCardDto playerTurn)
          VB: Public Function CheckAlteredStates(isPlayer As Boolean, playerTurn As ActionCardDto) As Boolean
        parameters:
        - id: isPlayer
          type: System.Boolean
        - id: playerTurn
          type: Global.ActionCardDto
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      language: CSharp
      name:
        CSharp: CheckIfAnyoneSurrendered(List<ActionCardDto>, Boolean)
        VB: CheckIfAnyoneSurrendered(List(Of ActionCardDto), Boolean)
      nameWithType:
        CSharp: TurnsController.CheckIfAnyoneSurrendered(List<ActionCardDto>, Boolean)
        VB: TurnsController.CheckIfAnyoneSurrendered(List(Of ActionCardDto), Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List<ActionCardDto>, System.Boolean)
        VB: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List(Of ActionCardDto), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckIfAnyoneSurrendered
        path: ''
        startLine: 12885
      summary: "\nCheck if the enemy has surrender, if it has then end match.\n"
      example: []
      syntax:
        content:
          CSharp: public bool CheckIfAnyoneSurrendered(List<ActionCardDto> playersTurnIndexCard, bool isLocalFirst)
          VB: Public Function CheckIfAnyoneSurrendered(playersTurnIndexCard As List(Of ActionCardDto), isLocalFirst As Boolean) As Boolean
        parameters:
        - id: playersTurnIndexCard
          type: System.Collections.Generic.List{ActionCardDto}
        - id: isLocalFirst
          type: System.Boolean
        return:
          type: System.Boolean
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean,Action,Action,Action)
      commentId: M:Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean,Action,Action,Action)
      language: CSharp
      name:
        CSharp: InitTurnFlow(Boolean, Action, Action, Action)
        VB: InitTurnFlow(Boolean, Action, Action, Action)
      nameWithType:
        CSharp: TurnsController.InitTurnFlow(Boolean, Action, Action, Action)
        VB: TurnsController.InitTurnFlow(Boolean, Action, Action, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean, Action, Action, Action)
        VB: Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean, Action, Action, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitTurnFlow
        path: ''
        startLine: 12934
      summary: "\nCheck if otherPlayer shinsei dies. If so, then doesn&apos;t execute his action.\n"
      example: []
      syntax:
        content:
          CSharp: public void InitTurnFlow(bool ownerOfActionIsLocal, Action userAction, Action enemyAction, Action callback)
          VB: Public Sub InitTurnFlow(ownerOfActionIsLocal As Boolean, userAction As Action, enemyAction As Action, callback As Action)
        parameters:
        - id: ownerOfActionIsLocal
          type: System.Boolean
        - id: userAction
          type: Global.Action
        - id: enemyAction
          type: Global.Action
        - id: callback
          type: Global.Action
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.InitTurnFlow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single,Action)
      commentId: M:Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single,Action)
      language: CSharp
      name:
        CSharp: WaitForSeconds(Single, Action)
        VB: WaitForSeconds(Single, Action)
      nameWithType:
        CSharp: TurnsController.WaitForSeconds(Single, Action)
        VB: TurnsController.WaitForSeconds(Single, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single, Action)
        VB: Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitForSeconds
        path: ''
        startLine: 12990
      syntax:
        content:
          CSharp: public IEnumerator WaitForSeconds(float time, Action callback)
          VB: Public Function WaitForSeconds(time As Single, callback As Action) As IEnumerator
        parameters:
        - id: time
          type: System.Single
        - id: callback
          type: Global.Action
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.Arena.TurnsController.WaitForSeconds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto,ActionCardDto)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto,ActionCardDto)
      language: CSharp
      name:
        CSharp: CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
        VB: CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
      nameWithType:
        CSharp: TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
        VB: TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
        VB: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckEnergyBarsAndInitNextTurn
        path: ''
        startLine: 12999
      summary: "\nAfter executing actions update energyBars and init next turn.\n"
      example: []
      syntax:
        content:
          CSharp: public void CheckEnergyBarsAndInitNextTurn(ActionCardDto playerTurn, ActionCardDto enemyTurn)
          VB: Public Sub CheckEnergyBarsAndInitNextTurn(playerTurn As ActionCardDto, enemyTurn As ActionCardDto)
        parameters:
        - id: playerTurn
          type: Global.ActionCardDto
        - id: enemyTurn
          type: Global.ActionCardDto
      overload: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei,Timba.SacredTails.Arena.ResourceBarValues,System.Collections.Generic.List{BattleActionData},System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei,Timba.SacredTails.Arena.ResourceBarValues,System.Collections.Generic.List{BattleActionData},System.Int32)
      language: CSharp
      name:
        CSharp: CalculateEnergyRegen(Shinsei, ResourceBarValues, List<BattleActionData>, Int32)
        VB: CalculateEnergyRegen(Shinsei, ResourceBarValues, List(Of BattleActionData), Int32)
      nameWithType:
        CSharp: TurnsController.CalculateEnergyRegen(Shinsei, ResourceBarValues, List<BattleActionData>, Int32)
        VB: TurnsController.CalculateEnergyRegen(Shinsei, ResourceBarValues, List(Of BattleActionData), Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei, Timba.SacredTails.Arena.ResourceBarValues, System.Collections.Generic.List<BattleActionData>, System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei, Timba.SacredTails.Arena.ResourceBarValues, System.Collections.Generic.List(Of BattleActionData), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CalculateEnergyRegen
        path: ''
        startLine: 13034
      summary: "\nCalculates the amount of energy that a shinsei restores after the turn passes\n"
      example: []
      syntax:
        content:
          CSharp: public void CalculateEnergyRegen(Shinsei playerShinsei, ResourceBarValues energyBar, List<BattleActionData> playersActions, int playerIndex)
          VB: Public Sub CalculateEnergyRegen(playerShinsei As Shinsei, energyBar As ResourceBarValues, playersActions As List(Of BattleActionData), playerIndex As Integer)
        parameters:
        - id: playerShinsei
          type: Global.Shinsei
          description: ''
        - id: energyBar
          type: Timba.SacredTails.Arena.ResourceBarValues
          description: ''
        - id: playersActions
          type: System.Collections.Generic.List{BattleActionData}
          description: ''
        - id: playerIndex
          type: System.Int32
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      language: CSharp
      name:
        CSharp: ExecuteServerAction(List<ActionCardDto>, Boolean)
        VB: ExecuteServerAction(List(Of ActionCardDto), Boolean)
      nameWithType:
        CSharp: TurnsController.ExecuteServerAction(List<ActionCardDto>, Boolean)
        VB: TurnsController.ExecuteServerAction(List(Of ActionCardDto), Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List<ActionCardDto>, System.Boolean)
        VB: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List(Of ActionCardDto), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ExecuteServerAction
        path: ''
        startLine: 13055
      summary: "\nExecute enemy actions that we bringed earlier from the cloud.\n"
      example: []
      syntax:
        content:
          CSharp: public Action ExecuteServerAction(List<ActionCardDto> turns, bool isEnemy = false)
          VB: Public Function ExecuteServerAction(turns As List(Of ActionCardDto), isEnemy As Boolean = False) As Action
        parameters:
        - id: turns
          type: System.Collections.Generic.List{ActionCardDto}
        - id: isEnemy
          type: System.Boolean
        return:
          type: Global.Action
      overload: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
      language: CSharp
      name:
        CSharp: GetTrueIndexCard(Int32)
        VB: GetTrueIndexCard(Int32)
      nameWithType:
        CSharp: TurnsController.GetTrueIndexCard(Int32)
        VB: TurnsController.GetTrueIndexCard(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetTrueIndexCard
        path: ''
        startLine: 13106
      syntax:
        content:
          CSharp: public int GetTrueIndexCard(int indexCard)
          VB: Public Function GetTrueIndexCard(indexCard As Integer) As Integer
        parameters:
        - id: indexCard
          type: System.Int32
        return:
          type: System.Int32
      overload: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ShinseiSlot
    commentId: T:Timba.SacredTails.Arena.ShinseiSlot
    language: CSharp
    name:
      CSharp: ShinseiSlot
      VB: ShinseiSlot
    nameWithType:
      CSharp: ShinseiSlot
      VB: ShinseiSlot
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiSlot
      VB: Timba.SacredTails.Arena.ShinseiSlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ShinseiSlot
      path: ''
      startLine: 18757
    syntax:
      content:
        CSharp: 'public class ShinseiSlot : MonoBehaviour'
        VB: >-
          Public Class ShinseiSlot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      commentId: P:Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      language: CSharp
      name:
        CSharp: IsCompanion
        VB: IsCompanion
      nameWithType:
        CSharp: ShinseiSlot.IsCompanion
        VB: ShinseiSlot.IsCompanion
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
        VB: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: IsCompanion
        path: ''
        startLine: 18760
      syntax:
        content:
          CSharp: public bool IsCompanion { get; set; }
          VB: Public Property IsCompanion As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
      language: CSharp
      name:
        CSharp: shinseiKey
        VB: shinseiKey
      nameWithType:
        CSharp: ShinseiSlot.shinseiKey
        VB: ShinseiSlot.shinseiKey
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiKey
        path: ''
        startLine: 18761
      syntax:
        content:
          CSharp: public string shinseiKey
          VB: Public shinseiKey As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinseiName
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinseiName
      language: CSharp
      name:
        CSharp: shinseiName
        VB: shinseiName
      nameWithType:
        CSharp: ShinseiSlot.shinseiName
        VB: ShinseiSlot.shinseiName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinseiName
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinseiName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiName
        path: ''
        startLine: 18762
      syntax:
        content:
          CSharp: public string shinseiName
          VB: Public shinseiName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.listIndex
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.listIndex
      language: CSharp
      name:
        CSharp: listIndex
        VB: listIndex
      nameWithType:
        CSharp: ShinseiSlot.listIndex
        VB: ShinseiSlot.listIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.listIndex
        VB: Timba.SacredTails.Arena.ShinseiSlot.listIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: listIndex
        path: ''
        startLine: 18763
      syntax:
        content:
          CSharp: public int listIndex
          VB: Public listIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinsei
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinsei
      language: CSharp
      name:
        CSharp: shinsei
        VB: shinsei
      nameWithType:
        CSharp: ShinseiSlot.shinsei
        VB: ShinseiSlot.shinsei
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinsei
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinsei
        path: ''
        startLine: 18764
      syntax:
        content:
          CSharp: public Shinsei shinsei
          VB: Public shinsei As Shinsei
        return:
          type: Global.Shinsei
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinseiView
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinseiView
      language: CSharp
      name:
        CSharp: shinseiView
        VB: shinseiView
      nameWithType:
        CSharp: ShinseiSlot.shinseiView
        VB: ShinseiSlot.shinseiView
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinseiView
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinseiView
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiView
        path: ''
        startLine: 18765
      syntax:
        content:
          CSharp: public Image shinseiView
          VB: Public shinseiView As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._infoBtn
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._infoBtn
      language: CSharp
      name:
        CSharp: _infoBtn
        VB: _infoBtn
      nameWithType:
        CSharp: ShinseiSlot._infoBtn
        VB: ShinseiSlot._infoBtn
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._infoBtn
        VB: Timba.SacredTails.Arena.ShinseiSlot._infoBtn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _infoBtn
        path: ''
        startLine: 18768
      syntax:
        content:
          CSharp: public Button _infoBtn
          VB: Public _infoBtn As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._shinseiName
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._shinseiName
      language: CSharp
      name:
        CSharp: _shinseiName
        VB: _shinseiName
      nameWithType:
        CSharp: ShinseiSlot._shinseiName
        VB: ShinseiSlot._shinseiName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._shinseiName
        VB: Timba.SacredTails.Arena.ShinseiSlot._shinseiName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _shinseiName
        path: ''
        startLine: 18769
      syntax:
        content:
          CSharp: public TMP_Text _shinseiName
          VB: Public _shinseiName As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._health
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._health
      language: CSharp
      name:
        CSharp: _health
        VB: _health
      nameWithType:
        CSharp: ShinseiSlot._health
        VB: ShinseiSlot._health
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._health
        VB: Timba.SacredTails.Arena.ShinseiSlot._health
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _health
        path: ''
        startLine: 18770
      syntax:
        content:
          CSharp: public TMP_Text _health
          VB: Public _health As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._energy
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._energy
      language: CSharp
      name:
        CSharp: _energy
        VB: _energy
      nameWithType:
        CSharp: ShinseiSlot._energy
        VB: ShinseiSlot._energy
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._energy
        VB: Timba.SacredTails.Arena.ShinseiSlot._energy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _energy
        path: ''
        startLine: 18771
      syntax:
        content:
          CSharp: public TMP_Text _energy
          VB: Public _energy As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._helathBar
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._helathBar
      language: CSharp
      name:
        CSharp: _helathBar
        VB: _helathBar
      nameWithType:
        CSharp: ShinseiSlot._helathBar
        VB: ShinseiSlot._helathBar
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._helathBar
        VB: Timba.SacredTails.Arena.ShinseiSlot._helathBar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _helathBar
        path: ''
        startLine: 18772
      syntax:
        content:
          CSharp: public Slider _helathBar
          VB: Public _helathBar As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._energyBar
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._energyBar
      language: CSharp
      name:
        CSharp: _energyBar
        VB: _energyBar
      nameWithType:
        CSharp: ShinseiSlot._energyBar
        VB: ShinseiSlot._energyBar
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._energyBar
        VB: Timba.SacredTails.Arena.ShinseiSlot._energyBar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _energyBar
        path: ''
        startLine: 18773
      syntax:
        content:
          CSharp: public Slider _energyBar
          VB: Public _energyBar As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._higlightColor
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._higlightColor
      language: CSharp
      name:
        CSharp: _higlightColor
        VB: _higlightColor
      nameWithType:
        CSharp: ShinseiSlot._higlightColor
        VB: ShinseiSlot._higlightColor
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._higlightColor
        VB: Timba.SacredTails.Arena.ShinseiSlot._higlightColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _higlightColor
        path: ''
        startLine: 18774
      syntax:
        content:
          CSharp: public Color _higlightColor
          VB: Public _higlightColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
      language: CSharp
      name:
        CSharp: _shinseiTypesImg
        VB: _shinseiTypesImg
      nameWithType:
        CSharp: ShinseiSlot._shinseiTypesImg
        VB: ShinseiSlot._shinseiTypesImg
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
        VB: Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _shinseiTypesImg
        path: ''
        startLine: 18775
      syntax:
        content:
          CSharp: public List<Image> _shinseiTypesImg
          VB: Public _shinseiTypesImg As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
      language: CSharp
      name:
        CSharp: isPreviewOnly
        VB: isPreviewOnly
      nameWithType:
        CSharp: ShinseiSlot.isPreviewOnly
        VB: ShinseiSlot.isPreviewOnly
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
        VB: Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isPreviewOnly
        path: ''
        startLine: 18778
      syntax:
        content:
          CSharp: public bool isPreviewOnly
          VB: Public isPreviewOnly As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.isLocked
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.isLocked
      language: CSharp
      name:
        CSharp: isLocked
        VB: isLocked
      nameWithType:
        CSharp: ShinseiSlot.isLocked
        VB: ShinseiSlot.isLocked
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.isLocked
        VB: Timba.SacredTails.Arena.ShinseiSlot.isLocked
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isLocked
        path: ''
        startLine: 18779
      syntax:
        content:
          CSharp: public bool isLocked
          VB: Public isLocked As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
      language: CSharp
      name:
        CSharp: deactivateSlotOnClick
        VB: deactivateSlotOnClick
      nameWithType:
        CSharp: ShinseiSlot.deactivateSlotOnClick
        VB: ShinseiSlot.deactivateSlotOnClick
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
        VB: Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: deactivateSlotOnClick
        path: ''
        startLine: 18780
      syntax:
        content:
          CSharp: public bool deactivateSlotOnClick
          VB: Public deactivateSlotOnClick As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.previewBtn
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.previewBtn
      language: CSharp
      name:
        CSharp: previewBtn
        VB: previewBtn
      nameWithType:
        CSharp: ShinseiSlot.previewBtn
        VB: ShinseiSlot.previewBtn
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.previewBtn
        VB: Timba.SacredTails.Arena.ShinseiSlot.previewBtn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: previewBtn
        path: ''
        startLine: 18783
      syntax:
        content:
          CSharp: public Button previewBtn
          VB: Public previewBtn As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.Counter
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.Counter
      language: CSharp
      name:
        CSharp: Counter
        VB: Counter
      nameWithType:
        CSharp: ShinseiSlot.Counter
        VB: ShinseiSlot.Counter
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.Counter
        VB: Timba.SacredTails.Arena.ShinseiSlot.Counter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Counter
        path: ''
        startLine: 18785
      syntax:
        content:
          CSharp: public TextMeshProUGUI Counter
          VB: Public Counter As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
      language: CSharp
      name:
        CSharp: OnSlotClicked
        VB: OnSlotClicked
      nameWithType:
        CSharp: ShinseiSlot.OnSlotClicked
        VB: ShinseiSlot.OnSlotClicked
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
        VB: Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnSlotClicked
        path: ''
        startLine: 18788
      syntax:
        content:
          CSharp: public UnityEvent<int, ShinseiSlot> OnSlotClicked
          VB: Public OnSlotClicked As UnityEvent(Of Integer, ShinseiSlot)
        return:
          type: Global.UnityEvent{System.Int32,Timba.SacredTails.Arena.ShinseiSlot}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerClick(PointerEventData)
        VB: OnPointerClick(PointerEventData)
      nameWithType:
        CSharp: ShinseiSlot.OnPointerClick(PointerEventData)
        VB: ShinseiSlot.OnPointerClick(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
        VB: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnPointerClick
        path: ''
        startLine: 18792
      syntax:
        content:
          CSharp: public void OnPointerClick(PointerEventData eventData)
          VB: Public Sub OnPointerClick(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String,System.String,Sprite)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String,System.String,Sprite)
      language: CSharp
      name:
        CSharp: UpdateVisual(String, String, Sprite)
        VB: UpdateVisual(String, String, Sprite)
      nameWithType:
        CSharp: ShinseiSlot.UpdateVisual(String, String, Sprite)
        VB: ShinseiSlot.UpdateVisual(String, String, Sprite)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String, System.String, Sprite)
        VB: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String, System.String, Sprite)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateVisual
        path: ''
        startLine: 18799
      syntax:
        content:
          CSharp: public void UpdateVisual(string shinseiName = null, string shinseiDNA = null, Sprite shinseiIcon = null)
          VB: Public Sub UpdateVisual(shinseiName As String = Nothing, shinseiDNA As String = Nothing, shinseiIcon As Sprite = Nothing)
        parameters:
        - id: shinseiName
          type: System.String
        - id: shinseiDNA
          type: System.String
        - id: shinseiIcon
          type: Global.Sprite
      overload: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String,System.Int32,Shinsei,System.String,Timba.SacredTails.Arena.ShinseiSlot)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String,System.Int32,Shinsei,System.String,Timba.SacredTails.Arena.ShinseiSlot)
      language: CSharp
      name:
        CSharp: ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
        VB: ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
      nameWithType:
        CSharp: ShinseiSlot.ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
        VB: ShinseiSlot.ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String, System.Int32, Shinsei, System.String, Timba.SacredTails.Arena.ShinseiSlot)
        VB: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String, System.Int32, Shinsei, System.String, Timba.SacredTails.Arena.ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeShinseiSlotValues
        path: ''
        startLine: 18812
      syntax:
        content:
          CSharp: public void ChangeShinseiSlotValues(string shinseiKey = null, int listIndex = -1, Shinsei shinsei = null, string name = null, ShinseiSlot newSlot = null)
          VB: Public Sub ChangeShinseiSlotValues(shinseiKey As String = Nothing, listIndex As Integer = -1, shinsei As Shinsei = Nothing, name As String = Nothing, newSlot As ShinseiSlot = Nothing)
        parameters:
        - id: shinseiKey
          type: System.String
        - id: listIndex
          type: System.Int32
        - id: shinsei
          type: Global.Shinsei
        - id: name
          type: System.String
        - id: newSlot
          type: Timba.SacredTails.Arena.ShinseiSlot
      overload: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeInteractuable(Boolean, Boolean)
        VB: ChangeInteractuable(Boolean, Boolean)
      nameWithType:
        CSharp: ShinseiSlot.ChangeInteractuable(Boolean, Boolean)
        VB: ShinseiSlot.ChangeInteractuable(Boolean, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean, System.Boolean)
        VB: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeInteractuable
        path: ''
        startLine: 18834
      syntax:
        content:
          CSharp: public void ChangeInteractuable(bool slotIsLocked = false, bool deactivateSlotOnClick = true)
          VB: Public Sub ChangeInteractuable(slotIsLocked As Boolean = False, deactivateSlotOnClick As Boolean = True)
        parameters:
        - id: slotIsLocked
          type: System.Boolean
        - id: deactivateSlotOnClick
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
      language: CSharp
      name:
        CSharp: SetDataColor()
        VB: SetDataColor()
      nameWithType:
        CSharp: ShinseiSlot.SetDataColor()
        VB: ShinseiSlot.SetDataColor()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor()
        VB: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetDataColor
        path: ''
        startLine: 18845
      syntax:
        content:
          CSharp: public void SetDataColor()
          VB: Public Sub SetDataColor
      overload: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String,CharacterType)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String,CharacterType)
      language: CSharp
      name:
        CSharp: PopulateShinseiTypesSprites(String, CharacterType)
        VB: PopulateShinseiTypesSprites(String, CharacterType)
      nameWithType:
        CSharp: ShinseiSlot.PopulateShinseiTypesSprites(String, CharacterType)
        VB: ShinseiSlot.PopulateShinseiTypesSprites(String, CharacterType)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String, CharacterType)
        VB: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String, CharacterType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: PopulateShinseiTypesSprites
        path: ''
        startLine: 18869
      syntax:
        content:
          CSharp: public void PopulateShinseiTypesSprites(string dna, CharacterType mainType)
          VB: Public Sub PopulateShinseiTypesSprites(dna As String, mainType As CharacterType)
        parameters:
        - id: dna
          type: System.String
        - id: mainType
          type: Global.CharacterType
      overload: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.GameSceneManager
    commentId: T:Timba.SacredTails.Arena.GameSceneManager
    language: CSharp
    name:
      CSharp: GameSceneManager
      VB: GameSceneManager
    nameWithType:
      CSharp: GameSceneManager
      VB: GameSceneManager
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.GameSceneManager
      VB: Timba.SacredTails.Arena.GameSceneManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: GameSceneManager
      path: ''
      startLine: 28532
    syntax:
      content:
        CSharp: 'public class GameSceneManager : NetworkBehaviour'
        VB: >-
          Public Class GameSceneManager

              Inherits NetworkBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
      commentId: M:Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
      language: CSharp
      name:
        CSharp: GetClosestBattleSpawn()
        VB: GetClosestBattleSpawn()
      nameWithType:
        CSharp: GameSceneManager.GetClosestBattleSpawn()
        VB: GameSceneManager.GetClosestBattleSpawn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn()
        VB: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetClosestBattleSpawn
        path: ''
        startLine: 28551
      syntax:
        content:
          CSharp: public int GetClosestBattleSpawn()
          VB: Public Function GetClosestBattleSpawn As Integer
        return:
          type: System.Int32
      overload: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult,System.String,System.Int32,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult,System.String,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: SendBattle(GetMatchResult, String, Int32, Boolean)
        VB: SendBattle(GetMatchResult, String, Int32, Boolean)
      nameWithType:
        CSharp: GameSceneManager.SendBattle(GetMatchResult, String, Int32, Boolean)
        VB: GameSceneManager.SendBattle(GetMatchResult, String, Int32, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult, System.String, System.Int32, System.Boolean)
        VB: Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult, System.String, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SendBattle
        path: ''
        startLine: 28567
      syntax:
        content:
          CSharp: public void SendBattle(GetMatchResult getMatchResult = null, string matchId = null, int _closestSpawnPoint = -1, bool isViewing = false)
          VB: Public Sub SendBattle(getMatchResult As GetMatchResult = Nothing, matchId As String = Nothing, _closestSpawnPoint As Integer = -1, isViewing As Boolean = False)
        parameters:
        - id: getMatchResult
          type: Global.GetMatchResult
        - id: matchId
          type: System.String
        - id: _closestSpawnPoint
          type: System.Int32
        - id: isViewing
          type: System.Boolean
      overload: Timba.SacredTails.Arena.GameSceneManager.SendBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.GameSceneManager.EndBattle
      commentId: M:Timba.SacredTails.Arena.GameSceneManager.EndBattle
      language: CSharp
      name:
        CSharp: EndBattle()
        VB: EndBattle()
      nameWithType:
        CSharp: GameSceneManager.EndBattle()
        VB: GameSceneManager.EndBattle()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.GameSceneManager.EndBattle()
        VB: Timba.SacredTails.Arena.GameSceneManager.EndBattle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: EndBattle
        path: ''
        startLine: 28602
      syntax:
        content:
          CSharp: public void EndBattle()
          VB: Public Sub
      overload: Timba.SacredTails.Arena.GameSceneManager.EndBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Arena.ShinseiType
  commentId: N:Timba.SacredTails.Arena.ShinseiType
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Arena.ShinseiType
    VB: Timba.SacredTails.Arena.ShinseiType
  nameWithType:
    CSharp: Timba.SacredTails.Arena.ShinseiType
    VB: Timba.SacredTails.Arena.ShinseiType
  qualifiedName:
    CSharp: Timba.SacredTails.Arena.ShinseiType
    VB: Timba.SacredTails.Arena.ShinseiType
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    language: CSharp
    name:
      CSharp: ShinseiTypeScriptable
      VB: ShinseiTypeScriptable
    nameWithType:
      CSharp: ShinseiTypeScriptable
      VB: ShinseiTypeScriptable
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
      VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena.ShinseiType
    source:
      id: ShinseiTypeScriptable
      path: ''
      startLine: 13459
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ShinseiTypeScriptable : ScriptableObject
        VB: >-
          <Serializable>

          Public Class ShinseiTypeScriptable

              Inherits ScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
      commentId: F:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
      language: CSharp
      name:
        CSharp: shinseiTypeMatrix
        VB: shinseiTypeMatrix
      nameWithType:
        CSharp: ShinseiTypeScriptable.shinseiTypeMatrix
        VB: ShinseiTypeScriptable.shinseiTypeMatrix
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: shinseiTypeMatrix
        path: ''
        startLine: 13463
      syntax:
        content:
          CSharp: public List<ShinseiTypeListClass> shinseiTypeMatrix
          VB: Public shinseiTypeMatrix As List(Of ShinseiTypeListClass)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
      language: CSharp
      name:
        CSharp: GetShinseiTypes()
        VB: GetShinseiTypes()
      nameWithType:
        CSharp: ShinseiTypeScriptable.GetShinseiTypes()
        VB: ShinseiTypeScriptable.GetShinseiTypes()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes()
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: GetShinseiTypes
        path: ''
        startLine: 13465
      syntax:
        content:
          CSharp: public void GetShinseiTypes()
          VB: Public Sub GetShinseiTypes
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType,CharacterType)
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType,CharacterType)
      language: CSharp
      name:
        CSharp: CompareTypesAndGetDamage(CharacterType, CharacterType)
        VB: CompareTypesAndGetDamage(CharacterType, CharacterType)
      nameWithType:
        CSharp: ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
        VB: ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: CompareTypesAndGetDamage
        path: ''
        startLine: 13475
      syntax:
        content:
          CSharp: public float CompareTypesAndGetDamage(CharacterType currentShinsei, CharacterType targetShinesi)
          VB: Public Function CompareTypesAndGetDamage(currentShinsei As CharacterType, targetShinesi As CharacterType) As Single
        parameters:
        - id: currentShinsei
          type: Global.CharacterType
        - id: targetShinesi
          type: Global.CharacterType
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
      language: CSharp
      name:
        CSharp: GetMessageForTypeDamage(Single)
        VB: GetMessageForTypeDamage(Single)
      nameWithType:
        CSharp: ShinseiTypeScriptable.GetMessageForTypeDamage(Single)
        VB: ShinseiTypeScriptable.GetMessageForTypeDamage(Single)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: GetMessageForTypeDamage
        path: ''
        startLine: 13480
      syntax:
        content:
          CSharp: public string GetMessageForTypeDamage(float typeDamageMultiplier)
          VB: Public Function GetMessageForTypeDamage(typeDamageMultiplier As Single) As String
        parameters:
        - id: typeDamageMultiplier
          type: System.Single
        return:
          type: System.String
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
      language: CSharp
      name:
        CSharp: SerializeShinseiTypeMatrix()
        VB: SerializeShinseiTypeMatrix()
      nameWithType:
        CSharp: ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
        VB: ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: SerializeShinseiTypeMatrix
        path: ''
        startLine: 13493
      syntax:
        content:
          CSharp: public void SerializeShinseiTypeMatrix()
          VB: Public Sub SerializeShinseiTypeMatrix
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    language: CSharp
    name:
      CSharp: ShinseiTypeListClass
      VB: ShinseiTypeListClass
    nameWithType:
      CSharp: ShinseiTypeListClass
      VB: ShinseiTypeListClass
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena.ShinseiType
    source:
      id: ShinseiTypeListClass
      path: ''
      startLine: 13514
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ShinseiTypeListClass
        VB: >-
          <Serializable>

          Public Class ShinseiTypeListClass
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
      commentId: F:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
      language: CSharp
      name:
        CSharp: rows
        VB: rows
      nameWithType:
        CSharp: ShinseiTypeListClass.rows
        VB: ShinseiTypeListClass.rows
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: rows
        path: ''
        startLine: 13517
      syntax:
        content:
          CSharp: public List<float> rows
          VB: Public rows As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  Global.Transform:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  Global.CharacterSlot:
    name:
      CSharp:
      - id: Global.CharacterSlot
        name: CharacterSlot
        nameWithType: CharacterSlot
        qualifiedName: CharacterSlot
      VB:
      - id: Global.CharacterSlot
        name: CharacterSlot
        nameWithType: CharacterSlot
        qualifiedName: CharacterSlot
    isDefinition: true
    commentId: T:Global.CharacterSlot
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*
        name: SpawnPlayerShinseis
        nameWithType: BattleShinseiSpawner.SpawnPlayerShinseis
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis
      VB:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*
        name: SpawnPlayerShinseis
        nameWithType: BattleShinseiSpawner.SpawnPlayerShinseis
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*
        name: SpawnShinseiEndGame
        nameWithType: BattleShinseiSpawner.SpawnShinseiEndGame
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame
      VB:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*
        name: SpawnShinseiEndGame
        nameWithType: BattleShinseiSpawner.SpawnShinseiEndGame
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame
  Timba.SacredTails.Arena.BattleShinseiSpawner:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner
        name: BattleShinseiSpawner
        nameWithType: BattleShinseiSpawner
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner
      VB:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner
        name: BattleShinseiSpawner
        nameWithType: BattleShinseiSpawner
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleShinseiSpawner
  Global.TMP_Text:
    name:
      CSharp:
      - id: Global.TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
      VB:
      - id: Global.TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
    isDefinition: true
  Global.VersusPanelController:
    name:
      CSharp:
      - id: Global.VersusPanelController
        name: VersusPanelController
        nameWithType: VersusPanelController
        qualifiedName: VersusPanelController
      VB:
      - id: Global.VersusPanelController
        name: VersusPanelController
        nameWithType: VersusPanelController
        qualifiedName: VersusPanelController
    isDefinition: true
    commentId: T:Global.VersusPanelController
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Global.BattleNotificationSystem:
    name:
      CSharp:
      - id: Global.BattleNotificationSystem
        name: BattleNotificationSystem
        nameWithType: BattleNotificationSystem
        qualifiedName: BattleNotificationSystem
      VB:
      - id: Global.BattleNotificationSystem
        name: BattleNotificationSystem
        nameWithType: BattleNotificationSystem
        qualifiedName: BattleNotificationSystem
    isDefinition: true
    commentId: T:Global.BattleNotificationSystem
  System.Collections.Generic.List{CardUI}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CardUI
        name: CardUI
        nameWithType: CardUI
        qualifiedName: CardUI
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CardUI
        name: CardUI
        nameWithType: CardUI
        qualifiedName: CardUI
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CardUI}
  Global.UIDisolver:
    name:
      CSharp:
      - id: Global.UIDisolver
        name: UIDisolver
        nameWithType: UIDisolver
        qualifiedName: UIDisolver
      VB:
      - id: Global.UIDisolver
        name: UIDisolver
        nameWithType: UIDisolver
        qualifiedName: UIDisolver
    isDefinition: true
    commentId: T:Global.UIDisolver
  Timba.SacredTails.Arena:
    name:
      CSharp:
      - name: Timba.SacredTails.Arena
        nameWithType: Timba.SacredTails.Arena
        qualifiedName: Timba.SacredTails.Arena
      VB:
      - name: Timba.SacredTails.Arena
        nameWithType: Timba.SacredTails.Arena
        qualifiedName: Timba.SacredTails.Arena
    isDefinition: true
    commentId: N:Timba.SacredTails.Arena
  Timba.SacredTails.Arena.ResourceBarValues:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
      VB:
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.ResourceBarValues
  Timba.SacredTails.Arena.BattleUIController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.Init*
        name: Init
        nameWithType: BattleUIController.Init
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.Init
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.Init*
        name: Init
        nameWithType: BattleUIController.Init
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.Init
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Global.Shinsei:
    name:
      CSharp:
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      VB:
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
    isDefinition: true
    commentId: T:Global.Shinsei
  Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*
        name: UpdateShinseiPicture
        nameWithType: BattleUIController.UpdateShinseiPicture
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*
        name: UpdateShinseiPicture
        nameWithType: BattleUIController.UpdateShinseiPicture
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Timba.SacredTails.Arena.BattleUIController.UpdateTimer*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateTimer*
        name: UpdateTimer
        nameWithType: BattleUIController.UpdateTimer
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateTimer
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateTimer*
        name: UpdateTimer
        nameWithType: BattleUIController.UpdateTimer
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateTimer
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.UpdateTimer
  Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*
        name: ChangeHealthColorBar
        nameWithType: BattleUIController.ChangeHealthColorBar
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*
        name: ChangeHealthColorBar
        nameWithType: BattleUIController.ChangeHealthColorBar
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar
  Timba.SacredTails.Arena.BattleUIController.InitializeBars*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.InitializeBars*
        name: InitializeBars
        nameWithType: BattleUIController.InitializeBars
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.InitializeBars
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.InitializeBars*
        name: InitializeBars
        nameWithType: BattleUIController.InitializeBars
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.InitializeBars
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.InitializeBars
  Timba.SacredTails.Arena.BattleUIController.ShowFaster*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowFaster*
        name: ShowFaster
        nameWithType: BattleUIController.ShowFaster
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowFaster
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowFaster*
        name: ShowFaster
        nameWithType: BattleUIController.ShowFaster
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowFaster
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ShowFaster
  Global.Func`1:
    name:
      CSharp:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.Func`1'
  Global.Func{System.Collections.Generic.List{System.Int32}}:
    name:
      CSharp:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Func`1
    commentId: '!:Global.Func{System.Collections.Generic.List{System.Int32}}'
  Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*
        name: ChangeHealthbarView
        nameWithType: BattleUIController.ChangeHealthbarView
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*
        name: ChangeHealthbarView
        nameWithType: BattleUIController.ChangeHealthbarView
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
  Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*
        name: ApplyEnergyChange
        nameWithType: BattleUIController.ApplyEnergyChange
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*
        name: ApplyEnergyChange
        nameWithType: BattleUIController.ApplyEnergyChange
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange
  Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*
        name: HideEverythingForWatchMatch
        nameWithType: BattleUIController.HideEverythingForWatchMatch
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*
        name: HideEverythingForWatchMatch
        nameWithType: BattleUIController.HideEverythingForWatchMatch
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch
  Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*
        name: ToggleWaitingPrompt
        nameWithType: BattleUIController.ToggleWaitingPrompt
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*
        name: ToggleWaitingPrompt
        nameWithType: BattleUIController.ToggleWaitingPrompt
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt
  Timba.SacredTails.Arena.BattleUIController.ShowCards*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowCards*
        name: ShowCards
        nameWithType: BattleUIController.ShowCards
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowCards
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowCards*
        name: ShowCards
        nameWithType: BattleUIController.ShowCards
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowCards
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ShowCards
  Timba.SacredTails.Arena.BattleUIController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: Timba.SacredTails.Arena.BattleUIController
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: Timba.SacredTails.Arena.BattleUIController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleUIController
  Timba.SacredTails.Arena.VfxInfo:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.VfxInfo
        name: VfxInfo
        nameWithType: VfxInfo
        qualifiedName: Timba.SacredTails.Arena.VfxInfo
      VB:
      - id: Timba.SacredTails.Arena.VfxInfo
        name: VfxInfo
        nameWithType: VfxInfo
        qualifiedName: Timba.SacredTails.Arena.VfxInfo
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.VfxInfo
  Global.Action`2:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.Action`2'
  Global.Action{System.Boolean,System.Collections.Generic.List{System.Int32}}:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`2
    commentId: '!:Global.Action{System.Boolean,System.Collections.Generic.List{System.Int32}}'
  Global.MatchData:
    name:
      CSharp:
      - id: Global.MatchData
        name: MatchData
        nameWithType: MatchData
        qualifiedName: MatchData
      VB:
      - id: Global.MatchData
        name: MatchData
        nameWithType: MatchData
        qualifiedName: MatchData
    isDefinition: true
    commentId: T:Global.MatchData
  Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init
  Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*
        name: OnShinseiSelectionCompleted
        nameWithType: ArenaShinseiSelectionController.OnShinseiSelectionCompleted
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*
        name: OnShinseiSelectionCompleted
        nameWithType: ArenaShinseiSelectionController.OnShinseiSelectionCompleted
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
  Timba.SacredTails.Arena.ArenaShinseiSelectionController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController
        name: ArenaShinseiSelectionController
        nameWithType: ArenaShinseiSelectionController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController
        name: ArenaShinseiSelectionController
        nameWithType: ArenaShinseiSelectionController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionController
  System.Collections.Generic.List{Image}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Image}
  Global.Sprite:
    name:
      CSharp:
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      VB:
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
    isDefinition: true
  Timba.SacredTails.Arena.ShinseiSlot:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.ShinseiSlot
  Global.TextMeshProUGUI:
    name:
      CSharp:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      VB:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
    isDefinition: true
  Global.ShinseiPreviewPanelManager:
    name:
      CSharp:
      - id: Global.ShinseiPreviewPanelManager
        name: ShinseiPreviewPanelManager
        nameWithType: ShinseiPreviewPanelManager
        qualifiedName: ShinseiPreviewPanelManager
      VB:
      - id: Global.ShinseiPreviewPanelManager
        name: ShinseiPreviewPanelManager
        nameWithType: ShinseiPreviewPanelManager
        qualifiedName: ShinseiPreviewPanelManager
    isDefinition: true
    commentId: T:Global.ShinseiPreviewPanelManager
  Global.CombatPlayer:
    name:
      CSharp:
      - id: Global.CombatPlayer
        name: CombatPlayer
        nameWithType: CombatPlayer
        qualifiedName: CombatPlayer
      VB:
      - id: Global.CombatPlayer
        name: CombatPlayer
        nameWithType: CombatPlayer
        qualifiedName: CombatPlayer
    isDefinition: true
    commentId: T:Global.CombatPlayer
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionUserPanelController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionUserPanelController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*
        name: ShowNext
        nameWithType: ArenaShinseiSelectionUserPanelController.ShowNext
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*
        name: ShowNext
        nameWithType: ArenaShinseiSelectionUserPanelController.ShowNext
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*
        name: Show
        nameWithType: ArenaShinseiSelectionUserPanelController.Show
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*
        name: Show
        nameWithType: ArenaShinseiSelectionUserPanelController.Show
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*
        name: SelectShinseiForBattle
        nameWithType: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*
        name: SelectShinseiForBattle
        nameWithType: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*
        name: MakeSlotsUnclickeable
        nameWithType: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*
        name: MakeSlotsUnclickeable
        nameWithType: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*
        name: GetShinseisSelected
        nameWithType: ArenaShinseiSelectionUserPanelController.GetShinseisSelected
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*
        name: GetShinseisSelected
        nameWithType: ArenaShinseiSelectionUserPanelController.GetShinseisSelected
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
        name: ArenaShinseiSelectionUserPanelController
        nameWithType: ArenaShinseiSelectionUserPanelController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
        name: ArenaShinseiSelectionUserPanelController
        nameWithType: ArenaShinseiSelectionUserPanelController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
  System.Collections.Generic.List{Shinsei}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Shinsei}
  System.Collections.Generic.List{BattleActionsBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleActionsBase}
  Timba.SacredTails.Arena.UserInfo:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: Timba.SacredTails.Arena.UserInfo
      VB:
      - id: Timba.SacredTails.Arena.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: Timba.SacredTails.Arena.UserInfo
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.UserInfo
  Timba.SacredTails.Arena.GameSceneManager:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager
        name: GameSceneManager
        nameWithType: GameSceneManager
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager
        name: GameSceneManager
        nameWithType: GameSceneManager
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.GameSceneManager
  Timba.SacredTails.Arena.TurnsController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController
        name: TurnsController
        nameWithType: TurnsController
        qualifiedName: Timba.SacredTails.Arena.TurnsController
      VB:
      - id: Timba.SacredTails.Arena.TurnsController
        name: TurnsController
        nameWithType: TurnsController
        qualifiedName: Timba.SacredTails.Arena.TurnsController
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.TurnsController
  Global.BattleTerrainBehavioursBase:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase
        name: BattleTerrainBehavioursBase
        nameWithType: BattleTerrainBehavioursBase
        qualifiedName: BattleTerrainBehavioursBase
      VB:
      - id: Global.BattleTerrainBehavioursBase
        name: BattleTerrainBehavioursBase
        nameWithType: BattleTerrainBehavioursBase
        qualifiedName: BattleTerrainBehavioursBase
    isDefinition: true
    commentId: T:Global.BattleTerrainBehavioursBase
  Global.Combat:
    name:
      CSharp:
      - id: Global.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Combat
      VB:
      - id: Global.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Combat
    isDefinition: true
    commentId: T:Global.Combat
  System.Collections.Generic.List{Sprite}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Sprite}
  System.Collections.Generic.List{TextMeshProUGUI}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{TextMeshProUGUI}
  System.Collections.Generic.List{Color}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Color}
  Global.Camera:
    name:
      CSharp:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Camera'
  Global.GetMatchResult:
    name:
      CSharp:
      - id: Global.GetMatchResult
        name: GetMatchResult
        nameWithType: GetMatchResult
        qualifiedName: GetMatchResult
        isExternal: true
      VB:
      - id: Global.GetMatchResult
        name: GetMatchResult
        nameWithType: GetMatchResult
        qualifiedName: GetMatchResult
        isExternal: true
    isDefinition: true
  Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*
        name: OnStartMatch
        nameWithType: BattleGameMode.OnStartMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*
        name: OnStartMatch
        nameWithType: BattleGameMode.OnStartMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnStartMatch
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
        isExternal: true
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerator
  Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*
        name: OnStartMatchRoutine
        nameWithType: BattleGameMode.OnStartMatchRoutine
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*
        name: OnStartMatchRoutine
        nameWithType: BattleGameMode.OnStartMatchRoutine
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine
  Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*
        name: MakeShinseiPartyUsingPlayfabId
        nameWithType: BattleGameMode.MakeShinseiPartyUsingPlayfabId
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*
        name: MakeShinseiPartyUsingPlayfabId
        nameWithType: BattleGameMode.MakeShinseiPartyUsingPlayfabId
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId
  Timba.SacredTails.Arena.BattleGameMode.Initialize*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.Initialize*
        name: Initialize
        nameWithType: BattleGameMode.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.Initialize
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.Initialize*
        name: Initialize
        nameWithType: BattleGameMode.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.Initialize
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.Initialize
  Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*
        name: ShinseiSelected
        nameWithType: BattleGameMode.ShinseiSelected
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*
        name: ShinseiSelected
        nameWithType: BattleGameMode.ShinseiSelected
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected
  Timba.SacredTails.Arena.BattleGameMode.OnDisable*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnDisable*
        name: OnDisable
        nameWithType: BattleGameMode.OnDisable
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnDisable
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnDisable*
        name: OnDisable
        nameWithType: BattleGameMode.OnDisable
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnDisable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnDisable
  Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: BattleGameMode.OnApplicationQuit
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: BattleGameMode.OnApplicationQuit
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
  Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*
        name: CancelSelectShinsei
        nameWithType: BattleGameMode.CancelSelectShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*
        name: CancelSelectShinsei
        nameWithType: BattleGameMode.CancelSelectShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
  Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*
        name: WaitForOpponentToSelectViewMatch
        nameWithType: BattleGameMode.WaitForOpponentToSelectViewMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*
        name: WaitForOpponentToSelectViewMatch
        nameWithType: BattleGameMode.WaitForOpponentToSelectViewMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
  Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*
        name: WaitForOpponentToSelect
        nameWithType: BattleGameMode.WaitForOpponentToSelect
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*
        name: WaitForOpponentToSelect
        nameWithType: BattleGameMode.WaitForOpponentToSelect
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
  Timba.SacredTails.Arena.BattleGameMode.InitBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.InitBattle*
        name: InitBattle
        nameWithType: BattleGameMode.InitBattle
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.InitBattle
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.InitBattle*
        name: InitBattle
        nameWithType: BattleGameMode.InitBattle
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.InitBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.InitBattle
  Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*
        name: OpenChangeShinseiPanel
        nameWithType: BattleGameMode.OpenChangeShinseiPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*
        name: OpenChangeShinseiPanel
        nameWithType: BattleGameMode.OpenChangeShinseiPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
  Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*
        name: UpdateCurrentShinsei
        nameWithType: BattleGameMode.UpdateCurrentShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*
        name: UpdateCurrentShinsei
        nameWithType: BattleGameMode.UpdateCurrentShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei
  Global.Action:
    name:
      CSharp:
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      VB:
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
    isDefinition: true
  Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*
        name: ShowPopupEndMatch
        nameWithType: BattleGameMode.ShowPopupEndMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*
        name: ShowPopupEndMatch
        nameWithType: BattleGameMode.ShowPopupEndMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch
  Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*
        name: ShowEndResultPanel
        nameWithType: BattleGameMode.ShowEndResultPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*
        name: ShowEndResultPanel
        nameWithType: BattleGameMode.ShowEndResultPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel
  Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*
        name: SpawnWinnerShisneis
        nameWithType: BattleGameMode.SpawnWinnerShisneis
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*
        name: SpawnWinnerShisneis
        nameWithType: BattleGameMode.SpawnWinnerShisneis
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis
  Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*
        name: GoBackToLobbyPopup
        nameWithType: BattleGameMode.GoBackToLobbyPopup
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*
        name: GoBackToLobbyPopup
        nameWithType: BattleGameMode.GoBackToLobbyPopup
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
  Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*
        name: GoBackToLobby
        nameWithType: BattleGameMode.GoBackToLobby
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*
        name: GoBackToLobby
        nameWithType: BattleGameMode.GoBackToLobby
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
  Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*
        name: EndMatchCheck
        nameWithType: BattleGameMode.EndMatchCheck
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*
        name: EndMatchCheck
        nameWithType: BattleGameMode.EndMatchCheck
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{System.String,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*
        name: AddTextToLog
        nameWithType: BattleGameMode.AddTextToLog
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*
        name: AddTextToLog
        nameWithType: BattleGameMode.AddTextToLog
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.AddTextToLog
  Global.Action`1:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.Action`1'
  Global.Action{Combat}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Combat
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Combat
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{Combat}'
  Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*
        name: GetOwnCombatData
        nameWithType: BattleGameMode.GetOwnCombatData
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*
        name: GetOwnCombatData
        nameWithType: BattleGameMode.GetOwnCombatData
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData
  Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*
        name: GetCurrentShinseiEnergy
        nameWithType: BattleGameMode.GetCurrentShinseiEnergy
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*
        name: GetCurrentShinseiEnergy
        nameWithType: BattleGameMode.GetCurrentShinseiEnergy
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
  Timba.SacredTails.Arena.BattleGameMode:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.BattleGameMode
  Timba.SacredTails.Arena.BattleViewerController.Initialize*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleViewerController.Initialize*
        name: Initialize
        nameWithType: BattleViewerController.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController.Initialize
      VB:
      - id: Timba.SacredTails.Arena.BattleViewerController.Initialize*
        name: Initialize
        nameWithType: BattleViewerController.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController.Initialize
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleViewerController.Initialize
  Timba.SacredTails.Arena.BattleViewerController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleViewerController
        name: BattleViewerController
        nameWithType: BattleViewerController
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController
      VB:
      - id: Timba.SacredTails.Arena.BattleViewerController
        name: BattleViewerController
        nameWithType: BattleViewerController
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleViewerController
  System.Collections.Generic.Dictionary{ActionTypeEnum,BattleActionsBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ActionTypeEnum
        name: ActionTypeEnum
        nameWithType: ActionTypeEnum
        qualifiedName: ActionTypeEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ActionTypeEnum
        name: ActionTypeEnum
        nameWithType: ActionTypeEnum
        qualifiedName: ActionTypeEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{ActionTypeEnum,BattleActionsBase}
  System.Collections.Generic.List{BattleAlteredStateBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleAlteredStateBase
        name: BattleAlteredStateBase
        nameWithType: BattleAlteredStateBase
        qualifiedName: BattleAlteredStateBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleAlteredStateBase
        name: BattleAlteredStateBase
        nameWithType: BattleAlteredStateBase
        qualifiedName: BattleAlteredStateBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleAlteredStateBase}
  System.Collections.Generic.List{VFXTypeData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.VFXTypeData
        name: VFXTypeData
        nameWithType: VFXTypeData
        qualifiedName: VFXTypeData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.VFXTypeData
        name: VFXTypeData
        nameWithType: VFXTypeData
        qualifiedName: VFXTypeData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{VFXTypeData}
  System.Collections.Generic.List{BattleActionData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleActionData}
  Global.CameraPlaneController:
    name:
      CSharp:
      - id: Global.CameraPlaneController
        name: CameraPlaneController
        nameWithType: CameraPlaneController
        qualifiedName: CameraPlaneController
        isExternal: true
      VB:
      - id: Global.CameraPlaneController
        name: CameraPlaneController
        nameWithType: CameraPlaneController
        qualifiedName: CameraPlaneController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CameraPlaneController'
  System.Collections.Generic.List{VFXPositionData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.VFXPositionData
        name: VFXPositionData
        nameWithType: VFXPositionData
        qualifiedName: VFXPositionData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.VFXPositionData
        name: VFXPositionData
        nameWithType: VFXPositionData
        qualifiedName: VFXPositionData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{VFXPositionData}
  System.Collections.Generic.Dictionary{VFXPositionEnum,Transform}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{VFXPositionEnum,Transform}
  Timba.SacredTails.Arena.TurnsController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.Init*
        name: Init
        nameWithType: TurnsController.Init
        qualifiedName: Timba.SacredTails.Arena.TurnsController.Init
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.Init*
        name: Init
        nameWithType: TurnsController.Init
        qualifiedName: Timba.SacredTails.Arena.TurnsController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.Init
  Timba.SacredTails.Arena.TurnsController.InitCountDown*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.InitCountDown*
        name: InitCountDown
        nameWithType: TurnsController.InitCountDown
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitCountDown
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.InitCountDown*
        name: InitCountDown
        nameWithType: TurnsController.InitCountDown
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitCountDown
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.InitCountDown
  Timba.SacredTails.Arena.TurnsController.InitNewTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.InitNewTurn*
        name: InitNewTurn
        nameWithType: TurnsController.InitNewTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitNewTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.InitNewTurn*
        name: InitNewTurn
        nameWithType: TurnsController.InitNewTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitNewTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.InitNewTurn
  Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*
        name: CurrentActionsHasSkipTurnForLocalPlayer
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*
        name: CurrentActionsHasSkipTurnForLocalPlayer
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
  Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*
        name: CurrentActionsHasSkipTurnForEnemy
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForEnemy
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*
        name: CurrentActionsHasSkipTurnForEnemy
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForEnemy
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
  Timba.SacredTails.Arena.TurnsController.ShowPopupStrike*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike*
        name: ShowPopupStrike
        nameWithType: TurnsController.ShowPopupStrike
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike*
        name: ShowPopupStrike
        nameWithType: TurnsController.ShowPopupStrike
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ShowPopupStrike
  Timba.SacredTails.Arena.TurnsController.BtnSendTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.BtnSendTurn*
        name: BtnSendTurn
        nameWithType: TurnsController.BtnSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.BtnSendTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.BtnSendTurn*
        name: BtnSendTurn
        nameWithType: TurnsController.BtnSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.BtnSendTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.BtnSendTurn
  Timba.SacredTails.Arena.TurnsController.SendMyTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.SendMyTurn*
        name: SendMyTurn
        nameWithType: TurnsController.SendMyTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendMyTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.SendMyTurn*
        name: SendMyTurn
        nameWithType: TurnsController.SendMyTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendMyTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.SendMyTurn
  Timba.SacredTails.Arena.TurnsController.TestSendTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.TestSendTurn*
        name: TestSendTurn
        nameWithType: TurnsController.TestSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.TestSendTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.TestSendTurn*
        name: TestSendTurn
        nameWithType: TurnsController.TestSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.TestSendTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.TestSendTurn
  Timba.SacredTails.Arena.TurnsController.SendTurnRequest*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.SendTurnRequest*
        name: SendTurnRequest
        nameWithType: TurnsController.SendTurnRequest
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendTurnRequest
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.SendTurnRequest*
        name: SendTurnRequest
        nameWithType: TurnsController.SendTurnRequest
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendTurnRequest
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.SendTurnRequest
  Global.ActionCard:
    name:
      CSharp:
      - id: Global.ActionCard
        name: ActionCard
        nameWithType: ActionCard
        qualifiedName: ActionCard
      VB:
      - id: Global.ActionCard
        name: ActionCard
        nameWithType: ActionCard
        qualifiedName: ActionCard
    isDefinition: true
    commentId: T:Global.ActionCard
  Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*
        name: ForbiddenActionCheck
        nameWithType: TurnsController.ForbiddenActionCheck
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*
        name: ForbiddenActionCheck
        nameWithType: TurnsController.ForbiddenActionCheck
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck
  Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*
        name: SetForbiddenActions
        nameWithType: TurnsController.SetForbiddenActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*
        name: SetForbiddenActions
        nameWithType: TurnsController.SetForbiddenActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.SetForbiddenActions
  Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*
        name: ReduceForbiddenActionsDuration
        nameWithType: TurnsController.ReduceForbiddenActionsDuration
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*
        name: ReduceForbiddenActionsDuration
        nameWithType: TurnsController.ReduceForbiddenActionsDuration
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
  Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*
        name: CalculateIncomingActions
        nameWithType: TurnsController.CalculateIncomingActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*
        name: CalculateIncomingActions
        nameWithType: TurnsController.CalculateIncomingActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions
  Timba.SacredTails.Arena.TurnsController.CheckEndMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEndMatch*
        name: CheckEndMatch
        nameWithType: TurnsController.CheckEndMatch
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEndMatch
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEndMatch*
        name: CheckEndMatch
        nameWithType: TurnsController.CheckEndMatch
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEndMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckEndMatch
  Timba.SacredTails.Arena.TurnsController.CheckDeadTime*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckDeadTime*
        name: CheckDeadTime
        nameWithType: TurnsController.CheckDeadTime
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckDeadTime
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckDeadTime*
        name: CheckDeadTime
        nameWithType: TurnsController.CheckDeadTime
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckDeadTime
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckDeadTime
  Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*
        name: WaitOponentTurn
        nameWithType: TurnsController.WaitOponentTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*
        name: WaitOponentTurn
        nameWithType: TurnsController.WaitOponentTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
  Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch*
        name: ShowForcedEndMatch
        nameWithType: TurnsController.ShowForcedEndMatch
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch*
        name: ShowForcedEndMatch
        nameWithType: TurnsController.ShowForcedEndMatch
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch
  Global.ActionCardDto:
    name:
      CSharp:
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
      VB:
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
    isDefinition: true
    commentId: T:Global.ActionCardDto
  Timba.SacredTails.Arena.TurnsController.CheckAlteredStates*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates*
        name: CheckAlteredStates
        nameWithType: TurnsController.CheckAlteredStates
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates*
        name: CheckAlteredStates
        nameWithType: TurnsController.CheckAlteredStates
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckAlteredStates
  System.Collections.Generic.List{ActionCardDto}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{ActionCardDto}
  Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*
        name: CheckIfAnyoneSurrendered
        nameWithType: TurnsController.CheckIfAnyoneSurrendered
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*
        name: CheckIfAnyoneSurrendered
        nameWithType: TurnsController.CheckIfAnyoneSurrendered
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered
  Timba.SacredTails.Arena.TurnsController.InitTurnFlow*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.InitTurnFlow*
        name: InitTurnFlow
        nameWithType: TurnsController.InitTurnFlow
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitTurnFlow
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.InitTurnFlow*
        name: InitTurnFlow
        nameWithType: TurnsController.InitTurnFlow
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitTurnFlow
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.InitTurnFlow
  Timba.SacredTails.Arena.TurnsController.WaitForSeconds*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.WaitForSeconds*
        name: WaitForSeconds
        nameWithType: TurnsController.WaitForSeconds
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitForSeconds
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.WaitForSeconds*
        name: WaitForSeconds
        nameWithType: TurnsController.WaitForSeconds
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitForSeconds
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.WaitForSeconds
  Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*
        name: CheckEnergyBarsAndInitNextTurn
        nameWithType: TurnsController.CheckEnergyBarsAndInitNextTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*
        name: CheckEnergyBarsAndInitNextTurn
        nameWithType: TurnsController.CheckEnergyBarsAndInitNextTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
  Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*
        name: CalculateEnergyRegen
        nameWithType: TurnsController.CalculateEnergyRegen
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*
        name: CalculateEnergyRegen
        nameWithType: TurnsController.CalculateEnergyRegen
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen
  Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*
        name: ExecuteServerAction
        nameWithType: TurnsController.ExecuteServerAction
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*
        name: ExecuteServerAction
        nameWithType: TurnsController.ExecuteServerAction
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ExecuteServerAction
  Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*
        name: GetTrueIndexCard
        nameWithType: TurnsController.GetTrueIndexCard
        qualifiedName: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*
        name: GetTrueIndexCard
        nameWithType: TurnsController.GetTrueIndexCard
        qualifiedName: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard
  Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*
        name: IsCompanion
        nameWithType: ShinseiSlot.IsCompanion
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*
        name: IsCompanion
        nameWithType: ShinseiSlot.IsCompanion
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
  Global.Image:
    name:
      CSharp:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Image'
  Global.Button:
    name:
      CSharp:
      - id: Global.Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
      VB:
      - id: Global.Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
    isDefinition: true
  Global.Slider:
    name:
      CSharp:
      - id: Global.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
      VB:
      - id: Global.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
    isDefinition: true
  Global.Color:
    name:
      CSharp:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Color'
  Global.UnityEvent`2:
    name:
      CSharp:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityEvent`2'
  Global.UnityEvent{System.Int32,Timba.SacredTails.Arena.ShinseiSlot}:
    name:
      CSharp:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`2
    commentId: '!:Global.UnityEvent{System.Int32,Timba.SacredTails.Arena.ShinseiSlot}'
  Global.PointerEventData:
    name:
      CSharp:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      VB:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
    isDefinition: true
    commentId: '!:Global.PointerEventData'
  Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*
        name: OnPointerClick
        nameWithType: ShinseiSlot.OnPointerClick
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*
        name: OnPointerClick
        nameWithType: ShinseiSlot.OnPointerClick
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick
  Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*
        name: UpdateVisual
        nameWithType: ShinseiSlot.UpdateVisual
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*
        name: UpdateVisual
        nameWithType: ShinseiSlot.UpdateVisual
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual
  Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*
        name: ChangeShinseiSlotValues
        nameWithType: ShinseiSlot.ChangeShinseiSlotValues
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*
        name: ChangeShinseiSlotValues
        nameWithType: ShinseiSlot.ChangeShinseiSlotValues
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues
  Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*
        name: ChangeInteractuable
        nameWithType: ShinseiSlot.ChangeInteractuable
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*
        name: ChangeInteractuable
        nameWithType: ShinseiSlot.ChangeInteractuable
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable
  Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*
        name: SetDataColor
        nameWithType: ShinseiSlot.SetDataColor
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*
        name: SetDataColor
        nameWithType: ShinseiSlot.SetDataColor
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
  Global.CharacterType:
    name:
      CSharp:
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
      VB:
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
    isDefinition: true
    commentId: T:Global.CharacterType
  Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*
        name: PopulateShinseiTypesSprites
        nameWithType: ShinseiSlot.PopulateShinseiTypesSprites
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*
        name: PopulateShinseiTypesSprites
        nameWithType: ShinseiSlot.PopulateShinseiTypesSprites
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites
  Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*
        name: GetClosestBattleSpawn
        nameWithType: GameSceneManager.GetClosestBattleSpawn
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*
        name: GetClosestBattleSpawn
        nameWithType: GameSceneManager.GetClosestBattleSpawn
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
  Timba.SacredTails.Arena.GameSceneManager.SendBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager.SendBattle*
        name: SendBattle
        nameWithType: GameSceneManager.SendBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.SendBattle
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager.SendBattle*
        name: SendBattle
        nameWithType: GameSceneManager.SendBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.SendBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.GameSceneManager.SendBattle
  Timba.SacredTails.Arena.GameSceneManager.EndBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager.EndBattle*
        name: EndBattle
        nameWithType: GameSceneManager.EndBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.EndBattle
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager.EndBattle*
        name: EndBattle
        nameWithType: GameSceneManager.EndBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.EndBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.GameSceneManager.EndBattle
  System.Collections.Generic.List{Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass}
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*
        name: GetShinseiTypes
        nameWithType: ShinseiTypeScriptable.GetShinseiTypes
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*
        name: GetShinseiTypes
        nameWithType: ShinseiTypeScriptable.GetShinseiTypes
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*
        name: CompareTypesAndGetDamage
        nameWithType: ShinseiTypeScriptable.CompareTypesAndGetDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*
        name: CompareTypesAndGetDamage
        nameWithType: ShinseiTypeScriptable.CompareTypesAndGetDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*
        name: GetMessageForTypeDamage
        nameWithType: ShinseiTypeScriptable.GetMessageForTypeDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*
        name: GetMessageForTypeDamage
        nameWithType: ShinseiTypeScriptable.GetMessageForTypeDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*
        name: SerializeShinseiTypeMatrix
        nameWithType: ShinseiTypeScriptable.SerializeShinseiTypeMatrix
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*
        name: SerializeShinseiTypeMatrix
        nameWithType: ShinseiTypeScriptable.SerializeShinseiTypeMatrix
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
        name: ShinseiTypeScriptable
        nameWithType: ShinseiTypeScriptable
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
        name: ShinseiTypeScriptable
        nameWithType: ShinseiTypeScriptable
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  System.Collections.Generic.List{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Single}
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
  Timba.SacredTails.Arena.ShinseiType:
    name:
      CSharp:
      - name: Timba.SacredTails.Arena.ShinseiType
        nameWithType: Timba.SacredTails.Arena.ShinseiType
        qualifiedName: Timba.SacredTails.Arena.ShinseiType
      VB:
      - name: Timba.SacredTails.Arena.ShinseiType
        nameWithType: Timba.SacredTails.Arena.ShinseiType
        qualifiedName: Timba.SacredTails.Arena.ShinseiType
    isDefinition: true
    commentId: N:Timba.SacredTails.Arena.ShinseiType
