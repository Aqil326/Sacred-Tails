id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Global
  language: CSharp
  name:
    CSharp: Global
    VB: ''
  nameWithType:
    CSharp: Global
    VB: ''
  qualifiedName:
    CSharp: Global
    VB: ''
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Global.AtlasTextures
    commentId: T:Global.AtlasTextures
    language: CSharp
    name:
      CSharp: AtlasTextures
      VB: AtlasTextures
    nameWithType:
      CSharp: AtlasTextures
      VB: AtlasTextures
    qualifiedName:
      CSharp: AtlasTextures
      VB: AtlasTextures
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AtlasTextures
      path: ''
      startLine: 5
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class AtlasTextures
        VB: >-
          <Serializable>

          Public Class AtlasTextures
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.AtlasTextures.Difuse
      commentId: F:Global.AtlasTextures.Difuse
      language: CSharp
      name:
        CSharp: Difuse
        VB: Difuse
      nameWithType:
        CSharp: AtlasTextures.Difuse
        VB: AtlasTextures.Difuse
      qualifiedName:
        CSharp: AtlasTextures.Difuse
        VB: AtlasTextures.Difuse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Difuse
        path: ''
        startLine: 9
      syntax:
        content:
          CSharp: public Texture2D Difuse
          VB: Public Difuse As Texture2D
        return:
          type: Global.Texture2D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AtlasTextures.Normal
      commentId: F:Global.AtlasTextures.Normal
      language: CSharp
      name:
        CSharp: Normal
        VB: Normal
      nameWithType:
        CSharp: AtlasTextures.Normal
        VB: AtlasTextures.Normal
      qualifiedName:
        CSharp: AtlasTextures.Normal
        VB: AtlasTextures.Normal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Normal
        path: ''
        startLine: 11
      syntax:
        content:
          CSharp: public Texture2D Normal
          VB: Public Normal As Texture2D
        return:
          type: Global.Texture2D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AtlasTextures.Metallic
      commentId: F:Global.AtlasTextures.Metallic
      language: CSharp
      name:
        CSharp: Metallic
        VB: Metallic
      nameWithType:
        CSharp: AtlasTextures.Metallic
        VB: AtlasTextures.Metallic
      qualifiedName:
        CSharp: AtlasTextures.Metallic
        VB: AtlasTextures.Metallic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Metallic
        path: ''
        startLine: 13
      syntax:
        content:
          CSharp: public Texture2D Metallic
          VB: Public Metallic As Texture2D
        return:
          type: Global.Texture2D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AtlasTextures.AmbientOclusion
      commentId: F:Global.AtlasTextures.AmbientOclusion
      language: CSharp
      name:
        CSharp: AmbientOclusion
        VB: AmbientOclusion
      nameWithType:
        CSharp: AtlasTextures.AmbientOclusion
        VB: AtlasTextures.AmbientOclusion
      qualifiedName:
        CSharp: AtlasTextures.AmbientOclusion
        VB: AtlasTextures.AmbientOclusion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AmbientOclusion
        path: ''
        startLine: 15
      syntax:
        content:
          CSharp: public Texture2D AmbientOclusion
          VB: Public AmbientOclusion As Texture2D
        return:
          type: Global.Texture2D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BodyStyle
    commentId: T:Global.BodyStyle
    language: CSharp
    name:
      CSharp: BodyStyle
      VB: BodyStyle
    nameWithType:
      CSharp: BodyStyle
      VB: BodyStyle
    qualifiedName:
      CSharp: BodyStyle
      VB: BodyStyle
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BodyStyle
      path: ''
      startLine: 23
    syntax:
      content:
        CSharp: 'public class BodyStyle : MonoBehaviour'
        VB: >-
          Public Class BodyStyle

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BodyStyle.bodyParts
      commentId: F:Global.BodyStyle.bodyParts
      language: CSharp
      name:
        CSharp: bodyParts
        VB: bodyParts
      nameWithType:
        CSharp: BodyStyle.bodyParts
        VB: BodyStyle.bodyParts
      qualifiedName:
        CSharp: BodyStyle.bodyParts
        VB: BodyStyle.bodyParts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bodyParts
        path: ''
        startLine: 25
      syntax:
        content:
          CSharp: public List<BodyStyle.BodyPartDressable> bodyParts
          VB: Public bodyParts As List(Of BodyStyle.BodyPartDressable)
        return:
          type: System.Collections.Generic.List{BodyStyle.BodyPartDressable}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BodyStyle.BodyPartDressable
    commentId: T:Global.BodyStyle.BodyPartDressable
    language: CSharp
    name:
      CSharp: BodyStyle.BodyPartDressable
      VB: BodyStyle.BodyPartDressable
    nameWithType:
      CSharp: BodyStyle.BodyPartDressable
      VB: BodyStyle.BodyPartDressable
    qualifiedName:
      CSharp: BodyStyle.BodyPartDressable
      VB: BodyStyle.BodyPartDressable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BodyPartDressable
      path: ''
      startLine: 27
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class BodyPartDressable
        VB: >-
          <Serializable>

          Public Class BodyPartDressable
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BodyStyle.BodyPartDressable.SelectObject(System.Int32,System.Boolean)
      commentId: M:Global.BodyStyle.BodyPartDressable.SelectObject(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: SelectObject(Int32, Boolean)
        VB: SelectObject(Int32, Boolean)
      nameWithType:
        CSharp: BodyStyle.BodyPartDressable.SelectObject(Int32, Boolean)
        VB: BodyStyle.BodyPartDressable.SelectObject(Int32, Boolean)
      qualifiedName:
        CSharp: BodyStyle.BodyPartDressable.SelectObject(System.Int32, System.Boolean)
        VB: BodyStyle.BodyPartDressable.SelectObject(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SelectObject
        path: ''
        startLine: 35
      syntax:
        content:
          CSharp: public void SelectObject(int index, bool isLocal = false)
          VB: Public Sub SelectObject(index As Integer, isLocal As Boolean = False)
        parameters:
        - id: index
          type: System.Int32
        - id: isLocal
          type: System.Boolean
      overload: Global.BodyStyle.BodyPartDressable.SelectObject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MaterialReskin
    commentId: T:Global.MaterialReskin
    language: CSharp
    name:
      CSharp: MaterialReskin
      VB: MaterialReskin
    nameWithType:
      CSharp: MaterialReskin
      VB: MaterialReskin
    qualifiedName:
      CSharp: MaterialReskin
      VB: MaterialReskin
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MaterialReskin
      path: ''
      startLine: 55
    syntax:
      content:
        CSharp: 'public class MaterialReskin : MonoBehaviour'
        VB: >-
          Public Class MaterialReskin

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MaterialReskin.skinList
      commentId: F:Global.MaterialReskin.skinList
      language: CSharp
      name:
        CSharp: skinList
        VB: skinList
      nameWithType:
        CSharp: MaterialReskin.skinList
        VB: MaterialReskin.skinList
      qualifiedName:
        CSharp: MaterialReskin.skinList
        VB: MaterialReskin.skinList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: skinList
        path: ''
        startLine: 65
      syntax:
        content:
          CSharp: public List<AtlasTextures> skinList
          VB: Public skinList As List(Of AtlasTextures)
        return:
          type: System.Collections.Generic.List{AtlasTextures}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MaterialReskin.InitReskin
      commentId: M:Global.MaterialReskin.InitReskin
      language: CSharp
      name:
        CSharp: InitReskin()
        VB: InitReskin()
      nameWithType:
        CSharp: MaterialReskin.InitReskin()
        VB: MaterialReskin.InitReskin()
      qualifiedName:
        CSharp: MaterialReskin.InitReskin()
        VB: MaterialReskin.InitReskin()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitReskin
        path: ''
        startLine: 72
      syntax:
        content:
          CSharp: public void InitReskin()
          VB: Public Sub InitReskin
      overload: Global.MaterialReskin.InitReskin*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MaterialReskin.Init
      commentId: M:Global.MaterialReskin.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: MaterialReskin.Init()
        VB: MaterialReskin.Init()
      qualifiedName:
        CSharp: MaterialReskin.Init()
        VB: MaterialReskin.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Init
        path: ''
        startLine: 80
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Global.MaterialReskin.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MaterialReskin.ChangePart(System.Int32,System.Int32)
      commentId: M:Global.MaterialReskin.ChangePart(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: ChangePart(Int32, Int32)
        VB: ChangePart(Int32, Int32)
      nameWithType:
        CSharp: MaterialReskin.ChangePart(Int32, Int32)
        VB: MaterialReskin.ChangePart(Int32, Int32)
      qualifiedName:
        CSharp: MaterialReskin.ChangePart(System.Int32, System.Int32)
        VB: MaterialReskin.ChangePart(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangePart
        path: ''
        startLine: 119
      syntax:
        content:
          CSharp: public void ChangePart(int targetSkin, int targetPosition)
          VB: Public Sub ChangePart(targetSkin As Integer, targetPosition As Integer)
        parameters:
        - id: targetSkin
          type: System.Int32
        - id: targetPosition
          type: System.Int32
      overload: Global.MaterialReskin.ChangePart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MaterialReskin.ChangePart
      commentId: M:Global.MaterialReskin.ChangePart
      language: CSharp
      name:
        CSharp: ChangePart()
        VB: ChangePart()
      nameWithType:
        CSharp: MaterialReskin.ChangePart()
        VB: MaterialReskin.ChangePart()
      qualifiedName:
        CSharp: MaterialReskin.ChangePart()
        VB: MaterialReskin.ChangePart()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangePart
        path: ''
        startLine: 142
      syntax:
        content:
          CSharp: public void ChangePart()
          VB: Public Sub ChangePart
      overload: Global.MaterialReskin.ChangePart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MaterialReskin.NormalMapToUnityFormat(Texture2D)
      commentId: M:Global.MaterialReskin.NormalMapToUnityFormat(Texture2D)
      language: CSharp
      name:
        CSharp: NormalMapToUnityFormat(Texture2D)
        VB: NormalMapToUnityFormat(Texture2D)
      nameWithType:
        CSharp: MaterialReskin.NormalMapToUnityFormat(Texture2D)
        VB: MaterialReskin.NormalMapToUnityFormat(Texture2D)
      qualifiedName:
        CSharp: MaterialReskin.NormalMapToUnityFormat(Texture2D)
        VB: MaterialReskin.NormalMapToUnityFormat(Texture2D)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: NormalMapToUnityFormat
        path: ''
        startLine: 164
      syntax:
        content:
          CSharp: public static Texture2D NormalMapToUnityFormat(Texture2D normalMap)
          VB: Public Shared Function NormalMapToUnityFormat(normalMap As Texture2D) As Texture2D
        parameters:
        - id: normalMap
          type: Global.Texture2D
        return:
          type: Global.Texture2D
      overload: Global.MaterialReskin.NormalMapToUnityFormat*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.BoneAnimationTracker
    commentId: T:Global.BoneAnimationTracker
    language: CSharp
    name:
      CSharp: BoneAnimationTracker
      VB: BoneAnimationTracker
    nameWithType:
      CSharp: BoneAnimationTracker
      VB: BoneAnimationTracker
    qualifiedName:
      CSharp: BoneAnimationTracker
      VB: BoneAnimationTracker
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BoneAnimationTracker
      path: ''
      startLine: 184
    syntax:
      content:
        CSharp: 'public class BoneAnimationTracker : MonoBehaviour'
        VB: >-
          Public Class BoneAnimationTracker

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BoneAnimationTracker.boneTracker
      commentId: F:Global.BoneAnimationTracker.boneTracker
      language: CSharp
      name:
        CSharp: boneTracker
        VB: boneTracker
      nameWithType:
        CSharp: BoneAnimationTracker.boneTracker
        VB: BoneAnimationTracker.boneTracker
      qualifiedName:
        CSharp: BoneAnimationTracker.boneTracker
        VB: BoneAnimationTracker.boneTracker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: boneTracker
        path: ''
        startLine: 186
      syntax:
        content:
          CSharp: public GameObject boneTracker
          VB: Public boneTracker As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BoneAnimationTracker.matAnimations
      commentId: F:Global.BoneAnimationTracker.matAnimations
      language: CSharp
      name:
        CSharp: matAnimations
        VB: matAnimations
      nameWithType:
        CSharp: BoneAnimationTracker.matAnimations
        VB: BoneAnimationTracker.matAnimations
      qualifiedName:
        CSharp: BoneAnimationTracker.matAnimations
        VB: BoneAnimationTracker.matAnimations
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: matAnimations
        path: ''
        startLine: 187
      syntax:
        content:
          CSharp: public List<MatAnimation> matAnimations
          VB: Public matAnimations As List(Of MatAnimation)
        return:
          type: System.Collections.Generic.List{MatAnimation}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BoneAnimationTracker.materials
      commentId: F:Global.BoneAnimationTracker.materials
      language: CSharp
      name:
        CSharp: materials
        VB: materials
      nameWithType:
        CSharp: BoneAnimationTracker.materials
        VB: BoneAnimationTracker.materials
      qualifiedName:
        CSharp: BoneAnimationTracker.materials
        VB: BoneAnimationTracker.materials
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: materials
        path: ''
        startLine: 188
      syntax:
        content:
          CSharp: public List<Material> materials
          VB: Public materials As List(Of Material)
        return:
          type: System.Collections.Generic.List{Material}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BoneAnimationTracker.Update
      commentId: M:Global.BoneAnimationTracker.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: BoneAnimationTracker.Update()
        VB: BoneAnimationTracker.Update()
      qualifiedName:
        CSharp: BoneAnimationTracker.Update()
        VB: BoneAnimationTracker.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Update
        path: ''
        startLine: 191
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: Global.BoneAnimationTracker.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BoneAnimationTracker.VerifyAllMatAnimations(MatAnimation.AttachedEdge,System.Single)
      commentId: M:Global.BoneAnimationTracker.VerifyAllMatAnimations(MatAnimation.AttachedEdge,System.Single)
      language: CSharp
      name:
        CSharp: VerifyAllMatAnimations(MatAnimation.AttachedEdge, Single)
        VB: VerifyAllMatAnimations(MatAnimation.AttachedEdge, Single)
      nameWithType:
        CSharp: BoneAnimationTracker.VerifyAllMatAnimations(MatAnimation.AttachedEdge, Single)
        VB: BoneAnimationTracker.VerifyAllMatAnimations(MatAnimation.AttachedEdge, Single)
      qualifiedName:
        CSharp: BoneAnimationTracker.VerifyAllMatAnimations(MatAnimation.AttachedEdge, System.Single)
        VB: BoneAnimationTracker.VerifyAllMatAnimations(MatAnimation.AttachedEdge, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: VerifyAllMatAnimations
        path: ''
        startLine: 210
      syntax:
        content:
          CSharp: public void VerifyAllMatAnimations(MatAnimation.AttachedEdge targetAttachedEdge, float bonePositionEdge)
          VB: Public Sub VerifyAllMatAnimations(targetAttachedEdge As MatAnimation.AttachedEdge, bonePositionEdge As Single)
        parameters:
        - id: targetAttachedEdge
          type: Global.MatAnimation.AttachedEdge
        - id: bonePositionEdge
          type: System.Single
      overload: Global.BoneAnimationTracker.VerifyAllMatAnimations*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MatAnimation
    commentId: T:Global.MatAnimation
    language: CSharp
    name:
      CSharp: MatAnimation
      VB: MatAnimation
    nameWithType:
      CSharp: MatAnimation
      VB: MatAnimation
    qualifiedName:
      CSharp: MatAnimation
      VB: MatAnimation
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MatAnimation
      path: ''
      startLine: 218
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct MatAnimation
        VB: >-
          <Serializable>

          Public Structure MatAnimation
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.MatAnimation.matIndex
      commentId: F:Global.MatAnimation.matIndex
      language: CSharp
      name:
        CSharp: matIndex
        VB: matIndex
      nameWithType:
        CSharp: MatAnimation.matIndex
        VB: MatAnimation.matIndex
      qualifiedName:
        CSharp: MatAnimation.matIndex
        VB: MatAnimation.matIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: matIndex
        path: ''
        startLine: 228
      syntax:
        content:
          CSharp: public int matIndex
          VB: Public matIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MatAnimation.targetValue
      commentId: F:Global.MatAnimation.targetValue
      language: CSharp
      name:
        CSharp: targetValue
        VB: targetValue
      nameWithType:
        CSharp: MatAnimation.targetValue
        VB: MatAnimation.targetValue
      qualifiedName:
        CSharp: MatAnimation.targetValue
        VB: MatAnimation.targetValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: targetValue
        path: ''
        startLine: 229
      syntax:
        content:
          CSharp: public float targetValue
          VB: Public targetValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MatAnimation.attachedEdge
      commentId: F:Global.MatAnimation.attachedEdge
      language: CSharp
      name:
        CSharp: attachedEdge
        VB: attachedEdge
      nameWithType:
        CSharp: MatAnimation.attachedEdge
        VB: MatAnimation.attachedEdge
      qualifiedName:
        CSharp: MatAnimation.attachedEdge
        VB: MatAnimation.attachedEdge
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: attachedEdge
        path: ''
        startLine: 230
      syntax:
        content:
          CSharp: public MatAnimation.AttachedEdge attachedEdge
          VB: Public attachedEdge As MatAnimation.AttachedEdge
        return:
          type: Global.MatAnimation.AttachedEdge
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MatAnimation.image
      commentId: F:Global.MatAnimation.image
      language: CSharp
      name:
        CSharp: image
        VB: image
      nameWithType:
        CSharp: MatAnimation.image
        VB: MatAnimation.image
      qualifiedName:
        CSharp: MatAnimation.image
        VB: MatAnimation.image
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: image
        path: ''
        startLine: 231
      syntax:
        content:
          CSharp: public Texture2D image
          VB: Public image As Texture2D
        return:
          type: Global.Texture2D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MatAnimation.AttachedEdge
    commentId: T:Global.MatAnimation.AttachedEdge
    language: CSharp
    name:
      CSharp: MatAnimation.AttachedEdge
      VB: MatAnimation.AttachedEdge
    nameWithType:
      CSharp: MatAnimation.AttachedEdge
      VB: MatAnimation.AttachedEdge
    qualifiedName:
      CSharp: MatAnimation.AttachedEdge
      VB: MatAnimation.AttachedEdge
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AttachedEdge
      path: ''
      startLine: 221
    syntax:
      content:
        CSharp: public enum AttachedEdge
        VB: Public Enum AttachedEdge
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.MatAnimation.AttachedEdge.x
      commentId: F:Global.MatAnimation.AttachedEdge.x
      language: CSharp
      name:
        CSharp: x
        VB: x
      nameWithType:
        CSharp: MatAnimation.AttachedEdge.x
        VB: MatAnimation.AttachedEdge.x
      qualifiedName:
        CSharp: MatAnimation.AttachedEdge.x
        VB: MatAnimation.AttachedEdge.x
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: x
        path: ''
        startLine: 223
      syntax:
        content:
          CSharp: x = 0
          VB: x = 0
        return:
          type: Global.MatAnimation.AttachedEdge
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.MatAnimation.AttachedEdge.y
      commentId: F:Global.MatAnimation.AttachedEdge.y
      language: CSharp
      name:
        CSharp: y
        VB: y
      nameWithType:
        CSharp: MatAnimation.AttachedEdge.y
        VB: MatAnimation.AttachedEdge.y
      qualifiedName:
        CSharp: MatAnimation.AttachedEdge.y
        VB: MatAnimation.AttachedEdge.y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: y
        path: ''
        startLine: 224
      syntax:
        content:
          CSharp: y = 1
          VB: y = 1
        return:
          type: Global.MatAnimation.AttachedEdge
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.MatAnimation.AttachedEdge.z
      commentId: F:Global.MatAnimation.AttachedEdge.z
      language: CSharp
      name:
        CSharp: z
        VB: z
      nameWithType:
        CSharp: MatAnimation.AttachedEdge.z
        VB: MatAnimation.AttachedEdge.z
      qualifiedName:
        CSharp: MatAnimation.AttachedEdge.z
        VB: MatAnimation.AttachedEdge.z
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: z
        path: ''
        startLine: 225
      syntax:
        content:
          CSharp: z = 2
          VB: z = 2
        return:
          type: Global.MatAnimation.AttachedEdge
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.Decolorator
    commentId: T:Global.Decolorator
    language: CSharp
    name:
      CSharp: Decolorator
      VB: Decolorator
    nameWithType:
      CSharp: Decolorator
      VB: Decolorator
    qualifiedName:
      CSharp: Decolorator
      VB: Decolorator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Decolorator
      path: ''
      startLine: 242
    syntax:
      content:
        CSharp: 'public class Decolorator : MonoBehaviour'
        VB: >-
          Public Class Decolorator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.Decolorator.computeShader
      commentId: F:Global.Decolorator.computeShader
      language: CSharp
      name:
        CSharp: computeShader
        VB: computeShader
      nameWithType:
        CSharp: Decolorator.computeShader
        VB: Decolorator.computeShader
      qualifiedName:
        CSharp: Decolorator.computeShader
        VB: Decolorator.computeShader
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: computeShader
        path: ''
        startLine: 245
      syntax:
        content:
          CSharp: public ComputeShader computeShader
          VB: Public computeShader As ComputeShader
        return:
          type: Global.ComputeShader
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Decolorator.imageList
      commentId: F:Global.Decolorator.imageList
      language: CSharp
      name:
        CSharp: imageList
        VB: imageList
      nameWithType:
        CSharp: Decolorator.imageList
        VB: Decolorator.imageList
      qualifiedName:
        CSharp: Decolorator.imageList
        VB: Decolorator.imageList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: imageList
        path: ''
        startLine: 246
      syntax:
        content:
          CSharp: public List<Image> imageList
          VB: Public imageList As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Decolorator.textures
      commentId: F:Global.Decolorator.textures
      language: CSharp
      name:
        CSharp: textures
        VB: textures
      nameWithType:
        CSharp: Decolorator.textures
        VB: Decolorator.textures
      qualifiedName:
        CSharp: Decolorator.textures
        VB: Decolorator.textures
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: textures
        path: ''
        startLine: 248
      syntax:
        content:
          CSharp: public List<Texture> textures
          VB: Public textures As List(Of Texture)
        return:
          type: System.Collections.Generic.List{Texture}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Decolorator.Init(System.Collections.Generic.List{Image})
      commentId: M:Global.Decolorator.Init(System.Collections.Generic.List{Image})
      language: CSharp
      name:
        CSharp: Init(List<Image>)
        VB: Init(List(Of Image))
      nameWithType:
        CSharp: Decolorator.Init(List<Image>)
        VB: Decolorator.Init(List(Of Image))
      qualifiedName:
        CSharp: Decolorator.Init(System.Collections.Generic.List<Image>)
        VB: Decolorator.Init(System.Collections.Generic.List(Of Image))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Init
        path: ''
        startLine: 252
      syntax:
        content:
          CSharp: public void Init(List<Image> targetImages)
          VB: Public Sub Init(targetImages As List(Of Image))
        parameters:
        - id: targetImages
          type: System.Collections.Generic.List{Image}
      overload: Global.Decolorator.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Decolorator.BlackAndWhite
      commentId: M:Global.Decolorator.BlackAndWhite
      language: CSharp
      name:
        CSharp: BlackAndWhite()
        VB: BlackAndWhite()
      nameWithType:
        CSharp: Decolorator.BlackAndWhite()
        VB: Decolorator.BlackAndWhite()
      qualifiedName:
        CSharp: Decolorator.BlackAndWhite()
        VB: Decolorator.BlackAndWhite()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BlackAndWhite
        path: ''
        startLine: 262
      syntax:
        content:
          CSharp: public void BlackAndWhite()
          VB: Public Sub BlackAndWhite
      overload: Global.Decolorator.BlackAndWhite*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Decolorator.Color
      commentId: M:Global.Decolorator.Color
      language: CSharp
      name:
        CSharp: Color()
        VB: Color()
      nameWithType:
        CSharp: Decolorator.Color()
        VB: Decolorator.Color()
      qualifiedName:
        CSharp: Decolorator.Color()
        VB: Decolorator.Color()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Color
        path: ''
        startLine: 289
      syntax:
        content:
          CSharp: public void Color()
          VB: Public Sub Color
      overload: Global.Decolorator.Color*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.SelectableUi
    commentId: T:Global.SelectableUi
    language: CSharp
    name:
      CSharp: SelectableUi
      VB: SelectableUi
    nameWithType:
      CSharp: SelectableUi
      VB: SelectableUi
    qualifiedName:
      CSharp: SelectableUi
      VB: SelectableUi
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SelectableUi
      path: ''
      startLine: 315
    syntax:
      content:
        CSharp: 'public class SelectableUi : MonoBehaviour'
        VB: >-
          Public Class SelectableUi

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SelectableUi.selectableButtons
      commentId: F:Global.SelectableUi.selectableButtons
      language: CSharp
      name:
        CSharp: selectableButtons
        VB: selectableButtons
      nameWithType:
        CSharp: SelectableUi.selectableButtons
        VB: SelectableUi.selectableButtons
      qualifiedName:
        CSharp: SelectableUi.selectableButtons
        VB: SelectableUi.selectableButtons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: selectableButtons
        path: ''
        startLine: 317
      syntax:
        content:
          CSharp: public List<SelectableUiButton> selectableButtons
          VB: Public selectableButtons As List(Of SelectableUiButton)
        return:
          type: System.Collections.Generic.List{SelectableUiButton}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SelectableUi.selectable
      commentId: F:Global.SelectableUi.selectable
      language: CSharp
      name:
        CSharp: selectable
        VB: selectable
      nameWithType:
        CSharp: SelectableUi.selectable
        VB: SelectableUi.selectable
      qualifiedName:
        CSharp: SelectableUi.selectable
        VB: SelectableUi.selectable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: selectable
        path: ''
        startLine: 318
      syntax:
        content:
          CSharp: public int selectable
          VB: Public selectable As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SelectableUi.dontAddOnClickToButtons
      commentId: F:Global.SelectableUi.dontAddOnClickToButtons
      language: CSharp
      name:
        CSharp: dontAddOnClickToButtons
        VB: dontAddOnClickToButtons
      nameWithType:
        CSharp: SelectableUi.dontAddOnClickToButtons
        VB: SelectableUi.dontAddOnClickToButtons
      qualifiedName:
        CSharp: SelectableUi.dontAddOnClickToButtons
        VB: SelectableUi.dontAddOnClickToButtons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: dontAddOnClickToButtons
        path: ''
        startLine: 319
      syntax:
        content:
          CSharp: public bool dontAddOnClickToButtons
          VB: Public dontAddOnClickToButtons As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SelectableUi.Awake
      commentId: M:Global.SelectableUi.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: SelectableUi.Awake()
        VB: SelectableUi.Awake()
      qualifiedName:
        CSharp: SelectableUi.Awake()
        VB: SelectableUi.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Awake
        path: ''
        startLine: 321
      syntax:
        content:
          CSharp: public void Awake()
          VB: Public Sub Awake
      overload: Global.SelectableUi.Awake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SelectableUi.InitButtons
      commentId: M:Global.SelectableUi.InitButtons
      language: CSharp
      name:
        CSharp: InitButtons()
        VB: InitButtons()
      nameWithType:
        CSharp: SelectableUi.InitButtons()
        VB: SelectableUi.InitButtons()
      qualifiedName:
        CSharp: SelectableUi.InitButtons()
        VB: SelectableUi.InitButtons()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitButtons
        path: ''
        startLine: 326
      syntax:
        content:
          CSharp: public void InitButtons()
          VB: Public Sub InitButtons
      overload: Global.SelectableUi.InitButtons*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SelectableUi.OnClick(SelectableUiButton,System.Boolean)
      commentId: M:Global.SelectableUi.OnClick(SelectableUiButton,System.Boolean)
      language: CSharp
      name:
        CSharp: OnClick(SelectableUiButton, Boolean)
        VB: OnClick(SelectableUiButton, Boolean)
      nameWithType:
        CSharp: SelectableUi.OnClick(SelectableUiButton, Boolean)
        VB: SelectableUi.OnClick(SelectableUiButton, Boolean)
      qualifiedName:
        CSharp: SelectableUi.OnClick(SelectableUiButton, System.Boolean)
        VB: SelectableUi.OnClick(SelectableUiButton, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnClick
        path: ''
        startLine: 339
      syntax:
        content:
          CSharp: public void OnClick(SelectableUiButton selectableUiButton, bool selected = false)
          VB: Public Sub OnClick(selectableUiButton As SelectableUiButton, selected As Boolean = False)
        parameters:
        - id: selectableUiButton
          type: Global.SelectableUiButton
        - id: selected
          type: System.Boolean
      overload: Global.SelectableUi.OnClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SelectableUi.TryChangeStateToSelectable
      commentId: M:Global.SelectableUi.TryChangeStateToSelectable
      language: CSharp
      name:
        CSharp: TryChangeStateToSelectable()
        VB: TryChangeStateToSelectable()
      nameWithType:
        CSharp: SelectableUi.TryChangeStateToSelectable()
        VB: SelectableUi.TryChangeStateToSelectable()
      qualifiedName:
        CSharp: SelectableUi.TryChangeStateToSelectable()
        VB: SelectableUi.TryChangeStateToSelectable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TryChangeStateToSelectable
        path: ''
        startLine: 356
      syntax:
        content:
          CSharp: public void TryChangeStateToSelectable()
          VB: Public Sub TryChangeStateToSelectable
      overload: Global.SelectableUi.TryChangeStateToSelectable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.SelectableUiButton
    commentId: T:Global.SelectableUiButton
    language: CSharp
    name:
      CSharp: SelectableUiButton
      VB: SelectableUiButton
    nameWithType:
      CSharp: SelectableUiButton
      VB: SelectableUiButton
    qualifiedName:
      CSharp: SelectableUiButton
      VB: SelectableUiButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SelectableUiButton
      path: ''
      startLine: 378
    syntax:
      content:
        CSharp: 'public class SelectableUiButton : MonoBehaviour'
        VB: >-
          Public Class SelectableUiButton

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SelectableUiButton.button
      commentId: F:Global.SelectableUiButton.button
      language: CSharp
      name:
        CSharp: button
        VB: button
      nameWithType:
        CSharp: SelectableUiButton.button
        VB: SelectableUiButton.button
      qualifiedName:
        CSharp: SelectableUiButton.button
        VB: SelectableUiButton.button
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: button
        path: ''
        startLine: 380
      syntax:
        content:
          CSharp: public Button button
          VB: Public button As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SelectableUiButton.SetSelected
      commentId: M:Global.SelectableUiButton.SetSelected
      language: CSharp
      name:
        CSharp: SetSelected()
        VB: SetSelected()
      nameWithType:
        CSharp: SelectableUiButton.SetSelected()
        VB: SelectableUiButton.SetSelected()
      qualifiedName:
        CSharp: SelectableUiButton.SetSelected()
        VB: SelectableUiButton.SetSelected()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetSelected
        path: ''
        startLine: 398
      syntax:
        content:
          CSharp: public void SetSelected()
          VB: Public Sub SetSelected
      overload: Global.SelectableUiButton.SetSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SelectableUiButton.SetUnselected
      commentId: M:Global.SelectableUiButton.SetUnselected
      language: CSharp
      name:
        CSharp: SetUnselected()
        VB: SetUnselected()
      nameWithType:
        CSharp: SelectableUiButton.SetUnselected()
        VB: SelectableUiButton.SetUnselected()
      qualifiedName:
        CSharp: SelectableUiButton.SetUnselected()
        VB: SelectableUiButton.SetUnselected()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetUnselected
        path: ''
        startLine: 406
      syntax:
        content:
          CSharp: public void SetUnselected()
          VB: Public Sub SetUnselected
      overload: Global.SelectableUiButton.SetUnselected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SelectableUiButton.SetEnable
      commentId: M:Global.SelectableUiButton.SetEnable
      language: CSharp
      name:
        CSharp: SetEnable()
        VB: SetEnable()
      nameWithType:
        CSharp: SelectableUiButton.SetEnable()
        VB: SelectableUiButton.SetEnable()
      qualifiedName:
        CSharp: SelectableUiButton.SetEnable()
        VB: SelectableUiButton.SetEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetEnable
        path: ''
        startLine: 414
      syntax:
        content:
          CSharp: public void SetEnable()
          VB: Public Sub SetEnable
      overload: Global.SelectableUiButton.SetEnable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SelectableUiButton.SetDisable
      commentId: M:Global.SelectableUiButton.SetDisable
      language: CSharp
      name:
        CSharp: SetDisable()
        VB: SetDisable()
      nameWithType:
        CSharp: SelectableUiButton.SetDisable()
        VB: SelectableUiButton.SetDisable()
      qualifiedName:
        CSharp: SelectableUiButton.SetDisable()
        VB: SelectableUiButton.SetDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetDisable
        path: ''
        startLine: 421
      syntax:
        content:
          CSharp: public void SetDisable()
          VB: Public Sub SetDisable
      overload: Global.SelectableUiButton.SetDisable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ForwardMovement
    commentId: T:Global.ForwardMovement
    language: CSharp
    name:
      CSharp: ForwardMovement
      VB: ForwardMovement
    nameWithType:
      CSharp: ForwardMovement
      VB: ForwardMovement
    qualifiedName:
      CSharp: ForwardMovement
      VB: ForwardMovement
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ForwardMovement
      path: ''
      startLine: 457
    syntax:
      content:
        CSharp: 'public class ForwardMovement : MonoBehaviour'
        VB: >-
          Public Class ForwardMovement

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.RotatorPillow
    commentId: T:Global.RotatorPillow
    language: CSharp
    name:
      CSharp: RotatorPillow
      VB: RotatorPillow
    nameWithType:
      CSharp: RotatorPillow
      VB: RotatorPillow
    qualifiedName:
      CSharp: RotatorPillow
      VB: RotatorPillow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RotatorPillow
      path: ''
      startLine: 470
    syntax:
      content:
        CSharp: 'public class RotatorPillow : MonoBehaviour'
        VB: >-
          Public Class RotatorPillow

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.HS_CameraController
    commentId: T:Global.HS_CameraController
    language: CSharp
    name:
      CSharp: HS_CameraController
      VB: HS_CameraController
    nameWithType:
      CSharp: HS_CameraController
      VB: HS_CameraController
    qualifiedName:
      CSharp: HS_CameraController
      VB: HS_CameraController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HS_CameraController
      path: ''
      startLine: 1705
    syntax:
      content:
        CSharp: 'public class HS_CameraController : MonoBehaviour'
        VB: >-
          Public Class HS_CameraController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.HS_CameraController.Holder
      commentId: F:Global.HS_CameraController.Holder
      language: CSharp
      name:
        CSharp: Holder
        VB: Holder
      nameWithType:
        CSharp: HS_CameraController.Holder
        VB: HS_CameraController.Holder
      qualifiedName:
        CSharp: HS_CameraController.Holder
        VB: HS_CameraController.Holder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Holder
        path: ''
        startLine: 1708
      syntax:
        content:
          CSharp: public Transform Holder
          VB: Public Holder As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraController.cameraPos
      commentId: F:Global.HS_CameraController.cameraPos
      language: CSharp
      name:
        CSharp: cameraPos
        VB: cameraPos
      nameWithType:
        CSharp: HS_CameraController.cameraPos
        VB: HS_CameraController.cameraPos
      qualifiedName:
        CSharp: HS_CameraController.cameraPos
        VB: HS_CameraController.cameraPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: cameraPos
        path: ''
        startLine: 1709
      syntax:
        content:
          CSharp: public Vector3 cameraPos
          VB: Public cameraPos As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraController.currDistance
      commentId: F:Global.HS_CameraController.currDistance
      language: CSharp
      name:
        CSharp: currDistance
        VB: currDistance
      nameWithType:
        CSharp: HS_CameraController.currDistance
        VB: HS_CameraController.currDistance
      qualifiedName:
        CSharp: HS_CameraController.currDistance
        VB: HS_CameraController.currDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currDistance
        path: ''
        startLine: 1710
      syntax:
        content:
          CSharp: public float currDistance
          VB: Public currDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraController.xRotate
      commentId: F:Global.HS_CameraController.xRotate
      language: CSharp
      name:
        CSharp: xRotate
        VB: xRotate
      nameWithType:
        CSharp: HS_CameraController.xRotate
        VB: HS_CameraController.xRotate
      qualifiedName:
        CSharp: HS_CameraController.xRotate
        VB: HS_CameraController.xRotate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: xRotate
        path: ''
        startLine: 1711
      syntax:
        content:
          CSharp: public float xRotate
          VB: Public xRotate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraController.yRotate
      commentId: F:Global.HS_CameraController.yRotate
      language: CSharp
      name:
        CSharp: yRotate
        VB: yRotate
      nameWithType:
        CSharp: HS_CameraController.yRotate
        VB: HS_CameraController.yRotate
      qualifiedName:
        CSharp: HS_CameraController.yRotate
        VB: HS_CameraController.yRotate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yRotate
        path: ''
        startLine: 1712
      syntax:
        content:
          CSharp: public float yRotate
          VB: Public yRotate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraController.yMinLimit
      commentId: F:Global.HS_CameraController.yMinLimit
      language: CSharp
      name:
        CSharp: yMinLimit
        VB: yMinLimit
      nameWithType:
        CSharp: HS_CameraController.yMinLimit
        VB: HS_CameraController.yMinLimit
      qualifiedName:
        CSharp: HS_CameraController.yMinLimit
        VB: HS_CameraController.yMinLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yMinLimit
        path: ''
        startLine: 1713
      syntax:
        content:
          CSharp: public float yMinLimit
          VB: Public yMinLimit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraController.yMaxLimit
      commentId: F:Global.HS_CameraController.yMaxLimit
      language: CSharp
      name:
        CSharp: yMaxLimit
        VB: yMaxLimit
      nameWithType:
        CSharp: HS_CameraController.yMaxLimit
        VB: HS_CameraController.yMaxLimit
      qualifiedName:
        CSharp: HS_CameraController.yMaxLimit
        VB: HS_CameraController.yMaxLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yMaxLimit
        path: ''
        startLine: 1714
      syntax:
        content:
          CSharp: public float yMaxLimit
          VB: Public yMaxLimit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraController.prevDistance
      commentId: F:Global.HS_CameraController.prevDistance
      language: CSharp
      name:
        CSharp: prevDistance
        VB: prevDistance
      nameWithType:
        CSharp: HS_CameraController.prevDistance
        VB: HS_CameraController.prevDistance
      qualifiedName:
        CSharp: HS_CameraController.prevDistance
        VB: HS_CameraController.prevDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: prevDistance
        path: ''
        startLine: 1715
      syntax:
        content:
          CSharp: public float prevDistance
          VB: Public prevDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraController.collidingLayers
      commentId: F:Global.HS_CameraController.collidingLayers
      language: CSharp
      name:
        CSharp: collidingLayers
        VB: collidingLayers
      nameWithType:
        CSharp: HS_CameraController.collidingLayers
        VB: HS_CameraController.collidingLayers
      qualifiedName:
        CSharp: HS_CameraController.collidingLayers
        VB: HS_CameraController.collidingLayers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: collidingLayers
        path: ''
        startLine: 1721
      syntax:
        content:
          CSharp: public LayerMask collidingLayers
          VB: Public collidingLayers As LayerMask
        return:
          type: Global.LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.HS_CameraShaker
    commentId: T:Global.HS_CameraShaker
    language: CSharp
    name:
      CSharp: HS_CameraShaker
      VB: HS_CameraShaker
    nameWithType:
      CSharp: HS_CameraShaker
      VB: HS_CameraShaker
    qualifiedName:
      CSharp: HS_CameraShaker
      VB: HS_CameraShaker
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HS_CameraShaker
      path: ''
      startLine: 1806
    syntax:
      content:
        CSharp: 'public class HS_CameraShaker : MonoBehaviour'
        VB: >-
          Public Class HS_CameraShaker

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.HS_CameraShaker.cameraObject
      commentId: F:Global.HS_CameraShaker.cameraObject
      language: CSharp
      name:
        CSharp: cameraObject
        VB: cameraObject
      nameWithType:
        CSharp: HS_CameraShaker.cameraObject
        VB: HS_CameraShaker.cameraObject
      qualifiedName:
        CSharp: HS_CameraShaker.cameraObject
        VB: HS_CameraShaker.cameraObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: cameraObject
        path: ''
        startLine: 1808
      syntax:
        content:
          CSharp: public Transform cameraObject
          VB: Public cameraObject As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraShaker.amplitude
      commentId: F:Global.HS_CameraShaker.amplitude
      language: CSharp
      name:
        CSharp: amplitude
        VB: amplitude
      nameWithType:
        CSharp: HS_CameraShaker.amplitude
        VB: HS_CameraShaker.amplitude
      qualifiedName:
        CSharp: HS_CameraShaker.amplitude
        VB: HS_CameraShaker.amplitude
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: amplitude
        path: ''
        startLine: 1809
      syntax:
        content:
          CSharp: public float amplitude
          VB: Public amplitude As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraShaker.frequency
      commentId: F:Global.HS_CameraShaker.frequency
      language: CSharp
      name:
        CSharp: frequency
        VB: frequency
      nameWithType:
        CSharp: HS_CameraShaker.frequency
        VB: HS_CameraShaker.frequency
      qualifiedName:
        CSharp: HS_CameraShaker.frequency
        VB: HS_CameraShaker.frequency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: frequency
        path: ''
        startLine: 1810
      syntax:
        content:
          CSharp: public float frequency
          VB: Public frequency As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraShaker.duration
      commentId: F:Global.HS_CameraShaker.duration
      language: CSharp
      name:
        CSharp: duration
        VB: duration
      nameWithType:
        CSharp: HS_CameraShaker.duration
        VB: HS_CameraShaker.duration
      qualifiedName:
        CSharp: HS_CameraShaker.duration
        VB: HS_CameraShaker.duration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: duration
        path: ''
        startLine: 1811
      syntax:
        content:
          CSharp: public float duration
          VB: Public duration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraShaker.timeRemaining
      commentId: F:Global.HS_CameraShaker.timeRemaining
      language: CSharp
      name:
        CSharp: timeRemaining
        VB: timeRemaining
      nameWithType:
        CSharp: HS_CameraShaker.timeRemaining
        VB: HS_CameraShaker.timeRemaining
      qualifiedName:
        CSharp: HS_CameraShaker.timeRemaining
        VB: HS_CameraShaker.timeRemaining
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: timeRemaining
        path: ''
        startLine: 1812
      syntax:
        content:
          CSharp: public float timeRemaining
          VB: Public timeRemaining As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HS_CameraShaker.Shake(System.Single,System.Single,System.Single,System.Single)
      commentId: M:Global.HS_CameraShaker.Shake(System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Shake(Single, Single, Single, Single)
        VB: Shake(Single, Single, Single, Single)
      nameWithType:
        CSharp: HS_CameraShaker.Shake(Single, Single, Single, Single)
        VB: HS_CameraShaker.Shake(Single, Single, Single, Single)
      qualifiedName:
        CSharp: HS_CameraShaker.Shake(System.Single, System.Single, System.Single, System.Single)
        VB: HS_CameraShaker.Shake(System.Single, System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Shake
        path: ''
        startLine: 1825
      syntax:
        content:
          CSharp: public IEnumerator Shake(float amp, float freq, float dur, float wait)
          VB: Public Function Shake(amp As Single, freq As Single, dur As Single, wait As Single) As IEnumerator
        parameters:
        - id: amp
          type: System.Single
        - id: freq
          type: System.Single
        - id: dur
          type: System.Single
        - id: wait
          type: System.Single
        return:
          type: System.Collections.IEnumerator
      overload: Global.HS_CameraShaker.Shake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.WhiteMageController
    commentId: T:Global.WhiteMageController
    language: CSharp
    name:
      CSharp: WhiteMageController
      VB: WhiteMageController
    nameWithType:
      CSharp: WhiteMageController
      VB: WhiteMageController
    qualifiedName:
      CSharp: WhiteMageController
      VB: WhiteMageController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: WhiteMageController
      path: ''
      startLine: 1887
    syntax:
      content:
        CSharp: 'public class WhiteMageController : MonoBehaviour'
        VB: >-
          Public Class WhiteMageController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.WhiteMageController.velocity
      commentId: F:Global.WhiteMageController.velocity
      language: CSharp
      name:
        CSharp: velocity
        VB: velocity
      nameWithType:
        CSharp: WhiteMageController.velocity
        VB: WhiteMageController.velocity
      qualifiedName:
        CSharp: WhiteMageController.velocity
        VB: WhiteMageController.velocity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: velocity
        path: ''
        startLine: 1890
      syntax:
        content:
          CSharp: public float velocity
          VB: Public velocity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.InputX
      commentId: F:Global.WhiteMageController.InputX
      language: CSharp
      name:
        CSharp: InputX
        VB: InputX
      nameWithType:
        CSharp: WhiteMageController.InputX
        VB: WhiteMageController.InputX
      qualifiedName:
        CSharp: WhiteMageController.InputX
        VB: WhiteMageController.InputX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InputX
        path: ''
        startLine: 1893
      syntax:
        content:
          CSharp: public float InputX
          VB: Public InputX As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.InputZ
      commentId: F:Global.WhiteMageController.InputZ
      language: CSharp
      name:
        CSharp: InputZ
        VB: InputZ
      nameWithType:
        CSharp: WhiteMageController.InputZ
        VB: WhiteMageController.InputZ
      qualifiedName:
        CSharp: WhiteMageController.InputZ
        VB: WhiteMageController.InputZ
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InputZ
        path: ''
        startLine: 1894
      syntax:
        content:
          CSharp: public float InputZ
          VB: Public InputZ As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.desiredMoveDirection
      commentId: F:Global.WhiteMageController.desiredMoveDirection
      language: CSharp
      name:
        CSharp: desiredMoveDirection
        VB: desiredMoveDirection
      nameWithType:
        CSharp: WhiteMageController.desiredMoveDirection
        VB: WhiteMageController.desiredMoveDirection
      qualifiedName:
        CSharp: WhiteMageController.desiredMoveDirection
        VB: WhiteMageController.desiredMoveDirection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: desiredMoveDirection
        path: ''
        startLine: 1895
      syntax:
        content:
          CSharp: public Vector3 desiredMoveDirection
          VB: Public desiredMoveDirection As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.blockRotationPlayer
      commentId: F:Global.WhiteMageController.blockRotationPlayer
      language: CSharp
      name:
        CSharp: blockRotationPlayer
        VB: blockRotationPlayer
      nameWithType:
        CSharp: WhiteMageController.blockRotationPlayer
        VB: WhiteMageController.blockRotationPlayer
      qualifiedName:
        CSharp: WhiteMageController.blockRotationPlayer
        VB: WhiteMageController.blockRotationPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: blockRotationPlayer
        path: ''
        startLine: 1896
      syntax:
        content:
          CSharp: public bool blockRotationPlayer
          VB: Public blockRotationPlayer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.desiredRotationSpeed
      commentId: F:Global.WhiteMageController.desiredRotationSpeed
      language: CSharp
      name:
        CSharp: desiredRotationSpeed
        VB: desiredRotationSpeed
      nameWithType:
        CSharp: WhiteMageController.desiredRotationSpeed
        VB: WhiteMageController.desiredRotationSpeed
      qualifiedName:
        CSharp: WhiteMageController.desiredRotationSpeed
        VB: WhiteMageController.desiredRotationSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: desiredRotationSpeed
        path: ''
        startLine: 1897
      syntax:
        content:
          CSharp: public float desiredRotationSpeed
          VB: Public desiredRotationSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.anim
      commentId: F:Global.WhiteMageController.anim
      language: CSharp
      name:
        CSharp: anim
        VB: anim
      nameWithType:
        CSharp: WhiteMageController.anim
        VB: WhiteMageController.anim
      qualifiedName:
        CSharp: WhiteMageController.anim
        VB: WhiteMageController.anim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: anim
        path: ''
        startLine: 1898
      syntax:
        content:
          CSharp: public Animator anim
          VB: Public anim As Animator
        return:
          type: Global.Animator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.Speed
      commentId: F:Global.WhiteMageController.Speed
      language: CSharp
      name:
        CSharp: Speed
        VB: Speed
      nameWithType:
        CSharp: WhiteMageController.Speed
        VB: WhiteMageController.Speed
      qualifiedName:
        CSharp: WhiteMageController.Speed
        VB: WhiteMageController.Speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Speed
        path: ''
        startLine: 1899
      syntax:
        content:
          CSharp: public float Speed
          VB: Public Speed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.allowPlayerRotation
      commentId: F:Global.WhiteMageController.allowPlayerRotation
      language: CSharp
      name:
        CSharp: allowPlayerRotation
        VB: allowPlayerRotation
      nameWithType:
        CSharp: WhiteMageController.allowPlayerRotation
        VB: WhiteMageController.allowPlayerRotation
      qualifiedName:
        CSharp: WhiteMageController.allowPlayerRotation
        VB: WhiteMageController.allowPlayerRotation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: allowPlayerRotation
        path: ''
        startLine: 1900
      syntax:
        content:
          CSharp: public float allowPlayerRotation
          VB: Public allowPlayerRotation As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.cam
      commentId: F:Global.WhiteMageController.cam
      language: CSharp
      name:
        CSharp: cam
        VB: cam
      nameWithType:
        CSharp: WhiteMageController.cam
        VB: WhiteMageController.cam
      qualifiedName:
        CSharp: WhiteMageController.cam
        VB: WhiteMageController.cam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: cam
        path: ''
        startLine: 1901
      syntax:
        content:
          CSharp: public Camera cam
          VB: Public cam As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.controller
      commentId: F:Global.WhiteMageController.controller
      language: CSharp
      name:
        CSharp: controller
        VB: controller
      nameWithType:
        CSharp: WhiteMageController.controller
        VB: WhiteMageController.controller
      qualifiedName:
        CSharp: WhiteMageController.controller
        VB: WhiteMageController.controller
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: controller
        path: ''
        startLine: 1902
      syntax:
        content:
          CSharp: public CharacterController controller
          VB: Public controller As CharacterController
        return:
          type: Global.CharacterController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.isGrounded
      commentId: F:Global.WhiteMageController.isGrounded
      language: CSharp
      name:
        CSharp: isGrounded
        VB: isGrounded
      nameWithType:
        CSharp: WhiteMageController.isGrounded
        VB: WhiteMageController.isGrounded
      qualifiedName:
        CSharp: WhiteMageController.isGrounded
        VB: WhiteMageController.isGrounded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isGrounded
        path: ''
        startLine: 1903
      syntax:
        content:
          CSharp: public bool isGrounded
          VB: Public isGrounded As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.HorizontalAnimSmoothTime
      commentId: F:Global.WhiteMageController.HorizontalAnimSmoothTime
      language: CSharp
      name:
        CSharp: HorizontalAnimSmoothTime
        VB: HorizontalAnimSmoothTime
      nameWithType:
        CSharp: WhiteMageController.HorizontalAnimSmoothTime
        VB: WhiteMageController.HorizontalAnimSmoothTime
      qualifiedName:
        CSharp: WhiteMageController.HorizontalAnimSmoothTime
        VB: WhiteMageController.HorizontalAnimSmoothTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HorizontalAnimSmoothTime
        path: ''
        startLine: 1909
      syntax:
        content:
          CSharp: public float HorizontalAnimSmoothTime
          VB: Public HorizontalAnimSmoothTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.VerticalAnimTime
      commentId: F:Global.WhiteMageController.VerticalAnimTime
      language: CSharp
      name:
        CSharp: VerticalAnimTime
        VB: VerticalAnimTime
      nameWithType:
        CSharp: WhiteMageController.VerticalAnimTime
        VB: WhiteMageController.VerticalAnimTime
      qualifiedName:
        CSharp: WhiteMageController.VerticalAnimTime
        VB: WhiteMageController.VerticalAnimTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: VerticalAnimTime
        path: ''
        startLine: 1911
      syntax:
        content:
          CSharp: public float VerticalAnimTime
          VB: Public VerticalAnimTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.StartAnimTime
      commentId: F:Global.WhiteMageController.StartAnimTime
      language: CSharp
      name:
        CSharp: StartAnimTime
        VB: StartAnimTime
      nameWithType:
        CSharp: WhiteMageController.StartAnimTime
        VB: WhiteMageController.StartAnimTime
      qualifiedName:
        CSharp: WhiteMageController.StartAnimTime
        VB: WhiteMageController.StartAnimTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StartAnimTime
        path: ''
        startLine: 1913
      syntax:
        content:
          CSharp: public float StartAnimTime
          VB: Public StartAnimTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.StopAnimTime
      commentId: F:Global.WhiteMageController.StopAnimTime
      language: CSharp
      name:
        CSharp: StopAnimTime
        VB: StopAnimTime
      nameWithType:
        CSharp: WhiteMageController.StopAnimTime
        VB: WhiteMageController.StopAnimTime
      qualifiedName:
        CSharp: WhiteMageController.StopAnimTime
        VB: WhiteMageController.StopAnimTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StopAnimTime
        path: ''
        startLine: 1915
      syntax:
        content:
          CSharp: public float StopAnimTime
          VB: Public StopAnimTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.canMove
      commentId: F:Global.WhiteMageController.canMove
      language: CSharp
      name:
        CSharp: canMove
        VB: canMove
      nameWithType:
        CSharp: WhiteMageController.canMove
        VB: WhiteMageController.canMove
      qualifiedName:
        CSharp: WhiteMageController.canMove
        VB: WhiteMageController.canMove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: canMove
        path: ''
        startLine: 1919
      syntax:
        content:
          CSharp: public bool canMove
          VB: Public canMove As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.TargetMarker
      commentId: F:Global.WhiteMageController.TargetMarker
      language: CSharp
      name:
        CSharp: TargetMarker
        VB: TargetMarker
      nameWithType:
        CSharp: WhiteMageController.TargetMarker
        VB: WhiteMageController.TargetMarker
      qualifiedName:
        CSharp: WhiteMageController.TargetMarker
        VB: WhiteMageController.TargetMarker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TargetMarker
        path: ''
        startLine: 1923
      syntax:
        content:
          CSharp: public GameObject TargetMarker
          VB: Public TargetMarker As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.TargetMarker2
      commentId: F:Global.WhiteMageController.TargetMarker2
      language: CSharp
      name:
        CSharp: TargetMarker2
        VB: TargetMarker2
      nameWithType:
        CSharp: WhiteMageController.TargetMarker2
        VB: WhiteMageController.TargetMarker2
      qualifiedName:
        CSharp: WhiteMageController.TargetMarker2
        VB: WhiteMageController.TargetMarker2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TargetMarker2
        path: ''
        startLine: 1924
      syntax:
        content:
          CSharp: public GameObject TargetMarker2
          VB: Public TargetMarker2 As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.Prefabs
      commentId: F:Global.WhiteMageController.Prefabs
      language: CSharp
      name:
        CSharp: Prefabs
        VB: Prefabs
      nameWithType:
        CSharp: WhiteMageController.Prefabs
        VB: WhiteMageController.Prefabs
      qualifiedName:
        CSharp: WhiteMageController.Prefabs
        VB: WhiteMageController.Prefabs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Prefabs
        path: ''
        startLine: 1925
      syntax:
        content:
          CSharp: public GameObject[] Prefabs
          VB: Public Prefabs As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.PrefabsCast
      commentId: F:Global.WhiteMageController.PrefabsCast
      language: CSharp
      name:
        CSharp: PrefabsCast
        VB: PrefabsCast
      nameWithType:
        CSharp: WhiteMageController.PrefabsCast
        VB: WhiteMageController.PrefabsCast
      qualifiedName:
        CSharp: WhiteMageController.PrefabsCast
        VB: WhiteMageController.PrefabsCast
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PrefabsCast
        path: ''
        startLine: 1926
      syntax:
        content:
          CSharp: public GameObject[] PrefabsCast
          VB: Public PrefabsCast As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.parentPlace
      commentId: F:Global.WhiteMageController.parentPlace
      language: CSharp
      name:
        CSharp: parentPlace
        VB: parentPlace
      nameWithType:
        CSharp: WhiteMageController.parentPlace
        VB: WhiteMageController.parentPlace
      qualifiedName:
        CSharp: WhiteMageController.parentPlace
        VB: WhiteMageController.parentPlace
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: parentPlace
        path: ''
        startLine: 1927
      syntax:
        content:
          CSharp: public Transform parentPlace
          VB: Public parentPlace As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.UltimatePrefab
      commentId: F:Global.WhiteMageController.UltimatePrefab
      language: CSharp
      name:
        CSharp: UltimatePrefab
        VB: UltimatePrefab
      nameWithType:
        CSharp: WhiteMageController.UltimatePrefab
        VB: WhiteMageController.UltimatePrefab
      qualifiedName:
        CSharp: WhiteMageController.UltimatePrefab
        VB: WhiteMageController.UltimatePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UltimatePrefab
        path: ''
        startLine: 1928
      syntax:
        content:
          CSharp: public GameObject[] UltimatePrefab
          VB: Public UltimatePrefab As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.skillsRange
      commentId: F:Global.WhiteMageController.skillsRange
      language: CSharp
      name:
        CSharp: skillsRange
        VB: skillsRange
      nameWithType:
        CSharp: WhiteMageController.skillsRange
        VB: WhiteMageController.skillsRange
      qualifiedName:
        CSharp: WhiteMageController.skillsRange
        VB: WhiteMageController.skillsRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: skillsRange
        path: ''
        startLine: 1929
      syntax:
        content:
          CSharp: public float skillsRange
          VB: Public skillsRange As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.castingTime
      commentId: F:Global.WhiteMageController.castingTime
      language: CSharp
      name:
        CSharp: castingTime
        VB: castingTime
      nameWithType:
        CSharp: WhiteMageController.castingTime
        VB: WhiteMageController.castingTime
      qualifiedName:
        CSharp: WhiteMageController.castingTime
        VB: WhiteMageController.castingTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: castingTime
        path: ''
        startLine: 1934
      syntax:
        content:
          CSharp: public float[] castingTime
          VB: Public castingTime As Single()
        return:
          type: System.Single[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.collidingLayer
      commentId: F:Global.WhiteMageController.collidingLayer
      language: CSharp
      name:
        CSharp: collidingLayer
        VB: collidingLayer
      nameWithType:
        CSharp: WhiteMageController.collidingLayer
        VB: WhiteMageController.collidingLayer
      qualifiedName:
        CSharp: WhiteMageController.collidingLayer
        VB: WhiteMageController.collidingLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: collidingLayer
        path: ''
        startLine: 1937
      syntax:
        content:
          CSharp: public LayerMask collidingLayer
          VB: Public collidingLayer As LayerMask
        return:
          type: Global.LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.ultIcons
      commentId: F:Global.WhiteMageController.ultIcons
      language: CSharp
      name:
        CSharp: ultIcons
        VB: ultIcons
      nameWithType:
        CSharp: WhiteMageController.ultIcons
        VB: WhiteMageController.ultIcons
      qualifiedName:
        CSharp: WhiteMageController.ultIcons
        VB: WhiteMageController.ultIcons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ultIcons
        path: ''
        startLine: 1942
      syntax:
        content:
          CSharp: public GameObject[] ultIcons
          VB: Public ultIcons As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.aim
      commentId: F:Global.WhiteMageController.aim
      language: CSharp
      name:
        CSharp: aim
        VB: aim
      nameWithType:
        CSharp: WhiteMageController.aim
        VB: WhiteMageController.aim
      qualifiedName:
        CSharp: WhiteMageController.aim
        VB: WhiteMageController.aim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: aim
        path: ''
        startLine: 1943
      syntax:
        content:
          CSharp: public Image aim
          VB: Public aim As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.uiOffset
      commentId: F:Global.WhiteMageController.uiOffset
      language: CSharp
      name:
        CSharp: uiOffset
        VB: uiOffset
      nameWithType:
        CSharp: WhiteMageController.uiOffset
        VB: WhiteMageController.uiOffset
      qualifiedName:
        CSharp: WhiteMageController.uiOffset
        VB: WhiteMageController.uiOffset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: uiOffset
        path: ''
        startLine: 1944
      syntax:
        content:
          CSharp: public Vector2 uiOffset
          VB: Public uiOffset As Vector2
        return:
          type: Global.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.screenTargets
      commentId: F:Global.WhiteMageController.screenTargets
      language: CSharp
      name:
        CSharp: screenTargets
        VB: screenTargets
      nameWithType:
        CSharp: WhiteMageController.screenTargets
        VB: WhiteMageController.screenTargets
      qualifiedName:
        CSharp: WhiteMageController.screenTargets
        VB: WhiteMageController.screenTargets
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: screenTargets
        path: ''
        startLine: 1945
      syntax:
        content:
          CSharp: public List<Transform> screenTargets
          VB: Public screenTargets As List(Of Transform)
        return:
          type: System.Collections.Generic.List{Transform}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.FirePoint
      commentId: F:Global.WhiteMageController.FirePoint
      language: CSharp
      name:
        CSharp: FirePoint
        VB: FirePoint
      nameWithType:
        CSharp: WhiteMageController.FirePoint
        VB: WhiteMageController.FirePoint
      qualifiedName:
        CSharp: WhiteMageController.FirePoint
        VB: WhiteMageController.FirePoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FirePoint
        path: ''
        startLine: 1948
      syntax:
        content:
          CSharp: public Transform FirePoint
          VB: Public FirePoint As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.fireRate
      commentId: F:Global.WhiteMageController.fireRate
      language: CSharp
      name:
        CSharp: fireRate
        VB: fireRate
      nameWithType:
        CSharp: WhiteMageController.fireRate
        VB: WhiteMageController.fireRate
      qualifiedName:
        CSharp: WhiteMageController.fireRate
        VB: WhiteMageController.fireRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: fireRate
        path: ''
        startLine: 1949
      syntax:
        content:
          CSharp: public float fireRate
          VB: Public fireRate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.cameraShaker
      commentId: F:Global.WhiteMageController.cameraShaker
      language: CSharp
      name:
        CSharp: cameraShaker
        VB: cameraShaker
      nameWithType:
        CSharp: WhiteMageController.cameraShaker
        VB: WhiteMageController.cameraShaker
      qualifiedName:
        CSharp: WhiteMageController.cameraShaker
        VB: WhiteMageController.cameraShaker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: cameraShaker
        path: ''
        startLine: 1962
      syntax:
        content:
          CSharp: public HS_CameraShaker cameraShaker
          VB: Public cameraShaker As HS_CameraShaker
        return:
          type: Global.HS_CameraShaker
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.FastPlayTimer(System.Int32)
      commentId: M:Global.WhiteMageController.FastPlayTimer(System.Int32)
      language: CSharp
      name:
        CSharp: FastPlayTimer(Int32)
        VB: FastPlayTimer(Int32)
      nameWithType:
        CSharp: WhiteMageController.FastPlayTimer(Int32)
        VB: WhiteMageController.FastPlayTimer(Int32)
      qualifiedName:
        CSharp: WhiteMageController.FastPlayTimer(System.Int32)
        VB: WhiteMageController.FastPlayTimer(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FastPlayTimer
        path: ''
        startLine: 2129
      syntax:
        content:
          CSharp: public IEnumerator FastPlayTimer(int EffectNumber)
          VB: Public Function FastPlayTimer(EffectNumber As Integer) As IEnumerator
        parameters:
        - id: EffectNumber
          type: System.Int32
        return:
          type: System.Collections.IEnumerator
      overload: Global.WhiteMageController.FastPlayTimer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.FastPlay(System.Int32,System.Single,System.Single)
      commentId: M:Global.WhiteMageController.FastPlay(System.Int32,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: FastPlay(Int32, Single, Single)
        VB: FastPlay(Int32, Single, Single)
      nameWithType:
        CSharp: WhiteMageController.FastPlay(Int32, Single, Single)
        VB: WhiteMageController.FastPlay(Int32, Single, Single)
      qualifiedName:
        CSharp: WhiteMageController.FastPlay(System.Int32, System.Single, System.Single)
        VB: WhiteMageController.FastPlay(System.Int32, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FastPlay
        path: ''
        startLine: 2137
      syntax:
        content:
          CSharp: public IEnumerator FastPlay(int EffectNumber, float castDelay, float endDelay)
          VB: Public Function FastPlay(EffectNumber As Integer, castDelay As Single, endDelay As Single) As IEnumerator
        parameters:
        - id: EffectNumber
          type: System.Int32
        - id: castDelay
          type: System.Single
        - id: endDelay
          type: System.Single
        return:
          type: System.Collections.IEnumerator
      overload: Global.WhiteMageController.FastPlay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.Ult(System.Int32,System.Single,System.Single,Vector3,Quaternion,System.Boolean)
      commentId: M:Global.WhiteMageController.Ult(System.Int32,System.Single,System.Single,Vector3,Quaternion,System.Boolean)
      language: CSharp
      name:
        CSharp: Ult(Int32, Single, Single, Vector3, Quaternion, Boolean)
        VB: Ult(Int32, Single, Single, Vector3, Quaternion, Boolean)
      nameWithType:
        CSharp: WhiteMageController.Ult(Int32, Single, Single, Vector3, Quaternion, Boolean)
        VB: WhiteMageController.Ult(Int32, Single, Single, Vector3, Quaternion, Boolean)
      qualifiedName:
        CSharp: WhiteMageController.Ult(System.Int32, System.Single, System.Single, Vector3, Quaternion, System.Boolean)
        VB: WhiteMageController.Ult(System.Int32, System.Single, System.Single, Vector3, Quaternion, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Ult
        path: ''
        startLine: 2247
      syntax:
        content:
          CSharp: public IEnumerator Ult(int EffectNumber, float enableTime, float dissableTime, Vector3 pivotPosition, Quaternion pivotRotation, bool ChangePos)
          VB: Public Function Ult(EffectNumber As Integer, enableTime As Single, dissableTime As Single, pivotPosition As Vector3, pivotRotation As Quaternion, ChangePos As Boolean) As IEnumerator
        parameters:
        - id: EffectNumber
          type: System.Int32
        - id: enableTime
          type: System.Single
        - id: dissableTime
          type: System.Single
        - id: pivotPosition
          type: Global.Vector3
        - id: pivotRotation
          type: Global.Quaternion
        - id: ChangePos
          type: System.Boolean
        return:
          type: System.Collections.IEnumerator
      overload: Global.WhiteMageController.Ult*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.MainSoundPlay
      commentId: M:Global.WhiteMageController.MainSoundPlay
      language: CSharp
      name:
        CSharp: MainSoundPlay()
        VB: MainSoundPlay()
      nameWithType:
        CSharp: WhiteMageController.MainSoundPlay()
        VB: WhiteMageController.MainSoundPlay()
      qualifiedName:
        CSharp: WhiteMageController.MainSoundPlay()
        VB: WhiteMageController.MainSoundPlay()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MainSoundPlay
        path: ''
        startLine: 2331
      syntax:
        content:
          CSharp: public void MainSoundPlay()
          VB: Public Sub MainSoundPlay
      overload: Global.WhiteMageController.MainSoundPlay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.CastSoundPlay
      commentId: M:Global.WhiteMageController.CastSoundPlay
      language: CSharp
      name:
        CSharp: CastSoundPlay()
        VB: CastSoundPlay()
      nameWithType:
        CSharp: WhiteMageController.CastSoundPlay()
        VB: WhiteMageController.CastSoundPlay()
      qualifiedName:
        CSharp: WhiteMageController.CastSoundPlay()
        VB: WhiteMageController.CastSoundPlay()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CastSoundPlay
        path: ''
        startLine: 2337
      syntax:
        content:
          CSharp: public void CastSoundPlay()
          VB: Public Sub CastSoundPlay
      overload: Global.WhiteMageController.CastSoundPlay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.RotateToTarget(System.Single,Vector3)
      commentId: M:Global.WhiteMageController.RotateToTarget(System.Single,Vector3)
      language: CSharp
      name:
        CSharp: RotateToTarget(Single, Vector3)
        VB: RotateToTarget(Single, Vector3)
      nameWithType:
        CSharp: WhiteMageController.RotateToTarget(Single, Vector3)
        VB: WhiteMageController.RotateToTarget(Single, Vector3)
      qualifiedName:
        CSharp: WhiteMageController.RotateToTarget(System.Single, Vector3)
        VB: WhiteMageController.RotateToTarget(System.Single, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RotateToTarget
        path: ''
        startLine: 2343
      syntax:
        content:
          CSharp: public IEnumerator RotateToTarget(float rotatingTime, Vector3 targetPoint)
          VB: Public Function RotateToTarget(rotatingTime As Single, targetPoint As Vector3) As IEnumerator
        parameters:
        - id: rotatingTime
          type: System.Single
        - id: targetPoint
          type: Global.Vector3
        return:
          type: System.Collections.IEnumerator
      overload: Global.WhiteMageController.RotateToTarget*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.FrontAttack(System.Int32)
      commentId: M:Global.WhiteMageController.FrontAttack(System.Int32)
      language: CSharp
      name:
        CSharp: FrontAttack(Int32)
        VB: FrontAttack(Int32)
      nameWithType:
        CSharp: WhiteMageController.FrontAttack(Int32)
        VB: WhiteMageController.FrontAttack(Int32)
      qualifiedName:
        CSharp: WhiteMageController.FrontAttack(System.Int32)
        VB: WhiteMageController.FrontAttack(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FrontAttack
        path: ''
        startLine: 2363
      syntax:
        content:
          CSharp: public IEnumerator FrontAttack(int EffectNumber)
          VB: Public Function FrontAttack(EffectNumber As Integer) As IEnumerator
        parameters:
        - id: EffectNumber
          type: System.Int32
        return:
          type: System.Collections.IEnumerator
      overload: Global.WhiteMageController.FrontAttack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.PreCast(System.Int32)
      commentId: M:Global.WhiteMageController.PreCast(System.Int32)
      language: CSharp
      name:
        CSharp: PreCast(Int32)
        VB: PreCast(Int32)
      nameWithType:
        CSharp: WhiteMageController.PreCast(Int32)
        VB: WhiteMageController.PreCast(Int32)
      qualifiedName:
        CSharp: WhiteMageController.PreCast(System.Int32)
        VB: WhiteMageController.PreCast(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PreCast
        path: ''
        startLine: 2428
      syntax:
        content:
          CSharp: public IEnumerator PreCast(int EffectNumber)
          VB: Public Function PreCast(EffectNumber As Integer) As IEnumerator
        parameters:
        - id: EffectNumber
          type: System.Int32
        return:
          type: System.Collections.IEnumerator
      overload: Global.WhiteMageController.PreCast*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.Attack(System.Int32)
      commentId: M:Global.WhiteMageController.Attack(System.Int32)
      language: CSharp
      name:
        CSharp: Attack(Int32)
        VB: Attack(Int32)
      nameWithType:
        CSharp: WhiteMageController.Attack(Int32)
        VB: WhiteMageController.Attack(Int32)
      qualifiedName:
        CSharp: WhiteMageController.Attack(System.Int32)
        VB: WhiteMageController.Attack(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Attack
        path: ''
        startLine: 2552
      syntax:
        content:
          CSharp: public IEnumerator Attack(int EffectNumber)
          VB: Public Function Attack(EffectNumber As Integer) As IEnumerator
        parameters:
        - id: EffectNumber
          type: System.Int32
        return:
          type: System.Collections.IEnumerator
      overload: Global.WhiteMageController.Attack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.StopCasting(System.Int32)
      commentId: M:Global.WhiteMageController.StopCasting(System.Int32)
      language: CSharp
      name:
        CSharp: StopCasting(Int32)
        VB: StopCasting(Int32)
      nameWithType:
        CSharp: WhiteMageController.StopCasting(Int32)
        VB: WhiteMageController.StopCasting(Int32)
      qualifiedName:
        CSharp: WhiteMageController.StopCasting(System.Int32)
        VB: WhiteMageController.StopCasting(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StopCasting
        path: ''
        startLine: 2621
      syntax:
        content:
          CSharp: public void StopCasting(int EffectNumber)
          VB: Public Sub StopCasting(EffectNumber As Integer)
        parameters:
        - id: EffectNumber
          type: System.Int32
      overload: Global.WhiteMageController.StopCasting*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WhiteMageController.targetIndex
      commentId: M:Global.WhiteMageController.targetIndex
      language: CSharp
      name:
        CSharp: targetIndex()
        VB: targetIndex()
      nameWithType:
        CSharp: WhiteMageController.targetIndex()
        VB: WhiteMageController.targetIndex()
      qualifiedName:
        CSharp: WhiteMageController.targetIndex()
        VB: WhiteMageController.targetIndex()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: targetIndex
        path: ''
        startLine: 2696
      syntax:
        content:
          CSharp: public int targetIndex()
          VB: Public Function targetIndex As Integer
        return:
          type: System.Int32
      overload: Global.WhiteMageController.targetIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.AutoDestroyPS
    commentId: T:Global.AutoDestroyPS
    language: CSharp
    name:
      CSharp: AutoDestroyPS
      VB: AutoDestroyPS
    nameWithType:
      CSharp: AutoDestroyPS
      VB: AutoDestroyPS
    qualifiedName:
      CSharp: AutoDestroyPS
      VB: AutoDestroyPS
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AutoDestroyPS
      path: ''
      startLine: 2722
    syntax:
      content:
        CSharp: 'public class AutoDestroyPS : MonoBehaviour'
        VB: >-
          Public Class AutoDestroyPS

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.FrontAttack
    commentId: T:Global.FrontAttack
    language: CSharp
    name:
      CSharp: FrontAttack
      VB: FrontAttack
    nameWithType:
      CSharp: FrontAttack
      VB: FrontAttack
    qualifiedName:
      CSharp: FrontAttack
      VB: FrontAttack
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FrontAttack
      path: ''
      startLine: 2756
    syntax:
      content:
        CSharp: 'public class FrontAttack : MonoBehaviour'
        VB: >-
          Public Class FrontAttack

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.FrontAttack.pivot
      commentId: F:Global.FrontAttack.pivot
      language: CSharp
      name:
        CSharp: pivot
        VB: pivot
      nameWithType:
        CSharp: FrontAttack.pivot
        VB: FrontAttack.pivot
      qualifiedName:
        CSharp: FrontAttack.pivot
        VB: FrontAttack.pivot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: pivot
        path: ''
        startLine: 2758
      syntax:
        content:
          CSharp: public Transform pivot
          VB: Public pivot As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.startRotation
      commentId: F:Global.FrontAttack.startRotation
      language: CSharp
      name:
        CSharp: startRotation
        VB: startRotation
      nameWithType:
        CSharp: FrontAttack.startRotation
        VB: FrontAttack.startRotation
      qualifiedName:
        CSharp: FrontAttack.startRotation
        VB: FrontAttack.startRotation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: startRotation
        path: ''
        startLine: 2759
      syntax:
        content:
          CSharp: public Vector3 startRotation
          VB: Public startRotation As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.speed
      commentId: F:Global.FrontAttack.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: FrontAttack.speed
        VB: FrontAttack.speed
      qualifiedName:
        CSharp: FrontAttack.speed
        VB: FrontAttack.speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: speed
        path: ''
        startLine: 2760
      syntax:
        content:
          CSharp: public float speed
          VB: Public speed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.drug
      commentId: F:Global.FrontAttack.drug
      language: CSharp
      name:
        CSharp: drug
        VB: drug
      nameWithType:
        CSharp: FrontAttack.drug
        VB: FrontAttack.drug
      qualifiedName:
        CSharp: FrontAttack.drug
        VB: FrontAttack.drug
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: drug
        path: ''
        startLine: 2761
      syntax:
        content:
          CSharp: public float drug
          VB: Public drug As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.craterPrefab
      commentId: F:Global.FrontAttack.craterPrefab
      language: CSharp
      name:
        CSharp: craterPrefab
        VB: craterPrefab
      nameWithType:
        CSharp: FrontAttack.craterPrefab
        VB: FrontAttack.craterPrefab
      qualifiedName:
        CSharp: FrontAttack.craterPrefab
        VB: FrontAttack.craterPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: craterPrefab
        path: ''
        startLine: 2762
      syntax:
        content:
          CSharp: public GameObject craterPrefab
          VB: Public craterPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.ps
      commentId: F:Global.FrontAttack.ps
      language: CSharp
      name:
        CSharp: ps
        VB: ps
      nameWithType:
        CSharp: FrontAttack.ps
        VB: FrontAttack.ps
      qualifiedName:
        CSharp: FrontAttack.ps
        VB: FrontAttack.ps
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ps
        path: ''
        startLine: 2763
      syntax:
        content:
          CSharp: public ParticleSystem ps
          VB: Public ps As ParticleSystem
        return:
          type: Global.ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.playPS
      commentId: F:Global.FrontAttack.playPS
      language: CSharp
      name:
        CSharp: playPS
        VB: playPS
      nameWithType:
        CSharp: FrontAttack.playPS
        VB: FrontAttack.playPS
      qualifiedName:
        CSharp: FrontAttack.playPS
        VB: FrontAttack.playPS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playPS
        path: ''
        startLine: 2764
      syntax:
        content:
          CSharp: public bool playPS
          VB: Public playPS As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.spawnRate
      commentId: F:Global.FrontAttack.spawnRate
      language: CSharp
      name:
        CSharp: spawnRate
        VB: spawnRate
      nameWithType:
        CSharp: FrontAttack.spawnRate
        VB: FrontAttack.spawnRate
      qualifiedName:
        CSharp: FrontAttack.spawnRate
        VB: FrontAttack.spawnRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: spawnRate
        path: ''
        startLine: 2765
      syntax:
        content:
          CSharp: public float spawnRate
          VB: Public spawnRate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.spawnDuration
      commentId: F:Global.FrontAttack.spawnDuration
      language: CSharp
      name:
        CSharp: spawnDuration
        VB: spawnDuration
      nameWithType:
        CSharp: FrontAttack.spawnDuration
        VB: FrontAttack.spawnDuration
      qualifiedName:
        CSharp: FrontAttack.spawnDuration
        VB: FrontAttack.spawnDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: spawnDuration
        path: ''
        startLine: 2766
      syntax:
        content:
          CSharp: public float spawnDuration
          VB: Public spawnDuration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.positionOffset
      commentId: F:Global.FrontAttack.positionOffset
      language: CSharp
      name:
        CSharp: positionOffset
        VB: positionOffset
      nameWithType:
        CSharp: FrontAttack.positionOffset
        VB: FrontAttack.positionOffset
      qualifiedName:
        CSharp: FrontAttack.positionOffset
        VB: FrontAttack.positionOffset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: positionOffset
        path: ''
        startLine: 2767
      syntax:
        content:
          CSharp: public float positionOffset
          VB: Public positionOffset As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.changeScale
      commentId: F:Global.FrontAttack.changeScale
      language: CSharp
      name:
        CSharp: changeScale
        VB: changeScale
      nameWithType:
        CSharp: FrontAttack.changeScale
        VB: FrontAttack.changeScale
      qualifiedName:
        CSharp: FrontAttack.changeScale
        VB: FrontAttack.changeScale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: changeScale
        path: ''
        startLine: 2768
      syntax:
        content:
          CSharp: public bool changeScale
          VB: Public changeScale As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.effectWithAnimation
      commentId: F:Global.FrontAttack.effectWithAnimation
      language: CSharp
      name:
        CSharp: effectWithAnimation
        VB: effectWithAnimation
      nameWithType:
        CSharp: FrontAttack.effectWithAnimation
        VB: FrontAttack.effectWithAnimation
      qualifiedName:
        CSharp: FrontAttack.effectWithAnimation
        VB: FrontAttack.effectWithAnimation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: effectWithAnimation
        path: ''
        startLine: 2776
      syntax:
        content:
          CSharp: public bool effectWithAnimation
          VB: Public effectWithAnimation As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.anim
      commentId: F:Global.FrontAttack.anim
      language: CSharp
      name:
        CSharp: anim
        VB: anim
      nameWithType:
        CSharp: FrontAttack.anim
        VB: FrontAttack.anim
      qualifiedName:
        CSharp: FrontAttack.anim
        VB: FrontAttack.anim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: anim
        path: ''
        startLine: 2777
      syntax:
        content:
          CSharp: public Animator[] anim
          VB: Public anim As Animator()
        return:
          type: Global.Animator[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.delay
      commentId: F:Global.FrontAttack.delay
      language: CSharp
      name:
        CSharp: delay
        VB: delay
      nameWithType:
        CSharp: FrontAttack.delay
        VB: FrontAttack.delay
      qualifiedName:
        CSharp: FrontAttack.delay
        VB: FrontAttack.delay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: delay
        path: ''
        startLine: 2778
      syntax:
        content:
          CSharp: public float delay
          VB: Public delay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.playMeshEffect
      commentId: F:Global.FrontAttack.playMeshEffect
      language: CSharp
      name:
        CSharp: playMeshEffect
        VB: playMeshEffect
      nameWithType:
        CSharp: FrontAttack.playMeshEffect
        VB: FrontAttack.playMeshEffect
      qualifiedName:
        CSharp: FrontAttack.playMeshEffect
        VB: FrontAttack.playMeshEffect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playMeshEffect
        path: ''
        startLine: 2779
      syntax:
        content:
          CSharp: public bool playMeshEffect
          VB: Public playMeshEffect As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.PrepeareAttack(Vector3)
      commentId: M:Global.FrontAttack.PrepeareAttack(Vector3)
      language: CSharp
      name:
        CSharp: PrepeareAttack(Vector3)
        VB: PrepeareAttack(Vector3)
      nameWithType:
        CSharp: FrontAttack.PrepeareAttack(Vector3)
        VB: FrontAttack.PrepeareAttack(Vector3)
      qualifiedName:
        CSharp: FrontAttack.PrepeareAttack(Vector3)
        VB: FrontAttack.PrepeareAttack(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PrepeareAttack
        path: ''
        startLine: 2787
      syntax:
        content:
          CSharp: public void PrepeareAttack(Vector3 targetPoint)
          VB: Public Sub PrepeareAttack(targetPoint As Vector3)
        parameters:
        - id: targetPoint
          type: Global.Vector3
      overload: Global.FrontAttack.PrepeareAttack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.MeshEffect
      commentId: M:Global.FrontAttack.MeshEffect
      language: CSharp
      name:
        CSharp: MeshEffect()
        VB: MeshEffect()
      nameWithType:
        CSharp: FrontAttack.MeshEffect()
        VB: FrontAttack.MeshEffect()
      qualifiedName:
        CSharp: FrontAttack.MeshEffect()
        VB: FrontAttack.MeshEffect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MeshEffect
        path: ''
        startLine: 2815
      syntax:
        content:
          CSharp: public IEnumerator MeshEffect()
          VB: Public Function MeshEffect As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Global.FrontAttack.MeshEffect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontAttack.StartMove
      commentId: M:Global.FrontAttack.StartMove
      language: CSharp
      name:
        CSharp: StartMove()
        VB: StartMove()
      nameWithType:
        CSharp: FrontAttack.StartMove()
        VB: FrontAttack.StartMove()
      qualifiedName:
        CSharp: FrontAttack.StartMove()
        VB: FrontAttack.StartMove()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StartMove
        path: ''
        startLine: 2827
      syntax:
        content:
          CSharp: public IEnumerator StartMove()
          VB: Public Function StartMove As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Global.FrontAttack.StartMove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TargetProjectile
    commentId: T:Global.TargetProjectile
    language: CSharp
    name:
      CSharp: TargetProjectile
      VB: TargetProjectile
    nameWithType:
      CSharp: TargetProjectile
      VB: TargetProjectile
    qualifiedName:
      CSharp: TargetProjectile
      VB: TargetProjectile
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TargetProjectile
      path: ''
      startLine: 2885
    syntax:
      content:
        CSharp: 'public class TargetProjectile : MonoBehaviour'
        VB: >-
          Public Class TargetProjectile

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TargetProjectile.speed
      commentId: F:Global.TargetProjectile.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: TargetProjectile.speed
        VB: TargetProjectile.speed
      qualifiedName:
        CSharp: TargetProjectile.speed
        VB: TargetProjectile.speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: speed
        path: ''
        startLine: 2887
      syntax:
        content:
          CSharp: public float speed
          VB: Public speed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TargetProjectile.hit
      commentId: F:Global.TargetProjectile.hit
      language: CSharp
      name:
        CSharp: hit
        VB: hit
      nameWithType:
        CSharp: TargetProjectile.hit
        VB: TargetProjectile.hit
      qualifiedName:
        CSharp: TargetProjectile.hit
        VB: TargetProjectile.hit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: hit
        path: ''
        startLine: 2888
      syntax:
        content:
          CSharp: public GameObject hit
          VB: Public hit As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TargetProjectile.flash
      commentId: F:Global.TargetProjectile.flash
      language: CSharp
      name:
        CSharp: flash
        VB: flash
      nameWithType:
        CSharp: TargetProjectile.flash
        VB: TargetProjectile.flash
      qualifiedName:
        CSharp: TargetProjectile.flash
        VB: TargetProjectile.flash
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: flash
        path: ''
        startLine: 2889
      syntax:
        content:
          CSharp: public GameObject flash
          VB: Public flash As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TargetProjectile.Detached
      commentId: F:Global.TargetProjectile.Detached
      language: CSharp
      name:
        CSharp: Detached
        VB: Detached
      nameWithType:
        CSharp: TargetProjectile.Detached
        VB: TargetProjectile.Detached
      qualifiedName:
        CSharp: TargetProjectile.Detached
        VB: TargetProjectile.Detached
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Detached
        path: ''
        startLine: 2890
      syntax:
        content:
          CSharp: public GameObject[] Detached
          VB: Public Detached As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TargetProjectile.sideAngle
      commentId: F:Global.TargetProjectile.sideAngle
      language: CSharp
      name:
        CSharp: sideAngle
        VB: sideAngle
      nameWithType:
        CSharp: TargetProjectile.sideAngle
        VB: TargetProjectile.sideAngle
      qualifiedName:
        CSharp: TargetProjectile.sideAngle
        VB: TargetProjectile.sideAngle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: sideAngle
        path: ''
        startLine: 2898
      syntax:
        content:
          CSharp: public float sideAngle
          VB: Public sideAngle As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TargetProjectile.upAngle
      commentId: F:Global.TargetProjectile.upAngle
      language: CSharp
      name:
        CSharp: upAngle
        VB: upAngle
      nameWithType:
        CSharp: TargetProjectile.upAngle
        VB: TargetProjectile.upAngle
      qualifiedName:
        CSharp: TargetProjectile.upAngle
        VB: TargetProjectile.upAngle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: upAngle
        path: ''
        startLine: 2899
      syntax:
        content:
          CSharp: public float upAngle
          VB: Public upAngle As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TargetProjectile.UpdateTarget(Transform,Vector3)
      commentId: M:Global.TargetProjectile.UpdateTarget(Transform,Vector3)
      language: CSharp
      name:
        CSharp: UpdateTarget(Transform, Vector3)
        VB: UpdateTarget(Transform, Vector3)
      nameWithType:
        CSharp: TargetProjectile.UpdateTarget(Transform, Vector3)
        VB: TargetProjectile.UpdateTarget(Transform, Vector3)
      qualifiedName:
        CSharp: TargetProjectile.UpdateTarget(Transform, Vector3)
        VB: TargetProjectile.UpdateTarget(Transform, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateTarget
        path: ''
        startLine: 2915
      syntax:
        content:
          CSharp: public void UpdateTarget(Transform targetPosition, Vector3 Offset)
          VB: Public Sub UpdateTarget(targetPosition As Transform, Offset As Vector3)
        parameters:
        - id: targetPosition
          type: Global.Transform
        - id: Offset
          type: Global.Vector3
      overload: Global.TargetProjectile.UpdateTarget*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ZoneTrigger
    commentId: T:Global.ZoneTrigger
    language: CSharp
    name:
      CSharp: ZoneTrigger
      VB: ZoneTrigger
    nameWithType:
      CSharp: ZoneTrigger
      VB: ZoneTrigger
    qualifiedName:
      CSharp: ZoneTrigger
      VB: ZoneTrigger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ZoneTrigger
      path: ''
      startLine: 3003
    syntax:
      content:
        CSharp: 'public class ZoneTrigger : MonoBehaviour'
        VB: >-
          Public Class ZoneTrigger

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ZoneTrigger.stableEffect
      commentId: F:Global.ZoneTrigger.stableEffect
      language: CSharp
      name:
        CSharp: stableEffect
        VB: stableEffect
      nameWithType:
        CSharp: ZoneTrigger.stableEffect
        VB: ZoneTrigger.stableEffect
      qualifiedName:
        CSharp: ZoneTrigger.stableEffect
        VB: ZoneTrigger.stableEffect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: stableEffect
        path: ''
        startLine: 3005
      syntax:
        content:
          CSharp: public ParticleSystem stableEffect
          VB: Public stableEffect As ParticleSystem
        return:
          type: Global.ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ZoneTrigger.triggerEffect
      commentId: F:Global.ZoneTrigger.triggerEffect
      language: CSharp
      name:
        CSharp: triggerEffect
        VB: triggerEffect
      nameWithType:
        CSharp: ZoneTrigger.triggerEffect
        VB: ZoneTrigger.triggerEffect
      qualifiedName:
        CSharp: ZoneTrigger.triggerEffect
        VB: ZoneTrigger.triggerEffect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: triggerEffect
        path: ''
        startLine: 3006
      syntax:
        content:
          CSharp: public ParticleSystem triggerEffect
          VB: Public triggerEffect As ParticleSystem
        return:
          type: Global.ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ZoneTrigger.repeatTime
      commentId: F:Global.ZoneTrigger.repeatTime
      language: CSharp
      name:
        CSharp: repeatTime
        VB: repeatTime
      nameWithType:
        CSharp: ZoneTrigger.repeatTime
        VB: ZoneTrigger.repeatTime
      qualifiedName:
        CSharp: ZoneTrigger.repeatTime
        VB: ZoneTrigger.repeatTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: repeatTime
        path: ''
        startLine: 3007
      syntax:
        content:
          CSharp: public float repeatTime
          VB: Public repeatTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ChangeColor
    commentId: T:Global.ChangeColor
    language: CSharp
    name:
      CSharp: ChangeColor
      VB: ChangeColor
    nameWithType:
      CSharp: ChangeColor
      VB: ChangeColor
    qualifiedName:
      CSharp: ChangeColor
      VB: ChangeColor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ChangeColor
      path: ''
      startLine: 3048
    syntax:
      content:
        CSharp: 'public class ChangeColor : MonoBehaviour'
        VB: >-
          Public Class ChangeColor

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ChangeColor.color
      commentId: F:Global.ChangeColor.color
      language: CSharp
      name:
        CSharp: color
        VB: color
      nameWithType:
        CSharp: ChangeColor.color
        VB: ChangeColor.color
      qualifiedName:
        CSharp: ChangeColor.color
        VB: ChangeColor.color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: color
        path: ''
        startLine: 3050
      syntax:
        content:
          CSharp: public Gradient color
          VB: Public color As Gradient
        return:
          type: Global.Gradient
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChangeColor.m_changeColor
      commentId: F:Global.ChangeColor.m_changeColor
      language: CSharp
      name:
        CSharp: m_changeColor
        VB: m_changeColor
      nameWithType:
        CSharp: ChangeColor.m_changeColor
        VB: ChangeColor.m_changeColor
      qualifiedName:
        CSharp: ChangeColor.m_changeColor
        VB: ChangeColor.m_changeColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_changeColor
        path: ''
        startLine: 3051
      syntax:
        content:
          CSharp: public Color m_changeColor
          VB: Public m_changeColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChangeColor.m_obj
      commentId: F:Global.ChangeColor.m_obj
      language: CSharp
      name:
        CSharp: m_obj
        VB: m_obj
      nameWithType:
        CSharp: ChangeColor.m_obj
        VB: ChangeColor.m_obj
      qualifiedName:
        CSharp: ChangeColor.m_obj
        VB: ChangeColor.m_obj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_obj
        path: ''
        startLine: 3053
      syntax:
        content:
          CSharp: public GameObject m_obj
          VB: Public m_obj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChangeColor.m_ColorHandler
      commentId: F:Global.ChangeColor.m_ColorHandler
      language: CSharp
      name:
        CSharp: m_ColorHandler
        VB: m_ColorHandler
      nameWithType:
        CSharp: ChangeColor.m_ColorHandler
        VB: ChangeColor.m_ColorHandler
      qualifiedName:
        CSharp: ChangeColor.m_ColorHandler
        VB: ChangeColor.m_ColorHandler
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_ColorHandler
        path: ''
        startLine: 3057
      syntax:
        content:
          CSharp: public Image m_ColorHandler
          VB: Public m_ColorHandler As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChangeColor.ChangeEffectColor(System.Single)
      commentId: M:Global.ChangeColor.ChangeEffectColor(System.Single)
      language: CSharp
      name:
        CSharp: ChangeEffectColor(Single)
        VB: ChangeEffectColor(Single)
      nameWithType:
        CSharp: ChangeColor.ChangeEffectColor(Single)
        VB: ChangeColor.ChangeEffectColor(Single)
      qualifiedName:
        CSharp: ChangeColor.ChangeEffectColor(System.Single)
        VB: ChangeColor.ChangeEffectColor(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeEffectColor
        path: ''
        startLine: 3080
      syntax:
        content:
          CSharp: public void ChangeEffectColor(float value)
          VB: Public Sub ChangeEffectColor(value As Single)
        parameters:
        - id: value
          type: System.Single
      overload: Global.ChangeColor.ChangeEffectColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChangeColor.CheckIsColorChange(System.Boolean)
      commentId: M:Global.ChangeColor.CheckIsColorChange(System.Boolean)
      language: CSharp
      name:
        CSharp: CheckIsColorChange(Boolean)
        VB: CheckIsColorChange(Boolean)
      nameWithType:
        CSharp: ChangeColor.CheckIsColorChange(Boolean)
        VB: ChangeColor.CheckIsColorChange(Boolean)
      qualifiedName:
        CSharp: ChangeColor.CheckIsColorChange(System.Boolean)
        VB: ChangeColor.CheckIsColorChange(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckIsColorChange
        path: ''
        startLine: 3085
      syntax:
        content:
          CSharp: public void CheckIsColorChange(bool value)
          VB: Public Sub CheckIsColorChange(value As Boolean)
        parameters:
        - id: value
          type: System.Boolean
      overload: Global.ChangeColor.CheckIsColorChange*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChangeColor.CheckColorState
      commentId: M:Global.ChangeColor.CheckColorState
      language: CSharp
      name:
        CSharp: CheckColorState()
        VB: CheckColorState()
      nameWithType:
        CSharp: ChangeColor.CheckColorState()
        VB: ChangeColor.CheckColorState()
      qualifiedName:
        CSharp: ChangeColor.CheckColorState()
        VB: ChangeColor.CheckColorState()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckColorState
        path: ''
        startLine: 3090
      syntax:
        content:
          CSharp: public void CheckColorState()
          VB: Public Sub CheckColorState
      overload: Global.ChangeColor.CheckColorState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.EffectsScene
    commentId: T:Global.EffectsScene
    language: CSharp
    name:
      CSharp: EffectsScene
      VB: EffectsScene
    nameWithType:
      CSharp: EffectsScene
      VB: EffectsScene
    qualifiedName:
      CSharp: EffectsScene
      VB: EffectsScene
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EffectsScene
      path: ''
      startLine: 3104
    syntax:
      content:
        CSharp: 'public class EffectsScene : MonoBehaviour'
        VB: >-
          Public Class EffectsScene

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.EffectsScene.m_effects
      commentId: F:Global.EffectsScene.m_effects
      language: CSharp
      name:
        CSharp: m_effects
        VB: m_effects
      nameWithType:
        CSharp: EffectsScene.m_effects
        VB: EffectsScene.m_effects
      qualifiedName:
        CSharp: EffectsScene.m_effects
        VB: EffectsScene.m_effects
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_effects
        path: ''
        startLine: 3106
      syntax:
        content:
          CSharp: public Transform[] m_effects
          VB: Public m_effects As Transform()
        return:
          type: Global.Transform[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.EffectsScene.m_destroyObjects
      commentId: F:Global.EffectsScene.m_destroyObjects
      language: CSharp
      name:
        CSharp: m_destroyObjects
        VB: m_destroyObjects
      nameWithType:
        CSharp: EffectsScene.m_destroyObjects
        VB: EffectsScene.m_destroyObjects
      qualifiedName:
        CSharp: EffectsScene.m_destroyObjects
        VB: EffectsScene.m_destroyObjects
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_destroyObjects
        path: ''
        startLine: 3108
      syntax:
        content:
          CSharp: public static GameObject[] m_destroyObjects
          VB: Public Shared m_destroyObjects As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.EffectsScene.inputLocation
      commentId: F:Global.EffectsScene.inputLocation
      language: CSharp
      name:
        CSharp: inputLocation
        VB: inputLocation
      nameWithType:
        CSharp: EffectsScene.inputLocation
        VB: EffectsScene.inputLocation
      qualifiedName:
        CSharp: EffectsScene.inputLocation
        VB: EffectsScene.inputLocation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: inputLocation
        path: ''
        startLine: 3109
      syntax:
        content:
          CSharp: public static int inputLocation
          VB: Public Shared inputLocation As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.EffectsScene.m_effectName
      commentId: F:Global.EffectsScene.m_effectName
      language: CSharp
      name:
        CSharp: m_effectName
        VB: m_effectName
      nameWithType:
        CSharp: EffectsScene.m_effectName
        VB: EffectsScene.m_effectName
      qualifiedName:
        CSharp: EffectsScene.m_effectName
        VB: EffectsScene.m_effectName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_effectName
        path: ''
        startLine: 3110
      syntax:
        content:
          CSharp: public Text m_effectName
          VB: Public m_effectName As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MouseOrbit
    commentId: T:Global.MouseOrbit
    language: CSharp
    name:
      CSharp: MouseOrbit
      VB: MouseOrbit
    nameWithType:
      CSharp: MouseOrbit
      VB: MouseOrbit
    qualifiedName:
      CSharp: MouseOrbit
      VB: MouseOrbit
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MouseOrbit
      path: ''
      startLine: 3178
    syntax:
      content:
        CSharp: 'public class MouseOrbit : MonoBehaviour'
        VB: >-
          Public Class MouseOrbit

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MouseOrbit.Target
      commentId: F:Global.MouseOrbit.Target
      language: CSharp
      name:
        CSharp: Target
        VB: Target
      nameWithType:
        CSharp: MouseOrbit.Target
        VB: MouseOrbit.Target
      qualifiedName:
        CSharp: MouseOrbit.Target
        VB: MouseOrbit.Target
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Target
        path: ''
        startLine: 3181
      syntax:
        content:
          CSharp: public Transform Target
          VB: Public Target As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MouseOrbit.distance
      commentId: F:Global.MouseOrbit.distance
      language: CSharp
      name:
        CSharp: distance
        VB: distance
      nameWithType:
        CSharp: MouseOrbit.distance
        VB: MouseOrbit.distance
      qualifiedName:
        CSharp: MouseOrbit.distance
        VB: MouseOrbit.distance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: distance
        path: ''
        startLine: 3182
      syntax:
        content:
          CSharp: public float distance
          VB: Public distance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MouseOrbit.xSpeed
      commentId: F:Global.MouseOrbit.xSpeed
      language: CSharp
      name:
        CSharp: xSpeed
        VB: xSpeed
      nameWithType:
        CSharp: MouseOrbit.xSpeed
        VB: MouseOrbit.xSpeed
      qualifiedName:
        CSharp: MouseOrbit.xSpeed
        VB: MouseOrbit.xSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: xSpeed
        path: ''
        startLine: 3184
      syntax:
        content:
          CSharp: public float xSpeed
          VB: Public xSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MouseOrbit.ySpeed
      commentId: F:Global.MouseOrbit.ySpeed
      language: CSharp
      name:
        CSharp: ySpeed
        VB: ySpeed
      nameWithType:
        CSharp: MouseOrbit.ySpeed
        VB: MouseOrbit.ySpeed
      qualifiedName:
        CSharp: MouseOrbit.ySpeed
        VB: MouseOrbit.ySpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ySpeed
        path: ''
        startLine: 3185
      syntax:
        content:
          CSharp: public float ySpeed
          VB: Public ySpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MouseOrbit.yMinLimit
      commentId: F:Global.MouseOrbit.yMinLimit
      language: CSharp
      name:
        CSharp: yMinLimit
        VB: yMinLimit
      nameWithType:
        CSharp: MouseOrbit.yMinLimit
        VB: MouseOrbit.yMinLimit
      qualifiedName:
        CSharp: MouseOrbit.yMinLimit
        VB: MouseOrbit.yMinLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yMinLimit
        path: ''
        startLine: 3187
      syntax:
        content:
          CSharp: public float yMinLimit
          VB: Public yMinLimit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MouseOrbit.yMaxLimit
      commentId: F:Global.MouseOrbit.yMaxLimit
      language: CSharp
      name:
        CSharp: yMaxLimit
        VB: yMaxLimit
      nameWithType:
        CSharp: MouseOrbit.yMaxLimit
        VB: MouseOrbit.yMaxLimit
      qualifiedName:
        CSharp: MouseOrbit.yMaxLimit
        VB: MouseOrbit.yMaxLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yMaxLimit
        path: ''
        startLine: 3188
      syntax:
        content:
          CSharp: public float yMaxLimit
          VB: Public yMaxLimit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MouseOrbit.CameraDist
      commentId: F:Global.MouseOrbit.CameraDist
      language: CSharp
      name:
        CSharp: CameraDist
        VB: CameraDist
      nameWithType:
        CSharp: MouseOrbit.CameraDist
        VB: MouseOrbit.CameraDist
      qualifiedName:
        CSharp: MouseOrbit.CameraDist
        VB: MouseOrbit.CameraDist
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CameraDist
        path: ''
        startLine: 3192
      syntax:
        content:
          CSharp: public float CameraDist
          VB: Public CameraDist As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MoveToObject
    commentId: T:Global.MoveToObject
    language: CSharp
    name:
      CSharp: MoveToObject
      VB: MoveToObject
    nameWithType:
      CSharp: MoveToObject
      VB: MoveToObject
    qualifiedName:
      CSharp: MoveToObject
      VB: MoveToObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MoveToObject
      path: ''
      startLine: 3253
    syntax:
      content:
        CSharp: 'public class MoveToObject : MonoBehaviour'
        VB: >-
          Public Class MoveToObject

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MoveToObject.m_movePos
      commentId: F:Global.MoveToObject.m_movePos
      language: CSharp
      name:
        CSharp: m_movePos
        VB: m_movePos
      nameWithType:
        CSharp: MoveToObject.m_movePos
        VB: MoveToObject.m_movePos
      qualifiedName:
        CSharp: MoveToObject.m_movePos
        VB: MoveToObject.m_movePos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_movePos
        path: ''
        startLine: 3255
      syntax:
        content:
          CSharp: public Transform m_movePos
          VB: Public m_movePos As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MoveToObject.m_startDelay
      commentId: F:Global.MoveToObject.m_startDelay
      language: CSharp
      name:
        CSharp: m_startDelay
        VB: m_startDelay
      nameWithType:
        CSharp: MoveToObject.m_startDelay
        VB: MoveToObject.m_startDelay
      qualifiedName:
        CSharp: MoveToObject.m_startDelay
        VB: MoveToObject.m_startDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startDelay
        path: ''
        startLine: 3256
      syntax:
        content:
          CSharp: public float m_startDelay
          VB: Public m_startDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MoveToObject.m_durationTime
      commentId: F:Global.MoveToObject.m_durationTime
      language: CSharp
      name:
        CSharp: m_durationTime
        VB: m_durationTime
      nameWithType:
        CSharp: MoveToObject.m_durationTime
        VB: MoveToObject.m_durationTime
      qualifiedName:
        CSharp: MoveToObject.m_durationTime
        VB: MoveToObject.m_durationTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_durationTime
        path: ''
        startLine: 3257
      syntax:
        content:
          CSharp: public float m_durationTime
          VB: Public m_durationTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MoveToObject.m_lerpValue
      commentId: F:Global.MoveToObject.m_lerpValue
      language: CSharp
      name:
        CSharp: m_lerpValue
        VB: m_lerpValue
      nameWithType:
        CSharp: MoveToObject.m_lerpValue
        VB: MoveToObject.m_lerpValue
      qualifiedName:
        CSharp: MoveToObject.m_lerpValue
        VB: MoveToObject.m_lerpValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_lerpValue
        path: ''
        startLine: 3258
      syntax:
        content:
          CSharp: public float m_lerpValue
          VB: Public m_lerpValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MoveToObject.m_lookValue
      commentId: F:Global.MoveToObject.m_lookValue
      language: CSharp
      name:
        CSharp: m_lookValue
        VB: m_lookValue
      nameWithType:
        CSharp: MoveToObject.m_lookValue
        VB: MoveToObject.m_lookValue
      qualifiedName:
        CSharp: MoveToObject.m_lookValue
        VB: MoveToObject.m_lookValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_lookValue
        path: ''
        startLine: 3259
      syntax:
        content:
          CSharp: public float m_lookValue
          VB: Public m_lookValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MoveToTag
    commentId: T:Global.MoveToTag
    language: CSharp
    name:
      CSharp: MoveToTag
      VB: MoveToTag
    nameWithType:
      CSharp: MoveToTag
      VB: MoveToTag
    qualifiedName:
      CSharp: MoveToTag
      VB: MoveToTag
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MoveToTag
      path: ''
      startLine: 3287
    syntax:
      content:
        CSharp: 'public class MoveToTag : MonoBehaviour'
        VB: >-
          Public Class MoveToTag

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MoveToTag.m_tag
      commentId: F:Global.MoveToTag.m_tag
      language: CSharp
      name:
        CSharp: m_tag
        VB: m_tag
      nameWithType:
        CSharp: MoveToTag.m_tag
        VB: MoveToTag.m_tag
      qualifiedName:
        CSharp: MoveToTag.m_tag
        VB: MoveToTag.m_tag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_tag
        path: ''
        startLine: 3290
      syntax:
        content:
          CSharp: public string m_tag
          VB: Public m_tag As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MoveToTag.m_startDelay
      commentId: F:Global.MoveToTag.m_startDelay
      language: CSharp
      name:
        CSharp: m_startDelay
        VB: m_startDelay
      nameWithType:
        CSharp: MoveToTag.m_startDelay
        VB: MoveToTag.m_startDelay
      qualifiedName:
        CSharp: MoveToTag.m_startDelay
        VB: MoveToTag.m_startDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startDelay
        path: ''
        startLine: 3291
      syntax:
        content:
          CSharp: public float m_startDelay
          VB: Public m_startDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MoveToTag.m_durationTime
      commentId: F:Global.MoveToTag.m_durationTime
      language: CSharp
      name:
        CSharp: m_durationTime
        VB: m_durationTime
      nameWithType:
        CSharp: MoveToTag.m_durationTime
        VB: MoveToTag.m_durationTime
      qualifiedName:
        CSharp: MoveToTag.m_durationTime
        VB: MoveToTag.m_durationTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_durationTime
        path: ''
        startLine: 3292
      syntax:
        content:
          CSharp: public float m_durationTime
          VB: Public m_durationTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MoveToTag.m_lerpValue
      commentId: F:Global.MoveToTag.m_lerpValue
      language: CSharp
      name:
        CSharp: m_lerpValue
        VB: m_lerpValue
      nameWithType:
        CSharp: MoveToTag.m_lerpValue
        VB: MoveToTag.m_lerpValue
      qualifiedName:
        CSharp: MoveToTag.m_lerpValue
        VB: MoveToTag.m_lerpValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_lerpValue
        path: ''
        startLine: 3293
      syntax:
        content:
          CSharp: public float m_lerpValue
          VB: Public m_lerpValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MoveToTag.m_lookValue
      commentId: F:Global.MoveToTag.m_lookValue
      language: CSharp
      name:
        CSharp: m_lookValue
        VB: m_lookValue
      nameWithType:
        CSharp: MoveToTag.m_lookValue
        VB: MoveToTag.m_lookValue
      qualifiedName:
        CSharp: MoveToTag.m_lookValue
        VB: MoveToTag.m_lookValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_lookValue
        path: ''
        startLine: 3294
      syntax:
        content:
          CSharp: public float m_lookValue
          VB: Public m_lookValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TranslateMove
    commentId: T:Global.TranslateMove
    language: CSharp
    name:
      CSharp: TranslateMove
      VB: TranslateMove
    nameWithType:
      CSharp: TranslateMove
      VB: TranslateMove
    qualifiedName:
      CSharp: TranslateMove
      VB: TranslateMove
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TranslateMove
      path: ''
      startLine: 3322
    syntax:
      content:
        CSharp: 'public class TranslateMove : MonoBehaviour'
        VB: >-
          Public Class TranslateMove

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TranslateMove.m_power
      commentId: F:Global.TranslateMove.m_power
      language: CSharp
      name:
        CSharp: m_power
        VB: m_power
      nameWithType:
        CSharp: TranslateMove.m_power
        VB: TranslateMove.m_power
      qualifiedName:
        CSharp: TranslateMove.m_power
        VB: TranslateMove.m_power
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_power
        path: ''
        startLine: 3324
      syntax:
        content:
          CSharp: public float m_power
          VB: Public m_power As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TranslateMove.m_reduceTime
      commentId: F:Global.TranslateMove.m_reduceTime
      language: CSharp
      name:
        CSharp: m_reduceTime
        VB: m_reduceTime
      nameWithType:
        CSharp: TranslateMove.m_reduceTime
        VB: TranslateMove.m_reduceTime
      qualifiedName:
        CSharp: TranslateMove.m_reduceTime
        VB: TranslateMove.m_reduceTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_reduceTime
        path: ''
        startLine: 3325
      syntax:
        content:
          CSharp: public float m_reduceTime
          VB: Public m_reduceTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TranslateMove.m_fowardMove
      commentId: F:Global.TranslateMove.m_fowardMove
      language: CSharp
      name:
        CSharp: m_fowardMove
        VB: m_fowardMove
      nameWithType:
        CSharp: TranslateMove.m_fowardMove
        VB: TranslateMove.m_fowardMove
      qualifiedName:
        CSharp: TranslateMove.m_fowardMove
        VB: TranslateMove.m_fowardMove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_fowardMove
        path: ''
        startLine: 3326
      syntax:
        content:
          CSharp: public bool m_fowardMove
          VB: Public m_fowardMove As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TranslateMove.m_rightMove
      commentId: F:Global.TranslateMove.m_rightMove
      language: CSharp
      name:
        CSharp: m_rightMove
        VB: m_rightMove
      nameWithType:
        CSharp: TranslateMove.m_rightMove
        VB: TranslateMove.m_rightMove
      qualifiedName:
        CSharp: TranslateMove.m_rightMove
        VB: TranslateMove.m_rightMove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_rightMove
        path: ''
        startLine: 3327
      syntax:
        content:
          CSharp: public bool m_rightMove
          VB: Public m_rightMove As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TranslateMove.m_upMove
      commentId: F:Global.TranslateMove.m_upMove
      language: CSharp
      name:
        CSharp: m_upMove
        VB: m_upMove
      nameWithType:
        CSharp: TranslateMove.m_upMove
        VB: TranslateMove.m_upMove
      qualifiedName:
        CSharp: TranslateMove.m_upMove
        VB: TranslateMove.m_upMove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_upMove
        path: ''
        startLine: 3328
      syntax:
        content:
          CSharp: public bool m_upMove
          VB: Public m_upMove As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.DelayObjectMake
    commentId: T:Global.DelayObjectMake
    language: CSharp
    name:
      CSharp: DelayObjectMake
      VB: DelayObjectMake
    nameWithType:
      CSharp: DelayObjectMake
      VB: DelayObjectMake
    qualifiedName:
      CSharp: DelayObjectMake
      VB: DelayObjectMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DelayObjectMake
      path: ''
      startLine: 3356
    syntax:
      content:
        CSharp: 'public class DelayObjectMake : _ObjectMakeBase'
        VB: >-
          Public Class DelayObjectMake

              Inherits _ObjectMakeBase
    inheritance:
    - System.Object
    - Global._ObjectMakeBase
    inheritedMembers:
    - Global._ObjectMakeBase.m_makeObjs
    - Global._ObjectMakeBase.m_movePos
    - Global._ObjectMakeBase.GetRandomValue(System.Single)
    - Global._ObjectMakeBase.GetRandomVector(Vector3)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.DelayObjectMake.m_startDelay
      commentId: F:Global.DelayObjectMake.m_startDelay
      language: CSharp
      name:
        CSharp: m_startDelay
        VB: m_startDelay
      nameWithType:
        CSharp: DelayObjectMake.m_startDelay
        VB: DelayObjectMake.m_startDelay
      qualifiedName:
        CSharp: DelayObjectMake.m_startDelay
        VB: DelayObjectMake.m_startDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startDelay
        path: ''
        startLine: 3358
      syntax:
        content:
          CSharp: public float m_startDelay
          VB: Public m_startDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.FowardObjectMake
    commentId: T:Global.FowardObjectMake
    language: CSharp
    name:
      CSharp: FowardObjectMake
      VB: FowardObjectMake
    nameWithType:
      CSharp: FowardObjectMake
      VB: FowardObjectMake
    qualifiedName:
      CSharp: FowardObjectMake
      VB: FowardObjectMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FowardObjectMake
      path: ''
      startLine: 3389
    syntax:
      content:
        CSharp: 'public class FowardObjectMake : _ObjectMakeBase'
        VB: >-
          Public Class FowardObjectMake

              Inherits _ObjectMakeBase
    inheritance:
    - System.Object
    - Global._ObjectMakeBase
    inheritedMembers:
    - Global._ObjectMakeBase.m_makeObjs
    - Global._ObjectMakeBase.m_movePos
    - Global._ObjectMakeBase.GetRandomValue(System.Single)
    - Global._ObjectMakeBase.GetRandomVector(Vector3)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.FowardObjectMake.m_objectSize
      commentId: F:Global.FowardObjectMake.m_objectSize
      language: CSharp
      name:
        CSharp: m_objectSize
        VB: m_objectSize
      nameWithType:
        CSharp: FowardObjectMake.m_objectSize
        VB: FowardObjectMake.m_objectSize
      qualifiedName:
        CSharp: FowardObjectMake.m_objectSize
        VB: FowardObjectMake.m_objectSize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_objectSize
        path: ''
        startLine: 3391
      syntax:
        content:
          CSharp: public float m_objectSize
          VB: Public m_objectSize As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FowardObjectMake.m_subtractYValue
      commentId: F:Global.FowardObjectMake.m_subtractYValue
      language: CSharp
      name:
        CSharp: m_subtractYValue
        VB: m_subtractYValue
      nameWithType:
        CSharp: FowardObjectMake.m_subtractYValue
        VB: FowardObjectMake.m_subtractYValue
      qualifiedName:
        CSharp: FowardObjectMake.m_subtractYValue
        VB: FowardObjectMake.m_subtractYValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_subtractYValue
        path: ''
        startLine: 3392
      syntax:
        content:
          CSharp: public float m_subtractYValue
          VB: Public m_subtractYValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FowardObjectMake.m_makeCount
      commentId: F:Global.FowardObjectMake.m_makeCount
      language: CSharp
      name:
        CSharp: m_makeCount
        VB: m_makeCount
      nameWithType:
        CSharp: FowardObjectMake.m_makeCount
        VB: FowardObjectMake.m_makeCount
      qualifiedName:
        CSharp: FowardObjectMake.m_makeCount
        VB: FowardObjectMake.m_makeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeCount
        path: ''
        startLine: 3393
      syntax:
        content:
          CSharp: public float m_makeCount
          VB: Public m_makeCount As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FowardObjectMake.m_makeDelay
      commentId: F:Global.FowardObjectMake.m_makeDelay
      language: CSharp
      name:
        CSharp: m_makeDelay
        VB: m_makeDelay
      nameWithType:
        CSharp: FowardObjectMake.m_makeDelay
        VB: FowardObjectMake.m_makeDelay
      qualifiedName:
        CSharp: FowardObjectMake.m_makeDelay
        VB: FowardObjectMake.m_makeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeDelay
        path: ''
        startLine: 3394
      syntax:
        content:
          CSharp: public float m_makeDelay
          VB: Public m_makeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FowardObjectMake.m_isCrossMake
      commentId: F:Global.FowardObjectMake.m_isCrossMake
      language: CSharp
      name:
        CSharp: m_isCrossMake
        VB: m_isCrossMake
      nameWithType:
        CSharp: FowardObjectMake.m_isCrossMake
        VB: FowardObjectMake.m_isCrossMake
      qualifiedName:
        CSharp: FowardObjectMake.m_isCrossMake
        VB: FowardObjectMake.m_isCrossMake
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_isCrossMake
        path: ''
        startLine: 3395
      syntax:
        content:
          CSharp: public bool m_isCrossMake
          VB: Public m_isCrossMake As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.Material_Change
    commentId: T:Global.Material_Change
    language: CSharp
    name:
      CSharp: Material_Change
      VB: Material_Change
    nameWithType:
      CSharp: Material_Change
      VB: Material_Change
    qualifiedName:
      CSharp: Material_Change
      VB: Material_Change
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Material_Change
      path: ''
      startLine: 3443
    syntax:
      content:
        CSharp: 'public class Material_Change : MonoBehaviour'
        VB: >-
          Public Class Material_Change

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.Material_Change.m_inputMaterial
      commentId: F:Global.Material_Change.m_inputMaterial
      language: CSharp
      name:
        CSharp: m_inputMaterial
        VB: m_inputMaterial
      nameWithType:
        CSharp: Material_Change.m_inputMaterial
        VB: Material_Change.m_inputMaterial
      qualifiedName:
        CSharp: Material_Change.m_inputMaterial
        VB: Material_Change.m_inputMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_inputMaterial
        path: ''
        startLine: 3445
      syntax:
        content:
          CSharp: public Material m_inputMaterial
          VB: Public m_inputMaterial As Material
        return:
          type: Global.Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Material_Change.m_timeToReduce
      commentId: F:Global.Material_Change.m_timeToReduce
      language: CSharp
      name:
        CSharp: m_timeToReduce
        VB: m_timeToReduce
      nameWithType:
        CSharp: Material_Change.m_timeToReduce
        VB: Material_Change.m_timeToReduce
      qualifiedName:
        CSharp: Material_Change.m_timeToReduce
        VB: Material_Change.m_timeToReduce
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_timeToReduce
        path: ''
        startLine: 3448
      syntax:
        content:
          CSharp: public float m_timeToReduce
          VB: Public m_timeToReduce As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Material_Change.m_reduceFactor
      commentId: F:Global.Material_Change.m_reduceFactor
      language: CSharp
      name:
        CSharp: m_reduceFactor
        VB: m_reduceFactor
      nameWithType:
        CSharp: Material_Change.m_reduceFactor
        VB: Material_Change.m_reduceFactor
      qualifiedName:
        CSharp: Material_Change.m_reduceFactor
        VB: Material_Change.m_reduceFactor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_reduceFactor
        path: ''
        startLine: 3449
      syntax:
        content:
          CSharp: public float m_reduceFactor
          VB: Public m_reduceFactor As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MultiCircleObjectMake
    commentId: T:Global.MultiCircleObjectMake
    language: CSharp
    name:
      CSharp: MultiCircleObjectMake
      VB: MultiCircleObjectMake
    nameWithType:
      CSharp: MultiCircleObjectMake
      VB: MultiCircleObjectMake
    qualifiedName:
      CSharp: MultiCircleObjectMake
      VB: MultiCircleObjectMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MultiCircleObjectMake
      path: ''
      startLine: 3484
    syntax:
      content:
        CSharp: 'public class MultiCircleObjectMake : _ObjectMakeBase'
        VB: >-
          Public Class MultiCircleObjectMake

              Inherits _ObjectMakeBase
    inheritance:
    - System.Object
    - Global._ObjectMakeBase
    inheritedMembers:
    - Global._ObjectMakeBase.m_makeObjs
    - Global._ObjectMakeBase.m_movePos
    - Global._ObjectMakeBase.GetRandomValue(System.Single)
    - Global._ObjectMakeBase.GetRandomVector(Vector3)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MultiCircleObjectMake.m_interval
      commentId: F:Global.MultiCircleObjectMake.m_interval
      language: CSharp
      name:
        CSharp: m_interval
        VB: m_interval
      nameWithType:
        CSharp: MultiCircleObjectMake.m_interval
        VB: MultiCircleObjectMake.m_interval
      qualifiedName:
        CSharp: MultiCircleObjectMake.m_interval
        VB: MultiCircleObjectMake.m_interval
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_interval
        path: ''
        startLine: 3486
      syntax:
        content:
          CSharp: public float m_interval
          VB: Public m_interval As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MultiCircleObjectMake.m_makeCount
      commentId: F:Global.MultiCircleObjectMake.m_makeCount
      language: CSharp
      name:
        CSharp: m_makeCount
        VB: m_makeCount
      nameWithType:
        CSharp: MultiCircleObjectMake.m_makeCount
        VB: MultiCircleObjectMake.m_makeCount
      qualifiedName:
        CSharp: MultiCircleObjectMake.m_makeCount
        VB: MultiCircleObjectMake.m_makeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeCount
        path: ''
        startLine: 3487
      syntax:
        content:
          CSharp: public int m_makeCount
          VB: Public m_makeCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MultiCircleObjectMake.m_makeDelay
      commentId: F:Global.MultiCircleObjectMake.m_makeDelay
      language: CSharp
      name:
        CSharp: m_makeDelay
        VB: m_makeDelay
      nameWithType:
        CSharp: MultiCircleObjectMake.m_makeDelay
        VB: MultiCircleObjectMake.m_makeDelay
      qualifiedName:
        CSharp: MultiCircleObjectMake.m_makeDelay
        VB: MultiCircleObjectMake.m_makeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeDelay
        path: ''
        startLine: 3488
      syntax:
        content:
          CSharp: public float m_makeDelay
          VB: Public m_makeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MultiCircleObjectMake.m_startDelay
      commentId: F:Global.MultiCircleObjectMake.m_startDelay
      language: CSharp
      name:
        CSharp: m_startDelay
        VB: m_startDelay
      nameWithType:
        CSharp: MultiCircleObjectMake.m_startDelay
        VB: MultiCircleObjectMake.m_startDelay
      qualifiedName:
        CSharp: MultiCircleObjectMake.m_startDelay
        VB: MultiCircleObjectMake.m_startDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startDelay
        path: ''
        startLine: 3489
      syntax:
        content:
          CSharp: public float m_startDelay
          VB: Public m_startDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MultiObjectMake
    commentId: T:Global.MultiObjectMake
    language: CSharp
    name:
      CSharp: MultiObjectMake
      VB: MultiObjectMake
    nameWithType:
      CSharp: MultiObjectMake
      VB: MultiObjectMake
    qualifiedName:
      CSharp: MultiObjectMake
      VB: MultiObjectMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MultiObjectMake
      path: ''
      startLine: 3536
    syntax:
      content:
        CSharp: 'public class MultiObjectMake : _ObjectMakeBase'
        VB: >-
          Public Class MultiObjectMake

              Inherits _ObjectMakeBase
    inheritance:
    - System.Object
    - Global._ObjectMakeBase
    inheritedMembers:
    - Global._ObjectMakeBase.m_makeObjs
    - Global._ObjectMakeBase.m_movePos
    - Global._ObjectMakeBase.GetRandomValue(System.Single)
    - Global._ObjectMakeBase.GetRandomVector(Vector3)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MultiObjectMake.m_startDelay
      commentId: F:Global.MultiObjectMake.m_startDelay
      language: CSharp
      name:
        CSharp: m_startDelay
        VB: m_startDelay
      nameWithType:
        CSharp: MultiObjectMake.m_startDelay
        VB: MultiObjectMake.m_startDelay
      qualifiedName:
        CSharp: MultiObjectMake.m_startDelay
        VB: MultiObjectMake.m_startDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startDelay
        path: ''
        startLine: 3538
      syntax:
        content:
          CSharp: public float m_startDelay
          VB: Public m_startDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MultiObjectMake.m_makeCount
      commentId: F:Global.MultiObjectMake.m_makeCount
      language: CSharp
      name:
        CSharp: m_makeCount
        VB: m_makeCount
      nameWithType:
        CSharp: MultiObjectMake.m_makeCount
        VB: MultiObjectMake.m_makeCount
      qualifiedName:
        CSharp: MultiObjectMake.m_makeCount
        VB: MultiObjectMake.m_makeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeCount
        path: ''
        startLine: 3539
      syntax:
        content:
          CSharp: public int m_makeCount
          VB: Public m_makeCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MultiObjectMake.m_makeDelay
      commentId: F:Global.MultiObjectMake.m_makeDelay
      language: CSharp
      name:
        CSharp: m_makeDelay
        VB: m_makeDelay
      nameWithType:
        CSharp: MultiObjectMake.m_makeDelay
        VB: MultiObjectMake.m_makeDelay
      qualifiedName:
        CSharp: MultiObjectMake.m_makeDelay
        VB: MultiObjectMake.m_makeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeDelay
        path: ''
        startLine: 3540
      syntax:
        content:
          CSharp: public float m_makeDelay
          VB: Public m_makeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MultiObjectMake.m_randomPos
      commentId: F:Global.MultiObjectMake.m_randomPos
      language: CSharp
      name:
        CSharp: m_randomPos
        VB: m_randomPos
      nameWithType:
        CSharp: MultiObjectMake.m_randomPos
        VB: MultiObjectMake.m_randomPos
      qualifiedName:
        CSharp: MultiObjectMake.m_randomPos
        VB: MultiObjectMake.m_randomPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_randomPos
        path: ''
        startLine: 3541
      syntax:
        content:
          CSharp: public Vector3 m_randomPos
          VB: Public m_randomPos As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MultiObjectMake.m_randomRot
      commentId: F:Global.MultiObjectMake.m_randomRot
      language: CSharp
      name:
        CSharp: m_randomRot
        VB: m_randomRot
      nameWithType:
        CSharp: MultiObjectMake.m_randomRot
        VB: MultiObjectMake.m_randomRot
      qualifiedName:
        CSharp: MultiObjectMake.m_randomRot
        VB: MultiObjectMake.m_randomRot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_randomRot
        path: ''
        startLine: 3542
      syntax:
        content:
          CSharp: public Vector3 m_randomRot
          VB: Public m_randomRot As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.RotateObject
    commentId: T:Global.RotateObject
    language: CSharp
    name:
      CSharp: RotateObject
      VB: RotateObject
    nameWithType:
      CSharp: RotateObject
      VB: RotateObject
    qualifiedName:
      CSharp: RotateObject
      VB: RotateObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RotateObject
      path: ''
      startLine: 3584
    syntax:
      content:
        CSharp: 'public class RotateObject : MonoBehaviour'
        VB: >-
          Public Class RotateObject

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RotateObject.RotateOffset
      commentId: F:Global.RotateObject.RotateOffset
      language: CSharp
      name:
        CSharp: RotateOffset
        VB: RotateOffset
      nameWithType:
        CSharp: RotateObject.RotateOffset
        VB: RotateObject.RotateOffset
      qualifiedName:
        CSharp: RotateObject.RotateOffset
        VB: RotateObject.RotateOffset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RotateOffset
        path: ''
        startLine: 3586
      syntax:
        content:
          CSharp: public Vector3 RotateOffset
          VB: Public RotateOffset As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RotateObject.m_delay
      commentId: F:Global.RotateObject.m_delay
      language: CSharp
      name:
        CSharp: m_delay
        VB: m_delay
      nameWithType:
        CSharp: RotateObject.m_delay
        VB: RotateObject.m_delay
      qualifiedName:
        CSharp: RotateObject.m_delay
        VB: RotateObject.m_delay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_delay
        path: ''
        startLine: 3588
      syntax:
        content:
          CSharp: public float m_delay
          VB: Public m_delay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ScaleChange
    commentId: T:Global.ScaleChange
    language: CSharp
    name:
      CSharp: ScaleChange
      VB: ScaleChange
    nameWithType:
      CSharp: ScaleChange
      VB: ScaleChange
    qualifiedName:
      CSharp: ScaleChange
      VB: ScaleChange
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ScaleChange
      path: ''
      startLine: 3611
    syntax:
      content:
        CSharp: 'public class ScaleChange : MonoBehaviour'
        VB: >-
          Public Class ScaleChange

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ScaleChange.m_Weight
      commentId: F:Global.ScaleChange.m_Weight
      language: CSharp
      name:
        CSharp: m_Weight
        VB: m_Weight
      nameWithType:
        CSharp: ScaleChange.m_Weight
        VB: ScaleChange.m_Weight
      qualifiedName:
        CSharp: ScaleChange.m_Weight
        VB: ScaleChange.m_Weight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_Weight
        path: ''
        startLine: 3614
      syntax:
        content:
          CSharp: public float m_Weight
          VB: Public m_Weight As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ScaleChange.m_startTime
      commentId: F:Global.ScaleChange.m_startTime
      language: CSharp
      name:
        CSharp: m_startTime
        VB: m_startTime
      nameWithType:
        CSharp: ScaleChange.m_startTime
        VB: ScaleChange.m_startTime
      qualifiedName:
        CSharp: ScaleChange.m_startTime
        VB: ScaleChange.m_startTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startTime
        path: ''
        startLine: 3615
      syntax:
        content:
          CSharp: public float m_startTime
          VB: Public m_startTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.SimpleObjectMake
    commentId: T:Global.SimpleObjectMake
    language: CSharp
    name:
      CSharp: SimpleObjectMake
      VB: SimpleObjectMake
    nameWithType:
      CSharp: SimpleObjectMake
      VB: SimpleObjectMake
    qualifiedName:
      CSharp: SimpleObjectMake
      VB: SimpleObjectMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SimpleObjectMake
      path: ''
      startLine: 3637
    syntax:
      content:
        CSharp: 'public class SimpleObjectMake : _ObjectMakeBase'
        VB: >-
          Public Class SimpleObjectMake

              Inherits _ObjectMakeBase
    inheritance:
    - System.Object
    - Global._ObjectMakeBase
    inheritedMembers:
    - Global._ObjectMakeBase.m_makeObjs
    - Global._ObjectMakeBase.m_movePos
    - Global._ObjectMakeBase.GetRandomValue(System.Single)
    - Global._ObjectMakeBase.GetRandomVector(Vector3)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SimpleObjectMake.m_randomRotationValue
      commentId: F:Global.SimpleObjectMake.m_randomRotationValue
      language: CSharp
      name:
        CSharp: m_randomRotationValue
        VB: m_randomRotationValue
      nameWithType:
        CSharp: SimpleObjectMake.m_randomRotationValue
        VB: SimpleObjectMake.m_randomRotationValue
      qualifiedName:
        CSharp: SimpleObjectMake.m_randomRotationValue
        VB: SimpleObjectMake.m_randomRotationValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_randomRotationValue
        path: ''
        startLine: 3639
      syntax:
        content:
          CSharp: public Vector3 m_randomRotationValue
          VB: Public m_randomRotationValue As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global._ObjectMakeBase
    commentId: T:Global._ObjectMakeBase
    language: CSharp
    name:
      CSharp: _ObjectMakeBase
      VB: _ObjectMakeBase
    nameWithType:
      CSharp: _ObjectMakeBase
      VB: _ObjectMakeBase
    qualifiedName:
      CSharp: _ObjectMakeBase
      VB: _ObjectMakeBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: _ObjectMakeBase
      path: ''
      startLine: 3662
    syntax:
      content:
        CSharp: 'public class _ObjectMakeBase : MonoBehaviour'
        VB: >-
          Public Class _ObjectMakeBase

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global._ObjectMakeBase.m_makeObjs
      commentId: F:Global._ObjectMakeBase.m_makeObjs
      language: CSharp
      name:
        CSharp: m_makeObjs
        VB: m_makeObjs
      nameWithType:
        CSharp: _ObjectMakeBase.m_makeObjs
        VB: _ObjectMakeBase.m_makeObjs
      qualifiedName:
        CSharp: _ObjectMakeBase.m_makeObjs
        VB: _ObjectMakeBase.m_makeObjs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeObjs
        path: ''
        startLine: 3664
      syntax:
        content:
          CSharp: public GameObject[] m_makeObjs
          VB: Public m_makeObjs As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global._ObjectMakeBase.m_movePos
      commentId: F:Global._ObjectMakeBase.m_movePos
      language: CSharp
      name:
        CSharp: m_movePos
        VB: m_movePos
      nameWithType:
        CSharp: _ObjectMakeBase.m_movePos
        VB: _ObjectMakeBase.m_movePos
      qualifiedName:
        CSharp: _ObjectMakeBase.m_movePos
        VB: _ObjectMakeBase.m_movePos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_movePos
        path: ''
        startLine: 3665
      syntax:
        content:
          CSharp: public Transform m_movePos
          VB: Public m_movePos As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global._ObjectMakeBase.GetRandomValue(System.Single)
      commentId: M:Global._ObjectMakeBase.GetRandomValue(System.Single)
      language: CSharp
      name:
        CSharp: GetRandomValue(Single)
        VB: GetRandomValue(Single)
      nameWithType:
        CSharp: _ObjectMakeBase.GetRandomValue(Single)
        VB: _ObjectMakeBase.GetRandomValue(Single)
      qualifiedName:
        CSharp: _ObjectMakeBase.GetRandomValue(System.Single)
        VB: _ObjectMakeBase.GetRandomValue(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetRandomValue
        path: ''
        startLine: 3667
      syntax:
        content:
          CSharp: public float GetRandomValue(float value)
          VB: Public Function GetRandomValue(value As Single) As Single
        parameters:
        - id: value
          type: System.Single
        return:
          type: System.Single
      overload: Global._ObjectMakeBase.GetRandomValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global._ObjectMakeBase.GetRandomVector(Vector3)
      commentId: M:Global._ObjectMakeBase.GetRandomVector(Vector3)
      language: CSharp
      name:
        CSharp: GetRandomVector(Vector3)
        VB: GetRandomVector(Vector3)
      nameWithType:
        CSharp: _ObjectMakeBase.GetRandomVector(Vector3)
        VB: _ObjectMakeBase.GetRandomVector(Vector3)
      qualifiedName:
        CSharp: _ObjectMakeBase.GetRandomVector(Vector3)
        VB: _ObjectMakeBase.GetRandomVector(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetRandomVector
        path: ''
        startLine: 3671
      syntax:
        content:
          CSharp: public Vector3 GetRandomVector(Vector3 value)
          VB: Public Function GetRandomVector(value As Vector3) As Vector3
        parameters:
        - id: value
          type: Global.Vector3
        return:
          type: Global.Vector3
      overload: Global._ObjectMakeBase.GetRandomVector*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.DemoToonVFX
    commentId: T:Global.DemoToonVFX
    language: CSharp
    name:
      CSharp: DemoToonVFX
      VB: DemoToonVFX
    nameWithType:
      CSharp: DemoToonVFX
      VB: DemoToonVFX
    qualifiedName:
      CSharp: DemoToonVFX
      VB: DemoToonVFX
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DemoToonVFX
      path: ''
      startLine: 3687
    syntax:
      content:
        CSharp: 'public class DemoToonVFX : MonoBehaviour'
        VB: >-
          Public Class DemoToonVFX

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.DemoToonVFX.Holder
      commentId: F:Global.DemoToonVFX.Holder
      language: CSharp
      name:
        CSharp: Holder
        VB: Holder
      nameWithType:
        CSharp: DemoToonVFX.Holder
        VB: DemoToonVFX.Holder
      qualifiedName:
        CSharp: DemoToonVFX.Holder
        VB: DemoToonVFX.Holder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Holder
        path: ''
        startLine: 3690
      syntax:
        content:
          CSharp: public Transform Holder
          VB: Public Holder As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.cameraPos
      commentId: F:Global.DemoToonVFX.cameraPos
      language: CSharp
      name:
        CSharp: cameraPos
        VB: cameraPos
      nameWithType:
        CSharp: DemoToonVFX.cameraPos
        VB: DemoToonVFX.cameraPos
      qualifiedName:
        CSharp: DemoToonVFX.cameraPos
        VB: DemoToonVFX.cameraPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: cameraPos
        path: ''
        startLine: 3691
      syntax:
        content:
          CSharp: public Vector3 cameraPos
          VB: Public cameraPos As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.currDistance
      commentId: F:Global.DemoToonVFX.currDistance
      language: CSharp
      name:
        CSharp: currDistance
        VB: currDistance
      nameWithType:
        CSharp: DemoToonVFX.currDistance
        VB: DemoToonVFX.currDistance
      qualifiedName:
        CSharp: DemoToonVFX.currDistance
        VB: DemoToonVFX.currDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currDistance
        path: ''
        startLine: 3692
      syntax:
        content:
          CSharp: public float currDistance
          VB: Public currDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.xRotate
      commentId: F:Global.DemoToonVFX.xRotate
      language: CSharp
      name:
        CSharp: xRotate
        VB: xRotate
      nameWithType:
        CSharp: DemoToonVFX.xRotate
        VB: DemoToonVFX.xRotate
      qualifiedName:
        CSharp: DemoToonVFX.xRotate
        VB: DemoToonVFX.xRotate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: xRotate
        path: ''
        startLine: 3693
      syntax:
        content:
          CSharp: public float xRotate
          VB: Public xRotate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.yRotate
      commentId: F:Global.DemoToonVFX.yRotate
      language: CSharp
      name:
        CSharp: yRotate
        VB: yRotate
      nameWithType:
        CSharp: DemoToonVFX.yRotate
        VB: DemoToonVFX.yRotate
      qualifiedName:
        CSharp: DemoToonVFX.yRotate
        VB: DemoToonVFX.yRotate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yRotate
        path: ''
        startLine: 3694
      syntax:
        content:
          CSharp: public float yRotate
          VB: Public yRotate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.yMinLimit
      commentId: F:Global.DemoToonVFX.yMinLimit
      language: CSharp
      name:
        CSharp: yMinLimit
        VB: yMinLimit
      nameWithType:
        CSharp: DemoToonVFX.yMinLimit
        VB: DemoToonVFX.yMinLimit
      qualifiedName:
        CSharp: DemoToonVFX.yMinLimit
        VB: DemoToonVFX.yMinLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yMinLimit
        path: ''
        startLine: 3695
      syntax:
        content:
          CSharp: public float yMinLimit
          VB: Public yMinLimit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.yMaxLimit
      commentId: F:Global.DemoToonVFX.yMaxLimit
      language: CSharp
      name:
        CSharp: yMaxLimit
        VB: yMaxLimit
      nameWithType:
        CSharp: DemoToonVFX.yMaxLimit
        VB: DemoToonVFX.yMaxLimit
      qualifiedName:
        CSharp: DemoToonVFX.yMaxLimit
        VB: DemoToonVFX.yMaxLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yMaxLimit
        path: ''
        startLine: 3696
      syntax:
        content:
          CSharp: public float yMaxLimit
          VB: Public yMaxLimit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.prevDistance
      commentId: F:Global.DemoToonVFX.prevDistance
      language: CSharp
      name:
        CSharp: prevDistance
        VB: prevDistance
      nameWithType:
        CSharp: DemoToonVFX.prevDistance
        VB: DemoToonVFX.prevDistance
      qualifiedName:
        CSharp: DemoToonVFX.prevDistance
        VB: DemoToonVFX.prevDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: prevDistance
        path: ''
        startLine: 3697
      syntax:
        content:
          CSharp: public float prevDistance
          VB: Public prevDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.Prefabs
      commentId: F:Global.DemoToonVFX.Prefabs
      language: CSharp
      name:
        CSharp: Prefabs
        VB: Prefabs
      nameWithType:
        CSharp: DemoToonVFX.Prefabs
        VB: DemoToonVFX.Prefabs
      qualifiedName:
        CSharp: DemoToonVFX.Prefabs
        VB: DemoToonVFX.Prefabs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Prefabs
        path: ''
        startLine: 3703
      syntax:
        content:
          CSharp: public GameObject[] Prefabs
          VB: Public Prefabs As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.HueTexture
      commentId: F:Global.DemoToonVFX.HueTexture
      language: CSharp
      name:
        CSharp: HueTexture
        VB: HueTexture
      nameWithType:
        CSharp: DemoToonVFX.HueTexture
        VB: DemoToonVFX.HueTexture
      qualifiedName:
        CSharp: DemoToonVFX.HueTexture
        VB: DemoToonVFX.HueTexture
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HueTexture
        path: ''
        startLine: 3708
      syntax:
        content:
          CSharp: public Texture HueTexture
          VB: Public HueTexture As Texture
        return:
          type: Global.Texture
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.activationTime
      commentId: F:Global.DemoToonVFX.activationTime
      language: CSharp
      name:
        CSharp: activationTime
        VB: activationTime
      nameWithType:
        CSharp: DemoToonVFX.activationTime
        VB: DemoToonVFX.activationTime
      qualifiedName:
        CSharp: DemoToonVFX.activationTime
        VB: DemoToonVFX.activationTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: activationTime
        path: ''
        startLine: 3709
      syntax:
        content:
          CSharp: public float[] activationTime
          VB: Public activationTime As Single()
        return:
          type: System.Single[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.animObject
      commentId: F:Global.DemoToonVFX.animObject
      language: CSharp
      name:
        CSharp: animObject
        VB: animObject
      nameWithType:
        CSharp: DemoToonVFX.animObject
        VB: DemoToonVFX.animObject
      qualifiedName:
        CSharp: DemoToonVFX.animObject
        VB: DemoToonVFX.animObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: animObject
        path: ''
        startLine: 3712
      syntax:
        content:
          CSharp: public Animator animObject
          VB: Public animObject As Animator
        return:
          type: Global.Animator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.useAnimation
      commentId: F:Global.DemoToonVFX.useAnimation
      language: CSharp
      name:
        CSharp: useAnimation
        VB: useAnimation
      nameWithType:
        CSharp: DemoToonVFX.useAnimation
        VB: DemoToonVFX.useAnimation
      qualifiedName:
        CSharp: DemoToonVFX.useAnimation
        VB: DemoToonVFX.useAnimation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: useAnimation
        path: ''
        startLine: 3779
      syntax:
        content:
          CSharp: public bool useAnimation
          VB: Public useAnimation As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.DemoToonVFX.SVA
    commentId: T:Global.DemoToonVFX.SVA
    language: CSharp
    name:
      CSharp: DemoToonVFX.SVA
      VB: DemoToonVFX.SVA
    nameWithType:
      CSharp: DemoToonVFX.SVA
      VB: DemoToonVFX.SVA
    qualifiedName:
      CSharp: DemoToonVFX.SVA
      VB: DemoToonVFX.SVA
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SVA
      path: ''
      startLine: 3772
    syntax:
      content:
        CSharp: public struct SVA
        VB: Public Structure SVA
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.DemoToonVFX.SVA.S
      commentId: F:Global.DemoToonVFX.SVA.S
      language: CSharp
      name:
        CSharp: S
        VB: S
      nameWithType:
        CSharp: DemoToonVFX.SVA.S
        VB: DemoToonVFX.SVA.S
      qualifiedName:
        CSharp: DemoToonVFX.SVA.S
        VB: DemoToonVFX.SVA.S
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: S
        path: ''
        startLine: 3774
      syntax:
        content:
          CSharp: public float S
          VB: Public S As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.SVA.V
      commentId: F:Global.DemoToonVFX.SVA.V
      language: CSharp
      name:
        CSharp: V
        VB: V
      nameWithType:
        CSharp: DemoToonVFX.SVA.V
        VB: DemoToonVFX.SVA.V
      qualifiedName:
        CSharp: DemoToonVFX.SVA.V
        VB: DemoToonVFX.SVA.V
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: V
        path: ''
        startLine: 3775
      syntax:
        content:
          CSharp: public float V
          VB: Public V As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DemoToonVFX.SVA.A
      commentId: F:Global.DemoToonVFX.SVA.A
      language: CSharp
      name:
        CSharp: A
        VB: A
      nameWithType:
        CSharp: DemoToonVFX.SVA.A
        VB: DemoToonVFX.SVA.A
      qualifiedName:
        CSharp: DemoToonVFX.SVA.A
        VB: DemoToonVFX.SVA.A
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: A
        path: ''
        startLine: 3776
      syntax:
        content:
          CSharp: public float A
          VB: Public A As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.FrontMover
    commentId: T:Global.FrontMover
    language: CSharp
    name:
      CSharp: FrontMover
      VB: FrontMover
    nameWithType:
      CSharp: FrontMover
      VB: FrontMover
    qualifiedName:
      CSharp: FrontMover
      VB: FrontMover
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FrontMover
      path: ''
      startLine: 3893
    syntax:
      content:
        CSharp: 'public class FrontMover : MonoBehaviour'
        VB: >-
          Public Class FrontMover

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.FrontMover.pivot
      commentId: F:Global.FrontMover.pivot
      language: CSharp
      name:
        CSharp: pivot
        VB: pivot
      nameWithType:
        CSharp: FrontMover.pivot
        VB: FrontMover.pivot
      qualifiedName:
        CSharp: FrontMover.pivot
        VB: FrontMover.pivot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: pivot
        path: ''
        startLine: 3895
      syntax:
        content:
          CSharp: public Transform pivot
          VB: Public pivot As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontMover.effect
      commentId: F:Global.FrontMover.effect
      language: CSharp
      name:
        CSharp: effect
        VB: effect
      nameWithType:
        CSharp: FrontMover.effect
        VB: FrontMover.effect
      qualifiedName:
        CSharp: FrontMover.effect
        VB: FrontMover.effect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: effect
        path: ''
        startLine: 3896
      syntax:
        content:
          CSharp: public ParticleSystem effect
          VB: Public effect As ParticleSystem
        return:
          type: Global.ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontMover.speed
      commentId: F:Global.FrontMover.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: FrontMover.speed
        VB: FrontMover.speed
      qualifiedName:
        CSharp: FrontMover.speed
        VB: FrontMover.speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: speed
        path: ''
        startLine: 3897
      syntax:
        content:
          CSharp: public float speed
          VB: Public speed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontMover.drug
      commentId: F:Global.FrontMover.drug
      language: CSharp
      name:
        CSharp: drug
        VB: drug
      nameWithType:
        CSharp: FrontMover.drug
        VB: FrontMover.drug
      qualifiedName:
        CSharp: FrontMover.drug
        VB: FrontMover.drug
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: drug
        path: ''
        startLine: 3898
      syntax:
        content:
          CSharp: public float drug
          VB: Public drug As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FrontMover.repeatingTime
      commentId: F:Global.FrontMover.repeatingTime
      language: CSharp
      name:
        CSharp: repeatingTime
        VB: repeatingTime
      nameWithType:
        CSharp: FrontMover.repeatingTime
        VB: FrontMover.repeatingTime
      qualifiedName:
        CSharp: FrontMover.repeatingTime
        VB: FrontMover.repeatingTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: repeatingTime
        path: ''
        startLine: 3899
      syntax:
        content:
          CSharp: public float repeatingTime
          VB: Public repeatingTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.EGA_EffectSound
    commentId: T:Global.EGA_EffectSound
    language: CSharp
    name:
      CSharp: EGA_EffectSound
      VB: EGA_EffectSound
    nameWithType:
      CSharp: EGA_EffectSound
      VB: EGA_EffectSound
    qualifiedName:
      CSharp: EGA_EffectSound
      VB: EGA_EffectSound
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EGA_EffectSound
      path: ''
      startLine: 3927
    syntax:
      content:
        CSharp: 'public class EGA_EffectSound : MonoBehaviour'
        VB: >-
          Public Class EGA_EffectSound

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.EGA_EffectSound.Repeating
      commentId: F:Global.EGA_EffectSound.Repeating
      language: CSharp
      name:
        CSharp: Repeating
        VB: Repeating
      nameWithType:
        CSharp: EGA_EffectSound.Repeating
        VB: EGA_EffectSound.Repeating
      qualifiedName:
        CSharp: EGA_EffectSound.Repeating
        VB: EGA_EffectSound.Repeating
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Repeating
        path: ''
        startLine: 3929
      syntax:
        content:
          CSharp: public bool Repeating
          VB: Public Repeating As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.EGA_EffectSound.RepeatTime
      commentId: F:Global.EGA_EffectSound.RepeatTime
      language: CSharp
      name:
        CSharp: RepeatTime
        VB: RepeatTime
      nameWithType:
        CSharp: EGA_EffectSound.RepeatTime
        VB: EGA_EffectSound.RepeatTime
      qualifiedName:
        CSharp: EGA_EffectSound.RepeatTime
        VB: EGA_EffectSound.RepeatTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RepeatTime
        path: ''
        startLine: 3930
      syntax:
        content:
          CSharp: public float RepeatTime
          VB: Public RepeatTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.EGA_EffectSound.StartTime
      commentId: F:Global.EGA_EffectSound.StartTime
      language: CSharp
      name:
        CSharp: StartTime
        VB: StartTime
      nameWithType:
        CSharp: EGA_EffectSound.StartTime
        VB: EGA_EffectSound.StartTime
      qualifiedName:
        CSharp: EGA_EffectSound.StartTime
        VB: EGA_EffectSound.StartTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StartTime
        path: ''
        startLine: 3931
      syntax:
        content:
          CSharp: public float StartTime
          VB: Public StartTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.EGA_EffectSound.RandomVolume
      commentId: F:Global.EGA_EffectSound.RandomVolume
      language: CSharp
      name:
        CSharp: RandomVolume
        VB: RandomVolume
      nameWithType:
        CSharp: EGA_EffectSound.RandomVolume
        VB: EGA_EffectSound.RandomVolume
      qualifiedName:
        CSharp: EGA_EffectSound.RandomVolume
        VB: EGA_EffectSound.RandomVolume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RandomVolume
        path: ''
        startLine: 3932
      syntax:
        content:
          CSharp: public bool RandomVolume
          VB: Public RandomVolume As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.EGA_EffectSound.minVolume
      commentId: F:Global.EGA_EffectSound.minVolume
      language: CSharp
      name:
        CSharp: minVolume
        VB: minVolume
      nameWithType:
        CSharp: EGA_EffectSound.minVolume
        VB: EGA_EffectSound.minVolume
      qualifiedName:
        CSharp: EGA_EffectSound.minVolume
        VB: EGA_EffectSound.minVolume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: minVolume
        path: ''
        startLine: 3933
      syntax:
        content:
          CSharp: public float minVolume
          VB: Public minVolume As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.EGA_EffectSound.maxVolume
      commentId: F:Global.EGA_EffectSound.maxVolume
      language: CSharp
      name:
        CSharp: maxVolume
        VB: maxVolume
      nameWithType:
        CSharp: EGA_EffectSound.maxVolume
        VB: EGA_EffectSound.maxVolume
      qualifiedName:
        CSharp: EGA_EffectSound.maxVolume
        VB: EGA_EffectSound.maxVolume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxVolume
        path: ''
        startLine: 3934
      syntax:
        content:
          CSharp: public float maxVolume
          VB: Public maxVolume As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ParticleCollisionInstance
    commentId: T:Global.ParticleCollisionInstance
    language: CSharp
    name:
      CSharp: ParticleCollisionInstance
      VB: ParticleCollisionInstance
    nameWithType:
      CSharp: ParticleCollisionInstance
      VB: ParticleCollisionInstance
    qualifiedName:
      CSharp: ParticleCollisionInstance
      VB: ParticleCollisionInstance
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ParticleCollisionInstance
      path: ''
      startLine: 3965
    syntax:
      content:
        CSharp: 'public class ParticleCollisionInstance : MonoBehaviour'
        VB: >-
          Public Class ParticleCollisionInstance

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ParticleCollisionInstance.EffectsOnCollision
      commentId: F:Global.ParticleCollisionInstance.EffectsOnCollision
      language: CSharp
      name:
        CSharp: EffectsOnCollision
        VB: EffectsOnCollision
      nameWithType:
        CSharp: ParticleCollisionInstance.EffectsOnCollision
        VB: ParticleCollisionInstance.EffectsOnCollision
      qualifiedName:
        CSharp: ParticleCollisionInstance.EffectsOnCollision
        VB: ParticleCollisionInstance.EffectsOnCollision
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EffectsOnCollision
        path: ''
        startLine: 3967
      syntax:
        content:
          CSharp: public GameObject[] EffectsOnCollision
          VB: Public EffectsOnCollision As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ParticleCollisionInstance.DestroyTimeDelay
      commentId: F:Global.ParticleCollisionInstance.DestroyTimeDelay
      language: CSharp
      name:
        CSharp: DestroyTimeDelay
        VB: DestroyTimeDelay
      nameWithType:
        CSharp: ParticleCollisionInstance.DestroyTimeDelay
        VB: ParticleCollisionInstance.DestroyTimeDelay
      qualifiedName:
        CSharp: ParticleCollisionInstance.DestroyTimeDelay
        VB: ParticleCollisionInstance.DestroyTimeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DestroyTimeDelay
        path: ''
        startLine: 3968
      syntax:
        content:
          CSharp: public float DestroyTimeDelay
          VB: Public DestroyTimeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ParticleCollisionInstance.UseWorldSpacePosition
      commentId: F:Global.ParticleCollisionInstance.UseWorldSpacePosition
      language: CSharp
      name:
        CSharp: UseWorldSpacePosition
        VB: UseWorldSpacePosition
      nameWithType:
        CSharp: ParticleCollisionInstance.UseWorldSpacePosition
        VB: ParticleCollisionInstance.UseWorldSpacePosition
      qualifiedName:
        CSharp: ParticleCollisionInstance.UseWorldSpacePosition
        VB: ParticleCollisionInstance.UseWorldSpacePosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UseWorldSpacePosition
        path: ''
        startLine: 3969
      syntax:
        content:
          CSharp: public bool UseWorldSpacePosition
          VB: Public UseWorldSpacePosition As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ParticleCollisionInstance.Offset
      commentId: F:Global.ParticleCollisionInstance.Offset
      language: CSharp
      name:
        CSharp: Offset
        VB: Offset
      nameWithType:
        CSharp: ParticleCollisionInstance.Offset
        VB: ParticleCollisionInstance.Offset
      qualifiedName:
        CSharp: ParticleCollisionInstance.Offset
        VB: ParticleCollisionInstance.Offset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Offset
        path: ''
        startLine: 3970
      syntax:
        content:
          CSharp: public float Offset
          VB: Public Offset As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ParticleCollisionInstance.rotationOffset
      commentId: F:Global.ParticleCollisionInstance.rotationOffset
      language: CSharp
      name:
        CSharp: rotationOffset
        VB: rotationOffset
      nameWithType:
        CSharp: ParticleCollisionInstance.rotationOffset
        VB: ParticleCollisionInstance.rotationOffset
      qualifiedName:
        CSharp: ParticleCollisionInstance.rotationOffset
        VB: ParticleCollisionInstance.rotationOffset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rotationOffset
        path: ''
        startLine: 3971
      syntax:
        content:
          CSharp: public Vector3 rotationOffset
          VB: Public rotationOffset As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ParticleCollisionInstance.useOnlyRotationOffset
      commentId: F:Global.ParticleCollisionInstance.useOnlyRotationOffset
      language: CSharp
      name:
        CSharp: useOnlyRotationOffset
        VB: useOnlyRotationOffset
      nameWithType:
        CSharp: ParticleCollisionInstance.useOnlyRotationOffset
        VB: ParticleCollisionInstance.useOnlyRotationOffset
      qualifiedName:
        CSharp: ParticleCollisionInstance.useOnlyRotationOffset
        VB: ParticleCollisionInstance.useOnlyRotationOffset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: useOnlyRotationOffset
        path: ''
        startLine: 3972
      syntax:
        content:
          CSharp: public bool useOnlyRotationOffset
          VB: Public useOnlyRotationOffset As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ParticleCollisionInstance.UseFirePointRotation
      commentId: F:Global.ParticleCollisionInstance.UseFirePointRotation
      language: CSharp
      name:
        CSharp: UseFirePointRotation
        VB: UseFirePointRotation
      nameWithType:
        CSharp: ParticleCollisionInstance.UseFirePointRotation
        VB: ParticleCollisionInstance.UseFirePointRotation
      qualifiedName:
        CSharp: ParticleCollisionInstance.UseFirePointRotation
        VB: ParticleCollisionInstance.UseFirePointRotation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UseFirePointRotation
        path: ''
        startLine: 3973
      syntax:
        content:
          CSharp: public bool UseFirePointRotation
          VB: Public UseFirePointRotation As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ParticleCollisionInstance.DestoyMainEffect
      commentId: F:Global.ParticleCollisionInstance.DestoyMainEffect
      language: CSharp
      name:
        CSharp: DestoyMainEffect
        VB: DestoyMainEffect
      nameWithType:
        CSharp: ParticleCollisionInstance.DestoyMainEffect
        VB: ParticleCollisionInstance.DestoyMainEffect
      qualifiedName:
        CSharp: ParticleCollisionInstance.DestoyMainEffect
        VB: ParticleCollisionInstance.DestoyMainEffect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DestoyMainEffect
        path: ''
        startLine: 3974
      syntax:
        content:
          CSharp: public bool DestoyMainEffect
          VB: Public DestoyMainEffect As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffectScene
    commentId: T:Global.csEffectScene
    language: CSharp
    name:
      CSharp: csEffectScene
      VB: csEffectScene
    nameWithType:
      CSharp: csEffectScene
      VB: csEffectScene
    qualifiedName:
      CSharp: csEffectScene
      VB: csEffectScene
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffectScene
      path: ''
      startLine: 4014
    syntax:
      content:
        CSharp: 'public class csEffectScene : MonoBehaviour'
        VB: >-
          Public Class csEffectScene

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffectScene.m_effects
      commentId: F:Global.csEffectScene.m_effects
      language: CSharp
      name:
        CSharp: m_effects
        VB: m_effects
      nameWithType:
        CSharp: csEffectScene.m_effects
        VB: csEffectScene.m_effects
      qualifiedName:
        CSharp: csEffectScene.m_effects
        VB: csEffectScene.m_effects
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_effects
        path: ''
        startLine: 4016
      syntax:
        content:
          CSharp: public Transform[] m_effects
          VB: Public m_effects As Transform()
        return:
          type: Global.Transform[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffectScene.m_packageName
      commentId: F:Global.csEffectScene.m_packageName
      language: CSharp
      name:
        CSharp: m_packageName
        VB: m_packageName
      nameWithType:
        CSharp: csEffectScene.m_packageName
        VB: csEffectScene.m_packageName
      qualifiedName:
        CSharp: csEffectScene.m_packageName
        VB: csEffectScene.m_packageName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_packageName
        path: ''
        startLine: 4017
      syntax:
        content:
          CSharp: public Text m_packageName
          VB: Public m_packageName As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffectScene.m_effectName
      commentId: F:Global.csEffectScene.m_effectName
      language: CSharp
      name:
        CSharp: m_effectName
        VB: m_effectName
      nameWithType:
        CSharp: csEffectScene.m_effectName
        VB: csEffectScene.m_effectName
      qualifiedName:
        CSharp: csEffectScene.m_effectName
        VB: csEffectScene.m_effectName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_effectName
        path: ''
        startLine: 4018
      syntax:
        content:
          CSharp: public Text m_effectName
          VB: Public m_effectName As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffectScene.m_version
      commentId: F:Global.csEffectScene.m_version
      language: CSharp
      name:
        CSharp: m_version
        VB: m_version
      nameWithType:
        CSharp: csEffectScene.m_version
        VB: csEffectScene.m_version
      qualifiedName:
        CSharp: csEffectScene.m_version
        VB: csEffectScene.m_version
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_version
        path: ''
        startLine: 4019
      syntax:
        content:
          CSharp: public Text m_version
          VB: Public m_version As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffectScene.m_explain
      commentId: F:Global.csEffectScene.m_explain
      language: CSharp
      name:
        CSharp: m_explain
        VB: m_explain
      nameWithType:
        CSharp: csEffectScene.m_explain
        VB: csEffectScene.m_explain
      qualifiedName:
        CSharp: csEffectScene.m_explain
        VB: csEffectScene.m_explain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_explain
        path: ''
        startLine: 4020
      syntax:
        content:
          CSharp: public Text m_explain
          VB: Public m_explain As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffectScene.m_destroyObjects
      commentId: F:Global.csEffectScene.m_destroyObjects
      language: CSharp
      name:
        CSharp: m_destroyObjects
        VB: m_destroyObjects
      nameWithType:
        CSharp: csEffectScene.m_destroyObjects
        VB: csEffectScene.m_destroyObjects
      qualifiedName:
        CSharp: csEffectScene.m_destroyObjects
        VB: csEffectScene.m_destroyObjects
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_destroyObjects
        path: ''
        startLine: 4022
      syntax:
        content:
          CSharp: public static GameObject[] m_destroyObjects
          VB: Public Shared m_destroyObjects As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.csEffectScene.inputLocation
      commentId: F:Global.csEffectScene.inputLocation
      language: CSharp
      name:
        CSharp: inputLocation
        VB: inputLocation
      nameWithType:
        CSharp: csEffectScene.inputLocation
        VB: csEffectScene.inputLocation
      qualifiedName:
        CSharp: csEffectScene.inputLocation
        VB: csEffectScene.inputLocation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: inputLocation
        path: ''
        startLine: 4023
      syntax:
        content:
          CSharp: public static int inputLocation
          VB: Public Shared inputLocation As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.csLookAt
    commentId: T:Global.csLookAt
    language: CSharp
    name:
      CSharp: csLookAt
      VB: csLookAt
    nameWithType:
      CSharp: csLookAt
      VB: csLookAt
    qualifiedName:
      CSharp: csLookAt
      VB: csLookAt
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csLookAt
      path: ''
      startLine: 4097
    syntax:
      content:
        CSharp: 'public class csLookAt : MonoBehaviour'
        VB: >-
          Public Class csLookAt

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csLookAt.ts
      commentId: F:Global.csLookAt.ts
      language: CSharp
      name:
        CSharp: ts
        VB: ts
      nameWithType:
        CSharp: csLookAt.ts
        VB: csLookAt.ts
      qualifiedName:
        CSharp: csLookAt.ts
        VB: csLookAt.ts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ts
        path: ''
        startLine: 4099
      syntax:
        content:
          CSharp: public Transform ts
          VB: Public ts As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csMouseOrbit
    commentId: T:Global.csMouseOrbit
    language: CSharp
    name:
      CSharp: csMouseOrbit
      VB: csMouseOrbit
    nameWithType:
      CSharp: csMouseOrbit
      VB: csMouseOrbit
    qualifiedName:
      CSharp: csMouseOrbit
      VB: csMouseOrbit
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csMouseOrbit
      path: ''
      startLine: 4109
    syntax:
      content:
        CSharp: 'public class csMouseOrbit : MonoBehaviour'
        VB: >-
          Public Class csMouseOrbit

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csMouseOrbit.Target
      commentId: F:Global.csMouseOrbit.Target
      language: CSharp
      name:
        CSharp: Target
        VB: Target
      nameWithType:
        CSharp: csMouseOrbit.Target
        VB: csMouseOrbit.Target
      qualifiedName:
        CSharp: csMouseOrbit.Target
        VB: csMouseOrbit.Target
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Target
        path: ''
        startLine: 4112
      syntax:
        content:
          CSharp: public Transform Target
          VB: Public Target As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMouseOrbit.distance
      commentId: F:Global.csMouseOrbit.distance
      language: CSharp
      name:
        CSharp: distance
        VB: distance
      nameWithType:
        CSharp: csMouseOrbit.distance
        VB: csMouseOrbit.distance
      qualifiedName:
        CSharp: csMouseOrbit.distance
        VB: csMouseOrbit.distance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: distance
        path: ''
        startLine: 4113
      syntax:
        content:
          CSharp: public float distance
          VB: Public distance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMouseOrbit.xSpeed
      commentId: F:Global.csMouseOrbit.xSpeed
      language: CSharp
      name:
        CSharp: xSpeed
        VB: xSpeed
      nameWithType:
        CSharp: csMouseOrbit.xSpeed
        VB: csMouseOrbit.xSpeed
      qualifiedName:
        CSharp: csMouseOrbit.xSpeed
        VB: csMouseOrbit.xSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: xSpeed
        path: ''
        startLine: 4115
      syntax:
        content:
          CSharp: public float xSpeed
          VB: Public xSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMouseOrbit.ySpeed
      commentId: F:Global.csMouseOrbit.ySpeed
      language: CSharp
      name:
        CSharp: ySpeed
        VB: ySpeed
      nameWithType:
        CSharp: csMouseOrbit.ySpeed
        VB: csMouseOrbit.ySpeed
      qualifiedName:
        CSharp: csMouseOrbit.ySpeed
        VB: csMouseOrbit.ySpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ySpeed
        path: ''
        startLine: 4116
      syntax:
        content:
          CSharp: public float ySpeed
          VB: Public ySpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMouseOrbit.yMinLimit
      commentId: F:Global.csMouseOrbit.yMinLimit
      language: CSharp
      name:
        CSharp: yMinLimit
        VB: yMinLimit
      nameWithType:
        CSharp: csMouseOrbit.yMinLimit
        VB: csMouseOrbit.yMinLimit
      qualifiedName:
        CSharp: csMouseOrbit.yMinLimit
        VB: csMouseOrbit.yMinLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yMinLimit
        path: ''
        startLine: 4118
      syntax:
        content:
          CSharp: public float yMinLimit
          VB: Public yMinLimit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMouseOrbit.yMaxLimit
      commentId: F:Global.csMouseOrbit.yMaxLimit
      language: CSharp
      name:
        CSharp: yMaxLimit
        VB: yMaxLimit
      nameWithType:
        CSharp: csMouseOrbit.yMaxLimit
        VB: csMouseOrbit.yMaxLimit
      qualifiedName:
        CSharp: csMouseOrbit.yMaxLimit
        VB: csMouseOrbit.yMaxLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: yMaxLimit
        path: ''
        startLine: 4119
      syntax:
        content:
          CSharp: public float yMaxLimit
          VB: Public yMaxLimit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMouseOrbit.CameraDist
      commentId: F:Global.csMouseOrbit.CameraDist
      language: CSharp
      name:
        CSharp: CameraDist
        VB: CameraDist
      nameWithType:
        CSharp: csMouseOrbit.CameraDist
        VB: csMouseOrbit.CameraDist
      qualifiedName:
        CSharp: csMouseOrbit.CameraDist
        VB: csMouseOrbit.CameraDist
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CameraDist
        path: ''
        startLine: 4123
      syntax:
        content:
          CSharp: public float CameraDist
          VB: Public CameraDist As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csLaser
    commentId: T:Global.csLaser
    language: CSharp
    name:
      CSharp: csLaser
      VB: csLaser
    nameWithType:
      CSharp: csLaser
      VB: csLaser
    qualifiedName:
      CSharp: csLaser
      VB: csLaser
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csLaser
      path: ''
      startLine: 4181
    syntax:
      content:
        CSharp: 'public class csLaser : MonoBehaviour'
        VB: >-
          Public Class csLaser

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csLaser.Width
      commentId: F:Global.csLaser.Width
      language: CSharp
      name:
        CSharp: Width
        VB: Width
      nameWithType:
        CSharp: csLaser.Width
        VB: csLaser.Width
      qualifiedName:
        CSharp: csLaser.Width
        VB: csLaser.Width
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Width
        path: ''
        startLine: 4184
      syntax:
        content:
          CSharp: public float Width
          VB: Public Width As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csLaser.Offset
      commentId: F:Global.csLaser.Offset
      language: CSharp
      name:
        CSharp: Offset
        VB: Offset
      nameWithType:
        CSharp: csLaser.Offset
        VB: csLaser.Offset
      qualifiedName:
        CSharp: csLaser.Offset
        VB: csLaser.Offset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Offset
        path: ''
        startLine: 4186
      syntax:
        content:
          CSharp: public float Offset
          VB: Public Offset As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csLaser.MaxLength
      commentId: F:Global.csLaser.MaxLength
      language: CSharp
      name:
        CSharp: MaxLength
        VB: MaxLength
      nameWithType:
        CSharp: csLaser.MaxLength
        VB: csLaser.MaxLength
      qualifiedName:
        CSharp: csLaser.MaxLength
        VB: csLaser.MaxLength
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MaxLength
        path: ''
        startLine: 4187
      syntax:
        content:
          CSharp: public float MaxLength
          VB: Public MaxLength As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csLaser.LaserHitEffect
      commentId: F:Global.csLaser.LaserHitEffect
      language: CSharp
      name:
        CSharp: LaserHitEffect
        VB: LaserHitEffect
      nameWithType:
        CSharp: csLaser.LaserHitEffect
        VB: csLaser.LaserHitEffect
      qualifiedName:
        CSharp: csLaser.LaserHitEffect
        VB: csLaser.LaserHitEffect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LaserHitEffect
        path: ''
        startLine: 4188
      syntax:
        content:
          CSharp: public Transform LaserHitEffect
          VB: Public LaserHitEffect As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csLaser._Material
      commentId: F:Global.csLaser._Material
      language: CSharp
      name:
        CSharp: _Material
        VB: _Material
      nameWithType:
        CSharp: csLaser._Material
        VB: csLaser._Material
      qualifiedName:
        CSharp: csLaser._Material
        VB: csLaser._Material
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _Material
        path: ''
        startLine: 4189
      syntax:
        content:
          CSharp: public Material _Material
          VB: Public _Material As Material
        return:
          type: Global.Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csLaser.MaxTime
      commentId: F:Global.csLaser.MaxTime
      language: CSharp
      name:
        CSharp: MaxTime
        VB: MaxTime
      nameWithType:
        CSharp: csLaser.MaxTime
        VB: csLaser.MaxTime
      qualifiedName:
        CSharp: csLaser.MaxTime
        VB: csLaser.MaxTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MaxTime
        path: ''
        startLine: 4194
      syntax:
        content:
          CSharp: public float MaxTime
          VB: Public MaxTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csLaser.shrinkValue
      commentId: F:Global.csLaser.shrinkValue
      language: CSharp
      name:
        CSharp: shrinkValue
        VB: shrinkValue
      nameWithType:
        CSharp: csLaser.shrinkValue
        VB: csLaser.shrinkValue
      qualifiedName:
        CSharp: csLaser.shrinkValue
        VB: csLaser.shrinkValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shrinkValue
        path: ''
        startLine: 4195
      syntax:
        content:
          CSharp: public float shrinkValue
          VB: Public shrinkValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csMaterial_Change
    commentId: T:Global.csMaterial_Change
    language: CSharp
    name:
      CSharp: csMaterial_Change
      VB: csMaterial_Change
    nameWithType:
      CSharp: csMaterial_Change
      VB: csMaterial_Change
    qualifiedName:
      CSharp: csMaterial_Change
      VB: csMaterial_Change
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csMaterial_Change
      path: ''
      startLine: 4259
    syntax:
      content:
        CSharp: 'public class csMaterial_Change : MonoBehaviour'
        VB: >-
          Public Class csMaterial_Change

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csMaterial_Change.m_inputMaterial
      commentId: F:Global.csMaterial_Change.m_inputMaterial
      language: CSharp
      name:
        CSharp: m_inputMaterial
        VB: m_inputMaterial
      nameWithType:
        CSharp: csMaterial_Change.m_inputMaterial
        VB: csMaterial_Change.m_inputMaterial
      qualifiedName:
        CSharp: csMaterial_Change.m_inputMaterial
        VB: csMaterial_Change.m_inputMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_inputMaterial
        path: ''
        startLine: 4261
      syntax:
        content:
          CSharp: public Material m_inputMaterial
          VB: Public m_inputMaterial As Material
        return:
          type: Global.Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMaterial_Change.m_timeToReduce
      commentId: F:Global.csMaterial_Change.m_timeToReduce
      language: CSharp
      name:
        CSharp: m_timeToReduce
        VB: m_timeToReduce
      nameWithType:
        CSharp: csMaterial_Change.m_timeToReduce
        VB: csMaterial_Change.m_timeToReduce
      qualifiedName:
        CSharp: csMaterial_Change.m_timeToReduce
        VB: csMaterial_Change.m_timeToReduce
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_timeToReduce
        path: ''
        startLine: 4264
      syntax:
        content:
          CSharp: public float m_timeToReduce
          VB: Public m_timeToReduce As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMaterial_Change.m_reduceFactor
      commentId: F:Global.csMaterial_Change.m_reduceFactor
      language: CSharp
      name:
        CSharp: m_reduceFactor
        VB: m_reduceFactor
      nameWithType:
        CSharp: csMaterial_Change.m_reduceFactor
        VB: csMaterial_Change.m_reduceFactor
      qualifiedName:
        CSharp: csMaterial_Change.m_reduceFactor
        VB: csMaterial_Change.m_reduceFactor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_reduceFactor
        path: ''
        startLine: 4265
      syntax:
        content:
          CSharp: public float m_reduceFactor
          VB: Public m_reduceFactor As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMaterial_Change.m_timeToStart
      commentId: F:Global.csMaterial_Change.m_timeToStart
      language: CSharp
      name:
        CSharp: m_timeToStart
        VB: m_timeToStart
      nameWithType:
        CSharp: csMaterial_Change.m_timeToStart
        VB: csMaterial_Change.m_timeToStart
      qualifiedName:
        CSharp: csMaterial_Change.m_timeToStart
        VB: csMaterial_Change.m_timeToStart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_timeToStart
        path: ''
        startLine: 4266
      syntax:
        content:
          CSharp: public float m_timeToStart
          VB: Public m_timeToStart As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMaterial_Change.m_startFactor
      commentId: F:Global.csMaterial_Change.m_startFactor
      language: CSharp
      name:
        CSharp: m_startFactor
        VB: m_startFactor
      nameWithType:
        CSharp: csMaterial_Change.m_startFactor
        VB: csMaterial_Change.m_startFactor
      qualifiedName:
        CSharp: csMaterial_Change.m_startFactor
        VB: csMaterial_Change.m_startFactor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startFactor
        path: ''
        startLine: 4267
      syntax:
        content:
          CSharp: public float m_startFactor
          VB: Public m_startFactor As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csMaterial_Change.SetTime(System.Single,System.Boolean)
      commentId: M:Global.csMaterial_Change.SetTime(System.Single,System.Boolean)
      language: CSharp
      name:
        CSharp: SetTime(Single, Boolean)
        VB: SetTime(Single, Boolean)
      nameWithType:
        CSharp: csMaterial_Change.SetTime(Single, Boolean)
        VB: csMaterial_Change.SetTime(Single, Boolean)
      qualifiedName:
        CSharp: csMaterial_Change.SetTime(System.Single, System.Boolean)
        VB: csMaterial_Change.SetTime(System.Single, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetTime
        path: ''
        startLine: 4302
      syntax:
        content:
          CSharp: public void SetTime(float _Duration, bool _Loop)
          VB: Public Sub SetTime(_Duration As Single, _Loop As Boolean)
        parameters:
        - id: _Duration
          type: System.Single
        - id: _Loop
          type: System.Boolean
      overload: Global.csMaterial_Change.SetTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csMove
    commentId: T:Global.csMove
    language: CSharp
    name:
      CSharp: csMove
      VB: csMove
    nameWithType:
      CSharp: csMove
      VB: csMove
    qualifiedName:
      CSharp: csMove
      VB: csMove
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csMove
      path: ''
      startLine: 4315
    syntax:
      content:
        CSharp: 'public class csMove : MonoBehaviour'
        VB: >-
          Public Class csMove

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csMove.MoveSpeed
      commentId: F:Global.csMove.MoveSpeed
      language: CSharp
      name:
        CSharp: MoveSpeed
        VB: MoveSpeed
      nameWithType:
        CSharp: csMove.MoveSpeed
        VB: csMove.MoveSpeed
      qualifiedName:
        CSharp: csMove.MoveSpeed
        VB: csMove.MoveSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MoveSpeed
        path: ''
        startLine: 4317
      syntax:
        content:
          CSharp: public float MoveSpeed
          VB: Public MoveSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csObjectMoveDestroy
    commentId: T:Global.csObjectMoveDestroy
    language: CSharp
    name:
      CSharp: csObjectMoveDestroy
      VB: csObjectMoveDestroy
    nameWithType:
      CSharp: csObjectMoveDestroy
      VB: csObjectMoveDestroy
    qualifiedName:
      CSharp: csObjectMoveDestroy
      VB: csObjectMoveDestroy
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csObjectMoveDestroy
      path: ''
      startLine: 4331
    syntax:
      content:
        CSharp: 'public class csObjectMoveDestroy : MonoBehaviour'
        VB: >-
          Public Class csObjectMoveDestroy

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csObjectMoveDestroy.m_gameObjectMain
      commentId: F:Global.csObjectMoveDestroy.m_gameObjectMain
      language: CSharp
      name:
        CSharp: m_gameObjectMain
        VB: m_gameObjectMain
      nameWithType:
        CSharp: csObjectMoveDestroy.m_gameObjectMain
        VB: csObjectMoveDestroy.m_gameObjectMain
      qualifiedName:
        CSharp: csObjectMoveDestroy.m_gameObjectMain
        VB: csObjectMoveDestroy.m_gameObjectMain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObjectMain
        path: ''
        startLine: 4333
      syntax:
        content:
          CSharp: public GameObject m_gameObjectMain
          VB: Public m_gameObjectMain As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy.m_gameObjectTail
      commentId: F:Global.csObjectMoveDestroy.m_gameObjectTail
      language: CSharp
      name:
        CSharp: m_gameObjectTail
        VB: m_gameObjectTail
      nameWithType:
        CSharp: csObjectMoveDestroy.m_gameObjectTail
        VB: csObjectMoveDestroy.m_gameObjectTail
      qualifiedName:
        CSharp: csObjectMoveDestroy.m_gameObjectTail
        VB: csObjectMoveDestroy.m_gameObjectTail
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObjectTail
        path: ''
        startLine: 4334
      syntax:
        content:
          CSharp: public GameObject m_gameObjectTail
          VB: Public m_gameObjectTail As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy.m_hitObject
      commentId: F:Global.csObjectMoveDestroy.m_hitObject
      language: CSharp
      name:
        CSharp: m_hitObject
        VB: m_hitObject
      nameWithType:
        CSharp: csObjectMoveDestroy.m_hitObject
        VB: csObjectMoveDestroy.m_hitObject
      qualifiedName:
        CSharp: csObjectMoveDestroy.m_hitObject
        VB: csObjectMoveDestroy.m_hitObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_hitObject
        path: ''
        startLine: 4336
      syntax:
        content:
          CSharp: public Transform m_hitObject
          VB: Public m_hitObject As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy.maxLength
      commentId: F:Global.csObjectMoveDestroy.maxLength
      language: CSharp
      name:
        CSharp: maxLength
        VB: maxLength
      nameWithType:
        CSharp: csObjectMoveDestroy.maxLength
        VB: csObjectMoveDestroy.maxLength
      qualifiedName:
        CSharp: csObjectMoveDestroy.maxLength
        VB: csObjectMoveDestroy.maxLength
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxLength
        path: ''
        startLine: 4337
      syntax:
        content:
          CSharp: public float maxLength
          VB: Public maxLength As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy.DestroyTime
      commentId: F:Global.csObjectMoveDestroy.DestroyTime
      language: CSharp
      name:
        CSharp: DestroyTime
        VB: DestroyTime
      nameWithType:
        CSharp: csObjectMoveDestroy.DestroyTime
        VB: csObjectMoveDestroy.DestroyTime
      qualifiedName:
        CSharp: csObjectMoveDestroy.DestroyTime
        VB: csObjectMoveDestroy.DestroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DestroyTime
        path: ''
        startLine: 4338
      syntax:
        content:
          CSharp: public float DestroyTime
          VB: Public DestroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy.DestroyTime2
      commentId: F:Global.csObjectMoveDestroy.DestroyTime2
      language: CSharp
      name:
        CSharp: DestroyTime2
        VB: DestroyTime2
      nameWithType:
        CSharp: csObjectMoveDestroy.DestroyTime2
        VB: csObjectMoveDestroy.DestroyTime2
      qualifiedName:
        CSharp: csObjectMoveDestroy.DestroyTime2
        VB: csObjectMoveDestroy.DestroyTime2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DestroyTime2
        path: ''
        startLine: 4339
      syntax:
        content:
          CSharp: public float DestroyTime2
          VB: Public DestroyTime2 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy.maxTime
      commentId: F:Global.csObjectMoveDestroy.maxTime
      language: CSharp
      name:
        CSharp: maxTime
        VB: maxTime
      nameWithType:
        CSharp: csObjectMoveDestroy.maxTime
        VB: csObjectMoveDestroy.maxTime
      qualifiedName:
        CSharp: csObjectMoveDestroy.maxTime
        VB: csObjectMoveDestroy.maxTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxTime
        path: ''
        startLine: 4340
      syntax:
        content:
          CSharp: public float maxTime
          VB: Public maxTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy.MoveSpeed
      commentId: F:Global.csObjectMoveDestroy.MoveSpeed
      language: CSharp
      name:
        CSharp: MoveSpeed
        VB: MoveSpeed
      nameWithType:
        CSharp: csObjectMoveDestroy.MoveSpeed
        VB: csObjectMoveDestroy.MoveSpeed
      qualifiedName:
        CSharp: csObjectMoveDestroy.MoveSpeed
        VB: csObjectMoveDestroy.MoveSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MoveSpeed
        path: ''
        startLine: 4343
      syntax:
        content:
          CSharp: public float MoveSpeed
          VB: Public MoveSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csObjectMoveDestroy2
    commentId: T:Global.csObjectMoveDestroy2
    language: CSharp
    name:
      CSharp: csObjectMoveDestroy2
      VB: csObjectMoveDestroy2
    nameWithType:
      CSharp: csObjectMoveDestroy2
      VB: csObjectMoveDestroy2
    qualifiedName:
      CSharp: csObjectMoveDestroy2
      VB: csObjectMoveDestroy2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csObjectMoveDestroy2
      path: ''
      startLine: 4376
    syntax:
      content:
        CSharp: 'public class csObjectMoveDestroy2 : MonoBehaviour'
        VB: >-
          Public Class csObjectMoveDestroy2

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csObjectMoveDestroy2.m_gameObjectMain
      commentId: F:Global.csObjectMoveDestroy2.m_gameObjectMain
      language: CSharp
      name:
        CSharp: m_gameObjectMain
        VB: m_gameObjectMain
      nameWithType:
        CSharp: csObjectMoveDestroy2.m_gameObjectMain
        VB: csObjectMoveDestroy2.m_gameObjectMain
      qualifiedName:
        CSharp: csObjectMoveDestroy2.m_gameObjectMain
        VB: csObjectMoveDestroy2.m_gameObjectMain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObjectMain
        path: ''
        startLine: 4378
      syntax:
        content:
          CSharp: public GameObject m_gameObjectMain
          VB: Public m_gameObjectMain As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy2.m_gameObjectTail
      commentId: F:Global.csObjectMoveDestroy2.m_gameObjectTail
      language: CSharp
      name:
        CSharp: m_gameObjectTail
        VB: m_gameObjectTail
      nameWithType:
        CSharp: csObjectMoveDestroy2.m_gameObjectTail
        VB: csObjectMoveDestroy2.m_gameObjectTail
      qualifiedName:
        CSharp: csObjectMoveDestroy2.m_gameObjectTail
        VB: csObjectMoveDestroy2.m_gameObjectTail
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObjectTail
        path: ''
        startLine: 4379
      syntax:
        content:
          CSharp: public GameObject m_gameObjectTail
          VB: Public m_gameObjectTail As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy2.DestroyTime
      commentId: F:Global.csObjectMoveDestroy2.DestroyTime
      language: CSharp
      name:
        CSharp: DestroyTime
        VB: DestroyTime
      nameWithType:
        CSharp: csObjectMoveDestroy2.DestroyTime
        VB: csObjectMoveDestroy2.DestroyTime
      qualifiedName:
        CSharp: csObjectMoveDestroy2.DestroyTime
        VB: csObjectMoveDestroy2.DestroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DestroyTime
        path: ''
        startLine: 4381
      syntax:
        content:
          CSharp: public float DestroyTime
          VB: Public DestroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy2.maxTime
      commentId: F:Global.csObjectMoveDestroy2.maxTime
      language: CSharp
      name:
        CSharp: maxTime
        VB: maxTime
      nameWithType:
        CSharp: csObjectMoveDestroy2.maxTime
        VB: csObjectMoveDestroy2.maxTime
      qualifiedName:
        CSharp: csObjectMoveDestroy2.maxTime
        VB: csObjectMoveDestroy2.maxTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxTime
        path: ''
        startLine: 4382
      syntax:
        content:
          CSharp: public float maxTime
          VB: Public maxTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMoveDestroy2.MoveSpeed
      commentId: F:Global.csObjectMoveDestroy2.MoveSpeed
      language: CSharp
      name:
        CSharp: MoveSpeed
        VB: MoveSpeed
      nameWithType:
        CSharp: csObjectMoveDestroy2.MoveSpeed
        VB: csObjectMoveDestroy2.MoveSpeed
      qualifiedName:
        CSharp: csObjectMoveDestroy2.MoveSpeed
        VB: csObjectMoveDestroy2.MoveSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MoveSpeed
        path: ''
        startLine: 4384
      syntax:
        content:
          CSharp: public float MoveSpeed
          VB: Public MoveSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csParticleStop
    commentId: T:Global.csParticleStop
    language: CSharp
    name:
      CSharp: csParticleStop
      VB: csParticleStop
    nameWithType:
      CSharp: csParticleStop
      VB: csParticleStop
    qualifiedName:
      CSharp: csParticleStop
      VB: csParticleStop
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csParticleStop
      path: ''
      startLine: 4403
    syntax:
      content:
        CSharp: 'public class csParticleStop : MonoBehaviour'
        VB: >-
          Public Class csParticleStop

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csParticleStop.m_particleMembers
      commentId: F:Global.csParticleStop.m_particleMembers
      language: CSharp
      name:
        CSharp: m_particleMembers
        VB: m_particleMembers
      nameWithType:
        CSharp: csParticleStop.m_particleMembers
        VB: csParticleStop.m_particleMembers
      qualifiedName:
        CSharp: csParticleStop.m_particleMembers
        VB: csParticleStop.m_particleMembers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_particleMembers
        path: ''
        startLine: 4405
      syntax:
        content:
          CSharp: public ParticleSystem[] m_particleMembers
          VB: Public m_particleMembers As ParticleSystem()
        return:
          type: Global.ParticleSystem[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csParticleStop.m_stopTime
      commentId: F:Global.csParticleStop.m_stopTime
      language: CSharp
      name:
        CSharp: m_stopTime
        VB: m_stopTime
      nameWithType:
        CSharp: csParticleStop.m_stopTime
        VB: csParticleStop.m_stopTime
      qualifiedName:
        CSharp: csParticleStop.m_stopTime
        VB: csParticleStop.m_stopTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_stopTime
        path: ''
        startLine: 4406
      syntax:
        content:
          CSharp: public float m_stopTime
          VB: Public m_stopTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csRiseDown
    commentId: T:Global.csRiseDown
    language: CSharp
    name:
      CSharp: csRiseDown
      VB: csRiseDown
    nameWithType:
      CSharp: csRiseDown
      VB: csRiseDown
    qualifiedName:
      CSharp: csRiseDown
      VB: csRiseDown
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csRiseDown
      path: ''
      startLine: 4428
    syntax:
      content:
        CSharp: 'public class csRiseDown : MonoBehaviour'
        VB: >-
          Public Class csRiseDown

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csRiseDown.m_y_Value
      commentId: F:Global.csRiseDown.m_y_Value
      language: CSharp
      name:
        CSharp: m_y_Value
        VB: m_y_Value
      nameWithType:
        CSharp: csRiseDown.m_y_Value
        VB: csRiseDown.m_y_Value
      qualifiedName:
        CSharp: csRiseDown.m_y_Value
        VB: csRiseDown.m_y_Value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_y_Value
        path: ''
        startLine: 4430
      syntax:
        content:
          CSharp: public float m_y_Value
          VB: Public m_y_Value As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csRiseDown.m_durationTime
      commentId: F:Global.csRiseDown.m_durationTime
      language: CSharp
      name:
        CSharp: m_durationTime
        VB: m_durationTime
      nameWithType:
        CSharp: csRiseDown.m_durationTime
        VB: csRiseDown.m_durationTime
      qualifiedName:
        CSharp: csRiseDown.m_durationTime
        VB: csRiseDown.m_durationTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_durationTime
        path: ''
        startLine: 4431
      syntax:
        content:
          CSharp: public float m_durationTime
          VB: Public m_durationTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csRiseDown.m_endTime
      commentId: F:Global.csRiseDown.m_endTime
      language: CSharp
      name:
        CSharp: m_endTime
        VB: m_endTime
      nameWithType:
        CSharp: csRiseDown.m_endTime
        VB: csRiseDown.m_endTime
      qualifiedName:
        CSharp: csRiseDown.m_endTime
        VB: csRiseDown.m_endTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_endTime
        path: ''
        startLine: 4432
      syntax:
        content:
          CSharp: public float m_endTime
          VB: Public m_endTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csRiseDown.m_lerpTime
      commentId: F:Global.csRiseDown.m_lerpTime
      language: CSharp
      name:
        CSharp: m_lerpTime
        VB: m_lerpTime
      nameWithType:
        CSharp: csRiseDown.m_lerpTime
        VB: csRiseDown.m_lerpTime
      qualifiedName:
        CSharp: csRiseDown.m_lerpTime
        VB: csRiseDown.m_lerpTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_lerpTime
        path: ''
        startLine: 4433
      syntax:
        content:
          CSharp: public float m_lerpTime
          VB: Public m_lerpTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csRiseDown.m_startTime
      commentId: F:Global.csRiseDown.m_startTime
      language: CSharp
      name:
        CSharp: m_startTime
        VB: m_startTime
      nameWithType:
        CSharp: csRiseDown.m_startTime
        VB: csRiseDown.m_startTime
      qualifiedName:
        CSharp: csRiseDown.m_startTime
        VB: csRiseDown.m_startTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startTime
        path: ''
        startLine: 4437
      syntax:
        content:
          CSharp: public float m_startTime
          VB: Public m_startTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csRotate
    commentId: T:Global.csRotate
    language: CSharp
    name:
      CSharp: csRotate
      VB: csRotate
    nameWithType:
      CSharp: csRotate
      VB: csRotate
    qualifiedName:
      CSharp: csRotate
      VB: csRotate
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csRotate
      path: ''
      startLine: 4461
    syntax:
      content:
        CSharp: 'public class csRotate : MonoBehaviour'
        VB: >-
          Public Class csRotate

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csRotate.RotateOffset
      commentId: F:Global.csRotate.RotateOffset
      language: CSharp
      name:
        CSharp: RotateOffset
        VB: RotateOffset
      nameWithType:
        CSharp: csRotate.RotateOffset
        VB: csRotate.RotateOffset
      qualifiedName:
        CSharp: csRotate.RotateOffset
        VB: csRotate.RotateOffset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RotateOffset
        path: ''
        startLine: 4463
      syntax:
        content:
          CSharp: public Vector3 RotateOffset
          VB: Public RotateOffset As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csScaleChange
    commentId: T:Global.csScaleChange
    language: CSharp
    name:
      CSharp: csScaleChange
      VB: csScaleChange
    nameWithType:
      CSharp: csScaleChange
      VB: csScaleChange
    qualifiedName:
      CSharp: csScaleChange
      VB: csScaleChange
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csScaleChange
      path: ''
      startLine: 4482
    syntax:
      content:
        CSharp: 'public class csScaleChange : MonoBehaviour'
        VB: >-
          Public Class csScaleChange

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csScaleChange.m_Weight
      commentId: F:Global.csScaleChange.m_Weight
      language: CSharp
      name:
        CSharp: m_Weight
        VB: m_Weight
      nameWithType:
        CSharp: csScaleChange.m_Weight
        VB: csScaleChange.m_Weight
      qualifiedName:
        CSharp: csScaleChange.m_Weight
        VB: csScaleChange.m_Weight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_Weight
        path: ''
        startLine: 4485
      syntax:
        content:
          CSharp: public float m_Weight
          VB: Public m_Weight As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csScaleChange.isScaleUp
      commentId: F:Global.csScaleChange.isScaleUp
      language: CSharp
      name:
        CSharp: isScaleUp
        VB: isScaleUp
      nameWithType:
        CSharp: csScaleChange.isScaleUp
        VB: csScaleChange.isScaleUp
      qualifiedName:
        CSharp: csScaleChange.isScaleUp
        VB: csScaleChange.isScaleUp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isScaleUp
        path: ''
        startLine: 4486
      syntax:
        content:
          CSharp: public bool isScaleUp
          VB: Public isScaleUp As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csScaleChange.m_startTime
      commentId: F:Global.csScaleChange.m_startTime
      language: CSharp
      name:
        CSharp: m_startTime
        VB: m_startTime
      nameWithType:
        CSharp: csScaleChange.m_startTime
        VB: csScaleChange.m_startTime
      qualifiedName:
        CSharp: csScaleChange.m_startTime
        VB: csScaleChange.m_startTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startTime
        path: ''
        startLine: 4487
      syntax:
        content:
          CSharp: public float m_startTime
          VB: Public m_startTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_76_Animation
    commentId: T:Global.csEffect_76_Animation
    language: CSharp
    name:
      CSharp: csEffect_76_Animation
      VB: csEffect_76_Animation
    nameWithType:
      CSharp: csEffect_76_Animation
      VB: csEffect_76_Animation
    qualifiedName:
      CSharp: csEffect_76_Animation
      VB: csEffect_76_Animation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_76_Animation
      path: ''
      startLine: 4512
    syntax:
      content:
        CSharp: 'public class csEffect_76_Animation : MonoBehaviour'
        VB: >-
          Public Class csEffect_76_Animation

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_76_Animation.m_y_StopPos
      commentId: F:Global.csEffect_76_Animation.m_y_StopPos
      language: CSharp
      name:
        CSharp: m_y_StopPos
        VB: m_y_StopPos
      nameWithType:
        CSharp: csEffect_76_Animation.m_y_StopPos
        VB: csEffect_76_Animation.m_y_StopPos
      qualifiedName:
        CSharp: csEffect_76_Animation.m_y_StopPos
        VB: csEffect_76_Animation.m_y_StopPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_y_StopPos
        path: ''
        startLine: 4515
      syntax:
        content:
          CSharp: public float m_y_StopPos
          VB: Public m_y_StopPos As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_y_randomValue
      commentId: F:Global.csEffect_76_Animation.m_y_randomValue
      language: CSharp
      name:
        CSharp: m_y_randomValue
        VB: m_y_randomValue
      nameWithType:
        CSharp: csEffect_76_Animation.m_y_randomValue
        VB: csEffect_76_Animation.m_y_randomValue
      qualifiedName:
        CSharp: csEffect_76_Animation.m_y_randomValue
        VB: csEffect_76_Animation.m_y_randomValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_y_randomValue
        path: ''
        startLine: 4516
      syntax:
        content:
          CSharp: public float m_y_randomValue
          VB: Public m_y_randomValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_durationTime
      commentId: F:Global.csEffect_76_Animation.m_durationTime
      language: CSharp
      name:
        CSharp: m_durationTime
        VB: m_durationTime
      nameWithType:
        CSharp: csEffect_76_Animation.m_durationTime
        VB: csEffect_76_Animation.m_durationTime
      qualifiedName:
        CSharp: csEffect_76_Animation.m_durationTime
        VB: csEffect_76_Animation.m_durationTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_durationTime
        path: ''
        startLine: 4517
      syntax:
        content:
          CSharp: public float m_durationTime
          VB: Public m_durationTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_firstLerpValue
      commentId: F:Global.csEffect_76_Animation.m_firstLerpValue
      language: CSharp
      name:
        CSharp: m_firstLerpValue
        VB: m_firstLerpValue
      nameWithType:
        CSharp: csEffect_76_Animation.m_firstLerpValue
        VB: csEffect_76_Animation.m_firstLerpValue
      qualifiedName:
        CSharp: csEffect_76_Animation.m_firstLerpValue
        VB: csEffect_76_Animation.m_firstLerpValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_firstLerpValue
        path: ''
        startLine: 4518
      syntax:
        content:
          CSharp: public float m_firstLerpValue
          VB: Public m_firstLerpValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_lookAtTime
      commentId: F:Global.csEffect_76_Animation.m_lookAtTime
      language: CSharp
      name:
        CSharp: m_lookAtTime
        VB: m_lookAtTime
      nameWithType:
        CSharp: csEffect_76_Animation.m_lookAtTime
        VB: csEffect_76_Animation.m_lookAtTime
      qualifiedName:
        CSharp: csEffect_76_Animation.m_lookAtTime
        VB: csEffect_76_Animation.m_lookAtTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_lookAtTime
        path: ''
        startLine: 4521
      syntax:
        content:
          CSharp: public float m_lookAtTime
          VB: Public m_lookAtTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_onlyYValueMove
      commentId: F:Global.csEffect_76_Animation.m_onlyYValueMove
      language: CSharp
      name:
        CSharp: m_onlyYValueMove
        VB: m_onlyYValueMove
      nameWithType:
        CSharp: csEffect_76_Animation.m_onlyYValueMove
        VB: csEffect_76_Animation.m_onlyYValueMove
      qualifiedName:
        CSharp: csEffect_76_Animation.m_onlyYValueMove
        VB: csEffect_76_Animation.m_onlyYValueMove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_onlyYValueMove
        path: ''
        startLine: 4522
      syntax:
        content:
          CSharp: public bool m_onlyYValueMove
          VB: Public m_onlyYValueMove As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_secondMoveTime
      commentId: F:Global.csEffect_76_Animation.m_secondMoveTime
      language: CSharp
      name:
        CSharp: m_secondMoveTime
        VB: m_secondMoveTime
      nameWithType:
        CSharp: csEffect_76_Animation.m_secondMoveTime
        VB: csEffect_76_Animation.m_secondMoveTime
      qualifiedName:
        CSharp: csEffect_76_Animation.m_secondMoveTime
        VB: csEffect_76_Animation.m_secondMoveTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_secondMoveTime
        path: ''
        startLine: 4523
      syntax:
        content:
          CSharp: public float m_secondMoveTime
          VB: Public m_secondMoveTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_secondMovePos
      commentId: F:Global.csEffect_76_Animation.m_secondMovePos
      language: CSharp
      name:
        CSharp: m_secondMovePos
        VB: m_secondMovePos
      nameWithType:
        CSharp: csEffect_76_Animation.m_secondMovePos
        VB: csEffect_76_Animation.m_secondMovePos
      qualifiedName:
        CSharp: csEffect_76_Animation.m_secondMovePos
        VB: csEffect_76_Animation.m_secondMovePos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_secondMovePos
        path: ''
        startLine: 4525
      syntax:
        content:
          CSharp: public Vector3 m_secondMovePos
          VB: Public m_secondMovePos As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_secondLerpValue
      commentId: F:Global.csEffect_76_Animation.m_secondLerpValue
      language: CSharp
      name:
        CSharp: m_secondLerpValue
        VB: m_secondLerpValue
      nameWithType:
        CSharp: csEffect_76_Animation.m_secondLerpValue
        VB: csEffect_76_Animation.m_secondLerpValue
      qualifiedName:
        CSharp: csEffect_76_Animation.m_secondLerpValue
        VB: csEffect_76_Animation.m_secondLerpValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_secondLerpValue
        path: ''
        startLine: 4526
      syntax:
        content:
          CSharp: public float m_secondLerpValue
          VB: Public m_secondLerpValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_particleObject
      commentId: F:Global.csEffect_76_Animation.m_particleObject
      language: CSharp
      name:
        CSharp: m_particleObject
        VB: m_particleObject
      nameWithType:
        CSharp: csEffect_76_Animation.m_particleObject
        VB: csEffect_76_Animation.m_particleObject
      qualifiedName:
        CSharp: csEffect_76_Animation.m_particleObject
        VB: csEffect_76_Animation.m_particleObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_particleObject
        path: ''
        startLine: 4527
      syntax:
        content:
          CSharp: public GameObject m_particleObject
          VB: Public m_particleObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_particleDestroyTime
      commentId: F:Global.csEffect_76_Animation.m_particleDestroyTime
      language: CSharp
      name:
        CSharp: m_particleDestroyTime
        VB: m_particleDestroyTime
      nameWithType:
        CSharp: csEffect_76_Animation.m_particleDestroyTime
        VB: csEffect_76_Animation.m_particleDestroyTime
      qualifiedName:
        CSharp: csEffect_76_Animation.m_particleDestroyTime
        VB: csEffect_76_Animation.m_particleDestroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_particleDestroyTime
        path: ''
        startLine: 4528
      syntax:
        content:
          CSharp: public float m_particleDestroyTime
          VB: Public m_particleDestroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_Animation.m_downYPos
      commentId: F:Global.csEffect_76_Animation.m_downYPos
      language: CSharp
      name:
        CSharp: m_downYPos
        VB: m_downYPos
      nameWithType:
        CSharp: csEffect_76_Animation.m_downYPos
        VB: csEffect_76_Animation.m_downYPos
      qualifiedName:
        CSharp: csEffect_76_Animation.m_downYPos
        VB: csEffect_76_Animation.m_downYPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_downYPos
        path: ''
        startLine: 4529
      syntax:
        content:
          CSharp: public float m_downYPos
          VB: Public m_downYPos As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_76_CircleSwordMake
    commentId: T:Global.csEffect_76_CircleSwordMake
    language: CSharp
    name:
      CSharp: csEffect_76_CircleSwordMake
      VB: csEffect_76_CircleSwordMake
    nameWithType:
      CSharp: csEffect_76_CircleSwordMake
      VB: csEffect_76_CircleSwordMake
    qualifiedName:
      CSharp: csEffect_76_CircleSwordMake
      VB: csEffect_76_CircleSwordMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_76_CircleSwordMake
      path: ''
      startLine: 4601
    syntax:
      content:
        CSharp: 'public class csEffect_76_CircleSwordMake : MonoBehaviour'
        VB: >-
          Public Class csEffect_76_CircleSwordMake

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_76_CircleSwordMake.m_makePoint
      commentId: F:Global.csEffect_76_CircleSwordMake.m_makePoint
      language: CSharp
      name:
        CSharp: m_makePoint
        VB: m_makePoint
      nameWithType:
        CSharp: csEffect_76_CircleSwordMake.m_makePoint
        VB: csEffect_76_CircleSwordMake.m_makePoint
      qualifiedName:
        CSharp: csEffect_76_CircleSwordMake.m_makePoint
        VB: csEffect_76_CircleSwordMake.m_makePoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makePoint
        path: ''
        startLine: 4603
      syntax:
        content:
          CSharp: public Transform m_makePoint
          VB: Public m_makePoint As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_CircleSwordMake.m_gameObject
      commentId: F:Global.csEffect_76_CircleSwordMake.m_gameObject
      language: CSharp
      name:
        CSharp: m_gameObject
        VB: m_gameObject
      nameWithType:
        CSharp: csEffect_76_CircleSwordMake.m_gameObject
        VB: csEffect_76_CircleSwordMake.m_gameObject
      qualifiedName:
        CSharp: csEffect_76_CircleSwordMake.m_gameObject
        VB: csEffect_76_CircleSwordMake.m_gameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObject
        path: ''
        startLine: 4604
      syntax:
        content:
          CSharp: public GameObject m_gameObject
          VB: Public m_gameObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_CircleSwordMake.m_startDelay
      commentId: F:Global.csEffect_76_CircleSwordMake.m_startDelay
      language: CSharp
      name:
        CSharp: m_startDelay
        VB: m_startDelay
      nameWithType:
        CSharp: csEffect_76_CircleSwordMake.m_startDelay
        VB: csEffect_76_CircleSwordMake.m_startDelay
      qualifiedName:
        CSharp: csEffect_76_CircleSwordMake.m_startDelay
        VB: csEffect_76_CircleSwordMake.m_startDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startDelay
        path: ''
        startLine: 4605
      syntax:
        content:
          CSharp: public float m_startDelay
          VB: Public m_startDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_CircleSwordMake.m_object_MakeDelay
      commentId: F:Global.csEffect_76_CircleSwordMake.m_object_MakeDelay
      language: CSharp
      name:
        CSharp: m_object_MakeDelay
        VB: m_object_MakeDelay
      nameWithType:
        CSharp: csEffect_76_CircleSwordMake.m_object_MakeDelay
        VB: csEffect_76_CircleSwordMake.m_object_MakeDelay
      qualifiedName:
        CSharp: csEffect_76_CircleSwordMake.m_object_MakeDelay
        VB: csEffect_76_CircleSwordMake.m_object_MakeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeDelay
        path: ''
        startLine: 4606
      syntax:
        content:
          CSharp: public float m_object_MakeDelay
          VB: Public m_object_MakeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_CircleSwordMake.m_DestroyTime
      commentId: F:Global.csEffect_76_CircleSwordMake.m_DestroyTime
      language: CSharp
      name:
        CSharp: m_DestroyTime
        VB: m_DestroyTime
      nameWithType:
        CSharp: csEffect_76_CircleSwordMake.m_DestroyTime
        VB: csEffect_76_CircleSwordMake.m_DestroyTime
      qualifiedName:
        CSharp: csEffect_76_CircleSwordMake.m_DestroyTime
        VB: csEffect_76_CircleSwordMake.m_DestroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_DestroyTime
        path: ''
        startLine: 4607
      syntax:
        content:
          CSharp: public float m_DestroyTime
          VB: Public m_DestroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_CircleSwordMake.m_interval
      commentId: F:Global.csEffect_76_CircleSwordMake.m_interval
      language: CSharp
      name:
        CSharp: m_interval
        VB: m_interval
      nameWithType:
        CSharp: csEffect_76_CircleSwordMake.m_interval
        VB: csEffect_76_CircleSwordMake.m_interval
      qualifiedName:
        CSharp: csEffect_76_CircleSwordMake.m_interval
        VB: csEffect_76_CircleSwordMake.m_interval
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_interval
        path: ''
        startLine: 4608
      syntax:
        content:
          CSharp: public float m_interval
          VB: Public m_interval As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_CircleSwordMake.m_yAddedPos
      commentId: F:Global.csEffect_76_CircleSwordMake.m_yAddedPos
      language: CSharp
      name:
        CSharp: m_yAddedPos
        VB: m_yAddedPos
      nameWithType:
        CSharp: csEffect_76_CircleSwordMake.m_yAddedPos
        VB: csEffect_76_CircleSwordMake.m_yAddedPos
      qualifiedName:
        CSharp: csEffect_76_CircleSwordMake.m_yAddedPos
        VB: csEffect_76_CircleSwordMake.m_yAddedPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_yAddedPos
        path: ''
        startLine: 4609
      syntax:
        content:
          CSharp: public float m_yAddedPos
          VB: Public m_yAddedPos As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_CircleSwordMake.m_object_MakeCount
      commentId: F:Global.csEffect_76_CircleSwordMake.m_object_MakeCount
      language: CSharp
      name:
        CSharp: m_object_MakeCount
        VB: m_object_MakeCount
      nameWithType:
        CSharp: csEffect_76_CircleSwordMake.m_object_MakeCount
        VB: csEffect_76_CircleSwordMake.m_object_MakeCount
      qualifiedName:
        CSharp: csEffect_76_CircleSwordMake.m_object_MakeCount
        VB: csEffect_76_CircleSwordMake.m_object_MakeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeCount
        path: ''
        startLine: 4610
      syntax:
        content:
          CSharp: public int m_object_MakeCount
          VB: Public m_object_MakeCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_76_FloatingSwordMake
    commentId: T:Global.csEffect_76_FloatingSwordMake
    language: CSharp
    name:
      CSharp: csEffect_76_FloatingSwordMake
      VB: csEffect_76_FloatingSwordMake
    nameWithType:
      CSharp: csEffect_76_FloatingSwordMake
      VB: csEffect_76_FloatingSwordMake
    qualifiedName:
      CSharp: csEffect_76_FloatingSwordMake
      VB: csEffect_76_FloatingSwordMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_76_FloatingSwordMake
      path: ''
      startLine: 4646
    syntax:
      content:
        CSharp: 'public class csEffect_76_FloatingSwordMake : MonoBehaviour'
        VB: >-
          Public Class csEffect_76_FloatingSwordMake

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_76_FloatingSwordMake.m_makePoint
      commentId: F:Global.csEffect_76_FloatingSwordMake.m_makePoint
      language: CSharp
      name:
        CSharp: m_makePoint
        VB: m_makePoint
      nameWithType:
        CSharp: csEffect_76_FloatingSwordMake.m_makePoint
        VB: csEffect_76_FloatingSwordMake.m_makePoint
      qualifiedName:
        CSharp: csEffect_76_FloatingSwordMake.m_makePoint
        VB: csEffect_76_FloatingSwordMake.m_makePoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makePoint
        path: ''
        startLine: 4648
      syntax:
        content:
          CSharp: public Transform m_makePoint
          VB: Public m_makePoint As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_FloatingSwordMake.m_movePoint
      commentId: F:Global.csEffect_76_FloatingSwordMake.m_movePoint
      language: CSharp
      name:
        CSharp: m_movePoint
        VB: m_movePoint
      nameWithType:
        CSharp: csEffect_76_FloatingSwordMake.m_movePoint
        VB: csEffect_76_FloatingSwordMake.m_movePoint
      qualifiedName:
        CSharp: csEffect_76_FloatingSwordMake.m_movePoint
        VB: csEffect_76_FloatingSwordMake.m_movePoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_movePoint
        path: ''
        startLine: 4649
      syntax:
        content:
          CSharp: public Transform m_movePoint
          VB: Public m_movePoint As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_FloatingSwordMake.m_gameObject
      commentId: F:Global.csEffect_76_FloatingSwordMake.m_gameObject
      language: CSharp
      name:
        CSharp: m_gameObject
        VB: m_gameObject
      nameWithType:
        CSharp: csEffect_76_FloatingSwordMake.m_gameObject
        VB: csEffect_76_FloatingSwordMake.m_gameObject
      qualifiedName:
        CSharp: csEffect_76_FloatingSwordMake.m_gameObject
        VB: csEffect_76_FloatingSwordMake.m_gameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObject
        path: ''
        startLine: 4650
      syntax:
        content:
          CSharp: public GameObject m_gameObject
          VB: Public m_gameObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_FloatingSwordMake.m_object_MakeDelay
      commentId: F:Global.csEffect_76_FloatingSwordMake.m_object_MakeDelay
      language: CSharp
      name:
        CSharp: m_object_MakeDelay
        VB: m_object_MakeDelay
      nameWithType:
        CSharp: csEffect_76_FloatingSwordMake.m_object_MakeDelay
        VB: csEffect_76_FloatingSwordMake.m_object_MakeDelay
      qualifiedName:
        CSharp: csEffect_76_FloatingSwordMake.m_object_MakeDelay
        VB: csEffect_76_FloatingSwordMake.m_object_MakeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeDelay
        path: ''
        startLine: 4651
      syntax:
        content:
          CSharp: public float m_object_MakeDelay
          VB: Public m_object_MakeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_FloatingSwordMake.m_DestroyTime
      commentId: F:Global.csEffect_76_FloatingSwordMake.m_DestroyTime
      language: CSharp
      name:
        CSharp: m_DestroyTime
        VB: m_DestroyTime
      nameWithType:
        CSharp: csEffect_76_FloatingSwordMake.m_DestroyTime
        VB: csEffect_76_FloatingSwordMake.m_DestroyTime
      qualifiedName:
        CSharp: csEffect_76_FloatingSwordMake.m_DestroyTime
        VB: csEffect_76_FloatingSwordMake.m_DestroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_DestroyTime
        path: ''
        startLine: 4652
      syntax:
        content:
          CSharp: public float m_DestroyTime
          VB: Public m_DestroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_FloatingSwordMake.m_randomValue
      commentId: F:Global.csEffect_76_FloatingSwordMake.m_randomValue
      language: CSharp
      name:
        CSharp: m_randomValue
        VB: m_randomValue
      nameWithType:
        CSharp: csEffect_76_FloatingSwordMake.m_randomValue
        VB: csEffect_76_FloatingSwordMake.m_randomValue
      qualifiedName:
        CSharp: csEffect_76_FloatingSwordMake.m_randomValue
        VB: csEffect_76_FloatingSwordMake.m_randomValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_randomValue
        path: ''
        startLine: 4653
      syntax:
        content:
          CSharp: public Vector3 m_randomValue
          VB: Public m_randomValue As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_76_FloatingSwordMake.m_object_MakeCount
      commentId: F:Global.csEffect_76_FloatingSwordMake.m_object_MakeCount
      language: CSharp
      name:
        CSharp: m_object_MakeCount
        VB: m_object_MakeCount
      nameWithType:
        CSharp: csEffect_76_FloatingSwordMake.m_object_MakeCount
        VB: csEffect_76_FloatingSwordMake.m_object_MakeCount
      qualifiedName:
        CSharp: csEffect_76_FloatingSwordMake.m_object_MakeCount
        VB: csEffect_76_FloatingSwordMake.m_object_MakeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeCount
        path: ''
        startLine: 4654
      syntax:
        content:
          CSharp: public int m_object_MakeCount
          VB: Public m_object_MakeCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_77_HandMove
    commentId: T:Global.csEffect_77_HandMove
    language: CSharp
    name:
      CSharp: csEffect_77_HandMove
      VB: csEffect_77_HandMove
    nameWithType:
      CSharp: csEffect_77_HandMove
      VB: csEffect_77_HandMove
    qualifiedName:
      CSharp: csEffect_77_HandMove
      VB: csEffect_77_HandMove
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_77_HandMove
      path: ''
      startLine: 4690
    syntax:
      content:
        CSharp: 'public class csEffect_77_HandMove : MonoBehaviour'
        VB: >-
          Public Class csEffect_77_HandMove

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_77_HandMove.m_movePos
      commentId: F:Global.csEffect_77_HandMove.m_movePos
      language: CSharp
      name:
        CSharp: m_movePos
        VB: m_movePos
      nameWithType:
        CSharp: csEffect_77_HandMove.m_movePos
        VB: csEffect_77_HandMove.m_movePos
      qualifiedName:
        CSharp: csEffect_77_HandMove.m_movePos
        VB: csEffect_77_HandMove.m_movePos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_movePos
        path: ''
        startLine: 4692
      syntax:
        content:
          CSharp: public Transform m_movePos
          VB: Public m_movePos As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_77_HandMove.m_lerpValue
      commentId: F:Global.csEffect_77_HandMove.m_lerpValue
      language: CSharp
      name:
        CSharp: m_lerpValue
        VB: m_lerpValue
      nameWithType:
        CSharp: csEffect_77_HandMove.m_lerpValue
        VB: csEffect_77_HandMove.m_lerpValue
      qualifiedName:
        CSharp: csEffect_77_HandMove.m_lerpValue
        VB: csEffect_77_HandMove.m_lerpValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_lerpValue
        path: ''
        startLine: 4693
      syntax:
        content:
          CSharp: public float m_lerpValue
          VB: Public m_lerpValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_77_ObjectMake
    commentId: T:Global.csEffect_77_ObjectMake
    language: CSharp
    name:
      CSharp: csEffect_77_ObjectMake
      VB: csEffect_77_ObjectMake
    nameWithType:
      CSharp: csEffect_77_ObjectMake
      VB: csEffect_77_ObjectMake
    qualifiedName:
      CSharp: csEffect_77_ObjectMake
      VB: csEffect_77_ObjectMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_77_ObjectMake
      path: ''
      startLine: 4706
    syntax:
      content:
        CSharp: 'public class csEffect_77_ObjectMake : MonoBehaviour'
        VB: >-
          Public Class csEffect_77_ObjectMake

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_77_ObjectMake.m_makeObj
      commentId: F:Global.csEffect_77_ObjectMake.m_makeObj
      language: CSharp
      name:
        CSharp: m_makeObj
        VB: m_makeObj
      nameWithType:
        CSharp: csEffect_77_ObjectMake.m_makeObj
        VB: csEffect_77_ObjectMake.m_makeObj
      qualifiedName:
        CSharp: csEffect_77_ObjectMake.m_makeObj
        VB: csEffect_77_ObjectMake.m_makeObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeObj
        path: ''
        startLine: 4708
      syntax:
        content:
          CSharp: public GameObject m_makeObj
          VB: Public m_makeObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_77_ObjectMake.m_makeDelay
      commentId: F:Global.csEffect_77_ObjectMake.m_makeDelay
      language: CSharp
      name:
        CSharp: m_makeDelay
        VB: m_makeDelay
      nameWithType:
        CSharp: csEffect_77_ObjectMake.m_makeDelay
        VB: csEffect_77_ObjectMake.m_makeDelay
      qualifiedName:
        CSharp: csEffect_77_ObjectMake.m_makeDelay
        VB: csEffect_77_ObjectMake.m_makeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeDelay
        path: ''
        startLine: 4709
      syntax:
        content:
          CSharp: public float m_makeDelay
          VB: Public m_makeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_77_ObjectMake.m_makeDuration
      commentId: F:Global.csEffect_77_ObjectMake.m_makeDuration
      language: CSharp
      name:
        CSharp: m_makeDuration
        VB: m_makeDuration
      nameWithType:
        CSharp: csEffect_77_ObjectMake.m_makeDuration
        VB: csEffect_77_ObjectMake.m_makeDuration
      qualifiedName:
        CSharp: csEffect_77_ObjectMake.m_makeDuration
        VB: csEffect_77_ObjectMake.m_makeDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeDuration
        path: ''
        startLine: 4710
      syntax:
        content:
          CSharp: public float m_makeDuration
          VB: Public m_makeDuration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_77_ObjectMake.m_destroyTime
      commentId: F:Global.csEffect_77_ObjectMake.m_destroyTime
      language: CSharp
      name:
        CSharp: m_destroyTime
        VB: m_destroyTime
      nameWithType:
        CSharp: csEffect_77_ObjectMake.m_destroyTime
        VB: csEffect_77_ObjectMake.m_destroyTime
      qualifiedName:
        CSharp: csEffect_77_ObjectMake.m_destroyTime
        VB: csEffect_77_ObjectMake.m_destroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_destroyTime
        path: ''
        startLine: 4711
      syntax:
        content:
          CSharp: public float m_destroyTime
          VB: Public m_destroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_77_ObjectMake.m_addedPos
      commentId: F:Global.csEffect_77_ObjectMake.m_addedPos
      language: CSharp
      name:
        CSharp: m_addedPos
        VB: m_addedPos
      nameWithType:
        CSharp: csEffect_77_ObjectMake.m_addedPos
        VB: csEffect_77_ObjectMake.m_addedPos
      qualifiedName:
        CSharp: csEffect_77_ObjectMake.m_addedPos
        VB: csEffect_77_ObjectMake.m_addedPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_addedPos
        path: ''
        startLine: 4712
      syntax:
        content:
          CSharp: public Vector3 m_addedPos
          VB: Public m_addedPos As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_77_ObjectMake2
    commentId: T:Global.csEffect_77_ObjectMake2
    language: CSharp
    name:
      CSharp: csEffect_77_ObjectMake2
      VB: csEffect_77_ObjectMake2
    nameWithType:
      CSharp: csEffect_77_ObjectMake2
      VB: csEffect_77_ObjectMake2
    qualifiedName:
      CSharp: csEffect_77_ObjectMake2
      VB: csEffect_77_ObjectMake2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_77_ObjectMake2
      path: ''
      startLine: 4741
    syntax:
      content:
        CSharp: 'public class csEffect_77_ObjectMake2 : MonoBehaviour'
        VB: >-
          Public Class csEffect_77_ObjectMake2

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_77_ObjectMake2.m_makeObj
      commentId: F:Global.csEffect_77_ObjectMake2.m_makeObj
      language: CSharp
      name:
        CSharp: m_makeObj
        VB: m_makeObj
      nameWithType:
        CSharp: csEffect_77_ObjectMake2.m_makeObj
        VB: csEffect_77_ObjectMake2.m_makeObj
      qualifiedName:
        CSharp: csEffect_77_ObjectMake2.m_makeObj
        VB: csEffect_77_ObjectMake2.m_makeObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeObj
        path: ''
        startLine: 4743
      syntax:
        content:
          CSharp: public GameObject m_makeObj
          VB: Public m_makeObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_77_ObjectMake2.m_startDelay
      commentId: F:Global.csEffect_77_ObjectMake2.m_startDelay
      language: CSharp
      name:
        CSharp: m_startDelay
        VB: m_startDelay
      nameWithType:
        CSharp: csEffect_77_ObjectMake2.m_startDelay
        VB: csEffect_77_ObjectMake2.m_startDelay
      qualifiedName:
        CSharp: csEffect_77_ObjectMake2.m_startDelay
        VB: csEffect_77_ObjectMake2.m_startDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startDelay
        path: ''
        startLine: 4744
      syntax:
        content:
          CSharp: public float m_startDelay
          VB: Public m_startDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_77_ObjectMake2.m_destroyTime
      commentId: F:Global.csEffect_77_ObjectMake2.m_destroyTime
      language: CSharp
      name:
        CSharp: m_destroyTime
        VB: m_destroyTime
      nameWithType:
        CSharp: csEffect_77_ObjectMake2.m_destroyTime
        VB: csEffect_77_ObjectMake2.m_destroyTime
      qualifiedName:
        CSharp: csEffect_77_ObjectMake2.m_destroyTime
        VB: csEffect_77_ObjectMake2.m_destroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_destroyTime
        path: ''
        startLine: 4745
      syntax:
        content:
          CSharp: public float m_destroyTime
          VB: Public m_destroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_03_ArrowFunction
    commentId: T:Global.csEffect_03_ArrowFunction
    language: CSharp
    name:
      CSharp: csEffect_03_ArrowFunction
      VB: csEffect_03_ArrowFunction
    nameWithType:
      CSharp: csEffect_03_ArrowFunction
      VB: csEffect_03_ArrowFunction
    qualifiedName:
      CSharp: csEffect_03_ArrowFunction
      VB: csEffect_03_ArrowFunction
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_03_ArrowFunction
      path: ''
      startLine: 4770
    syntax:
      content:
        CSharp: 'public class csEffect_03_ArrowFunction : MonoBehaviour'
        VB: >-
          Public Class csEffect_03_ArrowFunction

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_03_ArrowFunction.m_durationTime
      commentId: F:Global.csEffect_03_ArrowFunction.m_durationTime
      language: CSharp
      name:
        CSharp: m_durationTime
        VB: m_durationTime
      nameWithType:
        CSharp: csEffect_03_ArrowFunction.m_durationTime
        VB: csEffect_03_ArrowFunction.m_durationTime
      qualifiedName:
        CSharp: csEffect_03_ArrowFunction.m_durationTime
        VB: csEffect_03_ArrowFunction.m_durationTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_durationTime
        path: ''
        startLine: 4772
      syntax:
        content:
          CSharp: public float m_durationTime
          VB: Public m_durationTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_03_ArrowFunction.m_lerpValue
      commentId: F:Global.csEffect_03_ArrowFunction.m_lerpValue
      language: CSharp
      name:
        CSharp: m_lerpValue
        VB: m_lerpValue
      nameWithType:
        CSharp: csEffect_03_ArrowFunction.m_lerpValue
        VB: csEffect_03_ArrowFunction.m_lerpValue
      qualifiedName:
        CSharp: csEffect_03_ArrowFunction.m_lerpValue
        VB: csEffect_03_ArrowFunction.m_lerpValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_lerpValue
        path: ''
        startLine: 4773
      syntax:
        content:
          CSharp: public float m_lerpValue
          VB: Public m_lerpValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_03_ArrowFunction.m_objectDestroyTime
      commentId: F:Global.csEffect_03_ArrowFunction.m_objectDestroyTime
      language: CSharp
      name:
        CSharp: m_objectDestroyTime
        VB: m_objectDestroyTime
      nameWithType:
        CSharp: csEffect_03_ArrowFunction.m_objectDestroyTime
        VB: csEffect_03_ArrowFunction.m_objectDestroyTime
      qualifiedName:
        CSharp: csEffect_03_ArrowFunction.m_objectDestroyTime
        VB: csEffect_03_ArrowFunction.m_objectDestroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_objectDestroyTime
        path: ''
        startLine: 4777
      syntax:
        content:
          CSharp: public float m_objectDestroyTime
          VB: Public m_objectDestroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_03_ArrowFunction.m_origianlPosSet
      commentId: F:Global.csEffect_03_ArrowFunction.m_origianlPosSet
      language: CSharp
      name:
        CSharp: m_origianlPosSet
        VB: m_origianlPosSet
      nameWithType:
        CSharp: csEffect_03_ArrowFunction.m_origianlPosSet
        VB: csEffect_03_ArrowFunction.m_origianlPosSet
      qualifiedName:
        CSharp: csEffect_03_ArrowFunction.m_origianlPosSet
        VB: csEffect_03_ArrowFunction.m_origianlPosSet
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_origianlPosSet
        path: ''
        startLine: 4778
      syntax:
        content:
          CSharp: public Vector3 m_origianlPosSet
          VB: Public m_origianlPosSet As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_03_ArrowFunction.m_makeObj
      commentId: F:Global.csEffect_03_ArrowFunction.m_makeObj
      language: CSharp
      name:
        CSharp: m_makeObj
        VB: m_makeObj
      nameWithType:
        CSharp: csEffect_03_ArrowFunction.m_makeObj
        VB: csEffect_03_ArrowFunction.m_makeObj
      qualifiedName:
        CSharp: csEffect_03_ArrowFunction.m_makeObj
        VB: csEffect_03_ArrowFunction.m_makeObj
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeObj
        path: ''
        startLine: 4779
      syntax:
        content:
          CSharp: public GameObject m_makeObj
          VB: Public m_makeObj As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_03_ObjectMake
    commentId: T:Global.csEffect_03_ObjectMake
    language: CSharp
    name:
      CSharp: csEffect_03_ObjectMake
      VB: csEffect_03_ObjectMake
    nameWithType:
      CSharp: csEffect_03_ObjectMake
      VB: csEffect_03_ObjectMake
    qualifiedName:
      CSharp: csEffect_03_ObjectMake
      VB: csEffect_03_ObjectMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_03_ObjectMake
      path: ''
      startLine: 4816
    syntax:
      content:
        CSharp: 'public class csEffect_03_ObjectMake : MonoBehaviour'
        VB: >-
          Public Class csEffect_03_ObjectMake

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_03_ObjectMake.m_startDelay
      commentId: F:Global.csEffect_03_ObjectMake.m_startDelay
      language: CSharp
      name:
        CSharp: m_startDelay
        VB: m_startDelay
      nameWithType:
        CSharp: csEffect_03_ObjectMake.m_startDelay
        VB: csEffect_03_ObjectMake.m_startDelay
      qualifiedName:
        CSharp: csEffect_03_ObjectMake.m_startDelay
        VB: csEffect_03_ObjectMake.m_startDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startDelay
        path: ''
        startLine: 4818
      syntax:
        content:
          CSharp: public float m_startDelay
          VB: Public m_startDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_03_ObjectMake.m_makeObjs
      commentId: F:Global.csEffect_03_ObjectMake.m_makeObjs
      language: CSharp
      name:
        CSharp: m_makeObjs
        VB: m_makeObjs
      nameWithType:
        CSharp: csEffect_03_ObjectMake.m_makeObjs
        VB: csEffect_03_ObjectMake.m_makeObjs
      qualifiedName:
        CSharp: csEffect_03_ObjectMake.m_makeObjs
        VB: csEffect_03_ObjectMake.m_makeObjs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeObjs
        path: ''
        startLine: 4819
      syntax:
        content:
          CSharp: public GameObject[] m_makeObjs
          VB: Public m_makeObjs As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_03_ObjectMake.m_makeDelay
      commentId: F:Global.csEffect_03_ObjectMake.m_makeDelay
      language: CSharp
      name:
        CSharp: m_makeDelay
        VB: m_makeDelay
      nameWithType:
        CSharp: csEffect_03_ObjectMake.m_makeDelay
        VB: csEffect_03_ObjectMake.m_makeDelay
      qualifiedName:
        CSharp: csEffect_03_ObjectMake.m_makeDelay
        VB: csEffect_03_ObjectMake.m_makeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeDelay
        path: ''
        startLine: 4820
      syntax:
        content:
          CSharp: public float m_makeDelay
          VB: Public m_makeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_03_ObjectMake.m_makeCount
      commentId: F:Global.csEffect_03_ObjectMake.m_makeCount
      language: CSharp
      name:
        CSharp: m_makeCount
        VB: m_makeCount
      nameWithType:
        CSharp: csEffect_03_ObjectMake.m_makeCount
        VB: csEffect_03_ObjectMake.m_makeCount
      qualifiedName:
        CSharp: csEffect_03_ObjectMake.m_makeCount
        VB: csEffect_03_ObjectMake.m_makeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeCount
        path: ''
        startLine: 4821
      syntax:
        content:
          CSharp: public int m_makeCount
          VB: Public m_makeCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_03_ObjectMake.m_destroyTime
      commentId: F:Global.csEffect_03_ObjectMake.m_destroyTime
      language: CSharp
      name:
        CSharp: m_destroyTime
        VB: m_destroyTime
      nameWithType:
        CSharp: csEffect_03_ObjectMake.m_destroyTime
        VB: csEffect_03_ObjectMake.m_destroyTime
      qualifiedName:
        CSharp: csEffect_03_ObjectMake.m_destroyTime
        VB: csEffect_03_ObjectMake.m_destroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_destroyTime
        path: ''
        startLine: 4822
      syntax:
        content:
          CSharp: public float m_destroyTime
          VB: Public m_destroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_03_ObjectMake.m_vectorRandom
      commentId: F:Global.csEffect_03_ObjectMake.m_vectorRandom
      language: CSharp
      name:
        CSharp: m_vectorRandom
        VB: m_vectorRandom
      nameWithType:
        CSharp: csEffect_03_ObjectMake.m_vectorRandom
        VB: csEffect_03_ObjectMake.m_vectorRandom
      qualifiedName:
        CSharp: csEffect_03_ObjectMake.m_vectorRandom
        VB: csEffect_03_ObjectMake.m_vectorRandom
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_vectorRandom
        path: ''
        startLine: 4823
      syntax:
        content:
          CSharp: public Vector3 m_vectorRandom
          VB: Public m_vectorRandom As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_03_ObjectMake.m_makePos
      commentId: F:Global.csEffect_03_ObjectMake.m_makePos
      language: CSharp
      name:
        CSharp: m_makePos
        VB: m_makePos
      nameWithType:
        CSharp: csEffect_03_ObjectMake.m_makePos
        VB: csEffect_03_ObjectMake.m_makePos
      qualifiedName:
        CSharp: csEffect_03_ObjectMake.m_makePos
        VB: csEffect_03_ObjectMake.m_makePos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makePos
        path: ''
        startLine: 4824
      syntax:
        content:
          CSharp: public Transform m_makePos
          VB: Public m_makePos As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_79_CircleMake
    commentId: T:Global.csEffect_79_CircleMake
    language: CSharp
    name:
      CSharp: csEffect_79_CircleMake
      VB: csEffect_79_CircleMake
    nameWithType:
      CSharp: csEffect_79_CircleMake
      VB: csEffect_79_CircleMake
    qualifiedName:
      CSharp: csEffect_79_CircleMake
      VB: csEffect_79_CircleMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_79_CircleMake
      path: ''
      startLine: 4867
    syntax:
      content:
        CSharp: 'public class csEffect_79_CircleMake : MonoBehaviour'
        VB: >-
          Public Class csEffect_79_CircleMake

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_79_CircleMake.m_makePoint
      commentId: F:Global.csEffect_79_CircleMake.m_makePoint
      language: CSharp
      name:
        CSharp: m_makePoint
        VB: m_makePoint
      nameWithType:
        CSharp: csEffect_79_CircleMake.m_makePoint
        VB: csEffect_79_CircleMake.m_makePoint
      qualifiedName:
        CSharp: csEffect_79_CircleMake.m_makePoint
        VB: csEffect_79_CircleMake.m_makePoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makePoint
        path: ''
        startLine: 4869
      syntax:
        content:
          CSharp: public Transform m_makePoint
          VB: Public m_makePoint As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_79_CircleMake.m_gameObject
      commentId: F:Global.csEffect_79_CircleMake.m_gameObject
      language: CSharp
      name:
        CSharp: m_gameObject
        VB: m_gameObject
      nameWithType:
        CSharp: csEffect_79_CircleMake.m_gameObject
        VB: csEffect_79_CircleMake.m_gameObject
      qualifiedName:
        CSharp: csEffect_79_CircleMake.m_gameObject
        VB: csEffect_79_CircleMake.m_gameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObject
        path: ''
        startLine: 4870
      syntax:
        content:
          CSharp: public GameObject m_gameObject
          VB: Public m_gameObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_79_CircleMake.m_startDelay
      commentId: F:Global.csEffect_79_CircleMake.m_startDelay
      language: CSharp
      name:
        CSharp: m_startDelay
        VB: m_startDelay
      nameWithType:
        CSharp: csEffect_79_CircleMake.m_startDelay
        VB: csEffect_79_CircleMake.m_startDelay
      qualifiedName:
        CSharp: csEffect_79_CircleMake.m_startDelay
        VB: csEffect_79_CircleMake.m_startDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startDelay
        path: ''
        startLine: 4871
      syntax:
        content:
          CSharp: public float m_startDelay
          VB: Public m_startDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_79_CircleMake.m_object_MakeDelay
      commentId: F:Global.csEffect_79_CircleMake.m_object_MakeDelay
      language: CSharp
      name:
        CSharp: m_object_MakeDelay
        VB: m_object_MakeDelay
      nameWithType:
        CSharp: csEffect_79_CircleMake.m_object_MakeDelay
        VB: csEffect_79_CircleMake.m_object_MakeDelay
      qualifiedName:
        CSharp: csEffect_79_CircleMake.m_object_MakeDelay
        VB: csEffect_79_CircleMake.m_object_MakeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeDelay
        path: ''
        startLine: 4872
      syntax:
        content:
          CSharp: public float m_object_MakeDelay
          VB: Public m_object_MakeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_79_CircleMake.m_DestroyTime
      commentId: F:Global.csEffect_79_CircleMake.m_DestroyTime
      language: CSharp
      name:
        CSharp: m_DestroyTime
        VB: m_DestroyTime
      nameWithType:
        CSharp: csEffect_79_CircleMake.m_DestroyTime
        VB: csEffect_79_CircleMake.m_DestroyTime
      qualifiedName:
        CSharp: csEffect_79_CircleMake.m_DestroyTime
        VB: csEffect_79_CircleMake.m_DestroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_DestroyTime
        path: ''
        startLine: 4873
      syntax:
        content:
          CSharp: public float m_DestroyTime
          VB: Public m_DestroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_79_CircleMake.m_interval
      commentId: F:Global.csEffect_79_CircleMake.m_interval
      language: CSharp
      name:
        CSharp: m_interval
        VB: m_interval
      nameWithType:
        CSharp: csEffect_79_CircleMake.m_interval
        VB: csEffect_79_CircleMake.m_interval
      qualifiedName:
        CSharp: csEffect_79_CircleMake.m_interval
        VB: csEffect_79_CircleMake.m_interval
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_interval
        path: ''
        startLine: 4874
      syntax:
        content:
          CSharp: public float m_interval
          VB: Public m_interval As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_79_CircleMake.m_yAddedPos
      commentId: F:Global.csEffect_79_CircleMake.m_yAddedPos
      language: CSharp
      name:
        CSharp: m_yAddedPos
        VB: m_yAddedPos
      nameWithType:
        CSharp: csEffect_79_CircleMake.m_yAddedPos
        VB: csEffect_79_CircleMake.m_yAddedPos
      qualifiedName:
        CSharp: csEffect_79_CircleMake.m_yAddedPos
        VB: csEffect_79_CircleMake.m_yAddedPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_yAddedPos
        path: ''
        startLine: 4875
      syntax:
        content:
          CSharp: public float m_yAddedPos
          VB: Public m_yAddedPos As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_79_CircleMake.m_object_MakeCount
      commentId: F:Global.csEffect_79_CircleMake.m_object_MakeCount
      language: CSharp
      name:
        CSharp: m_object_MakeCount
        VB: m_object_MakeCount
      nameWithType:
        CSharp: csEffect_79_CircleMake.m_object_MakeCount
        VB: csEffect_79_CircleMake.m_object_MakeCount
      qualifiedName:
        CSharp: csEffect_79_CircleMake.m_object_MakeCount
        VB: csEffect_79_CircleMake.m_object_MakeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeCount
        path: ''
        startLine: 4876
      syntax:
        content:
          CSharp: public int m_object_MakeCount
          VB: Public m_object_MakeCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_79_WallRiseDown
    commentId: T:Global.csEffect_79_WallRiseDown
    language: CSharp
    name:
      CSharp: csEffect_79_WallRiseDown
      VB: csEffect_79_WallRiseDown
    nameWithType:
      CSharp: csEffect_79_WallRiseDown
      VB: csEffect_79_WallRiseDown
    qualifiedName:
      CSharp: csEffect_79_WallRiseDown
      VB: csEffect_79_WallRiseDown
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_79_WallRiseDown
      path: ''
      startLine: 4917
    syntax:
      content:
        CSharp: 'public class csEffect_79_WallRiseDown : MonoBehaviour'
        VB: >-
          Public Class csEffect_79_WallRiseDown

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_79_WallRiseDown.m_durationTime
      commentId: F:Global.csEffect_79_WallRiseDown.m_durationTime
      language: CSharp
      name:
        CSharp: m_durationTime
        VB: m_durationTime
      nameWithType:
        CSharp: csEffect_79_WallRiseDown.m_durationTime
        VB: csEffect_79_WallRiseDown.m_durationTime
      qualifiedName:
        CSharp: csEffect_79_WallRiseDown.m_durationTime
        VB: csEffect_79_WallRiseDown.m_durationTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_durationTime
        path: ''
        startLine: 4919
      syntax:
        content:
          CSharp: public float m_durationTime
          VB: Public m_durationTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_79_WallRiseDown.m_y_Pos
      commentId: F:Global.csEffect_79_WallRiseDown.m_y_Pos
      language: CSharp
      name:
        CSharp: m_y_Pos
        VB: m_y_Pos
      nameWithType:
        CSharp: csEffect_79_WallRiseDown.m_y_Pos
        VB: csEffect_79_WallRiseDown.m_y_Pos
      qualifiedName:
        CSharp: csEffect_79_WallRiseDown.m_y_Pos
        VB: csEffect_79_WallRiseDown.m_y_Pos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_y_Pos
        path: ''
        startLine: 4920
      syntax:
        content:
          CSharp: public float m_y_Pos
          VB: Public m_y_Pos As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_79_WallRiseDown.m_lerpTime
      commentId: F:Global.csEffect_79_WallRiseDown.m_lerpTime
      language: CSharp
      name:
        CSharp: m_lerpTime
        VB: m_lerpTime
      nameWithType:
        CSharp: csEffect_79_WallRiseDown.m_lerpTime
        VB: csEffect_79_WallRiseDown.m_lerpTime
      qualifiedName:
        CSharp: csEffect_79_WallRiseDown.m_lerpTime
        VB: csEffect_79_WallRiseDown.m_lerpTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_lerpTime
        path: ''
        startLine: 4921
      syntax:
        content:
          CSharp: public float m_lerpTime
          VB: Public m_lerpTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csEffect_80_SunMove
    commentId: T:Global.csEffect_80_SunMove
    language: CSharp
    name:
      CSharp: csEffect_80_SunMove
      VB: csEffect_80_SunMove
    nameWithType:
      CSharp: csEffect_80_SunMove
      VB: csEffect_80_SunMove
    qualifiedName:
      CSharp: csEffect_80_SunMove
      VB: csEffect_80_SunMove
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csEffect_80_SunMove
      path: ''
      startLine: 4942
    syntax:
      content:
        CSharp: 'public class csEffect_80_SunMove : MonoBehaviour'
        VB: >-
          Public Class csEffect_80_SunMove

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csEffect_80_SunMove.m_movePos
      commentId: F:Global.csEffect_80_SunMove.m_movePos
      language: CSharp
      name:
        CSharp: m_movePos
        VB: m_movePos
      nameWithType:
        CSharp: csEffect_80_SunMove.m_movePos
        VB: csEffect_80_SunMove.m_movePos
      qualifiedName:
        CSharp: csEffect_80_SunMove.m_movePos
        VB: csEffect_80_SunMove.m_movePos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_movePos
        path: ''
        startLine: 4944
      syntax:
        content:
          CSharp: public Transform m_movePos
          VB: Public m_movePos As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_80_SunMove.m_lerpValue
      commentId: F:Global.csEffect_80_SunMove.m_lerpValue
      language: CSharp
      name:
        CSharp: m_lerpValue
        VB: m_lerpValue
      nameWithType:
        CSharp: csEffect_80_SunMove.m_lerpValue
        VB: csEffect_80_SunMove.m_lerpValue
      qualifiedName:
        CSharp: csEffect_80_SunMove.m_lerpValue
        VB: csEffect_80_SunMove.m_lerpValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_lerpValue
        path: ''
        startLine: 4945
      syntax:
        content:
          CSharp: public float m_lerpValue
          VB: Public m_lerpValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csEffect_80_SunMove.DestroyTime
      commentId: F:Global.csEffect_80_SunMove.DestroyTime
      language: CSharp
      name:
        CSharp: DestroyTime
        VB: DestroyTime
      nameWithType:
        CSharp: csEffect_80_SunMove.DestroyTime
        VB: csEffect_80_SunMove.DestroyTime
      qualifiedName:
        CSharp: csEffect_80_SunMove.DestroyTime
        VB: csEffect_80_SunMove.DestroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DestroyTime
        path: ''
        startLine: 4946
      syntax:
        content:
          CSharp: public float DestroyTime
          VB: Public DestroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csObjectMake
    commentId: T:Global.csObjectMake
    language: CSharp
    name:
      CSharp: csObjectMake
      VB: csObjectMake
    nameWithType:
      CSharp: csObjectMake
      VB: csObjectMake
    qualifiedName:
      CSharp: csObjectMake
      VB: csObjectMake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csObjectMake
      path: ''
      startLine: 4961
    syntax:
      content:
        CSharp: 'public class csObjectMake : MonoBehaviour'
        VB: >-
          Public Class csObjectMake

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csObjectMake.m_gameObject
      commentId: F:Global.csObjectMake.m_gameObject
      language: CSharp
      name:
        CSharp: m_gameObject
        VB: m_gameObject
      nameWithType:
        CSharp: csObjectMake.m_gameObject
        VB: csObjectMake.m_gameObject
      qualifiedName:
        CSharp: csObjectMake.m_gameObject
        VB: csObjectMake.m_gameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObject
        path: ''
        startLine: 4963
      syntax:
        content:
          CSharp: public GameObject m_gameObject
          VB: Public m_gameObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake.Delay
      commentId: F:Global.csObjectMake.Delay
      language: CSharp
      name:
        CSharp: Delay
        VB: Delay
      nameWithType:
        CSharp: csObjectMake.Delay
        VB: csObjectMake.Delay
      qualifiedName:
        CSharp: csObjectMake.Delay
        VB: csObjectMake.Delay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Delay
        path: ''
        startLine: 4965
      syntax:
        content:
          CSharp: public float Delay
          VB: Public Delay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake.MaxRage
      commentId: F:Global.csObjectMake.MaxRage
      language: CSharp
      name:
        CSharp: MaxRage
        VB: MaxRage
      nameWithType:
        CSharp: csObjectMake.MaxRage
        VB: csObjectMake.MaxRage
      qualifiedName:
        CSharp: csObjectMake.MaxRage
        VB: csObjectMake.MaxRage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MaxRage
        path: ''
        startLine: 4966
      syntax:
        content:
          CSharp: public float MaxRage
          VB: Public MaxRage As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csObjectMake2
    commentId: T:Global.csObjectMake2
    language: CSharp
    name:
      CSharp: csObjectMake2
      VB: csObjectMake2
    nameWithType:
      CSharp: csObjectMake2
      VB: csObjectMake2
    qualifiedName:
      CSharp: csObjectMake2
      VB: csObjectMake2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csObjectMake2
      path: ''
      startLine: 4985
    syntax:
      content:
        CSharp: 'public class csObjectMake2 : MonoBehaviour'
        VB: >-
          Public Class csObjectMake2

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csObjectMake2.m_gameObject
      commentId: F:Global.csObjectMake2.m_gameObject
      language: CSharp
      name:
        CSharp: m_gameObject
        VB: m_gameObject
      nameWithType:
        CSharp: csObjectMake2.m_gameObject
        VB: csObjectMake2.m_gameObject
      qualifiedName:
        CSharp: csObjectMake2.m_gameObject
        VB: csObjectMake2.m_gameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObject
        path: ''
        startLine: 4987
      syntax:
        content:
          CSharp: public GameObject m_gameObject
          VB: Public m_gameObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake2.m_object_MakeDelay
      commentId: F:Global.csObjectMake2.m_object_MakeDelay
      language: CSharp
      name:
        CSharp: m_object_MakeDelay
        VB: m_object_MakeDelay
      nameWithType:
        CSharp: csObjectMake2.m_object_MakeDelay
        VB: csObjectMake2.m_object_MakeDelay
      qualifiedName:
        CSharp: csObjectMake2.m_object_MakeDelay
        VB: csObjectMake2.m_object_MakeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeDelay
        path: ''
        startLine: 4988
      syntax:
        content:
          CSharp: public float m_object_MakeDelay
          VB: Public m_object_MakeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake2.m_object_MakeRange
      commentId: F:Global.csObjectMake2.m_object_MakeRange
      language: CSharp
      name:
        CSharp: m_object_MakeRange
        VB: m_object_MakeRange
      nameWithType:
        CSharp: csObjectMake2.m_object_MakeRange
        VB: csObjectMake2.m_object_MakeRange
      qualifiedName:
        CSharp: csObjectMake2.m_object_MakeRange
        VB: csObjectMake2.m_object_MakeRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeRange
        path: ''
        startLine: 4989
      syntax:
        content:
          CSharp: public float m_object_MakeRange
          VB: Public m_object_MakeRange As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake2.m_object_MakeCount
      commentId: F:Global.csObjectMake2.m_object_MakeCount
      language: CSharp
      name:
        CSharp: m_object_MakeCount
        VB: m_object_MakeCount
      nameWithType:
        CSharp: csObjectMake2.m_object_MakeCount
        VB: csObjectMake2.m_object_MakeCount
      qualifiedName:
        CSharp: csObjectMake2.m_object_MakeCount
        VB: csObjectMake2.m_object_MakeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeCount
        path: ''
        startLine: 4990
      syntax:
        content:
          CSharp: public int m_object_MakeCount
          VB: Public m_object_MakeCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake2.m_startDelay
      commentId: F:Global.csObjectMake2.m_startDelay
      language: CSharp
      name:
        CSharp: m_startDelay
        VB: m_startDelay
      nameWithType:
        CSharp: csObjectMake2.m_startDelay
        VB: csObjectMake2.m_startDelay
      qualifiedName:
        CSharp: csObjectMake2.m_startDelay
        VB: csObjectMake2.m_startDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_startDelay
        path: ''
        startLine: 4991
      syntax:
        content:
          CSharp: public float m_startDelay
          VB: Public m_startDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake2.isX
      commentId: F:Global.csObjectMake2.isX
      language: CSharp
      name:
        CSharp: isX
        VB: isX
      nameWithType:
        CSharp: csObjectMake2.isX
        VB: csObjectMake2.isX
      qualifiedName:
        CSharp: csObjectMake2.isX
        VB: csObjectMake2.isX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isX
        path: ''
        startLine: 4995
      syntax:
        content:
          CSharp: public bool isX
          VB: Public isX As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake2.isY
      commentId: F:Global.csObjectMake2.isY
      language: CSharp
      name:
        CSharp: isY
        VB: isY
      nameWithType:
        CSharp: csObjectMake2.isY
        VB: csObjectMake2.isY
      qualifiedName:
        CSharp: csObjectMake2.isY
        VB: csObjectMake2.isY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isY
        path: ''
        startLine: 4996
      syntax:
        content:
          CSharp: public bool isY
          VB: Public isY As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake2.isZ
      commentId: F:Global.csObjectMake2.isZ
      language: CSharp
      name:
        CSharp: isZ
        VB: isZ
      nameWithType:
        CSharp: csObjectMake2.isZ
        VB: csObjectMake2.isZ
      qualifiedName:
        CSharp: csObjectMake2.isZ
        VB: csObjectMake2.isZ
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isZ
        path: ''
        startLine: 4997
      syntax:
        content:
          CSharp: public bool isZ
          VB: Public isZ As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake2.isMinusZ
      commentId: F:Global.csObjectMake2.isMinusZ
      language: CSharp
      name:
        CSharp: isMinusZ
        VB: isMinusZ
      nameWithType:
        CSharp: csObjectMake2.isMinusZ
        VB: csObjectMake2.isMinusZ
      qualifiedName:
        CSharp: csObjectMake2.isMinusZ
        VB: csObjectMake2.isMinusZ
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isMinusZ
        path: ''
        startLine: 4998
      syntax:
        content:
          CSharp: public bool isMinusZ
          VB: Public isMinusZ As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csObjectMake3
    commentId: T:Global.csObjectMake3
    language: CSharp
    name:
      CSharp: csObjectMake3
      VB: csObjectMake3
    nameWithType:
      CSharp: csObjectMake3
      VB: csObjectMake3
    qualifiedName:
      CSharp: csObjectMake3
      VB: csObjectMake3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csObjectMake3
      path: ''
      startLine: 5042
    syntax:
      content:
        CSharp: 'public class csObjectMake3 : MonoBehaviour'
        VB: >-
          Public Class csObjectMake3

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csObjectMake3.m_gameObject
      commentId: F:Global.csObjectMake3.m_gameObject
      language: CSharp
      name:
        CSharp: m_gameObject
        VB: m_gameObject
      nameWithType:
        CSharp: csObjectMake3.m_gameObject
        VB: csObjectMake3.m_gameObject
      qualifiedName:
        CSharp: csObjectMake3.m_gameObject
        VB: csObjectMake3.m_gameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObject
        path: ''
        startLine: 5044
      syntax:
        content:
          CSharp: public GameObject m_gameObject
          VB: Public m_gameObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake3.m_makePositions
      commentId: F:Global.csObjectMake3.m_makePositions
      language: CSharp
      name:
        CSharp: m_makePositions
        VB: m_makePositions
      nameWithType:
        CSharp: csObjectMake3.m_makePositions
        VB: csObjectMake3.m_makePositions
      qualifiedName:
        CSharp: csObjectMake3.m_makePositions
        VB: csObjectMake3.m_makePositions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makePositions
        path: ''
        startLine: 5045
      syntax:
        content:
          CSharp: public Transform[] m_makePositions
          VB: Public m_makePositions As Transform()
        return:
          type: Global.Transform[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake3.m_makeDelay
      commentId: F:Global.csObjectMake3.m_makeDelay
      language: CSharp
      name:
        CSharp: m_makeDelay
        VB: m_makeDelay
      nameWithType:
        CSharp: csObjectMake3.m_makeDelay
        VB: csObjectMake3.m_makeDelay
      qualifiedName:
        CSharp: csObjectMake3.m_makeDelay
        VB: csObjectMake3.m_makeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_makeDelay
        path: ''
        startLine: 5046
      syntax:
        content:
          CSharp: public float m_makeDelay
          VB: Public m_makeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake3.m_destroyTime
      commentId: F:Global.csObjectMake3.m_destroyTime
      language: CSharp
      name:
        CSharp: m_destroyTime
        VB: m_destroyTime
      nameWithType:
        CSharp: csObjectMake3.m_destroyTime
        VB: csObjectMake3.m_destroyTime
      qualifiedName:
        CSharp: csObjectMake3.m_destroyTime
        VB: csObjectMake3.m_destroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_destroyTime
        path: ''
        startLine: 5047
      syntax:
        content:
          CSharp: public float m_destroyTime
          VB: Public m_destroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake3.m_durationTime
      commentId: F:Global.csObjectMake3.m_durationTime
      language: CSharp
      name:
        CSharp: m_durationTime
        VB: m_durationTime
      nameWithType:
        CSharp: csObjectMake3.m_durationTime
        VB: csObjectMake3.m_durationTime
      qualifiedName:
        CSharp: csObjectMake3.m_durationTime
        VB: csObjectMake3.m_durationTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_durationTime
        path: ''
        startLine: 5048
      syntax:
        content:
          CSharp: public float m_durationTime
          VB: Public m_durationTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csObjectMake4
    commentId: T:Global.csObjectMake4
    language: CSharp
    name:
      CSharp: csObjectMake4
      VB: csObjectMake4
    nameWithType:
      CSharp: csObjectMake4
      VB: csObjectMake4
    qualifiedName:
      CSharp: csObjectMake4
      VB: csObjectMake4
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csObjectMake4
      path: ''
      startLine: 5077
    syntax:
      content:
        CSharp: 'public class csObjectMake4 : MonoBehaviour'
        VB: >-
          Public Class csObjectMake4

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csObjectMake4.m_gameObject
      commentId: F:Global.csObjectMake4.m_gameObject
      language: CSharp
      name:
        CSharp: m_gameObject
        VB: m_gameObject
      nameWithType:
        CSharp: csObjectMake4.m_gameObject
        VB: csObjectMake4.m_gameObject
      qualifiedName:
        CSharp: csObjectMake4.m_gameObject
        VB: csObjectMake4.m_gameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObject
        path: ''
        startLine: 5079
      syntax:
        content:
          CSharp: public GameObject m_gameObject
          VB: Public m_gameObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake4.MaxRage
      commentId: F:Global.csObjectMake4.MaxRage
      language: CSharp
      name:
        CSharp: MaxRage
        VB: MaxRage
      nameWithType:
        CSharp: csObjectMake4.MaxRage
        VB: csObjectMake4.MaxRage
      qualifiedName:
        CSharp: csObjectMake4.MaxRage
        VB: csObjectMake4.MaxRage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MaxRage
        path: ''
        startLine: 5082
      syntax:
        content:
          CSharp: public float MaxRage
          VB: Public MaxRage As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake4.MaxTime
      commentId: F:Global.csObjectMake4.MaxTime
      language: CSharp
      name:
        CSharp: MaxTime
        VB: MaxTime
      nameWithType:
        CSharp: csObjectMake4.MaxTime
        VB: csObjectMake4.MaxTime
      qualifiedName:
        CSharp: csObjectMake4.MaxTime
        VB: csObjectMake4.MaxTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MaxTime
        path: ''
        startLine: 5083
      syntax:
        content:
          CSharp: public float MaxTime
          VB: Public MaxTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake4.MaxCount
      commentId: F:Global.csObjectMake4.MaxCount
      language: CSharp
      name:
        CSharp: MaxCount
        VB: MaxCount
      nameWithType:
        CSharp: csObjectMake4.MaxCount
        VB: csObjectMake4.MaxCount
      qualifiedName:
        CSharp: csObjectMake4.MaxCount
        VB: csObjectMake4.MaxCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MaxCount
        path: ''
        startLine: 5084
      syntax:
        content:
          CSharp: public float MaxCount
          VB: Public MaxCount As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake4.MakeCount
      commentId: F:Global.csObjectMake4.MakeCount
      language: CSharp
      name:
        CSharp: MakeCount
        VB: MakeCount
      nameWithType:
        CSharp: csObjectMake4.MakeCount
        VB: csObjectMake4.MakeCount
      qualifiedName:
        CSharp: csObjectMake4.MakeCount
        VB: csObjectMake4.MakeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MakeCount
        path: ''
        startLine: 5085
      syntax:
        content:
          CSharp: public int MakeCount
          VB: Public MakeCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csObjectMake5
    commentId: T:Global.csObjectMake5
    language: CSharp
    name:
      CSharp: csObjectMake5
      VB: csObjectMake5
    nameWithType:
      CSharp: csObjectMake5
      VB: csObjectMake5
    qualifiedName:
      CSharp: csObjectMake5
      VB: csObjectMake5
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csObjectMake5
      path: ''
      startLine: 5111
    syntax:
      content:
        CSharp: 'public class csObjectMake5 : MonoBehaviour'
        VB: >-
          Public Class csObjectMake5

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csObjectMake5.m_gameObject
      commentId: F:Global.csObjectMake5.m_gameObject
      language: CSharp
      name:
        CSharp: m_gameObject
        VB: m_gameObject
      nameWithType:
        CSharp: csObjectMake5.m_gameObject
        VB: csObjectMake5.m_gameObject
      qualifiedName:
        CSharp: csObjectMake5.m_gameObject
        VB: csObjectMake5.m_gameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObject
        path: ''
        startLine: 5113
      syntax:
        content:
          CSharp: public GameObject m_gameObject
          VB: Public m_gameObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake5.m_objectSize
      commentId: F:Global.csObjectMake5.m_objectSize
      language: CSharp
      name:
        CSharp: m_objectSize
        VB: m_objectSize
      nameWithType:
        CSharp: csObjectMake5.m_objectSize
        VB: csObjectMake5.m_objectSize
      qualifiedName:
        CSharp: csObjectMake5.m_objectSize
        VB: csObjectMake5.m_objectSize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_objectSize
        path: ''
        startLine: 5114
      syntax:
        content:
          CSharp: public float m_objectSize
          VB: Public m_objectSize As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake5.m_subtractYValue
      commentId: F:Global.csObjectMake5.m_subtractYValue
      language: CSharp
      name:
        CSharp: m_subtractYValue
        VB: m_subtractYValue
      nameWithType:
        CSharp: csObjectMake5.m_subtractYValue
        VB: csObjectMake5.m_subtractYValue
      qualifiedName:
        CSharp: csObjectMake5.m_subtractYValue
        VB: csObjectMake5.m_subtractYValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_subtractYValue
        path: ''
        startLine: 5115
      syntax:
        content:
          CSharp: public float m_subtractYValue
          VB: Public m_subtractYValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake5.m_object_MakeCount
      commentId: F:Global.csObjectMake5.m_object_MakeCount
      language: CSharp
      name:
        CSharp: m_object_MakeCount
        VB: m_object_MakeCount
      nameWithType:
        CSharp: csObjectMake5.m_object_MakeCount
        VB: csObjectMake5.m_object_MakeCount
      qualifiedName:
        CSharp: csObjectMake5.m_object_MakeCount
        VB: csObjectMake5.m_object_MakeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeCount
        path: ''
        startLine: 5116
      syntax:
        content:
          CSharp: public float m_object_MakeCount
          VB: Public m_object_MakeCount As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake5.m_object_MakeDelay
      commentId: F:Global.csObjectMake5.m_object_MakeDelay
      language: CSharp
      name:
        CSharp: m_object_MakeDelay
        VB: m_object_MakeDelay
      nameWithType:
        CSharp: csObjectMake5.m_object_MakeDelay
        VB: csObjectMake5.m_object_MakeDelay
      qualifiedName:
        CSharp: csObjectMake5.m_object_MakeDelay
        VB: csObjectMake5.m_object_MakeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeDelay
        path: ''
        startLine: 5117
      syntax:
        content:
          CSharp: public float m_object_MakeDelay
          VB: Public m_object_MakeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake5.m_isCrossMake
      commentId: F:Global.csObjectMake5.m_isCrossMake
      language: CSharp
      name:
        CSharp: m_isCrossMake
        VB: m_isCrossMake
      nameWithType:
        CSharp: csObjectMake5.m_isCrossMake
        VB: csObjectMake5.m_isCrossMake
      qualifiedName:
        CSharp: csObjectMake5.m_isCrossMake
        VB: csObjectMake5.m_isCrossMake
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_isCrossMake
        path: ''
        startLine: 5118
      syntax:
        content:
          CSharp: public bool m_isCrossMake
          VB: Public m_isCrossMake As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake5.m_destroyTime
      commentId: F:Global.csObjectMake5.m_destroyTime
      language: CSharp
      name:
        CSharp: m_destroyTime
        VB: m_destroyTime
      nameWithType:
        CSharp: csObjectMake5.m_destroyTime
        VB: csObjectMake5.m_destroyTime
      qualifiedName:
        CSharp: csObjectMake5.m_destroyTime
        VB: csObjectMake5.m_destroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_destroyTime
        path: ''
        startLine: 5119
      syntax:
        content:
          CSharp: public float m_destroyTime
          VB: Public m_destroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.csObjectMake6
    commentId: T:Global.csObjectMake6
    language: CSharp
    name:
      CSharp: csObjectMake6
      VB: csObjectMake6
    nameWithType:
      CSharp: csObjectMake6
      VB: csObjectMake6
    qualifiedName:
      CSharp: csObjectMake6
      VB: csObjectMake6
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: csObjectMake6
      path: ''
      startLine: 5157
    syntax:
      content:
        CSharp: 'public class csObjectMake6 : MonoBehaviour'
        VB: >-
          Public Class csObjectMake6

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.csObjectMake6.m_gameObject
      commentId: F:Global.csObjectMake6.m_gameObject
      language: CSharp
      name:
        CSharp: m_gameObject
        VB: m_gameObject
      nameWithType:
        CSharp: csObjectMake6.m_gameObject
        VB: csObjectMake6.m_gameObject
      qualifiedName:
        CSharp: csObjectMake6.m_gameObject
        VB: csObjectMake6.m_gameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_gameObject
        path: ''
        startLine: 5159
      syntax:
        content:
          CSharp: public GameObject m_gameObject
          VB: Public m_gameObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake6.m_object_MakeDelay
      commentId: F:Global.csObjectMake6.m_object_MakeDelay
      language: CSharp
      name:
        CSharp: m_object_MakeDelay
        VB: m_object_MakeDelay
      nameWithType:
        CSharp: csObjectMake6.m_object_MakeDelay
        VB: csObjectMake6.m_object_MakeDelay
      qualifiedName:
        CSharp: csObjectMake6.m_object_MakeDelay
        VB: csObjectMake6.m_object_MakeDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeDelay
        path: ''
        startLine: 5160
      syntax:
        content:
          CSharp: public float m_object_MakeDelay
          VB: Public m_object_MakeDelay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake6.m_DestroyTime
      commentId: F:Global.csObjectMake6.m_DestroyTime
      language: CSharp
      name:
        CSharp: m_DestroyTime
        VB: m_DestroyTime
      nameWithType:
        CSharp: csObjectMake6.m_DestroyTime
        VB: csObjectMake6.m_DestroyTime
      qualifiedName:
        CSharp: csObjectMake6.m_DestroyTime
        VB: csObjectMake6.m_DestroyTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_DestroyTime
        path: ''
        startLine: 5161
      syntax:
        content:
          CSharp: public float m_DestroyTime
          VB: Public m_DestroyTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake6.m_interval
      commentId: F:Global.csObjectMake6.m_interval
      language: CSharp
      name:
        CSharp: m_interval
        VB: m_interval
      nameWithType:
        CSharp: csObjectMake6.m_interval
        VB: csObjectMake6.m_interval
      qualifiedName:
        CSharp: csObjectMake6.m_interval
        VB: csObjectMake6.m_interval
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_interval
        path: ''
        startLine: 5162
      syntax:
        content:
          CSharp: public float m_interval
          VB: Public m_interval As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake6.m_yPos
      commentId: F:Global.csObjectMake6.m_yPos
      language: CSharp
      name:
        CSharp: m_yPos
        VB: m_yPos
      nameWithType:
        CSharp: csObjectMake6.m_yPos
        VB: csObjectMake6.m_yPos
      qualifiedName:
        CSharp: csObjectMake6.m_yPos
        VB: csObjectMake6.m_yPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_yPos
        path: ''
        startLine: 5163
      syntax:
        content:
          CSharp: public float m_yPos
          VB: Public m_yPos As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.csObjectMake6.m_object_MakeCount
      commentId: F:Global.csObjectMake6.m_object_MakeCount
      language: CSharp
      name:
        CSharp: m_object_MakeCount
        VB: m_object_MakeCount
      nameWithType:
        CSharp: csObjectMake6.m_object_MakeCount
        VB: csObjectMake6.m_object_MakeCount
      qualifiedName:
        CSharp: csObjectMake6.m_object_MakeCount
        VB: csObjectMake6.m_object_MakeCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_object_MakeCount
        path: ''
        startLine: 5164
      syntax:
        content:
          CSharp: public int m_object_MakeCount
          VB: Public m_object_MakeCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PrefabSpawner
    commentId: T:Global.PrefabSpawner
    language: CSharp
    name:
      CSharp: PrefabSpawner
      VB: PrefabSpawner
    nameWithType:
      CSharp: PrefabSpawner
      VB: PrefabSpawner
    qualifiedName:
      CSharp: PrefabSpawner
      VB: PrefabSpawner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PrefabSpawner
      path: ''
      startLine: 5190
    syntax:
      content:
        CSharp: 'public class PrefabSpawner : MonoBehaviour'
        VB: >-
          Public Class PrefabSpawner

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PrefabSpawner.prefabs
      commentId: F:Global.PrefabSpawner.prefabs
      language: CSharp
      name:
        CSharp: prefabs
        VB: prefabs
      nameWithType:
        CSharp: PrefabSpawner.prefabs
        VB: PrefabSpawner.prefabs
      qualifiedName:
        CSharp: PrefabSpawner.prefabs
        VB: PrefabSpawner.prefabs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: prefabs
        path: ''
        startLine: 5193
      syntax:
        content:
          CSharp: public GameObject[] prefabs
          VB: Public prefabs As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PrefabSpawner.sceneCamera
      commentId: F:Global.PrefabSpawner.sceneCamera
      language: CSharp
      name:
        CSharp: sceneCamera
        VB: sceneCamera
      nameWithType:
        CSharp: PrefabSpawner.sceneCamera
        VB: PrefabSpawner.sceneCamera
      qualifiedName:
        CSharp: PrefabSpawner.sceneCamera
        VB: PrefabSpawner.sceneCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: sceneCamera
        path: ''
        startLine: 5194
      syntax:
        content:
          CSharp: public Camera sceneCamera
          VB: Public sceneCamera As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PrefabSpawner.nameOfThePrefab
      commentId: F:Global.PrefabSpawner.nameOfThePrefab
      language: CSharp
      name:
        CSharp: nameOfThePrefab
        VB: nameOfThePrefab
      nameWithType:
        CSharp: PrefabSpawner.nameOfThePrefab
        VB: PrefabSpawner.nameOfThePrefab
      qualifiedName:
        CSharp: PrefabSpawner.nameOfThePrefab
        VB: PrefabSpawner.nameOfThePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: nameOfThePrefab
        path: ''
        startLine: 5195
      syntax:
        content:
          CSharp: public string nameOfThePrefab
          VB: Public nameOfThePrefab As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PrefabSpawner.SpawnPrefab
      commentId: M:Global.PrefabSpawner.SpawnPrefab
      language: CSharp
      name:
        CSharp: SpawnPrefab()
        VB: SpawnPrefab()
      nameWithType:
        CSharp: PrefabSpawner.SpawnPrefab()
        VB: PrefabSpawner.SpawnPrefab()
      qualifiedName:
        CSharp: PrefabSpawner.SpawnPrefab()
        VB: PrefabSpawner.SpawnPrefab()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SpawnPrefab
        path: ''
        startLine: 5212
      syntax:
        content:
          CSharp: public void SpawnPrefab()
          VB: Public Sub SpawnPrefab
      overload: Global.PrefabSpawner.SpawnPrefab*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PrefabSpawner.ChangePrefabIntex(System.Boolean)
      commentId: M:Global.PrefabSpawner.ChangePrefabIntex(System.Boolean)
      language: CSharp
      name:
        CSharp: ChangePrefabIntex(Boolean)
        VB: ChangePrefabIntex(Boolean)
      nameWithType:
        CSharp: PrefabSpawner.ChangePrefabIntex(Boolean)
        VB: PrefabSpawner.ChangePrefabIntex(Boolean)
      qualifiedName:
        CSharp: PrefabSpawner.ChangePrefabIntex(System.Boolean)
        VB: PrefabSpawner.ChangePrefabIntex(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangePrefabIntex
        path: ''
        startLine: 5223
      syntax:
        content:
          CSharp: public void ChangePrefabIntex(bool bo)
          VB: Public Sub ChangePrefabIntex(bo As Boolean)
        parameters:
        - id: bo
          type: System.Boolean
      overload: Global.PrefabSpawner.ChangePrefabIntex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.RampGeneratorTDE
    commentId: T:Global.RampGeneratorTDE
    language: CSharp
    name:
      CSharp: RampGeneratorTDE
      VB: RampGeneratorTDE
    nameWithType:
      CSharp: RampGeneratorTDE
      VB: RampGeneratorTDE
    qualifiedName:
      CSharp: RampGeneratorTDE
      VB: RampGeneratorTDE
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RampGeneratorTDE
      path: ''
      startLine: 5249
    syntax:
      content:
        CSharp: 'public class RampGeneratorTDE : MonoBehaviour'
        VB: >-
          Public Class RampGeneratorTDE

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RampGeneratorTDE.procedrualGradientRamp
      commentId: F:Global.RampGeneratorTDE.procedrualGradientRamp
      language: CSharp
      name:
        CSharp: procedrualGradientRamp
        VB: procedrualGradientRamp
      nameWithType:
        CSharp: RampGeneratorTDE.procedrualGradientRamp
        VB: RampGeneratorTDE.procedrualGradientRamp
      qualifiedName:
        CSharp: RampGeneratorTDE.procedrualGradientRamp
        VB: RampGeneratorTDE.procedrualGradientRamp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: procedrualGradientRamp
        path: ''
        startLine: 5252
      syntax:
        content:
          CSharp: public Gradient procedrualGradientRamp
          VB: Public procedrualGradientRamp As Gradient
        return:
          type: Global.Gradient
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RampGeneratorTDE.pathForPNG
      commentId: F:Global.RampGeneratorTDE.pathForPNG
      language: CSharp
      name:
        CSharp: pathForPNG
        VB: pathForPNG
      nameWithType:
        CSharp: RampGeneratorTDE.pathForPNG
        VB: RampGeneratorTDE.pathForPNG
      qualifiedName:
        CSharp: RampGeneratorTDE.pathForPNG
        VB: RampGeneratorTDE.pathForPNG
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: pathForPNG
        path: ''
        startLine: 5253
      syntax:
        content:
          CSharp: public string pathForPNG
          VB: Public pathForPNG As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RampGeneratorTDE.renderers
      commentId: F:Global.RampGeneratorTDE.renderers
      language: CSharp
      name:
        CSharp: renderers
        VB: renderers
      nameWithType:
        CSharp: RampGeneratorTDE.renderers
        VB: RampGeneratorTDE.renderers
      qualifiedName:
        CSharp: RampGeneratorTDE.renderers
        VB: RampGeneratorTDE.renderers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: renderers
        path: ''
        startLine: 5256
      syntax:
        content:
          CSharp: public Renderer[] renderers
          VB: Public renderers As Renderer()
        return:
          type: Global.Renderer[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RampGeneratorTDE.mode
      commentId: F:Global.RampGeneratorTDE.mode
      language: CSharp
      name:
        CSharp: mode
        VB: mode
      nameWithType:
        CSharp: RampGeneratorTDE.mode
        VB: RampGeneratorTDE.mode
      qualifiedName:
        CSharp: RampGeneratorTDE.mode
        VB: RampGeneratorTDE.mode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: mode
        path: ''
        startLine: 5257
      syntax:
        content:
          CSharp: public RampGeneratorTDE.Mode mode
          VB: Public mode As RampGeneratorTDE.Mode
        return:
          type: Global.RampGeneratorTDE.Mode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RampGeneratorTDE.UpdateRampTexture
      commentId: M:Global.RampGeneratorTDE.UpdateRampTexture
      language: CSharp
      name:
        CSharp: UpdateRampTexture()
        VB: UpdateRampTexture()
      nameWithType:
        CSharp: RampGeneratorTDE.UpdateRampTexture()
        VB: RampGeneratorTDE.UpdateRampTexture()
      qualifiedName:
        CSharp: RampGeneratorTDE.UpdateRampTexture()
        VB: RampGeneratorTDE.UpdateRampTexture()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateRampTexture
        path: ''
        startLine: 5315
      syntax:
        content:
          CSharp: public void UpdateRampTexture()
          VB: Public Sub UpdateRampTexture
      overload: Global.RampGeneratorTDE.UpdateRampTexture*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RampGeneratorTDE.BakeGradient
      commentId: M:Global.RampGeneratorTDE.BakeGradient
      language: CSharp
      name:
        CSharp: BakeGradient()
        VB: BakeGradient()
      nameWithType:
        CSharp: RampGeneratorTDE.BakeGradient()
        VB: RampGeneratorTDE.BakeGradient()
      qualifiedName:
        CSharp: RampGeneratorTDE.BakeGradient()
        VB: RampGeneratorTDE.BakeGradient()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BakeGradient
        path: ''
        startLine: 5329
      syntax:
        content:
          CSharp: public void BakeGradient()
          VB: Public Sub BakeGradient
      overload: Global.RampGeneratorTDE.BakeGradient*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.RampGeneratorTDE.Mode
    commentId: T:Global.RampGeneratorTDE.Mode
    language: CSharp
    name:
      CSharp: RampGeneratorTDE.Mode
      VB: RampGeneratorTDE.Mode
    nameWithType:
      CSharp: RampGeneratorTDE.Mode
      VB: RampGeneratorTDE.Mode
    qualifiedName:
      CSharp: RampGeneratorTDE.Mode
      VB: RampGeneratorTDE.Mode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Mode
      path: ''
      startLine: 5255
    syntax:
      content:
        CSharp: public enum Mode
        VB: Public Enum Mode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.RampGeneratorTDE.Mode.CreateAtStart
      commentId: F:Global.RampGeneratorTDE.Mode.CreateAtStart
      language: CSharp
      name:
        CSharp: CreateAtStart
        VB: CreateAtStart
      nameWithType:
        CSharp: RampGeneratorTDE.Mode.CreateAtStart
        VB: RampGeneratorTDE.Mode.CreateAtStart
      qualifiedName:
        CSharp: RampGeneratorTDE.Mode.CreateAtStart
        VB: RampGeneratorTDE.Mode.CreateAtStart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CreateAtStart
        path: ''
        startLine: 5255
      syntax:
        content:
          CSharp: CreateAtStart = 0
          VB: CreateAtStart = 0
        return:
          type: Global.RampGeneratorTDE.Mode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RampGeneratorTDE.Mode.UpdateEveryFrame
      commentId: F:Global.RampGeneratorTDE.Mode.UpdateEveryFrame
      language: CSharp
      name:
        CSharp: UpdateEveryFrame
        VB: UpdateEveryFrame
      nameWithType:
        CSharp: RampGeneratorTDE.Mode.UpdateEveryFrame
        VB: RampGeneratorTDE.Mode.UpdateEveryFrame
      qualifiedName:
        CSharp: RampGeneratorTDE.Mode.UpdateEveryFrame
        VB: RampGeneratorTDE.Mode.UpdateEveryFrame
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateEveryFrame
        path: ''
        startLine: 5255
      syntax:
        content:
          CSharp: UpdateEveryFrame = 1
          VB: UpdateEveryFrame = 1
        return:
          type: Global.RampGeneratorTDE.Mode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RampGeneratorTDE.Mode.BakeAndSaveAsTexture
      commentId: F:Global.RampGeneratorTDE.Mode.BakeAndSaveAsTexture
      language: CSharp
      name:
        CSharp: BakeAndSaveAsTexture
        VB: BakeAndSaveAsTexture
      nameWithType:
        CSharp: RampGeneratorTDE.Mode.BakeAndSaveAsTexture
        VB: RampGeneratorTDE.Mode.BakeAndSaveAsTexture
      qualifiedName:
        CSharp: RampGeneratorTDE.Mode.BakeAndSaveAsTexture
        VB: RampGeneratorTDE.Mode.BakeAndSaveAsTexture
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BakeAndSaveAsTexture
        path: ''
        startLine: 5255
      syntax:
        content:
          CSharp: BakeAndSaveAsTexture = 2
          VB: BakeAndSaveAsTexture = 2
        return:
          type: Global.RampGeneratorTDE.Mode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.SineCameraControllerTopDownEffects
    commentId: T:Global.SineCameraControllerTopDownEffects
    language: CSharp
    name:
      CSharp: SineCameraControllerTopDownEffects
      VB: SineCameraControllerTopDownEffects
    nameWithType:
      CSharp: SineCameraControllerTopDownEffects
      VB: SineCameraControllerTopDownEffects
    qualifiedName:
      CSharp: SineCameraControllerTopDownEffects
      VB: SineCameraControllerTopDownEffects
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SineCameraControllerTopDownEffects
      path: ''
      startLine: 5341
    syntax:
      content:
        CSharp: 'public class SineCameraControllerTopDownEffects : MonoBehaviour'
        VB: >-
          Public Class SineCameraControllerTopDownEffects

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SineCameraControllerTopDownEffects.camera
      commentId: F:Global.SineCameraControllerTopDownEffects.camera
      language: CSharp
      name:
        CSharp: camera
        VB: camera
      nameWithType:
        CSharp: SineCameraControllerTopDownEffects.camera
        VB: SineCameraControllerTopDownEffects.camera
      qualifiedName:
        CSharp: SineCameraControllerTopDownEffects.camera
        VB: SineCameraControllerTopDownEffects.camera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: camera
        path: ''
        startLine: 5344
      syntax:
        content:
          CSharp: public Camera camera
          VB: Public camera As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SineCameraControllerTopDownEffects.basePivot
      commentId: F:Global.SineCameraControllerTopDownEffects.basePivot
      language: CSharp
      name:
        CSharp: basePivot
        VB: basePivot
      nameWithType:
        CSharp: SineCameraControllerTopDownEffects.basePivot
        VB: SineCameraControllerTopDownEffects.basePivot
      qualifiedName:
        CSharp: SineCameraControllerTopDownEffects.basePivot
        VB: SineCameraControllerTopDownEffects.basePivot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: basePivot
        path: ''
        startLine: 5345
      syntax:
        content:
          CSharp: public Transform basePivot
          VB: Public basePivot As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SineCameraControllerTopDownEffects.farPivot
      commentId: F:Global.SineCameraControllerTopDownEffects.farPivot
      language: CSharp
      name:
        CSharp: farPivot
        VB: farPivot
      nameWithType:
        CSharp: SineCameraControllerTopDownEffects.farPivot
        VB: SineCameraControllerTopDownEffects.farPivot
      qualifiedName:
        CSharp: SineCameraControllerTopDownEffects.farPivot
        VB: SineCameraControllerTopDownEffects.farPivot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: farPivot
        path: ''
        startLine: 5346
      syntax:
        content:
          CSharp: public Transform farPivot
          VB: Public farPivot As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SineCameraControllerTopDownEffects.scrollSpeed
      commentId: F:Global.SineCameraControllerTopDownEffects.scrollSpeed
      language: CSharp
      name:
        CSharp: scrollSpeed
        VB: scrollSpeed
      nameWithType:
        CSharp: SineCameraControllerTopDownEffects.scrollSpeed
        VB: SineCameraControllerTopDownEffects.scrollSpeed
      qualifiedName:
        CSharp: SineCameraControllerTopDownEffects.scrollSpeed
        VB: SineCameraControllerTopDownEffects.scrollSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: scrollSpeed
        path: ''
        startLine: 5347
      syntax:
        content:
          CSharp: public float scrollSpeed
          VB: Public scrollSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SineCameraControllerTopDownEffects.rotationSpeed
      commentId: F:Global.SineCameraControllerTopDownEffects.rotationSpeed
      language: CSharp
      name:
        CSharp: rotationSpeed
        VB: rotationSpeed
      nameWithType:
        CSharp: SineCameraControllerTopDownEffects.rotationSpeed
        VB: SineCameraControllerTopDownEffects.rotationSpeed
      qualifiedName:
        CSharp: SineCameraControllerTopDownEffects.rotationSpeed
        VB: SineCameraControllerTopDownEffects.rotationSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rotationSpeed
        path: ''
        startLine: 5348
      syntax:
        content:
          CSharp: public float rotationSpeed
          VB: Public rotationSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SineCameraControllerTopDownEffects.rotationAmount
      commentId: F:Global.SineCameraControllerTopDownEffects.rotationAmount
      language: CSharp
      name:
        CSharp: rotationAmount
        VB: rotationAmount
      nameWithType:
        CSharp: SineCameraControllerTopDownEffects.rotationAmount
        VB: SineCameraControllerTopDownEffects.rotationAmount
      qualifiedName:
        CSharp: SineCameraControllerTopDownEffects.rotationAmount
        VB: SineCameraControllerTopDownEffects.rotationAmount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rotationAmount
        path: ''
        startLine: 5349
      syntax:
        content:
          CSharp: public float rotationAmount
          VB: Public rotationAmount As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SineCameraControllerTopDownEffects.maximumAngle
      commentId: F:Global.SineCameraControllerTopDownEffects.maximumAngle
      language: CSharp
      name:
        CSharp: maximumAngle
        VB: maximumAngle
      nameWithType:
        CSharp: SineCameraControllerTopDownEffects.maximumAngle
        VB: SineCameraControllerTopDownEffects.maximumAngle
      qualifiedName:
        CSharp: SineCameraControllerTopDownEffects.maximumAngle
        VB: SineCameraControllerTopDownEffects.maximumAngle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maximumAngle
        path: ''
        startLine: 5351
      syntax:
        content:
          CSharp: public float maximumAngle
          VB: Public maximumAngle As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.SineUIControllerTopDownEffects
    commentId: T:Global.SineUIControllerTopDownEffects
    language: CSharp
    name:
      CSharp: SineUIControllerTopDownEffects
      VB: SineUIControllerTopDownEffects
    nameWithType:
      CSharp: SineUIControllerTopDownEffects
      VB: SineUIControllerTopDownEffects
    qualifiedName:
      CSharp: SineUIControllerTopDownEffects
      VB: SineUIControllerTopDownEffects
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SineUIControllerTopDownEffects
      path: ''
      startLine: 5429
    syntax:
      content:
        CSharp: 'public class SineUIControllerTopDownEffects : MonoBehaviour'
        VB: >-
          Public Class SineUIControllerTopDownEffects

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SineUIControllerTopDownEffects.canvasGroup
      commentId: F:Global.SineUIControllerTopDownEffects.canvasGroup
      language: CSharp
      name:
        CSharp: canvasGroup
        VB: canvasGroup
      nameWithType:
        CSharp: SineUIControllerTopDownEffects.canvasGroup
        VB: SineUIControllerTopDownEffects.canvasGroup
      qualifiedName:
        CSharp: SineUIControllerTopDownEffects.canvasGroup
        VB: SineUIControllerTopDownEffects.canvasGroup
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: canvasGroup
        path: ''
        startLine: 5432
      syntax:
        content:
          CSharp: public CanvasGroup canvasGroup
          VB: Public canvasGroup As CanvasGroup
        return:
          type: Global.CanvasGroup
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SineUIControllerTopDownEffects.prefabSpawnerObject
      commentId: F:Global.SineUIControllerTopDownEffects.prefabSpawnerObject
      language: CSharp
      name:
        CSharp: prefabSpawnerObject
        VB: prefabSpawnerObject
      nameWithType:
        CSharp: SineUIControllerTopDownEffects.prefabSpawnerObject
        VB: SineUIControllerTopDownEffects.prefabSpawnerObject
      qualifiedName:
        CSharp: SineUIControllerTopDownEffects.prefabSpawnerObject
        VB: SineUIControllerTopDownEffects.prefabSpawnerObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: prefabSpawnerObject
        path: ''
        startLine: 5433
      syntax:
        content:
          CSharp: public PrefabSpawner prefabSpawnerObject
          VB: Public prefabSpawnerObject As PrefabSpawner
        return:
          type: Global.PrefabSpawner
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SineUIControllerTopDownEffects.nameInUI
      commentId: F:Global.SineUIControllerTopDownEffects.nameInUI
      language: CSharp
      name:
        CSharp: nameInUI
        VB: nameInUI
      nameWithType:
        CSharp: SineUIControllerTopDownEffects.nameInUI
        VB: SineUIControllerTopDownEffects.nameInUI
      qualifiedName:
        CSharp: SineUIControllerTopDownEffects.nameInUI
        VB: SineUIControllerTopDownEffects.nameInUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: nameInUI
        path: ''
        startLine: 5434
      syntax:
        content:
          CSharp: public Text nameInUI
          VB: Public nameInUI As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SineUIControllerTopDownEffects.ChangeEffect(System.Boolean)
      commentId: M:Global.SineUIControllerTopDownEffects.ChangeEffect(System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeEffect(Boolean)
        VB: ChangeEffect(Boolean)
      nameWithType:
        CSharp: SineUIControllerTopDownEffects.ChangeEffect(Boolean)
        VB: SineUIControllerTopDownEffects.ChangeEffect(Boolean)
      qualifiedName:
        CSharp: SineUIControllerTopDownEffects.ChangeEffect(System.Boolean)
        VB: SineUIControllerTopDownEffects.ChangeEffect(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeEffect
        path: ''
        startLine: 5467
      syntax:
        content:
          CSharp: public void ChangeEffect(bool bo)
          VB: Public Sub ChangeEffect(bo As Boolean)
        parameters:
        - id: bo
          type: System.Boolean
      overload: Global.SineUIControllerTopDownEffects.ChangeEffect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CustomRampGeneratorEditor
    commentId: T:Global.CustomRampGeneratorEditor
    language: CSharp
    name:
      CSharp: CustomRampGeneratorEditor
      VB: CustomRampGeneratorEditor
    nameWithType:
      CSharp: CustomRampGeneratorEditor
      VB: CustomRampGeneratorEditor
    qualifiedName:
      CSharp: CustomRampGeneratorEditor
      VB: CustomRampGeneratorEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CustomRampGeneratorEditor
      path: ''
      startLine: 5477
    syntax:
      content:
        CSharp: 'public class CustomRampGeneratorEditor : Editor'
        VB: >-
          Public Class CustomRampGeneratorEditor

              Inherits Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CustomRampGeneratorEditor.OnInspectorGUI
      commentId: M:Global.CustomRampGeneratorEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: CustomRampGeneratorEditor.OnInspectorGUI()
        VB: CustomRampGeneratorEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: CustomRampGeneratorEditor.OnInspectorGUI()
        VB: CustomRampGeneratorEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 5480
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: Global.CustomRampGeneratorEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.AlteredView
    commentId: T:Global.AlteredView
    language: CSharp
    name:
      CSharp: AlteredView
      VB: AlteredView
    nameWithType:
      CSharp: AlteredView
      VB: AlteredView
    qualifiedName:
      CSharp: AlteredView
      VB: AlteredView
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AlteredView
      path: ''
      startLine: 5504
    syntax:
      content:
        CSharp: 'public class AlteredView : MonoBehaviour'
        VB: >-
          Public Class AlteredView

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.AlteredView.testTurn
      commentId: F:Global.AlteredView.testTurn
      language: CSharp
      name:
        CSharp: testTurn
        VB: testTurn
      nameWithType:
        CSharp: AlteredView.testTurn
        VB: AlteredView.testTurn
      qualifiedName:
        CSharp: AlteredView.testTurn
        VB: AlteredView.testTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: testTurn
        path: ''
        startLine: 5510
      syntax:
        content:
          CSharp: public int testTurn
          VB: Public testTurn As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredView.spriteTest
      commentId: F:Global.AlteredView.spriteTest
      language: CSharp
      name:
        CSharp: spriteTest
        VB: spriteTest
      nameWithType:
        CSharp: AlteredView.spriteTest
        VB: AlteredView.spriteTest
      qualifiedName:
        CSharp: AlteredView.spriteTest
        VB: AlteredView.spriteTest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: spriteTest
        path: ''
        startLine: 5511
      syntax:
        content:
          CSharp: public Sprite spriteTest
          VB: Public spriteTest As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredView.Test
      commentId: M:Global.AlteredView.Test
      language: CSharp
      name:
        CSharp: Test()
        VB: Test()
      nameWithType:
        CSharp: AlteredView.Test()
        VB: AlteredView.Test()
      qualifiedName:
        CSharp: AlteredView.Test()
        VB: AlteredView.Test()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Test
        path: ''
        startLine: 5513
      syntax:
        content:
          CSharp: public void Test()
          VB: Public Sub Test
      overload: Global.AlteredView.Test*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredView.ShowAlteredByTime(System.Int32,Sprite)
      commentId: M:Global.AlteredView.ShowAlteredByTime(System.Int32,Sprite)
      language: CSharp
      name:
        CSharp: ShowAlteredByTime(Int32, Sprite)
        VB: ShowAlteredByTime(Int32, Sprite)
      nameWithType:
        CSharp: AlteredView.ShowAlteredByTime(Int32, Sprite)
        VB: AlteredView.ShowAlteredByTime(Int32, Sprite)
      qualifiedName:
        CSharp: AlteredView.ShowAlteredByTime(System.Int32, Sprite)
        VB: AlteredView.ShowAlteredByTime(System.Int32, Sprite)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShowAlteredByTime
        path: ''
        startLine: 5519
      syntax:
        content:
          CSharp: public void ShowAlteredByTime(int turnCount, Sprite icon)
          VB: Public Sub ShowAlteredByTime(turnCount As Integer, icon As Sprite)
        parameters:
        - id: turnCount
          type: System.Int32
        - id: icon
          type: Global.Sprite
      overload: Global.AlteredView.ShowAlteredByTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredView.UpdateAlteredVisual(GameObject,System.String,Sprite)
      commentId: M:Global.AlteredView.UpdateAlteredVisual(GameObject,System.String,Sprite)
      language: CSharp
      name:
        CSharp: UpdateAlteredVisual(GameObject, String, Sprite)
        VB: UpdateAlteredVisual(GameObject, String, Sprite)
      nameWithType:
        CSharp: AlteredView.UpdateAlteredVisual(GameObject, String, Sprite)
        VB: AlteredView.UpdateAlteredVisual(GameObject, String, Sprite)
      qualifiedName:
        CSharp: AlteredView.UpdateAlteredVisual(GameObject, System.String, Sprite)
        VB: AlteredView.UpdateAlteredVisual(GameObject, System.String, Sprite)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateAlteredVisual
        path: ''
        startLine: 5528
      syntax:
        content:
          CSharp: public void UpdateAlteredVisual(GameObject target, string text, Sprite icon = null)
          VB: Public Sub UpdateAlteredVisual(target As GameObject, text As String, icon As Sprite = Nothing)
        parameters:
        - id: target
          type: Global.GameObject
        - id: text
          type: System.String
        - id: icon
          type: Global.Sprite
      overload: Global.AlteredView.UpdateAlteredVisual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredView.PassTurn
      commentId: M:Global.AlteredView.PassTurn
      language: CSharp
      name:
        CSharp: PassTurn()
        VB: PassTurn()
      nameWithType:
        CSharp: AlteredView.PassTurn()
        VB: AlteredView.PassTurn()
      qualifiedName:
        CSharp: AlteredView.PassTurn()
        VB: AlteredView.PassTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PassTurn
        path: ''
        startLine: 5535
      syntax:
        content:
          CSharp: public void PassTurn()
          VB: Public Sub PassTurn
      overload: Global.AlteredView.PassTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.AlteredView.AlteredByTurns
    commentId: T:Global.AlteredView.AlteredByTurns
    language: CSharp
    name:
      CSharp: AlteredView.AlteredByTurns
      VB: AlteredView.AlteredByTurns
    nameWithType:
      CSharp: AlteredView.AlteredByTurns
      VB: AlteredView.AlteredByTurns
    qualifiedName:
      CSharp: AlteredView.AlteredByTurns
      VB: AlteredView.AlteredByTurns
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AlteredByTurns
      path: ''
      startLine: 5549
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class AlteredByTurns
        VB: >-
          <Serializable>

          Public Class AlteredByTurns
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.AlteredView.AlteredByTurns.alteredObject
      commentId: F:Global.AlteredView.AlteredByTurns.alteredObject
      language: CSharp
      name:
        CSharp: alteredObject
        VB: alteredObject
      nameWithType:
        CSharp: AlteredView.AlteredByTurns.alteredObject
        VB: AlteredView.AlteredByTurns.alteredObject
      qualifiedName:
        CSharp: AlteredView.AlteredByTurns.alteredObject
        VB: AlteredView.AlteredByTurns.alteredObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alteredObject
        path: ''
        startLine: 5552
      syntax:
        content:
          CSharp: public GameObject alteredObject
          VB: Public alteredObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredView.AlteredByTurns.turns
      commentId: F:Global.AlteredView.AlteredByTurns.turns
      language: CSharp
      name:
        CSharp: turns
        VB: turns
      nameWithType:
        CSharp: AlteredView.AlteredByTurns.turns
        VB: AlteredView.AlteredByTurns.turns
      qualifiedName:
        CSharp: AlteredView.AlteredByTurns.turns
        VB: AlteredView.AlteredByTurns.turns
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: turns
        path: ''
        startLine: 5553
      syntax:
        content:
          CSharp: public int turns
          VB: Public turns As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ChallengePlayerController
    commentId: T:Global.ChallengePlayerController
    language: CSharp
    name:
      CSharp: ChallengePlayerController
      VB: ChallengePlayerController
    nameWithType:
      CSharp: ChallengePlayerController
      VB: ChallengePlayerController
    qualifiedName:
      CSharp: ChallengePlayerController
      VB: ChallengePlayerController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ChallengePlayerController
      path: ''
      startLine: 5947
    syntax:
      content:
        CSharp: 'public class ChallengePlayerController : MonoBehaviour'
        VB: >-
          Public Class ChallengePlayerController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ChallengePlayerController.isRecivingChallenge
      commentId: F:Global.ChallengePlayerController.isRecivingChallenge
      language: CSharp
      name:
        CSharp: isRecivingChallenge
        VB: isRecivingChallenge
      nameWithType:
        CSharp: ChallengePlayerController.isRecivingChallenge
        VB: ChallengePlayerController.isRecivingChallenge
      qualifiedName:
        CSharp: ChallengePlayerController.isRecivingChallenge
        VB: ChallengePlayerController.isRecivingChallenge
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isRecivingChallenge
        path: ''
        startLine: 5950
      syntax:
        content:
          CSharp: public bool isRecivingChallenge
          VB: Public isRecivingChallenge As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.onChallengeAgain
      commentId: F:Global.ChallengePlayerController.onChallengeAgain
      language: CSharp
      name:
        CSharp: onChallengeAgain
        VB: onChallengeAgain
      nameWithType:
        CSharp: ChallengePlayerController.onChallengeAgain
        VB: ChallengePlayerController.onChallengeAgain
      qualifiedName:
        CSharp: ChallengePlayerController.onChallengeAgain
        VB: ChallengePlayerController.onChallengeAgain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: onChallengeAgain
        path: ''
        startLine: 5962
      syntax:
        content:
          CSharp: public Action onChallengeAgain
          VB: Public onChallengeAgain As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.RecieveChallenge(ThirdPersonController,System.String)
      commentId: M:Global.ChallengePlayerController.RecieveChallenge(ThirdPersonController,System.String)
      language: CSharp
      name:
        CSharp: RecieveChallenge(ThirdPersonController, String)
        VB: RecieveChallenge(ThirdPersonController, String)
      nameWithType:
        CSharp: ChallengePlayerController.RecieveChallenge(ThirdPersonController, String)
        VB: ChallengePlayerController.RecieveChallenge(ThirdPersonController, String)
      qualifiedName:
        CSharp: ChallengePlayerController.RecieveChallenge(ThirdPersonController, System.String)
        VB: ChallengePlayerController.RecieveChallenge(ThirdPersonController, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RecieveChallenge
        path: ''
        startLine: 5969
      syntax:
        content:
          CSharp: public void RecieveChallenge(ThirdPersonController _otherPlayer, string _otherRandomMatchNumber)
          VB: Public Sub RecieveChallenge(_otherPlayer As ThirdPersonController, _otherRandomMatchNumber As String)
        parameters:
        - id: _otherPlayer
          type: Global.ThirdPersonController
        - id: _otherRandomMatchNumber
          type: System.String
      overload: Global.ChallengePlayerController.RecieveChallenge*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.CheckChallenge
      commentId: M:Global.ChallengePlayerController.CheckChallenge
      language: CSharp
      name:
        CSharp: CheckChallenge()
        VB: CheckChallenge()
      nameWithType:
        CSharp: ChallengePlayerController.CheckChallenge()
        VB: ChallengePlayerController.CheckChallenge()
      qualifiedName:
        CSharp: ChallengePlayerController.CheckChallenge()
        VB: ChallengePlayerController.CheckChallenge()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckChallenge
        path: ''
        startLine: 5980
      syntax:
        content:
          CSharp: public void CheckChallenge()
          VB: Public Sub CheckChallenge
      overload: Global.ChallengePlayerController.CheckChallenge*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.ConfirmMatch(System.String)
      commentId: M:Global.ChallengePlayerController.ConfirmMatch(System.String)
      language: CSharp
      name:
        CSharp: ConfirmMatch(String)
        VB: ConfirmMatch(String)
      nameWithType:
        CSharp: ChallengePlayerController.ConfirmMatch(String)
        VB: ChallengePlayerController.ConfirmMatch(String)
      qualifiedName:
        CSharp: ChallengePlayerController.ConfirmMatch(System.String)
        VB: ChallengePlayerController.ConfirmMatch(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ConfirmMatch
        path: ''
        startLine: 6047
      syntax:
        content:
          CSharp: public void ConfirmMatch(string message)
          VB: Public Sub ConfirmMatch(message As String)
        parameters:
        - id: message
          type: System.String
      overload: Global.ChallengePlayerController.ConfirmMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.GenerateRandomMatchId
      commentId: M:Global.ChallengePlayerController.GenerateRandomMatchId
      language: CSharp
      name:
        CSharp: GenerateRandomMatchId()
        VB: GenerateRandomMatchId()
      nameWithType:
        CSharp: ChallengePlayerController.GenerateRandomMatchId()
        VB: ChallengePlayerController.GenerateRandomMatchId()
      qualifiedName:
        CSharp: ChallengePlayerController.GenerateRandomMatchId()
        VB: ChallengePlayerController.GenerateRandomMatchId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GenerateRandomMatchId
        path: ''
        startLine: 6120
      syntax:
        content:
          CSharp: public string GenerateRandomMatchId()
          VB: Public Function GenerateRandomMatchId As String
        return:
          type: System.String
      overload: Global.ChallengePlayerController.GenerateRandomMatchId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.SetMatchIdAndChallengeInPlayerData(System.String)
      commentId: M:Global.ChallengePlayerController.SetMatchIdAndChallengeInPlayerData(System.String)
      language: CSharp
      name:
        CSharp: SetMatchIdAndChallengeInPlayerData(String)
        VB: SetMatchIdAndChallengeInPlayerData(String)
      nameWithType:
        CSharp: ChallengePlayerController.SetMatchIdAndChallengeInPlayerData(String)
        VB: ChallengePlayerController.SetMatchIdAndChallengeInPlayerData(String)
      qualifiedName:
        CSharp: ChallengePlayerController.SetMatchIdAndChallengeInPlayerData(System.String)
        VB: ChallengePlayerController.SetMatchIdAndChallengeInPlayerData(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetMatchIdAndChallengeInPlayerData
        path: ''
        startLine: 6127
      syntax:
        content:
          CSharp: public void SetMatchIdAndChallengeInPlayerData(string popupMessage)
          VB: Public Sub SetMatchIdAndChallengeInPlayerData(popupMessage As String)
        parameters:
        - id: popupMessage
          type: System.String
      overload: Global.ChallengePlayerController.SetMatchIdAndChallengeInPlayerData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.BackButtonLogic(System.Boolean)
      commentId: M:Global.ChallengePlayerController.BackButtonLogic(System.Boolean)
      language: CSharp
      name:
        CSharp: BackButtonLogic(Boolean)
        VB: BackButtonLogic(Boolean)
      nameWithType:
        CSharp: ChallengePlayerController.BackButtonLogic(Boolean)
        VB: ChallengePlayerController.BackButtonLogic(Boolean)
      qualifiedName:
        CSharp: ChallengePlayerController.BackButtonLogic(System.Boolean)
        VB: ChallengePlayerController.BackButtonLogic(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BackButtonLogic
        path: ''
        startLine: 6145
      syntax:
        content:
          CSharp: public void BackButtonLogic(bool waitCancel = true)
          VB: Public Sub BackButtonLogic(waitCancel As Boolean = True)
        parameters:
        - id: waitCancel
          type: System.Boolean
      overload: Global.ChallengePlayerController.BackButtonLogic*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.TimingAcceptChallenge(System.String,System.Collections.Generic.Dictionary{PopupManager.ButtonType,Action},System.Boolean)
      commentId: M:Global.ChallengePlayerController.TimingAcceptChallenge(System.String,System.Collections.Generic.Dictionary{PopupManager.ButtonType,Action},System.Boolean)
      language: CSharp
      name:
        CSharp: TimingAcceptChallenge(String, Dictionary<PopupManager.ButtonType, Action>, Boolean)
        VB: TimingAcceptChallenge(String, Dictionary(Of PopupManager.ButtonType, Action), Boolean)
      nameWithType:
        CSharp: ChallengePlayerController.TimingAcceptChallenge(String, Dictionary<PopupManager.ButtonType, Action>, Boolean)
        VB: ChallengePlayerController.TimingAcceptChallenge(String, Dictionary(Of PopupManager.ButtonType, Action), Boolean)
      qualifiedName:
        CSharp: ChallengePlayerController.TimingAcceptChallenge(System.String, System.Collections.Generic.Dictionary<PopupManager.ButtonType, Action>, System.Boolean)
        VB: ChallengePlayerController.TimingAcceptChallenge(System.String, System.Collections.Generic.Dictionary(Of PopupManager.ButtonType, Action), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TimingAcceptChallenge
        path: ''
        startLine: 6162
      syntax:
        content:
          CSharp: public IEnumerator TimingAcceptChallenge(string mainMessage, Dictionary<PopupManager.ButtonType, Action> mainButtons, bool isRecievingChallenge)
          VB: Public Function TimingAcceptChallenge(mainMessage As String, mainButtons As Dictionary(Of PopupManager.ButtonType, Action), isRecievingChallenge As Boolean) As IEnumerator
        parameters:
        - id: mainMessage
          type: System.String
        - id: mainButtons
          type: System.Collections.Generic.Dictionary{PopupManager.ButtonType,Action}
        - id: isRecievingChallenge
          type: System.Boolean
        return:
          type: System.Collections.IEnumerator
      overload: Global.ChallengePlayerController.TimingAcceptChallenge*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.bothConfirmed
      commentId: F:Global.ChallengePlayerController.bothConfirmed
      language: CSharp
      name:
        CSharp: bothConfirmed
        VB: bothConfirmed
      nameWithType:
        CSharp: ChallengePlayerController.bothConfirmed
        VB: ChallengePlayerController.bothConfirmed
      qualifiedName:
        CSharp: ChallengePlayerController.bothConfirmed
        VB: ChallengePlayerController.bothConfirmed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bothConfirmed
        path: ''
        startLine: 6207
      syntax:
        content:
          CSharp: public bool bothConfirmed
          VB: Public bothConfirmed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.checkCount
      commentId: F:Global.ChallengePlayerController.checkCount
      language: CSharp
      name:
        CSharp: checkCount
        VB: checkCount
      nameWithType:
        CSharp: ChallengePlayerController.checkCount
        VB: ChallengePlayerController.checkCount
      qualifiedName:
        CSharp: ChallengePlayerController.checkCount
        VB: ChallengePlayerController.checkCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: checkCount
        path: ''
        startLine: 6208
      syntax:
        content:
          CSharp: public int checkCount
          VB: Public checkCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.WaitforOpponentToConfirm(GetMatchResult)
      commentId: M:Global.ChallengePlayerController.WaitforOpponentToConfirm(GetMatchResult)
      language: CSharp
      name:
        CSharp: WaitforOpponentToConfirm(GetMatchResult)
        VB: WaitforOpponentToConfirm(GetMatchResult)
      nameWithType:
        CSharp: ChallengePlayerController.WaitforOpponentToConfirm(GetMatchResult)
        VB: ChallengePlayerController.WaitforOpponentToConfirm(GetMatchResult)
      qualifiedName:
        CSharp: ChallengePlayerController.WaitforOpponentToConfirm(GetMatchResult)
        VB: ChallengePlayerController.WaitforOpponentToConfirm(GetMatchResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: WaitforOpponentToConfirm
        path: ''
        startLine: 6209
      syntax:
        content:
          CSharp: public IEnumerator WaitforOpponentToConfirm(GetMatchResult matchData)
          VB: Public Function WaitforOpponentToConfirm(matchData As GetMatchResult) As IEnumerator
        parameters:
        - id: matchData
          type: Global.GetMatchResult
        return:
          type: System.Collections.IEnumerator
      overload: Global.ChallengePlayerController.WaitforOpponentToConfirm*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.MatchCanceledWait(System.Boolean)
      commentId: M:Global.ChallengePlayerController.MatchCanceledWait(System.Boolean)
      language: CSharp
      name:
        CSharp: MatchCanceledWait(Boolean)
        VB: MatchCanceledWait(Boolean)
      nameWithType:
        CSharp: ChallengePlayerController.MatchCanceledWait(Boolean)
        VB: ChallengePlayerController.MatchCanceledWait(Boolean)
      qualifiedName:
        CSharp: ChallengePlayerController.MatchCanceledWait(System.Boolean)
        VB: ChallengePlayerController.MatchCanceledWait(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MatchCanceledWait
        path: ''
        startLine: 6258
      syntax:
        content:
          CSharp: public IEnumerator MatchCanceledWait(bool waitPetitionTime = true)
          VB: Public Function MatchCanceledWait(waitPetitionTime As Boolean = True) As IEnumerator
        parameters:
        - id: waitPetitionTime
          type: System.Boolean
        return:
          type: System.Collections.IEnumerator
      overload: Global.ChallengePlayerController.MatchCanceledWait*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.GetMatchId(System.String)
      commentId: M:Global.ChallengePlayerController.GetMatchId(System.String)
      language: CSharp
      name:
        CSharp: GetMatchId(String)
        VB: GetMatchId(String)
      nameWithType:
        CSharp: ChallengePlayerController.GetMatchId(String)
        VB: ChallengePlayerController.GetMatchId(String)
      qualifiedName:
        CSharp: ChallengePlayerController.GetMatchId(System.String)
        VB: ChallengePlayerController.GetMatchId(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetMatchId
        path: ''
        startLine: 6274
      syntax:
        content:
          CSharp: public string GetMatchId(string randomNumber = "")
          VB: Public Function GetMatchId(randomNumber As String = "") As String
        parameters:
        - id: randomNumber
          type: System.String
        return:
          type: System.String
      overload: Global.ChallengePlayerController.GetMatchId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.GetMatchResultPayload
      commentId: M:Global.ChallengePlayerController.GetMatchResultPayload
      language: CSharp
      name:
        CSharp: GetMatchResultPayload()
        VB: GetMatchResultPayload()
      nameWithType:
        CSharp: ChallengePlayerController.GetMatchResultPayload()
        VB: ChallengePlayerController.GetMatchResultPayload()
      qualifiedName:
        CSharp: ChallengePlayerController.GetMatchResultPayload()
        VB: ChallengePlayerController.GetMatchResultPayload()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetMatchResultPayload
        path: ''
        startLine: 6284
      syntax:
        content:
          CSharp: public GetMatchResult GetMatchResultPayload()
          VB: Public Function GetMatchResultPayload As GetMatchResult
        return:
          type: Global.GetMatchResult
      overload: Global.ChallengePlayerController.GetMatchResultPayload*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.SetOtherPlayerInfo(System.String,System.String)
      commentId: M:Global.ChallengePlayerController.SetOtherPlayerInfo(System.String,System.String)
      language: CSharp
      name:
        CSharp: SetOtherPlayerInfo(String, String)
        VB: SetOtherPlayerInfo(String, String)
      nameWithType:
        CSharp: ChallengePlayerController.SetOtherPlayerInfo(String, String)
        VB: ChallengePlayerController.SetOtherPlayerInfo(String, String)
      qualifiedName:
        CSharp: ChallengePlayerController.SetOtherPlayerInfo(System.String, System.String)
        VB: ChallengePlayerController.SetOtherPlayerInfo(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetOtherPlayerInfo
        path: ''
        startLine: 6312
      syntax:
        content:
          CSharp: public void SetOtherPlayerInfo(string otherPlayerId, string otherPlayerName)
          VB: Public Sub SetOtherPlayerInfo(otherPlayerId As String, otherPlayerName As String)
        parameters:
        - id: otherPlayerId
          type: System.String
        - id: otherPlayerName
          type: System.String
      overload: Global.ChallengePlayerController.SetOtherPlayerInfo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.ResetAlreadyHasChallenge
      commentId: M:Global.ChallengePlayerController.ResetAlreadyHasChallenge
      language: CSharp
      name:
        CSharp: ResetAlreadyHasChallenge()
        VB: ResetAlreadyHasChallenge()
      nameWithType:
        CSharp: ChallengePlayerController.ResetAlreadyHasChallenge()
        VB: ChallengePlayerController.ResetAlreadyHasChallenge()
      qualifiedName:
        CSharp: ChallengePlayerController.ResetAlreadyHasChallenge()
        VB: ChallengePlayerController.ResetAlreadyHasChallenge()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ResetAlreadyHasChallenge
        path: ''
        startLine: 6318
      syntax:
        content:
          CSharp: public void ResetAlreadyHasChallenge()
          VB: Public Sub ResetAlreadyHasChallenge
      overload: Global.ChallengePlayerController.ResetAlreadyHasChallenge*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChallengePlayerController.MatchCanceledByChallenged(System.Boolean)
      commentId: M:Global.ChallengePlayerController.MatchCanceledByChallenged(System.Boolean)
      language: CSharp
      name:
        CSharp: MatchCanceledByChallenged(Boolean)
        VB: MatchCanceledByChallenged(Boolean)
      nameWithType:
        CSharp: ChallengePlayerController.MatchCanceledByChallenged(Boolean)
        VB: ChallengePlayerController.MatchCanceledByChallenged(Boolean)
      qualifiedName:
        CSharp: ChallengePlayerController.MatchCanceledByChallenged(System.Boolean)
        VB: ChallengePlayerController.MatchCanceledByChallenged(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MatchCanceledByChallenged
        path: ''
        startLine: 6324
      syntax:
        content:
          CSharp: public void MatchCanceledByChallenged(bool showOtherPlayerDeclinePopup)
          VB: Public Sub MatchCanceledByChallenged(showOtherPlayerDeclinePopup As Boolean)
        parameters:
        - id: showOtherPlayerDeclinePopup
          type: System.Boolean
      overload: Global.ChallengePlayerController.MatchCanceledByChallenged*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MatchConfirmedDto
    commentId: T:Global.MatchConfirmedDto
    language: CSharp
    name:
      CSharp: MatchConfirmedDto
      VB: MatchConfirmedDto
    nameWithType:
      CSharp: MatchConfirmedDto
      VB: MatchConfirmedDto
    qualifiedName:
      CSharp: MatchConfirmedDto
      VB: MatchConfirmedDto
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MatchConfirmedDto
      path: ''
      startLine: 6363
    syntax:
      content:
        CSharp: public class MatchConfirmedDto
        VB: Public Class MatchConfirmedDto
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MatchConfirmedDto.matchSpawnPoint
      commentId: F:Global.MatchConfirmedDto.matchSpawnPoint
      language: CSharp
      name:
        CSharp: matchSpawnPoint
        VB: matchSpawnPoint
      nameWithType:
        CSharp: MatchConfirmedDto.matchSpawnPoint
        VB: MatchConfirmedDto.matchSpawnPoint
      qualifiedName:
        CSharp: MatchConfirmedDto.matchSpawnPoint
        VB: MatchConfirmedDto.matchSpawnPoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: matchSpawnPoint
        path: ''
        startLine: 6365
      syntax:
        content:
          CSharp: public int matchSpawnPoint
          VB: Public matchSpawnPoint As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.HeadMessages
    commentId: T:Global.HeadMessages
    language: CSharp
    name:
      CSharp: HeadMessages
      VB: HeadMessages
    nameWithType:
      CSharp: HeadMessages
      VB: HeadMessages
    qualifiedName:
      CSharp: HeadMessages
      VB: HeadMessages
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HeadMessages
      path: ''
      startLine: 6373
    syntax:
      content:
        CSharp: 'public class HeadMessages : MonoBehaviour'
        VB: >-
          Public Class HeadMessages

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.HeadMessages.ShowMessage(System.String)
      commentId: M:Global.HeadMessages.ShowMessage(System.String)
      language: CSharp
      name:
        CSharp: ShowMessage(String)
        VB: ShowMessage(String)
      nameWithType:
        CSharp: HeadMessages.ShowMessage(String)
        VB: HeadMessages.ShowMessage(String)
      qualifiedName:
        CSharp: HeadMessages.ShowMessage(System.String)
        VB: HeadMessages.ShowMessage(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShowMessage
        path: ''
        startLine: 6376
      syntax:
        content:
          CSharp: public void ShowMessage(string msg)
          VB: Public Sub ShowMessage(msg As String)
        parameters:
        - id: msg
          type: System.String
      overload: Global.HeadMessages.ShowMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.LookPlayer
    commentId: T:Global.LookPlayer
    language: CSharp
    name:
      CSharp: LookPlayer
      VB: LookPlayer
    nameWithType:
      CSharp: LookPlayer
      VB: LookPlayer
    qualifiedName:
      CSharp: LookPlayer
      VB: LookPlayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LookPlayer
      path: ''
      startLine: 6394
    syntax:
      content:
        CSharp: 'public class LookPlayer : MonoBehaviour'
        VB: >-
          Public Class LookPlayer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.MessageView
    commentId: T:Global.MessageView
    language: CSharp
    name:
      CSharp: MessageView
      VB: MessageView
    nameWithType:
      CSharp: MessageView
      VB: MessageView
    qualifiedName:
      CSharp: MessageView
      VB: MessageView
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MessageView
      path: ''
      startLine: 6449
    syntax:
      content:
        CSharp: 'public class MessageView : MonoBehaviour'
        VB: >-
          Public Class MessageView

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MessageView.possibleIcons
      commentId: F:Global.MessageView.possibleIcons
      language: CSharp
      name:
        CSharp: possibleIcons
        VB: possibleIcons
      nameWithType:
        CSharp: MessageView.possibleIcons
        VB: MessageView.possibleIcons
      qualifiedName:
        CSharp: MessageView.possibleIcons
        VB: MessageView.possibleIcons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: possibleIcons
        path: ''
        startLine: 6454
      syntax:
        content:
          CSharp: public List<Sprite> possibleIcons
          VB: Public possibleIcons As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MessageView.ShowMessage(System.String,System.Int32,System.Single)
      commentId: M:Global.MessageView.ShowMessage(System.String,System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: ShowMessage(String, Int32, Single)
        VB: ShowMessage(String, Int32, Single)
      nameWithType:
        CSharp: MessageView.ShowMessage(String, Int32, Single)
        VB: MessageView.ShowMessage(String, Int32, Single)
      qualifiedName:
        CSharp: MessageView.ShowMessage(System.String, System.Int32, System.Single)
        VB: MessageView.ShowMessage(System.String, System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShowMessage
        path: ''
        startLine: 6458
      syntax:
        content:
          CSharp: public void ShowMessage(string message, int icon = -1, float duration = 2F)
          VB: Public Sub ShowMessage(message As String, icon As Integer = -1, duration As Single = 2F)
        parameters:
        - id: message
          type: System.String
        - id: icon
          type: System.Int32
        - id: duration
          type: System.Single
      overload: Global.MessageView.ShowMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MessageView.Message
    commentId: T:Global.MessageView.Message
    language: CSharp
    name:
      CSharp: MessageView.Message
      VB: MessageView.Message
    nameWithType:
      CSharp: MessageView.Message
      VB: MessageView.Message
    qualifiedName:
      CSharp: MessageView.Message
      VB: MessageView.Message
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Message
      path: ''
      startLine: 6492
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Message
        VB: >-
          <Serializable>

          Public Class Message
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MessageView.Message.text
      commentId: F:Global.MessageView.Message.text
      language: CSharp
      name:
        CSharp: text
        VB: text
      nameWithType:
        CSharp: MessageView.Message.text
        VB: MessageView.Message.text
      qualifiedName:
        CSharp: MessageView.Message.text
        VB: MessageView.Message.text
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: text
        path: ''
        startLine: 6495
      syntax:
        content:
          CSharp: public string text
          VB: Public text As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MessageView.Message.icon
      commentId: F:Global.MessageView.Message.icon
      language: CSharp
      name:
        CSharp: icon
        VB: icon
      nameWithType:
        CSharp: MessageView.Message.icon
        VB: MessageView.Message.icon
      qualifiedName:
        CSharp: MessageView.Message.icon
        VB: MessageView.Message.icon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: icon
        path: ''
        startLine: 6496
      syntax:
        content:
          CSharp: public int icon
          VB: Public icon As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MessageView.Message.time
      commentId: F:Global.MessageView.Message.time
      language: CSharp
      name:
        CSharp: time
        VB: time
      nameWithType:
        CSharp: MessageView.Message.time
        VB: MessageView.Message.time
      qualifiedName:
        CSharp: MessageView.Message.time
        VB: MessageView.Message.time
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: time
        path: ''
        startLine: 6497
      syntax:
        content:
          CSharp: public float time
          VB: Public time As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PutNightModeForVfx
    commentId: T:Global.PutNightModeForVfx
    language: CSharp
    name:
      CSharp: PutNightModeForVfx
      VB: PutNightModeForVfx
    nameWithType:
      CSharp: PutNightModeForVfx
      VB: PutNightModeForVfx
    qualifiedName:
      CSharp: PutNightModeForVfx
      VB: PutNightModeForVfx
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PutNightModeForVfx
      path: ''
      startLine: 6506
    syntax:
      content:
        CSharp: 'public class PutNightModeForVfx : MonoBehaviour'
        VB: >-
          Public Class PutNightModeForVfx

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PutNightModeForVfx.targetHour
      commentId: F:Global.PutNightModeForVfx.targetHour
      language: CSharp
      name:
        CSharp: targetHour
        VB: targetHour
      nameWithType:
        CSharp: PutNightModeForVfx.targetHour
        VB: PutNightModeForVfx.targetHour
      qualifiedName:
        CSharp: PutNightModeForVfx.targetHour
        VB: PutNightModeForVfx.targetHour
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: targetHour
        path: ''
        startLine: 6508
      syntax:
        content:
          CSharp: public float targetHour
          VB: Public targetHour As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ShowHideDebug
    commentId: T:Global.ShowHideDebug
    language: CSharp
    name:
      CSharp: ShowHideDebug
      VB: ShowHideDebug
    nameWithType:
      CSharp: ShowHideDebug
      VB: ShowHideDebug
    qualifiedName:
      CSharp: ShowHideDebug
      VB: ShowHideDebug
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShowHideDebug
      path: ''
      startLine: 6542
    syntax:
      content:
        CSharp: 'public class ShowHideDebug : MonoBehaviour'
        VB: >-
          Public Class ShowHideDebug

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.SkyChanger
    commentId: T:Global.SkyChanger
    language: CSharp
    name:
      CSharp: SkyChanger
      VB: SkyChanger
    nameWithType:
      CSharp: SkyChanger
      VB: SkyChanger
    qualifiedName:
      CSharp: SkyChanger
      VB: SkyChanger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SkyChanger
      path: ''
      startLine: 6563
    syntax:
      content:
        CSharp: 'public class SkyChanger : MonoBehaviour'
        VB: >-
          Public Class SkyChanger

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SkyChanger.TestChangeSky
      commentId: M:Global.SkyChanger.TestChangeSky
      language: CSharp
      name:
        CSharp: TestChangeSky()
        VB: TestChangeSky()
      nameWithType:
        CSharp: SkyChanger.TestChangeSky()
        VB: SkyChanger.TestChangeSky()
      qualifiedName:
        CSharp: SkyChanger.TestChangeSky()
        VB: SkyChanger.TestChangeSky()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TestChangeSky
        path: ''
        startLine: 6574
      syntax:
        content:
          CSharp: public void TestChangeSky()
          VB: Public Sub TestChangeSky
      overload: Global.SkyChanger.TestChangeSky*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SkyChanger.ChangeSky(System.Single)
      commentId: M:Global.SkyChanger.ChangeSky(System.Single)
      language: CSharp
      name:
        CSharp: ChangeSky(Single)
        VB: ChangeSky(Single)
      nameWithType:
        CSharp: SkyChanger.ChangeSky(Single)
        VB: SkyChanger.ChangeSky(Single)
      qualifiedName:
        CSharp: SkyChanger.ChangeSky(System.Single)
        VB: SkyChanger.ChangeSky(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeSky
        path: ''
        startLine: 6580
      syntax:
        content:
          CSharp: public void ChangeSky(float currentTime)
          VB: Public Sub ChangeSky(currentTime As Single)
        parameters:
        - id: currentTime
          type: System.Single
      overload: Global.SkyChanger.ChangeSky*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.StopMovementWhenEnable
    commentId: T:Global.StopMovementWhenEnable
    language: CSharp
    name:
      CSharp: StopMovementWhenEnable
      VB: StopMovementWhenEnable
    nameWithType:
      CSharp: StopMovementWhenEnable
      VB: StopMovementWhenEnable
    qualifiedName:
      CSharp: StopMovementWhenEnable
      VB: StopMovementWhenEnable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: StopMovementWhenEnable
      path: ''
      startLine: 6607
    syntax:
      content:
        CSharp: 'public class StopMovementWhenEnable : MonoBehaviour'
        VB: >-
          Public Class StopMovementWhenEnable

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.StopMovementWhenEnable.DisableMovement(System.Boolean)
      commentId: M:Global.StopMovementWhenEnable.DisableMovement(System.Boolean)
      language: CSharp
      name:
        CSharp: DisableMovement(Boolean)
        VB: DisableMovement(Boolean)
      nameWithType:
        CSharp: StopMovementWhenEnable.DisableMovement(Boolean)
        VB: StopMovementWhenEnable.DisableMovement(Boolean)
      qualifiedName:
        CSharp: StopMovementWhenEnable.DisableMovement(System.Boolean)
        VB: StopMovementWhenEnable.DisableMovement(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DisableMovement
        path: ''
        startLine: 6620
      syntax:
        content:
          CSharp: public void DisableMovement(bool newState)
          VB: Public Sub DisableMovement(newState As Boolean)
        parameters:
        - id: newState
          type: System.Boolean
      overload: Global.StopMovementWhenEnable.DisableMovement*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TMPChangeColor
    commentId: T:Global.TMPChangeColor
    language: CSharp
    name:
      CSharp: TMPChangeColor
      VB: TMPChangeColor
    nameWithType:
      CSharp: TMPChangeColor
      VB: TMPChangeColor
    qualifiedName:
      CSharp: TMPChangeColor
      VB: TMPChangeColor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TMPChangeColor
      path: ''
      startLine: 6632
    syntax:
      content:
        CSharp: 'public class TMPChangeColor : MonoBehaviour'
        VB: >-
          Public Class TMPChangeColor

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TMPChangeColor.currentHighlight
      commentId: F:Global.TMPChangeColor.currentHighlight
      language: CSharp
      name:
        CSharp: currentHighlight
        VB: currentHighlight
      nameWithType:
        CSharp: TMPChangeColor.currentHighlight
        VB: TMPChangeColor.currentHighlight
      qualifiedName:
        CSharp: TMPChangeColor.currentHighlight
        VB: TMPChangeColor.currentHighlight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentHighlight
        path: ''
        startLine: 6634
      syntax:
        content:
          CSharp: public Color currentHighlight
          VB: Public currentHighlight As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TMPChangeColor.highlight
      commentId: F:Global.TMPChangeColor.highlight
      language: CSharp
      name:
        CSharp: highlight
        VB: highlight
      nameWithType:
        CSharp: TMPChangeColor.highlight
        VB: TMPChangeColor.highlight
      qualifiedName:
        CSharp: TMPChangeColor.highlight
        VB: TMPChangeColor.highlight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: highlight
        path: ''
        startLine: 6634
      syntax:
        content:
          CSharp: public Color highlight
          VB: Public highlight As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TMPChangeColor.currentNormal
      commentId: F:Global.TMPChangeColor.currentNormal
      language: CSharp
      name:
        CSharp: currentNormal
        VB: currentNormal
      nameWithType:
        CSharp: TMPChangeColor.currentNormal
        VB: TMPChangeColor.currentNormal
      qualifiedName:
        CSharp: TMPChangeColor.currentNormal
        VB: TMPChangeColor.currentNormal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentNormal
        path: ''
        startLine: 6634
      syntax:
        content:
          CSharp: public Color currentNormal
          VB: Public currentNormal As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TMPChangeColor.normal
      commentId: F:Global.TMPChangeColor.normal
      language: CSharp
      name:
        CSharp: normal
        VB: normal
      nameWithType:
        CSharp: TMPChangeColor.normal
        VB: TMPChangeColor.normal
      qualifiedName:
        CSharp: TMPChangeColor.normal
        VB: TMPChangeColor.normal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: normal
        path: ''
        startLine: 6634
      syntax:
        content:
          CSharp: public Color normal
          VB: Public normal As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TMPChangeColor.ChangeColor(System.Boolean)
      commentId: M:Global.TMPChangeColor.ChangeColor(System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeColor(Boolean)
        VB: ChangeColor(Boolean)
      nameWithType:
        CSharp: TMPChangeColor.ChangeColor(Boolean)
        VB: TMPChangeColor.ChangeColor(Boolean)
      qualifiedName:
        CSharp: TMPChangeColor.ChangeColor(System.Boolean)
        VB: TMPChangeColor.ChangeColor(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeColor
        path: ''
        startLine: 6635
      syntax:
        content:
          CSharp: public void ChangeColor(bool black)
          VB: Public Sub ChangeColor(black As Boolean)
        parameters:
        - id: black
          type: System.Boolean
      overload: Global.TMPChangeColor.ChangeColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.UIDisolver
    commentId: T:Global.UIDisolver
    language: CSharp
    name:
      CSharp: UIDisolver
      VB: UIDisolver
    nameWithType:
      CSharp: UIDisolver
      VB: UIDisolver
    qualifiedName:
      CSharp: UIDisolver
      VB: UIDisolver
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UIDisolver
      path: ''
      startLine: 6646
    syntax:
      content:
        CSharp: 'public class UIDisolver : MonoBehaviour'
        VB: >-
          Public Class UIDisolver

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.UIDisolver.ToggleMaximumValius
      commentId: M:Global.UIDisolver.ToggleMaximumValius
      language: CSharp
      name:
        CSharp: ToggleMaximumValius()
        VB: ToggleMaximumValius()
      nameWithType:
        CSharp: UIDisolver.ToggleMaximumValius()
        VB: UIDisolver.ToggleMaximumValius()
      qualifiedName:
        CSharp: UIDisolver.ToggleMaximumValius()
        VB: UIDisolver.ToggleMaximumValius()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ToggleMaximumValius
        path: ''
        startLine: 6672
      syntax:
        content:
          CSharp: public void ToggleMaximumValius()
          VB: Public Sub ToggleMaximumValius
      overload: Global.UIDisolver.ToggleMaximumValius*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.UIDisolver.SetTargetValue(System.Single)
      commentId: M:Global.UIDisolver.SetTargetValue(System.Single)
      language: CSharp
      name:
        CSharp: SetTargetValue(Single)
        VB: SetTargetValue(Single)
      nameWithType:
        CSharp: UIDisolver.SetTargetValue(Single)
        VB: UIDisolver.SetTargetValue(Single)
      qualifiedName:
        CSharp: UIDisolver.SetTargetValue(System.Single)
        VB: UIDisolver.SetTargetValue(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetTargetValue
        path: ''
        startLine: 6679
      syntax:
        content:
          CSharp: public void SetTargetValue(float value)
          VB: Public Sub SetTargetValue(value As Single)
        parameters:
        - id: value
          type: System.Single
      overload: Global.UIDisolver.SetTargetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.VersusPanelController
    commentId: T:Global.VersusPanelController
    language: CSharp
    name:
      CSharp: VersusPanelController
      VB: VersusPanelController
    nameWithType:
      CSharp: VersusPanelController
      VB: VersusPanelController
    qualifiedName:
      CSharp: VersusPanelController
      VB: VersusPanelController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: VersusPanelController
      path: ''
      startLine: 6695
    syntax:
      content:
        CSharp: 'public class VersusPanelController : MonoBehaviour'
        VB: >-
          Public Class VersusPanelController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.VersusPanelController.Show
      commentId: M:Global.VersusPanelController.Show
      language: CSharp
      name:
        CSharp: Show()
        VB: Show()
      nameWithType:
        CSharp: VersusPanelController.Show()
        VB: VersusPanelController.Show()
      qualifiedName:
        CSharp: VersusPanelController.Show()
        VB: VersusPanelController.Show()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Show
        path: ''
        startLine: 6702
      syntax:
        content:
          CSharp: public void Show()
          VB: Public Sub Show
      overload: Global.VersusPanelController.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VersusPanelController.Init(System.Collections.Generic.List{Sprite},System.Collections.Generic.List{CharacterType},System.String,System.String)
      commentId: M:Global.VersusPanelController.Init(System.Collections.Generic.List{Sprite},System.Collections.Generic.List{CharacterType},System.String,System.String)
      language: CSharp
      name:
        CSharp: Init(List<Sprite>, List<CharacterType>, String, String)
        VB: Init(List(Of Sprite), List(Of CharacterType), String, String)
      nameWithType:
        CSharp: VersusPanelController.Init(List<Sprite>, List<CharacterType>, String, String)
        VB: VersusPanelController.Init(List(Of Sprite), List(Of CharacterType), String, String)
      qualifiedName:
        CSharp: VersusPanelController.Init(System.Collections.Generic.List<Sprite>, System.Collections.Generic.List<CharacterType>, System.String, System.String)
        VB: VersusPanelController.Init(System.Collections.Generic.List(Of Sprite), System.Collections.Generic.List(Of CharacterType), System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Init
        path: ''
        startLine: 6707
      syntax:
        content:
          CSharp: public void Init(List<Sprite> sprites, List<CharacterType> types, string playerName, string enemyName)
          VB: Public Sub Init(sprites As List(Of Sprite), types As List(Of CharacterType), playerName As String, enemyName As String)
        parameters:
        - id: sprites
          type: System.Collections.Generic.List{Sprite}
        - id: types
          type: System.Collections.Generic.List{CharacterType}
        - id: playerName
          type: System.String
        - id: enemyName
          type: System.String
      overload: Global.VersusPanelController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VersusPanelController.Hide
      commentId: M:Global.VersusPanelController.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: VersusPanelController.Hide()
        VB: VersusPanelController.Hide()
      qualifiedName:
        CSharp: VersusPanelController.Hide()
        VB: VersusPanelController.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Hide
        path: ''
        startLine: 6717
      syntax:
        content:
          CSharp: public void Hide()
          VB: Public Sub Hide
      overload: Global.VersusPanelController.Hide*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.VFXtester
    commentId: T:Global.VFXtester
    language: CSharp
    name:
      CSharp: VFXtester
      VB: VFXtester
    nameWithType:
      CSharp: VFXtester
      VB: VFXtester
    qualifiedName:
      CSharp: VFXtester
      VB: VFXtester
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: VFXtester
      path: ''
      startLine: 6730
    syntax:
      content:
        CSharp: 'public class VFXtester : MonoBehaviour'
        VB: >-
          Public Class VFXtester

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.VFXtester.vfxIndex
      commentId: F:Global.VFXtester.vfxIndex
      language: CSharp
      name:
        CSharp: vfxIndex
        VB: vfxIndex
      nameWithType:
        CSharp: VFXtester.vfxIndex
        VB: VFXtester.vfxIndex
      qualifiedName:
        CSharp: VFXtester.vfxIndex
        VB: VFXtester.vfxIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: vfxIndex
        path: ''
        startLine: 6732
      syntax:
        content:
          CSharp: public int vfxIndex
          VB: Public vfxIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VFXtester.targetIndex
      commentId: F:Global.VFXtester.targetIndex
      language: CSharp
      name:
        CSharp: targetIndex
        VB: targetIndex
      nameWithType:
        CSharp: VFXtester.targetIndex
        VB: VFXtester.targetIndex
      qualifiedName:
        CSharp: VFXtester.targetIndex
        VB: VFXtester.targetIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: targetIndex
        path: ''
        startLine: 6733
      syntax:
        content:
          CSharp: public VFXPositionEnum targetIndex
          VB: Public targetIndex As VFXPositionEnum
        return:
          type: Global.VFXPositionEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VFXtester.isLocalPlayer
      commentId: F:Global.VFXtester.isLocalPlayer
      language: CSharp
      name:
        CSharp: isLocalPlayer
        VB: isLocalPlayer
      nameWithType:
        CSharp: VFXtester.isLocalPlayer
        VB: VFXtester.isLocalPlayer
      qualifiedName:
        CSharp: VFXtester.isLocalPlayer
        VB: VFXtester.isLocalPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isLocalPlayer
        path: ''
        startLine: 6734
      syntax:
        content:
          CSharp: public bool isLocalPlayer
          VB: Public isLocalPlayer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VFXtester.turnsController
      commentId: F:Global.VFXtester.turnsController
      language: CSharp
      name:
        CSharp: turnsController
        VB: turnsController
      nameWithType:
        CSharp: VFXtester.turnsController
        VB: VFXtester.turnsController
      qualifiedName:
        CSharp: VFXtester.turnsController
        VB: VFXtester.turnsController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: turnsController
        path: ''
        startLine: 6735
      syntax:
        content:
          CSharp: public TurnsController turnsController
          VB: Public turnsController As TurnsController
        return:
          type: Global.TurnsController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VFXtester.vFXInstancer
      commentId: F:Global.VFXtester.vFXInstancer
      language: CSharp
      name:
        CSharp: vFXInstancer
        VB: vFXInstancer
      nameWithType:
        CSharp: VFXtester.vFXInstancer
        VB: VFXtester.vFXInstancer
      qualifiedName:
        CSharp: VFXtester.vFXInstancer
        VB: VFXtester.vFXInstancer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: vFXInstancer
        path: ''
        startLine: 6736
      syntax:
        content:
          CSharp: public VFXInstancer vFXInstancer
          VB: Public vFXInstancer As VFXInstancer
        return:
          type: Global.VFXInstancer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VFXtester.CallVFX
      commentId: M:Global.VFXtester.CallVFX
      language: CSharp
      name:
        CSharp: CallVFX()
        VB: CallVFX()
      nameWithType:
        CSharp: VFXtester.CallVFX()
        VB: VFXtester.CallVFX()
      qualifiedName:
        CSharp: VFXtester.CallVFX()
        VB: VFXtester.CallVFX()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CallVFX
        path: ''
        startLine: 6738
      syntax:
        content:
          CSharp: public void CallVFX()
          VB: Public Sub CallVFX
      overload: Global.VFXtester.CallVFX*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.Footsteps
    commentId: T:Global.Footsteps
    language: CSharp
    name:
      CSharp: Footsteps
      VB: Footsteps
    nameWithType:
      CSharp: Footsteps
      VB: Footsteps
    qualifiedName:
      CSharp: Footsteps
      VB: Footsteps
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Footsteps
      path: ''
      startLine: 6814
    summary: "\nSimple behavior that play music acording to the animation\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Footsteps : MonoBehaviour'
        VB: >-
          Public Class Footsteps

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.Footsteps.MyBank
      commentId: F:Global.Footsteps.MyBank
      language: CSharp
      name:
        CSharp: MyBank
        VB: MyBank
      nameWithType:
        CSharp: Footsteps.MyBank
        VB: Footsteps.MyBank
      qualifiedName:
        CSharp: Footsteps.MyBank
        VB: Footsteps.MyBank
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MyBank
        path: ''
        startLine: 6816
      syntax:
        content:
          CSharp: public AK.Wwise.Bank MyBank
          VB: Public MyBank As AK.Wwise.Bank
        return:
          type: Global.AK.Wwise.Bank
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Footsteps.MyEvent
      commentId: F:Global.Footsteps.MyEvent
      language: CSharp
      name:
        CSharp: MyEvent
        VB: MyEvent
      nameWithType:
        CSharp: Footsteps.MyEvent
        VB: Footsteps.MyEvent
      qualifiedName:
        CSharp: Footsteps.MyEvent
        VB: Footsteps.MyEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MyEvent
        path: ''
        startLine: 6817
      syntax:
        content:
          CSharp: public AK.Wwise.Event MyEvent
          VB: Public MyEvent As AK.Wwise.Event
        return:
          type: Global.AK.Wwise.Event
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Footsteps.Start
      commentId: M:Global.Footsteps.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Footsteps.Start()
        VB: Footsteps.Start()
      qualifiedName:
        CSharp: Footsteps.Start()
        VB: Footsteps.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Start
        path: ''
        startLine: 6830
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Global.Footsteps.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Footsteps.PlayFootSound
      commentId: M:Global.Footsteps.PlayFootSound
      language: CSharp
      name:
        CSharp: PlayFootSound()
        VB: PlayFootSound()
      nameWithType:
        CSharp: Footsteps.PlayFootSound()
        VB: Footsteps.PlayFootSound()
      qualifiedName:
        CSharp: Footsteps.PlayFootSound()
        VB: Footsteps.PlayFootSound()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PlayFootSound
        path: ''
        startLine: 6835
      syntax:
        content:
          CSharp: public void PlayFootSound()
          VB: Public Sub PlayFootSound
      overload: Global.Footsteps.PlayFootSound*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Footsteps.CurrentTerrain
      commentId: F:Global.Footsteps.CurrentTerrain
      language: CSharp
      name:
        CSharp: CurrentTerrain
        VB: CurrentTerrain
      nameWithType:
        CSharp: Footsteps.CurrentTerrain
        VB: Footsteps.CurrentTerrain
      qualifiedName:
        CSharp: Footsteps.CurrentTerrain
        VB: Footsteps.CurrentTerrain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CurrentTerrain
        path: ''
        startLine: 6841
      syntax:
        content:
          CSharp: public string CurrentTerrain
          VB: Public CurrentTerrain As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Footsteps.DetectSurface
      commentId: M:Global.Footsteps.DetectSurface
      language: CSharp
      name:
        CSharp: DetectSurface()
        VB: DetectSurface()
      nameWithType:
        CSharp: Footsteps.DetectSurface()
        VB: Footsteps.DetectSurface()
      qualifiedName:
        CSharp: Footsteps.DetectSurface()
        VB: Footsteps.DetectSurface()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DetectSurface
        path: ''
        startLine: 6843
      syntax:
        content:
          CSharp: public void DetectSurface()
          VB: Public Sub DetectSurface
      overload: Global.Footsteps.DetectSurface*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Footsteps.SetSwitchUsingNames(System.String)
      commentId: M:Global.Footsteps.SetSwitchUsingNames(System.String)
      language: CSharp
      name:
        CSharp: SetSwitchUsingNames(String)
        VB: SetSwitchUsingNames(String)
      nameWithType:
        CSharp: Footsteps.SetSwitchUsingNames(String)
        VB: Footsteps.SetSwitchUsingNames(String)
      qualifiedName:
        CSharp: Footsteps.SetSwitchUsingNames(System.String)
        VB: Footsteps.SetSwitchUsingNames(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetSwitchUsingNames
        path: ''
        startLine: 6901
      syntax:
        content:
          CSharp: public void SetSwitchUsingNames(string name)
          VB: Public Sub SetSwitchUsingNames(name As String)
        parameters:
        - id: name
          type: System.String
      overload: Global.Footsteps.SetSwitchUsingNames*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.IBracketsTournament
    commentId: T:Global.IBracketsTournament
    language: CSharp
    name:
      CSharp: IBracketsTournament
      VB: IBracketsTournament
    nameWithType:
      CSharp: IBracketsTournament
      VB: IBracketsTournament
    qualifiedName:
      CSharp: IBracketsTournament
      VB: IBracketsTournament
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: IBracketsTournament
      path: ''
      startLine: 7414
    syntax:
      content:
        CSharp: public interface IBracketsTournament
        VB: >-
          Public Interface IBracketsTournament

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Global.IBracketsTournament.ShowPanelBracketsView(System.Boolean)
      commentId: M:Global.IBracketsTournament.ShowPanelBracketsView(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowPanelBracketsView(Boolean)
        VB: ShowPanelBracketsView(Boolean)
      nameWithType:
        CSharp: IBracketsTournament.ShowPanelBracketsView(Boolean)
        VB: IBracketsTournament.ShowPanelBracketsView(Boolean)
      qualifiedName:
        CSharp: IBracketsTournament.ShowPanelBracketsView(System.Boolean)
        VB: IBracketsTournament.ShowPanelBracketsView(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShowPanelBracketsView
        path: ''
        startLine: 7416
      syntax:
        content:
          CSharp: void ShowPanelBracketsView(bool active)
          VB: Sub ShowPanelBracketsView(active As Boolean)
        parameters:
        - id: active
          type: System.Boolean
      overload: Global.IBracketsTournament.ShowPanelBracketsView*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.IBracketsTournament.SetAlreadyConnection(System.Boolean)
      commentId: M:Global.IBracketsTournament.SetAlreadyConnection(System.Boolean)
      language: CSharp
      name:
        CSharp: SetAlreadyConnection(Boolean)
        VB: SetAlreadyConnection(Boolean)
      nameWithType:
        CSharp: IBracketsTournament.SetAlreadyConnection(Boolean)
        VB: IBracketsTournament.SetAlreadyConnection(Boolean)
      qualifiedName:
        CSharp: IBracketsTournament.SetAlreadyConnection(System.Boolean)
        VB: IBracketsTournament.SetAlreadyConnection(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetAlreadyConnection
        path: ''
        startLine: 7417
      syntax:
        content:
          CSharp: void SetAlreadyConnection(bool state)
          VB: Sub SetAlreadyConnection(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Global.IBracketsTournament.SetAlreadyConnection*
      modifiers:
        CSharp: []
        VB: []
    - id: Global.IBracketsTournament.CheckTournamentInscription
      commentId: P:Global.IBracketsTournament.CheckTournamentInscription
      language: CSharp
      name:
        CSharp: CheckTournamentInscription
        VB: CheckTournamentInscription
      nameWithType:
        CSharp: IBracketsTournament.CheckTournamentInscription
        VB: IBracketsTournament.CheckTournamentInscription
      qualifiedName:
        CSharp: IBracketsTournament.CheckTournamentInscription
        VB: IBracketsTournament.CheckTournamentInscription
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckTournamentInscription
        path: ''
        startLine: 7418
      syntax:
        content:
          CSharp: CheckTournamentInscription CheckTournamentInscription { get; }
          VB: ReadOnly Property CheckTournamentInscription As CheckTournamentInscription
        parameters: []
        return:
          type: Global.CheckTournamentInscription
      overload: Global.IBracketsTournament.CheckTournamentInscription*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Global.IBracketsTournament.CheckTournamentStateController
      commentId: P:Global.IBracketsTournament.CheckTournamentStateController
      language: CSharp
      name:
        CSharp: CheckTournamentStateController
        VB: CheckTournamentStateController
      nameWithType:
        CSharp: IBracketsTournament.CheckTournamentStateController
        VB: IBracketsTournament.CheckTournamentStateController
      qualifiedName:
        CSharp: IBracketsTournament.CheckTournamentStateController
        VB: IBracketsTournament.CheckTournamentStateController
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckTournamentStateController
        path: ''
        startLine: 7419
      syntax:
        content:
          CSharp: CheckTournamentStateController CheckTournamentStateController { get; }
          VB: ReadOnly Property CheckTournamentStateController As CheckTournamentStateController
        parameters: []
        return:
          type: Global.CheckTournamentStateController
      overload: Global.IBracketsTournament.CheckTournamentStateController*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Global.IBracketsTournament.OnTournamentEnded
      commentId: P:Global.IBracketsTournament.OnTournamentEnded
      language: CSharp
      name:
        CSharp: OnTournamentEnded
        VB: OnTournamentEnded
      nameWithType:
        CSharp: IBracketsTournament.OnTournamentEnded
        VB: IBracketsTournament.OnTournamentEnded
      qualifiedName:
        CSharp: IBracketsTournament.OnTournamentEnded
        VB: IBracketsTournament.OnTournamentEnded
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTournamentEnded
        path: ''
        startLine: 7420
      syntax:
        content:
          CSharp: Action OnTournamentEnded { get; set; }
          VB: Property OnTournamentEnded As Action
        parameters: []
        return:
          type: Global.Action
      overload: Global.IBracketsTournament.OnTournamentEnded*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
  - id: Global.BracketsTournamentManager
    commentId: T:Global.BracketsTournamentManager
    language: CSharp
    name:
      CSharp: BracketsTournamentManager
      VB: BracketsTournamentManager
    nameWithType:
      CSharp: BracketsTournamentManager
      VB: BracketsTournamentManager
    qualifiedName:
      CSharp: BracketsTournamentManager
      VB: BracketsTournamentManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BracketsTournamentManager
      path: ''
      startLine: 7423
    syntax:
      content:
        CSharp: 'public class BracketsTournamentManager : MonoBehaviour, IBracketsTournament'
        VB: >-
          Public Class BracketsTournamentManager

              Inherits MonoBehaviour

              Implements IBracketsTournament
    inheritance:
    - System.Object
    implements:
    - Global.IBracketsTournament
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BracketsTournamentManager.tournamentBracketsShowController
      commentId: F:Global.BracketsTournamentManager.tournamentBracketsShowController
      language: CSharp
      name:
        CSharp: tournamentBracketsShowController
        VB: tournamentBracketsShowController
      nameWithType:
        CSharp: BracketsTournamentManager.tournamentBracketsShowController
        VB: BracketsTournamentManager.tournamentBracketsShowController
      qualifiedName:
        CSharp: BracketsTournamentManager.tournamentBracketsShowController
        VB: BracketsTournamentManager.tournamentBracketsShowController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tournamentBracketsShowController
        path: ''
        startLine: 7426
      syntax:
        content:
          CSharp: public TournamentBracketsShowController tournamentBracketsShowController
          VB: Public tournamentBracketsShowController As TournamentBracketsShowController
        return:
          type: Global.TournamentBracketsShowController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsTournamentManager.checkTournamentInscription
      commentId: F:Global.BracketsTournamentManager.checkTournamentInscription
      language: CSharp
      name:
        CSharp: checkTournamentInscription
        VB: checkTournamentInscription
      nameWithType:
        CSharp: BracketsTournamentManager.checkTournamentInscription
        VB: BracketsTournamentManager.checkTournamentInscription
      qualifiedName:
        CSharp: BracketsTournamentManager.checkTournamentInscription
        VB: BracketsTournamentManager.checkTournamentInscription
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: checkTournamentInscription
        path: ''
        startLine: 7429
      syntax:
        content:
          CSharp: public CheckTournamentInscription checkTournamentInscription
          VB: Public checkTournamentInscription As CheckTournamentInscription
        return:
          type: Global.CheckTournamentInscription
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsTournamentManager.CheckTournamentInscription
      commentId: P:Global.BracketsTournamentManager.CheckTournamentInscription
      language: CSharp
      name:
        CSharp: CheckTournamentInscription
        VB: CheckTournamentInscription
      nameWithType:
        CSharp: BracketsTournamentManager.CheckTournamentInscription
        VB: BracketsTournamentManager.CheckTournamentInscription
      qualifiedName:
        CSharp: BracketsTournamentManager.CheckTournamentInscription
        VB: BracketsTournamentManager.CheckTournamentInscription
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckTournamentInscription
        path: ''
        startLine: 7430
      syntax:
        content:
          CSharp: public CheckTournamentInscription CheckTournamentInscription { get; }
          VB: Public ReadOnly Property CheckTournamentInscription As CheckTournamentInscription
        parameters: []
        return:
          type: Global.CheckTournamentInscription
      overload: Global.BracketsTournamentManager.CheckTournamentInscription*
      implements:
      - Global.IBracketsTournament.CheckTournamentInscription
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.BracketsTournamentManager.checkTournamentStateController
      commentId: F:Global.BracketsTournamentManager.checkTournamentStateController
      language: CSharp
      name:
        CSharp: checkTournamentStateController
        VB: checkTournamentStateController
      nameWithType:
        CSharp: BracketsTournamentManager.checkTournamentStateController
        VB: BracketsTournamentManager.checkTournamentStateController
      qualifiedName:
        CSharp: BracketsTournamentManager.checkTournamentStateController
        VB: BracketsTournamentManager.checkTournamentStateController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: checkTournamentStateController
        path: ''
        startLine: 7433
      syntax:
        content:
          CSharp: public CheckTournamentStateController checkTournamentStateController
          VB: Public checkTournamentStateController As CheckTournamentStateController
        return:
          type: Global.CheckTournamentStateController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsTournamentManager.CheckTournamentStateController
      commentId: P:Global.BracketsTournamentManager.CheckTournamentStateController
      language: CSharp
      name:
        CSharp: CheckTournamentStateController
        VB: CheckTournamentStateController
      nameWithType:
        CSharp: BracketsTournamentManager.CheckTournamentStateController
        VB: BracketsTournamentManager.CheckTournamentStateController
      qualifiedName:
        CSharp: BracketsTournamentManager.CheckTournamentStateController
        VB: BracketsTournamentManager.CheckTournamentStateController
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckTournamentStateController
        path: ''
        startLine: 7434
      syntax:
        content:
          CSharp: public CheckTournamentStateController CheckTournamentStateController { get; }
          VB: Public ReadOnly Property CheckTournamentStateController As CheckTournamentStateController
        parameters: []
        return:
          type: Global.CheckTournamentStateController
      overload: Global.BracketsTournamentManager.CheckTournamentStateController*
      implements:
      - Global.IBracketsTournament.CheckTournamentStateController
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.BracketsTournamentManager.alreadyRecheckConnection
      commentId: F:Global.BracketsTournamentManager.alreadyRecheckConnection
      language: CSharp
      name:
        CSharp: alreadyRecheckConnection
        VB: alreadyRecheckConnection
      nameWithType:
        CSharp: BracketsTournamentManager.alreadyRecheckConnection
        VB: BracketsTournamentManager.alreadyRecheckConnection
      qualifiedName:
        CSharp: BracketsTournamentManager.alreadyRecheckConnection
        VB: BracketsTournamentManager.alreadyRecheckConnection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alreadyRecheckConnection
        path: ''
        startLine: 7436
      syntax:
        content:
          CSharp: public bool alreadyRecheckConnection
          VB: Public alreadyRecheckConnection As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsTournamentManager.currentStage
      commentId: F:Global.BracketsTournamentManager.currentStage
      language: CSharp
      name:
        CSharp: currentStage
        VB: currentStage
      nameWithType:
        CSharp: BracketsTournamentManager.currentStage
        VB: BracketsTournamentManager.currentStage
      qualifiedName:
        CSharp: BracketsTournamentManager.currentStage
        VB: BracketsTournamentManager.currentStage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentStage
        path: ''
        startLine: 7437
      syntax:
        content:
          CSharp: public int currentStage
          VB: Public currentStage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsTournamentManager.onTournamentEnded
      commentId: F:Global.BracketsTournamentManager.onTournamentEnded
      language: CSharp
      name:
        CSharp: onTournamentEnded
        VB: onTournamentEnded
      nameWithType:
        CSharp: BracketsTournamentManager.onTournamentEnded
        VB: BracketsTournamentManager.onTournamentEnded
      qualifiedName:
        CSharp: BracketsTournamentManager.onTournamentEnded
        VB: BracketsTournamentManager.onTournamentEnded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: onTournamentEnded
        path: ''
        startLine: 7439
      syntax:
        content:
          CSharp: public Action onTournamentEnded
          VB: Public onTournamentEnded As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsTournamentManager.OnTournamentEnded
      commentId: P:Global.BracketsTournamentManager.OnTournamentEnded
      language: CSharp
      name:
        CSharp: OnTournamentEnded
        VB: OnTournamentEnded
      nameWithType:
        CSharp: BracketsTournamentManager.OnTournamentEnded
        VB: BracketsTournamentManager.OnTournamentEnded
      qualifiedName:
        CSharp: BracketsTournamentManager.OnTournamentEnded
        VB: BracketsTournamentManager.OnTournamentEnded
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTournamentEnded
        path: ''
        startLine: 7440
      syntax:
        content:
          CSharp: public Action OnTournamentEnded { get; set; }
          VB: Public Property OnTournamentEnded As Action
        parameters: []
        return:
          type: Global.Action
      overload: Global.BracketsTournamentManager.OnTournamentEnded*
      implements:
      - Global.IBracketsTournament.OnTournamentEnded
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.BracketsTournamentManager.IsReady
      commentId: M:Global.BracketsTournamentManager.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: BracketsTournamentManager.IsReady()
        VB: BracketsTournamentManager.IsReady()
      qualifiedName:
        CSharp: BracketsTournamentManager.IsReady()
        VB: BracketsTournamentManager.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: IsReady
        path: ''
        startLine: 7445
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Global.BracketsTournamentManager.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsTournamentManager.Awake
      commentId: M:Global.BracketsTournamentManager.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: BracketsTournamentManager.Awake()
        VB: BracketsTournamentManager.Awake()
      qualifiedName:
        CSharp: BracketsTournamentManager.Awake()
        VB: BracketsTournamentManager.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Awake
        path: ''
        startLine: 7447
      syntax:
        content:
          CSharp: public void Awake()
          VB: Public Sub Awake
      overload: Global.BracketsTournamentManager.Awake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsTournamentManager.SetAlreadyConnection(System.Boolean)
      commentId: M:Global.BracketsTournamentManager.SetAlreadyConnection(System.Boolean)
      language: CSharp
      name:
        CSharp: SetAlreadyConnection(Boolean)
        VB: SetAlreadyConnection(Boolean)
      nameWithType:
        CSharp: BracketsTournamentManager.SetAlreadyConnection(Boolean)
        VB: BracketsTournamentManager.SetAlreadyConnection(Boolean)
      qualifiedName:
        CSharp: BracketsTournamentManager.SetAlreadyConnection(System.Boolean)
        VB: BracketsTournamentManager.SetAlreadyConnection(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetAlreadyConnection
        path: ''
        startLine: 7453
      syntax:
        content:
          CSharp: public void SetAlreadyConnection(bool state)
          VB: Public Sub SetAlreadyConnection(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Global.BracketsTournamentManager.SetAlreadyConnection*
      implements:
      - Global.IBracketsTournament.SetAlreadyConnection(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsTournamentManager.RecheckConection
      commentId: M:Global.BracketsTournamentManager.RecheckConection
      language: CSharp
      name:
        CSharp: RecheckConection()
        VB: RecheckConection()
      nameWithType:
        CSharp: BracketsTournamentManager.RecheckConection()
        VB: BracketsTournamentManager.RecheckConection()
      qualifiedName:
        CSharp: BracketsTournamentManager.RecheckConection()
        VB: BracketsTournamentManager.RecheckConection()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RecheckConection
        path: ''
        startLine: 7458
      syntax:
        content:
          CSharp: public void RecheckConection()
          VB: Public Sub RecheckConection
      overload: Global.BracketsTournamentManager.RecheckConection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsTournamentManager.ShowPanelBracketsView(System.Boolean)
      commentId: M:Global.BracketsTournamentManager.ShowPanelBracketsView(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowPanelBracketsView(Boolean)
        VB: ShowPanelBracketsView(Boolean)
      nameWithType:
        CSharp: BracketsTournamentManager.ShowPanelBracketsView(Boolean)
        VB: BracketsTournamentManager.ShowPanelBracketsView(Boolean)
      qualifiedName:
        CSharp: BracketsTournamentManager.ShowPanelBracketsView(System.Boolean)
        VB: BracketsTournamentManager.ShowPanelBracketsView(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShowPanelBracketsView
        path: ''
        startLine: 7492
      syntax:
        content:
          CSharp: public void ShowPanelBracketsView(bool active)
          VB: Public Sub ShowPanelBracketsView(active As Boolean)
        parameters:
        - id: active
          type: System.Boolean
      overload: Global.BracketsTournamentManager.ShowPanelBracketsView*
      implements:
      - Global.IBracketsTournament.ShowPanelBracketsView(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CheckTournamentStateController
    commentId: T:Global.CheckTournamentStateController
    language: CSharp
    name:
      CSharp: CheckTournamentStateController
      VB: CheckTournamentStateController
    nameWithType:
      CSharp: CheckTournamentStateController
      VB: CheckTournamentStateController
    qualifiedName:
      CSharp: CheckTournamentStateController
      VB: CheckTournamentStateController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CheckTournamentStateController
      path: ''
      startLine: 7510
    syntax:
      content:
        CSharp: 'public class CheckTournamentStateController : MonoBehaviour'
        VB: >-
          Public Class CheckTournamentStateController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CheckTournamentStateController.CheckTournamentState(System.Nullable{System.Boolean},System.Boolean)
      commentId: M:Global.CheckTournamentStateController.CheckTournamentState(System.Nullable{System.Boolean},System.Boolean)
      language: CSharp
      name:
        CSharp: CheckTournamentState(Nullable<Boolean>, Boolean)
        VB: CheckTournamentState(Nullable(Of Boolean), Boolean)
      nameWithType:
        CSharp: CheckTournamentStateController.CheckTournamentState(Nullable<Boolean>, Boolean)
        VB: CheckTournamentStateController.CheckTournamentState(Nullable(Of Boolean), Boolean)
      qualifiedName:
        CSharp: CheckTournamentStateController.CheckTournamentState(System.Nullable<System.Boolean>, System.Boolean)
        VB: CheckTournamentStateController.CheckTournamentState(System.Nullable(Of System.Boolean), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckTournamentState
        path: ''
        startLine: 7512
      syntax:
        content:
          CSharp: public void CheckTournamentState(bool? isLocalPlayerWon = null, bool shouldCheckWinByDefault = false)
          VB: Public Sub CheckTournamentState(isLocalPlayerWon As Boolean? = Nothing, shouldCheckWinByDefault As Boolean = False)
        parameters:
        - id: isLocalPlayerWon
          type: System.Nullable{System.Boolean}
        - id: shouldCheckWinByDefault
          type: System.Boolean
      overload: Global.CheckTournamentStateController.CheckTournamentState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CheckTournamentStateController.petitonTimeRate
      commentId: F:Global.CheckTournamentStateController.petitonTimeRate
      language: CSharp
      name:
        CSharp: petitonTimeRate
        VB: petitonTimeRate
      nameWithType:
        CSharp: CheckTournamentStateController.petitonTimeRate
        VB: CheckTournamentStateController.petitonTimeRate
      qualifiedName:
        CSharp: CheckTournamentStateController.petitonTimeRate
        VB: CheckTournamentStateController.petitonTimeRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: petitonTimeRate
        path: ''
        startLine: 7606
      syntax:
        content:
          CSharp: public float petitonTimeRate
          VB: Public petitonTimeRate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CheckTournamentStateController.WaitForSeconds(System.Single,Action)
      commentId: M:Global.CheckTournamentStateController.WaitForSeconds(System.Single,Action)
      language: CSharp
      name:
        CSharp: WaitForSeconds(Single, Action)
        VB: WaitForSeconds(Single, Action)
      nameWithType:
        CSharp: CheckTournamentStateController.WaitForSeconds(Single, Action)
        VB: CheckTournamentStateController.WaitForSeconds(Single, Action)
      qualifiedName:
        CSharp: CheckTournamentStateController.WaitForSeconds(System.Single, Action)
        VB: CheckTournamentStateController.WaitForSeconds(System.Single, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: WaitForSeconds
        path: ''
        startLine: 7609
      syntax:
        content:
          CSharp: public IEnumerator WaitForSeconds(float seconds, Action callback)
          VB: Public Function WaitForSeconds(seconds As Single, callback As Action) As IEnumerator
        parameters:
        - id: seconds
          type: System.Single
        - id: callback
          type: Global.Action
        return:
          type: System.Collections.IEnumerator
      overload: Global.CheckTournamentStateController.WaitForSeconds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CheckStateOfTournamentDto
    commentId: T:Global.CheckStateOfTournamentDto
    language: CSharp
    name:
      CSharp: CheckStateOfTournamentDto
      VB: CheckStateOfTournamentDto
    nameWithType:
      CSharp: CheckStateOfTournamentDto
      VB: CheckStateOfTournamentDto
    qualifiedName:
      CSharp: CheckStateOfTournamentDto
      VB: CheckStateOfTournamentDto
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CheckStateOfTournamentDto
      path: ''
      startLine: 7616
    syntax:
      content:
        CSharp: public class CheckStateOfTournamentDto
        VB: Public Class CheckStateOfTournamentDto
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CheckStateOfTournamentDto.nextRoundInitTime
      commentId: F:Global.CheckStateOfTournamentDto.nextRoundInitTime
      language: CSharp
      name:
        CSharp: nextRoundInitTime
        VB: nextRoundInitTime
      nameWithType:
        CSharp: CheckStateOfTournamentDto.nextRoundInitTime
        VB: CheckStateOfTournamentDto.nextRoundInitTime
      qualifiedName:
        CSharp: CheckStateOfTournamentDto.nextRoundInitTime
        VB: CheckStateOfTournamentDto.nextRoundInitTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: nextRoundInitTime
        path: ''
        startLine: 7618
      syntax:
        content:
          CSharp: public string nextRoundInitTime
          VB: Public nextRoundInitTime As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CheckStateOfTournamentDto.currentStage
      commentId: F:Global.CheckStateOfTournamentDto.currentStage
      language: CSharp
      name:
        CSharp: currentStage
        VB: currentStage
      nameWithType:
        CSharp: CheckStateOfTournamentDto.currentStage
        VB: CheckStateOfTournamentDto.currentStage
      qualifiedName:
        CSharp: CheckStateOfTournamentDto.currentStage
        VB: CheckStateOfTournamentDto.currentStage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentStage
        path: ''
        startLine: 7619
      syntax:
        content:
          CSharp: public int currentStage
          VB: Public currentStage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CheckStateOfTournamentDto.alredyPlayedPlayers
      commentId: F:Global.CheckStateOfTournamentDto.alredyPlayedPlayers
      language: CSharp
      name:
        CSharp: alredyPlayedPlayers
        VB: alredyPlayedPlayers
      nameWithType:
        CSharp: CheckStateOfTournamentDto.alredyPlayedPlayers
        VB: CheckStateOfTournamentDto.alredyPlayedPlayers
      qualifiedName:
        CSharp: CheckStateOfTournamentDto.alredyPlayedPlayers
        VB: CheckStateOfTournamentDto.alredyPlayedPlayers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alredyPlayedPlayers
        path: ''
        startLine: 7620
      syntax:
        content:
          CSharp: public List<string> alredyPlayedPlayers
          VB: Public alredyPlayedPlayers As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BracketsData
    commentId: T:Global.BracketsData
    language: CSharp
    name:
      CSharp: BracketsData
      VB: BracketsData
    nameWithType:
      CSharp: BracketsData
      VB: BracketsData
    qualifiedName:
      CSharp: BracketsData
      VB: BracketsData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BracketsData
      path: ''
      startLine: 8041
    syntax:
      content:
        CSharp: public class BracketsData
        VB: Public Class BracketsData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BracketsData.PID1
      commentId: F:Global.BracketsData.PID1
      language: CSharp
      name:
        CSharp: PID1
        VB: PID1
      nameWithType:
        CSharp: BracketsData.PID1
        VB: BracketsData.PID1
      qualifiedName:
        CSharp: BracketsData.PID1
        VB: BracketsData.PID1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PID1
        path: ''
        startLine: 8043
      syntax:
        content:
          CSharp: public string PID1
          VB: Public PID1 As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsData.PID2
      commentId: F:Global.BracketsData.PID2
      language: CSharp
      name:
        CSharp: PID2
        VB: PID2
      nameWithType:
        CSharp: BracketsData.PID2
        VB: BracketsData.PID2
      qualifiedName:
        CSharp: BracketsData.PID2
        VB: BracketsData.PID2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PID2
        path: ''
        startLine: 8044
      syntax:
        content:
          CSharp: public string PID2
          VB: Public PID2 As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsData.displayName1
      commentId: F:Global.BracketsData.displayName1
      language: CSharp
      name:
        CSharp: displayName1
        VB: displayName1
      nameWithType:
        CSharp: BracketsData.displayName1
        VB: BracketsData.displayName1
      qualifiedName:
        CSharp: BracketsData.displayName1
        VB: BracketsData.displayName1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: displayName1
        path: ''
        startLine: 8045
      syntax:
        content:
          CSharp: public string displayName1
          VB: Public displayName1 As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsData.displayName2
      commentId: F:Global.BracketsData.displayName2
      language: CSharp
      name:
        CSharp: displayName2
        VB: displayName2
      nameWithType:
        CSharp: BracketsData.displayName2
        VB: BracketsData.displayName2
      qualifiedName:
        CSharp: BracketsData.displayName2
        VB: BracketsData.displayName2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: displayName2
        path: ''
        startLine: 8046
      syntax:
        content:
          CSharp: public string displayName2
          VB: Public displayName2 As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsData.matchId
      commentId: F:Global.BracketsData.matchId
      language: CSharp
      name:
        CSharp: matchId
        VB: matchId
      nameWithType:
        CSharp: BracketsData.matchId
        VB: BracketsData.matchId
      qualifiedName:
        CSharp: BracketsData.matchId
        VB: BracketsData.matchId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: matchId
        path: ''
        startLine: 8048
      syntax:
        content:
          CSharp: public string matchId
          VB: Public matchId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsData.p1Joined
      commentId: F:Global.BracketsData.p1Joined
      language: CSharp
      name:
        CSharp: p1Joined
        VB: p1Joined
      nameWithType:
        CSharp: BracketsData.p1Joined
        VB: BracketsData.p1Joined
      qualifiedName:
        CSharp: BracketsData.p1Joined
        VB: BracketsData.p1Joined
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: p1Joined
        path: ''
        startLine: 8049
      syntax:
        content:
          CSharp: public bool p1Joined
          VB: Public p1Joined As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BracketsData.p2Joined
      commentId: F:Global.BracketsData.p2Joined
      language: CSharp
      name:
        CSharp: p2Joined
        VB: p2Joined
      nameWithType:
        CSharp: BracketsData.p2Joined
        VB: BracketsData.p2Joined
      qualifiedName:
        CSharp: BracketsData.p2Joined
        VB: BracketsData.p2Joined
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: p2Joined
        path: ''
        startLine: 8050
      syntax:
        content:
          CSharp: public bool p2Joined
          VB: Public p2Joined As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.StageBracketData
    commentId: T:Global.StageBracketData
    language: CSharp
    name:
      CSharp: StageBracketData
      VB: StageBracketData
    nameWithType:
      CSharp: StageBracketData
      VB: StageBracketData
    qualifiedName:
      CSharp: StageBracketData
      VB: StageBracketData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: StageBracketData
      path: ''
      startLine: 8053
    syntax:
      content:
        CSharp: public class StageBracketData
        VB: Public Class StageBracketData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.StageBracketData.brackets
      commentId: F:Global.StageBracketData.brackets
      language: CSharp
      name:
        CSharp: brackets
        VB: brackets
      nameWithType:
        CSharp: StageBracketData.brackets
        VB: StageBracketData.brackets
      qualifiedName:
        CSharp: StageBracketData.brackets
        VB: StageBracketData.brackets
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: brackets
        path: ''
        startLine: 8055
      syntax:
        content:
          CSharp: public Dictionary<string, BracketsData> brackets
          VB: Public brackets As Dictionary(Of String, BracketsData)
        return:
          type: System.Collections.Generic.Dictionary{System.String,BracketsData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TournamentBracketsData
    commentId: T:Global.TournamentBracketsData
    language: CSharp
    name:
      CSharp: TournamentBracketsData
      VB: TournamentBracketsData
    nameWithType:
      CSharp: TournamentBracketsData
      VB: TournamentBracketsData
    qualifiedName:
      CSharp: TournamentBracketsData
      VB: TournamentBracketsData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TournamentBracketsData
      path: ''
      startLine: 8058
    syntax:
      content:
        CSharp: public class TournamentBracketsData
        VB: Public Class TournamentBracketsData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TournamentBracketsData.maxPlayers
      commentId: F:Global.TournamentBracketsData.maxPlayers
      language: CSharp
      name:
        CSharp: maxPlayers
        VB: maxPlayers
      nameWithType:
        CSharp: TournamentBracketsData.maxPlayers
        VB: TournamentBracketsData.maxPlayers
      qualifiedName:
        CSharp: TournamentBracketsData.maxPlayers
        VB: TournamentBracketsData.maxPlayers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxPlayers
        path: ''
        startLine: 8060
      syntax:
        content:
          CSharp: public int maxPlayers
          VB: Public maxPlayers As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TournamentBracketsData.stages
      commentId: F:Global.TournamentBracketsData.stages
      language: CSharp
      name:
        CSharp: stages
        VB: stages
      nameWithType:
        CSharp: TournamentBracketsData.stages
        VB: TournamentBracketsData.stages
      qualifiedName:
        CSharp: TournamentBracketsData.stages
        VB: TournamentBracketsData.stages
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: stages
        path: ''
        startLine: 8061
      syntax:
        content:
          CSharp: public Dictionary<string, StageBracketData> stages
          VB: Public stages As Dictionary(Of String, StageBracketData)
        return:
          type: System.Collections.Generic.Dictionary{System.String,StageBracketData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ActionTypeEnum
    commentId: T:Global.ActionTypeEnum
    language: CSharp
    name:
      CSharp: ActionTypeEnum
      VB: ActionTypeEnum
    nameWithType:
      CSharp: ActionTypeEnum
      VB: ActionTypeEnum
    qualifiedName:
      CSharp: ActionTypeEnum
      VB: ActionTypeEnum
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ActionTypeEnum
      path: ''
      startLine: 8887
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public enum ActionTypeEnum
        VB: >-
          <Serializable>

          Public Enum ActionTypeEnum
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.ActionTypeEnum.BuffDebuff
      commentId: F:Global.ActionTypeEnum.BuffDebuff
      language: CSharp
      name:
        CSharp: BuffDebuff
        VB: BuffDebuff
      nameWithType:
        CSharp: ActionTypeEnum.BuffDebuff
        VB: ActionTypeEnum.BuffDebuff
      qualifiedName:
        CSharp: ActionTypeEnum.BuffDebuff
        VB: ActionTypeEnum.BuffDebuff
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BuffDebuff
        path: ''
        startLine: 8890
      syntax:
        content:
          CSharp: BuffDebuff = 0
          VB: BuffDebuff = 0
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.Healing
      commentId: F:Global.ActionTypeEnum.Healing
      language: CSharp
      name:
        CSharp: Healing
        VB: Healing
      nameWithType:
        CSharp: ActionTypeEnum.Healing
        VB: ActionTypeEnum.Healing
      qualifiedName:
        CSharp: ActionTypeEnum.Healing
        VB: ActionTypeEnum.Healing
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Healing
        path: ''
        startLine: 8891
      syntax:
        content:
          CSharp: Healing = 1
          VB: Healing = 1
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.Damage
      commentId: F:Global.ActionTypeEnum.Damage
      language: CSharp
      name:
        CSharp: Damage
        VB: Damage
      nameWithType:
        CSharp: ActionTypeEnum.Damage
        VB: ActionTypeEnum.Damage
      qualifiedName:
        CSharp: ActionTypeEnum.Damage
        VB: ActionTypeEnum.Damage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Damage
        path: ''
        startLine: 8892
      syntax:
        content:
          CSharp: Damage = 2
          VB: Damage = 2
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.TerrainChange
      commentId: F:Global.ActionTypeEnum.TerrainChange
      language: CSharp
      name:
        CSharp: TerrainChange
        VB: TerrainChange
      nameWithType:
        CSharp: ActionTypeEnum.TerrainChange
        VB: ActionTypeEnum.TerrainChange
      qualifiedName:
        CSharp: ActionTypeEnum.TerrainChange
        VB: ActionTypeEnum.TerrainChange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TerrainChange
        path: ''
        startLine: 8893
      syntax:
        content:
          CSharp: TerrainChange = 3
          VB: TerrainChange = 3
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.PutAlteredState
      commentId: F:Global.ActionTypeEnum.PutAlteredState
      language: CSharp
      name:
        CSharp: PutAlteredState
        VB: PutAlteredState
      nameWithType:
        CSharp: ActionTypeEnum.PutAlteredState
        VB: ActionTypeEnum.PutAlteredState
      qualifiedName:
        CSharp: ActionTypeEnum.PutAlteredState
        VB: ActionTypeEnum.PutAlteredState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PutAlteredState
        path: ''
        startLine: 8894
      syntax:
        content:
          CSharp: PutAlteredState = 4
          VB: PutAlteredState = 4
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.ChangeShinsei
      commentId: F:Global.ActionTypeEnum.ChangeShinsei
      language: CSharp
      name:
        CSharp: ChangeShinsei
        VB: ChangeShinsei
      nameWithType:
        CSharp: ActionTypeEnum.ChangeShinsei
        VB: ActionTypeEnum.ChangeShinsei
      qualifiedName:
        CSharp: ActionTypeEnum.ChangeShinsei
        VB: ActionTypeEnum.ChangeShinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeShinsei
        path: ''
        startLine: 8895
      syntax:
        content:
          CSharp: ChangeShinsei = 5
          VB: ChangeShinsei = 5
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.SkipTurn
      commentId: F:Global.ActionTypeEnum.SkipTurn
      language: CSharp
      name:
        CSharp: SkipTurn
        VB: SkipTurn
      nameWithType:
        CSharp: ActionTypeEnum.SkipTurn
        VB: ActionTypeEnum.SkipTurn
      qualifiedName:
        CSharp: ActionTypeEnum.SkipTurn
        VB: ActionTypeEnum.SkipTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SkipTurn
        path: ''
        startLine: 8896
      syntax:
        content:
          CSharp: SkipTurn = 6
          VB: SkipTurn = 6
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.BlockAction
      commentId: F:Global.ActionTypeEnum.BlockAction
      language: CSharp
      name:
        CSharp: BlockAction
        VB: BlockAction
      nameWithType:
        CSharp: ActionTypeEnum.BlockAction
        VB: ActionTypeEnum.BlockAction
      qualifiedName:
        CSharp: ActionTypeEnum.BlockAction
        VB: ActionTypeEnum.BlockAction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BlockAction
        path: ''
        startLine: 8897
      syntax:
        content:
          CSharp: BlockAction = 7
          VB: BlockAction = 7
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.Randomize
      commentId: F:Global.ActionTypeEnum.Randomize
      language: CSharp
      name:
        CSharp: Randomize
        VB: Randomize
      nameWithType:
        CSharp: ActionTypeEnum.Randomize
        VB: ActionTypeEnum.Randomize
      qualifiedName:
        CSharp: ActionTypeEnum.Randomize
        VB: ActionTypeEnum.Randomize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Randomize
        path: ''
        startLine: 8898
      syntax:
        content:
          CSharp: Randomize = 8
          VB: Randomize = 8
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.ReflectDamage
      commentId: F:Global.ActionTypeEnum.ReflectDamage
      language: CSharp
      name:
        CSharp: ReflectDamage
        VB: ReflectDamage
      nameWithType:
        CSharp: ActionTypeEnum.ReflectDamage
        VB: ActionTypeEnum.ReflectDamage
      qualifiedName:
        CSharp: ActionTypeEnum.ReflectDamage
        VB: ActionTypeEnum.ReflectDamage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ReflectDamage
        path: ''
        startLine: 8899
      syntax:
        content:
          CSharp: ReflectDamage = 9
          VB: ReflectDamage = 9
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.StatSwap
      commentId: F:Global.ActionTypeEnum.StatSwap
      language: CSharp
      name:
        CSharp: StatSwap
        VB: StatSwap
      nameWithType:
        CSharp: ActionTypeEnum.StatSwap
        VB: ActionTypeEnum.StatSwap
      qualifiedName:
        CSharp: ActionTypeEnum.StatSwap
        VB: ActionTypeEnum.StatSwap
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StatSwap
        path: ''
        startLine: 8900
      syntax:
        content:
          CSharp: StatSwap = 10
          VB: StatSwap = 10
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.CopyCat
      commentId: F:Global.ActionTypeEnum.CopyCat
      language: CSharp
      name:
        CSharp: CopyCat
        VB: CopyCat
      nameWithType:
        CSharp: ActionTypeEnum.CopyCat
        VB: ActionTypeEnum.CopyCat
      qualifiedName:
        CSharp: ActionTypeEnum.CopyCat
        VB: ActionTypeEnum.CopyCat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CopyCat
        path: ''
        startLine: 8901
      syntax:
        content:
          CSharp: CopyCat = 11
          VB: CopyCat = 11
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ActionTypeEnum.TMP
      commentId: F:Global.ActionTypeEnum.TMP
      language: CSharp
      name:
        CSharp: TMP
        VB: TMP
      nameWithType:
        CSharp: ActionTypeEnum.TMP
        VB: ActionTypeEnum.TMP
      qualifiedName:
        CSharp: ActionTypeEnum.TMP
        VB: ActionTypeEnum.TMP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TMP
        path: ''
        startLine: 8902
      syntax:
        content:
          CSharp: TMP = 12
          VB: TMP = 12
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.ShinseiStatsEnum
    commentId: T:Global.ShinseiStatsEnum
    language: CSharp
    name:
      CSharp: ShinseiStatsEnum
      VB: ShinseiStatsEnum
    nameWithType:
      CSharp: ShinseiStatsEnum
      VB: ShinseiStatsEnum
    qualifiedName:
      CSharp: ShinseiStatsEnum
      VB: ShinseiStatsEnum
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShinseiStatsEnum
      path: ''
      startLine: 8905
    syntax:
      content:
        CSharp: public enum ShinseiStatsEnum
        VB: Public Enum ShinseiStatsEnum
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.ShinseiStatsEnum.Attack
      commentId: F:Global.ShinseiStatsEnum.Attack
      language: CSharp
      name:
        CSharp: Attack
        VB: Attack
      nameWithType:
        CSharp: ShinseiStatsEnum.Attack
        VB: ShinseiStatsEnum.Attack
      qualifiedName:
        CSharp: ShinseiStatsEnum.Attack
        VB: ShinseiStatsEnum.Attack
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Attack
        path: ''
        startLine: 8907
      syntax:
        content:
          CSharp: Attack = 0
          VB: Attack = 0
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ShinseiStatsEnum.Defence
      commentId: F:Global.ShinseiStatsEnum.Defence
      language: CSharp
      name:
        CSharp: Defence
        VB: Defence
      nameWithType:
        CSharp: ShinseiStatsEnum.Defence
        VB: ShinseiStatsEnum.Defence
      qualifiedName:
        CSharp: ShinseiStatsEnum.Defence
        VB: ShinseiStatsEnum.Defence
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Defence
        path: ''
        startLine: 8908
      syntax:
        content:
          CSharp: Defence = 1
          VB: Defence = 1
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ShinseiStatsEnum.Vigor
      commentId: F:Global.ShinseiStatsEnum.Vigor
      language: CSharp
      name:
        CSharp: Vigor
        VB: Vigor
      nameWithType:
        CSharp: ShinseiStatsEnum.Vigor
        VB: ShinseiStatsEnum.Vigor
      qualifiedName:
        CSharp: ShinseiStatsEnum.Vigor
        VB: ShinseiStatsEnum.Vigor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Vigor
        path: ''
        startLine: 8909
      syntax:
        content:
          CSharp: Vigor = 2
          VB: Vigor = 2
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ShinseiStatsEnum.Speed
      commentId: F:Global.ShinseiStatsEnum.Speed
      language: CSharp
      name:
        CSharp: Speed
        VB: Speed
      nameWithType:
        CSharp: ShinseiStatsEnum.Speed
        VB: ShinseiStatsEnum.Speed
      qualifiedName:
        CSharp: ShinseiStatsEnum.Speed
        VB: ShinseiStatsEnum.Speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Speed
        path: ''
        startLine: 8910
      syntax:
        content:
          CSharp: Speed = 3
          VB: Speed = 3
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.ShinseiStatsEnum.Stamina
      commentId: F:Global.ShinseiStatsEnum.Stamina
      language: CSharp
      name:
        CSharp: Stamina
        VB: Stamina
      nameWithType:
        CSharp: ShinseiStatsEnum.Stamina
        VB: ShinseiStatsEnum.Stamina
      qualifiedName:
        CSharp: ShinseiStatsEnum.Stamina
        VB: ShinseiStatsEnum.Stamina
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Stamina
        path: ''
        startLine: 8911
      syntax:
        content:
          CSharp: Stamina = 4
          VB: Stamina = 4
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.TypesOfTerrainEnum
    commentId: T:Global.TypesOfTerrainEnum
    language: CSharp
    name:
      CSharp: TypesOfTerrainEnum
      VB: TypesOfTerrainEnum
    nameWithType:
      CSharp: TypesOfTerrainEnum
      VB: TypesOfTerrainEnum
    qualifiedName:
      CSharp: TypesOfTerrainEnum
      VB: TypesOfTerrainEnum
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TypesOfTerrainEnum
      path: ''
      startLine: 8914
    syntax:
      content:
        CSharp: public enum TypesOfTerrainEnum
        VB: Public Enum TypesOfTerrainEnum
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.TypesOfTerrainEnum.Flames
      commentId: F:Global.TypesOfTerrainEnum.Flames
      language: CSharp
      name:
        CSharp: Flames
        VB: Flames
      nameWithType:
        CSharp: TypesOfTerrainEnum.Flames
        VB: TypesOfTerrainEnum.Flames
      qualifiedName:
        CSharp: TypesOfTerrainEnum.Flames
        VB: TypesOfTerrainEnum.Flames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Flames
        path: ''
        startLine: 8916
      syntax:
        content:
          CSharp: Flames = 0
          VB: Flames = 0
        return:
          type: Global.TypesOfTerrainEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.TypesOfTerrainEnum.Snow
      commentId: F:Global.TypesOfTerrainEnum.Snow
      language: CSharp
      name:
        CSharp: Snow
        VB: Snow
      nameWithType:
        CSharp: TypesOfTerrainEnum.Snow
        VB: TypesOfTerrainEnum.Snow
      qualifiedName:
        CSharp: TypesOfTerrainEnum.Snow
        VB: TypesOfTerrainEnum.Snow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Snow
        path: ''
        startLine: 8917
      syntax:
        content:
          CSharp: Snow = 1
          VB: Snow = 1
        return:
          type: Global.TypesOfTerrainEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.TypesOfTerrainEnum.Eclipse
      commentId: F:Global.TypesOfTerrainEnum.Eclipse
      language: CSharp
      name:
        CSharp: Eclipse
        VB: Eclipse
      nameWithType:
        CSharp: TypesOfTerrainEnum.Eclipse
        VB: TypesOfTerrainEnum.Eclipse
      qualifiedName:
        CSharp: TypesOfTerrainEnum.Eclipse
        VB: TypesOfTerrainEnum.Eclipse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Eclipse
        path: ''
        startLine: 8918
      syntax:
        content:
          CSharp: Eclipse = 2
          VB: Eclipse = 2
        return:
          type: Global.TypesOfTerrainEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.TypesOfTerrainEnum.Light
      commentId: F:Global.TypesOfTerrainEnum.Light
      language: CSharp
      name:
        CSharp: Light
        VB: Light
      nameWithType:
        CSharp: TypesOfTerrainEnum.Light
        VB: TypesOfTerrainEnum.Light
      qualifiedName:
        CSharp: TypesOfTerrainEnum.Light
        VB: TypesOfTerrainEnum.Light
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Light
        path: ''
        startLine: 8919
      syntax:
        content:
          CSharp: Light = 3
          VB: Light = 3
        return:
          type: Global.TypesOfTerrainEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.AlteredStateEnum
    commentId: T:Global.AlteredStateEnum
    language: CSharp
    name:
      CSharp: AlteredStateEnum
      VB: AlteredStateEnum
    nameWithType:
      CSharp: AlteredStateEnum
      VB: AlteredStateEnum
    qualifiedName:
      CSharp: AlteredStateEnum
      VB: AlteredStateEnum
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AlteredStateEnum
      path: ''
      startLine: 8921
    syntax:
      content:
        CSharp: public enum AlteredStateEnum
        VB: Public Enum AlteredStateEnum
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.AlteredStateEnum.EvasionChange
      commentId: F:Global.AlteredStateEnum.EvasionChange
      language: CSharp
      name:
        CSharp: EvasionChange
        VB: EvasionChange
      nameWithType:
        CSharp: AlteredStateEnum.EvasionChange
        VB: AlteredStateEnum.EvasionChange
      qualifiedName:
        CSharp: AlteredStateEnum.EvasionChange
        VB: AlteredStateEnum.EvasionChange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EvasionChange
        path: ''
        startLine: 8923
      syntax:
        content:
          CSharp: EvasionChange = 0
          VB: EvasionChange = 0
        return:
          type: Global.AlteredStateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.AlteredStateEnum.Ignited
      commentId: F:Global.AlteredStateEnum.Ignited
      language: CSharp
      name:
        CSharp: Ignited
        VB: Ignited
      nameWithType:
        CSharp: AlteredStateEnum.Ignited
        VB: AlteredStateEnum.Ignited
      qualifiedName:
        CSharp: AlteredStateEnum.Ignited
        VB: AlteredStateEnum.Ignited
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Ignited
        path: ''
        startLine: 8924
      syntax:
        content:
          CSharp: Ignited = 1
          VB: Ignited = 1
        return:
          type: Global.AlteredStateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.AlteredStateEnum.Rooted
      commentId: F:Global.AlteredStateEnum.Rooted
      language: CSharp
      name:
        CSharp: Rooted
        VB: Rooted
      nameWithType:
        CSharp: AlteredStateEnum.Rooted
        VB: AlteredStateEnum.Rooted
      qualifiedName:
        CSharp: AlteredStateEnum.Rooted
        VB: AlteredStateEnum.Rooted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Rooted
        path: ''
        startLine: 8925
      syntax:
        content:
          CSharp: Rooted = 2
          VB: Rooted = 2
        return:
          type: Global.AlteredStateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.AlteredStateEnum.Bleeding
      commentId: F:Global.AlteredStateEnum.Bleeding
      language: CSharp
      name:
        CSharp: Bleeding
        VB: Bleeding
      nameWithType:
        CSharp: AlteredStateEnum.Bleeding
        VB: AlteredStateEnum.Bleeding
      qualifiedName:
        CSharp: AlteredStateEnum.Bleeding
        VB: AlteredStateEnum.Bleeding
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Bleeding
        path: ''
        startLine: 8926
      syntax:
        content:
          CSharp: Bleeding = 3
          VB: Bleeding = 3
        return:
          type: Global.AlteredStateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.CriticsCheck
    commentId: T:Global.CriticsCheck
    language: CSharp
    name:
      CSharp: CriticsCheck
      VB: CriticsCheck
    nameWithType:
      CSharp: CriticsCheck
      VB: CriticsCheck
    qualifiedName:
      CSharp: CriticsCheck
      VB: CriticsCheck
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CriticsCheck
      path: ''
      startLine: 8928
    syntax:
      content:
        CSharp: public enum CriticsCheck
        VB: Public Enum CriticsCheck
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.CriticsCheck.Is_Sleep
      commentId: F:Global.CriticsCheck.Is_Sleep
      language: CSharp
      name:
        CSharp: Is_Sleep
        VB: Is_Sleep
      nameWithType:
        CSharp: CriticsCheck.Is_Sleep
        VB: CriticsCheck.Is_Sleep
      qualifiedName:
        CSharp: CriticsCheck.Is_Sleep
        VB: CriticsCheck.Is_Sleep
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Is_Sleep
        path: ''
        startLine: 8930
      syntax:
        content:
          CSharp: Is_Sleep = 0
          VB: Is_Sleep = 0
        return:
          type: Global.CriticsCheck
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.BattleNotificationSystem
    commentId: T:Global.BattleNotificationSystem
    language: CSharp
    name:
      CSharp: BattleNotificationSystem
      VB: BattleNotificationSystem
    nameWithType:
      CSharp: BattleNotificationSystem
      VB: BattleNotificationSystem
    qualifiedName:
      CSharp: BattleNotificationSystem
      VB: BattleNotificationSystem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleNotificationSystem
      path: ''
      startLine: 9203
    syntax:
      content:
        CSharp: 'public class BattleNotificationSystem : TextboxBase'
        VB: >-
          Public Class BattleNotificationSystem

              Inherits TextboxBase
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.ChatTextBox
    commentId: T:Global.ChatTextBox
    language: CSharp
    name:
      CSharp: ChatTextBox
      VB: ChatTextBox
    nameWithType:
      CSharp: ChatTextBox
      VB: ChatTextBox
    qualifiedName:
      CSharp: ChatTextBox
      VB: ChatTextBox
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ChatTextBox
      path: ''
      startLine: 9530
    summary: "\nChat behavior, send messages and show in a UI Elements\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ChatTextBox : TextboxBase'
        VB: >-
          Public Class ChatTextBox

              Inherits TextboxBase
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ChatTextBox.isReady
      commentId: F:Global.ChatTextBox.isReady
      language: CSharp
      name:
        CSharp: isReady
        VB: isReady
      nameWithType:
        CSharp: ChatTextBox.isReady
        VB: ChatTextBox.isReady
      qualifiedName:
        CSharp: ChatTextBox.isReady
        VB: ChatTextBox.isReady
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isReady
        path: ''
        startLine: 9535
      syntax:
        content:
          CSharp: public bool isReady
          VB: Public isReady As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.system
      commentId: F:Global.ChatTextBox.system
      language: CSharp
      name:
        CSharp: system
        VB: system
      nameWithType:
        CSharp: ChatTextBox.system
        VB: ChatTextBox.system
      qualifiedName:
        CSharp: ChatTextBox.system
        VB: ChatTextBox.system
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: system
        path: ''
        startLine: 9538
      syntax:
        content:
          CSharp: public EventSystem system
          VB: Public system As EventSystem
        return:
          type: Global.EventSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.filter
      commentId: F:Global.ChatTextBox.filter
      language: CSharp
      name:
        CSharp: filter
        VB: filter
      nameWithType:
        CSharp: ChatTextBox.filter
        VB: ChatTextBox.filter
      qualifiedName:
        CSharp: ChatTextBox.filter
        VB: ChatTextBox.filter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: filter
        path: ''
        startLine: 9541
      syntax:
        content:
          CSharp: public GameObject filter
          VB: Public filter As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.OnStartEditing
      commentId: F:Global.ChatTextBox.OnStartEditing
      language: CSharp
      name:
        CSharp: OnStartEditing
        VB: OnStartEditing
      nameWithType:
        CSharp: ChatTextBox.OnStartEditing
        VB: ChatTextBox.OnStartEditing
      qualifiedName:
        CSharp: ChatTextBox.OnStartEditing
        VB: ChatTextBox.OnStartEditing
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnStartEditing
        path: ''
        startLine: 9543
      syntax:
        content:
          CSharp: public Action OnStartEditing
          VB: Public OnStartEditing As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.OnEndEditing
      commentId: F:Global.ChatTextBox.OnEndEditing
      language: CSharp
      name:
        CSharp: OnEndEditing
        VB: OnEndEditing
      nameWithType:
        CSharp: ChatTextBox.OnEndEditing
        VB: ChatTextBox.OnEndEditing
      qualifiedName:
        CSharp: ChatTextBox.OnEndEditing
        VB: ChatTextBox.OnEndEditing
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEndEditing
        path: ''
        startLine: 9543
      syntax:
        content:
          CSharp: public Action OnEndEditing
          VB: Public OnEndEditing As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.badWordsDB
      commentId: F:Global.ChatTextBox.badWordsDB
      language: CSharp
      name:
        CSharp: badWordsDB
        VB: badWordsDB
      nameWithType:
        CSharp: ChatTextBox.badWordsDB
        VB: ChatTextBox.badWordsDB
      qualifiedName:
        CSharp: ChatTextBox.badWordsDB
        VB: ChatTextBox.badWordsDB
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: badWordsDB
        path: ''
        startLine: 9544
      syntax:
        content:
          CSharp: public ChatBadWordsDB badWordsDB
          VB: Public badWordsDB As ChatBadWordsDB
        return:
          type: Global.ChatBadWordsDB
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.CallStartEditing
      commentId: M:Global.ChatTextBox.CallStartEditing
      language: CSharp
      name:
        CSharp: CallStartEditing()
        VB: CallStartEditing()
      nameWithType:
        CSharp: ChatTextBox.CallStartEditing()
        VB: ChatTextBox.CallStartEditing()
      qualifiedName:
        CSharp: ChatTextBox.CallStartEditing()
        VB: ChatTextBox.CallStartEditing()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CallStartEditing
        path: ''
        startLine: 9558
      syntax:
        content:
          CSharp: public void CallStartEditing()
          VB: Public Sub CallStartEditing
      overload: Global.ChatTextBox.CallStartEditing*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.CallEndEditing
      commentId: M:Global.ChatTextBox.CallEndEditing
      language: CSharp
      name:
        CSharp: CallEndEditing()
        VB: CallEndEditing()
      nameWithType:
        CSharp: ChatTextBox.CallEndEditing()
        VB: ChatTextBox.CallEndEditing()
      qualifiedName:
        CSharp: ChatTextBox.CallEndEditing()
        VB: ChatTextBox.CallEndEditing()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CallEndEditing
        path: ''
        startLine: 9563
      syntax:
        content:
          CSharp: public void CallEndEditing()
          VB: Public Sub CallEndEditing
      overload: Global.ChatTextBox.CallEndEditing*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.ToggleShowFilter
      commentId: M:Global.ChatTextBox.ToggleShowFilter
      language: CSharp
      name:
        CSharp: ToggleShowFilter()
        VB: ToggleShowFilter()
      nameWithType:
        CSharp: ChatTextBox.ToggleShowFilter()
        VB: ChatTextBox.ToggleShowFilter()
      qualifiedName:
        CSharp: ChatTextBox.ToggleShowFilter()
        VB: ChatTextBox.ToggleShowFilter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ToggleShowFilter
        path: ''
        startLine: 9568
      syntax:
        content:
          CSharp: public void ToggleShowFilter()
          VB: Public Sub ToggleShowFilter
      overload: Global.ChatTextBox.ToggleShowFilter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.Update
      commentId: M:Global.ChatTextBox.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: ChatTextBox.Update()
        VB: ChatTextBox.Update()
      qualifiedName:
        CSharp: ChatTextBox.Update()
        VB: ChatTextBox.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Update
        path: ''
        startLine: 9573
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: Global.ChatTextBox.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.DisableMovement(System.Boolean)
      commentId: M:Global.ChatTextBox.DisableMovement(System.Boolean)
      language: CSharp
      name:
        CSharp: DisableMovement(Boolean)
        VB: DisableMovement(Boolean)
      nameWithType:
        CSharp: ChatTextBox.DisableMovement(Boolean)
        VB: ChatTextBox.DisableMovement(Boolean)
      qualifiedName:
        CSharp: ChatTextBox.DisableMovement(System.Boolean)
        VB: ChatTextBox.DisableMovement(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DisableMovement
        path: ''
        startLine: 9606
      syntax:
        content:
          CSharp: public void DisableMovement(bool newState)
          VB: Public Sub DisableMovement(newState As Boolean)
        parameters:
        - id: newState
          type: System.Boolean
      overload: Global.ChatTextBox.DisableMovement*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.ShowHide(System.Boolean)
      commentId: M:Global.ChatTextBox.ShowHide(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowHide(Boolean)
        VB: ShowHide(Boolean)
      nameWithType:
        CSharp: ChatTextBox.ShowHide(Boolean)
        VB: ChatTextBox.ShowHide(Boolean)
      qualifiedName:
        CSharp: ChatTextBox.ShowHide(System.Boolean)
        VB: ChatTextBox.ShowHide(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShowHide
        path: ''
        startLine: 9612
      syntax:
        content:
          CSharp: public void ShowHide(bool state)
          VB: Public Sub ShowHide(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Global.ChatTextBox.ShowHide*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.SendLocalMessage
      commentId: M:Global.ChatTextBox.SendLocalMessage
      language: CSharp
      name:
        CSharp: SendLocalMessage()
        VB: SendLocalMessage()
      nameWithType:
        CSharp: ChatTextBox.SendLocalMessage()
        VB: ChatTextBox.SendLocalMessage()
      qualifiedName:
        CSharp: ChatTextBox.SendLocalMessage()
        VB: ChatTextBox.SendLocalMessage()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SendLocalMessage
        path: ''
        startLine: 9629
      syntax:
        content:
          CSharp: public void SendLocalMessage()
          VB: Public Sub SendLocalMessage
      overload: Global.ChatTextBox.SendLocalMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.alreadyWriteMessages
      commentId: F:Global.ChatTextBox.alreadyWriteMessages
      language: CSharp
      name:
        CSharp: alreadyWriteMessages
        VB: alreadyWriteMessages
      nameWithType:
        CSharp: ChatTextBox.alreadyWriteMessages
        VB: ChatTextBox.alreadyWriteMessages
      qualifiedName:
        CSharp: ChatTextBox.alreadyWriteMessages
        VB: ChatTextBox.alreadyWriteMessages
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alreadyWriteMessages
        path: ''
        startLine: 9653
      syntax:
        content:
          CSharp: public List<string> alreadyWriteMessages
          VB: Public alreadyWriteMessages As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.SendMessage(ChatMessagePayload,System.String,System.Boolean)
      commentId: M:Global.ChatTextBox.SendMessage(ChatMessagePayload,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: SendMessage(ChatMessagePayload, String, Boolean)
        VB: SendMessage(ChatMessagePayload, String, Boolean)
      nameWithType:
        CSharp: ChatTextBox.SendMessage(ChatMessagePayload, String, Boolean)
        VB: ChatTextBox.SendMessage(ChatMessagePayload, String, Boolean)
      qualifiedName:
        CSharp: ChatTextBox.SendMessage(ChatMessagePayload, System.String, System.Boolean)
        VB: ChatTextBox.SendMessage(ChatMessagePayload, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SendMessage
        path: ''
        startLine: 9654
      syntax:
        content:
          CSharp: public void SendMessage(ChatMessagePayload chatMessage, string displayName, bool isAdmin = false)
          VB: Public Sub SendMessage(chatMessage As ChatMessagePayload, displayName As String, isAdmin As Boolean = False)
        parameters:
        - id: chatMessage
          type: Global.ChatMessagePayload
        - id: displayName
          type: System.String
        - id: isAdmin
          type: System.Boolean
      overload: Global.ChatTextBox.SendMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.SendMessage(ChatMessagePayload,System.String)
      commentId: M:Global.ChatTextBox.SendMessage(ChatMessagePayload,System.String)
      language: CSharp
      name:
        CSharp: SendMessage(ChatMessagePayload, String)
        VB: SendMessage(ChatMessagePayload, String)
      nameWithType:
        CSharp: ChatTextBox.SendMessage(ChatMessagePayload, String)
        VB: ChatTextBox.SendMessage(ChatMessagePayload, String)
      qualifiedName:
        CSharp: ChatTextBox.SendMessage(ChatMessagePayload, System.String)
        VB: ChatTextBox.SendMessage(ChatMessagePayload, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SendMessage
        path: ''
        startLine: 9670
      syntax:
        content:
          CSharp: public void SendMessage(ChatMessagePayload chatMessage, string from)
          VB: Public Sub SendMessage(chatMessage As ChatMessagePayload, from As String)
        parameters:
        - id: chatMessage
          type: Global.ChatMessagePayload
        - id: from
          type: System.String
      overload: Global.ChatTextBox.SendMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ChatTextBox.CheckForBadWords(System.String)
      commentId: M:Global.ChatTextBox.CheckForBadWords(System.String)
      language: CSharp
      name:
        CSharp: CheckForBadWords(String)
        VB: CheckForBadWords(String)
      nameWithType:
        CSharp: ChatTextBox.CheckForBadWords(String)
        VB: ChatTextBox.CheckForBadWords(String)
      qualifiedName:
        CSharp: ChatTextBox.CheckForBadWords(System.String)
        VB: ChatTextBox.CheckForBadWords(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckForBadWords
        path: ''
        startLine: 9678
      syntax:
        content:
          CSharp: public string CheckForBadWords(string message)
          VB: Public Function CheckForBadWords(message As String) As String
        parameters:
        - id: message
          type: System.String
        return:
          type: System.String
      overload: Global.ChatTextBox.CheckForBadWords*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ChatBadWordsDB
    commentId: T:Global.ChatBadWordsDB
    language: CSharp
    name:
      CSharp: ChatBadWordsDB
      VB: ChatBadWordsDB
    nameWithType:
      CSharp: ChatBadWordsDB
      VB: ChatBadWordsDB
    qualifiedName:
      CSharp: ChatBadWordsDB
      VB: ChatBadWordsDB
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ChatBadWordsDB
      path: ''
      startLine: 9732
    syntax:
      content:
        CSharp: public struct ChatBadWordsDB
        VB: Public Structure ChatBadWordsDB
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.ChatBadWordsDB.listOfBadWords
      commentId: F:Global.ChatBadWordsDB.listOfBadWords
      language: CSharp
      name:
        CSharp: listOfBadWords
        VB: listOfBadWords
      nameWithType:
        CSharp: ChatBadWordsDB.listOfBadWords
        VB: ChatBadWordsDB.listOfBadWords
      qualifiedName:
        CSharp: ChatBadWordsDB.listOfBadWords
        VB: ChatBadWordsDB.listOfBadWords
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: listOfBadWords
        path: ''
        startLine: 9734
      syntax:
        content:
          CSharp: public List<List<string>> listOfBadWords
          VB: Public listOfBadWords As List(Of List(Of String))
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.List{System.String}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CombatFirebasePetitions
    commentId: T:Global.CombatFirebasePetitions
    language: CSharp
    name:
      CSharp: CombatFirebasePetitions
      VB: CombatFirebasePetitions
    nameWithType:
      CSharp: CombatFirebasePetitions
      VB: CombatFirebasePetitions
    qualifiedName:
      CSharp: CombatFirebasePetitions
      VB: CombatFirebasePetitions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CombatFirebasePetitions
      path: ''
      startLine: 9761
    summary: "\nDeprecate battle using firebase\n"
    example: []
    syntax:
      content:
        CSharp: public static class CombatFirebasePetitions
        VB: Public Module CombatFirebasePetitions
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Global.CombatFirebasePetitions.currentMatchId
      commentId: F:Global.CombatFirebasePetitions.currentMatchId
      language: CSharp
      name:
        CSharp: currentMatchId
        VB: currentMatchId
      nameWithType:
        CSharp: CombatFirebasePetitions.currentMatchId
        VB: CombatFirebasePetitions.currentMatchId
      qualifiedName:
        CSharp: CombatFirebasePetitions.currentMatchId
        VB: CombatFirebasePetitions.currentMatchId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentMatchId
        path: ''
        startLine: 9763
      syntax:
        content:
          CSharp: public static string currentMatchId
          VB: Public Shared currentMatchId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.CombatFirebasePetitions.SetMatchId(System.String)
      commentId: M:Global.CombatFirebasePetitions.SetMatchId(System.String)
      language: CSharp
      name:
        CSharp: SetMatchId(String)
        VB: SetMatchId(String)
      nameWithType:
        CSharp: CombatFirebasePetitions.SetMatchId(String)
        VB: CombatFirebasePetitions.SetMatchId(String)
      qualifiedName:
        CSharp: CombatFirebasePetitions.SetMatchId(System.String)
        VB: CombatFirebasePetitions.SetMatchId(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetMatchId
        path: ''
        startLine: 9764
      syntax:
        content:
          CSharp: public static void SetMatchId(string matchId)
          VB: Public Shared Sub SetMatchId(matchId As String)
        parameters:
        - id: matchId
          type: System.String
      overload: Global.CombatFirebasePetitions.SetMatchId*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.CombatFirebasePetitions.UpdateDataPetition(OrderMessage,Action{System.Boolean})
      commentId: M:Global.CombatFirebasePetitions.UpdateDataPetition(OrderMessage,Action{System.Boolean})
      language: CSharp
      name:
        CSharp: UpdateDataPetition(OrderMessage, Action<Boolean>)
        VB: UpdateDataPetition(OrderMessage, Action(Of Boolean))
      nameWithType:
        CSharp: CombatFirebasePetitions.UpdateDataPetition(OrderMessage, Action<Boolean>)
        VB: CombatFirebasePetitions.UpdateDataPetition(OrderMessage, Action(Of Boolean))
      qualifiedName:
        CSharp: CombatFirebasePetitions.UpdateDataPetition(OrderMessage, Action<System.Boolean>)
        VB: CombatFirebasePetitions.UpdateDataPetition(OrderMessage, Action(Of System.Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateDataPetition
        path: ''
        startLine: 9769
      syntax:
        content:
          CSharp: public static void UpdateDataPetition(OrderMessage message, Action<bool> onSendSuccess = null)
          VB: Public Shared Sub UpdateDataPetition(message As OrderMessage, onSendSuccess As Action(Of Boolean) = Nothing)
        parameters:
        - id: message
          type: Global.OrderMessage
        - id: onSendSuccess
          type: Global.Action{System.Boolean}
      overload: Global.CombatFirebasePetitions.UpdateDataPetition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.CombatFirebasePetitions.DeleteDataPetition(Action{System.Boolean},System.String)
      commentId: M:Global.CombatFirebasePetitions.DeleteDataPetition(Action{System.Boolean},System.String)
      language: CSharp
      name:
        CSharp: DeleteDataPetition(Action<Boolean>, String)
        VB: DeleteDataPetition(Action(Of Boolean), String)
      nameWithType:
        CSharp: CombatFirebasePetitions.DeleteDataPetition(Action<Boolean>, String)
        VB: CombatFirebasePetitions.DeleteDataPetition(Action(Of Boolean), String)
      qualifiedName:
        CSharp: CombatFirebasePetitions.DeleteDataPetition(Action<System.Boolean>, System.String)
        VB: CombatFirebasePetitions.DeleteDataPetition(Action(Of System.Boolean), System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DeleteDataPetition
        path: ''
        startLine: 9786
      syntax:
        content:
          CSharp: public static void DeleteDataPetition(Action<bool> onSendSuccess = null, string key = "")
          VB: Public Shared Sub DeleteDataPetition(onSendSuccess As Action(Of Boolean) = Nothing, key As String = "")
        parameters:
        - id: onSendSuccess
          type: Global.Action{System.Boolean}
        - id: key
          type: System.String
      overload: Global.CombatFirebasePetitions.DeleteDataPetition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.CombatFirebasePetitions.GetDataPetition(Action{System.Boolean},Action{System.Collections.Generic.Dictionary{System.String,OrderMessage}})
      commentId: M:Global.CombatFirebasePetitions.GetDataPetition(Action{System.Boolean},Action{System.Collections.Generic.Dictionary{System.String,OrderMessage}})
      language: CSharp
      name:
        CSharp: GetDataPetition(Action<Boolean>, Action<Dictionary<String, OrderMessage>>)
        VB: GetDataPetition(Action(Of Boolean), Action(Of Dictionary(Of String, OrderMessage)))
      nameWithType:
        CSharp: CombatFirebasePetitions.GetDataPetition(Action<Boolean>, Action<Dictionary<String, OrderMessage>>)
        VB: CombatFirebasePetitions.GetDataPetition(Action(Of Boolean), Action(Of Dictionary(Of String, OrderMessage)))
      qualifiedName:
        CSharp: CombatFirebasePetitions.GetDataPetition(Action<System.Boolean>, Action<System.Collections.Generic.Dictionary<System.String, OrderMessage>>)
        VB: CombatFirebasePetitions.GetDataPetition(Action(Of System.Boolean), Action(Of System.Collections.Generic.Dictionary(Of System.String, OrderMessage)))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetDataPetition
        path: ''
        startLine: 9801
      syntax:
        content:
          CSharp: public static void GetDataPetition(Action<bool> onSendSuccess = null, Action<Dictionary<string, OrderMessage>> dataCallback = null)
          VB: Public Shared Sub GetDataPetition(onSendSuccess As Action(Of Boolean) = Nothing, dataCallback As Action(Of Dictionary(Of String, OrderMessage)) = Nothing)
        parameters:
        - id: onSendSuccess
          type: Global.Action{System.Boolean}
        - id: dataCallback
          type: Global.Action{System.Collections.Generic.Dictionary{System.String,OrderMessage}}
      overload: Global.CombatFirebasePetitions.GetDataPetition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.FirebasePetitionType
    commentId: T:Global.FirebasePetitionType
    language: CSharp
    name:
      CSharp: FirebasePetitionType
      VB: FirebasePetitionType
    nameWithType:
      CSharp: FirebasePetitionType
      VB: FirebasePetitionType
    qualifiedName:
      CSharp: FirebasePetitionType
      VB: FirebasePetitionType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FirebasePetitionType
      path: ''
      startLine: 9827
    syntax:
      content:
        CSharp: public enum FirebasePetitionType
        VB: Public Enum FirebasePetitionType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.FirebasePetitionType.SendTurn
      commentId: F:Global.FirebasePetitionType.SendTurn
      language: CSharp
      name:
        CSharp: SendTurn
        VB: SendTurn
      nameWithType:
        CSharp: FirebasePetitionType.SendTurn
        VB: FirebasePetitionType.SendTurn
      qualifiedName:
        CSharp: FirebasePetitionType.SendTurn
        VB: FirebasePetitionType.SendTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SendTurn
        path: ''
        startLine: 9829
      syntax:
        content:
          CSharp: SendTurn = 0
          VB: SendTurn = 0
        return:
          type: Global.FirebasePetitionType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.FirebasePetitionType.UpdateParty
      commentId: F:Global.FirebasePetitionType.UpdateParty
      language: CSharp
      name:
        CSharp: UpdateParty
        VB: UpdateParty
      nameWithType:
        CSharp: FirebasePetitionType.UpdateParty
        VB: FirebasePetitionType.UpdateParty
      qualifiedName:
        CSharp: FirebasePetitionType.UpdateParty
        VB: FirebasePetitionType.UpdateParty
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateParty
        path: ''
        startLine: 9830
      syntax:
        content:
          CSharp: UpdateParty = 1
          VB: UpdateParty = 1
        return:
          type: Global.FirebasePetitionType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.FirebasePetitionType.Surrender
      commentId: F:Global.FirebasePetitionType.Surrender
      language: CSharp
      name:
        CSharp: Surrender
        VB: Surrender
      nameWithType:
        CSharp: FirebasePetitionType.Surrender
        VB: FirebasePetitionType.Surrender
      qualifiedName:
        CSharp: FirebasePetitionType.Surrender
        VB: FirebasePetitionType.Surrender
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Surrender
        path: ''
        startLine: 9831
      syntax:
        content:
          CSharp: Surrender = 2
          VB: Surrender = 2
        return:
          type: Global.FirebasePetitionType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.MatchData
    commentId: T:Global.MatchData
    language: CSharp
    name:
      CSharp: MatchData
      VB: MatchData
    nameWithType:
      CSharp: MatchData
      VB: MatchData
    qualifiedName:
      CSharp: MatchData
      VB: MatchData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MatchData
      path: ''
      startLine: 9872
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct MatchData
        VB: >-
          <Serializable>

          Public Structure MatchData
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.MatchData.MatchId
      commentId: F:Global.MatchData.MatchId
      language: CSharp
      name:
        CSharp: MatchId
        VB: MatchId
      nameWithType:
        CSharp: MatchData.MatchId
        VB: MatchData.MatchId
      qualifiedName:
        CSharp: MatchData.MatchId
        VB: MatchData.MatchId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MatchId
        path: ''
        startLine: 9875
      syntax:
        content:
          CSharp: public string MatchId
          VB: Public MatchId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MatchData.MatchPlayers
      commentId: F:Global.MatchData.MatchPlayers
      language: CSharp
      name:
        CSharp: MatchPlayers
        VB: MatchPlayers
      nameWithType:
        CSharp: MatchData.MatchPlayers
        VB: MatchData.MatchPlayers
      qualifiedName:
        CSharp: MatchData.MatchPlayers
        VB: MatchData.MatchPlayers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MatchPlayers
        path: ''
        startLine: 9876
      syntax:
        content:
          CSharp: public List<CombatPlayer> MatchPlayers
          VB: Public MatchPlayers As List(Of CombatPlayer)
        return:
          type: System.Collections.Generic.List{CombatPlayer}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.Shinsei
    commentId: T:Global.Shinsei
    language: CSharp
    name:
      CSharp: Shinsei
      VB: Shinsei
    nameWithType:
      CSharp: Shinsei
      VB: Shinsei
    qualifiedName:
      CSharp: Shinsei
      VB: Shinsei
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Shinsei
      path: ''
      startLine: 9886
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Shinsei
        VB: >-
          <Serializable>

          Public Class Shinsei
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.Shinsei.shinseiName
      commentId: F:Global.Shinsei.shinseiName
      language: CSharp
      name:
        CSharp: shinseiName
        VB: shinseiName
      nameWithType:
        CSharp: Shinsei.shinseiName
        VB: Shinsei.shinseiName
      qualifiedName:
        CSharp: Shinsei.shinseiName
        VB: Shinsei.shinseiName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shinseiName
        path: ''
        startLine: 9889
      syntax:
        content:
          CSharp: public string shinseiName
          VB: Public shinseiName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.ShinseiDna
      commentId: F:Global.Shinsei.ShinseiDna
      language: CSharp
      name:
        CSharp: ShinseiDna
        VB: ShinseiDna
      nameWithType:
        CSharp: Shinsei.ShinseiDna
        VB: Shinsei.ShinseiDna
      qualifiedName:
        CSharp: Shinsei.ShinseiDna
        VB: Shinsei.ShinseiDna
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShinseiDna
        path: ''
        startLine: 9890
      syntax:
        content:
          CSharp: public string ShinseiDna
          VB: Public ShinseiDna As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.generation
      commentId: F:Global.Shinsei.generation
      language: CSharp
      name:
        CSharp: generation
        VB: generation
      nameWithType:
        CSharp: Shinsei.generation
        VB: Shinsei.generation
      qualifiedName:
        CSharp: Shinsei.generation
        VB: Shinsei.generation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: generation
        path: ''
        startLine: 9891
      syntax:
        content:
          CSharp: public string generation
          VB: Public generation As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.ShinseiActionsIndex
      commentId: F:Global.Shinsei.ShinseiActionsIndex
      language: CSharp
      name:
        CSharp: ShinseiActionsIndex
        VB: ShinseiActionsIndex
      nameWithType:
        CSharp: Shinsei.ShinseiActionsIndex
        VB: Shinsei.ShinseiActionsIndex
      qualifiedName:
        CSharp: Shinsei.ShinseiActionsIndex
        VB: Shinsei.ShinseiActionsIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShinseiActionsIndex
        path: ''
        startLine: 9895
      syntax:
        content:
          CSharp: public List<int> ShinseiActionsIndex
          VB: Public ShinseiActionsIndex As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.shinseiType
      commentId: F:Global.Shinsei.shinseiType
      language: CSharp
      name:
        CSharp: shinseiType
        VB: shinseiType
      nameWithType:
        CSharp: Shinsei.shinseiType
        VB: Shinsei.shinseiType
      qualifiedName:
        CSharp: Shinsei.shinseiType
        VB: Shinsei.shinseiType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shinseiType
        path: ''
        startLine: 9896
      syntax:
        content:
          CSharp: public CharacterType shinseiType
          VB: Public shinseiType As CharacterType
        return:
          type: Global.CharacterType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.alteredStates
      commentId: F:Global.Shinsei.alteredStates
      language: CSharp
      name:
        CSharp: alteredStates
        VB: alteredStates
      nameWithType:
        CSharp: Shinsei.alteredStates
        VB: Shinsei.alteredStates
      qualifiedName:
        CSharp: Shinsei.alteredStates
        VB: Shinsei.alteredStates
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alteredStates
        path: ''
        startLine: 9897
      syntax:
        content:
          CSharp: public Dictionary<AlteredStateEnum, AlteredStateData> alteredStates
          VB: Public alteredStates As Dictionary(Of AlteredStateEnum, AlteredStateData)
        return:
          type: System.Collections.Generic.Dictionary{AlteredStateEnum,AlteredStateData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.reflectDamage
      commentId: F:Global.Shinsei.reflectDamage
      language: CSharp
      name:
        CSharp: reflectDamage
        VB: reflectDamage
      nameWithType:
        CSharp: Shinsei.reflectDamage
        VB: Shinsei.reflectDamage
      qualifiedName:
        CSharp: Shinsei.reflectDamage
        VB: Shinsei.reflectDamage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: reflectDamage
        path: ''
        startLine: 9898
      syntax:
        content:
          CSharp: public int reflectDamage
          VB: Public reflectDamage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.shinseiRarity
      commentId: F:Global.Shinsei.shinseiRarity
      language: CSharp
      name:
        CSharp: shinseiRarity
        VB: shinseiRarity
      nameWithType:
        CSharp: Shinsei.shinseiRarity
        VB: Shinsei.shinseiRarity
      qualifiedName:
        CSharp: Shinsei.shinseiRarity
        VB: Shinsei.shinseiRarity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shinseiRarity
        path: ''
        startLine: 9899
      syntax:
        content:
          CSharp: public RarityType shinseiRarity
          VB: Public shinseiRarity As RarityType
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.ShinseiOriginalStats
      commentId: F:Global.Shinsei.ShinseiOriginalStats
      language: CSharp
      name:
        CSharp: ShinseiOriginalStats
        VB: ShinseiOriginalStats
      nameWithType:
        CSharp: Shinsei.ShinseiOriginalStats
        VB: Shinsei.ShinseiOriginalStats
      qualifiedName:
        CSharp: Shinsei.ShinseiOriginalStats
        VB: Shinsei.ShinseiOriginalStats
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShinseiOriginalStats
        path: ''
        startLine: 9900
      syntax:
        content:
          CSharp: public ShinseiStats ShinseiOriginalStats
          VB: Public ShinseiOriginalStats As ShinseiStats
        return:
          type: Global.ShinseiStats
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.shinseiIcon
      commentId: F:Global.Shinsei.shinseiIcon
      language: CSharp
      name:
        CSharp: shinseiIcon
        VB: shinseiIcon
      nameWithType:
        CSharp: Shinsei.shinseiIcon
        VB: Shinsei.shinseiIcon
      qualifiedName:
        CSharp: Shinsei.shinseiIcon
        VB: Shinsei.shinseiIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shinseiIcon
        path: ''
        startLine: 9901
      syntax:
        content:
          CSharp: public Sprite shinseiIcon
          VB: Public shinseiIcon As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.shinseiHealth
      commentId: F:Global.Shinsei.shinseiHealth
      language: CSharp
      name:
        CSharp: shinseiHealth
        VB: shinseiHealth
      nameWithType:
        CSharp: Shinsei.shinseiHealth
        VB: Shinsei.shinseiHealth
      qualifiedName:
        CSharp: Shinsei.shinseiHealth
        VB: Shinsei.shinseiHealth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shinseiHealth
        path: ''
        startLine: 9903
      syntax:
        content:
          CSharp: public int shinseiHealth
          VB: Public shinseiHealth As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.shinseiEnergy
      commentId: F:Global.Shinsei.shinseiEnergy
      language: CSharp
      name:
        CSharp: shinseiEnergy
        VB: shinseiEnergy
      nameWithType:
        CSharp: Shinsei.shinseiEnergy
        VB: Shinsei.shinseiEnergy
      qualifiedName:
        CSharp: Shinsei.shinseiEnergy
        VB: Shinsei.shinseiEnergy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shinseiEnergy
        path: ''
        startLine: 9904
      syntax:
        content:
          CSharp: public int shinseiEnergy
          VB: Public shinseiEnergy As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.evadeChance
      commentId: F:Global.Shinsei.evadeChance
      language: CSharp
      name:
        CSharp: evadeChance
        VB: evadeChance
      nameWithType:
        CSharp: Shinsei.evadeChance
        VB: Shinsei.evadeChance
      qualifiedName:
        CSharp: Shinsei.evadeChance
        VB: Shinsei.evadeChance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: evadeChance
        path: ''
        startLine: 9905
      syntax:
        content:
          CSharp: public int evadeChance
          VB: Public evadeChance As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.didAlteredStateKillShinsei
      commentId: F:Global.Shinsei.didAlteredStateKillShinsei
      language: CSharp
      name:
        CSharp: didAlteredStateKillShinsei
        VB: didAlteredStateKillShinsei
      nameWithType:
        CSharp: Shinsei.didAlteredStateKillShinsei
        VB: Shinsei.didAlteredStateKillShinsei
      qualifiedName:
        CSharp: Shinsei.didAlteredStateKillShinsei
        VB: Shinsei.didAlteredStateKillShinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: didAlteredStateKillShinsei
        path: ''
        startLine: 9906
      syntax:
        content:
          CSharp: public bool didAlteredStateKillShinsei
          VB: Public didAlteredStateKillShinsei As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Shinsei.healthAfterAlteredState
      commentId: F:Global.Shinsei.healthAfterAlteredState
      language: CSharp
      name:
        CSharp: healthAfterAlteredState
        VB: healthAfterAlteredState
      nameWithType:
        CSharp: Shinsei.healthAfterAlteredState
        VB: Shinsei.healthAfterAlteredState
      qualifiedName:
        CSharp: Shinsei.healthAfterAlteredState
        VB: Shinsei.healthAfterAlteredState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: healthAfterAlteredState
        path: ''
        startLine: 9907
      syntax:
        content:
          CSharp: public int healthAfterAlteredState
          VB: Public healthAfterAlteredState As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.AlteredStateData
    commentId: T:Global.AlteredStateData
    language: CSharp
    name:
      CSharp: AlteredStateData
      VB: AlteredStateData
    nameWithType:
      CSharp: AlteredStateData
      VB: AlteredStateData
    qualifiedName:
      CSharp: AlteredStateData
      VB: AlteredStateData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AlteredStateData
      path: ''
      startLine: 9910
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class AlteredStateData
        VB: >-
          <Serializable>

          Public Class AlteredStateData
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.AlteredStateData.isTargetLocalPlayer
      commentId: F:Global.AlteredStateData.isTargetLocalPlayer
      language: CSharp
      name:
        CSharp: isTargetLocalPlayer
        VB: isTargetLocalPlayer
      nameWithType:
        CSharp: AlteredStateData.isTargetLocalPlayer
        VB: AlteredStateData.isTargetLocalPlayer
      qualifiedName:
        CSharp: AlteredStateData.isTargetLocalPlayer
        VB: AlteredStateData.isTargetLocalPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isTargetLocalPlayer
        path: ''
        startLine: 9913
      syntax:
        content:
          CSharp: public bool isTargetLocalPlayer
          VB: Public isTargetLocalPlayer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredStateData.amount
      commentId: F:Global.AlteredStateData.amount
      language: CSharp
      name:
        CSharp: amount
        VB: amount
      nameWithType:
        CSharp: AlteredStateData.amount
        VB: AlteredStateData.amount
      qualifiedName:
        CSharp: AlteredStateData.amount
        VB: AlteredStateData.amount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: amount
        path: ''
        startLine: 9914
      syntax:
        content:
          CSharp: public int amount
          VB: Public amount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredStateData.perTurns
      commentId: F:Global.AlteredStateData.perTurns
      language: CSharp
      name:
        CSharp: perTurns
        VB: perTurns
      nameWithType:
        CSharp: AlteredStateData.perTurns
        VB: AlteredStateData.perTurns
      qualifiedName:
        CSharp: AlteredStateData.perTurns
        VB: AlteredStateData.perTurns
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: perTurns
        path: ''
        startLine: 9915
      syntax:
        content:
          CSharp: public bool perTurns
          VB: Public perTurns As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredStateData.turnsDuration
      commentId: F:Global.AlteredStateData.turnsDuration
      language: CSharp
      name:
        CSharp: turnsDuration
        VB: turnsDuration
      nameWithType:
        CSharp: AlteredStateData.turnsDuration
        VB: AlteredStateData.turnsDuration
      qualifiedName:
        CSharp: AlteredStateData.turnsDuration
        VB: AlteredStateData.turnsDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: turnsDuration
        path: ''
        startLine: 9916
      syntax:
        content:
          CSharp: public int turnsDuration
          VB: Public turnsDuration As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredStateData.turnsLeft
      commentId: F:Global.AlteredStateData.turnsLeft
      language: CSharp
      name:
        CSharp: turnsLeft
        VB: turnsLeft
      nameWithType:
        CSharp: AlteredStateData.turnsLeft
        VB: AlteredStateData.turnsLeft
      qualifiedName:
        CSharp: AlteredStateData.turnsLeft
        VB: AlteredStateData.turnsLeft
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: turnsLeft
        path: ''
        startLine: 9917
      syntax:
        content:
          CSharp: public int turnsLeft
          VB: Public turnsLeft As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredStateData.HasPassedATurn
      commentId: M:Global.AlteredStateData.HasPassedATurn
      language: CSharp
      name:
        CSharp: HasPassedATurn()
        VB: HasPassedATurn()
      nameWithType:
        CSharp: AlteredStateData.HasPassedATurn()
        VB: AlteredStateData.HasPassedATurn()
      qualifiedName:
        CSharp: AlteredStateData.HasPassedATurn()
        VB: AlteredStateData.HasPassedATurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HasPassedATurn
        path: ''
        startLine: 9919
      syntax:
        content:
          CSharp: public bool HasPassedATurn()
          VB: Public Function HasPassedATurn As Boolean
        return:
          type: System.Boolean
      overload: Global.AlteredStateData.HasPassedATurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ShinseiVault
    commentId: T:Global.ShinseiVault
    language: CSharp
    name:
      CSharp: ShinseiVault
      VB: ShinseiVault
    nameWithType:
      CSharp: ShinseiVault
      VB: ShinseiVault
    qualifiedName:
      CSharp: ShinseiVault
      VB: ShinseiVault
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShinseiVault
      path: ''
      startLine: 9956
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ShinseiVault
        VB: >-
          <Serializable>

          Public Class ShinseiVault
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ShinseiVault.ShinseiVaultList
      commentId: F:Global.ShinseiVault.ShinseiVaultList
      language: CSharp
      name:
        CSharp: ShinseiVaultList
        VB: ShinseiVaultList
      nameWithType:
        CSharp: ShinseiVault.ShinseiVaultList
        VB: ShinseiVault.ShinseiVaultList
      qualifiedName:
        CSharp: ShinseiVault.ShinseiVaultList
        VB: ShinseiVault.ShinseiVaultList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShinseiVaultList
        path: ''
        startLine: 9959
      syntax:
        content:
          CSharp: public List<Shinsei> ShinseiVaultList
          VB: Public ShinseiVaultList As List(Of Shinsei)
        return:
          type: System.Collections.Generic.List{Shinsei}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BattleActionData
    commentId: T:Global.BattleActionData
    language: CSharp
    name:
      CSharp: BattleActionData
      VB: BattleActionData
    nameWithType:
      CSharp: BattleActionData
      VB: BattleActionData
    qualifiedName:
      CSharp: BattleActionData
      VB: BattleActionData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionData
      path: ''
      startLine: 10327
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class BattleActionData : ICloneable
        VB: >-
          <Serializable>

          Public Class BattleActionData

              Inherits ICloneable
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionData.actionType
      commentId: F:Global.BattleActionData.actionType
      language: CSharp
      name:
        CSharp: actionType
        VB: actionType
      nameWithType:
        CSharp: BattleActionData.actionType
        VB: BattleActionData.actionType
      qualifiedName:
        CSharp: BattleActionData.actionType
        VB: BattleActionData.actionType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: actionType
        path: ''
        startLine: 10332
      syntax:
        content:
          CSharp: public ActionTypeEnum actionType
          VB: Public actionType As ActionTypeEnum
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.perTurns
      commentId: F:Global.BattleActionData.perTurns
      language: CSharp
      name:
        CSharp: perTurns
        VB: perTurns
      nameWithType:
        CSharp: BattleActionData.perTurns
        VB: BattleActionData.perTurns
      qualifiedName:
        CSharp: BattleActionData.perTurns
        VB: BattleActionData.perTurns
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: perTurns
        path: ''
        startLine: 10333
      syntax:
        content:
          CSharp: public bool perTurns
          VB: Public perTurns As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.turnsDuration
      commentId: F:Global.BattleActionData.turnsDuration
      language: CSharp
      name:
        CSharp: turnsDuration
        VB: turnsDuration
      nameWithType:
        CSharp: BattleActionData.turnsDuration
        VB: BattleActionData.turnsDuration
      qualifiedName:
        CSharp: BattleActionData.turnsDuration
        VB: BattleActionData.turnsDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: turnsDuration
        path: ''
        startLine: 10334
      syntax:
        content:
          CSharp: public int turnsDuration
          VB: Public turnsDuration As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.amount
      commentId: F:Global.BattleActionData.amount
      language: CSharp
      name:
        CSharp: amount
        VB: amount
      nameWithType:
        CSharp: BattleActionData.amount
        VB: BattleActionData.amount
      qualifiedName:
        CSharp: BattleActionData.amount
        VB: BattleActionData.amount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: amount
        path: ''
        startLine: 10335
      syntax:
        content:
          CSharp: public int amount
          VB: Public amount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.isSelfInflicted
      commentId: F:Global.BattleActionData.isSelfInflicted
      language: CSharp
      name:
        CSharp: isSelfInflicted
        VB: isSelfInflicted
      nameWithType:
        CSharp: BattleActionData.isSelfInflicted
        VB: BattleActionData.isSelfInflicted
      qualifiedName:
        CSharp: BattleActionData.isSelfInflicted
        VB: BattleActionData.isSelfInflicted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isSelfInflicted
        path: ''
        startLine: 10336
      syntax:
        content:
          CSharp: public bool isSelfInflicted
          VB: Public isSelfInflicted As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.cardSkipTurn
      commentId: F:Global.BattleActionData.cardSkipTurn
      language: CSharp
      name:
        CSharp: cardSkipTurn
        VB: cardSkipTurn
      nameWithType:
        CSharp: BattleActionData.cardSkipTurn
        VB: BattleActionData.cardSkipTurn
      qualifiedName:
        CSharp: BattleActionData.cardSkipTurn
        VB: BattleActionData.cardSkipTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: cardSkipTurn
        path: ''
        startLine: 10337
      syntax:
        content:
          CSharp: public bool cardSkipTurn
          VB: Public cardSkipTurn As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.bonusPercent
      commentId: F:Global.BattleActionData.bonusPercent
      language: CSharp
      name:
        CSharp: bonusPercent
        VB: bonusPercent
      nameWithType:
        CSharp: BattleActionData.bonusPercent
        VB: BattleActionData.bonusPercent
      qualifiedName:
        CSharp: BattleActionData.bonusPercent
        VB: BattleActionData.bonusPercent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bonusPercent
        path: ''
        startLine: 10340
      syntax:
        content:
          CSharp: public float bonusPercent
          VB: Public bonusPercent As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.statBonusDamage
      commentId: F:Global.BattleActionData.statBonusDamage
      language: CSharp
      name:
        CSharp: statBonusDamage
        VB: statBonusDamage
      nameWithType:
        CSharp: BattleActionData.statBonusDamage
        VB: BattleActionData.statBonusDamage
      qualifiedName:
        CSharp: BattleActionData.statBonusDamage
        VB: BattleActionData.statBonusDamage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: statBonusDamage
        path: ''
        startLine: 10341
      syntax:
        content:
          CSharp: public ShinseiStatsEnum statBonusDamage
          VB: Public statBonusDamage As ShinseiStatsEnum
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.applyEachTurn
      commentId: F:Global.BattleActionData.applyEachTurn
      language: CSharp
      name:
        CSharp: applyEachTurn
        VB: applyEachTurn
      nameWithType:
        CSharp: BattleActionData.applyEachTurn
        VB: BattleActionData.applyEachTurn
      qualifiedName:
        CSharp: BattleActionData.applyEachTurn
        VB: BattleActionData.applyEachTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: applyEachTurn
        path: ''
        startLine: 10345
      syntax:
        content:
          CSharp: public bool applyEachTurn
          VB: Public applyEachTurn As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.isBuff
      commentId: F:Global.BattleActionData.isBuff
      language: CSharp
      name:
        CSharp: isBuff
        VB: isBuff
      nameWithType:
        CSharp: BattleActionData.isBuff
        VB: BattleActionData.isBuff
      qualifiedName:
        CSharp: BattleActionData.isBuff
        VB: BattleActionData.isBuff
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isBuff
        path: ''
        startLine: 10346
      syntax:
        content:
          CSharp: public bool isBuff
          VB: Public isBuff As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.isPercertange
      commentId: F:Global.BattleActionData.isPercertange
      language: CSharp
      name:
        CSharp: isPercertange
        VB: isPercertange
      nameWithType:
        CSharp: BattleActionData.isPercertange
        VB: BattleActionData.isPercertange
      qualifiedName:
        CSharp: BattleActionData.isPercertange
        VB: BattleActionData.isPercertange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isPercertange
        path: ''
        startLine: 10347
      syntax:
        content:
          CSharp: public bool isPercertange
          VB: Public isPercertange As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.statToModify
      commentId: F:Global.BattleActionData.statToModify
      language: CSharp
      name:
        CSharp: statToModify
        VB: statToModify
      nameWithType:
        CSharp: BattleActionData.statToModify
        VB: BattleActionData.statToModify
      qualifiedName:
        CSharp: BattleActionData.statToModify
        VB: BattleActionData.statToModify
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: statToModify
        path: ''
        startLine: 10348
      syntax:
        content:
          CSharp: public ShinseiStatsEnum statToModify
          VB: Public statToModify As ShinseiStatsEnum
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.numberOfTimesBuffApplied
      commentId: F:Global.BattleActionData.numberOfTimesBuffApplied
      language: CSharp
      name:
        CSharp: numberOfTimesBuffApplied
        VB: numberOfTimesBuffApplied
      nameWithType:
        CSharp: BattleActionData.numberOfTimesBuffApplied
        VB: BattleActionData.numberOfTimesBuffApplied
      qualifiedName:
        CSharp: BattleActionData.numberOfTimesBuffApplied
        VB: BattleActionData.numberOfTimesBuffApplied
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: numberOfTimesBuffApplied
        path: ''
        startLine: 10349
      syntax:
        content:
          CSharp: public int numberOfTimesBuffApplied
          VB: Public numberOfTimesBuffApplied As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.changeMinAndMaxStats
      commentId: F:Global.BattleActionData.changeMinAndMaxStats
      language: CSharp
      name:
        CSharp: changeMinAndMaxStats
        VB: changeMinAndMaxStats
      nameWithType:
        CSharp: BattleActionData.changeMinAndMaxStats
        VB: BattleActionData.changeMinAndMaxStats
      qualifiedName:
        CSharp: BattleActionData.changeMinAndMaxStats
        VB: BattleActionData.changeMinAndMaxStats
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: changeMinAndMaxStats
        path: ''
        startLine: 10353
      syntax:
        content:
          CSharp: public bool changeMinAndMaxStats
          VB: Public changeMinAndMaxStats As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.stat1
      commentId: F:Global.BattleActionData.stat1
      language: CSharp
      name:
        CSharp: stat1
        VB: stat1
      nameWithType:
        CSharp: BattleActionData.stat1
        VB: BattleActionData.stat1
      qualifiedName:
        CSharp: BattleActionData.stat1
        VB: BattleActionData.stat1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: stat1
        path: ''
        startLine: 10354
      syntax:
        content:
          CSharp: public ShinseiStatsEnum stat1
          VB: Public stat1 As ShinseiStatsEnum
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.stat2
      commentId: F:Global.BattleActionData.stat2
      language: CSharp
      name:
        CSharp: stat2
        VB: stat2
      nameWithType:
        CSharp: BattleActionData.stat2
        VB: BattleActionData.stat2
      qualifiedName:
        CSharp: BattleActionData.stat2
        VB: BattleActionData.stat2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: stat2
        path: ''
        startLine: 10355
      syntax:
        content:
          CSharp: public ShinseiStatsEnum stat2
          VB: Public stat2 As ShinseiStatsEnum
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.typeOfTerrain
      commentId: F:Global.BattleActionData.typeOfTerrain
      language: CSharp
      name:
        CSharp: typeOfTerrain
        VB: typeOfTerrain
      nameWithType:
        CSharp: BattleActionData.typeOfTerrain
        VB: BattleActionData.typeOfTerrain
      qualifiedName:
        CSharp: BattleActionData.typeOfTerrain
        VB: BattleActionData.typeOfTerrain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: typeOfTerrain
        path: ''
        startLine: 10360
      syntax:
        content:
          CSharp: public TypesOfTerrainEnum typeOfTerrain
          VB: Public typeOfTerrain As TypesOfTerrainEnum
        return:
          type: Global.TypesOfTerrainEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.alteredState
      commentId: F:Global.BattleActionData.alteredState
      language: CSharp
      name:
        CSharp: alteredState
        VB: alteredState
      nameWithType:
        CSharp: BattleActionData.alteredState
        VB: BattleActionData.alteredState
      qualifiedName:
        CSharp: BattleActionData.alteredState
        VB: BattleActionData.alteredState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alteredState
        path: ''
        startLine: 10364
      syntax:
        content:
          CSharp: public AlteredStateEnum alteredState
          VB: Public alteredState As AlteredStateEnum
        return:
          type: Global.AlteredStateEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.activateAlteredState
      commentId: F:Global.BattleActionData.activateAlteredState
      language: CSharp
      name:
        CSharp: activateAlteredState
        VB: activateAlteredState
      nameWithType:
        CSharp: BattleActionData.activateAlteredState
        VB: BattleActionData.activateAlteredState
      qualifiedName:
        CSharp: BattleActionData.activateAlteredState
        VB: BattleActionData.activateAlteredState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: activateAlteredState
        path: ''
        startLine: 10369
      syntax:
        content:
          CSharp: public bool activateAlteredState
          VB: Public activateAlteredState As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.alteredStateToActivate
      commentId: F:Global.BattleActionData.alteredStateToActivate
      language: CSharp
      name:
        CSharp: alteredStateToActivate
        VB: alteredStateToActivate
      nameWithType:
        CSharp: BattleActionData.alteredStateToActivate
        VB: BattleActionData.alteredStateToActivate
      qualifiedName:
        CSharp: BattleActionData.alteredStateToActivate
        VB: BattleActionData.alteredStateToActivate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alteredStateToActivate
        path: ''
        startLine: 10370
      syntax:
        content:
          CSharp: public AlteredStateEnum alteredStateToActivate
          VB: Public alteredStateToActivate As AlteredStateEnum
        return:
          type: Global.AlteredStateEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.criticsPercentChange
      commentId: F:Global.BattleActionData.criticsPercentChange
      language: CSharp
      name:
        CSharp: criticsPercentChange
        VB: criticsPercentChange
      nameWithType:
        CSharp: BattleActionData.criticsPercentChange
        VB: BattleActionData.criticsPercentChange
      qualifiedName:
        CSharp: BattleActionData.criticsPercentChange
        VB: BattleActionData.criticsPercentChange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: criticsPercentChange
        path: ''
        startLine: 10372
      syntax:
        content:
          CSharp: public int criticsPercentChange
          VB: Public criticsPercentChange As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.actionElementType
      commentId: F:Global.BattleActionData.actionElementType
      language: CSharp
      name:
        CSharp: actionElementType
        VB: actionElementType
      nameWithType:
        CSharp: BattleActionData.actionElementType
        VB: BattleActionData.actionElementType
      qualifiedName:
        CSharp: BattleActionData.actionElementType
        VB: BattleActionData.actionElementType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: actionElementType
        path: ''
        startLine: 10376
      syntax:
        content:
          CSharp: public CharacterType actionElementType
          VB: Public actionElementType As CharacterType
        return:
          type: Global.CharacterType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.criticsRoll
      commentId: F:Global.BattleActionData.criticsRoll
      language: CSharp
      name:
        CSharp: criticsRoll
        VB: criticsRoll
      nameWithType:
        CSharp: BattleActionData.criticsRoll
        VB: BattleActionData.criticsRoll
      qualifiedName:
        CSharp: BattleActionData.criticsRoll
        VB: BattleActionData.criticsRoll
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: criticsRoll
        path: ''
        startLine: 10377
      syntax:
        content:
          CSharp: public float criticsRoll
          VB: Public criticsRoll As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.evadeRoll
      commentId: F:Global.BattleActionData.evadeRoll
      language: CSharp
      name:
        CSharp: evadeRoll
        VB: evadeRoll
      nameWithType:
        CSharp: BattleActionData.evadeRoll
        VB: BattleActionData.evadeRoll
      qualifiedName:
        CSharp: BattleActionData.evadeRoll
        VB: BattleActionData.evadeRoll
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: evadeRoll
        path: ''
        startLine: 10378
      syntax:
        content:
          CSharp: public float evadeRoll
          VB: Public evadeRoll As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.turnsPassed
      commentId: F:Global.BattleActionData.turnsPassed
      language: CSharp
      name:
        CSharp: turnsPassed
        VB: turnsPassed
      nameWithType:
        CSharp: BattleActionData.turnsPassed
        VB: BattleActionData.turnsPassed
      qualifiedName:
        CSharp: BattleActionData.turnsPassed
        VB: BattleActionData.turnsPassed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: turnsPassed
        path: ''
        startLine: 10379
      syntax:
        content:
          CSharp: public int turnsPassed
          VB: Public turnsPassed As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.evadedTurns
      commentId: F:Global.BattleActionData.evadedTurns
      language: CSharp
      name:
        CSharp: evadedTurns
        VB: evadedTurns
      nameWithType:
        CSharp: BattleActionData.evadedTurns
        VB: BattleActionData.evadedTurns
      qualifiedName:
        CSharp: BattleActionData.evadedTurns
        VB: BattleActionData.evadedTurns
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: evadedTurns
        path: ''
        startLine: 10380
      syntax:
        content:
          CSharp: public int evadedTurns
          VB: Public evadedTurns As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.isVfxReversed
      commentId: F:Global.BattleActionData.isVfxReversed
      language: CSharp
      name:
        CSharp: isVfxReversed
        VB: isVfxReversed
      nameWithType:
        CSharp: BattleActionData.isVfxReversed
        VB: BattleActionData.isVfxReversed
      qualifiedName:
        CSharp: BattleActionData.isVfxReversed
        VB: BattleActionData.isVfxReversed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isVfxReversed
        path: ''
        startLine: 10382
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public bool isVfxReversed
          VB: >-
            <NonSerialized>

            Public isVfxReversed As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.launchVfx
      commentId: F:Global.BattleActionData.launchVfx
      language: CSharp
      name:
        CSharp: launchVfx
        VB: launchVfx
      nameWithType:
        CSharp: BattleActionData.launchVfx
        VB: BattleActionData.launchVfx
      qualifiedName:
        CSharp: BattleActionData.launchVfx
        VB: BattleActionData.launchVfx
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: launchVfx
        path: ''
        startLine: 10383
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public bool launchVfx
          VB: >-
            <NonSerialized>

            Public launchVfx As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.vfxAffectBoth
      commentId: F:Global.BattleActionData.vfxAffectBoth
      language: CSharp
      name:
        CSharp: vfxAffectBoth
        VB: vfxAffectBoth
      nameWithType:
        CSharp: BattleActionData.vfxAffectBoth
        VB: BattleActionData.vfxAffectBoth
      qualifiedName:
        CSharp: BattleActionData.vfxAffectBoth
        VB: BattleActionData.vfxAffectBoth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: vfxAffectBoth
        path: ''
        startLine: 10384
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public bool vfxAffectBoth
          VB: >-
            <NonSerialized>

            Public vfxAffectBoth As Boolean
        return:
          type: System.Boolean
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.casterAnim
      commentId: F:Global.BattleActionData.casterAnim
      language: CSharp
      name:
        CSharp: casterAnim
        VB: casterAnim
      nameWithType:
        CSharp: BattleActionData.casterAnim
        VB: BattleActionData.casterAnim
      qualifiedName:
        CSharp: BattleActionData.casterAnim
        VB: BattleActionData.casterAnim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: casterAnim
        path: ''
        startLine: 10385
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public AttacksAnimation casterAnim
          VB: >-
            <NonSerialized>

            Public casterAnim As AttacksAnimation
        return:
          type: Global.AttacksAnimation
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.targetAnim
      commentId: F:Global.BattleActionData.targetAnim
      language: CSharp
      name:
        CSharp: targetAnim
        VB: targetAnim
      nameWithType:
        CSharp: BattleActionData.targetAnim
        VB: BattleActionData.targetAnim
      qualifiedName:
        CSharp: BattleActionData.targetAnim
        VB: BattleActionData.targetAnim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: targetAnim
        path: ''
        startLine: 10386
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public AttacksAnimation targetAnim
          VB: >-
            <NonSerialized>

            Public targetAnim As AttacksAnimation
        return:
          type: Global.AttacksAnimation
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.turnActions
      commentId: F:Global.BattleActionData.turnActions
      language: CSharp
      name:
        CSharp: turnActions
        VB: turnActions
      nameWithType:
        CSharp: BattleActionData.turnActions
        VB: BattleActionData.turnActions
      qualifiedName:
        CSharp: BattleActionData.turnActions
        VB: BattleActionData.turnActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: turnActions
        path: ''
        startLine: 10387
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public ActionCardDto turnActions
          VB: >-
            <NonSerialized>

            Public turnActions As ActionCardDto
        return:
          type: Global.ActionCardDto
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.vfxIndex
      commentId: F:Global.BattleActionData.vfxIndex
      language: CSharp
      name:
        CSharp: vfxIndex
        VB: vfxIndex
      nameWithType:
        CSharp: BattleActionData.vfxIndex
        VB: BattleActionData.vfxIndex
      qualifiedName:
        CSharp: BattleActionData.vfxIndex
        VB: BattleActionData.vfxIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: vfxIndex
        path: ''
        startLine: 10389
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public int vfxIndex
          VB: >-
            <NonSerialized>

            Public vfxIndex As Integer
        return:
          type: System.Int32
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.vfxTime
      commentId: F:Global.BattleActionData.vfxTime
      language: CSharp
      name:
        CSharp: vfxTime
        VB: vfxTime
      nameWithType:
        CSharp: BattleActionData.vfxTime
        VB: BattleActionData.vfxTime
      qualifiedName:
        CSharp: BattleActionData.vfxTime
        VB: BattleActionData.vfxTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: vfxTime
        path: ''
        startLine: 10390
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public float vfxTime
          VB: >-
            <NonSerialized>

            Public vfxTime As Single
        return:
          type: System.Single
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.copiedIndex
      commentId: F:Global.BattleActionData.copiedIndex
      language: CSharp
      name:
        CSharp: copiedIndex
        VB: copiedIndex
      nameWithType:
        CSharp: BattleActionData.copiedIndex
        VB: BattleActionData.copiedIndex
      qualifiedName:
        CSharp: BattleActionData.copiedIndex
        VB: BattleActionData.copiedIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: copiedIndex
        path: ''
        startLine: 10391
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public int copiedIndex
          VB: >-
            <NonSerialized>

            Public copiedIndex As Integer
        return:
          type: System.Int32
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.isComingFromCopyIndex
      commentId: F:Global.BattleActionData.isComingFromCopyIndex
      language: CSharp
      name:
        CSharp: isComingFromCopyIndex
        VB: isComingFromCopyIndex
      nameWithType:
        CSharp: BattleActionData.isComingFromCopyIndex
        VB: BattleActionData.isComingFromCopyIndex
      qualifiedName:
        CSharp: BattleActionData.isComingFromCopyIndex
        VB: BattleActionData.isComingFromCopyIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isComingFromCopyIndex
        path: ''
        startLine: 10392
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public int isComingFromCopyIndex
          VB: >-
            <NonSerialized>

            Public isComingFromCopyIndex As Integer
        return:
          type: System.Int32
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.currentVFXPositions
      commentId: F:Global.BattleActionData.currentVFXPositions
      language: CSharp
      name:
        CSharp: currentVFXPositions
        VB: currentVFXPositions
      nameWithType:
        CSharp: BattleActionData.currentVFXPositions
        VB: BattleActionData.currentVFXPositions
      qualifiedName:
        CSharp: BattleActionData.currentVFXPositions
        VB: BattleActionData.currentVFXPositions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentVFXPositions
        path: ''
        startLine: 10393
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public Dictionary<VFXPositionEnum, Transform> currentVFXPositions
          VB: >-
            <NonSerialized>

            Public currentVFXPositions As Dictionary(Of VFXPositionEnum, Transform)
        return:
          type: System.Collections.Generic.Dictionary{VFXPositionEnum,Transform}
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionData.Clone
      commentId: M:Global.BattleActionData.Clone
      language: CSharp
      name:
        CSharp: Clone()
        VB: Clone()
      nameWithType:
        CSharp: BattleActionData.Clone()
        VB: BattleActionData.Clone()
      qualifiedName:
        CSharp: BattleActionData.Clone()
        VB: BattleActionData.Clone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Clone
        path: ''
        startLine: 10397
      syntax:
        content:
          CSharp: public object Clone()
          VB: Public Function Clone As Object
        return:
          type: System.Object
      overload: Global.BattleActionData.Clone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ShouldSerializeContractResolver
    commentId: T:Global.ShouldSerializeContractResolver
    language: CSharp
    name:
      CSharp: ShouldSerializeContractResolver
      VB: ShouldSerializeContractResolver
    nameWithType:
      CSharp: ShouldSerializeContractResolver
      VB: ShouldSerializeContractResolver
    qualifiedName:
      CSharp: ShouldSerializeContractResolver
      VB: ShouldSerializeContractResolver
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShouldSerializeContractResolver
      path: ''
      startLine: 10403
    syntax:
      content:
        CSharp: 'public class ShouldSerializeContractResolver : DefaultContractResolver'
        VB: >-
          Public Class ShouldSerializeContractResolver

              Inherits DefaultContractResolver
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ShouldSerializeContractResolver.Instance
      commentId: F:Global.ShouldSerializeContractResolver.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: ShouldSerializeContractResolver.Instance
        VB: ShouldSerializeContractResolver.Instance
      qualifiedName:
        CSharp: ShouldSerializeContractResolver.Instance
        VB: ShouldSerializeContractResolver.Instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Instance
        path: ''
        startLine: 10405
      syntax:
        content:
          CSharp: public static readonly ShouldSerializeContractResolver Instance
          VB: Public Shared ReadOnly Instance As ShouldSerializeContractResolver
        return:
          type: Global.ShouldSerializeContractResolver
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Global.ShouldSerializeContractResolver.CreateProperty(MemberInfo,MemberSerialization)
      commentId: M:Global.ShouldSerializeContractResolver.CreateProperty(MemberInfo,MemberSerialization)
      language: CSharp
      name:
        CSharp: CreateProperty(MemberInfo, MemberSerialization)
        VB: CreateProperty(MemberInfo, MemberSerialization)
      nameWithType:
        CSharp: ShouldSerializeContractResolver.CreateProperty(MemberInfo, MemberSerialization)
        VB: ShouldSerializeContractResolver.CreateProperty(MemberInfo, MemberSerialization)
      qualifiedName:
        CSharp: ShouldSerializeContractResolver.CreateProperty(MemberInfo, MemberSerialization)
        VB: ShouldSerializeContractResolver.CreateProperty(MemberInfo, MemberSerialization)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CreateProperty
        path: ''
        startLine: 10407
      syntax:
        content:
          CSharp: protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization)
          VB: Protected Overrides Function CreateProperty(member As MemberInfo, memberSerialization As MemberSerialization) As JsonProperty
        parameters:
        - id: member
          type: Global.MemberInfo
        - id: memberSerialization
          type: Global.MemberSerialization
        return:
          type: Global.JsonProperty
      overload: Global.ShouldSerializeContractResolver.CreateProperty*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: Global.BattleActionsBase
    commentId: T:Global.BattleActionsBase
    language: CSharp
    name:
      CSharp: BattleActionsBase
      VB: BattleActionsBase
    nameWithType:
      CSharp: BattleActionsBase
      VB: BattleActionsBase
    qualifiedName:
      CSharp: BattleActionsBase
      VB: BattleActionsBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionsBase
      path: ''
      startLine: 10488
    syntax:
      content:
        CSharp: 'public abstract class BattleActionsBase : MonoBehaviour'
        VB: >-
          Public MustInherit Class BattleActionsBase

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Global.BattleActionsBase.actionType
      commentId: F:Global.BattleActionsBase.actionType
      language: CSharp
      name:
        CSharp: actionType
        VB: actionType
      nameWithType:
        CSharp: BattleActionsBase.actionType
        VB: BattleActionsBase.actionType
      qualifiedName:
        CSharp: BattleActionsBase.actionType
        VB: BattleActionsBase.actionType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: actionType
        path: ''
        startLine: 10490
      syntax:
        content:
          CSharp: public ActionTypeEnum actionType
          VB: Public actionType As ActionTypeEnum
        return:
          type: Global.ActionTypeEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionsBase.camManager
      commentId: F:Global.BattleActionsBase.camManager
      language: CSharp
      name:
        CSharp: camManager
        VB: camManager
      nameWithType:
        CSharp: BattleActionsBase.camManager
        VB: BattleActionsBase.camManager
      qualifiedName:
        CSharp: BattleActionsBase.camManager
        VB: BattleActionsBase.camManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: camManager
        path: ''
        startLine: 10492
      syntax:
        content:
          CSharp: protected CameraPlaneController camManager
          VB: Protected camManager As CameraPlaneController
        return:
          type: Global.CameraPlaneController
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleActionsBase.vFXInstancer
      commentId: F:Global.BattleActionsBase.vFXInstancer
      language: CSharp
      name:
        CSharp: vFXInstancer
        VB: vFXInstancer
      nameWithType:
        CSharp: BattleActionsBase.vFXInstancer
        VB: BattleActionsBase.vFXInstancer
      qualifiedName:
        CSharp: BattleActionsBase.vFXInstancer
        VB: BattleActionsBase.vFXInstancer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: vFXInstancer
        path: ''
        startLine: 10493
      syntax:
        content:
          CSharp: protected VFXInstancer vFXInstancer
          VB: Protected vFXInstancer As VFXInstancer
        return:
          type: Global.VFXInstancer
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleActionsBase.battleGameMode
      commentId: F:Global.BattleActionsBase.battleGameMode
      language: CSharp
      name:
        CSharp: battleGameMode
        VB: battleGameMode
      nameWithType:
        CSharp: BattleActionsBase.battleGameMode
        VB: BattleActionsBase.battleGameMode
      qualifiedName:
        CSharp: BattleActionsBase.battleGameMode
        VB: BattleActionsBase.battleGameMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: battleGameMode
        path: ''
        startLine: 10494
      syntax:
        content:
          CSharp: protected BattleGameMode battleGameMode
          VB: Protected battleGameMode As BattleGameMode
        return:
          type: Global.BattleGameMode
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleActionsBase.battleUIController
      commentId: F:Global.BattleActionsBase.battleUIController
      language: CSharp
      name:
        CSharp: battleUIController
        VB: battleUIController
      nameWithType:
        CSharp: BattleActionsBase.battleUIController
        VB: BattleActionsBase.battleUIController
      qualifiedName:
        CSharp: BattleActionsBase.battleUIController
        VB: BattleActionsBase.battleUIController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: battleUIController
        path: ''
        startLine: 10495
      syntax:
        content:
          CSharp: protected BattleUIController battleUIController
          VB: Protected battleUIController As BattleUIController
        return:
          type: Global.BattleUIController
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleActionsBase.shinseiTypeScriptable
      commentId: F:Global.BattleActionsBase.shinseiTypeScriptable
      language: CSharp
      name:
        CSharp: shinseiTypeScriptable
        VB: shinseiTypeScriptable
      nameWithType:
        CSharp: BattleActionsBase.shinseiTypeScriptable
        VB: BattleActionsBase.shinseiTypeScriptable
      qualifiedName:
        CSharp: BattleActionsBase.shinseiTypeScriptable
        VB: BattleActionsBase.shinseiTypeScriptable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shinseiTypeScriptable
        path: ''
        startLine: 10496
      syntax:
        content:
          CSharp: protected ShinseiTypeScriptable shinseiTypeScriptable
          VB: Protected shinseiTypeScriptable As ShinseiTypeScriptable
        return:
          type: Global.ShinseiTypeScriptable
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleActionsBase.launchVfx
      commentId: F:Global.BattleActionsBase.launchVfx
      language: CSharp
      name:
        CSharp: launchVfx
        VB: launchVfx
      nameWithType:
        CSharp: BattleActionsBase.launchVfx
        VB: BattleActionsBase.launchVfx
      qualifiedName:
        CSharp: BattleActionsBase.launchVfx
        VB: BattleActionsBase.launchVfx
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: launchVfx
        path: ''
        startLine: 10497
      syntax:
        content:
          CSharp: protected bool launchVfx
          VB: Protected launchVfx As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleActionsBase.vfxTime
      commentId: F:Global.BattleActionsBase.vfxTime
      language: CSharp
      name:
        CSharp: vfxTime
        VB: vfxTime
      nameWithType:
        CSharp: BattleActionsBase.vfxTime
        VB: BattleActionsBase.vfxTime
      qualifiedName:
        CSharp: BattleActionsBase.vfxTime
        VB: BattleActionsBase.vfxTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: vfxTime
        path: ''
        startLine: 10498
      syntax:
        content:
          CSharp: protected float vfxTime
          VB: Protected vfxTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleActionsBase.actionTime
      commentId: F:Global.BattleActionsBase.actionTime
      language: CSharp
      name:
        CSharp: actionTime
        VB: actionTime
      nameWithType:
        CSharp: BattleActionsBase.actionTime
        VB: BattleActionsBase.actionTime
      qualifiedName:
        CSharp: BattleActionsBase.actionTime
        VB: BattleActionsBase.actionTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: actionTime
        path: ''
        startLine: 10499
      syntax:
        content:
          CSharp: protected float actionTime
          VB: Protected actionTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleActionsBase.targetName
      commentId: F:Global.BattleActionsBase.targetName
      language: CSharp
      name:
        CSharp: targetName
        VB: targetName
      nameWithType:
        CSharp: BattleActionsBase.targetName
        VB: BattleActionsBase.targetName
      qualifiedName:
        CSharp: BattleActionsBase.targetName
        VB: BattleActionsBase.targetName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: targetName
        path: ''
        startLine: 10500
      syntax:
        content:
          CSharp: protected string targetName
          VB: Protected targetName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
      commentId: M:Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
      language: CSharp
      name:
        CSharp: Init(CameraPlaneController, VFXInstancer, BattleGameMode, BattleUIController, ShinseiTypeScriptable)
        VB: Init(CameraPlaneController, VFXInstancer, BattleGameMode, BattleUIController, ShinseiTypeScriptable)
      nameWithType:
        CSharp: BattleActionsBase.Init(CameraPlaneController, VFXInstancer, BattleGameMode, BattleUIController, ShinseiTypeScriptable)
        VB: BattleActionsBase.Init(CameraPlaneController, VFXInstancer, BattleGameMode, BattleUIController, ShinseiTypeScriptable)
      qualifiedName:
        CSharp: BattleActionsBase.Init(CameraPlaneController, VFXInstancer, BattleGameMode, BattleUIController, ShinseiTypeScriptable)
        VB: BattleActionsBase.Init(CameraPlaneController, VFXInstancer, BattleGameMode, BattleUIController, ShinseiTypeScriptable)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Init
        path: ''
        startLine: 10502
      syntax:
        content:
          CSharp: public virtual void Init(CameraPlaneController _camManager, VFXInstancer _vFXInstancer, BattleGameMode _battleGameMode, BattleUIController _battleUIController, ShinseiTypeScriptable _shinseiTypeScriptable)
          VB: Public Overridable Sub Init(_camManager As CameraPlaneController, _vFXInstancer As VFXInstancer, _battleGameMode As BattleGameMode, _battleUIController As BattleUIController, _shinseiTypeScriptable As ShinseiTypeScriptable)
        parameters:
        - id: _camManager
          type: Global.CameraPlaneController
        - id: _vFXInstancer
          type: Global.VFXInstancer
        - id: _battleGameMode
          type: Global.BattleGameMode
        - id: _battleUIController
          type: Global.BattleUIController
        - id: _shinseiTypeScriptable
          type: Global.ShinseiTypeScriptable
      overload: Global.BattleActionsBase.Init*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionsBase.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionsBase.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionsBase.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionsBase.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 10511
      syntax:
        content:
          CSharp: public virtual void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData battleActionData, Action onEndVfxCallback = null)
          VB: Public Overridable Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, battleActionData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: battleActionData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionsBase.ExecuteAction*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.BattleActionsBase.CheckAction(System.Single,Action)
      commentId: M:Global.BattleActionsBase.CheckAction(System.Single,Action)
      language: CSharp
      name:
        CSharp: CheckAction(Single, Action)
        VB: CheckAction(Single, Action)
      nameWithType:
        CSharp: BattleActionsBase.CheckAction(Single, Action)
        VB: BattleActionsBase.CheckAction(Single, Action)
      qualifiedName:
        CSharp: BattleActionsBase.CheckAction(System.Single, Action)
        VB: BattleActionsBase.CheckAction(System.Single, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckAction
        path: ''
        startLine: 10549
      syntax:
        content:
          CSharp: public IEnumerator CheckAction(float time, Action onEndVfxCallback)
          VB: Public Function CheckAction(time As Single, onEndVfxCallback As Action) As IEnumerator
        parameters:
        - id: time
          type: System.Single
        - id: onEndVfxCallback
          type: Global.Action
        return:
          type: System.Collections.IEnumerator
      overload: Global.BattleActionsBase.CheckAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
      commentId: M:Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
      language: CSharp
      name:
        CSharp: DecideIndexes(out VFXPositionEnum, out VFXPositionEnum, out CamerasAvailableEnum, out CamerasAvailableEnum, Boolean, BattleActionData)
        VB: DecideIndexes(ByRef VFXPositionEnum, ByRef VFXPositionEnum, ByRef CamerasAvailableEnum, ByRef CamerasAvailableEnum, Boolean, BattleActionData)
      nameWithType:
        CSharp: BattleActionsBase.DecideIndexes(out VFXPositionEnum, out VFXPositionEnum, out CamerasAvailableEnum, out CamerasAvailableEnum, Boolean, BattleActionData)
        VB: BattleActionsBase.DecideIndexes(ByRef VFXPositionEnum, ByRef VFXPositionEnum, ByRef CamerasAvailableEnum, ByRef CamerasAvailableEnum, Boolean, BattleActionData)
      qualifiedName:
        CSharp: BattleActionsBase.DecideIndexes(out VFXPositionEnum, out VFXPositionEnum, out CamerasAvailableEnum, out CamerasAvailableEnum, System.Boolean, BattleActionData)
        VB: BattleActionsBase.DecideIndexes(ByRef VFXPositionEnum, ByRef VFXPositionEnum, ByRef CamerasAvailableEnum, ByRef CamerasAvailableEnum, System.Boolean, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DecideIndexes
        path: ''
        startLine: 10676
      syntax:
        content:
          CSharp: public void DecideIndexes(out VFXPositionEnum ownerPositionIndexForMuzzle, out VFXPositionEnum targetPositionIndex, out CamerasAvailableEnum lookAtShinseiCam, out CamerasAvailableEnum lookAtOtherShinseiCam, bool isLocal, BattleActionData battleActionData)
          VB: Public Sub DecideIndexes(ByRef ownerPositionIndexForMuzzle As VFXPositionEnum, ByRef targetPositionIndex As VFXPositionEnum, ByRef lookAtShinseiCam As CamerasAvailableEnum, ByRef lookAtOtherShinseiCam As CamerasAvailableEnum, isLocal As Boolean, battleActionData As BattleActionData)
        parameters:
        - id: ownerPositionIndexForMuzzle
          type: Global.VFXPositionEnum
        - id: targetPositionIndex
          type: Global.VFXPositionEnum
        - id: lookAtShinseiCam
          type: Global.CamerasAvailableEnum
        - id: lookAtOtherShinseiCam
          type: Global.CamerasAvailableEnum
        - id: isLocal
          type: System.Boolean
        - id: battleActionData
          type: Global.BattleActionData
      overload: Global.BattleActionsBase.DecideIndexes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionsBase.ShowBothShinseisFar
      commentId: M:Global.BattleActionsBase.ShowBothShinseisFar
      language: CSharp
      name:
        CSharp: ShowBothShinseisFar()
        VB: ShowBothShinseisFar()
      nameWithType:
        CSharp: BattleActionsBase.ShowBothShinseisFar()
        VB: BattleActionsBase.ShowBothShinseisFar()
      qualifiedName:
        CSharp: BattleActionsBase.ShowBothShinseisFar()
        VB: BattleActionsBase.ShowBothShinseisFar()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShowBothShinseisFar
        path: ''
        startLine: 10692
      syntax:
        content:
          CSharp: public void ShowBothShinseisFar()
          VB: Public Sub ShowBothShinseisFar
      overload: Global.BattleActionsBase.ShowBothShinseisFar*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
      commentId: M:Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
      language: CSharp
      name:
        CSharp: PlayAnimation(UserInfo, AttacksAnimation, Boolean, BattleActionData)
        VB: PlayAnimation(UserInfo, AttacksAnimation, Boolean, BattleActionData)
      nameWithType:
        CSharp: BattleActionsBase.PlayAnimation(UserInfo, AttacksAnimation, Boolean, BattleActionData)
        VB: BattleActionsBase.PlayAnimation(UserInfo, AttacksAnimation, Boolean, BattleActionData)
      qualifiedName:
        CSharp: BattleActionsBase.PlayAnimation(UserInfo, AttacksAnimation, System.Boolean, BattleActionData)
        VB: BattleActionsBase.PlayAnimation(UserInfo, AttacksAnimation, System.Boolean, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PlayAnimation
        path: ''
        startLine: 10698
      syntax:
        content:
          CSharp: public void PlayAnimation(UserInfo targetInfo, AttacksAnimation animation, bool isLocalPlayer, BattleActionData battleActionData)
          VB: Public Sub PlayAnimation(targetInfo As UserInfo, animation As AttacksAnimation, isLocalPlayer As Boolean, battleActionData As BattleActionData)
        parameters:
        - id: targetInfo
          type: Global.UserInfo
        - id: animation
          type: Global.AttacksAnimation
        - id: isLocalPlayer
          type: System.Boolean
        - id: battleActionData
          type: Global.BattleActionData
      overload: Global.BattleActionsBase.PlayAnimation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionsBase.ActionTime
      commentId: M:Global.BattleActionsBase.ActionTime
      language: CSharp
      name:
        CSharp: ActionTime()
        VB: ActionTime()
      nameWithType:
        CSharp: BattleActionsBase.ActionTime()
        VB: BattleActionsBase.ActionTime()
      qualifiedName:
        CSharp: BattleActionsBase.ActionTime()
        VB: BattleActionsBase.ActionTime()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ActionTime
        path: ''
        startLine: 10740
      syntax:
        content:
          CSharp: public virtual float ActionTime()
          VB: Public Overridable Function ActionTime As Single
        return:
          type: System.Single
      overload: Global.BattleActionsBase.ActionTime*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      commentId: M:Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      language: CSharp
      name:
        CSharp: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      nameWithType:
        CSharp: BattleActionsBase.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionsBase.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      qualifiedName:
        CSharp: BattleActionsBase.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionsBase.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 10745
      syntax:
        content:
          CSharp: public virtual void EndAction(bool isLocalPlayer, UserInfo ownerPlayerAction, UserInfo otherPlayer, BattleActionData battleActionData)
          VB: Public Overridable Sub EndAction(isLocalPlayer As Boolean, ownerPlayerAction As UserInfo, otherPlayer As UserInfo, battleActionData As BattleActionData)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayerAction
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: battleActionData
          type: Global.BattleActionData
      overload: Global.BattleActionsBase.EndAction*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Global.BattleActionsBaseTemplate
    commentId: T:Global.BattleActionsBaseTemplate
    language: CSharp
    name:
      CSharp: BattleActionsBaseTemplate
      VB: BattleActionsBaseTemplate
    nameWithType:
      CSharp: BattleActionsBaseTemplate
      VB: BattleActionsBaseTemplate
    qualifiedName:
      CSharp: BattleActionsBaseTemplate
      VB: BattleActionsBaseTemplate
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionsBaseTemplate
      path: ''
      startLine: 10757
    syntax:
      content:
        CSharp: 'public class BattleActionsBaseTemplate : BattleActionsBase'
        VB: >-
          Public Class BattleActionsBaseTemplate

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ActionTime
    - Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.BattleActionBlockCard
    commentId: T:Global.BattleActionBlockCard
    language: CSharp
    name:
      CSharp: BattleActionBlockCard
      VB: BattleActionBlockCard
    nameWithType:
      CSharp: BattleActionBlockCard
      VB: BattleActionBlockCard
    qualifiedName:
      CSharp: BattleActionBlockCard
      VB: BattleActionBlockCard
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionBlockCard
      path: ''
      startLine: 10767
    syntax:
      content:
        CSharp: 'public class BattleActionBlockCard : BattleActionsBase'
        VB: >-
          Public Class BattleActionBlockCard

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ActionTime
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionBlockCard.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionBlockCard.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionBlockCard.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionBlockCard.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionBlockCard.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionBlockCard.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 10769
      syntax:
        content:
          CSharp: public override void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData battleActionData, Action onEndVfxCallback = null)
          VB: Public Overrides Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, battleActionData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: battleActionData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionBlockCard.ExecuteAction*
      overridden: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleActionBlockCard.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      commentId: M:Global.BattleActionBlockCard.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      language: CSharp
      name:
        CSharp: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      nameWithType:
        CSharp: BattleActionBlockCard.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionBlockCard.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      qualifiedName:
        CSharp: BattleActionBlockCard.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionBlockCard.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 10775
      syntax:
        content:
          CSharp: public override void EndAction(bool isLocalPlayer, UserInfo ownerPlayerAction, UserInfo otherPlayer, BattleActionData battleActionData)
          VB: Public Overrides Sub EndAction(isLocalPlayer As Boolean, ownerPlayerAction As UserInfo, otherPlayer As UserInfo, battleActionData As BattleActionData)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayerAction
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: battleActionData
          type: Global.BattleActionData
      overload: Global.BattleActionBlockCard.EndAction*
      overridden: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleActionBuffDebuff
    commentId: T:Global.BattleActionBuffDebuff
    language: CSharp
    name:
      CSharp: BattleActionBuffDebuff
      VB: BattleActionBuffDebuff
    nameWithType:
      CSharp: BattleActionBuffDebuff
      VB: BattleActionBuffDebuff
    qualifiedName:
      CSharp: BattleActionBuffDebuff
      VB: BattleActionBuffDebuff
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionBuffDebuff
      path: ''
      startLine: 10791
    summary: "\nLogic that allow change value of stats in combat\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleActionBuffDebuff : BattleActionsBase'
        VB: >-
          Public Class BattleActionBuffDebuff

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ActionTime
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionBuffDebuff.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionBuffDebuff.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionBuffDebuff.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionBuffDebuff.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionBuffDebuff.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionBuffDebuff.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 10793
      syntax:
        content:
          CSharp: public override void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData buffDebuffData, Action onEndVfxCallback = null)
          VB: Public Overrides Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, buffDebuffData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: buffDebuffData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionBuffDebuff.ExecuteAction*
      overridden: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleActionBuffDebuff.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      commentId: M:Global.BattleActionBuffDebuff.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      language: CSharp
      name:
        CSharp: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      nameWithType:
        CSharp: BattleActionBuffDebuff.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionBuffDebuff.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      qualifiedName:
        CSharp: BattleActionBuffDebuff.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionBuffDebuff.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 10822
      syntax:
        content:
          CSharp: public override void EndAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData buffDebuffData)
          VB: Public Overrides Sub EndAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, buffDebuffData As BattleActionData)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: buffDebuffData
          type: Global.BattleActionData
      overload: Global.BattleActionBuffDebuff.EndAction*
      overridden: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleActionChangeShinsei
    commentId: T:Global.BattleActionChangeShinsei
    language: CSharp
    name:
      CSharp: BattleActionChangeShinsei
      VB: BattleActionChangeShinsei
    nameWithType:
      CSharp: BattleActionChangeShinsei
      VB: BattleActionChangeShinsei
    qualifiedName:
      CSharp: BattleActionChangeShinsei
      VB: BattleActionChangeShinsei
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionChangeShinsei
      path: ''
      startLine: 10863
    summary: "\nLogic of action that allow you change shinsei in combat\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleActionChangeShinsei : BattleActionsBase'
        VB: >-
          Public Class BattleActionChangeShinsei

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionChangeShinsei.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionChangeShinsei.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionChangeShinsei.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionChangeShinsei.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionChangeShinsei.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionChangeShinsei.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 10866
      syntax:
        content:
          CSharp: public override void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayerAction, UserInfo otherPlayer, BattleActionData battleActionData, Action onEndVfxCallback = null)
          VB: Public Overrides Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayerAction As UserInfo, otherPlayer As UserInfo, battleActionData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayerAction
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: battleActionData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionChangeShinsei.ExecuteAction*
      overridden: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleActionChangeShinsei.ActionTime
      commentId: M:Global.BattleActionChangeShinsei.ActionTime
      language: CSharp
      name:
        CSharp: ActionTime()
        VB: ActionTime()
      nameWithType:
        CSharp: BattleActionChangeShinsei.ActionTime()
        VB: BattleActionChangeShinsei.ActionTime()
      qualifiedName:
        CSharp: BattleActionChangeShinsei.ActionTime()
        VB: BattleActionChangeShinsei.ActionTime()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ActionTime
        path: ''
        startLine: 10928
      syntax:
        content:
          CSharp: public override float ActionTime()
          VB: Public Overrides Function ActionTime As Single
        return:
          type: System.Single
      overload: Global.BattleActionChangeShinsei.ActionTime*
      overridden: Global.BattleActionsBase.ActionTime
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleActionChangeShinsei.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      commentId: M:Global.BattleActionChangeShinsei.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      language: CSharp
      name:
        CSharp: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      nameWithType:
        CSharp: BattleActionChangeShinsei.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionChangeShinsei.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      qualifiedName:
        CSharp: BattleActionChangeShinsei.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionChangeShinsei.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 10939
      syntax:
        content:
          CSharp: public override void EndAction(bool isLocalPlayer, UserInfo ownerPlayerAction, UserInfo otherPlayer, BattleActionData battleActionData)
          VB: Public Overrides Sub EndAction(isLocalPlayer As Boolean, ownerPlayerAction As UserInfo, otherPlayer As UserInfo, battleActionData As BattleActionData)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayerAction
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: battleActionData
          type: Global.BattleActionData
      overload: Global.BattleActionChangeShinsei.EndAction*
      overridden: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleActionDamage
    commentId: T:Global.BattleActionDamage
    language: CSharp
    name:
      CSharp: BattleActionDamage
      VB: BattleActionDamage
    nameWithType:
      CSharp: BattleActionDamage
      VB: BattleActionDamage
    qualifiedName:
      CSharp: BattleActionDamage
      VB: BattleActionDamage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionDamage
      path: ''
      startLine: 10953
    summary: "\nActions that make damage\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleActionDamage : BattleActionsBase'
        VB: >-
          Public Class BattleActionDamage

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ActionTime
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionDamage.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionDamage.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionDamage.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionDamage.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionDamage.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionDamage.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 10955
      syntax:
        content:
          CSharp: public override void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData battleActionData, Action onEndVfxCallback = null)
          VB: Public Overrides Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, battleActionData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: battleActionData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionDamage.ExecuteAction*
      overridden: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleActionDamage.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      commentId: M:Global.BattleActionDamage.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      language: CSharp
      name:
        CSharp: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      nameWithType:
        CSharp: BattleActionDamage.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionDamage.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      qualifiedName:
        CSharp: BattleActionDamage.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionDamage.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 10966
      syntax:
        content:
          CSharp: public override void EndAction(bool isLocalPlayer, UserInfo ownerPlayerAction, UserInfo otherPlayer, BattleActionData battleActionData)
          VB: Public Overrides Sub EndAction(isLocalPlayer As Boolean, ownerPlayerAction As UserInfo, otherPlayer As UserInfo, battleActionData As BattleActionData)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayerAction
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: battleActionData
          type: Global.BattleActionData
      overload: Global.BattleActionDamage.EndAction*
      overridden: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleActionHeal
    commentId: T:Global.BattleActionHeal
    language: CSharp
    name:
      CSharp: BattleActionHeal
      VB: BattleActionHeal
    nameWithType:
      CSharp: BattleActionHeal
      VB: BattleActionHeal
    qualifiedName:
      CSharp: BattleActionHeal
      VB: BattleActionHeal
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionHeal
      path: ''
      startLine: 10981
    summary: "\nThis class allow grown up the life values\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleActionHeal : BattleActionsBase'
        VB: >-
          Public Class BattleActionHeal

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ActionTime
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionHeal.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionHeal.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionHeal.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionHeal.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionHeal.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionHeal.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 10983
      syntax:
        content:
          CSharp: public override void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData healData, Action onEndVfxCallback = null)
          VB: Public Overrides Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, healData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: healData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionHeal.ExecuteAction*
      overridden: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleActionHeal.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      commentId: M:Global.BattleActionHeal.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      language: CSharp
      name:
        CSharp: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      nameWithType:
        CSharp: BattleActionHeal.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionHeal.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      qualifiedName:
        CSharp: BattleActionHeal.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionHeal.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 11003
      syntax:
        content:
          CSharp: public override void EndAction(bool isLocalPlayer, UserInfo ownerPlayerAction, UserInfo otherPlayer, BattleActionData battleActionData)
          VB: Public Overrides Sub EndAction(isLocalPlayer As Boolean, ownerPlayerAction As UserInfo, otherPlayer As UserInfo, battleActionData As BattleActionData)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayerAction
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: battleActionData
          type: Global.BattleActionData
      overload: Global.BattleActionHeal.EndAction*
      overridden: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleActionReflect
    commentId: T:Global.BattleActionReflect
    language: CSharp
    name:
      CSharp: BattleActionReflect
      VB: BattleActionReflect
    nameWithType:
      CSharp: BattleActionReflect
      VB: BattleActionReflect
    qualifiedName:
      CSharp: BattleActionReflect
      VB: BattleActionReflect
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionReflect
      path: ''
      startLine: 11014
    summary: "\nThis class controls a special attack case when shinsei reflect damage\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleActionReflect : BattleActionsBase'
        VB: >-
          Public Class BattleActionReflect

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ActionTime
    - Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionReflect.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionReflect.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionReflect.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionReflect.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionReflect.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionReflect.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 11016
      syntax:
        content:
          CSharp: public override void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData battleActionData, Action onEndVfxCallback = null)
          VB: Public Overrides Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, battleActionData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: battleActionData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionReflect.ExecuteAction*
      overridden: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleActionStatSwap
    commentId: T:Global.BattleActionStatSwap
    language: CSharp
    name:
      CSharp: BattleActionStatSwap
      VB: BattleActionStatSwap
    nameWithType:
      CSharp: BattleActionStatSwap
      VB: BattleActionStatSwap
    qualifiedName:
      CSharp: BattleActionStatSwap
      VB: BattleActionStatSwap
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionStatSwap
      path: ''
      startLine: 11032
    summary: "\nThis class allow swap between two stats\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleActionStatSwap : BattleActionsBase'
        VB: >-
          Public Class BattleActionStatSwap

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ActionTime
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionStatSwap.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionStatSwap.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionStatSwap.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionStatSwap.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionStatSwap.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionStatSwap.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 11034
      syntax:
        content:
          CSharp: public override void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData statSwapData, Action onEndVfxCallback = null)
          VB: Public Overrides Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, statSwapData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: statSwapData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionStatSwap.ExecuteAction*
      overridden: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleActionStatSwap.CheckBuffDebuffTargets(System.String,System.String,System.Collections.Generic.List{BattleActionData})
      commentId: M:Global.BattleActionStatSwap.CheckBuffDebuffTargets(System.String,System.String,System.Collections.Generic.List{BattleActionData})
      language: CSharp
      name:
        CSharp: CheckBuffDebuffTargets(String, String, List<BattleActionData>)
        VB: CheckBuffDebuffTargets(String, String, List(Of BattleActionData))
      nameWithType:
        CSharp: BattleActionStatSwap.CheckBuffDebuffTargets(String, String, List<BattleActionData>)
        VB: BattleActionStatSwap.CheckBuffDebuffTargets(String, String, List(Of BattleActionData))
      qualifiedName:
        CSharp: BattleActionStatSwap.CheckBuffDebuffTargets(System.String, System.String, System.Collections.Generic.List<BattleActionData>)
        VB: BattleActionStatSwap.CheckBuffDebuffTargets(System.String, System.String, System.Collections.Generic.List(Of BattleActionData))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckBuffDebuffTargets
        path: ''
        startLine: 11093
      syntax:
        content:
          CSharp: public void CheckBuffDebuffTargets(string stat1Name, string stat2Name, List<BattleActionData> targetBattleActions)
          VB: Public Sub CheckBuffDebuffTargets(stat1Name As String, stat2Name As String, targetBattleActions As List(Of BattleActionData))
        parameters:
        - id: stat1Name
          type: System.String
        - id: stat2Name
          type: System.String
        - id: targetBattleActions
          type: System.Collections.Generic.List{BattleActionData}
      overload: Global.BattleActionStatSwap.CheckBuffDebuffTargets*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionStatSwap.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      commentId: M:Global.BattleActionStatSwap.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      language: CSharp
      name:
        CSharp: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      nameWithType:
        CSharp: BattleActionStatSwap.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionStatSwap.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      qualifiedName:
        CSharp: BattleActionStatSwap.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionStatSwap.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 11111
      syntax:
        content:
          CSharp: public override void EndAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData statSwapData)
          VB: Public Overrides Sub EndAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, statSwapData As BattleActionData)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: statSwapData
          type: Global.BattleActionData
      overload: Global.BattleActionStatSwap.EndAction*
      overridden: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleActionPutAlteredState
    commentId: T:Global.BattleActionPutAlteredState
    language: CSharp
    name:
      CSharp: BattleActionPutAlteredState
      VB: BattleActionPutAlteredState
    nameWithType:
      CSharp: BattleActionPutAlteredState
      VB: BattleActionPutAlteredState
    qualifiedName:
      CSharp: BattleActionPutAlteredState
      VB: BattleActionPutAlteredState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionPutAlteredState
      path: ''
      startLine: 11140
    summary: "\nThis class control the behavior of Altered States\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleActionPutAlteredState : BattleActionsBase'
        VB: >-
          Public Class BattleActionPutAlteredState

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ActionTime
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionPutAlteredState.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionPutAlteredState.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionPutAlteredState.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionPutAlteredState.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionPutAlteredState.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionPutAlteredState.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 11142
      syntax:
        content:
          CSharp: public override void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData putAlteredStateData, Action onEndVfxCallback = null)
          VB: Public Overrides Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, putAlteredStateData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: putAlteredStateData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionPutAlteredState.ExecuteAction*
      overridden: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleActionPutAlteredState.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      commentId: M:Global.BattleActionPutAlteredState.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      language: CSharp
      name:
        CSharp: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      nameWithType:
        CSharp: BattleActionPutAlteredState.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionPutAlteredState.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      qualifiedName:
        CSharp: BattleActionPutAlteredState.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionPutAlteredState.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 11164
      syntax:
        content:
          CSharp: public override void EndAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData putAlteredStateData)
          VB: Public Overrides Sub EndAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, putAlteredStateData As BattleActionData)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: putAlteredStateData
          type: Global.BattleActionData
      overload: Global.BattleActionPutAlteredState.EndAction*
      overridden: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleActionSkipTurn
    commentId: T:Global.BattleActionSkipTurn
    language: CSharp
    name:
      CSharp: BattleActionSkipTurn
      VB: BattleActionSkipTurn
    nameWithType:
      CSharp: BattleActionSkipTurn
      VB: BattleActionSkipTurn
    qualifiedName:
      CSharp: BattleActionSkipTurn
      VB: BattleActionSkipTurn
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionSkipTurn
      path: ''
      startLine: 11175
    summary: "\nThis class allow user send a turn withouth data\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleActionSkipTurn : BattleActionsBase'
        VB: >-
          Public Class BattleActionSkipTurn

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ActionTime
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionSkipTurn.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionSkipTurn.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionSkipTurn.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionSkipTurn.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionSkipTurn.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionSkipTurn.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 11177
      syntax:
        content:
          CSharp: public override void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData skipTurnData, Action onEndVfxCallback = null)
          VB: Public Overrides Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, skipTurnData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: skipTurnData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionSkipTurn.ExecuteAction*
      overridden: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleActionSkipTurn.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      commentId: M:Global.BattleActionSkipTurn.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      language: CSharp
      name:
        CSharp: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      nameWithType:
        CSharp: BattleActionSkipTurn.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionSkipTurn.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      qualifiedName:
        CSharp: BattleActionSkipTurn.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionSkipTurn.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 11201
      syntax:
        content:
          CSharp: public override void EndAction(bool isLocalPlayer, UserInfo ownerPlayer, UserInfo otherPlayer, BattleActionData putAlteredStateData)
          VB: Public Overrides Sub EndAction(isLocalPlayer As Boolean, ownerPlayer As UserInfo, otherPlayer As UserInfo, putAlteredStateData As BattleActionData)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayer
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: putAlteredStateData
          type: Global.BattleActionData
      overload: Global.BattleActionSkipTurn.EndAction*
      overridden: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleAlteredStateBase
    commentId: T:Global.BattleAlteredStateBase
    language: CSharp
    name:
      CSharp: BattleAlteredStateBase
      VB: BattleAlteredStateBase
    nameWithType:
      CSharp: BattleAlteredStateBase
      VB: BattleAlteredStateBase
    qualifiedName:
      CSharp: BattleAlteredStateBase
      VB: BattleAlteredStateBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleAlteredStateBase
      path: ''
      startLine: 11213
    syntax:
      content:
        CSharp: 'public abstract class BattleAlteredStateBase : MonoBehaviour'
        VB: >-
          Public MustInherit Class BattleAlteredStateBase

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Global.BattleAlteredStateBase.alteredStateData
      commentId: F:Global.BattleAlteredStateBase.alteredStateData
      language: CSharp
      name:
        CSharp: alteredStateData
        VB: alteredStateData
      nameWithType:
        CSharp: BattleAlteredStateBase.alteredStateData
        VB: BattleAlteredStateBase.alteredStateData
      qualifiedName:
        CSharp: BattleAlteredStateBase.alteredStateData
        VB: BattleAlteredStateBase.alteredStateData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alteredStateData
        path: ''
        startLine: 11215
      syntax:
        content:
          CSharp: public BattleAlteredStateDataSO alteredStateData
          VB: Public alteredStateData As BattleAlteredStateDataSO
        return:
          type: Global.BattleAlteredStateDataSO
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleAlteredStateBase.muzzleAnimation
      commentId: F:Global.BattleAlteredStateBase.muzzleAnimation
      language: CSharp
      name:
        CSharp: muzzleAnimation
        VB: muzzleAnimation
      nameWithType:
        CSharp: BattleAlteredStateBase.muzzleAnimation
        VB: BattleAlteredStateBase.muzzleAnimation
      qualifiedName:
        CSharp: BattleAlteredStateBase.muzzleAnimation
        VB: BattleAlteredStateBase.muzzleAnimation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: muzzleAnimation
        path: ''
        startLine: 11218
      syntax:
        content:
          CSharp: public AttacksAnimation muzzleAnimation
          VB: Public muzzleAnimation As AttacksAnimation
        return:
          type: Global.AttacksAnimation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleAlteredStateBase.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
      commentId: M:Global.BattleAlteredStateBase.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
      language: CSharp
      name:
        CSharp: InitAlteredState(Boolean, UserInfo, BattleGameMode, BattleUIController, Boolean)
        VB: InitAlteredState(Boolean, UserInfo, BattleGameMode, BattleUIController, Boolean)
      nameWithType:
        CSharp: BattleAlteredStateBase.InitAlteredState(Boolean, UserInfo, BattleGameMode, BattleUIController, Boolean)
        VB: BattleAlteredStateBase.InitAlteredState(Boolean, UserInfo, BattleGameMode, BattleUIController, Boolean)
      qualifiedName:
        CSharp: BattleAlteredStateBase.InitAlteredState(System.Boolean, UserInfo, BattleGameMode, BattleUIController, System.Boolean)
        VB: BattleAlteredStateBase.InitAlteredState(System.Boolean, UserInfo, BattleGameMode, BattleUIController, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitAlteredState
        path: ''
        startLine: 11220
      syntax:
        content:
          CSharp: public virtual void InitAlteredState(bool isLocal, UserInfo _targetInfo, BattleGameMode _battleGameMode, BattleUIController _battleUIController, bool justReplace = false)
          VB: Public Overridable Sub InitAlteredState(isLocal As Boolean, _targetInfo As UserInfo, _battleGameMode As BattleGameMode, _battleUIController As BattleUIController, justReplace As Boolean = False)
        parameters:
        - id: isLocal
          type: System.Boolean
        - id: _targetInfo
          type: Global.UserInfo
        - id: _battleGameMode
          type: Global.BattleGameMode
        - id: _battleUIController
          type: Global.BattleUIController
        - id: justReplace
          type: System.Boolean
      overload: Global.BattleAlteredStateBase.InitAlteredState*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.BattleAlteredStateBase.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      commentId: M:Global.BattleAlteredStateBase.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      language: CSharp
      name:
        CSharp: ExecuteAlteredState(UserInfo, List<BattleActionData>, Boolean)
        VB: ExecuteAlteredState(UserInfo, List(Of BattleActionData), Boolean)
      nameWithType:
        CSharp: BattleAlteredStateBase.ExecuteAlteredState(UserInfo, List<BattleActionData>, Boolean)
        VB: BattleAlteredStateBase.ExecuteAlteredState(UserInfo, List(Of BattleActionData), Boolean)
      qualifiedName:
        CSharp: BattleAlteredStateBase.ExecuteAlteredState(UserInfo, System.Collections.Generic.List<BattleActionData>, System.Boolean)
        VB: BattleAlteredStateBase.ExecuteAlteredState(UserInfo, System.Collections.Generic.List(Of BattleActionData), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAlteredState
        path: ''
        startLine: 11230
      syntax:
        content:
          CSharp: public virtual void ExecuteAlteredState(UserInfo _targetInfo = null, List<BattleActionData> turnActions = null, bool isTargetLocalPlayer = false)
          VB: Public Overridable Sub ExecuteAlteredState(_targetInfo As UserInfo = Nothing, turnActions As List(Of BattleActionData) = Nothing, isTargetLocalPlayer As Boolean = False)
        parameters:
        - id: _targetInfo
          type: Global.UserInfo
        - id: turnActions
          type: System.Collections.Generic.List{BattleActionData}
        - id: isTargetLocalPlayer
          type: System.Boolean
      overload: Global.BattleAlteredStateBase.ExecuteAlteredState*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.BattleAlteredStateBase.EndAlteredState(UserInfo,System.Boolean)
      commentId: M:Global.BattleAlteredStateBase.EndAlteredState(UserInfo,System.Boolean)
      language: CSharp
      name:
        CSharp: EndAlteredState(UserInfo, Boolean)
        VB: EndAlteredState(UserInfo, Boolean)
      nameWithType:
        CSharp: BattleAlteredStateBase.EndAlteredState(UserInfo, Boolean)
        VB: BattleAlteredStateBase.EndAlteredState(UserInfo, Boolean)
      qualifiedName:
        CSharp: BattleAlteredStateBase.EndAlteredState(UserInfo, System.Boolean)
        VB: BattleAlteredStateBase.EndAlteredState(UserInfo, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAlteredState
        path: ''
        startLine: 11299
      syntax:
        content:
          CSharp: public virtual void EndAlteredState(UserInfo _targetInfo = null, bool isTargetLocalPlayer = false)
          VB: Public Overridable Sub EndAlteredState(_targetInfo As UserInfo = Nothing, isTargetLocalPlayer As Boolean = False)
        parameters:
        - id: _targetInfo
          type: Global.UserInfo
        - id: isTargetLocalPlayer
          type: System.Boolean
      overload: Global.BattleAlteredStateBase.EndAlteredState*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Global.BattleAlteredStateBleeding
    commentId: T:Global.BattleAlteredStateBleeding
    language: CSharp
    name:
      CSharp: BattleAlteredStateBleeding
      VB: BattleAlteredStateBleeding
    nameWithType:
      CSharp: BattleAlteredStateBleeding
      VB: BattleAlteredStateBleeding
    qualifiedName:
      CSharp: BattleAlteredStateBleeding
      VB: BattleAlteredStateBleeding
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleAlteredStateBleeding
      path: ''
      startLine: 11331
    syntax:
      content:
        CSharp: 'public class BattleAlteredStateBleeding : BattleAlteredStateBase'
        VB: >-
          Public Class BattleAlteredStateBleeding

              Inherits BattleAlteredStateBase
    inheritance:
    - System.Object
    - Global.BattleAlteredStateBase
    inheritedMembers:
    - Global.BattleAlteredStateBase.alteredStateData
    - Global.BattleAlteredStateBase.muzzleAnimation
    - Global.BattleAlteredStateBase.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
    - Global.BattleAlteredStateBase.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
    - Global.BattleAlteredStateBase.EndAlteredState(UserInfo,System.Boolean)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.BattleAlteredStateEvasionChange
    commentId: T:Global.BattleAlteredStateEvasionChange
    language: CSharp
    name:
      CSharp: BattleAlteredStateEvasionChange
      VB: BattleAlteredStateEvasionChange
    nameWithType:
      CSharp: BattleAlteredStateEvasionChange
      VB: BattleAlteredStateEvasionChange
    qualifiedName:
      CSharp: BattleAlteredStateEvasionChange
      VB: BattleAlteredStateEvasionChange
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleAlteredStateEvasionChange
      path: ''
      startLine: 11343
    syntax:
      content:
        CSharp: 'public class BattleAlteredStateEvasionChange : BattleAlteredStateBase'
        VB: >-
          Public Class BattleAlteredStateEvasionChange

              Inherits BattleAlteredStateBase
    inheritance:
    - System.Object
    - Global.BattleAlteredStateBase
    inheritedMembers:
    - Global.BattleAlteredStateBase.alteredStateData
    - Global.BattleAlteredStateBase.muzzleAnimation
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleAlteredStateEvasionChange.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
      commentId: M:Global.BattleAlteredStateEvasionChange.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
      language: CSharp
      name:
        CSharp: InitAlteredState(Boolean, UserInfo, BattleGameMode, BattleUIController, Boolean)
        VB: InitAlteredState(Boolean, UserInfo, BattleGameMode, BattleUIController, Boolean)
      nameWithType:
        CSharp: BattleAlteredStateEvasionChange.InitAlteredState(Boolean, UserInfo, BattleGameMode, BattleUIController, Boolean)
        VB: BattleAlteredStateEvasionChange.InitAlteredState(Boolean, UserInfo, BattleGameMode, BattleUIController, Boolean)
      qualifiedName:
        CSharp: BattleAlteredStateEvasionChange.InitAlteredState(System.Boolean, UserInfo, BattleGameMode, BattleUIController, System.Boolean)
        VB: BattleAlteredStateEvasionChange.InitAlteredState(System.Boolean, UserInfo, BattleGameMode, BattleUIController, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitAlteredState
        path: ''
        startLine: 11345
      syntax:
        content:
          CSharp: public override void InitAlteredState(bool isLocal, UserInfo _targetInfo, BattleGameMode _battleGameMode, BattleUIController _battleUIController, bool justReplace = false)
          VB: Public Overrides Sub InitAlteredState(isLocal As Boolean, _targetInfo As UserInfo, _battleGameMode As BattleGameMode, _battleUIController As BattleUIController, justReplace As Boolean = False)
        parameters:
        - id: isLocal
          type: System.Boolean
        - id: _targetInfo
          type: Global.UserInfo
        - id: _battleGameMode
          type: Global.BattleGameMode
        - id: _battleUIController
          type: Global.BattleUIController
        - id: justReplace
          type: System.Boolean
      overload: Global.BattleAlteredStateEvasionChange.InitAlteredState*
      overridden: Global.BattleAlteredStateBase.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleAlteredStateEvasionChange.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      commentId: M:Global.BattleAlteredStateEvasionChange.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      language: CSharp
      name:
        CSharp: ExecuteAlteredState(UserInfo, List<BattleActionData>, Boolean)
        VB: ExecuteAlteredState(UserInfo, List(Of BattleActionData), Boolean)
      nameWithType:
        CSharp: BattleAlteredStateEvasionChange.ExecuteAlteredState(UserInfo, List<BattleActionData>, Boolean)
        VB: BattleAlteredStateEvasionChange.ExecuteAlteredState(UserInfo, List(Of BattleActionData), Boolean)
      qualifiedName:
        CSharp: BattleAlteredStateEvasionChange.ExecuteAlteredState(UserInfo, System.Collections.Generic.List<BattleActionData>, System.Boolean)
        VB: BattleAlteredStateEvasionChange.ExecuteAlteredState(UserInfo, System.Collections.Generic.List(Of BattleActionData), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAlteredState
        path: ''
        startLine: 11353
      syntax:
        content:
          CSharp: public override void ExecuteAlteredState(UserInfo _targetInfo = null, List<BattleActionData> turnActions = null, bool isTargetLocalPlayer = false)
          VB: Public Overrides Sub ExecuteAlteredState(_targetInfo As UserInfo = Nothing, turnActions As List(Of BattleActionData) = Nothing, isTargetLocalPlayer As Boolean = False)
        parameters:
        - id: _targetInfo
          type: Global.UserInfo
        - id: turnActions
          type: System.Collections.Generic.List{BattleActionData}
        - id: isTargetLocalPlayer
          type: System.Boolean
      overload: Global.BattleAlteredStateEvasionChange.ExecuteAlteredState*
      overridden: Global.BattleAlteredStateBase.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleAlteredStateEvasionChange.EndAlteredState(UserInfo,System.Boolean)
      commentId: M:Global.BattleAlteredStateEvasionChange.EndAlteredState(UserInfo,System.Boolean)
      language: CSharp
      name:
        CSharp: EndAlteredState(UserInfo, Boolean)
        VB: EndAlteredState(UserInfo, Boolean)
      nameWithType:
        CSharp: BattleAlteredStateEvasionChange.EndAlteredState(UserInfo, Boolean)
        VB: BattleAlteredStateEvasionChange.EndAlteredState(UserInfo, Boolean)
      qualifiedName:
        CSharp: BattleAlteredStateEvasionChange.EndAlteredState(UserInfo, System.Boolean)
        VB: BattleAlteredStateEvasionChange.EndAlteredState(UserInfo, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAlteredState
        path: ''
        startLine: 11358
      syntax:
        content:
          CSharp: public override void EndAlteredState(UserInfo _targetInfo = null, bool isTargetLocalPlayer = false)
          VB: Public Overrides Sub EndAlteredState(_targetInfo As UserInfo = Nothing, isTargetLocalPlayer As Boolean = False)
        parameters:
        - id: _targetInfo
          type: Global.UserInfo
        - id: isTargetLocalPlayer
          type: System.Boolean
      overload: Global.BattleAlteredStateEvasionChange.EndAlteredState*
      overridden: Global.BattleAlteredStateBase.EndAlteredState(UserInfo,System.Boolean)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleAlteredStateIgnited
    commentId: T:Global.BattleAlteredStateIgnited
    language: CSharp
    name:
      CSharp: BattleAlteredStateIgnited
      VB: BattleAlteredStateIgnited
    nameWithType:
      CSharp: BattleAlteredStateIgnited
      VB: BattleAlteredStateIgnited
    qualifiedName:
      CSharp: BattleAlteredStateIgnited
      VB: BattleAlteredStateIgnited
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleAlteredStateIgnited
      path: ''
      startLine: 11381
    summary: "\nSpecific case of Altered State Ignite\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleAlteredStateIgnited : BattleAlteredStateBase'
        VB: >-
          Public Class BattleAlteredStateIgnited

              Inherits BattleAlteredStateBase
    inheritance:
    - System.Object
    - Global.BattleAlteredStateBase
    inheritedMembers:
    - Global.BattleAlteredStateBase.alteredStateData
    - Global.BattleAlteredStateBase.muzzleAnimation
    - Global.BattleAlteredStateBase.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
    - Global.BattleAlteredStateBase.EndAlteredState(UserInfo,System.Boolean)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleAlteredStateIgnited.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      commentId: M:Global.BattleAlteredStateIgnited.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      language: CSharp
      name:
        CSharp: ExecuteAlteredState(UserInfo, List<BattleActionData>, Boolean)
        VB: ExecuteAlteredState(UserInfo, List(Of BattleActionData), Boolean)
      nameWithType:
        CSharp: BattleAlteredStateIgnited.ExecuteAlteredState(UserInfo, List<BattleActionData>, Boolean)
        VB: BattleAlteredStateIgnited.ExecuteAlteredState(UserInfo, List(Of BattleActionData), Boolean)
      qualifiedName:
        CSharp: BattleAlteredStateIgnited.ExecuteAlteredState(UserInfo, System.Collections.Generic.List<BattleActionData>, System.Boolean)
        VB: BattleAlteredStateIgnited.ExecuteAlteredState(UserInfo, System.Collections.Generic.List(Of BattleActionData), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAlteredState
        path: ''
        startLine: 11383
      syntax:
        content:
          CSharp: public override void ExecuteAlteredState(UserInfo _targetInfo = null, List<BattleActionData> turnActions = null, bool isTargetLocalPlayer = false)
          VB: Public Overrides Sub ExecuteAlteredState(_targetInfo As UserInfo = Nothing, turnActions As List(Of BattleActionData) = Nothing, isTargetLocalPlayer As Boolean = False)
        parameters:
        - id: _targetInfo
          type: Global.UserInfo
        - id: turnActions
          type: System.Collections.Generic.List{BattleActionData}
        - id: isTargetLocalPlayer
          type: System.Boolean
      overload: Global.BattleAlteredStateIgnited.ExecuteAlteredState*
      overridden: Global.BattleAlteredStateBase.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleAlteredStateRoot
    commentId: T:Global.BattleAlteredStateRoot
    language: CSharp
    name:
      CSharp: BattleAlteredStateRoot
      VB: BattleAlteredStateRoot
    nameWithType:
      CSharp: BattleAlteredStateRoot
      VB: BattleAlteredStateRoot
    qualifiedName:
      CSharp: BattleAlteredStateRoot
      VB: BattleAlteredStateRoot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleAlteredStateRoot
      path: ''
      startLine: 11411
    summary: "\nThe specific case of altered state Root\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleAlteredStateRoot : BattleAlteredStateBase'
        VB: >-
          Public Class BattleAlteredStateRoot

              Inherits BattleAlteredStateBase
    inheritance:
    - System.Object
    - Global.BattleAlteredStateBase
    inheritedMembers:
    - Global.BattleAlteredStateBase.alteredStateData
    - Global.BattleAlteredStateBase.muzzleAnimation
    - Global.BattleAlteredStateBase.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
    - Global.BattleAlteredStateBase.EndAlteredState(UserInfo,System.Boolean)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleAlteredStateRoot.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      commentId: M:Global.BattleAlteredStateRoot.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      language: CSharp
      name:
        CSharp: ExecuteAlteredState(UserInfo, List<BattleActionData>, Boolean)
        VB: ExecuteAlteredState(UserInfo, List(Of BattleActionData), Boolean)
      nameWithType:
        CSharp: BattleAlteredStateRoot.ExecuteAlteredState(UserInfo, List<BattleActionData>, Boolean)
        VB: BattleAlteredStateRoot.ExecuteAlteredState(UserInfo, List(Of BattleActionData), Boolean)
      qualifiedName:
        CSharp: BattleAlteredStateRoot.ExecuteAlteredState(UserInfo, System.Collections.Generic.List<BattleActionData>, System.Boolean)
        VB: BattleAlteredStateRoot.ExecuteAlteredState(UserInfo, System.Collections.Generic.List(Of BattleActionData), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAlteredState
        path: ''
        startLine: 11413
      syntax:
        content:
          CSharp: public override void ExecuteAlteredState(UserInfo ownerInfo = null, List<BattleActionData> turnActions = null, bool isTargetLocalPlayer = false)
          VB: Public Overrides Sub ExecuteAlteredState(ownerInfo As UserInfo = Nothing, turnActions As List(Of BattleActionData) = Nothing, isTargetLocalPlayer As Boolean = False)
        parameters:
        - id: ownerInfo
          type: Global.UserInfo
        - id: turnActions
          type: System.Collections.Generic.List{BattleActionData}
        - id: isTargetLocalPlayer
          type: System.Boolean
      overload: Global.BattleAlteredStateRoot.ExecuteAlteredState*
      overridden: Global.BattleAlteredStateBase.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.AlteredStatesDataSO
    commentId: T:Global.AlteredStatesDataSO
    language: CSharp
    name:
      CSharp: AlteredStatesDataSO
      VB: AlteredStatesDataSO
    nameWithType:
      CSharp: AlteredStatesDataSO
      VB: AlteredStatesDataSO
    qualifiedName:
      CSharp: AlteredStatesDataSO
      VB: AlteredStatesDataSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AlteredStatesDataSO
      path: ''
      startLine: 11429
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class AlteredStatesDataSO : SerializedScriptableObject
        VB: >-
          <Serializable>

          Public Class AlteredStatesDataSO

              Inherits SerializedScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.AlteredStatesDataSO.alteredStates
      commentId: F:Global.AlteredStatesDataSO.alteredStates
      language: CSharp
      name:
        CSharp: alteredStates
        VB: alteredStates
      nameWithType:
        CSharp: AlteredStatesDataSO.alteredStates
        VB: AlteredStatesDataSO.alteredStates
      qualifiedName:
        CSharp: AlteredStatesDataSO.alteredStates
        VB: AlteredStatesDataSO.alteredStates
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alteredStates
        path: ''
        startLine: 11433
      syntax:
        content:
          CSharp: public List<BattleAlteredStateDataSO> alteredStates
          VB: Public alteredStates As List(Of BattleAlteredStateDataSO)
        return:
          type: System.Collections.Generic.List{BattleAlteredStateDataSO}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredStatesDataSO.GetJsonAlteredStates
      commentId: M:Global.AlteredStatesDataSO.GetJsonAlteredStates
      language: CSharp
      name:
        CSharp: GetJsonAlteredStates()
        VB: GetJsonAlteredStates()
      nameWithType:
        CSharp: AlteredStatesDataSO.GetJsonAlteredStates()
        VB: AlteredStatesDataSO.GetJsonAlteredStates()
      qualifiedName:
        CSharp: AlteredStatesDataSO.GetJsonAlteredStates()
        VB: AlteredStatesDataSO.GetJsonAlteredStates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetJsonAlteredStates
        path: ''
        startLine: 11435
      syntax:
        content:
          CSharp: public void GetJsonAlteredStates()
          VB: Public Sub GetJsonAlteredStates
      overload: Global.AlteredStatesDataSO.GetJsonAlteredStates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BattleAlteredStateDataSO
    commentId: T:Global.BattleAlteredStateDataSO
    language: CSharp
    name:
      CSharp: BattleAlteredStateDataSO
      VB: BattleAlteredStateDataSO
    nameWithType:
      CSharp: BattleAlteredStateDataSO
      VB: BattleAlteredStateDataSO
    qualifiedName:
      CSharp: BattleAlteredStateDataSO
      VB: BattleAlteredStateDataSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleAlteredStateDataSO
      path: ''
      startLine: 11449
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class BattleAlteredStateDataSO : SerializedScriptableObject
        VB: >-
          <Serializable>

          Public Class BattleAlteredStateDataSO

              Inherits SerializedScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleAlteredStateDataSO.alteredState
      commentId: F:Global.BattleAlteredStateDataSO.alteredState
      language: CSharp
      name:
        CSharp: alteredState
        VB: alteredState
      nameWithType:
        CSharp: BattleAlteredStateDataSO.alteredState
        VB: BattleAlteredStateDataSO.alteredState
      qualifiedName:
        CSharp: BattleAlteredStateDataSO.alteredState
        VB: BattleAlteredStateDataSO.alteredState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alteredState
        path: ''
        startLine: 11453
      syntax:
        content:
          CSharp: public AlteredStateEnum alteredState
          VB: Public alteredState As AlteredStateEnum
        return:
          type: Global.AlteredStateEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleAlteredStateDataSO.alteredStateActions
      commentId: F:Global.BattleAlteredStateDataSO.alteredStateActions
      language: CSharp
      name:
        CSharp: alteredStateActions
        VB: alteredStateActions
      nameWithType:
        CSharp: BattleAlteredStateDataSO.alteredStateActions
        VB: BattleAlteredStateDataSO.alteredStateActions
      qualifiedName:
        CSharp: BattleAlteredStateDataSO.alteredStateActions
        VB: BattleAlteredStateDataSO.alteredStateActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alteredStateActions
        path: ''
        startLine: 11454
      syntax:
        content:
          CSharp: public ActionDataList alteredStateActions
          VB: Public alteredStateActions As ActionDataList
        return:
          type: Global.ActionDataList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleAlteredStateDataSO.startMessage
      commentId: F:Global.BattleAlteredStateDataSO.startMessage
      language: CSharp
      name:
        CSharp: startMessage
        VB: startMessage
      nameWithType:
        CSharp: BattleAlteredStateDataSO.startMessage
        VB: BattleAlteredStateDataSO.startMessage
      qualifiedName:
        CSharp: BattleAlteredStateDataSO.startMessage
        VB: BattleAlteredStateDataSO.startMessage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: startMessage
        path: ''
        startLine: 11455
      syntax:
        content:
          CSharp: public string startMessage
          VB: Public startMessage As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleAlteredStateDataSO.displayMessage
      commentId: F:Global.BattleAlteredStateDataSO.displayMessage
      language: CSharp
      name:
        CSharp: displayMessage
        VB: displayMessage
      nameWithType:
        CSharp: BattleAlteredStateDataSO.displayMessage
        VB: BattleAlteredStateDataSO.displayMessage
      qualifiedName:
        CSharp: BattleAlteredStateDataSO.displayMessage
        VB: BattleAlteredStateDataSO.displayMessage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: displayMessage
        path: ''
        startLine: 11456
      syntax:
        content:
          CSharp: public string displayMessage
          VB: Public displayMessage As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleAlteredStateDataSO.endMessage
      commentId: F:Global.BattleAlteredStateDataSO.endMessage
      language: CSharp
      name:
        CSharp: endMessage
        VB: endMessage
      nameWithType:
        CSharp: BattleAlteredStateDataSO.endMessage
        VB: BattleAlteredStateDataSO.endMessage
      qualifiedName:
        CSharp: BattleAlteredStateDataSO.endMessage
        VB: BattleAlteredStateDataSO.endMessage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: endMessage
        path: ''
        startLine: 11457
      syntax:
        content:
          CSharp: public string endMessage
          VB: Public endMessage As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TerrainChangesDataSO
    commentId: T:Global.TerrainChangesDataSO
    language: CSharp
    name:
      CSharp: TerrainChangesDataSO
      VB: TerrainChangesDataSO
    nameWithType:
      CSharp: TerrainChangesDataSO
      VB: TerrainChangesDataSO
    qualifiedName:
      CSharp: TerrainChangesDataSO
      VB: TerrainChangesDataSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TerrainChangesDataSO
      path: ''
      startLine: 11466
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TerrainChangesDataSO : SerializedScriptableObject
        VB: >-
          <Serializable>

          Public Class TerrainChangesDataSO

              Inherits SerializedScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TerrainChangesDataSO.terrainChanges
      commentId: F:Global.TerrainChangesDataSO.terrainChanges
      language: CSharp
      name:
        CSharp: terrainChanges
        VB: terrainChanges
      nameWithType:
        CSharp: TerrainChangesDataSO.terrainChanges
        VB: TerrainChangesDataSO.terrainChanges
      qualifiedName:
        CSharp: TerrainChangesDataSO.terrainChanges
        VB: TerrainChangesDataSO.terrainChanges
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: terrainChanges
        path: ''
        startLine: 11470
      syntax:
        content:
          CSharp: public List<BattleTerrainDataSO> terrainChanges
          VB: Public terrainChanges As List(Of BattleTerrainDataSO)
        return:
          type: System.Collections.Generic.List{BattleTerrainDataSO}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TerrainChangesDataSO.GetJsonAlteredStates
      commentId: M:Global.TerrainChangesDataSO.GetJsonAlteredStates
      language: CSharp
      name:
        CSharp: GetJsonAlteredStates()
        VB: GetJsonAlteredStates()
      nameWithType:
        CSharp: TerrainChangesDataSO.GetJsonAlteredStates()
        VB: TerrainChangesDataSO.GetJsonAlteredStates()
      qualifiedName:
        CSharp: TerrainChangesDataSO.GetJsonAlteredStates()
        VB: TerrainChangesDataSO.GetJsonAlteredStates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetJsonAlteredStates
        path: ''
        startLine: 11472
      syntax:
        content:
          CSharp: public void GetJsonAlteredStates()
          VB: Public Sub GetJsonAlteredStates
      overload: Global.TerrainChangesDataSO.GetJsonAlteredStates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BattleActionChangeTerrain
    commentId: T:Global.BattleActionChangeTerrain
    language: CSharp
    name:
      CSharp: BattleActionChangeTerrain
      VB: BattleActionChangeTerrain
    nameWithType:
      CSharp: BattleActionChangeTerrain
      VB: BattleActionChangeTerrain
    qualifiedName:
      CSharp: BattleActionChangeTerrain
      VB: BattleActionChangeTerrain
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleActionChangeTerrain
      path: ''
      startLine: 11486
    syntax:
      content:
        CSharp: 'public class BattleActionChangeTerrain : BattleActionsBase'
        VB: >-
          Public Class BattleActionChangeTerrain

              Inherits BattleActionsBase
    inheritance:
    - System.Object
    - Global.BattleActionsBase
    inheritedMembers:
    - Global.BattleActionsBase.actionType
    - Global.BattleActionsBase.camManager
    - Global.BattleActionsBase.vFXInstancer
    - Global.BattleActionsBase.battleGameMode
    - Global.BattleActionsBase.battleUIController
    - Global.BattleActionsBase.shinseiTypeScriptable
    - Global.BattleActionsBase.launchVfx
    - Global.BattleActionsBase.vfxTime
    - Global.BattleActionsBase.actionTime
    - Global.BattleActionsBase.targetName
    - Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
    - Global.BattleActionsBase.CheckAction(System.Single,Action)
    - Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ShowBothShinseisFar
    - Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
    - Global.BattleActionsBase.ActionTime
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleActionChangeTerrain.terrainsBehaviours
      commentId: F:Global.BattleActionChangeTerrain.terrainsBehaviours
      language: CSharp
      name:
        CSharp: terrainsBehaviours
        VB: terrainsBehaviours
      nameWithType:
        CSharp: BattleActionChangeTerrain.terrainsBehaviours
        VB: BattleActionChangeTerrain.terrainsBehaviours
      qualifiedName:
        CSharp: BattleActionChangeTerrain.terrainsBehaviours
        VB: BattleActionChangeTerrain.terrainsBehaviours
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: terrainsBehaviours
        path: ''
        startLine: 11488
      syntax:
        content:
          CSharp: public List<BattleTerrainBehavioursBase> terrainsBehaviours
          VB: Public terrainsBehaviours As List(Of BattleTerrainBehavioursBase)
        return:
          type: System.Collections.Generic.List{BattleTerrainBehavioursBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleActionChangeTerrain.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      commentId: M:Global.BattleActionChangeTerrain.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      language: CSharp
      name:
        CSharp: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      nameWithType:
        CSharp: BattleActionChangeTerrain.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionChangeTerrain.ExecuteAction(Boolean, UserInfo, UserInfo, BattleActionData, Action)
      qualifiedName:
        CSharp: BattleActionChangeTerrain.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
        VB: BattleActionChangeTerrain.ExecuteAction(System.Boolean, UserInfo, UserInfo, BattleActionData, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 11489
      syntax:
        content:
          CSharp: public override void ExecuteAction(bool isLocalPlayer, UserInfo ownerPlayerAction, UserInfo otherPlayer, BattleActionData changeTerrainData, Action onEndVfxCallback = null)
          VB: Public Overrides Sub ExecuteAction(isLocalPlayer As Boolean, ownerPlayerAction As UserInfo, otherPlayer As UserInfo, changeTerrainData As BattleActionData, onEndVfxCallback As Action = Nothing)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayerAction
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: changeTerrainData
          type: Global.BattleActionData
        - id: onEndVfxCallback
          type: Global.Action
      overload: Global.BattleActionChangeTerrain.ExecuteAction*
      overridden: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleActionChangeTerrain.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      commentId: M:Global.BattleActionChangeTerrain.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      language: CSharp
      name:
        CSharp: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      nameWithType:
        CSharp: BattleActionChangeTerrain.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionChangeTerrain.EndAction(Boolean, UserInfo, UserInfo, BattleActionData)
      qualifiedName:
        CSharp: BattleActionChangeTerrain.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
        VB: BattleActionChangeTerrain.EndAction(System.Boolean, UserInfo, UserInfo, BattleActionData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 11497
      syntax:
        content:
          CSharp: public override void EndAction(bool isLocalPlayer, UserInfo ownerPlayerAction, UserInfo otherPlayer, BattleActionData changeTerrainData)
          VB: Public Overrides Sub EndAction(isLocalPlayer As Boolean, ownerPlayerAction As UserInfo, otherPlayer As UserInfo, changeTerrainData As BattleActionData)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: ownerPlayerAction
          type: Global.UserInfo
        - id: otherPlayer
          type: Global.UserInfo
        - id: changeTerrainData
          type: Global.BattleActionData
      overload: Global.BattleActionChangeTerrain.EndAction*
      overridden: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.BattleTerrainBehavioursBase
    commentId: T:Global.BattleTerrainBehavioursBase
    language: CSharp
    name:
      CSharp: BattleTerrainBehavioursBase
      VB: BattleTerrainBehavioursBase
    nameWithType:
      CSharp: BattleTerrainBehavioursBase
      VB: BattleTerrainBehavioursBase
    qualifiedName:
      CSharp: BattleTerrainBehavioursBase
      VB: BattleTerrainBehavioursBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleTerrainBehavioursBase
      path: ''
      startLine: 11510
    syntax:
      content:
        CSharp: 'public abstract class BattleTerrainBehavioursBase : MonoBehaviour'
        VB: >-
          Public MustInherit Class BattleTerrainBehavioursBase

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Global.BattleTerrainBehavioursBase.allShinseis
      commentId: F:Global.BattleTerrainBehavioursBase.allShinseis
      language: CSharp
      name:
        CSharp: allShinseis
        VB: allShinseis
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.allShinseis
        VB: BattleTerrainBehavioursBase.allShinseis
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.allShinseis
        VB: BattleTerrainBehavioursBase.allShinseis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: allShinseis
        path: ''
        startLine: 11512
      syntax:
        content:
          CSharp: protected List<Shinsei> allShinseis
          VB: Protected allShinseis As List(Of Shinsei)
        return:
          type: System.Collections.Generic.List{Shinsei}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleTerrainBehavioursBase.turnsLeft
      commentId: F:Global.BattleTerrainBehavioursBase.turnsLeft
      language: CSharp
      name:
        CSharp: turnsLeft
        VB: turnsLeft
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.turnsLeft
        VB: BattleTerrainBehavioursBase.turnsLeft
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.turnsLeft
        VB: BattleTerrainBehavioursBase.turnsLeft
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: turnsLeft
        path: ''
        startLine: 11513
      syntax:
        content:
          CSharp: public int turnsLeft
          VB: Public turnsLeft As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleTerrainBehavioursBase.turnsDuration
      commentId: F:Global.BattleTerrainBehavioursBase.turnsDuration
      language: CSharp
      name:
        CSharp: turnsDuration
        VB: turnsDuration
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.turnsDuration
        VB: BattleTerrainBehavioursBase.turnsDuration
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.turnsDuration
        VB: BattleTerrainBehavioursBase.turnsDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: turnsDuration
        path: ''
        startLine: 11514
      syntax:
        content:
          CSharp: protected int turnsDuration
          VB: Protected turnsDuration As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleTerrainBehavioursBase.battleGameMode
      commentId: F:Global.BattleTerrainBehavioursBase.battleGameMode
      language: CSharp
      name:
        CSharp: battleGameMode
        VB: battleGameMode
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.battleGameMode
        VB: BattleTerrainBehavioursBase.battleGameMode
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.battleGameMode
        VB: BattleTerrainBehavioursBase.battleGameMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: battleGameMode
        path: ''
        startLine: 11515
      syntax:
        content:
          CSharp: protected BattleGameMode battleGameMode
          VB: Protected battleGameMode As BattleGameMode
        return:
          type: Global.BattleGameMode
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.BattleTerrainBehavioursBase.terrainData
      commentId: F:Global.BattleTerrainBehavioursBase.terrainData
      language: CSharp
      name:
        CSharp: terrainData
        VB: terrainData
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.terrainData
        VB: BattleTerrainBehavioursBase.terrainData
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.terrainData
        VB: BattleTerrainBehavioursBase.terrainData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: terrainData
        path: ''
        startLine: 11517
      syntax:
        content:
          CSharp: public BattleTerrainDataSO terrainData
          VB: Public terrainData As BattleTerrainDataSO
        return:
          type: Global.BattleTerrainDataSO
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode)
      commentId: M:Global.BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode)
      language: CSharp
      name:
        CSharp: InitTerrainBehaviour(BattleGameMode)
        VB: InitTerrainBehaviour(BattleGameMode)
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode)
        VB: BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode)
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode)
        VB: BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitTerrainBehaviour
        path: ''
        startLine: 11524
      summary: "\nInit terrain behaviour, return time of behaviour\n"
      example: []
      syntax:
        content:
          CSharp: public virtual float InitTerrainBehaviour(BattleGameMode battleGameMode)
          VB: Public Overridable Function InitTerrainBehaviour(battleGameMode As BattleGameMode) As Single
        parameters:
        - id: battleGameMode
          type: Global.BattleGameMode
        return:
          type: System.Single
          description: ''
      overload: Global.BattleTerrainBehavioursBase.InitTerrainBehaviour*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
      commentId: M:Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
      language: CSharp
      name:
        CSharp: ExecuteTerrainBehaviour()
        VB: ExecuteTerrainBehaviour()
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour()
        VB: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour()
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour()
        VB: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteTerrainBehaviour
        path: ''
        startLine: 11540
      summary: "\nExecute terrain behaviour, return time of behaviour\n"
      example: []
      syntax:
        content:
          CSharp: public virtual float ExecuteTerrainBehaviour()
          VB: Public Overridable Function ExecuteTerrainBehaviour As Single
        return:
          type: System.Single
          description: ''
      overload: Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.BattleTerrainBehavioursBase.EndTerrainBehaviour
      commentId: M:Global.BattleTerrainBehavioursBase.EndTerrainBehaviour
      language: CSharp
      name:
        CSharp: EndTerrainBehaviour()
        VB: EndTerrainBehaviour()
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.EndTerrainBehaviour()
        VB: BattleTerrainBehavioursBase.EndTerrainBehaviour()
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.EndTerrainBehaviour()
        VB: BattleTerrainBehavioursBase.EndTerrainBehaviour()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndTerrainBehaviour
        path: ''
        startLine: 11555
      summary: "\nEnd terrain behaviour, return time of behaviour\n"
      example: []
      syntax:
        content:
          CSharp: public virtual float EndTerrainBehaviour()
          VB: Public Overridable Function EndTerrainBehaviour As Single
        return:
          type: System.Single
          description: ''
      overload: Global.BattleTerrainBehavioursBase.EndTerrainBehaviour*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func{CharacterType,System.Boolean,System.Single},System.Boolean)
      commentId: M:Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func{CharacterType,System.Boolean,System.Single},System.Boolean)
      language: CSharp
      name:
        CSharp: ExecuteActionsOfTerrain(Func<CharacterType, Boolean, Single>, Boolean)
        VB: ExecuteActionsOfTerrain(Func(Of CharacterType, Boolean, Single), Boolean)
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func<CharacterType, Boolean, Single>, Boolean)
        VB: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func(Of CharacterType, Boolean, Single), Boolean)
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func<CharacterType, System.Boolean, System.Single>, System.Boolean)
        VB: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func(Of CharacterType, System.Boolean, System.Single), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteActionsOfTerrain
        path: ''
        startLine: 11569
      summary: "\nExecute the actions set to this terrain, \n"
      example: []
      syntax:
        content:
          CSharp: public virtual float ExecuteActionsOfTerrain(Func<CharacterType, bool, float> executeOrEnd, bool toAll = false)
          VB: Public Overridable Function ExecuteActionsOfTerrain(executeOrEnd As Func(Of CharacterType, Boolean, Single), toAll As Boolean = False) As Single
        parameters:
        - id: executeOrEnd
          type: Global.Func{CharacterType,System.Boolean,System.Single}
          description: ''
        - id: toAll
          type: System.Boolean
          description: toAll shinseis or just to the current ones
        return:
          type: System.Single
          description: ''
      overload: Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Global.BattleTerrainBehavioursBase.ExecuteAction(CharacterType,System.Boolean)
      commentId: M:Global.BattleTerrainBehavioursBase.ExecuteAction(CharacterType,System.Boolean)
      language: CSharp
      name:
        CSharp: ExecuteAction(CharacterType, Boolean)
        VB: ExecuteAction(CharacterType, Boolean)
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.ExecuteAction(CharacterType, Boolean)
        VB: BattleTerrainBehavioursBase.ExecuteAction(CharacterType, Boolean)
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.ExecuteAction(CharacterType, System.Boolean)
        VB: BattleTerrainBehavioursBase.ExecuteAction(CharacterType, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteAction
        path: ''
        startLine: 11608
      syntax:
        content:
          CSharp: public float ExecuteAction(CharacterType shinseiType, bool isPlayer = false)
          VB: Public Function ExecuteAction(shinseiType As CharacterType, isPlayer As Boolean = False) As Single
        parameters:
        - id: shinseiType
          type: Global.CharacterType
        - id: isPlayer
          type: System.Boolean
        return:
          type: System.Single
      overload: Global.BattleTerrainBehavioursBase.ExecuteAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleTerrainBehavioursBase.EndAction(CharacterType,System.Boolean)
      commentId: M:Global.BattleTerrainBehavioursBase.EndAction(CharacterType,System.Boolean)
      language: CSharp
      name:
        CSharp: EndAction(CharacterType, Boolean)
        VB: EndAction(CharacterType, Boolean)
      nameWithType:
        CSharp: BattleTerrainBehavioursBase.EndAction(CharacterType, Boolean)
        VB: BattleTerrainBehavioursBase.EndAction(CharacterType, Boolean)
      qualifiedName:
        CSharp: BattleTerrainBehavioursBase.EndAction(CharacterType, System.Boolean)
        VB: BattleTerrainBehavioursBase.EndAction(CharacterType, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndAction
        path: ''
        startLine: 11638
      syntax:
        content:
          CSharp: public float EndAction(CharacterType shinseiType, bool isPlayer = false)
          VB: Public Function EndAction(shinseiType As CharacterType, isPlayer As Boolean = False) As Single
        parameters:
        - id: shinseiType
          type: Global.CharacterType
        - id: isPlayer
          type: System.Boolean
        return:
          type: System.Single
      overload: Global.BattleTerrainBehavioursBase.EndAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BattleTerrainBehaviourSnow
    commentId: T:Global.BattleTerrainBehaviourSnow
    language: CSharp
    name:
      CSharp: BattleTerrainBehaviourSnow
      VB: BattleTerrainBehaviourSnow
    nameWithType:
      CSharp: BattleTerrainBehaviourSnow
      VB: BattleTerrainBehaviourSnow
    qualifiedName:
      CSharp: BattleTerrainBehaviourSnow
      VB: BattleTerrainBehaviourSnow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleTerrainBehaviourSnow
      path: ''
      startLine: 11677
    syntax:
      content:
        CSharp: 'public class BattleTerrainBehaviourSnow : BattleTerrainBehavioursBase'
        VB: >-
          Public Class BattleTerrainBehaviourSnow

              Inherits BattleTerrainBehavioursBase
    inheritance:
    - System.Object
    - Global.BattleTerrainBehavioursBase
    inheritedMembers:
    - Global.BattleTerrainBehavioursBase.allShinseis
    - Global.BattleTerrainBehavioursBase.turnsLeft
    - Global.BattleTerrainBehavioursBase.turnsDuration
    - Global.BattleTerrainBehavioursBase.battleGameMode
    - Global.BattleTerrainBehavioursBase.terrainData
    - Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func{CharacterType,System.Boolean,System.Single},System.Boolean)
    - Global.BattleTerrainBehavioursBase.ExecuteAction(CharacterType,System.Boolean)
    - Global.BattleTerrainBehavioursBase.EndAction(CharacterType,System.Boolean)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleTerrainBehaviourSnow.InitTerrainBehaviour(BattleGameMode)
      commentId: M:Global.BattleTerrainBehaviourSnow.InitTerrainBehaviour(BattleGameMode)
      language: CSharp
      name:
        CSharp: InitTerrainBehaviour(BattleGameMode)
        VB: InitTerrainBehaviour(BattleGameMode)
      nameWithType:
        CSharp: BattleTerrainBehaviourSnow.InitTerrainBehaviour(BattleGameMode)
        VB: BattleTerrainBehaviourSnow.InitTerrainBehaviour(BattleGameMode)
      qualifiedName:
        CSharp: BattleTerrainBehaviourSnow.InitTerrainBehaviour(BattleGameMode)
        VB: BattleTerrainBehaviourSnow.InitTerrainBehaviour(BattleGameMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitTerrainBehaviour
        path: ''
        startLine: 11679
      syntax:
        content:
          CSharp: public override float InitTerrainBehaviour(BattleGameMode battleGameMode)
          VB: Public Overrides Function InitTerrainBehaviour(battleGameMode As BattleGameMode) As Single
        parameters:
        - id: battleGameMode
          type: Global.BattleGameMode
        return:
          type: System.Single
      overload: Global.BattleTerrainBehaviourSnow.InitTerrainBehaviour*
      overridden: Global.BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour
      commentId: M:Global.BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour
      language: CSharp
      name:
        CSharp: ExecuteTerrainBehaviour()
        VB: ExecuteTerrainBehaviour()
      nameWithType:
        CSharp: BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour()
        VB: BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour()
      qualifiedName:
        CSharp: BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour()
        VB: BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ExecuteTerrainBehaviour
        path: ''
        startLine: 11689
      syntax:
        content:
          CSharp: public override float ExecuteTerrainBehaviour()
          VB: Public Overrides Function ExecuteTerrainBehaviour As Single
        return:
          type: System.Single
      overload: Global.BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour*
      overridden: Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.BattleTerrainBehaviourSnow.EndTerrainBehaviour
      commentId: M:Global.BattleTerrainBehaviourSnow.EndTerrainBehaviour
      language: CSharp
      name:
        CSharp: EndTerrainBehaviour()
        VB: EndTerrainBehaviour()
      nameWithType:
        CSharp: BattleTerrainBehaviourSnow.EndTerrainBehaviour()
        VB: BattleTerrainBehaviourSnow.EndTerrainBehaviour()
      qualifiedName:
        CSharp: BattleTerrainBehaviourSnow.EndTerrainBehaviour()
        VB: BattleTerrainBehaviourSnow.EndTerrainBehaviour()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EndTerrainBehaviour
        path: ''
        startLine: 11697
      syntax:
        content:
          CSharp: public override float EndTerrainBehaviour()
          VB: Public Overrides Function EndTerrainBehaviour As Single
        return:
          type: System.Single
      overload: Global.BattleTerrainBehaviourSnow.EndTerrainBehaviour*
      overridden: Global.BattleTerrainBehavioursBase.EndTerrainBehaviour
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.ActionDataList
    commentId: T:Global.ActionDataList
    language: CSharp
    name:
      CSharp: ActionDataList
      VB: ActionDataList
    nameWithType:
      CSharp: ActionDataList
      VB: ActionDataList
    qualifiedName:
      CSharp: ActionDataList
      VB: ActionDataList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ActionDataList
      path: ''
      startLine: 11712
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ActionDataList : SerializedScriptableObject
        VB: >-
          <Serializable>

          Public Class ActionDataList

              Inherits SerializedScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ActionDataList.actions
      commentId: F:Global.ActionDataList.actions
      language: CSharp
      name:
        CSharp: actions
        VB: actions
      nameWithType:
        CSharp: ActionDataList.actions
        VB: ActionDataList.actions
      qualifiedName:
        CSharp: ActionDataList.actions
        VB: ActionDataList.actions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: actions
        path: ''
        startLine: 11716
      syntax:
        content:
          CSharp: public List<BattleActionData> actions
          VB: Public actions As List(Of BattleActionData)
        return:
          type: System.Collections.Generic.List{BattleActionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BattleTerrainDataSO
    commentId: T:Global.BattleTerrainDataSO
    language: CSharp
    name:
      CSharp: BattleTerrainDataSO
      VB: BattleTerrainDataSO
    nameWithType:
      CSharp: BattleTerrainDataSO
      VB: BattleTerrainDataSO
    qualifiedName:
      CSharp: BattleTerrainDataSO
      VB: BattleTerrainDataSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BattleTerrainDataSO
      path: ''
      startLine: 11729
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class BattleTerrainDataSO : SerializedScriptableObject
        VB: >-
          <Serializable>

          Public Class BattleTerrainDataSO

              Inherits SerializedScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BattleTerrainDataSO.terrainType
      commentId: F:Global.BattleTerrainDataSO.terrainType
      language: CSharp
      name:
        CSharp: terrainType
        VB: terrainType
      nameWithType:
        CSharp: BattleTerrainDataSO.terrainType
        VB: BattleTerrainDataSO.terrainType
      qualifiedName:
        CSharp: BattleTerrainDataSO.terrainType
        VB: BattleTerrainDataSO.terrainType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: terrainType
        path: ''
        startLine: 11733
      syntax:
        content:
          CSharp: public TypesOfTerrainEnum terrainType
          VB: Public terrainType As TypesOfTerrainEnum
        return:
          type: Global.TypesOfTerrainEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleTerrainDataSO.globalActions
      commentId: F:Global.BattleTerrainDataSO.globalActions
      language: CSharp
      name:
        CSharp: globalActions
        VB: globalActions
      nameWithType:
        CSharp: BattleTerrainDataSO.globalActions
        VB: BattleTerrainDataSO.globalActions
      qualifiedName:
        CSharp: BattleTerrainDataSO.globalActions
        VB: BattleTerrainDataSO.globalActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: globalActions
        path: ''
        startLine: 11734
      syntax:
        content:
          CSharp: public ActionDataList globalActions
          VB: Public globalActions As ActionDataList
        return:
          type: Global.ActionDataList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleTerrainDataSO.typesActions
      commentId: F:Global.BattleTerrainDataSO.typesActions
      language: CSharp
      name:
        CSharp: typesActions
        VB: typesActions
      nameWithType:
        CSharp: BattleTerrainDataSO.typesActions
        VB: BattleTerrainDataSO.typesActions
      qualifiedName:
        CSharp: BattleTerrainDataSO.typesActions
        VB: BattleTerrainDataSO.typesActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: typesActions
        path: ''
        startLine: 11735
      syntax:
        content:
          CSharp: public List<TypesActions> typesActions
          VB: Public typesActions As List(Of TypesActions)
        return:
          type: System.Collections.Generic.List{TypesActions}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleTerrainDataSO.displayMessage
      commentId: F:Global.BattleTerrainDataSO.displayMessage
      language: CSharp
      name:
        CSharp: displayMessage
        VB: displayMessage
      nameWithType:
        CSharp: BattleTerrainDataSO.displayMessage
        VB: BattleTerrainDataSO.displayMessage
      qualifiedName:
        CSharp: BattleTerrainDataSO.displayMessage
        VB: BattleTerrainDataSO.displayMessage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: displayMessage
        path: ''
        startLine: 11736
      syntax:
        content:
          CSharp: public string displayMessage
          VB: Public displayMessage As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BattleTerrainDataSO.GetJsonActionCards
      commentId: M:Global.BattleTerrainDataSO.GetJsonActionCards
      language: CSharp
      name:
        CSharp: GetJsonActionCards()
        VB: GetJsonActionCards()
      nameWithType:
        CSharp: BattleTerrainDataSO.GetJsonActionCards()
        VB: BattleTerrainDataSO.GetJsonActionCards()
      qualifiedName:
        CSharp: BattleTerrainDataSO.GetJsonActionCards()
        VB: BattleTerrainDataSO.GetJsonActionCards()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetJsonActionCards
        path: ''
        startLine: 11738
      syntax:
        content:
          CSharp: public void GetJsonActionCards()
          VB: Public Sub GetJsonActionCards
      overload: Global.BattleTerrainDataSO.GetJsonActionCards*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TypesActions
    commentId: T:Global.TypesActions
    language: CSharp
    name:
      CSharp: TypesActions
      VB: TypesActions
    nameWithType:
      CSharp: TypesActions
      VB: TypesActions
    qualifiedName:
      CSharp: TypesActions
      VB: TypesActions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TypesActions
      path: ''
      startLine: 11746
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class TypesActions
        VB: >-
          <Serializable>

          Public Class TypesActions
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TypesActions.typeOfShinsei
      commentId: F:Global.TypesActions.typeOfShinsei
      language: CSharp
      name:
        CSharp: typeOfShinsei
        VB: typeOfShinsei
      nameWithType:
        CSharp: TypesActions.typeOfShinsei
        VB: TypesActions.typeOfShinsei
      qualifiedName:
        CSharp: TypesActions.typeOfShinsei
        VB: TypesActions.typeOfShinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: typeOfShinsei
        path: ''
        startLine: 11749
      syntax:
        content:
          CSharp: public CharacterType typeOfShinsei
          VB: Public typeOfShinsei As CharacterType
        return:
          type: Global.CharacterType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TypesActions.actionsData
      commentId: F:Global.TypesActions.actionsData
      language: CSharp
      name:
        CSharp: actionsData
        VB: actionsData
      nameWithType:
        CSharp: TypesActions.actionsData
        VB: TypesActions.actionsData
      qualifiedName:
        CSharp: TypesActions.actionsData
        VB: TypesActions.actionsData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: actionsData
        path: ''
        startLine: 11750
      syntax:
        content:
          CSharp: public ActionDataList actionsData
          VB: Public actionsData As ActionDataList
        return:
          type: Global.ActionDataList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.AlteredStateController
    commentId: T:Global.AlteredStateController
    language: CSharp
    name:
      CSharp: AlteredStateController
      VB: AlteredStateController
    nameWithType:
      CSharp: AlteredStateController
      VB: AlteredStateController
    qualifiedName:
      CSharp: AlteredStateController
      VB: AlteredStateController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AlteredStateController
      path: ''
      startLine: 11760
    syntax:
      content:
        CSharp: 'public class AlteredStateController : MonoBehaviour'
        VB: >-
          Public Class AlteredStateController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.AlteredStateController.alteredStates
      commentId: F:Global.AlteredStateController.alteredStates
      language: CSharp
      name:
        CSharp: alteredStates
        VB: alteredStates
      nameWithType:
        CSharp: AlteredStateController.alteredStates
        VB: AlteredStateController.alteredStates
      qualifiedName:
        CSharp: AlteredStateController.alteredStates
        VB: AlteredStateController.alteredStates
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alteredStates
        path: ''
        startLine: 11763
      syntax:
        content:
          CSharp: public List<BattleAlteredStateBase> alteredStates
          VB: Public alteredStates As List(Of BattleAlteredStateBase)
        return:
          type: System.Collections.Generic.List{BattleAlteredStateBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredStateController.InitAlteredStateController(BattleGameMode,BattleUIController)
      commentId: M:Global.AlteredStateController.InitAlteredStateController(BattleGameMode,BattleUIController)
      language: CSharp
      name:
        CSharp: InitAlteredStateController(BattleGameMode, BattleUIController)
        VB: InitAlteredStateController(BattleGameMode, BattleUIController)
      nameWithType:
        CSharp: AlteredStateController.InitAlteredStateController(BattleGameMode, BattleUIController)
        VB: AlteredStateController.InitAlteredStateController(BattleGameMode, BattleUIController)
      qualifiedName:
        CSharp: AlteredStateController.InitAlteredStateController(BattleGameMode, BattleUIController)
        VB: AlteredStateController.InitAlteredStateController(BattleGameMode, BattleUIController)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitAlteredStateController
        path: ''
        startLine: 11771
      syntax:
        content:
          CSharp: public void InitAlteredStateController(BattleGameMode _battleGameMode, BattleUIController _battleUIController)
          VB: Public Sub InitAlteredStateController(_battleGameMode As BattleGameMode, _battleUIController As BattleUIController)
        parameters:
        - id: _battleGameMode
          type: Global.BattleGameMode
        - id: _battleUIController
          type: Global.BattleUIController
      overload: Global.AlteredStateController.InitAlteredStateController*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredStateController.CheckAlteredStates(System.Boolean,ActionCardDto)
      commentId: M:Global.AlteredStateController.CheckAlteredStates(System.Boolean,ActionCardDto)
      language: CSharp
      name:
        CSharp: CheckAlteredStates(Boolean, ActionCardDto)
        VB: CheckAlteredStates(Boolean, ActionCardDto)
      nameWithType:
        CSharp: AlteredStateController.CheckAlteredStates(Boolean, ActionCardDto)
        VB: AlteredStateController.CheckAlteredStates(Boolean, ActionCardDto)
      qualifiedName:
        CSharp: AlteredStateController.CheckAlteredStates(System.Boolean, ActionCardDto)
        VB: AlteredStateController.CheckAlteredStates(System.Boolean, ActionCardDto)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckAlteredStates
        path: ''
        startLine: 11786
      summary: "\nCheck the player altered states, execute them with the aid of the\nalteredStateControllers classes found in the alteredStates list.\n"
      example: []
      syntax:
        content:
          CSharp: public bool CheckAlteredStates(bool isPlayer, ActionCardDto playerTurn)
          VB: Public Function CheckAlteredStates(isPlayer As Boolean, playerTurn As ActionCardDto) As Boolean
        parameters:
        - id: isPlayer
          type: System.Boolean
          description: Is the Local Player altered states
        - id: playerTurn
          type: Global.ActionCardDto
          description: turn of the player checking the actions
        return:
          type: System.Boolean
          description: ''
      overload: Global.AlteredStateController.CheckAlteredStates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AlteredStateController.InitNewAlteredStates(System.Boolean,System.Collections.Generic.Dictionary{AlteredStateEnum,AlteredStateData},System.Collections.Generic.Dictionary{AlteredStateEnum,AlteredStateData},System.Boolean)
      commentId: M:Global.AlteredStateController.InitNewAlteredStates(System.Boolean,System.Collections.Generic.Dictionary{AlteredStateEnum,AlteredStateData},System.Collections.Generic.Dictionary{AlteredStateEnum,AlteredStateData},System.Boolean)
      language: CSharp
      name:
        CSharp: InitNewAlteredStates(Boolean, Dictionary<AlteredStateEnum, AlteredStateData>, Dictionary<AlteredStateEnum, AlteredStateData>, Boolean)
        VB: InitNewAlteredStates(Boolean, Dictionary(Of AlteredStateEnum, AlteredStateData), Dictionary(Of AlteredStateEnum, AlteredStateData), Boolean)
      nameWithType:
        CSharp: AlteredStateController.InitNewAlteredStates(Boolean, Dictionary<AlteredStateEnum, AlteredStateData>, Dictionary<AlteredStateEnum, AlteredStateData>, Boolean)
        VB: AlteredStateController.InitNewAlteredStates(Boolean, Dictionary(Of AlteredStateEnum, AlteredStateData), Dictionary(Of AlteredStateEnum, AlteredStateData), Boolean)
      qualifiedName:
        CSharp: AlteredStateController.InitNewAlteredStates(System.Boolean, System.Collections.Generic.Dictionary<AlteredStateEnum, AlteredStateData>, System.Collections.Generic.Dictionary<AlteredStateEnum, AlteredStateData>, System.Boolean)
        VB: AlteredStateController.InitNewAlteredStates(System.Boolean, System.Collections.Generic.Dictionary(Of AlteredStateEnum, AlteredStateData), System.Collections.Generic.Dictionary(Of AlteredStateEnum, AlteredStateData), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitNewAlteredStates
        path: ''
        startLine: 11821
      syntax:
        content:
          CSharp: public void InitNewAlteredStates(bool isPlayer, Dictionary<AlteredStateEnum, AlteredStateData> serverStates, Dictionary<AlteredStateEnum, AlteredStateData> localStates, bool justReplace = false)
          VB: Public Sub InitNewAlteredStates(isPlayer As Boolean, serverStates As Dictionary(Of AlteredStateEnum, AlteredStateData), localStates As Dictionary(Of AlteredStateEnum, AlteredStateData), justReplace As Boolean = False)
        parameters:
        - id: isPlayer
          type: System.Boolean
        - id: serverStates
          type: System.Collections.Generic.Dictionary{AlteredStateEnum,AlteredStateData}
        - id: localStates
          type: System.Collections.Generic.Dictionary{AlteredStateEnum,AlteredStateData}
        - id: justReplace
          type: System.Boolean
      overload: Global.AlteredStateController.InitNewAlteredStates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MatchState
    commentId: T:Global.MatchState
    language: CSharp
    name:
      CSharp: MatchState
      VB: MatchState
    nameWithType:
      CSharp: MatchState
      VB: MatchState
    qualifiedName:
      CSharp: MatchState
      VB: MatchState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MatchState
      path: ''
      startLine: 13978
    syntax:
      content:
        CSharp: public class MatchState
        VB: Public Class MatchState
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MatchState.playersTurn
      commentId: F:Global.MatchState.playersTurn
      language: CSharp
      name:
        CSharp: playersTurn
        VB: playersTurn
      nameWithType:
        CSharp: MatchState.playersTurn
        VB: MatchState.playersTurn
      qualifiedName:
        CSharp: MatchState.playersTurn
        VB: MatchState.playersTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playersTurn
        path: ''
        startLine: 13981
      syntax:
        content:
          CSharp: public List<ActionCardDto> playersTurn
          VB: Public playersTurn As List(Of ActionCardDto)
        return:
          type: System.Collections.Generic.List{ActionCardDto}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MatchState.isOwnerLocal
      commentId: F:Global.MatchState.isOwnerLocal
      language: CSharp
      name:
        CSharp: isOwnerLocal
        VB: isOwnerLocal
      nameWithType:
        CSharp: MatchState.isOwnerLocal
        VB: MatchState.isOwnerLocal
      qualifiedName:
        CSharp: MatchState.isOwnerLocal
        VB: MatchState.isOwnerLocal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isOwnerLocal
        path: ''
        startLine: 13982
      syntax:
        content:
          CSharp: public bool isOwnerLocal
          VB: Public isOwnerLocal As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MatchState.playerWritedLastTurn
      commentId: F:Global.MatchState.playerWritedLastTurn
      language: CSharp
      name:
        CSharp: playerWritedLastTurn
        VB: playerWritedLastTurn
      nameWithType:
        CSharp: MatchState.playerWritedLastTurn
        VB: MatchState.playerWritedLastTurn
      qualifiedName:
        CSharp: MatchState.playerWritedLastTurn
        VB: MatchState.playerWritedLastTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playerWritedLastTurn
        path: ''
        startLine: 13983
      syntax:
        content:
          CSharp: public bool playerWritedLastTurn
          VB: Public playerWritedLastTurn As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MatchState.currentTurn
      commentId: F:Global.MatchState.currentTurn
      language: CSharp
      name:
        CSharp: currentTurn
        VB: currentTurn
      nameWithType:
        CSharp: MatchState.currentTurn
        VB: MatchState.currentTurn
      qualifiedName:
        CSharp: MatchState.currentTurn
        VB: MatchState.currentTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentTurn
        path: ''
        startLine: 13984
      syntax:
        content:
          CSharp: public int currentTurn
          VB: Public currentTurn As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MatchState.skipTurnIndex
      commentId: F:Global.MatchState.skipTurnIndex
      language: CSharp
      name:
        CSharp: skipTurnIndex
        VB: skipTurnIndex
      nameWithType:
        CSharp: MatchState.skipTurnIndex
        VB: MatchState.skipTurnIndex
      qualifiedName:
        CSharp: MatchState.skipTurnIndex
        VB: MatchState.skipTurnIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: skipTurnIndex
        path: ''
        startLine: 13985
      syntax:
        content:
          CSharp: public bool skipTurnIndex
          VB: Public skipTurnIndex As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MatchState.winnerId
      commentId: F:Global.MatchState.winnerId
      language: CSharp
      name:
        CSharp: winnerId
        VB: winnerId
      nameWithType:
        CSharp: MatchState.winnerId
        VB: MatchState.winnerId
      qualifiedName:
        CSharp: MatchState.winnerId
        VB: MatchState.winnerId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: winnerId
        path: ''
        startLine: 13986
      syntax:
        content:
          CSharp: public string winnerId
          VB: Public winnerId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MatchState.playersServerData
      commentId: F:Global.MatchState.playersServerData
      language: CSharp
      name:
        CSharp: playersServerData
        VB: playersServerData
      nameWithType:
        CSharp: MatchState.playersServerData
        VB: MatchState.playersServerData
      qualifiedName:
        CSharp: MatchState.playersServerData
        VB: MatchState.playersServerData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playersServerData
        path: ''
        startLine: 13987
      syntax:
        content:
          CSharp: public Dictionary<string, string> playersServerData
          VB: Public playersServerData As Dictionary(Of String, String)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ActionCardDto
    commentId: T:Global.ActionCardDto
    language: CSharp
    name:
      CSharp: ActionCardDto
      VB: ActionCardDto
    nameWithType:
      CSharp: ActionCardDto
      VB: ActionCardDto
    qualifiedName:
      CSharp: ActionCardDto
      VB: ActionCardDto
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ActionCardDto
      path: ''
      startLine: 13990
    syntax:
      content:
        CSharp: 'public class ActionCardDto : ActionCard'
        VB: >-
          Public Class ActionCardDto

              Inherits ActionCard
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ActionCardDto.indexCard
      commentId: F:Global.ActionCardDto.indexCard
      language: CSharp
      name:
        CSharp: indexCard
        VB: indexCard
      nameWithType:
        CSharp: ActionCardDto.indexCard
        VB: ActionCardDto.indexCard
      qualifiedName:
        CSharp: ActionCardDto.indexCard
        VB: ActionCardDto.indexCard
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: indexCard
        path: ''
        startLine: 13993
      syntax:
        content:
          CSharp: public int indexCard
          VB: Public indexCard As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.VFXPositionData
    commentId: T:Global.VFXPositionData
    language: CSharp
    name:
      CSharp: VFXPositionData
      VB: VFXPositionData
    nameWithType:
      CSharp: VFXPositionData
      VB: VFXPositionData
    qualifiedName:
      CSharp: VFXPositionData
      VB: VFXPositionData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: VFXPositionData
      path: ''
      startLine: 13996
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class VFXPositionData
        VB: >-
          <Serializable>

          Public Class VFXPositionData
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.VFXPositionData.vfxPosEnum
      commentId: F:Global.VFXPositionData.vfxPosEnum
      language: CSharp
      name:
        CSharp: vfxPosEnum
        VB: vfxPosEnum
      nameWithType:
        CSharp: VFXPositionData.vfxPosEnum
        VB: VFXPositionData.vfxPosEnum
      qualifiedName:
        CSharp: VFXPositionData.vfxPosEnum
        VB: VFXPositionData.vfxPosEnum
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: vfxPosEnum
        path: ''
        startLine: 13999
      syntax:
        content:
          CSharp: public VFXPositionEnum vfxPosEnum
          VB: Public vfxPosEnum As VFXPositionEnum
        return:
          type: Global.VFXPositionEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VFXPositionData.positions
      commentId: F:Global.VFXPositionData.positions
      language: CSharp
      name:
        CSharp: positions
        VB: positions
      nameWithType:
        CSharp: VFXPositionData.positions
        VB: VFXPositionData.positions
      qualifiedName:
        CSharp: VFXPositionData.positions
        VB: VFXPositionData.positions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: positions
        path: ''
        startLine: 14000
      syntax:
        content:
          CSharp: public Transform positions
          VB: Public positions As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.VFXPositionEnum
    commentId: T:Global.VFXPositionEnum
    language: CSharp
    name:
      CSharp: VFXPositionEnum
      VB: VFXPositionEnum
    nameWithType:
      CSharp: VFXPositionEnum
      VB: VFXPositionEnum
    qualifiedName:
      CSharp: VFXPositionEnum
      VB: VFXPositionEnum
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: VFXPositionEnum
      path: ''
      startLine: 14002
    syntax:
      content:
        CSharp: public enum VFXPositionEnum
        VB: Public Enum VFXPositionEnum
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.VFXPositionEnum.ARENA_CENTER
      commentId: F:Global.VFXPositionEnum.ARENA_CENTER
      language: CSharp
      name:
        CSharp: ARENA_CENTER
        VB: ARENA_CENTER
      nameWithType:
        CSharp: VFXPositionEnum.ARENA_CENTER
        VB: VFXPositionEnum.ARENA_CENTER
      qualifiedName:
        CSharp: VFXPositionEnum.ARENA_CENTER
        VB: VFXPositionEnum.ARENA_CENTER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ARENA_CENTER
        path: ''
        startLine: 14004
      syntax:
        content:
          CSharp: ARENA_CENTER = 0
          VB: ARENA_CENTER = 0
        return:
          type: Global.VFXPositionEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.VFXPositionEnum.SHINSEI_PLAYER
      commentId: F:Global.VFXPositionEnum.SHINSEI_PLAYER
      language: CSharp
      name:
        CSharp: SHINSEI_PLAYER
        VB: SHINSEI_PLAYER
      nameWithType:
        CSharp: VFXPositionEnum.SHINSEI_PLAYER
        VB: VFXPositionEnum.SHINSEI_PLAYER
      qualifiedName:
        CSharp: VFXPositionEnum.SHINSEI_PLAYER
        VB: VFXPositionEnum.SHINSEI_PLAYER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SHINSEI_PLAYER
        path: ''
        startLine: 14005
      syntax:
        content:
          CSharp: SHINSEI_PLAYER = 1
          VB: SHINSEI_PLAYER = 1
        return:
          type: Global.VFXPositionEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.VFXPositionEnum.SHINSEI_ENEMY
      commentId: F:Global.VFXPositionEnum.SHINSEI_ENEMY
      language: CSharp
      name:
        CSharp: SHINSEI_ENEMY
        VB: SHINSEI_ENEMY
      nameWithType:
        CSharp: VFXPositionEnum.SHINSEI_ENEMY
        VB: VFXPositionEnum.SHINSEI_ENEMY
      qualifiedName:
        CSharp: VFXPositionEnum.SHINSEI_ENEMY
        VB: VFXPositionEnum.SHINSEI_ENEMY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SHINSEI_ENEMY
        path: ''
        startLine: 14006
      syntax:
        content:
          CSharp: SHINSEI_ENEMY = 2
          VB: SHINSEI_ENEMY = 2
        return:
          type: Global.VFXPositionEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.VFXTypeData
    commentId: T:Global.VFXTypeData
    language: CSharp
    name:
      CSharp: VFXTypeData
      VB: VFXTypeData
    nameWithType:
      CSharp: VFXTypeData
      VB: VFXTypeData
    qualifiedName:
      CSharp: VFXTypeData
      VB: VFXTypeData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: VFXTypeData
      path: ''
      startLine: 14009
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class VFXTypeData
        VB: >-
          <Serializable>

          Public Class VFXTypeData
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.VFXTypeData.type
      commentId: F:Global.VFXTypeData.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: VFXTypeData.type
        VB: VFXTypeData.type
      qualifiedName:
        CSharp: VFXTypeData.type
        VB: VFXTypeData.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: type
        path: ''
        startLine: 14012
      syntax:
        content:
          CSharp: public CharacterType type
          VB: Public type As CharacterType
        return:
          type: Global.CharacterType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VFXTypeData.vfxPrefab
      commentId: F:Global.VFXTypeData.vfxPrefab
      language: CSharp
      name:
        CSharp: vfxPrefab
        VB: vfxPrefab
      nameWithType:
        CSharp: VFXTypeData.vfxPrefab
        VB: VFXTypeData.vfxPrefab
      qualifiedName:
        CSharp: VFXTypeData.vfxPrefab
        VB: VFXTypeData.vfxPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: vfxPrefab
        path: ''
        startLine: 14013
      syntax:
        content:
          CSharp: public GameObject vfxPrefab
          VB: Public vfxPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.OrderListener
    commentId: T:Global.OrderListener
    language: CSharp
    name:
      CSharp: OrderListener
      VB: OrderListener
    nameWithType:
      CSharp: OrderListener
      VB: OrderListener
    qualifiedName:
      CSharp: OrderListener
      VB: OrderListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: OrderListener
      path: ''
      startLine: 14553
    summary: "\nDeprecate system for listen orders, avoiding put a server.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OrderListener : MonoBehaviour'
        VB: >-
          Public Class OrderListener

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.OrderListener.UpdateOrdersFromNet
      commentId: M:Global.OrderListener.UpdateOrdersFromNet
      language: CSharp
      name:
        CSharp: UpdateOrdersFromNet()
        VB: UpdateOrdersFromNet()
      nameWithType:
        CSharp: OrderListener.UpdateOrdersFromNet()
        VB: OrderListener.UpdateOrdersFromNet()
      qualifiedName:
        CSharp: OrderListener.UpdateOrdersFromNet()
        VB: OrderListener.UpdateOrdersFromNet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateOrdersFromNet
        path: ''
        startLine: 14591
      syntax:
        content:
          CSharp: public void UpdateOrdersFromNet()
          VB: Public Sub UpdateOrdersFromNet
      overload: Global.OrderListener.UpdateOrdersFromNet*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.OrderListener.KnowPlayerIndex(OrderMessage,Action{System.Int32},Combat)
      commentId: M:Global.OrderListener.KnowPlayerIndex(OrderMessage,Action{System.Int32},Combat)
      language: CSharp
      name:
        CSharp: KnowPlayerIndex(OrderMessage, Action<Int32>, Combat)
        VB: KnowPlayerIndex(OrderMessage, Action(Of Int32), Combat)
      nameWithType:
        CSharp: OrderListener.KnowPlayerIndex(OrderMessage, Action<Int32>, Combat)
        VB: OrderListener.KnowPlayerIndex(OrderMessage, Action(Of Int32), Combat)
      qualifiedName:
        CSharp: OrderListener.KnowPlayerIndex(OrderMessage, Action<System.Int32>, Combat)
        VB: OrderListener.KnowPlayerIndex(OrderMessage, Action(Of System.Int32), Combat)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: KnowPlayerIndex
        path: ''
        startLine: 14649
      syntax:
        content:
          CSharp: public void KnowPlayerIndex(OrderMessage orderMessage, Action<int> onKnowPlayerIndex, Combat playerCombat)
          VB: Public Sub KnowPlayerIndex(orderMessage As OrderMessage, onKnowPlayerIndex As Action(Of Integer), playerCombat As Combat)
        parameters:
        - id: orderMessage
          type: Global.OrderMessage
        - id: onKnowPlayerIndex
          type: Global.Action{System.Int32}
        - id: playerCombat
          type: Global.Combat
      overload: Global.OrderListener.KnowPlayerIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.OrderListener.ChangeShinsei(System.Int32,System.Int32,Combat)
      commentId: M:Global.OrderListener.ChangeShinsei(System.Int32,System.Int32,Combat)
      language: CSharp
      name:
        CSharp: ChangeShinsei(Int32, Int32, Combat)
        VB: ChangeShinsei(Int32, Int32, Combat)
      nameWithType:
        CSharp: OrderListener.ChangeShinsei(Int32, Int32, Combat)
        VB: OrderListener.ChangeShinsei(Int32, Int32, Combat)
      qualifiedName:
        CSharp: OrderListener.ChangeShinsei(System.Int32, System.Int32, Combat)
        VB: OrderListener.ChangeShinsei(System.Int32, System.Int32, Combat)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeShinsei
        path: ''
        startLine: 14706
      syntax:
        content:
          CSharp: public void ChangeShinsei(int targetShinsei, int playerIndex, Combat playerCombat)
          VB: Public Sub ChangeShinsei(targetShinsei As Integer, playerIndex As Integer, playerCombat As Combat)
        parameters:
        - id: targetShinsei
          type: System.Int32
        - id: playerIndex
          type: System.Int32
        - id: playerCombat
          type: Global.Combat
      overload: Global.OrderListener.ChangeShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.OrderListener.UpdateTurn(OrderMessage,System.Int32,Combat)
      commentId: M:Global.OrderListener.UpdateTurn(OrderMessage,System.Int32,Combat)
      language: CSharp
      name:
        CSharp: UpdateTurn(OrderMessage, Int32, Combat)
        VB: UpdateTurn(OrderMessage, Int32, Combat)
      nameWithType:
        CSharp: OrderListener.UpdateTurn(OrderMessage, Int32, Combat)
        VB: OrderListener.UpdateTurn(OrderMessage, Int32, Combat)
      qualifiedName:
        CSharp: OrderListener.UpdateTurn(OrderMessage, System.Int32, Combat)
        VB: OrderListener.UpdateTurn(OrderMessage, System.Int32, Combat)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateTurn
        path: ''
        startLine: 14715
      syntax:
        content:
          CSharp: public void UpdateTurn(OrderMessage orderMessage, int playerIndex, Combat playerCombat)
          VB: Public Sub UpdateTurn(orderMessage As OrderMessage, playerIndex As Integer, playerCombat As Combat)
        parameters:
        - id: orderMessage
          type: Global.OrderMessage
        - id: playerIndex
          type: System.Int32
        - id: playerCombat
          type: Global.Combat
      overload: Global.OrderListener.UpdateTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.OrderMessage
    commentId: T:Global.OrderMessage
    language: CSharp
    name:
      CSharp: OrderMessage
      VB: OrderMessage
    nameWithType:
      CSharp: OrderMessage
      VB: OrderMessage
    qualifiedName:
      CSharp: OrderMessage
      VB: OrderMessage
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: OrderMessage
      path: ''
      startLine: 14783
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct OrderMessage
        VB: >-
          <Serializable>

          Public Structure OrderMessage
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.OrderMessage.playerPlayfabId
      commentId: F:Global.OrderMessage.playerPlayfabId
      language: CSharp
      name:
        CSharp: playerPlayfabId
        VB: playerPlayfabId
      nameWithType:
        CSharp: OrderMessage.playerPlayfabId
        VB: OrderMessage.playerPlayfabId
      qualifiedName:
        CSharp: OrderMessage.playerPlayfabId
        VB: OrderMessage.playerPlayfabId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playerPlayfabId
        path: ''
        startLine: 14786
      syntax:
        content:
          CSharp: public string playerPlayfabId
          VB: Public playerPlayfabId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.OrderMessage.matchId
      commentId: F:Global.OrderMessage.matchId
      language: CSharp
      name:
        CSharp: matchId
        VB: matchId
      nameWithType:
        CSharp: OrderMessage.matchId
        VB: OrderMessage.matchId
      qualifiedName:
        CSharp: OrderMessage.matchId
        VB: OrderMessage.matchId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: matchId
        path: ''
        startLine: 14786
      syntax:
        content:
          CSharp: public string matchId
          VB: Public matchId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.OrderMessage.messageType
      commentId: F:Global.OrderMessage.messageType
      language: CSharp
      name:
        CSharp: messageType
        VB: messageType
      nameWithType:
        CSharp: OrderMessage.messageType
        VB: OrderMessage.messageType
      qualifiedName:
        CSharp: OrderMessage.messageType
        VB: OrderMessage.messageType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: messageType
        path: ''
        startLine: 14787
      syntax:
        content:
          CSharp: public OrderMessageType messageType
          VB: Public messageType As OrderMessageType
        return:
          type: Global.OrderMessageType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.OrderMessage.data
      commentId: F:Global.OrderMessage.data
      language: CSharp
      name:
        CSharp: data
        VB: data
      nameWithType:
        CSharp: OrderMessage.data
        VB: OrderMessage.data
      qualifiedName:
        CSharp: OrderMessage.data
        VB: OrderMessage.data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: data
        path: ''
        startLine: 14788
      syntax:
        content:
          CSharp: public object data
          VB: Public data As Object
        return:
          type: System.Object
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.UpdateTurnData
    commentId: T:Global.UpdateTurnData
    language: CSharp
    name:
      CSharp: UpdateTurnData
      VB: UpdateTurnData
    nameWithType:
      CSharp: UpdateTurnData
      VB: UpdateTurnData
    qualifiedName:
      CSharp: UpdateTurnData
      VB: UpdateTurnData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UpdateTurnData
      path: ''
      startLine: 14791
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct UpdateTurnData
        VB: >-
          <Serializable>

          Public Structure UpdateTurnData
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.UpdateTurnData.indexCard
      commentId: F:Global.UpdateTurnData.indexCard
      language: CSharp
      name:
        CSharp: indexCard
        VB: indexCard
      nameWithType:
        CSharp: UpdateTurnData.indexCard
        VB: UpdateTurnData.indexCard
      qualifiedName:
        CSharp: UpdateTurnData.indexCard
        VB: UpdateTurnData.indexCard
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: indexCard
        path: ''
        startLine: 14794
      syntax:
        content:
          CSharp: public int indexCard
          VB: Public indexCard As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.UpdateTurnData.addToBattleCurrentActions
      commentId: F:Global.UpdateTurnData.addToBattleCurrentActions
      language: CSharp
      name:
        CSharp: addToBattleCurrentActions
        VB: addToBattleCurrentActions
      nameWithType:
        CSharp: UpdateTurnData.addToBattleCurrentActions
        VB: UpdateTurnData.addToBattleCurrentActions
      qualifiedName:
        CSharp: UpdateTurnData.addToBattleCurrentActions
        VB: UpdateTurnData.addToBattleCurrentActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: addToBattleCurrentActions
        path: ''
        startLine: 14795
      syntax:
        content:
          CSharp: public bool addToBattleCurrentActions
          VB: Public addToBattleCurrentActions As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.OrderMessageType
    commentId: T:Global.OrderMessageType
    language: CSharp
    name:
      CSharp: OrderMessageType
      VB: OrderMessageType
    nameWithType:
      CSharp: OrderMessageType
      VB: OrderMessageType
    qualifiedName:
      CSharp: OrderMessageType
      VB: OrderMessageType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: OrderMessageType
      path: ''
      startLine: 14798
    syntax:
      content:
        CSharp: public enum OrderMessageType
        VB: Public Enum OrderMessageType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.OrderMessageType.CREATE_MATCH_DATA
      commentId: F:Global.OrderMessageType.CREATE_MATCH_DATA
      language: CSharp
      name:
        CSharp: CREATE_MATCH_DATA
        VB: CREATE_MATCH_DATA
      nameWithType:
        CSharp: OrderMessageType.CREATE_MATCH_DATA
        VB: OrderMessageType.CREATE_MATCH_DATA
      qualifiedName:
        CSharp: OrderMessageType.CREATE_MATCH_DATA
        VB: OrderMessageType.CREATE_MATCH_DATA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CREATE_MATCH_DATA
        path: ''
        startLine: 14800
      syntax:
        content:
          CSharp: CREATE_MATCH_DATA = 0
          VB: CREATE_MATCH_DATA = 0
        return:
          type: Global.OrderMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.OrderMessageType.SEND_TURN
      commentId: F:Global.OrderMessageType.SEND_TURN
      language: CSharp
      name:
        CSharp: SEND_TURN
        VB: SEND_TURN
      nameWithType:
        CSharp: OrderMessageType.SEND_TURN
        VB: OrderMessageType.SEND_TURN
      qualifiedName:
        CSharp: OrderMessageType.SEND_TURN
        VB: OrderMessageType.SEND_TURN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SEND_TURN
        path: ''
        startLine: 14801
      syntax:
        content:
          CSharp: SEND_TURN = 1
          VB: SEND_TURN = 1
        return:
          type: Global.OrderMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.OrderMessageType.SEND_UPDATE_PARTY
      commentId: F:Global.OrderMessageType.SEND_UPDATE_PARTY
      language: CSharp
      name:
        CSharp: SEND_UPDATE_PARTY
        VB: SEND_UPDATE_PARTY
      nameWithType:
        CSharp: OrderMessageType.SEND_UPDATE_PARTY
        VB: OrderMessageType.SEND_UPDATE_PARTY
      qualifiedName:
        CSharp: OrderMessageType.SEND_UPDATE_PARTY
        VB: OrderMessageType.SEND_UPDATE_PARTY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SEND_UPDATE_PARTY
        path: ''
        startLine: 14802
      syntax:
        content:
          CSharp: SEND_UPDATE_PARTY = 2
          VB: SEND_UPDATE_PARTY = 2
        return:
          type: Global.OrderMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.OrderMessageType.PLAYER_SURRENDER
      commentId: F:Global.OrderMessageType.PLAYER_SURRENDER
      language: CSharp
      name:
        CSharp: PLAYER_SURRENDER
        VB: PLAYER_SURRENDER
      nameWithType:
        CSharp: OrderMessageType.PLAYER_SURRENDER
        VB: OrderMessageType.PLAYER_SURRENDER
      qualifiedName:
        CSharp: OrderMessageType.PLAYER_SURRENDER
        VB: OrderMessageType.PLAYER_SURRENDER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PLAYER_SURRENDER
        path: ''
        startLine: 14803
      syntax:
        content:
          CSharp: PLAYER_SURRENDER = 3
          VB: PLAYER_SURRENDER = 3
        return:
          type: Global.OrderMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.MMConditionAttribute
    commentId: T:Global.MMConditionAttribute
    language: CSharp
    name:
      CSharp: MMConditionAttribute
      VB: MMConditionAttribute
    nameWithType:
      CSharp: MMConditionAttribute
      VB: MMConditionAttribute
    qualifiedName:
      CSharp: MMConditionAttribute
      VB: MMConditionAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MMConditionAttribute
      path: ''
      startLine: 14925
    syntax:
      content:
        CSharp: 'public class MMConditionAttribute : PropertyAttribute'
        VB: >-
          Public Class MMConditionAttribute

              Inherits PropertyAttribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MMConditionAttribute.ConditionBoolean
      commentId: F:Global.MMConditionAttribute.ConditionBoolean
      language: CSharp
      name:
        CSharp: ConditionBoolean
        VB: ConditionBoolean
      nameWithType:
        CSharp: MMConditionAttribute.ConditionBoolean
        VB: MMConditionAttribute.ConditionBoolean
      qualifiedName:
        CSharp: MMConditionAttribute.ConditionBoolean
        VB: MMConditionAttribute.ConditionBoolean
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ConditionBoolean
        path: ''
        startLine: 14928
      syntax:
        content:
          CSharp: public string ConditionBoolean
          VB: Public ConditionBoolean As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MMConditionAttribute.Hidden
      commentId: F:Global.MMConditionAttribute.Hidden
      language: CSharp
      name:
        CSharp: Hidden
        VB: Hidden
      nameWithType:
        CSharp: MMConditionAttribute.Hidden
        VB: MMConditionAttribute.Hidden
      qualifiedName:
        CSharp: MMConditionAttribute.Hidden
        VB: MMConditionAttribute.Hidden
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Hidden
        path: ''
        startLine: 14929
      syntax:
        content:
          CSharp: public bool Hidden
          VB: Public Hidden As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MMConditionAttribute.#ctor(System.String)
      commentId: M:Global.MMConditionAttribute.#ctor(System.String)
      language: CSharp
      name:
        CSharp: MMConditionAttribute(String)
        VB: MMConditionAttribute(String)
      nameWithType:
        CSharp: MMConditionAttribute.MMConditionAttribute(String)
        VB: MMConditionAttribute.MMConditionAttribute(String)
      qualifiedName:
        CSharp: MMConditionAttribute.MMConditionAttribute(System.String)
        VB: MMConditionAttribute.MMConditionAttribute(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 14931
      syntax:
        content:
          CSharp: public MMConditionAttribute(string conditionBoolean)
          VB: Public Sub New(conditionBoolean As String)
        parameters:
        - id: conditionBoolean
          type: System.String
      overload: Global.MMConditionAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MMConditionAttribute.#ctor(System.String,System.Boolean)
      commentId: M:Global.MMConditionAttribute.#ctor(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: MMConditionAttribute(String, Boolean)
        VB: MMConditionAttribute(String, Boolean)
      nameWithType:
        CSharp: MMConditionAttribute.MMConditionAttribute(String, Boolean)
        VB: MMConditionAttribute.MMConditionAttribute(String, Boolean)
      qualifiedName:
        CSharp: MMConditionAttribute.MMConditionAttribute(System.String, System.Boolean)
        VB: MMConditionAttribute.MMConditionAttribute(System.String, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 14937
      syntax:
        content:
          CSharp: public MMConditionAttribute(string conditionBoolean, bool hideInInspector)
          VB: Public Sub New(conditionBoolean As String, hideInInspector As Boolean)
        parameters:
        - id: conditionBoolean
          type: System.String
        - id: hideInInspector
          type: System.Boolean
      overload: Global.MMConditionAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MMEnumConditionAttribute
    commentId: T:Global.MMEnumConditionAttribute
    language: CSharp
    name:
      CSharp: MMEnumConditionAttribute
      VB: MMEnumConditionAttribute
    nameWithType:
      CSharp: MMEnumConditionAttribute
      VB: MMEnumConditionAttribute
    qualifiedName:
      CSharp: MMEnumConditionAttribute
      VB: MMEnumConditionAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MMEnumConditionAttribute
      path: ''
      startLine: 14951
    syntax:
      content:
        CSharp: 'public class MMEnumConditionAttribute : PropertyAttribute'
        VB: >-
          Public Class MMEnumConditionAttribute

              Inherits PropertyAttribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.MMEnumConditionAttribute.ConditionEnum
      commentId: F:Global.MMEnumConditionAttribute.ConditionEnum
      language: CSharp
      name:
        CSharp: ConditionEnum
        VB: ConditionEnum
      nameWithType:
        CSharp: MMEnumConditionAttribute.ConditionEnum
        VB: MMEnumConditionAttribute.ConditionEnum
      qualifiedName:
        CSharp: MMEnumConditionAttribute.ConditionEnum
        VB: MMEnumConditionAttribute.ConditionEnum
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ConditionEnum
        path: ''
        startLine: 14954
      syntax:
        content:
          CSharp: public string ConditionEnum
          VB: Public ConditionEnum As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MMEnumConditionAttribute.Hidden
      commentId: F:Global.MMEnumConditionAttribute.Hidden
      language: CSharp
      name:
        CSharp: Hidden
        VB: Hidden
      nameWithType:
        CSharp: MMEnumConditionAttribute.Hidden
        VB: MMEnumConditionAttribute.Hidden
      qualifiedName:
        CSharp: MMEnumConditionAttribute.Hidden
        VB: MMEnumConditionAttribute.Hidden
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Hidden
        path: ''
        startLine: 14955
      syntax:
        content:
          CSharp: public bool Hidden
          VB: Public Hidden As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MMEnumConditionAttribute.ContainsBitFlag(System.Int32)
      commentId: M:Global.MMEnumConditionAttribute.ContainsBitFlag(System.Int32)
      language: CSharp
      name:
        CSharp: ContainsBitFlag(Int32)
        VB: ContainsBitFlag(Int32)
      nameWithType:
        CSharp: MMEnumConditionAttribute.ContainsBitFlag(Int32)
        VB: MMEnumConditionAttribute.ContainsBitFlag(Int32)
      qualifiedName:
        CSharp: MMEnumConditionAttribute.ContainsBitFlag(System.Int32)
        VB: MMEnumConditionAttribute.ContainsBitFlag(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ContainsBitFlag
        path: ''
        startLine: 14958
      syntax:
        content:
          CSharp: public bool ContainsBitFlag(int enumValue)
          VB: Public Function ContainsBitFlag(enumValue As Integer) As Boolean
        parameters:
        - id: enumValue
          type: System.Int32
        return:
          type: System.Boolean
      overload: Global.MMEnumConditionAttribute.ContainsBitFlag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.MMEnumConditionAttribute.#ctor(System.String,System.Int32[])
      commentId: M:Global.MMEnumConditionAttribute.#ctor(System.String,System.Int32[])
      language: CSharp
      name:
        CSharp: MMEnumConditionAttribute(String, Int32[])
        VB: MMEnumConditionAttribute(String, Int32())
      nameWithType:
        CSharp: MMEnumConditionAttribute.MMEnumConditionAttribute(String, Int32[])
        VB: MMEnumConditionAttribute.MMEnumConditionAttribute(String, Int32())
      qualifiedName:
        CSharp: MMEnumConditionAttribute.MMEnumConditionAttribute(System.String, System.Int32[])
        VB: MMEnumConditionAttribute.MMEnumConditionAttribute(System.String, System.Int32())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 14963
      syntax:
        content:
          CSharp: public MMEnumConditionAttribute(string conditionBoolean, params int[] enumValues)
          VB: Public Sub New(conditionBoolean As String, ParamArray enumValues As Integer())
        parameters:
        - id: conditionBoolean
          type: System.String
        - id: enumValues
          type: System.Int32[]
      overload: Global.MMEnumConditionAttribute.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MMReadOnlyAttribute
    commentId: T:Global.MMReadOnlyAttribute
    language: CSharp
    name:
      CSharp: MMReadOnlyAttribute
      VB: MMReadOnlyAttribute
    nameWithType:
      CSharp: MMReadOnlyAttribute
      VB: MMReadOnlyAttribute
    qualifiedName:
      CSharp: MMReadOnlyAttribute
      VB: MMReadOnlyAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MMReadOnlyAttribute
      path: ''
      startLine: 14979
    syntax:
      content:
        CSharp: 'public class MMReadOnlyAttribute : PropertyAttribute'
        VB: >-
          Public Class MMReadOnlyAttribute

              Inherits PropertyAttribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.JPGGenerator
    commentId: T:Global.JPGGenerator
    language: CSharp
    name:
      CSharp: JPGGenerator
      VB: JPGGenerator
    nameWithType:
      CSharp: JPGGenerator
      VB: JPGGenerator
    qualifiedName:
      CSharp: JPGGenerator
      VB: JPGGenerator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: JPGGenerator
      path: ''
      startLine: 15088
    syntax:
      content:
        CSharp: 'public class JPGGenerator : MonoBehaviour'
        VB: >-
          Public Class JPGGenerator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.JPGGenerator.loadingPanel
      commentId: F:Global.JPGGenerator.loadingPanel
      language: CSharp
      name:
        CSharp: loadingPanel
        VB: loadingPanel
      nameWithType:
        CSharp: JPGGenerator.loadingPanel
        VB: JPGGenerator.loadingPanel
      qualifiedName:
        CSharp: JPGGenerator.loadingPanel
        VB: JPGGenerator.loadingPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: loadingPanel
        path: ''
        startLine: 15089
      syntax:
        content:
          CSharp: public GameObject loadingPanel
          VB: Public loadingPanel As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JPGGenerator.generator
      commentId: F:Global.JPGGenerator.generator
      language: CSharp
      name:
        CSharp: generator
        VB: generator
      nameWithType:
        CSharp: JPGGenerator.generator
        VB: JPGGenerator.generator
      qualifiedName:
        CSharp: JPGGenerator.generator
        VB: JPGGenerator.generator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: generator
        path: ''
        startLine: 15090
      syntax:
        content:
          CSharp: public Button generator
          VB: Public generator As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JPGGenerator._camera
      commentId: F:Global.JPGGenerator._camera
      language: CSharp
      name:
        CSharp: _camera
        VB: _camera
      nameWithType:
        CSharp: JPGGenerator._camera
        VB: JPGGenerator._camera
      qualifiedName:
        CSharp: JPGGenerator._camera
        VB: JPGGenerator._camera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _camera
        path: ''
        startLine: 15091
      syntax:
        content:
          CSharp: public Camera _camera
          VB: Public _camera As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JPGGenerator.characterDatabase
      commentId: F:Global.JPGGenerator.characterDatabase
      language: CSharp
      name:
        CSharp: characterDatabase
        VB: characterDatabase
      nameWithType:
        CSharp: JPGGenerator.characterDatabase
        VB: JPGGenerator.characterDatabase
      qualifiedName:
        CSharp: JPGGenerator.characterDatabase
        VB: JPGGenerator.characterDatabase
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: characterDatabase
        path: ''
        startLine: 15092
      syntax:
        content:
          CSharp: public CharacterDatabase characterDatabase
          VB: Public characterDatabase As CharacterDatabase
        return:
          type: Global.CharacterDatabase
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JPGGenerator.GenerateRandomJPG
      commentId: M:Global.JPGGenerator.GenerateRandomJPG
      language: CSharp
      name:
        CSharp: GenerateRandomJPG()
        VB: GenerateRandomJPG()
      nameWithType:
        CSharp: JPGGenerator.GenerateRandomJPG()
        VB: JPGGenerator.GenerateRandomJPG()
      qualifiedName:
        CSharp: JPGGenerator.GenerateRandomJPG()
        VB: JPGGenerator.GenerateRandomJPG()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GenerateRandomJPG
        path: ''
        startLine: 15096
      syntax:
        content:
          CSharp: public void GenerateRandomJPG()
          VB: Public Sub GenerateRandomJPG
      overload: Global.JPGGenerator.GenerateRandomJPG*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JPGGenerator.GenerateRandomPNG
      commentId: M:Global.JPGGenerator.GenerateRandomPNG
      language: CSharp
      name:
        CSharp: GenerateRandomPNG()
        VB: GenerateRandomPNG()
      nameWithType:
        CSharp: JPGGenerator.GenerateRandomPNG()
        VB: JPGGenerator.GenerateRandomPNG()
      qualifiedName:
        CSharp: JPGGenerator.GenerateRandomPNG()
        VB: JPGGenerator.GenerateRandomPNG()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GenerateRandomPNG
        path: ''
        startLine: 15100
      syntax:
        content:
          CSharp: public void GenerateRandomPNG()
          VB: Public Sub GenerateRandomPNG
      overload: Global.JPGGenerator.GenerateRandomPNG*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.JPGGenerator.Capture
      commentId: M:Global.JPGGenerator.Capture
      language: CSharp
      name:
        CSharp: Capture()
        VB: Capture()
      nameWithType:
        CSharp: JPGGenerator.Capture()
        VB: JPGGenerator.Capture()
      qualifiedName:
        CSharp: JPGGenerator.Capture()
        VB: JPGGenerator.Capture()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Capture
        path: ''
        startLine: 15111
      syntax:
        content:
          CSharp: public void Capture()
          VB: Public Sub Capture
      overload: Global.JPGGenerator.Capture*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.NFTGenerator
    commentId: T:Global.NFTGenerator
    language: CSharp
    name:
      CSharp: NFTGenerator
      VB: NFTGenerator
    nameWithType:
      CSharp: NFTGenerator
      VB: NFTGenerator
    qualifiedName:
      CSharp: NFTGenerator
      VB: NFTGenerator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: NFTGenerator
      path: ''
      startLine: 15151
    syntax:
      content:
        CSharp: 'public class NFTGenerator : MonoBehaviour'
        VB: >-
          Public Class NFTGenerator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.NFTGenerator.nftsToCreate
      commentId: F:Global.NFTGenerator.nftsToCreate
      language: CSharp
      name:
        CSharp: nftsToCreate
        VB: nftsToCreate
      nameWithType:
        CSharp: NFTGenerator.nftsToCreate
        VB: NFTGenerator.nftsToCreate
      qualifiedName:
        CSharp: NFTGenerator.nftsToCreate
        VB: NFTGenerator.nftsToCreate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: nftsToCreate
        path: ''
        startLine: 15154
      syntax:
        content:
          CSharp: public int nftsToCreate
          VB: Public nftsToCreate As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.NFTGenerator.characterDatabase
      commentId: F:Global.NFTGenerator.characterDatabase
      language: CSharp
      name:
        CSharp: characterDatabase
        VB: characterDatabase
      nameWithType:
        CSharp: NFTGenerator.characterDatabase
        VB: NFTGenerator.characterDatabase
      qualifiedName:
        CSharp: NFTGenerator.characterDatabase
        VB: NFTGenerator.characterDatabase
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: characterDatabase
        path: ''
        startLine: 15156
      syntax:
        content:
          CSharp: public CharacterDatabase characterDatabase
          VB: Public characterDatabase As CharacterDatabase
        return:
          type: Global.CharacterDatabase
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.NFTGenerator.CreateNFTs
      commentId: M:Global.NFTGenerator.CreateNFTs
      language: CSharp
      name:
        CSharp: CreateNFTs()
        VB: CreateNFTs()
      nameWithType:
        CSharp: NFTGenerator.CreateNFTs()
        VB: NFTGenerator.CreateNFTs()
      qualifiedName:
        CSharp: NFTGenerator.CreateNFTs()
        VB: NFTGenerator.CreateNFTs()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CreateNFTs
        path: ''
        startLine: 15158
      syntax:
        content:
          CSharp: public void CreateNFTs()
          VB: Public Sub CreateNFTs
      overload: Global.NFTGenerator.CreateNFTs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.NFTsModel
    commentId: T:Global.NFTsModel
    language: CSharp
    name:
      CSharp: NFTsModel
      VB: NFTsModel
    nameWithType:
      CSharp: NFTsModel
      VB: NFTsModel
    qualifiedName:
      CSharp: NFTsModel
      VB: NFTsModel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: NFTsModel
      path: ''
      startLine: 15168
    syntax:
      content:
        CSharp: public class NFTsModel
        VB: Public Class NFTsModel
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.NFTsModel.NFTsID
      commentId: P:Global.NFTsModel.NFTsID
      language: CSharp
      name:
        CSharp: NFTsID
        VB: NFTsID
      nameWithType:
        CSharp: NFTsModel.NFTsID
        VB: NFTsModel.NFTsID
      qualifiedName:
        CSharp: NFTsModel.NFTsID
        VB: NFTsModel.NFTsID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: NFTsID
        path: ''
        startLine: 15175
      syntax:
        content:
          CSharp: public string NFTsID { get; }
          VB: Public ReadOnly Property NFTsID As String
        parameters: []
        return:
          type: System.String
      overload: Global.NFTsModel.NFTsID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Global.RotateWithDrag
    commentId: T:Global.RotateWithDrag
    language: CSharp
    name:
      CSharp: RotateWithDrag
      VB: RotateWithDrag
    nameWithType:
      CSharp: RotateWithDrag
      VB: RotateWithDrag
    qualifiedName:
      CSharp: RotateWithDrag
      VB: RotateWithDrag
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RotateWithDrag
      path: ''
      startLine: 15187
    syntax:
      content:
        CSharp: 'public class RotateWithDrag : MonoBehaviour'
        VB: >-
          Public Class RotateWithDrag

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.GameController
    commentId: T:Global.GameController
    language: CSharp
    name:
      CSharp: GameController
      VB: GameController
    nameWithType:
      CSharp: GameController
      VB: GameController
    qualifiedName:
      CSharp: GameController
      VB: GameController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: GameController
      path: ''
      startLine: 15253
    syntax:
      content:
        CSharp: 'public class GameController : MonoBehaviour'
        VB: >-
          Public Class GameController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.TransparentBackgroundScreenshotRecorder
    commentId: T:Global.TransparentBackgroundScreenshotRecorder
    language: CSharp
    name:
      CSharp: TransparentBackgroundScreenshotRecorder
      VB: TransparentBackgroundScreenshotRecorder
    nameWithType:
      CSharp: TransparentBackgroundScreenshotRecorder
      VB: TransparentBackgroundScreenshotRecorder
    qualifiedName:
      CSharp: TransparentBackgroundScreenshotRecorder
      VB: TransparentBackgroundScreenshotRecorder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TransparentBackgroundScreenshotRecorder
      path: ''
      startLine: 15303
    syntax:
      content:
        CSharp: 'public class TransparentBackgroundScreenshotRecorder : MonoBehaviour'
        VB: >-
          Public Class TransparentBackgroundScreenshotRecorder

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TransparentBackgroundScreenshotRecorder.folderBaseName
      commentId: F:Global.TransparentBackgroundScreenshotRecorder.folderBaseName
      language: CSharp
      name:
        CSharp: folderBaseName
        VB: folderBaseName
      nameWithType:
        CSharp: TransparentBackgroundScreenshotRecorder.folderBaseName
        VB: TransparentBackgroundScreenshotRecorder.folderBaseName
      qualifiedName:
        CSharp: TransparentBackgroundScreenshotRecorder.folderBaseName
        VB: TransparentBackgroundScreenshotRecorder.folderBaseName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: folderBaseName
        path: ''
        startLine: 15308
      syntax:
        content:
          CSharp: public string folderBaseName
          VB: Public folderBaseName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TransparentBackgroundScreenshotRecorder.frameRate
      commentId: F:Global.TransparentBackgroundScreenshotRecorder.frameRate
      language: CSharp
      name:
        CSharp: frameRate
        VB: frameRate
      nameWithType:
        CSharp: TransparentBackgroundScreenshotRecorder.frameRate
        VB: TransparentBackgroundScreenshotRecorder.frameRate
      qualifiedName:
        CSharp: TransparentBackgroundScreenshotRecorder.frameRate
        VB: TransparentBackgroundScreenshotRecorder.frameRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: frameRate
        path: ''
        startLine: 15310
      syntax:
        content:
          CSharp: public int frameRate
          VB: Public frameRate As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TransparentBackgroundScreenshotRecorder.framesToCapture
      commentId: F:Global.TransparentBackgroundScreenshotRecorder.framesToCapture
      language: CSharp
      name:
        CSharp: framesToCapture
        VB: framesToCapture
      nameWithType:
        CSharp: TransparentBackgroundScreenshotRecorder.framesToCapture
        VB: TransparentBackgroundScreenshotRecorder.framesToCapture
      qualifiedName:
        CSharp: TransparentBackgroundScreenshotRecorder.framesToCapture
        VB: TransparentBackgroundScreenshotRecorder.framesToCapture
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: framesToCapture
        path: ''
        startLine: 15312
      syntax:
        content:
          CSharp: public int framesToCapture
          VB: Public framesToCapture As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TransparentBackgroundScreenshotRecorder.OnTakePhoto
      commentId: F:Global.TransparentBackgroundScreenshotRecorder.OnTakePhoto
      language: CSharp
      name:
        CSharp: OnTakePhoto
        VB: OnTakePhoto
      nameWithType:
        CSharp: TransparentBackgroundScreenshotRecorder.OnTakePhoto
        VB: TransparentBackgroundScreenshotRecorder.OnTakePhoto
      qualifiedName:
        CSharp: TransparentBackgroundScreenshotRecorder.OnTakePhoto
        VB: TransparentBackgroundScreenshotRecorder.OnTakePhoto
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTakePhoto
        path: ''
        startLine: 15330
      syntax:
        content:
          CSharp: public static Action OnTakePhoto
          VB: Public Shared OnTakePhoto As Action
        return:
          type: System.Action
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.CharacterDatabase
    commentId: T:Global.CharacterDatabase
    language: CSharp
    name:
      CSharp: CharacterDatabase
      VB: CharacterDatabase
    nameWithType:
      CSharp: CharacterDatabase
      VB: CharacterDatabase
    qualifiedName:
      CSharp: CharacterDatabase
      VB: CharacterDatabase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CharacterDatabase
      path: ''
      startLine: 15542
    syntax:
      content:
        CSharp: 'public class CharacterDatabase : ScriptableObject'
        VB: >-
          Public Class CharacterDatabase

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CharacterDatabase.CharacterSlotPrefabsList
      commentId: P:Global.CharacterDatabase.CharacterSlotPrefabsList
      language: CSharp
      name:
        CSharp: CharacterSlotPrefabsList
        VB: CharacterSlotPrefabsList
      nameWithType:
        CSharp: CharacterDatabase.CharacterSlotPrefabsList
        VB: CharacterDatabase.CharacterSlotPrefabsList
      qualifiedName:
        CSharp: CharacterDatabase.CharacterSlotPrefabsList
        VB: CharacterDatabase.CharacterSlotPrefabsList
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CharacterSlotPrefabsList
        path: ''
        startLine: 15553
      syntax:
        content:
          CSharp: public List<CharacterSlot> CharacterSlotPrefabsList { get; }
          VB: Public ReadOnly Property CharacterSlotPrefabsList As List(Of CharacterSlot)
        parameters: []
        return:
          type: System.Collections.Generic.List{CharacterSlot}
      overload: Global.CharacterDatabase.CharacterSlotPrefabsList*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.CharacterDatabase.RemoveEmptyCharacterPrefabs
      commentId: M:Global.CharacterDatabase.RemoveEmptyCharacterPrefabs
      language: CSharp
      name:
        CSharp: RemoveEmptyCharacterPrefabs()
        VB: RemoveEmptyCharacterPrefabs()
      nameWithType:
        CSharp: CharacterDatabase.RemoveEmptyCharacterPrefabs()
        VB: CharacterDatabase.RemoveEmptyCharacterPrefabs()
      qualifiedName:
        CSharp: CharacterDatabase.RemoveEmptyCharacterPrefabs()
        VB: CharacterDatabase.RemoveEmptyCharacterPrefabs()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RemoveEmptyCharacterPrefabs
        path: ''
        startLine: 15555
      syntax:
        content:
          CSharp: public void RemoveEmptyCharacterPrefabs()
          VB: Public Sub RemoveEmptyCharacterPrefabs
      overload: Global.CharacterDatabase.RemoveEmptyCharacterPrefabs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterDatabase.AddCharacterSlotToArray(CharacterSlot)
      commentId: M:Global.CharacterDatabase.AddCharacterSlotToArray(CharacterSlot)
      language: CSharp
      name:
        CSharp: AddCharacterSlotToArray(CharacterSlot)
        VB: AddCharacterSlotToArray(CharacterSlot)
      nameWithType:
        CSharp: CharacterDatabase.AddCharacterSlotToArray(CharacterSlot)
        VB: CharacterDatabase.AddCharacterSlotToArray(CharacterSlot)
      qualifiedName:
        CSharp: CharacterDatabase.AddCharacterSlotToArray(CharacterSlot)
        VB: CharacterDatabase.AddCharacterSlotToArray(CharacterSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddCharacterSlotToArray
        path: ''
        startLine: 15559
      syntax:
        content:
          CSharp: public void AddCharacterSlotToArray(CharacterSlot _characterSlot)
          VB: Public Sub AddCharacterSlotToArray(_characterSlot As CharacterSlot)
        parameters:
        - id: _characterSlot
          type: Global.CharacterSlot
      overload: Global.CharacterDatabase.AddCharacterSlotToArray*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterDatabase.FindPartTypeInName(GameObject)
      commentId: M:Global.CharacterDatabase.FindPartTypeInName(GameObject)
      language: CSharp
      name:
        CSharp: FindPartTypeInName(GameObject)
        VB: FindPartTypeInName(GameObject)
      nameWithType:
        CSharp: CharacterDatabase.FindPartTypeInName(GameObject)
        VB: CharacterDatabase.FindPartTypeInName(GameObject)
      qualifiedName:
        CSharp: CharacterDatabase.FindPartTypeInName(GameObject)
        VB: CharacterDatabase.FindPartTypeInName(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FindPartTypeInName
        path: ''
        startLine: 15589
      syntax:
        content:
          CSharp: public PartType FindPartTypeInName(GameObject _referenceGameObject)
          VB: Public Function FindPartTypeInName(_referenceGameObject As GameObject) As PartType
        parameters:
        - id: _referenceGameObject
          type: Global.GameObject
        return:
          type: Global.PartType
      overload: Global.CharacterDatabase.FindPartTypeInName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterDatabase.FindPartSlots(GameObject,Action{GameObject})
      commentId: M:Global.CharacterDatabase.FindPartSlots(GameObject,Action{GameObject})
      language: CSharp
      name:
        CSharp: FindPartSlots(GameObject, Action<GameObject>)
        VB: FindPartSlots(GameObject, Action(Of GameObject))
      nameWithType:
        CSharp: CharacterDatabase.FindPartSlots(GameObject, Action<GameObject>)
        VB: CharacterDatabase.FindPartSlots(GameObject, Action(Of GameObject))
      qualifiedName:
        CSharp: CharacterDatabase.FindPartSlots(GameObject, Action<GameObject>)
        VB: CharacterDatabase.FindPartSlots(GameObject, Action(Of GameObject))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FindPartSlots
        path: ''
        startLine: 15605
      syntax:
        content:
          CSharp: public void FindPartSlots(GameObject _referenceGameObject, Action<GameObject> _onGetSlot)
          VB: Public Sub FindPartSlots(_referenceGameObject As GameObject, _onGetSlot As Action(Of GameObject))
        parameters:
        - id: _referenceGameObject
          type: Global.GameObject
        - id: _onGetSlot
          type: Global.Action{GameObject}
      overload: Global.CharacterDatabase.FindPartSlots*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterDatabase.FindPartEntities(GameObject,Action{GameObject})
      commentId: M:Global.CharacterDatabase.FindPartEntities(GameObject,Action{GameObject})
      language: CSharp
      name:
        CSharp: FindPartEntities(GameObject, Action<GameObject>)
        VB: FindPartEntities(GameObject, Action(Of GameObject))
      nameWithType:
        CSharp: CharacterDatabase.FindPartEntities(GameObject, Action<GameObject>)
        VB: CharacterDatabase.FindPartEntities(GameObject, Action(Of GameObject))
      qualifiedName:
        CSharp: CharacterDatabase.FindPartEntities(GameObject, Action<GameObject>)
        VB: CharacterDatabase.FindPartEntities(GameObject, Action(Of GameObject))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FindPartEntities
        path: ''
        startLine: 15622
      syntax:
        content:
          CSharp: public void FindPartEntities(GameObject _referenceGameObject, Action<GameObject> _onGetEntity)
          VB: Public Sub FindPartEntities(_referenceGameObject As GameObject, _onGetEntity As Action(Of GameObject))
        parameters:
        - id: _referenceGameObject
          type: Global.GameObject
        - id: _onGetEntity
          type: Global.Action{GameObject}
      overload: Global.CharacterDatabase.FindPartEntities*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterDatabase.CaptureImagePath
      commentId: P:Global.CharacterDatabase.CaptureImagePath
      language: CSharp
      name:
        CSharp: CaptureImagePath
        VB: CaptureImagePath
      nameWithType:
        CSharp: CharacterDatabase.CaptureImagePath
        VB: CharacterDatabase.CaptureImagePath
      qualifiedName:
        CSharp: CharacterDatabase.CaptureImagePath
        VB: CharacterDatabase.CaptureImagePath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CaptureImagePath
        path: ''
        startLine: 15649
      syntax:
        content:
          CSharp: public string CaptureImagePath { get; }
          VB: Public ReadOnly Property CaptureImagePath As String
        parameters: []
        return:
          type: System.String
      overload: Global.CharacterDatabase.CaptureImagePath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.CharacterDatabase.PartEntityModel
      commentId: P:Global.CharacterDatabase.PartEntityModel
      language: CSharp
      name:
        CSharp: PartEntityModel
        VB: PartEntityModel
      nameWithType:
        CSharp: CharacterDatabase.PartEntityModel
        VB: CharacterDatabase.PartEntityModel
      qualifiedName:
        CSharp: CharacterDatabase.PartEntityModel
        VB: CharacterDatabase.PartEntityModel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PartEntityModel
        path: ''
        startLine: 15651
      syntax:
        content:
          CSharp: public List<PartEntityModel> PartEntityModel { get; }
          VB: Public ReadOnly Property PartEntityModel As List(Of PartEntityModel)
        parameters: []
        return:
          type: System.Collections.Generic.List{PartEntityModel}
      overload: Global.CharacterDatabase.PartEntityModel*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.CharacterDatabase.NFTsModels
      commentId: P:Global.CharacterDatabase.NFTsModels
      language: CSharp
      name:
        CSharp: NFTsModels
        VB: NFTsModels
      nameWithType:
        CSharp: CharacterDatabase.NFTsModels
        VB: CharacterDatabase.NFTsModels
      qualifiedName:
        CSharp: CharacterDatabase.NFTsModels
        VB: CharacterDatabase.NFTsModels
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: NFTsModels
        path: ''
        startLine: 15652
      syntax:
        content:
          CSharp: public NFTsModel[] NFTsModels { get; }
          VB: Public ReadOnly Property NFTsModels As NFTsModel()
        parameters: []
        return:
          type: Global.NFTsModel[]
      overload: Global.CharacterDatabase.NFTsModels*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.CharacterDatabase.AddElement
      commentId: M:Global.CharacterDatabase.AddElement
      language: CSharp
      name:
        CSharp: AddElement()
        VB: AddElement()
      nameWithType:
        CSharp: CharacterDatabase.AddElement()
        VB: CharacterDatabase.AddElement()
      qualifiedName:
        CSharp: CharacterDatabase.AddElement()
        VB: CharacterDatabase.AddElement()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddElement
        path: ''
        startLine: 15654
      syntax:
        content:
          CSharp: public void AddElement()
          VB: Public Sub AddElement
      overload: Global.CharacterDatabase.AddElement*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterDatabase.AddPartEntityToArray(PartType,PartEntity)
      commentId: M:Global.CharacterDatabase.AddPartEntityToArray(PartType,PartEntity)
      language: CSharp
      name:
        CSharp: AddPartEntityToArray(PartType, PartEntity)
        VB: AddPartEntityToArray(PartType, PartEntity)
      nameWithType:
        CSharp: CharacterDatabase.AddPartEntityToArray(PartType, PartEntity)
        VB: CharacterDatabase.AddPartEntityToArray(PartType, PartEntity)
      qualifiedName:
        CSharp: CharacterDatabase.AddPartEntityToArray(PartType, PartEntity)
        VB: CharacterDatabase.AddPartEntityToArray(PartType, PartEntity)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddPartEntityToArray
        path: ''
        startLine: 15659
      syntax:
        content:
          CSharp: public void AddPartEntityToArray(PartType _partType, PartEntity _partEntity)
          VB: Public Sub AddPartEntityToArray(_partType As PartType, _partEntity As PartEntity)
        parameters:
        - id: _partType
          type: Global.PartType
        - id: _partEntity
          type: Global.PartEntity
      overload: Global.CharacterDatabase.AddPartEntityToArray*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterDatabase.DetermineEntityRarity(PartEntity@)
      commentId: M:Global.CharacterDatabase.DetermineEntityRarity(PartEntity@)
      language: CSharp
      name:
        CSharp: DetermineEntityRarity(ref PartEntity)
        VB: DetermineEntityRarity(ByRef PartEntity)
      nameWithType:
        CSharp: CharacterDatabase.DetermineEntityRarity(ref PartEntity)
        VB: CharacterDatabase.DetermineEntityRarity(ByRef PartEntity)
      qualifiedName:
        CSharp: CharacterDatabase.DetermineEntityRarity(ref PartEntity)
        VB: CharacterDatabase.DetermineEntityRarity(ByRef PartEntity)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DetermineEntityRarity
        path: ''
        startLine: 15675
      syntax:
        content:
          CSharp: public RarityType DetermineEntityRarity(ref PartEntity _partEntity)
          VB: Public Function DetermineEntityRarity(ByRef _partEntity As PartEntity) As RarityType
        parameters:
        - id: _partEntity
          type: Global.PartEntity
        return:
          type: Global.RarityType
      overload: Global.CharacterDatabase.DetermineEntityRarity*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterDatabase.GetNFT(System.String[])
      commentId: M:Global.CharacterDatabase.GetNFT(System.String[])
      language: CSharp
      name:
        CSharp: GetNFT(String[])
        VB: GetNFT(String())
      nameWithType:
        CSharp: CharacterDatabase.GetNFT(String[])
        VB: CharacterDatabase.GetNFT(String())
      qualifiedName:
        CSharp: CharacterDatabase.GetNFT(System.String[])
        VB: CharacterDatabase.GetNFT(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetNFT
        path: ''
        startLine: 15681
      syntax:
        content:
          CSharp: public NFTsModel[] GetNFT(string[] _nftsIDs)
          VB: Public Function GetNFT(_nftsIDs As String()) As NFTsModel()
        parameters:
        - id: _nftsIDs
          type: System.String[]
        return:
          type: Global.NFTsModel[]
      overload: Global.CharacterDatabase.GetNFT*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PartEntityModel
    commentId: T:Global.PartEntityModel
    language: CSharp
    name:
      CSharp: PartEntityModel
      VB: PartEntityModel
    nameWithType:
      CSharp: PartEntityModel
      VB: PartEntityModel
    qualifiedName:
      CSharp: PartEntityModel
      VB: PartEntityModel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PartEntityModel
      path: ''
      startLine: 15705
    syntax:
      content:
        CSharp: public class PartEntityModel
        VB: Public Class PartEntityModel
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PartEntityModel.PartType
      commentId: P:Global.PartEntityModel.PartType
      language: CSharp
      name:
        CSharp: PartType
        VB: PartType
      nameWithType:
        CSharp: PartEntityModel.PartType
        VB: PartEntityModel.PartType
      qualifiedName:
        CSharp: PartEntityModel.PartType
        VB: PartEntityModel.PartType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PartType
        path: ''
        startLine: 15709
      syntax:
        content:
          CSharp: public PartType PartType { get; }
          VB: Public ReadOnly Property PartType As PartType
        parameters: []
        return:
          type: Global.PartType
      overload: Global.PartEntityModel.PartType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.PartEntityModel.PartRarityModels
      commentId: P:Global.PartEntityModel.PartRarityModels
      language: CSharp
      name:
        CSharp: PartRarityModels
        VB: PartRarityModels
      nameWithType:
        CSharp: PartEntityModel.PartRarityModels
        VB: PartEntityModel.PartRarityModels
      qualifiedName:
        CSharp: PartEntityModel.PartRarityModels
        VB: PartEntityModel.PartRarityModels
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PartRarityModels
        path: ''
        startLine: 15731
      syntax:
        content:
          CSharp: public List<PartRarityModel> PartRarityModels { get; }
          VB: Public ReadOnly Property PartRarityModels As List(Of PartRarityModel)
        parameters: []
        return:
          type: System.Collections.Generic.List{PartRarityModel}
      overload: Global.PartEntityModel.PartRarityModels*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.PartEntityModel.AddEntity(RarityType,PartEntity)
      commentId: M:Global.PartEntityModel.AddEntity(RarityType,PartEntity)
      language: CSharp
      name:
        CSharp: AddEntity(RarityType, PartEntity)
        VB: AddEntity(RarityType, PartEntity)
      nameWithType:
        CSharp: PartEntityModel.AddEntity(RarityType, PartEntity)
        VB: PartEntityModel.AddEntity(RarityType, PartEntity)
      qualifiedName:
        CSharp: PartEntityModel.AddEntity(RarityType, PartEntity)
        VB: PartEntityModel.AddEntity(RarityType, PartEntity)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddEntity
        path: ''
        startLine: 15733
      syntax:
        content:
          CSharp: public void AddEntity(RarityType _rarityType, PartEntity _partEntity)
          VB: Public Sub AddEntity(_rarityType As RarityType, _partEntity As PartEntity)
        parameters:
        - id: _rarityType
          type: Global.RarityType
        - id: _partEntity
          type: Global.PartEntity
      overload: Global.PartEntityModel.AddEntity*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PartRarityModel
    commentId: T:Global.PartRarityModel
    language: CSharp
    name:
      CSharp: PartRarityModel
      VB: PartRarityModel
    nameWithType:
      CSharp: PartRarityModel
      VB: PartRarityModel
    qualifiedName:
      CSharp: PartRarityModel
      VB: PartRarityModel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PartRarityModel
      path: ''
      startLine: 15745
    syntax:
      content:
        CSharp: public class PartRarityModel
        VB: Public Class PartRarityModel
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PartRarityModel.PartRarityType
      commentId: P:Global.PartRarityModel.PartRarityType
      language: CSharp
      name:
        CSharp: PartRarityType
        VB: PartRarityType
      nameWithType:
        CSharp: PartRarityModel.PartRarityType
        VB: PartRarityModel.PartRarityType
      qualifiedName:
        CSharp: PartRarityModel.PartRarityType
        VB: PartRarityModel.PartRarityType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PartRarityType
        path: ''
        startLine: 15754
      syntax:
        content:
          CSharp: public RarityType PartRarityType { get; }
          VB: Public ReadOnly Property PartRarityType As RarityType
        parameters: []
        return:
          type: Global.RarityType
      overload: Global.PartRarityModel.PartRarityType*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.PartRarityModel.PartEntities
      commentId: P:Global.PartRarityModel.PartEntities
      language: CSharp
      name:
        CSharp: PartEntities
        VB: PartEntities
      nameWithType:
        CSharp: PartRarityModel.PartEntities
        VB: PartRarityModel.PartEntities
      qualifiedName:
        CSharp: PartRarityModel.PartEntities
        VB: PartRarityModel.PartEntities
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PartEntities
        path: ''
        startLine: 15756
      syntax:
        content:
          CSharp: public List<PartEntity> PartEntities { get; }
          VB: Public ReadOnly Property PartEntities As List(Of PartEntity)
        parameters: []
        return:
          type: System.Collections.Generic.List{PartEntity}
      overload: Global.PartRarityModel.PartEntities*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.PartRarityModel.#ctor(RarityType,System.Collections.Generic.List{PartEntity})
      commentId: M:Global.PartRarityModel.#ctor(RarityType,System.Collections.Generic.List{PartEntity})
      language: CSharp
      name:
        CSharp: PartRarityModel(RarityType, List<PartEntity>)
        VB: PartRarityModel(RarityType, List(Of PartEntity))
      nameWithType:
        CSharp: PartRarityModel.PartRarityModel(RarityType, List<PartEntity>)
        VB: PartRarityModel.PartRarityModel(RarityType, List(Of PartEntity))
      qualifiedName:
        CSharp: PartRarityModel.PartRarityModel(RarityType, System.Collections.Generic.List<PartEntity>)
        VB: PartRarityModel.PartRarityModel(RarityType, System.Collections.Generic.List(Of PartEntity))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 15757
      syntax:
        content:
          CSharp: public PartRarityModel(RarityType _partRarityType, List<PartEntity> _partEntity)
          VB: Public Sub New(_partRarityType As RarityType, _partEntity As List(Of PartEntity))
        parameters:
        - id: _partRarityType
          type: Global.RarityType
        - id: _partEntity
          type: System.Collections.Generic.List{PartEntity}
      overload: Global.PartRarityModel.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartRarityModel.AddEntity(PartEntity)
      commentId: M:Global.PartRarityModel.AddEntity(PartEntity)
      language: CSharp
      name:
        CSharp: AddEntity(PartEntity)
        VB: AddEntity(PartEntity)
      nameWithType:
        CSharp: PartRarityModel.AddEntity(PartEntity)
        VB: PartRarityModel.AddEntity(PartEntity)
      qualifiedName:
        CSharp: PartRarityModel.AddEntity(PartEntity)
        VB: PartRarityModel.AddEntity(PartEntity)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddEntity
        path: ''
        startLine: 15763
      syntax:
        content:
          CSharp: public void AddEntity(PartEntity _partEntity)
          VB: Public Sub AddEntity(_partEntity As PartEntity)
        parameters:
        - id: _partEntity
          type: Global.PartEntity
      overload: Global.PartRarityModel.AddEntity*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartRarityModel.RemoveEntity(PartEntity)
      commentId: M:Global.PartRarityModel.RemoveEntity(PartEntity)
      language: CSharp
      name:
        CSharp: RemoveEntity(PartEntity)
        VB: RemoveEntity(PartEntity)
      nameWithType:
        CSharp: PartRarityModel.RemoveEntity(PartEntity)
        VB: PartRarityModel.RemoveEntity(PartEntity)
      qualifiedName:
        CSharp: PartRarityModel.RemoveEntity(PartEntity)
        VB: PartRarityModel.RemoveEntity(PartEntity)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RemoveEntity
        path: ''
        startLine: 15796
      syntax:
        content:
          CSharp: public void RemoveEntity(PartEntity _partEntity)
          VB: Public Sub RemoveEntity(_partEntity As PartEntity)
        parameters:
        - id: _partEntity
          type: Global.PartEntity
      overload: Global.PartRarityModel.RemoveEntity*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CharacterSelectorController
    commentId: T:Global.CharacterSelectorController
    language: CSharp
    name:
      CSharp: CharacterSelectorController
      VB: CharacterSelectorController
    nameWithType:
      CSharp: CharacterSelectorController
      VB: CharacterSelectorController
    qualifiedName:
      CSharp: CharacterSelectorController
      VB: CharacterSelectorController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CharacterSelectorController
      path: ''
      startLine: 15845
    syntax:
      content:
        CSharp: 'public class CharacterSelectorController : MonoBehaviour'
        VB: >-
          Public Class CharacterSelectorController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CharacterSelectorController.randomButton
      commentId: F:Global.CharacterSelectorController.randomButton
      language: CSharp
      name:
        CSharp: randomButton
        VB: randomButton
      nameWithType:
        CSharp: CharacterSelectorController.randomButton
        VB: CharacterSelectorController.randomButton
      qualifiedName:
        CSharp: CharacterSelectorController.randomButton
        VB: CharacterSelectorController.randomButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: randomButton
        path: ''
        startLine: 15847
      syntax:
        content:
          CSharp: public Button randomButton
          VB: Public randomButton As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterSelectorController.characterContainer
      commentId: F:Global.CharacterSelectorController.characterContainer
      language: CSharp
      name:
        CSharp: characterContainer
        VB: characterContainer
      nameWithType:
        CSharp: CharacterSelectorController.characterContainer
        VB: CharacterSelectorController.characterContainer
      qualifiedName:
        CSharp: CharacterSelectorController.characterContainer
        VB: CharacterSelectorController.characterContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: characterContainer
        path: ''
        startLine: 15849
      syntax:
        content:
          CSharp: public Transform characterContainer
          VB: Public characterContainer As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterSelectorController.characterSelectorPrefab
      commentId: F:Global.CharacterSelectorController.characterSelectorPrefab
      language: CSharp
      name:
        CSharp: characterSelectorPrefab
        VB: characterSelectorPrefab
      nameWithType:
        CSharp: CharacterSelectorController.characterSelectorPrefab
        VB: CharacterSelectorController.characterSelectorPrefab
      qualifiedName:
        CSharp: CharacterSelectorController.characterSelectorPrefab
        VB: CharacterSelectorController.characterSelectorPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: characterSelectorPrefab
        path: ''
        startLine: 15851
      syntax:
        content:
          CSharp: public CharacterSelector characterSelectorPrefab
          VB: Public characterSelectorPrefab As CharacterSelector
        return:
          type: Global.CharacterSelector
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterSelectorController.characterSelectorContainer
      commentId: F:Global.CharacterSelectorController.characterSelectorContainer
      language: CSharp
      name:
        CSharp: characterSelectorContainer
        VB: characterSelectorContainer
      nameWithType:
        CSharp: CharacterSelectorController.characterSelectorContainer
        VB: CharacterSelectorController.characterSelectorContainer
      qualifiedName:
        CSharp: CharacterSelectorController.characterSelectorContainer
        VB: CharacterSelectorController.characterSelectorContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: characterSelectorContainer
        path: ''
        startLine: 15852
      syntax:
        content:
          CSharp: public Transform characterSelectorContainer
          VB: Public characterSelectorContainer As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterSelectorController.partSelectorPrefab
      commentId: F:Global.CharacterSelectorController.partSelectorPrefab
      language: CSharp
      name:
        CSharp: partSelectorPrefab
        VB: partSelectorPrefab
      nameWithType:
        CSharp: CharacterSelectorController.partSelectorPrefab
        VB: CharacterSelectorController.partSelectorPrefab
      qualifiedName:
        CSharp: CharacterSelectorController.partSelectorPrefab
        VB: CharacterSelectorController.partSelectorPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: partSelectorPrefab
        path: ''
        startLine: 15854
      syntax:
        content:
          CSharp: public PartSelector partSelectorPrefab
          VB: Public partSelectorPrefab As PartSelector
        return:
          type: Global.PartSelector
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterSelectorController.partSelectorContainer
      commentId: F:Global.CharacterSelectorController.partSelectorContainer
      language: CSharp
      name:
        CSharp: partSelectorContainer
        VB: partSelectorContainer
      nameWithType:
        CSharp: CharacterSelectorController.partSelectorContainer
        VB: CharacterSelectorController.partSelectorContainer
      qualifiedName:
        CSharp: CharacterSelectorController.partSelectorContainer
        VB: CharacterSelectorController.partSelectorContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: partSelectorContainer
        path: ''
        startLine: 15855
      syntax:
        content:
          CSharp: public Transform partSelectorContainer
          VB: Public partSelectorContainer As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterSelectorController.SelectCharacter(System.Int32)
      commentId: M:Global.CharacterSelectorController.SelectCharacter(System.Int32)
      language: CSharp
      name:
        CSharp: SelectCharacter(Int32)
        VB: SelectCharacter(Int32)
      nameWithType:
        CSharp: CharacterSelectorController.SelectCharacter(Int32)
        VB: CharacterSelectorController.SelectCharacter(Int32)
      qualifiedName:
        CSharp: CharacterSelectorController.SelectCharacter(System.Int32)
        VB: CharacterSelectorController.SelectCharacter(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SelectCharacter
        path: ''
        startLine: 15924
      syntax:
        content:
          CSharp: public void SelectCharacter(int _characterIndex)
          VB: Public Sub SelectCharacter(_characterIndex As Integer)
        parameters:
        - id: _characterIndex
          type: System.Int32
      overload: Global.CharacterSelectorController.SelectCharacter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterSelectorController.OnButtonPress(System.Boolean,PartSlot,PartSelector)
      commentId: M:Global.CharacterSelectorController.OnButtonPress(System.Boolean,PartSlot,PartSelector)
      language: CSharp
      name:
        CSharp: OnButtonPress(Boolean, PartSlot, PartSelector)
        VB: OnButtonPress(Boolean, PartSlot, PartSelector)
      nameWithType:
        CSharp: CharacterSelectorController.OnButtonPress(Boolean, PartSlot, PartSelector)
        VB: CharacterSelectorController.OnButtonPress(Boolean, PartSlot, PartSelector)
      qualifiedName:
        CSharp: CharacterSelectorController.OnButtonPress(System.Boolean, PartSlot, PartSelector)
        VB: CharacterSelectorController.OnButtonPress(System.Boolean, PartSlot, PartSelector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnButtonPress
        path: ''
        startLine: 16012
      syntax:
        content:
          CSharp: public void OnButtonPress(bool _isLeftButton, PartSlot _dummyBodyPart, PartSelector _dummyPartSelector)
          VB: Public Sub OnButtonPress(_isLeftButton As Boolean, _dummyBodyPart As PartSlot, _dummyPartSelector As PartSelector)
        parameters:
        - id: _isLeftButton
          type: System.Boolean
        - id: _dummyBodyPart
          type: Global.PartSlot
        - id: _dummyPartSelector
          type: Global.PartSelector
      overload: Global.CharacterSelectorController.OnButtonPress*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterSelectorController.GetCharacterUniqueID
      commentId: M:Global.CharacterSelectorController.GetCharacterUniqueID
      language: CSharp
      name:
        CSharp: GetCharacterUniqueID()
        VB: GetCharacterUniqueID()
      nameWithType:
        CSharp: CharacterSelectorController.GetCharacterUniqueID()
        VB: CharacterSelectorController.GetCharacterUniqueID()
      qualifiedName:
        CSharp: CharacterSelectorController.GetCharacterUniqueID()
        VB: CharacterSelectorController.GetCharacterUniqueID()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetCharacterUniqueID
        path: ''
        startLine: 16030
      syntax:
        content:
          CSharp: public void GetCharacterUniqueID()
          VB: Public Sub GetCharacterUniqueID
      overload: Global.CharacterSelectorController.GetCharacterUniqueID*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterSelectorController.OnRandomSelect
      commentId: M:Global.CharacterSelectorController.OnRandomSelect
      language: CSharp
      name:
        CSharp: OnRandomSelect()
        VB: OnRandomSelect()
      nameWithType:
        CSharp: CharacterSelectorController.OnRandomSelect()
        VB: CharacterSelectorController.OnRandomSelect()
      qualifiedName:
        CSharp: CharacterSelectorController.OnRandomSelect()
        VB: CharacterSelectorController.OnRandomSelect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnRandomSelect
        path: ''
        startLine: 16054
      syntax:
        content:
          CSharp: public void OnRandomSelect()
          VB: Public Sub OnRandomSelect
      overload: Global.CharacterSelectorController.OnRandomSelect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CharacterAPI
    commentId: T:Global.CharacterAPI
    language: CSharp
    name:
      CSharp: CharacterAPI
      VB: CharacterAPI
    nameWithType:
      CSharp: CharacterAPI
      VB: CharacterAPI
    qualifiedName:
      CSharp: CharacterAPI
      VB: CharacterAPI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CharacterAPI
      path: ''
      startLine: 16123
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class CharacterAPI
        VB: >-
          <Serializable>

          Public Class CharacterAPI
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CharacterAPI.Ears
      commentId: F:Global.CharacterAPI.Ears
      language: CSharp
      name:
        CSharp: Ears
        VB: Ears
      nameWithType:
        CSharp: CharacterAPI.Ears
        VB: CharacterAPI.Ears
      qualifiedName:
        CSharp: CharacterAPI.Ears
        VB: CharacterAPI.Ears
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Ears
        path: ''
        startLine: 16126
      syntax:
        content:
          CSharp: public long Ears
          VB: Public Ears As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterAPI.Accessory
      commentId: F:Global.CharacterAPI.Accessory
      language: CSharp
      name:
        CSharp: Accessory
        VB: Accessory
      nameWithType:
        CSharp: CharacterAPI.Accessory
        VB: CharacterAPI.Accessory
      qualifiedName:
        CSharp: CharacterAPI.Accessory
        VB: CharacterAPI.Accessory
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Accessory
        path: ''
        startLine: 16127
      syntax:
        content:
          CSharp: public long Accessory
          VB: Public Accessory As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterAPI.Body
      commentId: F:Global.CharacterAPI.Body
      language: CSharp
      name:
        CSharp: Body
        VB: Body
      nameWithType:
        CSharp: CharacterAPI.Body
        VB: CharacterAPI.Body
      qualifiedName:
        CSharp: CharacterAPI.Body
        VB: CharacterAPI.Body
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Body
        path: ''
        startLine: 16128
      syntax:
        content:
          CSharp: public long Body
          VB: Public Body As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterAPI.Head
      commentId: F:Global.CharacterAPI.Head
      language: CSharp
      name:
        CSharp: Head
        VB: Head
      nameWithType:
        CSharp: CharacterAPI.Head
        VB: CharacterAPI.Head
      qualifiedName:
        CSharp: CharacterAPI.Head
        VB: CharacterAPI.Head
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Head
        path: ''
        startLine: 16129
      syntax:
        content:
          CSharp: public long Head
          VB: Public Head As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterAPI.Tail
      commentId: F:Global.CharacterAPI.Tail
      language: CSharp
      name:
        CSharp: Tail
        VB: Tail
      nameWithType:
        CSharp: CharacterAPI.Tail
        VB: CharacterAPI.Tail
      qualifiedName:
        CSharp: CharacterAPI.Tail
        VB: CharacterAPI.Tail
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Tail
        path: ''
        startLine: 16130
      syntax:
        content:
          CSharp: public long Tail
          VB: Public Tail As Long
        return:
          type: System.Int64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PartIndex
    commentId: T:Global.PartIndex
    language: CSharp
    name:
      CSharp: PartIndex
      VB: PartIndex
    nameWithType:
      CSharp: PartIndex
      VB: PartIndex
    qualifiedName:
      CSharp: PartIndex
      VB: PartIndex
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PartIndex
      path: ''
      startLine: 16220
    summary: "\nIndex of all the current parts of the character\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PartIndex : SerializedScriptableObject'
        VB: >-
          Public Class PartIndex

              Inherits SerializedScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PartIndex.accessoriesPartNames
      commentId: F:Global.PartIndex.accessoriesPartNames
      language: CSharp
      name:
        CSharp: accessoriesPartNames
        VB: accessoriesPartNames
      nameWithType:
        CSharp: PartIndex.accessoriesPartNames
        VB: PartIndex.accessoriesPartNames
      qualifiedName:
        CSharp: PartIndex.accessoriesPartNames
        VB: PartIndex.accessoriesPartNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: accessoriesPartNames
        path: ''
        startLine: 16223
      syntax:
        content:
          CSharp: public List<string> accessoriesPartNames
          VB: Public accessoriesPartNames As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.bodyPartNames
      commentId: F:Global.PartIndex.bodyPartNames
      language: CSharp
      name:
        CSharp: bodyPartNames
        VB: bodyPartNames
      nameWithType:
        CSharp: PartIndex.bodyPartNames
        VB: PartIndex.bodyPartNames
      qualifiedName:
        CSharp: PartIndex.bodyPartNames
        VB: PartIndex.bodyPartNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bodyPartNames
        path: ''
        startLine: 16224
      syntax:
        content:
          CSharp: public List<string> bodyPartNames
          VB: Public bodyPartNames As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.earsPartNames
      commentId: F:Global.PartIndex.earsPartNames
      language: CSharp
      name:
        CSharp: earsPartNames
        VB: earsPartNames
      nameWithType:
        CSharp: PartIndex.earsPartNames
        VB: PartIndex.earsPartNames
      qualifiedName:
        CSharp: PartIndex.earsPartNames
        VB: PartIndex.earsPartNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: earsPartNames
        path: ''
        startLine: 16225
      syntax:
        content:
          CSharp: public List<string> earsPartNames
          VB: Public earsPartNames As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.headPartNames
      commentId: F:Global.PartIndex.headPartNames
      language: CSharp
      name:
        CSharp: headPartNames
        VB: headPartNames
      nameWithType:
        CSharp: PartIndex.headPartNames
        VB: PartIndex.headPartNames
      qualifiedName:
        CSharp: PartIndex.headPartNames
        VB: PartIndex.headPartNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: headPartNames
        path: ''
        startLine: 16226
      syntax:
        content:
          CSharp: public List<string> headPartNames
          VB: Public headPartNames As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.tailPartNames
      commentId: F:Global.PartIndex.tailPartNames
      language: CSharp
      name:
        CSharp: tailPartNames
        VB: tailPartNames
      nameWithType:
        CSharp: PartIndex.tailPartNames
        VB: PartIndex.tailPartNames
      qualifiedName:
        CSharp: PartIndex.tailPartNames
        VB: PartIndex.tailPartNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tailPartNames
        path: ''
        startLine: 16227
      syntax:
        content:
          CSharp: public List<string> tailPartNames
          VB: Public tailPartNames As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.SetNames
      commentId: F:Global.PartIndex.SetNames
      language: CSharp
      name:
        CSharp: SetNames
        VB: SetNames
      nameWithType:
        CSharp: PartIndex.SetNames
        VB: PartIndex.SetNames
      qualifiedName:
        CSharp: PartIndex.SetNames
        VB: PartIndex.SetNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetNames
        path: ''
        startLine: 16228
      syntax:
        content:
          CSharp: public Dictionary<string, string> SetNames
          VB: Public SetNames As Dictionary(Of String, String)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.GenerateRandomShinsei
      commentId: M:Global.PartIndex.GenerateRandomShinsei
      language: CSharp
      name:
        CSharp: GenerateRandomShinsei()
        VB: GenerateRandomShinsei()
      nameWithType:
        CSharp: PartIndex.GenerateRandomShinsei()
        VB: PartIndex.GenerateRandomShinsei()
      qualifiedName:
        CSharp: PartIndex.GenerateRandomShinsei()
        VB: PartIndex.GenerateRandomShinsei()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GenerateRandomShinsei
        path: ''
        startLine: 16232
      syntax:
        content:
          CSharp: public string GenerateRandomShinsei()
          VB: Public Function GenerateRandomShinsei As String
        return:
          type: System.String
      overload: Global.PartIndex.GenerateRandomShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.SetShinseiColor(System.String)
      commentId: M:Global.PartIndex.SetShinseiColor(System.String)
      language: CSharp
      name:
        CSharp: SetShinseiColor(String)
        VB: SetShinseiColor(String)
      nameWithType:
        CSharp: PartIndex.SetShinseiColor(String)
        VB: PartIndex.SetShinseiColor(String)
      qualifiedName:
        CSharp: PartIndex.SetShinseiColor(System.String)
        VB: PartIndex.SetShinseiColor(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetShinseiColor
        path: ''
        startLine: 16256
      syntax:
        content:
          CSharp: public int SetShinseiColor(string dna)
          VB: Public Function SetShinseiColor(dna As String) As Integer
        parameters:
        - id: dna
          type: System.String
        return:
          type: System.Int32
      overload: Global.PartIndex.SetShinseiColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.GetShinseiType(System.String)
      commentId: M:Global.PartIndex.GetShinseiType(System.String)
      language: CSharp
      name:
        CSharp: GetShinseiType(String)
        VB: GetShinseiType(String)
      nameWithType:
        CSharp: PartIndex.GetShinseiType(String)
        VB: PartIndex.GetShinseiType(String)
      qualifiedName:
        CSharp: PartIndex.GetShinseiType(System.String)
        VB: PartIndex.GetShinseiType(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetShinseiType
        path: ''
        startLine: 16263
      syntax:
        content:
          CSharp: public CharacterType GetShinseiType(string shinseiDna)
          VB: Public Function GetShinseiType(shinseiDna As String) As CharacterType
        parameters:
        - id: shinseiDna
          type: System.String
        return:
          type: Global.CharacterType
      overload: Global.PartIndex.GetShinseiType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.GetShinseiRarity(System.String)
      commentId: M:Global.PartIndex.GetShinseiRarity(System.String)
      language: CSharp
      name:
        CSharp: GetShinseiRarity(String)
        VB: GetShinseiRarity(String)
      nameWithType:
        CSharp: PartIndex.GetShinseiRarity(String)
        VB: PartIndex.GetShinseiRarity(String)
      qualifiedName:
        CSharp: PartIndex.GetShinseiRarity(System.String)
        VB: PartIndex.GetShinseiRarity(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetShinseiRarity
        path: ''
        startLine: 16279
      syntax:
        content:
          CSharp: public RarityType GetShinseiRarity(string shinseiDna)
          VB: Public Function GetShinseiRarity(shinseiDna As String) As RarityType
        parameters:
        - id: shinseiDna
          type: System.String
        return:
          type: Global.RarityType
      overload: Global.PartIndex.GetShinseiRarity*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.GetShinseiPartTypes(System.String,Enum)
      commentId: M:Global.PartIndex.GetShinseiPartTypes(System.String,Enum)
      language: CSharp
      name:
        CSharp: GetShinseiPartTypes(String, Enum)
        VB: GetShinseiPartTypes(String, Enum)
      nameWithType:
        CSharp: PartIndex.GetShinseiPartTypes(String, Enum)
        VB: PartIndex.GetShinseiPartTypes(String, Enum)
      qualifiedName:
        CSharp: PartIndex.GetShinseiPartTypes(System.String, Enum)
        VB: PartIndex.GetShinseiPartTypes(System.String, Enum)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetShinseiPartTypes
        path: ''
        startLine: 16307
      syntax:
        content:
          CSharp: public Dictionary<string, string> GetShinseiPartTypes(string shinseiDna, Enum genEnum)
          VB: Public Function GetShinseiPartTypes(shinseiDna As String, genEnum As  Enum) As Dictionary(Of String, String)
        parameters:
        - id: shinseiDna
          type: System.String
        - id: genEnum
          type: Global.Enum
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Global.PartIndex.GetShinseiPartTypes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.ClearAllLists
      commentId: M:Global.PartIndex.ClearAllLists
      language: CSharp
      name:
        CSharp: ClearAllLists()
        VB: ClearAllLists()
      nameWithType:
        CSharp: PartIndex.ClearAllLists()
        VB: PartIndex.ClearAllLists()
      qualifiedName:
        CSharp: PartIndex.ClearAllLists()
        VB: PartIndex.ClearAllLists()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ClearAllLists
        path: ''
        startLine: 16329
      syntax:
        content:
          CSharp: public void ClearAllLists()
          VB: Public Sub ClearAllLists
      overload: Global.PartIndex.ClearAllLists*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.ParseShinseiDNA(System.String,System.Int32,System.Int32)
      commentId: M:Global.PartIndex.ParseShinseiDNA(System.String,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: ParseShinseiDNA(String, Int32, Int32)
        VB: ParseShinseiDNA(String, Int32, Int32)
      nameWithType:
        CSharp: PartIndex.ParseShinseiDNA(String, Int32, Int32)
        VB: PartIndex.ParseShinseiDNA(String, Int32, Int32)
      qualifiedName:
        CSharp: PartIndex.ParseShinseiDNA(System.String, System.Int32, System.Int32)
        VB: PartIndex.ParseShinseiDNA(System.String, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ParseShinseiDNA
        path: ''
        startLine: 16380
      syntax:
        content:
          CSharp: public string ParseShinseiDNA(string shinseiDna, int colorDigits, int partDigits)
          VB: Public Function ParseShinseiDNA(shinseiDna As String, colorDigits As Integer, partDigits As Integer) As String
        parameters:
        - id: shinseiDna
          type: System.String
        - id: colorDigits
          type: System.Int32
        - id: partDigits
          type: System.Int32
        return:
          type: System.String
      overload: Global.PartIndex.ParseShinseiDNA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.GetPartsDna(System.String,System.Int32)
      commentId: M:Global.PartIndex.GetPartsDna(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: GetPartsDna(String, Int32)
        VB: GetPartsDna(String, Int32)
      nameWithType:
        CSharp: PartIndex.GetPartsDna(String, Int32)
        VB: PartIndex.GetPartsDna(String, Int32)
      qualifiedName:
        CSharp: PartIndex.GetPartsDna(System.String, System.Int32)
        VB: PartIndex.GetPartsDna(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPartsDna
        path: ''
        startLine: 16394
      syntax:
        content:
          CSharp: public Dictionary<string, long> GetPartsDna(string shinseiDna, int partDigits)
          VB: Public Function GetPartsDna(shinseiDna As String, partDigits As Integer) As Dictionary(Of String, Long)
        parameters:
        - id: shinseiDna
          type: System.String
        - id: partDigits
          type: System.Int32
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Int64}
      overload: Global.PartIndex.GetPartsDna*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.SeparateShinseiParts(System.String,System.Int32)
      commentId: M:Global.PartIndex.SeparateShinseiParts(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: SeparateShinseiParts(String, Int32)
        VB: SeparateShinseiParts(String, Int32)
      nameWithType:
        CSharp: PartIndex.SeparateShinseiParts(String, Int32)
        VB: PartIndex.SeparateShinseiParts(String, Int32)
      qualifiedName:
        CSharp: PartIndex.SeparateShinseiParts(System.String, System.Int32)
        VB: PartIndex.SeparateShinseiParts(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SeparateShinseiParts
        path: ''
        startLine: 16411
      syntax:
        content:
          CSharp: public Dictionary<string, string> SeparateShinseiParts(string shinseiDna, int partDigits)
          VB: Public Function SeparateShinseiParts(shinseiDna As String, partDigits As Integer) As Dictionary(Of String, String)
        parameters:
        - id: shinseiDna
          type: System.String
        - id: partDigits
          type: System.Int32
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Global.PartIndex.SeparateShinseiParts*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.ParsePartDNA(System.Int64)
      commentId: M:Global.PartIndex.ParsePartDNA(System.Int64)
      language: CSharp
      name:
        CSharp: ParsePartDNA(Int64)
        VB: ParsePartDNA(Int64)
      nameWithType:
        CSharp: PartIndex.ParsePartDNA(Int64)
        VB: PartIndex.ParsePartDNA(Int64)
      qualifiedName:
        CSharp: PartIndex.ParsePartDNA(System.Int64)
        VB: PartIndex.ParsePartDNA(System.Int64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ParsePartDNA
        path: ''
        startLine: 16433
      syntax:
        content:
          CSharp: public string ParsePartDNA(long dna)
          VB: Public Function ParsePartDNA(dna As Long) As String
        parameters:
        - id: dna
          type: System.Int64
        return:
          type: System.String
      overload: Global.PartIndex.ParsePartDNA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIndex.PopulateLists(System.String)
      commentId: M:Global.PartIndex.PopulateLists(System.String)
      language: CSharp
      name:
        CSharp: PopulateLists(String)
        VB: PopulateLists(String)
      nameWithType:
        CSharp: PartIndex.PopulateLists(String)
        VB: PartIndex.PopulateLists(String)
      qualifiedName:
        CSharp: PartIndex.PopulateLists(System.String)
        VB: PartIndex.PopulateLists(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PopulateLists
        path: ''
        startLine: 16454
      syntax:
        content:
          CSharp: public void PopulateLists(string entity)
          VB: Public Sub PopulateLists(entity As String)
        parameters:
        - id: entity
          type: System.String
      overload: Global.PartIndex.PopulateLists*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PartStat
    commentId: T:Global.PartStat
    language: CSharp
    name:
      CSharp: PartStat
      VB: PartStat
    nameWithType:
      CSharp: PartStat
      VB: PartStat
    qualifiedName:
      CSharp: PartStat
      VB: PartStat
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PartStat
      path: ''
      startLine: 16482
    syntax:
      content:
        CSharp: public class PartStat
        VB: Public Class PartStat
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PartStat.partType
      commentId: F:Global.PartStat.partType
      language: CSharp
      name:
        CSharp: partType
        VB: partType
      nameWithType:
        CSharp: PartStat.partType
        VB: PartStat.partType
      qualifiedName:
        CSharp: PartStat.partType
        VB: PartStat.partType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: partType
        path: ''
        startLine: 16485
      syntax:
        content:
          CSharp: public CharacterType partType
          VB: Public partType As CharacterType
        return:
          type: Global.CharacterType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartStat.typeStatsAndMultipliers
      commentId: F:Global.PartStat.typeStatsAndMultipliers
      language: CSharp
      name:
        CSharp: typeStatsAndMultipliers
        VB: typeStatsAndMultipliers
      nameWithType:
        CSharp: PartStat.typeStatsAndMultipliers
        VB: PartStat.typeStatsAndMultipliers
      qualifiedName:
        CSharp: PartStat.typeStatsAndMultipliers
        VB: PartStat.typeStatsAndMultipliers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: typeStatsAndMultipliers
        path: ''
        startLine: 16486
      syntax:
        content:
          CSharp: public TypeStatsAndMultipliers typeStatsAndMultipliers
          VB: Public typeStatsAndMultipliers As TypeStatsAndMultipliers
        return:
          type: Global.TypeStatsAndMultipliers
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartStat.baseMultipliers
      commentId: F:Global.PartStat.baseMultipliers
      language: CSharp
      name:
        CSharp: baseMultipliers
        VB: baseMultipliers
      nameWithType:
        CSharp: PartStat.baseMultipliers
        VB: PartStat.baseMultipliers
      qualifiedName:
        CSharp: PartStat.baseMultipliers
        VB: PartStat.baseMultipliers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: baseMultipliers
        path: ''
        startLine: 16487
      syntax:
        content:
          CSharp: public BaseMultipliers baseMultipliers
          VB: Public baseMultipliers As BaseMultipliers
        return:
          type: Global.BaseMultipliers
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartStat.partMultipliers
      commentId: F:Global.PartStat.partMultipliers
      language: CSharp
      name:
        CSharp: partMultipliers
        VB: partMultipliers
      nameWithType:
        CSharp: PartStat.partMultipliers
        VB: PartStat.partMultipliers
      qualifiedName:
        CSharp: PartStat.partMultipliers
        VB: PartStat.partMultipliers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: partMultipliers
        path: ''
        startLine: 16488
      syntax:
        content:
          CSharp: public PartMultipliers partMultipliers
          VB: Public partMultipliers As PartMultipliers
        return:
          type: Global.PartMultipliers
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TypeStatsAndMultipliers
    commentId: T:Global.TypeStatsAndMultipliers
    language: CSharp
    name:
      CSharp: TypeStatsAndMultipliers
      VB: TypeStatsAndMultipliers
    nameWithType:
      CSharp: TypeStatsAndMultipliers
      VB: TypeStatsAndMultipliers
    qualifiedName:
      CSharp: TypeStatsAndMultipliers
      VB: TypeStatsAndMultipliers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TypeStatsAndMultipliers
      path: ''
      startLine: 16491
    syntax:
      content:
        CSharp: public class TypeStatsAndMultipliers
        VB: Public Class TypeStatsAndMultipliers
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TypeStatsAndMultipliers.globalPartStat
      commentId: F:Global.TypeStatsAndMultipliers.globalPartStat
      language: CSharp
      name:
        CSharp: globalPartStat
        VB: globalPartStat
      nameWithType:
        CSharp: TypeStatsAndMultipliers.globalPartStat
        VB: TypeStatsAndMultipliers.globalPartStat
      qualifiedName:
        CSharp: TypeStatsAndMultipliers.globalPartStat
        VB: TypeStatsAndMultipliers.globalPartStat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: globalPartStat
        path: ''
        startLine: 16494
      syntax:
        content:
          CSharp: public int globalPartStat
          VB: Public globalPartStat As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TypeStatsAndMultipliers.elementBonusMultiplier1
      commentId: F:Global.TypeStatsAndMultipliers.elementBonusMultiplier1
      language: CSharp
      name:
        CSharp: elementBonusMultiplier1
        VB: elementBonusMultiplier1
      nameWithType:
        CSharp: TypeStatsAndMultipliers.elementBonusMultiplier1
        VB: TypeStatsAndMultipliers.elementBonusMultiplier1
      qualifiedName:
        CSharp: TypeStatsAndMultipliers.elementBonusMultiplier1
        VB: TypeStatsAndMultipliers.elementBonusMultiplier1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: elementBonusMultiplier1
        path: ''
        startLine: 16495
      syntax:
        content:
          CSharp: public float elementBonusMultiplier1
          VB: Public elementBonusMultiplier1 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TypeStatsAndMultipliers.elementPenaltyMultiplier
      commentId: F:Global.TypeStatsAndMultipliers.elementPenaltyMultiplier
      language: CSharp
      name:
        CSharp: elementPenaltyMultiplier
        VB: elementPenaltyMultiplier
      nameWithType:
        CSharp: TypeStatsAndMultipliers.elementPenaltyMultiplier
        VB: TypeStatsAndMultipliers.elementPenaltyMultiplier
      qualifiedName:
        CSharp: TypeStatsAndMultipliers.elementPenaltyMultiplier
        VB: TypeStatsAndMultipliers.elementPenaltyMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: elementPenaltyMultiplier
        path: ''
        startLine: 16496
      syntax:
        content:
          CSharp: public float elementPenaltyMultiplier
          VB: Public elementPenaltyMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BaseMultipliers
    commentId: T:Global.BaseMultipliers
    language: CSharp
    name:
      CSharp: BaseMultipliers
      VB: BaseMultipliers
    nameWithType:
      CSharp: BaseMultipliers
      VB: BaseMultipliers
    qualifiedName:
      CSharp: BaseMultipliers
      VB: BaseMultipliers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BaseMultipliers
      path: ''
      startLine: 16499
    syntax:
      content:
        CSharp: public class BaseMultipliers
        VB: Public Class BaseMultipliers
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BaseMultipliers.statBonus1
      commentId: F:Global.BaseMultipliers.statBonus1
      language: CSharp
      name:
        CSharp: statBonus1
        VB: statBonus1
      nameWithType:
        CSharp: BaseMultipliers.statBonus1
        VB: BaseMultipliers.statBonus1
      qualifiedName:
        CSharp: BaseMultipliers.statBonus1
        VB: BaseMultipliers.statBonus1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: statBonus1
        path: ''
        startLine: 16502
      syntax:
        content:
          CSharp: public ShinseiStatsEnum statBonus1
          VB: Public statBonus1 As ShinseiStatsEnum
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BaseMultipliers.statBonus2
      commentId: F:Global.BaseMultipliers.statBonus2
      language: CSharp
      name:
        CSharp: statBonus2
        VB: statBonus2
      nameWithType:
        CSharp: BaseMultipliers.statBonus2
        VB: BaseMultipliers.statBonus2
      qualifiedName:
        CSharp: BaseMultipliers.statBonus2
        VB: BaseMultipliers.statBonus2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: statBonus2
        path: ''
        startLine: 16503
      syntax:
        content:
          CSharp: public ShinseiStatsEnum statBonus2
          VB: Public statBonus2 As ShinseiStatsEnum
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BaseMultipliers.statPenalty
      commentId: F:Global.BaseMultipliers.statPenalty
      language: CSharp
      name:
        CSharp: statPenalty
        VB: statPenalty
      nameWithType:
        CSharp: BaseMultipliers.statPenalty
        VB: BaseMultipliers.statPenalty
      qualifiedName:
        CSharp: BaseMultipliers.statPenalty
        VB: BaseMultipliers.statPenalty
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: statPenalty
        path: ''
        startLine: 16504
      syntax:
        content:
          CSharp: public ShinseiStatsEnum statPenalty
          VB: Public statPenalty As ShinseiStatsEnum
        return:
          type: Global.ShinseiStatsEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PartMultipliers
    commentId: T:Global.PartMultipliers
    language: CSharp
    name:
      CSharp: PartMultipliers
      VB: PartMultipliers
    nameWithType:
      CSharp: PartMultipliers
      VB: PartMultipliers
    qualifiedName:
      CSharp: PartMultipliers
      VB: PartMultipliers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PartMultipliers
      path: ''
      startLine: 16508
    syntax:
      content:
        CSharp: public class PartMultipliers
        VB: Public Class PartMultipliers
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PartMultipliers.commonPartMultiplier
      commentId: F:Global.PartMultipliers.commonPartMultiplier
      language: CSharp
      name:
        CSharp: commonPartMultiplier
        VB: commonPartMultiplier
      nameWithType:
        CSharp: PartMultipliers.commonPartMultiplier
        VB: PartMultipliers.commonPartMultiplier
      qualifiedName:
        CSharp: PartMultipliers.commonPartMultiplier
        VB: PartMultipliers.commonPartMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: commonPartMultiplier
        path: ''
        startLine: 16512
      syntax:
        content:
          CSharp: public float commonPartMultiplier
          VB: Public commonPartMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartMultipliers.uncommonPartMultiplier
      commentId: F:Global.PartMultipliers.uncommonPartMultiplier
      language: CSharp
      name:
        CSharp: uncommonPartMultiplier
        VB: uncommonPartMultiplier
      nameWithType:
        CSharp: PartMultipliers.uncommonPartMultiplier
        VB: PartMultipliers.uncommonPartMultiplier
      qualifiedName:
        CSharp: PartMultipliers.uncommonPartMultiplier
        VB: PartMultipliers.uncommonPartMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: uncommonPartMultiplier
        path: ''
        startLine: 16513
      syntax:
        content:
          CSharp: public float uncommonPartMultiplier
          VB: Public uncommonPartMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartMultipliers.rarePartMultiplier
      commentId: F:Global.PartMultipliers.rarePartMultiplier
      language: CSharp
      name:
        CSharp: rarePartMultiplier
        VB: rarePartMultiplier
      nameWithType:
        CSharp: PartMultipliers.rarePartMultiplier
        VB: PartMultipliers.rarePartMultiplier
      qualifiedName:
        CSharp: PartMultipliers.rarePartMultiplier
        VB: PartMultipliers.rarePartMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rarePartMultiplier
        path: ''
        startLine: 16514
      syntax:
        content:
          CSharp: public float rarePartMultiplier
          VB: Public rarePartMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartMultipliers.epicPartMultiplier
      commentId: F:Global.PartMultipliers.epicPartMultiplier
      language: CSharp
      name:
        CSharp: epicPartMultiplier
        VB: epicPartMultiplier
      nameWithType:
        CSharp: PartMultipliers.epicPartMultiplier
        VB: PartMultipliers.epicPartMultiplier
      qualifiedName:
        CSharp: PartMultipliers.epicPartMultiplier
        VB: PartMultipliers.epicPartMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: epicPartMultiplier
        path: ''
        startLine: 16515
      syntax:
        content:
          CSharp: public float epicPartMultiplier
          VB: Public epicPartMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartMultipliers.legendaryPartMultiplier
      commentId: F:Global.PartMultipliers.legendaryPartMultiplier
      language: CSharp
      name:
        CSharp: legendaryPartMultiplier
        VB: legendaryPartMultiplier
      nameWithType:
        CSharp: PartMultipliers.legendaryPartMultiplier
        VB: PartMultipliers.legendaryPartMultiplier
      qualifiedName:
        CSharp: PartMultipliers.legendaryPartMultiplier
        VB: PartMultipliers.legendaryPartMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: legendaryPartMultiplier
        path: ''
        startLine: 16516
      syntax:
        content:
          CSharp: public float legendaryPartMultiplier
          VB: Public legendaryPartMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ColorSO
    commentId: T:Global.ColorSO
    language: CSharp
    name:
      CSharp: ColorSO
      VB: ColorSO
    nameWithType:
      CSharp: ColorSO
      VB: ColorSO
    qualifiedName:
      CSharp: ColorSO
      VB: ColorSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorSO
      path: ''
      startLine: 16757
    syntax:
      content:
        CSharp: 'public class ColorSO : ScriptableObject'
        VB: >-
          Public Class ColorSO

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ColorSO._paletteColor
      commentId: F:Global.ColorSO._paletteColor
      language: CSharp
      name:
        CSharp: _paletteColor
        VB: _paletteColor
      nameWithType:
        CSharp: ColorSO._paletteColor
        VB: ColorSO._paletteColor
      qualifiedName:
        CSharp: ColorSO._paletteColor
        VB: ColorSO._paletteColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _paletteColor
        path: ''
        startLine: 16760
      syntax:
        content:
          CSharp: public Color32[] _paletteColor
          VB: Public _paletteColor As Color32()
        return:
          type: Global.Color32[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PalleteColors
    commentId: T:Global.PalleteColors
    language: CSharp
    name:
      CSharp: PalleteColors
      VB: PalleteColors
    nameWithType:
      CSharp: PalleteColors
      VB: PalleteColors
    qualifiedName:
      CSharp: PalleteColors
      VB: PalleteColors
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PalleteColors
      path: ''
      startLine: 16763
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class PalleteColors
        VB: >-
          <Serializable>

          Public Class PalleteColors
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PalleteColors._partID
      commentId: F:Global.PalleteColors._partID
      language: CSharp
      name:
        CSharp: _partID
        VB: _partID
      nameWithType:
        CSharp: PalleteColors._partID
        VB: PalleteColors._partID
      qualifiedName:
        CSharp: PalleteColors._partID
        VB: PalleteColors._partID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _partID
        path: ''
        startLine: 16766
      syntax:
        content:
          CSharp: public string _partID
          VB: Public _partID As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PalleteColors._paletteColor
      commentId: F:Global.PalleteColors._paletteColor
      language: CSharp
      name:
        CSharp: _paletteColor
        VB: _paletteColor
      nameWithType:
        CSharp: PalleteColors._paletteColor
        VB: PalleteColors._paletteColor
      qualifiedName:
        CSharp: PalleteColors._paletteColor
        VB: PalleteColors._paletteColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _paletteColor
        path: ''
        startLine: 16767
      syntax:
        content:
          CSharp: public Color32[] _paletteColor
          VB: Public _paletteColor As Color32()
        return:
          type: Global.Color32[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ColorsSO
    commentId: T:Global.ColorsSO
    language: CSharp
    name:
      CSharp: ColorsSO
      VB: ColorsSO
    nameWithType:
      CSharp: ColorsSO
      VB: ColorsSO
    qualifiedName:
      CSharp: ColorsSO
      VB: ColorsSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorsSO
      path: ''
      startLine: 16773
    syntax:
      content:
        CSharp: 'public class ColorsSO : ScriptableObject'
        VB: >-
          Public Class ColorsSO

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ColorsSO._palettes
      commentId: F:Global.ColorsSO._palettes
      language: CSharp
      name:
        CSharp: _palettes
        VB: _palettes
      nameWithType:
        CSharp: ColorsSO._palettes
        VB: ColorsSO._palettes
      qualifiedName:
        CSharp: ColorsSO._palettes
        VB: ColorsSO._palettes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _palettes
        path: ''
        startLine: 16776
      syntax:
        content:
          CSharp: public ColorSO[] _palettes
          VB: Public _palettes As ColorSO()
        return:
          type: Global.ColorSO[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ColorSwapper
    commentId: T:Global.ColorSwapper
    language: CSharp
    name:
      CSharp: ColorSwapper
      VB: ColorSwapper
    nameWithType:
      CSharp: ColorSwapper
      VB: ColorSwapper
    qualifiedName:
      CSharp: ColorSwapper
      VB: ColorSwapper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorSwapper
      path: ''
      startLine: 16784
    syntax:
      content:
        CSharp: 'public class ColorSwapper : Singleton<ColorSwapper>'
        VB: >-
          Public Class ColorSwapper

              Inherits Singleton(Of ColorSwapper)
    inheritance:
    - System.Object
    - Utils.Singleton
    - Utils.Singleton{ColorSwapper}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ColorSwapper.PaletteID
      commentId: F:Global.ColorSwapper.PaletteID
      language: CSharp
      name:
        CSharp: PaletteID
        VB: PaletteID
      nameWithType:
        CSharp: ColorSwapper.PaletteID
        VB: ColorSwapper.PaletteID
      qualifiedName:
        CSharp: ColorSwapper.PaletteID
        VB: ColorSwapper.PaletteID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PaletteID
        path: ''
        startLine: 16786
      syntax:
        content:
          CSharp: public string PaletteID
          VB: Public PaletteID As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorSwapper._colorsScriptableObject
      commentId: F:Global.ColorSwapper._colorsScriptableObject
      language: CSharp
      name:
        CSharp: _colorsScriptableObject
        VB: _colorsScriptableObject
      nameWithType:
        CSharp: ColorSwapper._colorsScriptableObject
        VB: ColorSwapper._colorsScriptableObject
      qualifiedName:
        CSharp: ColorSwapper._colorsScriptableObject
        VB: ColorSwapper._colorsScriptableObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _colorsScriptableObject
        path: ''
        startLine: 16788
      syntax:
        content:
          CSharp: public ColorsSO _colorsScriptableObject
          VB: Public _colorsScriptableObject As ColorsSO
        return:
          type: Global.ColorsSO
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorSwapper.partVisuals
      commentId: F:Global.ColorSwapper.partVisuals
      language: CSharp
      name:
        CSharp: partVisuals
        VB: partVisuals
      nameWithType:
        CSharp: ColorSwapper.partVisuals
        VB: ColorSwapper.partVisuals
      qualifiedName:
        CSharp: ColorSwapper.partVisuals
        VB: ColorSwapper.partVisuals
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: partVisuals
        path: ''
        startLine: 16792
      syntax:
        content:
          CSharp: public List<PartVisual> partVisuals
          VB: Public partVisuals As List(Of PartVisual)
        return:
          type: System.Collections.Generic.List{Timba.Characters.PartVisual}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorSwapper._partMaterials
      commentId: F:Global.ColorSwapper._partMaterials
      language: CSharp
      name:
        CSharp: _partMaterials
        VB: _partMaterials
      nameWithType:
        CSharp: ColorSwapper._partMaterials
        VB: ColorSwapper._partMaterials
      qualifiedName:
        CSharp: ColorSwapper._partMaterials
        VB: ColorSwapper._partMaterials
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _partMaterials
        path: ''
        startLine: 16793
      syntax:
        content:
          CSharp: public List<Material> _partMaterials
          VB: Public _partMaterials As List(Of Material)
        return:
          type: System.Collections.Generic.List{Material}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorSwapper._dontTakePhoto
      commentId: F:Global.ColorSwapper._dontTakePhoto
      language: CSharp
      name:
        CSharp: _dontTakePhoto
        VB: _dontTakePhoto
      nameWithType:
        CSharp: ColorSwapper._dontTakePhoto
        VB: ColorSwapper._dontTakePhoto
      qualifiedName:
        CSharp: ColorSwapper._dontTakePhoto
        VB: ColorSwapper._dontTakePhoto
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _dontTakePhoto
        path: ''
        startLine: 16795
      syntax:
        content:
          CSharp: public bool _dontTakePhoto
          VB: Public _dontTakePhoto As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorSwapper.AddItemToPVL(Timba.Characters.PartVisual)
      commentId: M:Global.ColorSwapper.AddItemToPVL(Timba.Characters.PartVisual)
      language: CSharp
      name:
        CSharp: AddItemToPVL(PartVisual)
        VB: AddItemToPVL(PartVisual)
      nameWithType:
        CSharp: ColorSwapper.AddItemToPVL(PartVisual)
        VB: ColorSwapper.AddItemToPVL(PartVisual)
      qualifiedName:
        CSharp: ColorSwapper.AddItemToPVL(Timba.Characters.PartVisual)
        VB: ColorSwapper.AddItemToPVL(Timba.Characters.PartVisual)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddItemToPVL
        path: ''
        startLine: 16800
      syntax:
        content:
          CSharp: public void AddItemToPVL(PartVisual PV)
          VB: Public Sub AddItemToPVL(PV As PartVisual)
        parameters:
        - id: PV
          type: Timba.Characters.PartVisual
      overload: Global.ColorSwapper.AddItemToPVL*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorSwapper.ChangeMaterial
      commentId: M:Global.ColorSwapper.ChangeMaterial
      language: CSharp
      name:
        CSharp: ChangeMaterial()
        VB: ChangeMaterial()
      nameWithType:
        CSharp: ColorSwapper.ChangeMaterial()
        VB: ColorSwapper.ChangeMaterial()
      qualifiedName:
        CSharp: ColorSwapper.ChangeMaterial()
        VB: ColorSwapper.ChangeMaterial()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeMaterial
        path: ''
        startLine: 16823
      syntax:
        content:
          CSharp: public void ChangeMaterial()
          VB: Public Sub ChangeMaterial
      overload: Global.ColorSwapper.ChangeMaterial*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.SwapColorPropertyNameSO
    commentId: T:Global.SwapColorPropertyNameSO
    language: CSharp
    name:
      CSharp: SwapColorPropertyNameSO
      VB: SwapColorPropertyNameSO
    nameWithType:
      CSharp: SwapColorPropertyNameSO
      VB: SwapColorPropertyNameSO
    qualifiedName:
      CSharp: SwapColorPropertyNameSO
      VB: SwapColorPropertyNameSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SwapColorPropertyNameSO
      path: ''
      startLine: 16903
    syntax:
      content:
        CSharp: 'public class SwapColorPropertyNameSO : ScriptableObject'
        VB: >-
          Public Class SwapColorPropertyNameSO

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SwapColorPropertyNameSO._materialPropertyNames
      commentId: F:Global.SwapColorPropertyNameSO._materialPropertyNames
      language: CSharp
      name:
        CSharp: _materialPropertyNames
        VB: _materialPropertyNames
      nameWithType:
        CSharp: SwapColorPropertyNameSO._materialPropertyNames
        VB: SwapColorPropertyNameSO._materialPropertyNames
      qualifiedName:
        CSharp: SwapColorPropertyNameSO._materialPropertyNames
        VB: SwapColorPropertyNameSO._materialPropertyNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: _materialPropertyNames
        path: ''
        startLine: 16906
      syntax:
        content:
          CSharp: public string[] _materialPropertyNames
          VB: Public _materialPropertyNames As String()
        return:
          type: System.String[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.DragonPartType
    commentId: T:Global.DragonPartType
    language: CSharp
    name:
      CSharp: DragonPartType
      VB: DragonPartType
    nameWithType:
      CSharp: DragonPartType
      VB: DragonPartType
    qualifiedName:
      CSharp: DragonPartType
      VB: DragonPartType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DragonPartType
      path: ''
      startLine: 16935
    syntax:
      content:
        CSharp: public enum DragonPartType
        VB: Public Enum DragonPartType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.DragonPartType.cabeza
      commentId: F:Global.DragonPartType.cabeza
      language: CSharp
      name:
        CSharp: cabeza
        VB: cabeza
      nameWithType:
        CSharp: DragonPartType.cabeza
        VB: DragonPartType.cabeza
      qualifiedName:
        CSharp: DragonPartType.cabeza
        VB: DragonPartType.cabeza
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: cabeza
        path: ''
        startLine: 16937
      syntax:
        content:
          CSharp: cabeza = 0
          VB: cabeza = 0
        return:
          type: Global.DragonPartType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.PartType
    commentId: T:Global.PartType
    language: CSharp
    name:
      CSharp: PartType
      VB: PartType
    nameWithType:
      CSharp: PartType
      VB: PartType
    qualifiedName:
      CSharp: PartType
      VB: PartType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PartType
      path: ''
      startLine: 16953
    syntax:
      content:
        CSharp: public enum PartType
        VB: Public Enum PartType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.PartType.Body
      commentId: F:Global.PartType.Body
      language: CSharp
      name:
        CSharp: Body
        VB: Body
      nameWithType:
        CSharp: PartType.Body
        VB: PartType.Body
      qualifiedName:
        CSharp: PartType.Body
        VB: PartType.Body
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Body
        path: ''
        startLine: 16955
      syntax:
        content:
          CSharp: Body = 0
          VB: Body = 0
        return:
          type: Global.PartType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.PartType.Accessory
      commentId: F:Global.PartType.Accessory
      language: CSharp
      name:
        CSharp: Accessory
        VB: Accessory
      nameWithType:
        CSharp: PartType.Accessory
        VB: PartType.Accessory
      qualifiedName:
        CSharp: PartType.Accessory
        VB: PartType.Accessory
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Accessory
        path: ''
        startLine: 16956
      syntax:
        content:
          CSharp: Accessory = 1
          VB: Accessory = 1
        return:
          type: Global.PartType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.PartType.Ears
      commentId: F:Global.PartType.Ears
      language: CSharp
      name:
        CSharp: Ears
        VB: Ears
      nameWithType:
        CSharp: PartType.Ears
        VB: PartType.Ears
      qualifiedName:
        CSharp: PartType.Ears
        VB: PartType.Ears
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Ears
        path: ''
        startLine: 16957
      syntax:
        content:
          CSharp: Ears = 2
          VB: Ears = 2
        return:
          type: Global.PartType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.PartType.Head
      commentId: F:Global.PartType.Head
      language: CSharp
      name:
        CSharp: Head
        VB: Head
      nameWithType:
        CSharp: PartType.Head
        VB: PartType.Head
      qualifiedName:
        CSharp: PartType.Head
        VB: PartType.Head
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Head
        path: ''
        startLine: 16958
      syntax:
        content:
          CSharp: Head = 3
          VB: Head = 3
        return:
          type: Global.PartType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.PartType.Tail
      commentId: F:Global.PartType.Tail
      language: CSharp
      name:
        CSharp: Tail
        VB: Tail
      nameWithType:
        CSharp: PartType.Tail
        VB: PartType.Tail
      qualifiedName:
        CSharp: PartType.Tail
        VB: PartType.Tail
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Tail
        path: ''
        startLine: 16959
      syntax:
        content:
          CSharp: Tail = 4
          VB: Tail = 4
        return:
          type: Global.PartType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.RarityType
    commentId: T:Global.RarityType
    language: CSharp
    name:
      CSharp: RarityType
      VB: RarityType
    nameWithType:
      CSharp: RarityType
      VB: RarityType
    qualifiedName:
      CSharp: RarityType
      VB: RarityType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RarityType
      path: ''
      startLine: 16962
    syntax:
      content:
        CSharp: public enum RarityType
        VB: Public Enum RarityType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.RarityType.Common
      commentId: F:Global.RarityType.Common
      language: CSharp
      name:
        CSharp: Common
        VB: Common
      nameWithType:
        CSharp: RarityType.Common
        VB: RarityType.Common
      qualifiedName:
        CSharp: RarityType.Common
        VB: RarityType.Common
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Common
        path: ''
        startLine: 16963
      syntax:
        content:
          CSharp: Common = 0
          VB: Common = 0
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RarityType.Uncommon
      commentId: F:Global.RarityType.Uncommon
      language: CSharp
      name:
        CSharp: Uncommon
        VB: Uncommon
      nameWithType:
        CSharp: RarityType.Uncommon
        VB: RarityType.Uncommon
      qualifiedName:
        CSharp: RarityType.Uncommon
        VB: RarityType.Uncommon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Uncommon
        path: ''
        startLine: 16964
      syntax:
        content:
          CSharp: Uncommon = 1
          VB: Uncommon = 1
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RarityType.Rare
      commentId: F:Global.RarityType.Rare
      language: CSharp
      name:
        CSharp: Rare
        VB: Rare
      nameWithType:
        CSharp: RarityType.Rare
        VB: RarityType.Rare
      qualifiedName:
        CSharp: RarityType.Rare
        VB: RarityType.Rare
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Rare
        path: ''
        startLine: 16965
      syntax:
        content:
          CSharp: Rare = 2
          VB: Rare = 2
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RarityType.Epic
      commentId: F:Global.RarityType.Epic
      language: CSharp
      name:
        CSharp: Epic
        VB: Epic
      nameWithType:
        CSharp: RarityType.Epic
        VB: RarityType.Epic
      qualifiedName:
        CSharp: RarityType.Epic
        VB: RarityType.Epic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Epic
        path: ''
        startLine: 16966
      syntax:
        content:
          CSharp: Epic = 3
          VB: Epic = 3
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RarityType.Legendary
      commentId: F:Global.RarityType.Legendary
      language: CSharp
      name:
        CSharp: Legendary
        VB: Legendary
      nameWithType:
        CSharp: RarityType.Legendary
        VB: RarityType.Legendary
      qualifiedName:
        CSharp: RarityType.Legendary
        VB: RarityType.Legendary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Legendary
        path: ''
        startLine: 16967
      syntax:
        content:
          CSharp: Legendary = 4
          VB: Legendary = 4
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RarityType.Legendary1
      commentId: F:Global.RarityType.Legendary1
      language: CSharp
      name:
        CSharp: Legendary1
        VB: Legendary1
      nameWithType:
        CSharp: RarityType.Legendary1
        VB: RarityType.Legendary1
      qualifiedName:
        CSharp: RarityType.Legendary1
        VB: RarityType.Legendary1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Legendary1
        path: ''
        startLine: 16968
      syntax:
        content:
          CSharp: Legendary1 = 5
          VB: Legendary1 = 5
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RarityType.Legendary2
      commentId: F:Global.RarityType.Legendary2
      language: CSharp
      name:
        CSharp: Legendary2
        VB: Legendary2
      nameWithType:
        CSharp: RarityType.Legendary2
        VB: RarityType.Legendary2
      qualifiedName:
        CSharp: RarityType.Legendary2
        VB: RarityType.Legendary2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Legendary2
        path: ''
        startLine: 16969
      syntax:
        content:
          CSharp: Legendary2 = 6
          VB: Legendary2 = 6
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RarityType.Legendary3
      commentId: F:Global.RarityType.Legendary3
      language: CSharp
      name:
        CSharp: Legendary3
        VB: Legendary3
      nameWithType:
        CSharp: RarityType.Legendary3
        VB: RarityType.Legendary3
      qualifiedName:
        CSharp: RarityType.Legendary3
        VB: RarityType.Legendary3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Legendary3
        path: ''
        startLine: 16970
      syntax:
        content:
          CSharp: Legendary3 = 7
          VB: Legendary3 = 7
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RarityType.Legendary4
      commentId: F:Global.RarityType.Legendary4
      language: CSharp
      name:
        CSharp: Legendary4
        VB: Legendary4
      nameWithType:
        CSharp: RarityType.Legendary4
        VB: RarityType.Legendary4
      qualifiedName:
        CSharp: RarityType.Legendary4
        VB: RarityType.Legendary4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Legendary4
        path: ''
        startLine: 16971
      syntax:
        content:
          CSharp: Legendary4 = 8
          VB: Legendary4 = 8
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.RarityType.Legendary5
      commentId: F:Global.RarityType.Legendary5
      language: CSharp
      name:
        CSharp: Legendary5
        VB: Legendary5
      nameWithType:
        CSharp: RarityType.Legendary5
        VB: RarityType.Legendary5
      qualifiedName:
        CSharp: RarityType.Legendary5
        VB: RarityType.Legendary5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Legendary5
        path: ''
        startLine: 16972
      syntax:
        content:
          CSharp: Legendary5 = 9
          VB: Legendary5 = 9
        return:
          type: Global.RarityType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.StatValueType
    commentId: T:Global.StatValueType
    language: CSharp
    name:
      CSharp: StatValueType
      VB: StatValueType
    nameWithType:
      CSharp: StatValueType
      VB: StatValueType
    qualifiedName:
      CSharp: StatValueType
      VB: StatValueType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: StatValueType
      path: ''
      startLine: 16978
    summary: "\nStat value categiories, used of stat calculation\n"
    example: []
    syntax:
      content:
        CSharp: public enum StatValueType
        VB: Public Enum StatValueType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.StatValueType.Base
      commentId: F:Global.StatValueType.Base
      language: CSharp
      name:
        CSharp: Base
        VB: Base
      nameWithType:
        CSharp: StatValueType.Base
        VB: StatValueType.Base
      qualifiedName:
        CSharp: StatValueType.Base
        VB: StatValueType.Base
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Base
        path: ''
        startLine: 16980
      syntax:
        content:
          CSharp: Base = 0
          VB: Base = 0
        return:
          type: Global.StatValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.StatValueType.Part
      commentId: F:Global.StatValueType.Part
      language: CSharp
      name:
        CSharp: Part
        VB: Part
      nameWithType:
        CSharp: StatValueType.Part
        VB: StatValueType.Part
      qualifiedName:
        CSharp: StatValueType.Part
        VB: StatValueType.Part
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Part
        path: ''
        startLine: 16981
      syntax:
        content:
          CSharp: Part = 1
          VB: Part = 1
        return:
          type: Global.StatValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.StatValueType.Balance
      commentId: F:Global.StatValueType.Balance
      language: CSharp
      name:
        CSharp: Balance
        VB: Balance
      nameWithType:
        CSharp: StatValueType.Balance
        VB: StatValueType.Balance
      qualifiedName:
        CSharp: StatValueType.Balance
        VB: StatValueType.Balance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Balance
        path: ''
        startLine: 16982
      syntax:
        content:
          CSharp: Balance = 2
          VB: Balance = 2
        return:
          type: Global.StatValueType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.PartEntity
    commentId: T:Global.PartEntity
    language: CSharp
    name:
      CSharp: PartEntity
      VB: PartEntity
    nameWithType:
      CSharp: PartEntity
      VB: PartEntity
    qualifiedName:
      CSharp: PartEntity
      VB: PartEntity
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PartEntity
      path: ''
      startLine: 16992
    syntax:
      content:
        CSharp: 'public class PartEntity : MonoBehaviour'
        VB: >-
          Public Class PartEntity

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PartEntity.FOLDER_NAME
      commentId: F:Global.PartEntity.FOLDER_NAME
      language: CSharp
      name:
        CSharp: FOLDER_NAME
        VB: FOLDER_NAME
      nameWithType:
        CSharp: PartEntity.FOLDER_NAME
        VB: PartEntity.FOLDER_NAME
      qualifiedName:
        CSharp: PartEntity.FOLDER_NAME
        VB: PartEntity.FOLDER_NAME
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FOLDER_NAME
        path: ''
        startLine: 16994
      syntax:
        content:
          CSharp: public static string FOLDER_NAME
          VB: Public Shared FOLDER_NAME As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.PartEntity.PutEvolution(System.Boolean)
      commentId: M:Global.PartEntity.PutEvolution(System.Boolean)
      language: CSharp
      name:
        CSharp: PutEvolution(Boolean)
        VB: PutEvolution(Boolean)
      nameWithType:
        CSharp: PartEntity.PutEvolution(Boolean)
        VB: PartEntity.PutEvolution(Boolean)
      qualifiedName:
        CSharp: PartEntity.PutEvolution(System.Boolean)
        VB: PartEntity.PutEvolution(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PutEvolution
        path: ''
        startLine: 17019
      syntax:
        content:
          CSharp: public void PutEvolution(bool isOn)
          VB: Public Sub PutEvolution(isOn As Boolean)
        parameters:
        - id: isOn
          type: System.Boolean
      overload: Global.PartEntity.PutEvolution*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartEntity.BodyPartID
      commentId: P:Global.PartEntity.BodyPartID
      language: CSharp
      name:
        CSharp: BodyPartID
        VB: BodyPartID
      nameWithType:
        CSharp: PartEntity.BodyPartID
        VB: PartEntity.BodyPartID
      qualifiedName:
        CSharp: PartEntity.BodyPartID
        VB: PartEntity.BodyPartID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BodyPartID
        path: ''
        startLine: 17081
      syntax:
        content:
          CSharp: public string BodyPartID { get; set; }
          VB: Public Property BodyPartID As String
        parameters: []
        return:
          type: System.String
      overload: Global.PartEntity.BodyPartID*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Global.PartSelector
    commentId: T:Global.PartSelector
    language: CSharp
    name:
      CSharp: PartSelector
      VB: PartSelector
    nameWithType:
      CSharp: PartSelector
      VB: PartSelector
    qualifiedName:
      CSharp: PartSelector
      VB: PartSelector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PartSelector
      path: ''
      startLine: 17148
    syntax:
      content:
        CSharp: 'public class PartSelector : MonoBehaviour'
        VB: >-
          Public Class PartSelector

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PartSelector.leftButton
      commentId: F:Global.PartSelector.leftButton
      language: CSharp
      name:
        CSharp: leftButton
        VB: leftButton
      nameWithType:
        CSharp: PartSelector.leftButton
        VB: PartSelector.leftButton
      qualifiedName:
        CSharp: PartSelector.leftButton
        VB: PartSelector.leftButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: leftButton
        path: ''
        startLine: 17149
      syntax:
        content:
          CSharp: public Button leftButton
          VB: Public leftButton As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartSelector.rigthButton
      commentId: F:Global.PartSelector.rigthButton
      language: CSharp
      name:
        CSharp: rigthButton
        VB: rigthButton
      nameWithType:
        CSharp: PartSelector.rigthButton
        VB: PartSelector.rigthButton
      qualifiedName:
        CSharp: PartSelector.rigthButton
        VB: PartSelector.rigthButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rigthButton
        path: ''
        startLine: 17150
      syntax:
        content:
          CSharp: public Button rigthButton
          VB: Public rigthButton As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartSelector.selectorName
      commentId: F:Global.PartSelector.selectorName
      language: CSharp
      name:
        CSharp: selectorName
        VB: selectorName
      nameWithType:
        CSharp: PartSelector.selectorName
        VB: PartSelector.selectorName
      qualifiedName:
        CSharp: PartSelector.selectorName
        VB: PartSelector.selectorName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: selectorName
        path: ''
        startLine: 17151
      syntax:
        content:
          CSharp: public TMP_Text selectorName
          VB: Public selectorName As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartSelector.currentSelectorPart
      commentId: F:Global.PartSelector.currentSelectorPart
      language: CSharp
      name:
        CSharp: currentSelectorPart
        VB: currentSelectorPart
      nameWithType:
        CSharp: PartSelector.currentSelectorPart
        VB: PartSelector.currentSelectorPart
      qualifiedName:
        CSharp: PartSelector.currentSelectorPart
        VB: PartSelector.currentSelectorPart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentSelectorPart
        path: ''
        startLine: 17152
      syntax:
        content:
          CSharp: public TMP_Text currentSelectorPart
          VB: Public currentSelectorPart As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartSelector.BodyPart
      commentId: P:Global.PartSelector.BodyPart
      language: CSharp
      name:
        CSharp: BodyPart
        VB: BodyPart
      nameWithType:
        CSharp: PartSelector.BodyPart
        VB: PartSelector.BodyPart
      qualifiedName:
        CSharp: PartSelector.BodyPart
        VB: PartSelector.BodyPart
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BodyPart
        path: ''
        startLine: 17156
      syntax:
        content:
          CSharp: public PartType BodyPart { get; }
          VB: Public ReadOnly Property BodyPart As PartType
        parameters: []
        return:
          type: Global.PartType
      overload: Global.PartSelector.BodyPart*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.PartSelector.SetBodyPart(PartType)
      commentId: M:Global.PartSelector.SetBodyPart(PartType)
      language: CSharp
      name:
        CSharp: SetBodyPart(PartType)
        VB: SetBodyPart(PartType)
      nameWithType:
        CSharp: PartSelector.SetBodyPart(PartType)
        VB: PartSelector.SetBodyPart(PartType)
      qualifiedName:
        CSharp: PartSelector.SetBodyPart(PartType)
        VB: PartSelector.SetBodyPart(PartType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetBodyPart
        path: ''
        startLine: 17157
      syntax:
        content:
          CSharp: public void SetBodyPart(PartType _bodyPart)
          VB: Public Sub SetBodyPart(_bodyPart As PartType)
        parameters:
        - id: _bodyPart
          type: Global.PartType
      overload: Global.PartSelector.SetBodyPart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PartSlot
    commentId: T:Global.PartSlot
    language: CSharp
    name:
      CSharp: PartSlot
      VB: PartSlot
    nameWithType:
      CSharp: PartSlot
      VB: PartSlot
    qualifiedName:
      CSharp: PartSlot
      VB: PartSlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PartSlot
      path: ''
      startLine: 17165
    syntax:
      content:
        CSharp: 'public class PartSlot : MonoBehaviour'
        VB: >-
          Public Class PartSlot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PartSlot.FOLDER_NAME
      commentId: F:Global.PartSlot.FOLDER_NAME
      language: CSharp
      name:
        CSharp: FOLDER_NAME
        VB: FOLDER_NAME
      nameWithType:
        CSharp: PartSlot.FOLDER_NAME
        VB: PartSlot.FOLDER_NAME
      qualifiedName:
        CSharp: PartSlot.FOLDER_NAME
        VB: PartSlot.FOLDER_NAME
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FOLDER_NAME
        path: ''
        startLine: 17167
      syntax:
        content:
          CSharp: public static string FOLDER_NAME
          VB: Public Shared FOLDER_NAME As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.PartSlot.bodyPart
      commentId: F:Global.PartSlot.bodyPart
      language: CSharp
      name:
        CSharp: bodyPart
        VB: bodyPart
      nameWithType:
        CSharp: PartSlot.bodyPart
        VB: PartSlot.bodyPart
      qualifiedName:
        CSharp: PartSlot.bodyPart
        VB: PartSlot.bodyPart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: bodyPart
        path: ''
        startLine: 17170
      syntax:
        content:
          CSharp: public PartType bodyPart
          VB: Public bodyPart As PartType
        return:
          type: Global.PartType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartSlot.m_selectedChild
      commentId: F:Global.PartSlot.m_selectedChild
      language: CSharp
      name:
        CSharp: m_selectedChild
        VB: m_selectedChild
      nameWithType:
        CSharp: PartSlot.m_selectedChild
        VB: PartSlot.m_selectedChild
      qualifiedName:
        CSharp: PartSlot.m_selectedChild
        VB: PartSlot.m_selectedChild
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: m_selectedChild
        path: ''
        startLine: 17172
      syntax:
        content:
          CSharp: public PartEntity m_selectedChild
          VB: Public m_selectedChild As PartEntity
        return:
          type: Global.PartEntity
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartSlot.SelectedChildName
      commentId: P:Global.PartSlot.SelectedChildName
      language: CSharp
      name:
        CSharp: SelectedChildName
        VB: SelectedChildName
      nameWithType:
        CSharp: PartSlot.SelectedChildName
        VB: PartSlot.SelectedChildName
      qualifiedName:
        CSharp: PartSlot.SelectedChildName
        VB: PartSlot.SelectedChildName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SelectedChildName
        path: ''
        startLine: 17176
      syntax:
        content:
          CSharp: public string SelectedChildName { get; }
          VB: Public ReadOnly Property SelectedChildName As String
        parameters: []
        return:
          type: System.String
      overload: Global.PartSlot.SelectedChildName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.PartSlot.ChildrenLength
      commentId: P:Global.PartSlot.ChildrenLength
      language: CSharp
      name:
        CSharp: ChildrenLength
        VB: ChildrenLength
      nameWithType:
        CSharp: PartSlot.ChildrenLength
        VB: PartSlot.ChildrenLength
      qualifiedName:
        CSharp: PartSlot.ChildrenLength
        VB: PartSlot.ChildrenLength
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChildrenLength
        path: ''
        startLine: 17178
      syntax:
        content:
          CSharp: public int ChildrenLength { get; }
          VB: Public ReadOnly Property ChildrenLength As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Global.PartSlot.ChildrenLength*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.PartSlot.Childrens
      commentId: P:Global.PartSlot.Childrens
      language: CSharp
      name:
        CSharp: Childrens
        VB: Childrens
      nameWithType:
        CSharp: PartSlot.Childrens
        VB: PartSlot.Childrens
      qualifiedName:
        CSharp: PartSlot.Childrens
        VB: PartSlot.Childrens
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Childrens
        path: ''
        startLine: 17180
      syntax:
        content:
          CSharp: public PartEntity[] Childrens { get; }
          VB: Public ReadOnly Property Childrens As PartEntity()
        parameters: []
        return:
          type: Global.PartEntity[]
      overload: Global.PartSlot.Childrens*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Global.PartSlot.Initialize
      commentId: M:Global.PartSlot.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: PartSlot.Initialize()
        VB: PartSlot.Initialize()
      qualifiedName:
        CSharp: PartSlot.Initialize()
        VB: PartSlot.Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Initialize
        path: ''
        startLine: 17182
      syntax:
        content:
          CSharp: public void Initialize()
          VB: Public Sub Initialize
      overload: Global.PartSlot.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartSlot.ActiveBodyPart(System.Int32)
      commentId: M:Global.PartSlot.ActiveBodyPart(System.Int32)
      language: CSharp
      name:
        CSharp: ActiveBodyPart(Int32)
        VB: ActiveBodyPart(Int32)
      nameWithType:
        CSharp: PartSlot.ActiveBodyPart(Int32)
        VB: PartSlot.ActiveBodyPart(Int32)
      qualifiedName:
        CSharp: PartSlot.ActiveBodyPart(System.Int32)
        VB: PartSlot.ActiveBodyPart(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ActiveBodyPart
        path: ''
        startLine: 17194
      syntax:
        content:
          CSharp: public void ActiveBodyPart(int _index)
          VB: Public Sub ActiveBodyPart(_index As Integer)
        parameters:
        - id: _index
          type: System.Int32
      overload: Global.PartSlot.ActiveBodyPart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartSlot.ActiveBodyPartByName(System.String)
      commentId: M:Global.PartSlot.ActiveBodyPartByName(System.String)
      language: CSharp
      name:
        CSharp: ActiveBodyPartByName(String)
        VB: ActiveBodyPartByName(String)
      nameWithType:
        CSharp: PartSlot.ActiveBodyPartByName(String)
        VB: PartSlot.ActiveBodyPartByName(String)
      qualifiedName:
        CSharp: PartSlot.ActiveBodyPartByName(System.String)
        VB: PartSlot.ActiveBodyPartByName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ActiveBodyPartByName
        path: ''
        startLine: 17214
      syntax:
        content:
          CSharp: public void ActiveBodyPartByName(string name)
          VB: Public Sub ActiveBodyPartByName(name As String)
        parameters:
        - id: name
          type: System.String
      overload: Global.PartSlot.ActiveBodyPartByName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartSlot.GetIndex
      commentId: M:Global.PartSlot.GetIndex
      language: CSharp
      name:
        CSharp: GetIndex()
        VB: GetIndex()
      nameWithType:
        CSharp: PartSlot.GetIndex()
        VB: PartSlot.GetIndex()
      qualifiedName:
        CSharp: PartSlot.GetIndex()
        VB: PartSlot.GetIndex()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetIndex
        path: ''
        startLine: 17229
      syntax:
        content:
          CSharp: public int GetIndex()
          VB: Public Function GetIndex As Integer
        return:
          type: System.Int32
      overload: Global.PartSlot.GetIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.Followpoints
    commentId: T:Global.Followpoints
    language: CSharp
    name:
      CSharp: Followpoints
      VB: Followpoints
    nameWithType:
      CSharp: Followpoints
      VB: Followpoints
    qualifiedName:
      CSharp: Followpoints
      VB: Followpoints
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Followpoints
      path: ''
      startLine: 17450
    syntax:
      content:
        CSharp: 'public class Followpoints : MonoBehaviour'
        VB: >-
          Public Class Followpoints

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.LeaderboardEntry
    commentId: T:Global.LeaderboardEntry
    language: CSharp
    name:
      CSharp: LeaderboardEntry
      VB: LeaderboardEntry
    nameWithType:
      CSharp: LeaderboardEntry
      VB: LeaderboardEntry
    qualifiedName:
      CSharp: LeaderboardEntry
      VB: LeaderboardEntry
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LeaderboardEntry
      path: ''
      startLine: 17471
    syntax:
      content:
        CSharp: 'public class LeaderboardEntry : MonoBehaviour'
        VB: >-
          Public Class LeaderboardEntry

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.LeaderboardEntry.SetEntyValues(System.String,System.String,System.String)
      commentId: M:Global.LeaderboardEntry.SetEntyValues(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SetEntyValues(String, String, String)
        VB: SetEntyValues(String, String, String)
      nameWithType:
        CSharp: LeaderboardEntry.SetEntyValues(String, String, String)
        VB: LeaderboardEntry.SetEntyValues(String, String, String)
      qualifiedName:
        CSharp: LeaderboardEntry.SetEntyValues(System.String, System.String, System.String)
        VB: LeaderboardEntry.SetEntyValues(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetEntyValues
        path: ''
        startLine: 17477
      syntax:
        content:
          CSharp: public void SetEntyValues(string name, string rank, string score)
          VB: Public Sub SetEntyValues(name As String, rank As String, score As String)
        parameters:
        - id: name
          type: System.String
        - id: rank
          type: System.String
        - id: score
          type: System.String
      overload: Global.LeaderboardEntry.SetEntyValues*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.LeaderboardEntryResult
    commentId: T:Global.LeaderboardEntryResult
    language: CSharp
    name:
      CSharp: LeaderboardEntryResult
      VB: LeaderboardEntryResult
    nameWithType:
      CSharp: LeaderboardEntryResult
      VB: LeaderboardEntryResult
    qualifiedName:
      CSharp: LeaderboardEntryResult
      VB: LeaderboardEntryResult
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LeaderboardEntryResult
      path: ''
      startLine: 17485
    syntax:
      content:
        CSharp: public class LeaderboardEntryResult
        VB: Public Class LeaderboardEntryResult
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.LeaderboardEntryResult.DisplayName
      commentId: F:Global.LeaderboardEntryResult.DisplayName
      language: CSharp
      name:
        CSharp: DisplayName
        VB: DisplayName
      nameWithType:
        CSharp: LeaderboardEntryResult.DisplayName
        VB: LeaderboardEntryResult.DisplayName
      qualifiedName:
        CSharp: LeaderboardEntryResult.DisplayName
        VB: LeaderboardEntryResult.DisplayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DisplayName
        path: ''
        startLine: 17488
      syntax:
        content:
          CSharp: public string DisplayName
          VB: Public DisplayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LeaderboardEntryResult.Position
      commentId: F:Global.LeaderboardEntryResult.Position
      language: CSharp
      name:
        CSharp: Position
        VB: Position
      nameWithType:
        CSharp: LeaderboardEntryResult.Position
        VB: LeaderboardEntryResult.Position
      qualifiedName:
        CSharp: LeaderboardEntryResult.Position
        VB: LeaderboardEntryResult.Position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Position
        path: ''
        startLine: 17489
      syntax:
        content:
          CSharp: public string Position
          VB: Public Position As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LeaderboardEntryResult.StatValue
      commentId: F:Global.LeaderboardEntryResult.StatValue
      language: CSharp
      name:
        CSharp: StatValue
        VB: StatValue
      nameWithType:
        CSharp: LeaderboardEntryResult.StatValue
        VB: LeaderboardEntryResult.StatValue
      qualifiedName:
        CSharp: LeaderboardEntryResult.StatValue
        VB: LeaderboardEntryResult.StatValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StatValue
        path: ''
        startLine: 17490
      syntax:
        content:
          CSharp: public string StatValue
          VB: Public StatValue As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.LeaderBoardManager
    commentId: T:Global.LeaderBoardManager
    language: CSharp
    name:
      CSharp: LeaderBoardManager
      VB: LeaderBoardManager
    nameWithType:
      CSharp: LeaderBoardManager
      VB: LeaderBoardManager
    qualifiedName:
      CSharp: LeaderBoardManager
      VB: LeaderBoardManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LeaderBoardManager
      path: ''
      startLine: 17500
    syntax:
      content:
        CSharp: 'public class LeaderBoardManager : MonoBehaviour'
        VB: >-
          Public Class LeaderBoardManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.LeaderBoardManager.Start
      commentId: M:Global.LeaderBoardManager.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: LeaderBoardManager.Start()
        VB: LeaderBoardManager.Start()
      qualifiedName:
        CSharp: LeaderBoardManager.Start()
        VB: LeaderBoardManager.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Start
        path: ''
        startLine: 17513
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Global.LeaderBoardManager.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PlayFabGetLeaderboard
    commentId: T:Global.PlayFabGetLeaderboard
    language: CSharp
    name:
      CSharp: PlayFabGetLeaderboard
      VB: PlayFabGetLeaderboard
    nameWithType:
      CSharp: PlayFabGetLeaderboard
      VB: PlayFabGetLeaderboard
    qualifiedName:
      CSharp: PlayFabGetLeaderboard
      VB: PlayFabGetLeaderboard
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayFabGetLeaderboard
      path: ''
      startLine: 17577
    syntax:
      content:
        CSharp: 'public class PlayFabGetLeaderboard : MonoBehaviour'
        VB: >-
          Public Class PlayFabGetLeaderboard

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayFabGetLeaderboard.OnSuccess
      commentId: E:Global.PlayFabGetLeaderboard.OnSuccess
      language: CSharp
      name:
        CSharp: OnSuccess
        VB: OnSuccess
      nameWithType:
        CSharp: PlayFabGetLeaderboard.OnSuccess
        VB: PlayFabGetLeaderboard.OnSuccess
      qualifiedName:
        CSharp: PlayFabGetLeaderboard.OnSuccess
        VB: PlayFabGetLeaderboard.OnSuccess
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSuccess
        path: ''
        startLine: 17579
      syntax:
        content:
          CSharp: public event Action<string> OnSuccess
          VB: Public Event OnSuccess As Action(Of String)
        return:
          type: Global.Action{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayFabGetLeaderboard.GetLeaderboardEntries(System.Int32,System.Int32,System.String)
      commentId: M:Global.PlayFabGetLeaderboard.GetLeaderboardEntries(System.Int32,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: GetLeaderboardEntries(Int32, Int32, String)
        VB: GetLeaderboardEntries(Int32, Int32, String)
      nameWithType:
        CSharp: PlayFabGetLeaderboard.GetLeaderboardEntries(Int32, Int32, String)
        VB: PlayFabGetLeaderboard.GetLeaderboardEntries(Int32, Int32, String)
      qualifiedName:
        CSharp: PlayFabGetLeaderboard.GetLeaderboardEntries(System.Int32, System.Int32, System.String)
        VB: PlayFabGetLeaderboard.GetLeaderboardEntries(System.Int32, System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetLeaderboardEntries
        path: ''
        startLine: 17581
      syntax:
        content:
          CSharp: public void GetLeaderboardEntries(int startPosition, int maxResultCount, string leaderboardName)
          VB: Public Sub GetLeaderboardEntries(startPosition As Integer, maxResultCount As Integer, leaderboardName As String)
        parameters:
        - id: startPosition
          type: System.Int32
        - id: maxResultCount
          type: System.Int32
        - id: leaderboardName
          type: System.String
      overload: Global.PlayFabGetLeaderboard.GetLeaderboardEntries*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PlayFabGetLeaderboardAroundPlayer
    commentId: T:Global.PlayFabGetLeaderboardAroundPlayer
    language: CSharp
    name:
      CSharp: PlayFabGetLeaderboardAroundPlayer
      VB: PlayFabGetLeaderboardAroundPlayer
    nameWithType:
      CSharp: PlayFabGetLeaderboardAroundPlayer
      VB: PlayFabGetLeaderboardAroundPlayer
    qualifiedName:
      CSharp: PlayFabGetLeaderboardAroundPlayer
      VB: PlayFabGetLeaderboardAroundPlayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayFabGetLeaderboardAroundPlayer
      path: ''
      startLine: 17619
    syntax:
      content:
        CSharp: public class PlayFabGetLeaderboardAroundPlayer
        VB: Public Class PlayFabGetLeaderboardAroundPlayer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayFabGetLeaderboardAroundPlayer.OnSuccess
      commentId: E:Global.PlayFabGetLeaderboardAroundPlayer.OnSuccess
      language: CSharp
      name:
        CSharp: OnSuccess
        VB: OnSuccess
      nameWithType:
        CSharp: PlayFabGetLeaderboardAroundPlayer.OnSuccess
        VB: PlayFabGetLeaderboardAroundPlayer.OnSuccess
      qualifiedName:
        CSharp: PlayFabGetLeaderboardAroundPlayer.OnSuccess
        VB: PlayFabGetLeaderboardAroundPlayer.OnSuccess
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSuccess
        path: ''
        startLine: 17621
      syntax:
        content:
          CSharp: public event Action<string> OnSuccess
          VB: Public Event OnSuccess As Action(Of String)
        return:
          type: Global.Action{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer(System.String,System.Int32,System.String)
      commentId: M:Global.PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer(System.String,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: GetLeaderboardAroundPlayer(String, Int32, String)
        VB: GetLeaderboardAroundPlayer(String, Int32, String)
      nameWithType:
        CSharp: PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer(String, Int32, String)
        VB: PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer(String, Int32, String)
      qualifiedName:
        CSharp: PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer(System.String, System.Int32, System.String)
        VB: PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer(System.String, System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetLeaderboardAroundPlayer
        path: ''
        startLine: 17623
      syntax:
        content:
          CSharp: public void GetLeaderboardAroundPlayer(string playerId, int maxResultCount, string leaderboardName)
          VB: Public Sub GetLeaderboardAroundPlayer(playerId As String, maxResultCount As Integer, leaderboardName As String)
        parameters:
        - id: playerId
          type: System.String
        - id: maxResultCount
          type: System.Int32
        - id: leaderboardName
          type: System.String
      overload: Global.PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PlayFabUpdatePlayerStatistics
    commentId: T:Global.PlayFabUpdatePlayerStatistics
    language: CSharp
    name:
      CSharp: PlayFabUpdatePlayerStatistics
      VB: PlayFabUpdatePlayerStatistics
    nameWithType:
      CSharp: PlayFabUpdatePlayerStatistics
      VB: PlayFabUpdatePlayerStatistics
    qualifiedName:
      CSharp: PlayFabUpdatePlayerStatistics
      VB: PlayFabUpdatePlayerStatistics
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayFabUpdatePlayerStatistics
      path: ''
      startLine: 17659
    syntax:
      content:
        CSharp: public class PlayFabUpdatePlayerStatistics
        VB: Public Class PlayFabUpdatePlayerStatistics
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics(System.String,System.Int32)
      commentId: M:Global.PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: UpdatePlayerStatistics(String, Int32)
        VB: UpdatePlayerStatistics(String, Int32)
      nameWithType:
        CSharp: PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics(String, Int32)
        VB: PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics(String, Int32)
      qualifiedName:
        CSharp: PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics(System.String, System.Int32)
        VB: PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdatePlayerStatistics
        path: ''
        startLine: 17661
      syntax:
        content:
          CSharp: public void UpdatePlayerStatistics(string leaderboardName, int score)
          VB: Public Sub UpdatePlayerStatistics(leaderboardName As String, score As Integer)
        parameters:
        - id: leaderboardName
          type: System.String
        - id: score
          type: System.Int32
      overload: Global.PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TaskManager
    commentId: T:Global.TaskManager
    language: CSharp
    name:
      CSharp: TaskManager
      VB: TaskManager
    nameWithType:
      CSharp: TaskManager
      VB: TaskManager
    qualifiedName:
      CSharp: TaskManager
      VB: TaskManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TaskManager
      path: ''
      startLine: 17698
    syntax:
      content:
        CSharp: 'public class TaskManager : MonoBehaviour'
        VB: >-
          Public Class TaskManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.tasks
    commentId: T:Global.tasks
    language: CSharp
    name:
      CSharp: tasks
      VB: tasks
    nameWithType:
      CSharp: tasks
      VB: tasks
    qualifiedName:
      CSharp: tasks
      VB: tasks
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: tasks
      path: ''
      startLine: 17714
    syntax:
      content:
        CSharp: public static class tasks
        VB: Public Module tasks
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Global.tasks.tasksList
      commentId: F:Global.tasks.tasksList
      language: CSharp
      name:
        CSharp: tasksList
        VB: tasksList
      nameWithType:
        CSharp: tasks.tasksList
        VB: tasks.tasksList
      qualifiedName:
        CSharp: tasks.tasksList
        VB: tasks.tasksList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tasksList
        path: ''
        startLine: 17722
      syntax:
        content:
          CSharp: public static List<tasks.task> tasksList
          VB: Public Shared tasksList As List(Of tasks.task)
        return:
          type: System.Collections.Generic.List{tasks.task}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.tasks.New(System.Single,Action)
      commentId: M:Global.tasks.New(System.Single,Action)
      language: CSharp
      name:
        CSharp: New(Single, Action)
        VB: New(Single, Action)
      nameWithType:
        CSharp: tasks.New(Single, Action)
        VB: tasks.New(Single, Action)
      qualifiedName:
        CSharp: tasks.New(System.Single, Action)
        VB: tasks.New(System.Single, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: New
        path: ''
        startLine: 17724
      syntax:
        content:
          CSharp: public static void New(float requestedTime, Action action)
          VB: Public Shared Sub New(requestedTime As Single, action As Action)
        parameters:
        - id: requestedTime
          type: System.Single
        - id: action
          type: Global.Action
      overload: Global.tasks.New*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.tasks.task
    commentId: T:Global.tasks.task
    language: CSharp
    name:
      CSharp: tasks.task
      VB: tasks.task
    nameWithType:
      CSharp: tasks.task
      VB: tasks.task
    qualifiedName:
      CSharp: tasks.task
      VB: tasks.task
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: task
      path: ''
      startLine: 17716
    syntax:
      content:
        CSharp: public class task
        VB: Public Class task
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.tasks.task.startTime
      commentId: F:Global.tasks.task.startTime
      language: CSharp
      name:
        CSharp: startTime
        VB: startTime
      nameWithType:
        CSharp: tasks.task.startTime
        VB: tasks.task.startTime
      qualifiedName:
        CSharp: tasks.task.startTime
        VB: tasks.task.startTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: startTime
        path: ''
        startLine: 17718
      syntax:
        content:
          CSharp: public float startTime
          VB: Public startTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.tasks.task.action
      commentId: F:Global.tasks.task.action
      language: CSharp
      name:
        CSharp: action
        VB: action
      nameWithType:
        CSharp: tasks.task.action
        VB: tasks.task.action
      qualifiedName:
        CSharp: tasks.task.action
        VB: tasks.task.action
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: action
        path: ''
        startLine: 17719
      syntax:
        content:
          CSharp: public Action action
          VB: Public action As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TrackSwitcher
    commentId: T:Global.TrackSwitcher
    language: CSharp
    name:
      CSharp: TrackSwitcher
      VB: TrackSwitcher
    nameWithType:
      CSharp: TrackSwitcher
      VB: TrackSwitcher
    qualifiedName:
      CSharp: TrackSwitcher
      VB: TrackSwitcher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TrackSwitcher
      path: ''
      startLine: 17738
    syntax:
      content:
        CSharp: 'public class TrackSwitcher : MonoBehaviour'
        VB: >-
          Public Class TrackSwitcher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TrackSwitcher.startPath
      commentId: F:Global.TrackSwitcher.startPath
      language: CSharp
      name:
        CSharp: startPath
        VB: startPath
      nameWithType:
        CSharp: TrackSwitcher.startPath
        VB: TrackSwitcher.startPath
      qualifiedName:
        CSharp: TrackSwitcher.startPath
        VB: TrackSwitcher.startPath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: startPath
        path: ''
        startLine: 17742
      syntax:
        content:
          CSharp: public CinemachinePath startPath
          VB: Public startPath As CinemachinePath
        return:
          type: Global.CinemachinePath
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TrackSwitcher.alternativePaths
      commentId: F:Global.TrackSwitcher.alternativePaths
      language: CSharp
      name:
        CSharp: alternativePaths
        VB: alternativePaths
      nameWithType:
        CSharp: TrackSwitcher.alternativePaths
        VB: TrackSwitcher.alternativePaths
      qualifiedName:
        CSharp: TrackSwitcher.alternativePaths
        VB: TrackSwitcher.alternativePaths
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: alternativePaths
        path: ''
        startLine: 17743
      syntax:
        content:
          CSharp: public CinemachinePath[] alternativePaths
          VB: Public alternativePaths As CinemachinePath()
        return:
          type: Global.CinemachinePath[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.Extensions
    commentId: T:Global.Extensions
    language: CSharp
    name:
      CSharp: Extensions
      VB: Extensions
    nameWithType:
      CSharp: Extensions
      VB: Extensions
    qualifiedName:
      CSharp: Extensions
      VB: Extensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Extensions
      path: ''
      startLine: 17993
    syntax:
      content:
        CSharp: public static class Extensions
        VB: Public Module Extensions
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Global.Extensions.SetActiveToggle(GameObject)
      commentId: M:Global.Extensions.SetActiveToggle(GameObject)
      language: CSharp
      name:
        CSharp: SetActiveToggle(GameObject)
        VB: SetActiveToggle(GameObject)
      nameWithType:
        CSharp: Extensions.SetActiveToggle(GameObject)
        VB: Extensions.SetActiveToggle(GameObject)
      qualifiedName:
        CSharp: Extensions.SetActiveToggle(GameObject)
        VB: Extensions.SetActiveToggle(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetActiveToggle
        path: ''
        startLine: 17995
      syntax:
        content:
          CSharp: public static void SetActiveToggle(this GameObject target)
          VB: >-
            <ExtensionAttribute>

            Public Shared Sub SetActiveToggle(target As GameObject)
        parameters:
        - id: target
          type: Global.GameObject
      overload: Global.Extensions.SetActiveToggle*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.Analytics
    commentId: T:Global.Analytics
    language: CSharp
    name:
      CSharp: Analytics
      VB: Analytics
    nameWithType:
      CSharp: Analytics
      VB: Analytics
    qualifiedName:
      CSharp: Analytics
      VB: Analytics
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Analytics
      path: ''
      startLine: 18077
    syntax:
      content:
        CSharp: 'public class Analytics : MonoBehaviour'
        VB: >-
          Public Class Analytics

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.Analytics.UpdateAnalitycCounter(System.String)
      commentId: M:Global.Analytics.UpdateAnalitycCounter(System.String)
      language: CSharp
      name:
        CSharp: UpdateAnalitycCounter(String)
        VB: UpdateAnalitycCounter(String)
      nameWithType:
        CSharp: Analytics.UpdateAnalitycCounter(String)
        VB: Analytics.UpdateAnalitycCounter(String)
      qualifiedName:
        CSharp: Analytics.UpdateAnalitycCounter(System.String)
        VB: Analytics.UpdateAnalitycCounter(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateAnalitycCounter
        path: ''
        startLine: 18079
      syntax:
        content:
          CSharp: public void UpdateAnalitycCounter(string statistic)
          VB: Public Sub UpdateAnalitycCounter(statistic As String)
        parameters:
        - id: statistic
          type: System.String
      overload: Global.Analytics.UpdateAnalitycCounter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Analytics.UpdateAnalityc(System.String,System.Int32)
      commentId: M:Global.Analytics.UpdateAnalityc(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: UpdateAnalityc(String, Int32)
        VB: UpdateAnalityc(String, Int32)
      nameWithType:
        CSharp: Analytics.UpdateAnalityc(String, Int32)
        VB: Analytics.UpdateAnalityc(String, Int32)
      qualifiedName:
        CSharp: Analytics.UpdateAnalityc(System.String, System.Int32)
        VB: Analytics.UpdateAnalityc(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateAnalityc
        path: ''
        startLine: 18104
      syntax:
        content:
          CSharp: public void UpdateAnalityc(string statistic, int value)
          VB: Public Sub UpdateAnalityc(statistic As String, value As Integer)
        parameters:
        - id: statistic
          type: System.String
        - id: value
          type: System.Int32
      overload: Global.Analytics.UpdateAnalityc*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.AnimatorListener
    commentId: T:Global.AnimatorListener
    language: CSharp
    name:
      CSharp: AnimatorListener
      VB: AnimatorListener
    nameWithType:
      CSharp: AnimatorListener
      VB: AnimatorListener
    qualifiedName:
      CSharp: AnimatorListener
      VB: AnimatorListener
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AnimatorListener
      path: ''
      startLine: 18115
    syntax:
      content:
        CSharp: 'public class AnimatorListener : NetworkBehaviour'
        VB: >-
          Public Class AnimatorListener

              Inherits NetworkBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.BackpackController
    commentId: T:Global.BackpackController
    language: CSharp
    name:
      CSharp: BackpackController
      VB: BackpackController
    nameWithType:
      CSharp: BackpackController
      VB: BackpackController
    qualifiedName:
      CSharp: BackpackController
      VB: BackpackController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BackpackController
      path: ''
      startLine: 18140
    syntax:
      content:
        CSharp: 'public class BackpackController : MonoBehaviour'
        VB: >-
          Public Class BackpackController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BackpackController.backpackPanel
      commentId: F:Global.BackpackController.backpackPanel
      language: CSharp
      name:
        CSharp: backpackPanel
        VB: backpackPanel
      nameWithType:
        CSharp: BackpackController.backpackPanel
        VB: BackpackController.backpackPanel
      qualifiedName:
        CSharp: BackpackController.backpackPanel
        VB: BackpackController.backpackPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: backpackPanel
        path: ''
        startLine: 18142
      syntax:
        content:
          CSharp: public GameObject backpackPanel
          VB: Public backpackPanel As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BackpackController.OpenBackPack
      commentId: M:Global.BackpackController.OpenBackPack
      language: CSharp
      name:
        CSharp: OpenBackPack()
        VB: OpenBackPack()
      nameWithType:
        CSharp: BackpackController.OpenBackPack()
        VB: BackpackController.OpenBackPack()
      qualifiedName:
        CSharp: BackpackController.OpenBackPack()
        VB: BackpackController.OpenBackPack()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OpenBackPack
        path: ''
        startLine: 18144
      syntax:
        content:
          CSharp: public void OpenBackPack()
          VB: Public Sub OpenBackPack
      overload: Global.BackpackController.OpenBackPack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.BackpackController.CloseBackPack
      commentId: M:Global.BackpackController.CloseBackPack
      language: CSharp
      name:
        CSharp: CloseBackPack()
        VB: CloseBackPack()
      nameWithType:
        CSharp: BackpackController.CloseBackPack()
        VB: BackpackController.CloseBackPack()
      qualifiedName:
        CSharp: BackpackController.CloseBackPack()
        VB: BackpackController.CloseBackPack()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CloseBackPack
        path: ''
        startLine: 18150
      syntax:
        content:
          CSharp: public void CloseBackPack()
          VB: Public Sub CloseBackPack
      overload: Global.BackpackController.CloseBackPack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CameraSpawner
    commentId: T:Global.CameraSpawner
    language: CSharp
    name:
      CSharp: CameraSpawner
      VB: CameraSpawner
    nameWithType:
      CSharp: CameraSpawner
      VB: CameraSpawner
    qualifiedName:
      CSharp: CameraSpawner
      VB: CameraSpawner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CameraSpawner
      path: ''
      startLine: 18161
    syntax:
      content:
        CSharp: 'public class CameraSpawner : MonoBehaviour'
        VB: >-
          Public Class CameraSpawner

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.CharacterAnimBehaviour
    commentId: T:Global.CharacterAnimBehaviour
    language: CSharp
    name:
      CSharp: CharacterAnimBehaviour
      VB: CharacterAnimBehaviour
    nameWithType:
      CSharp: CharacterAnimBehaviour
      VB: CharacterAnimBehaviour
    qualifiedName:
      CSharp: CharacterAnimBehaviour
      VB: CharacterAnimBehaviour
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CharacterAnimBehaviour
      path: ''
      startLine: 18174
    syntax:
      content:
        CSharp: 'public class CharacterAnimBehaviour : StateMachineBehaviour'
        VB: >-
          Public Class CharacterAnimBehaviour

              Inherits StateMachineBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CharacterAnimBehaviour.OnStateMachineEnter(Animator,System.Int32)
      commentId: M:Global.CharacterAnimBehaviour.OnStateMachineEnter(Animator,System.Int32)
      language: CSharp
      name:
        CSharp: OnStateMachineEnter(Animator, Int32)
        VB: OnStateMachineEnter(Animator, Int32)
      nameWithType:
        CSharp: CharacterAnimBehaviour.OnStateMachineEnter(Animator, Int32)
        VB: CharacterAnimBehaviour.OnStateMachineEnter(Animator, Int32)
      qualifiedName:
        CSharp: CharacterAnimBehaviour.OnStateMachineEnter(Animator, System.Int32)
        VB: CharacterAnimBehaviour.OnStateMachineEnter(Animator, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnStateMachineEnter
        path: ''
        startLine: 18176
      syntax:
        content:
          CSharp: public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
          VB: Public Overrides Sub OnStateMachineEnter(animator As Animator, stateMachinePathHash As Integer)
        parameters:
        - id: animator
          type: Global.Animator
        - id: stateMachinePathHash
          type: System.Int32
      overload: Global.CharacterAnimBehaviour.OnStateMachineEnter*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.DisableOtherShinsei
    commentId: T:Global.DisableOtherShinsei
    language: CSharp
    name:
      CSharp: DisableOtherShinsei
      VB: DisableOtherShinsei
    nameWithType:
      CSharp: DisableOtherShinsei
      VB: DisableOtherShinsei
    qualifiedName:
      CSharp: DisableOtherShinsei
      VB: DisableOtherShinsei
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DisableOtherShinsei
      path: ''
      startLine: 18224
    syntax:
      content:
        CSharp: 'public class DisableOtherShinsei : MonoBehaviour'
        VB: >-
          Public Class DisableOtherShinsei

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.EnableDrink
    commentId: T:Global.EnableDrink
    language: CSharp
    name:
      CSharp: EnableDrink
      VB: EnableDrink
    nameWithType:
      CSharp: EnableDrink
      VB: EnableDrink
    qualifiedName:
      CSharp: EnableDrink
      VB: EnableDrink
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EnableDrink
      path: ''
      startLine: 18247
    syntax:
      content:
        CSharp: 'public class EnableDrink : MonoBehaviour'
        VB: >-
          Public Class EnableDrink

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.EnableDrink.Drink
      commentId: M:Global.EnableDrink.Drink
      language: CSharp
      name:
        CSharp: Drink()
        VB: Drink()
      nameWithType:
        CSharp: EnableDrink.Drink()
        VB: EnableDrink.Drink()
      qualifiedName:
        CSharp: EnableDrink.Drink()
        VB: EnableDrink.Drink()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Drink
        path: ''
        startLine: 18251
      syntax:
        content:
          CSharp: public void Drink()
          VB: Public Sub Drink
      overload: Global.EnableDrink.Drink*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.EnableDrink.DrinkOff
      commentId: M:Global.EnableDrink.DrinkOff
      language: CSharp
      name:
        CSharp: DrinkOff()
        VB: DrinkOff()
      nameWithType:
        CSharp: EnableDrink.DrinkOff()
        VB: EnableDrink.DrinkOff()
      qualifiedName:
        CSharp: EnableDrink.DrinkOff()
        VB: EnableDrink.DrinkOff()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DrinkOff
        path: ''
        startLine: 18256
      syntax:
        content:
          CSharp: public void DrinkOff()
          VB: Public Sub DrinkOff
      overload: Global.EnableDrink.DrinkOff*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.InteractWithShinsei
    commentId: T:Global.InteractWithShinsei
    language: CSharp
    name:
      CSharp: InteractWithShinsei
      VB: InteractWithShinsei
    nameWithType:
      CSharp: InteractWithShinsei
      VB: InteractWithShinsei
    qualifiedName:
      CSharp: InteractWithShinsei
      VB: InteractWithShinsei
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: InteractWithShinsei
      path: ''
      startLine: 18267
    syntax:
      content:
        CSharp: 'public class InteractWithShinsei : MonoBehaviour'
        VB: >-
          Public Class InteractWithShinsei

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    implements:
    - Global.IPointerClickHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.InteractWithShinsei.OnPointerClick(PointerEventData)
      commentId: M:Global.InteractWithShinsei.OnPointerClick(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerClick(PointerEventData)
        VB: OnPointerClick(PointerEventData)
      nameWithType:
        CSharp: InteractWithShinsei.OnPointerClick(PointerEventData)
        VB: InteractWithShinsei.OnPointerClick(PointerEventData)
      qualifiedName:
        CSharp: InteractWithShinsei.OnPointerClick(PointerEventData)
        VB: InteractWithShinsei.OnPointerClick(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerClick
        path: ''
        startLine: 18276
      syntax:
        content:
          CSharp: public void OnPointerClick(PointerEventData eventData)
          VB: Public Sub OnPointerClick(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.InteractWithShinsei.OnPointerClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.IUiTrigger
    commentId: T:Global.IUiTrigger
    language: CSharp
    name:
      CSharp: IUiTrigger
      VB: IUiTrigger
    nameWithType:
      CSharp: IUiTrigger
      VB: IUiTrigger
    qualifiedName:
      CSharp: IUiTrigger
      VB: IUiTrigger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: IUiTrigger
      path: ''
      startLine: 18287
    syntax:
      content:
        CSharp: 'public abstract class IUiTrigger : MonoBehaviour'
        VB: >-
          Public MustInherit Class IUiTrigger

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Global.IUiTrigger.OnTriggerEnterEvent
      commentId: F:Global.IUiTrigger.OnTriggerEnterEvent
      language: CSharp
      name:
        CSharp: OnTriggerEnterEvent
        VB: OnTriggerEnterEvent
      nameWithType:
        CSharp: IUiTrigger.OnTriggerEnterEvent
        VB: IUiTrigger.OnTriggerEnterEvent
      qualifiedName:
        CSharp: IUiTrigger.OnTriggerEnterEvent
        VB: IUiTrigger.OnTriggerEnterEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTriggerEnterEvent
        path: ''
        startLine: 18292
      syntax:
        content:
          CSharp: protected Action<Collider> OnTriggerEnterEvent
          VB: Protected OnTriggerEnterEvent As Action(Of Collider)
        return:
          type: Global.Action{Collider}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.IUiTrigger.OnTriggerExitEvent
      commentId: F:Global.IUiTrigger.OnTriggerExitEvent
      language: CSharp
      name:
        CSharp: OnTriggerExitEvent
        VB: OnTriggerExitEvent
      nameWithType:
        CSharp: IUiTrigger.OnTriggerExitEvent
        VB: IUiTrigger.OnTriggerExitEvent
      qualifiedName:
        CSharp: IUiTrigger.OnTriggerExitEvent
        VB: IUiTrigger.OnTriggerExitEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTriggerExitEvent
        path: ''
        startLine: 18293
      syntax:
        content:
          CSharp: protected Action<Collider> OnTriggerExitEvent
          VB: Protected OnTriggerExitEvent As Action(Of Collider)
        return:
          type: Global.Action{Collider}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Global.IUiTrigger.Update
      commentId: M:Global.IUiTrigger.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: IUiTrigger.Update()
        VB: IUiTrigger.Update()
      qualifiedName:
        CSharp: IUiTrigger.Update()
        VB: IUiTrigger.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Update
        path: ''
        startLine: 18307
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: Global.IUiTrigger.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.LobbyCompanionPanel
    commentId: T:Global.LobbyCompanionPanel
    language: CSharp
    name:
      CSharp: LobbyCompanionPanel
      VB: LobbyCompanionPanel
    nameWithType:
      CSharp: LobbyCompanionPanel
      VB: LobbyCompanionPanel
    qualifiedName:
      CSharp: LobbyCompanionPanel
      VB: LobbyCompanionPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LobbyCompanionPanel
      path: ''
      startLine: 18371
    syntax:
      content:
        CSharp: 'public class LobbyCompanionPanel : MonoBehaviour'
        VB: >-
          Public Class LobbyCompanionPanel

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.Logout
    commentId: T:Global.Logout
    language: CSharp
    name:
      CSharp: Logout
      VB: Logout
    nameWithType:
      CSharp: Logout
      VB: Logout
    qualifiedName:
      CSharp: Logout
      VB: Logout
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Logout
      path: ''
      startLine: 18387
    syntax:
      content:
        CSharp: 'public class Logout : NetworkBehaviour'
        VB: >-
          Public Class Logout

              Inherits NetworkBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.Logout.CallLogout
      commentId: M:Global.Logout.CallLogout
      language: CSharp
      name:
        CSharp: CallLogout()
        VB: CallLogout()
      nameWithType:
        CSharp: Logout.CallLogout()
        VB: Logout.CallLogout()
      qualifiedName:
        CSharp: Logout.CallLogout()
        VB: Logout.CallLogout()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CallLogout
        path: ''
        startLine: 18389
      syntax:
        content:
          CSharp: public void CallLogout()
          VB: Public Sub CallLogout
      overload: Global.Logout.CallLogout*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.MatchmakingTrigger
    commentId: T:Global.MatchmakingTrigger
    language: CSharp
    name:
      CSharp: MatchmakingTrigger
      VB: MatchmakingTrigger
    nameWithType:
      CSharp: MatchmakingTrigger
      VB: MatchmakingTrigger
    qualifiedName:
      CSharp: MatchmakingTrigger
      VB: MatchmakingTrigger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MatchmakingTrigger
      path: ''
      startLine: 18408
    syntax:
      content:
        CSharp: 'public class MatchmakingTrigger : NetworkBehaviour'
        VB: >-
          Public Class MatchmakingTrigger

              Inherits NetworkBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.OpenUrl
    commentId: T:Global.OpenUrl
    language: CSharp
    name:
      CSharp: OpenUrl
      VB: OpenUrl
    nameWithType:
      CSharp: OpenUrl
      VB: OpenUrl
    qualifiedName:
      CSharp: OpenUrl
      VB: OpenUrl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: OpenUrl
      path: ''
      startLine: 18433
    syntax:
      content:
        CSharp: 'public class OpenUrl : MonoBehaviour'
        VB: >-
          Public Class OpenUrl

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.OpenUrl.url
      commentId: F:Global.OpenUrl.url
      language: CSharp
      name:
        CSharp: url
        VB: url
      nameWithType:
        CSharp: OpenUrl.url
        VB: OpenUrl.url
      qualifiedName:
        CSharp: OpenUrl.url
        VB: OpenUrl.url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: url
        path: ''
        startLine: 18435
      syntax:
        content:
          CSharp: public string url
          VB: Public url As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.OpenUrl.OpenUrlMethod
      commentId: M:Global.OpenUrl.OpenUrlMethod
      language: CSharp
      name:
        CSharp: OpenUrlMethod()
        VB: OpenUrlMethod()
      nameWithType:
        CSharp: OpenUrl.OpenUrlMethod()
        VB: OpenUrl.OpenUrlMethod()
      qualifiedName:
        CSharp: OpenUrl.OpenUrlMethod()
        VB: OpenUrl.OpenUrlMethod()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OpenUrlMethod
        path: ''
        startLine: 18436
      syntax:
        content:
          CSharp: public void OpenUrlMethod()
          VB: Public Sub OpenUrlMethod
      overload: Global.OpenUrl.OpenUrlMethod*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.OwnBattleTracker
    commentId: T:Global.OwnBattleTracker
    language: CSharp
    name:
      CSharp: OwnBattleTracker
      VB: OwnBattleTracker
    nameWithType:
      CSharp: OwnBattleTracker
      VB: OwnBattleTracker
    qualifiedName:
      CSharp: OwnBattleTracker
      VB: OwnBattleTracker
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: OwnBattleTracker
      path: ''
      startLine: 18459
    syntax:
      content:
        CSharp: 'public class OwnBattleTracker : MonoBehaviour'
        VB: >-
          Public Class OwnBattleTracker

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.OwnBattleTracker.TotalTurns(System.Int32)
      commentId: M:Global.OwnBattleTracker.TotalTurns(System.Int32)
      language: CSharp
      name:
        CSharp: TotalTurns(Int32)
        VB: TotalTurns(Int32)
      nameWithType:
        CSharp: OwnBattleTracker.TotalTurns(Int32)
        VB: OwnBattleTracker.TotalTurns(Int32)
      qualifiedName:
        CSharp: OwnBattleTracker.TotalTurns(System.Int32)
        VB: OwnBattleTracker.TotalTurns(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TotalTurns
        path: ''
        startLine: 18470
      syntax:
        content:
          CSharp: public void TotalTurns(int value)
          VB: Public Sub TotalTurns(value As Integer)
        parameters:
        - id: value
          type: System.Int32
      overload: Global.OwnBattleTracker.TotalTurns*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.OwnBattleTracker.NotifyAttack(System.Int32)
      commentId: M:Global.OwnBattleTracker.NotifyAttack(System.Int32)
      language: CSharp
      name:
        CSharp: NotifyAttack(Int32)
        VB: NotifyAttack(Int32)
      nameWithType:
        CSharp: OwnBattleTracker.NotifyAttack(Int32)
        VB: OwnBattleTracker.NotifyAttack(Int32)
      qualifiedName:
        CSharp: OwnBattleTracker.NotifyAttack(System.Int32)
        VB: OwnBattleTracker.NotifyAttack(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: NotifyAttack
        path: ''
        startLine: 18487
      syntax:
        content:
          CSharp: public void NotifyAttack(int index)
          VB: Public Sub NotifyAttack(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Global.OwnBattleTracker.NotifyAttack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.OwnBattleTracker.PromediumObject
    commentId: T:Global.OwnBattleTracker.PromediumObject
    language: CSharp
    name:
      CSharp: OwnBattleTracker.PromediumObject
      VB: OwnBattleTracker.PromediumObject
    nameWithType:
      CSharp: OwnBattleTracker.PromediumObject
      VB: OwnBattleTracker.PromediumObject
    qualifiedName:
      CSharp: OwnBattleTracker.PromediumObject
      VB: OwnBattleTracker.PromediumObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PromediumObject
      path: ''
      startLine: 18498
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class PromediumObject
        VB: >-
          <Serializable>

          Public Class PromediumObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.OwnBattleTracker.PromediumObject.TotalDuration
      commentId: F:Global.OwnBattleTracker.PromediumObject.TotalDuration
      language: CSharp
      name:
        CSharp: TotalDuration
        VB: TotalDuration
      nameWithType:
        CSharp: OwnBattleTracker.PromediumObject.TotalDuration
        VB: OwnBattleTracker.PromediumObject.TotalDuration
      qualifiedName:
        CSharp: OwnBattleTracker.PromediumObject.TotalDuration
        VB: OwnBattleTracker.PromediumObject.TotalDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TotalDuration
        path: ''
        startLine: 18501
      syntax:
        content:
          CSharp: public List<int> TotalDuration
          VB: Public TotalDuration As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.OwnBattleTracker.PromediumObject.AddAtLast(System.Int32)
      commentId: M:Global.OwnBattleTracker.PromediumObject.AddAtLast(System.Int32)
      language: CSharp
      name:
        CSharp: AddAtLast(Int32)
        VB: AddAtLast(Int32)
      nameWithType:
        CSharp: OwnBattleTracker.PromediumObject.AddAtLast(Int32)
        VB: OwnBattleTracker.PromediumObject.AddAtLast(Int32)
      qualifiedName:
        CSharp: OwnBattleTracker.PromediumObject.AddAtLast(System.Int32)
        VB: OwnBattleTracker.PromediumObject.AddAtLast(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddAtLast
        path: ''
        startLine: 18503
      syntax:
        content:
          CSharp: public void AddAtLast(int index)
          VB: Public Sub AddAtLast(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Global.OwnBattleTracker.PromediumObject.AddAtLast*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PetInteraction
    commentId: T:Global.PetInteraction
    language: CSharp
    name:
      CSharp: PetInteraction
      VB: PetInteraction
    nameWithType:
      CSharp: PetInteraction
      VB: PetInteraction
    qualifiedName:
      CSharp: PetInteraction
      VB: PetInteraction
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PetInteraction
      path: ''
      startLine: 18841
    syntax:
      content:
        CSharp: 'public class PetInteraction : MonoBehaviour'
        VB: >-
          Public Class PetInteraction

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PetInteraction.layerMaskForStyle
      commentId: F:Global.PetInteraction.layerMaskForStyle
      language: CSharp
      name:
        CSharp: layerMaskForStyle
        VB: layerMaskForStyle
      nameWithType:
        CSharp: PetInteraction.layerMaskForStyle
        VB: PetInteraction.layerMaskForStyle
      qualifiedName:
        CSharp: PetInteraction.layerMaskForStyle
        VB: PetInteraction.layerMaskForStyle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: layerMaskForStyle
        path: ''
        startLine: 18845
      syntax:
        content:
          CSharp: public LayerMask layerMaskForStyle
          VB: Public layerMaskForStyle As LayerMask
        return:
          type: Global.LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PetInteraction.Init
      commentId: M:Global.PetInteraction.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: PetInteraction.Init()
        VB: PetInteraction.Init()
      qualifiedName:
        CSharp: PetInteraction.Init()
        VB: PetInteraction.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Init
        path: ''
        startLine: 18868
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Global.PetInteraction.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PetInteraction.Show
      commentId: M:Global.PetInteraction.Show
      language: CSharp
      name:
        CSharp: Show()
        VB: Show()
      nameWithType:
        CSharp: PetInteraction.Show()
        VB: PetInteraction.Show()
      qualifiedName:
        CSharp: PetInteraction.Show()
        VB: PetInteraction.Show()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Show
        path: ''
        startLine: 18875
      syntax:
        content:
          CSharp: public void Show()
          VB: Public Sub Show
      overload: Global.PetInteraction.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PetInteraction.PetRotation
      commentId: M:Global.PetInteraction.PetRotation
      language: CSharp
      name:
        CSharp: PetRotation()
        VB: PetRotation()
      nameWithType:
        CSharp: PetInteraction.PetRotation()
        VB: PetInteraction.PetRotation()
      qualifiedName:
        CSharp: PetInteraction.PetRotation()
        VB: PetInteraction.PetRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PetRotation
        path: ''
        startLine: 18907
      syntax:
        content:
          CSharp: public void PetRotation()
          VB: Public Sub PetRotation
      overload: Global.PetInteraction.PetRotation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PetInteraction.PlayAnimation(System.Single)
      commentId: M:Global.PetInteraction.PlayAnimation(System.Single)
      language: CSharp
      name:
        CSharp: PlayAnimation(Single)
        VB: PlayAnimation(Single)
      nameWithType:
        CSharp: PetInteraction.PlayAnimation(Single)
        VB: PetInteraction.PlayAnimation(Single)
      qualifiedName:
        CSharp: PetInteraction.PlayAnimation(System.Single)
        VB: PetInteraction.PlayAnimation(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PlayAnimation
        path: ''
        startLine: 18913
      syntax:
        content:
          CSharp: public void PlayAnimation(float index)
          VB: Public Sub PlayAnimation(index As Single)
        parameters:
        - id: index
          type: System.Single
      overload: Global.PetInteraction.PlayAnimation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PetInteraction.Hide
      commentId: M:Global.PetInteraction.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: PetInteraction.Hide()
        VB: PetInteraction.Hide()
      qualifiedName:
        CSharp: PetInteraction.Hide()
        VB: PetInteraction.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Hide
        path: ''
        startLine: 18922
      syntax:
        content:
          CSharp: public void Hide()
          VB: Public Sub Hide
      overload: Global.PetInteraction.Hide*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PlayerUI
    commentId: T:Global.PlayerUI
    language: CSharp
    name:
      CSharp: PlayerUI
      VB: PlayerUI
    nameWithType:
      CSharp: PlayerUI
      VB: PlayerUI
    qualifiedName:
      CSharp: PlayerUI
      VB: PlayerUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerUI
      path: ''
      startLine: 18974
    syntax:
      content:
        CSharp: 'public class PlayerUI : MonoBehaviour'
        VB: >-
          Public Class PlayerUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayerUI.HideNameTag(System.Boolean)
      commentId: M:Global.PlayerUI.HideNameTag(System.Boolean)
      language: CSharp
      name:
        CSharp: HideNameTag(Boolean)
        VB: HideNameTag(Boolean)
      nameWithType:
        CSharp: PlayerUI.HideNameTag(Boolean)
        VB: PlayerUI.HideNameTag(Boolean)
      qualifiedName:
        CSharp: PlayerUI.HideNameTag(System.Boolean)
        VB: PlayerUI.HideNameTag(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HideNameTag
        path: ''
        startLine: 19049
      syntax:
        content:
          CSharp: public void HideNameTag(bool reset = false)
          VB: Public Sub HideNameTag(reset As Boolean = False)
        parameters:
        - id: reset
          type: System.Boolean
      overload: Global.PlayerUI.HideNameTag*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.SearchMatch(System.Boolean)
      commentId: M:Global.PlayerUI.SearchMatch(System.Boolean)
      language: CSharp
      name:
        CSharp: SearchMatch(Boolean)
        VB: SearchMatch(Boolean)
      nameWithType:
        CSharp: PlayerUI.SearchMatch(Boolean)
        VB: PlayerUI.SearchMatch(Boolean)
      qualifiedName:
        CSharp: PlayerUI.SearchMatch(System.Boolean)
        VB: PlayerUI.SearchMatch(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SearchMatch
        path: ''
        startLine: 19054
      syntax:
        content:
          CSharp: public void SearchMatch(bool initTimer = true)
          VB: Public Sub SearchMatch(initTimer As Boolean = True)
        parameters:
        - id: initTimer
          type: System.Boolean
      overload: Global.PlayerUI.SearchMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.CancelMatch(System.Boolean)
      commentId: M:Global.PlayerUI.CancelMatch(System.Boolean)
      language: CSharp
      name:
        CSharp: CancelMatch(Boolean)
        VB: CancelMatch(Boolean)
      nameWithType:
        CSharp: PlayerUI.CancelMatch(Boolean)
        VB: PlayerUI.CancelMatch(Boolean)
      qualifiedName:
        CSharp: PlayerUI.CancelMatch(System.Boolean)
        VB: PlayerUI.CancelMatch(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CancelMatch
        path: ''
        startLine: 19064
      syntax:
        content:
          CSharp: public void CancelMatch(bool hideSearch = true)
          VB: Public Sub CancelMatch(hideSearch As Boolean = True)
        parameters:
        - id: hideSearch
          type: System.Boolean
      overload: Global.PlayerUI.CancelMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.OnSpawn(System.String)
      commentId: M:Global.PlayerUI.OnSpawn(System.String)
      language: CSharp
      name:
        CSharp: OnSpawn(String)
        VB: OnSpawn(String)
      nameWithType:
        CSharp: PlayerUI.OnSpawn(String)
        VB: PlayerUI.OnSpawn(String)
      qualifiedName:
        CSharp: PlayerUI.OnSpawn(System.String)
        VB: PlayerUI.OnSpawn(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSpawn
        path: ''
        startLine: 19073
      syntax:
        content:
          CSharp: public void OnSpawn(string _displayName)
          VB: Public Sub OnSpawn(_displayName As String)
        parameters:
        - id: _displayName
          type: System.String
      overload: Global.PlayerUI.OnSpawn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.SetPlayerNameLabel(System.String)
      commentId: M:Global.PlayerUI.SetPlayerNameLabel(System.String)
      language: CSharp
      name:
        CSharp: SetPlayerNameLabel(String)
        VB: SetPlayerNameLabel(String)
      nameWithType:
        CSharp: PlayerUI.SetPlayerNameLabel(String)
        VB: PlayerUI.SetPlayerNameLabel(String)
      qualifiedName:
        CSharp: PlayerUI.SetPlayerNameLabel(System.String)
        VB: PlayerUI.SetPlayerNameLabel(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetPlayerNameLabel
        path: ''
        startLine: 19082
      syntax:
        content:
          CSharp: public void SetPlayerNameLabel(string newValue)
          VB: Public Sub SetPlayerNameLabel(newValue As String)
        parameters:
        - id: newValue
          type: System.String
      overload: Global.PlayerUI.SetPlayerNameLabel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.OnOffDisplayName(System.Boolean)
      commentId: M:Global.PlayerUI.OnOffDisplayName(System.Boolean)
      language: CSharp
      name:
        CSharp: OnOffDisplayName(Boolean)
        VB: OnOffDisplayName(Boolean)
      nameWithType:
        CSharp: PlayerUI.OnOffDisplayName(Boolean)
        VB: PlayerUI.OnOffDisplayName(Boolean)
      qualifiedName:
        CSharp: PlayerUI.OnOffDisplayName(System.Boolean)
        VB: PlayerUI.OnOffDisplayName(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnOffDisplayName
        path: ''
        startLine: 19088
      syntax:
        content:
          CSharp: public void OnOffDisplayName(bool toggleState)
          VB: Public Sub OnOffDisplayName(toggleState As Boolean)
        parameters:
        - id: toggleState
          type: System.Boolean
      overload: Global.PlayerUI.OnOffDisplayName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.accepted
      commentId: F:Global.PlayerUI.accepted
      language: CSharp
      name:
        CSharp: accepted
        VB: accepted
      nameWithType:
        CSharp: PlayerUI.accepted
        VB: PlayerUI.accepted
      qualifiedName:
        CSharp: PlayerUI.accepted
        VB: PlayerUI.accepted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: accepted
        path: ''
        startLine: 19128
      syntax:
        content:
          CSharp: public bool accepted
          VB: Public accepted As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.matchId
      commentId: F:Global.PlayerUI.matchId
      language: CSharp
      name:
        CSharp: matchId
        VB: matchId
      nameWithType:
        CSharp: PlayerUI.matchId
        VB: PlayerUI.matchId
      qualifiedName:
        CSharp: PlayerUI.matchId
        VB: PlayerUI.matchId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: matchId
        path: ''
        startLine: 19130
      syntax:
        content:
          CSharp: public string matchId
          VB: Public matchId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.ViewMatch
      commentId: M:Global.PlayerUI.ViewMatch
      language: CSharp
      name:
        CSharp: ViewMatch()
        VB: ViewMatch()
      nameWithType:
        CSharp: PlayerUI.ViewMatch()
        VB: PlayerUI.ViewMatch()
      qualifiedName:
        CSharp: PlayerUI.ViewMatch()
        VB: PlayerUI.ViewMatch()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ViewMatch
        path: ''
        startLine: 19132
      syntax:
        content:
          CSharp: public void ViewMatch()
          VB: Public Sub ViewMatch
      overload: Global.PlayerUI.ViewMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.WaitforOpponentToConfirm(GetMatchResult)
      commentId: M:Global.PlayerUI.WaitforOpponentToConfirm(GetMatchResult)
      language: CSharp
      name:
        CSharp: WaitforOpponentToConfirm(GetMatchResult)
        VB: WaitforOpponentToConfirm(GetMatchResult)
      nameWithType:
        CSharp: PlayerUI.WaitforOpponentToConfirm(GetMatchResult)
        VB: PlayerUI.WaitforOpponentToConfirm(GetMatchResult)
      qualifiedName:
        CSharp: PlayerUI.WaitforOpponentToConfirm(GetMatchResult)
        VB: PlayerUI.WaitforOpponentToConfirm(GetMatchResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: WaitforOpponentToConfirm
        path: ''
        startLine: 19163
      syntax:
        content:
          CSharp: public IEnumerator WaitforOpponentToConfirm(GetMatchResult matchResult)
          VB: Public Function WaitforOpponentToConfirm(matchResult As GetMatchResult) As IEnumerator
        parameters:
        - id: matchResult
          type: Global.GetMatchResult
        return:
          type: System.Collections.IEnumerator
      overload: Global.PlayerUI.WaitforOpponentToConfirm*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.DisplayMatchmakingOptions
      commentId: M:Global.PlayerUI.DisplayMatchmakingOptions
      language: CSharp
      name:
        CSharp: DisplayMatchmakingOptions()
        VB: DisplayMatchmakingOptions()
      nameWithType:
        CSharp: PlayerUI.DisplayMatchmakingOptions()
        VB: PlayerUI.DisplayMatchmakingOptions()
      qualifiedName:
        CSharp: PlayerUI.DisplayMatchmakingOptions()
        VB: PlayerUI.DisplayMatchmakingOptions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DisplayMatchmakingOptions
        path: ''
        startLine: 19218
      syntax:
        content:
          CSharp: public void DisplayMatchmakingOptions()
          VB: Public Sub DisplayMatchmakingOptions
      overload: Global.PlayerUI.DisplayMatchmakingOptions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.SearchMatchInitTimer
      commentId: M:Global.PlayerUI.SearchMatchInitTimer
      language: CSharp
      name:
        CSharp: SearchMatchInitTimer()
        VB: SearchMatchInitTimer()
      nameWithType:
        CSharp: PlayerUI.SearchMatchInitTimer()
        VB: PlayerUI.SearchMatchInitTimer()
      qualifiedName:
        CSharp: PlayerUI.SearchMatchInitTimer()
        VB: PlayerUI.SearchMatchInitTimer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SearchMatchInitTimer
        path: ''
        startLine: 19238
      syntax:
        content:
          CSharp: public void SearchMatchInitTimer()
          VB: Public Sub SearchMatchInitTimer
      overload: Global.PlayerUI.SearchMatchInitTimer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.TestMatchInit
      commentId: M:Global.PlayerUI.TestMatchInit
      language: CSharp
      name:
        CSharp: TestMatchInit()
        VB: TestMatchInit()
      nameWithType:
        CSharp: PlayerUI.TestMatchInit()
        VB: PlayerUI.TestMatchInit()
      qualifiedName:
        CSharp: PlayerUI.TestMatchInit()
        VB: PlayerUI.TestMatchInit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TestMatchInit
        path: ''
        startLine: 19289
      syntax:
        content:
          CSharp: public void TestMatchInit()
          VB: Public Sub TestMatchInit
      overload: Global.PlayerUI.TestMatchInit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerUI.CleanPreviousMatch(System.String,Action)
      commentId: M:Global.PlayerUI.CleanPreviousMatch(System.String,Action)
      language: CSharp
      name:
        CSharp: CleanPreviousMatch(String, Action)
        VB: CleanPreviousMatch(String, Action)
      nameWithType:
        CSharp: PlayerUI.CleanPreviousMatch(String, Action)
        VB: PlayerUI.CleanPreviousMatch(String, Action)
      qualifiedName:
        CSharp: PlayerUI.CleanPreviousMatch(System.String, Action)
        VB: PlayerUI.CleanPreviousMatch(System.String, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CleanPreviousMatch
        path: ''
        startLine: 19319
      syntax:
        content:
          CSharp: public void CleanPreviousMatch(string matchId, Action callback)
          VB: Public Sub CleanPreviousMatch(matchId As String, callback As Action)
        parameters:
        - id: matchId
          type: System.String
        - id: callback
          type: Global.Action
      overload: Global.PlayerUI.CleanPreviousMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.RandomAnim
    commentId: T:Global.RandomAnim
    language: CSharp
    name:
      CSharp: RandomAnim
      VB: RandomAnim
    nameWithType:
      CSharp: RandomAnim
      VB: RandomAnim
    qualifiedName:
      CSharp: RandomAnim
      VB: RandomAnim
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RandomAnim
      path: ''
      startLine: 19343
    syntax:
      content:
        CSharp: 'public class RandomAnim : MonoBehaviour'
        VB: >-
          Public Class RandomAnim

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.RecolorBehavior
    commentId: T:Global.RecolorBehavior
    language: CSharp
    name:
      CSharp: RecolorBehavior
      VB: RecolorBehavior
    nameWithType:
      CSharp: RecolorBehavior
      VB: RecolorBehavior
    qualifiedName:
      CSharp: RecolorBehavior
      VB: RecolorBehavior
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RecolorBehavior
      path: ''
      startLine: 19367
    syntax:
      content:
        CSharp: 'public class RecolorBehavior : MonoBehaviour'
        VB: >-
          Public Class RecolorBehavior

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RecolorBehavior.possibleColors
      commentId: F:Global.RecolorBehavior.possibleColors
      language: CSharp
      name:
        CSharp: possibleColors
        VB: possibleColors
      nameWithType:
        CSharp: RecolorBehavior.possibleColors
        VB: RecolorBehavior.possibleColors
      qualifiedName:
        CSharp: RecolorBehavior.possibleColors
        VB: RecolorBehavior.possibleColors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: possibleColors
        path: ''
        startLine: 19370
      syntax:
        content:
          CSharp: public List<Color> possibleColors
          VB: Public possibleColors As List(Of Color)
        return:
          type: System.Collections.Generic.List{Color}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RecolorBehavior.Init
      commentId: M:Global.RecolorBehavior.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: RecolorBehavior.Init()
        VB: RecolorBehavior.Init()
      qualifiedName:
        CSharp: RecolorBehavior.Init()
        VB: RecolorBehavior.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Init
        path: ''
        startLine: 19383
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Global.RecolorBehavior.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.RecolorBtn
    commentId: T:Global.RecolorBtn
    language: CSharp
    name:
      CSharp: RecolorBtn
      VB: RecolorBtn
    nameWithType:
      CSharp: RecolorBtn
      VB: RecolorBtn
    qualifiedName:
      CSharp: RecolorBtn
      VB: RecolorBtn
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RecolorBtn
      path: ''
      startLine: 19411
    syntax:
      content:
        CSharp: 'public class RecolorBtn : MonoBehaviour'
        VB: >-
          Public Class RecolorBtn

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.ReportBug
    commentId: T:Global.ReportBug
    language: CSharp
    name:
      CSharp: ReportBug
      VB: ReportBug
    nameWithType:
      CSharp: ReportBug
      VB: ReportBug
    qualifiedName:
      CSharp: ReportBug
      VB: ReportBug
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ReportBug
      path: ''
      startLine: 19438
    syntax:
      content:
        CSharp: 'public class ReportBug : MonoBehaviour'
        VB: >-
          Public Class ReportBug

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ReportBug.SendBug
      commentId: M:Global.ReportBug.SendBug
      language: CSharp
      name:
        CSharp: SendBug()
        VB: SendBug()
      nameWithType:
        CSharp: ReportBug.SendBug()
        VB: ReportBug.SendBug()
      qualifiedName:
        CSharp: ReportBug.SendBug()
        VB: ReportBug.SendBug()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SendBug
        path: ''
        startLine: 19452
      syntax:
        content:
          CSharp: public void SendBug()
          VB: Public Sub SendBug
      overload: Global.ReportBug.SendBug*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ReportBug.TournamentRequest
      commentId: M:Global.ReportBug.TournamentRequest
      language: CSharp
      name:
        CSharp: TournamentRequest()
        VB: TournamentRequest()
      nameWithType:
        CSharp: ReportBug.TournamentRequest()
        VB: ReportBug.TournamentRequest()
      qualifiedName:
        CSharp: ReportBug.TournamentRequest()
        VB: ReportBug.TournamentRequest()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TournamentRequest
        path: ''
        startLine: 19459
      syntax:
        content:
          CSharp: public IEnumerator TournamentRequest()
          VB: Public Function TournamentRequest As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Global.ReportBug.TournamentRequest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.DtoBugData
    commentId: T:Global.DtoBugData
    language: CSharp
    name:
      CSharp: DtoBugData
      VB: DtoBugData
    nameWithType:
      CSharp: DtoBugData
      VB: DtoBugData
    qualifiedName:
      CSharp: DtoBugData
      VB: DtoBugData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DtoBugData
      path: ''
      startLine: 19536
    syntax:
      content:
        CSharp: public struct DtoBugData
        VB: Public Structure DtoBugData
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.DtoBugData.status
      commentId: F:Global.DtoBugData.status
      language: CSharp
      name:
        CSharp: status
        VB: status
      nameWithType:
        CSharp: DtoBugData.status
        VB: DtoBugData.status
      qualifiedName:
        CSharp: DtoBugData.status
        VB: DtoBugData.status
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: status
        path: ''
        startLine: 19538
      syntax:
        content:
          CSharp: public int status
          VB: Public status As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DtoBugData.success
      commentId: F:Global.DtoBugData.success
      language: CSharp
      name:
        CSharp: success
        VB: success
      nameWithType:
        CSharp: DtoBugData.success
        VB: DtoBugData.success
      qualifiedName:
        CSharp: DtoBugData.success
        VB: DtoBugData.success
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: success
        path: ''
        startLine: 19539
      syntax:
        content:
          CSharp: public bool success
          VB: Public success As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.DtoBugData.data
      commentId: F:Global.DtoBugData.data
      language: CSharp
      name:
        CSharp: data
        VB: data
      nameWithType:
        CSharp: DtoBugData.data
        VB: DtoBugData.data
      qualifiedName:
        CSharp: DtoBugData.data
        VB: DtoBugData.data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: data
        path: ''
        startLine: 19540
      syntax:
        content:
          CSharp: public DtoDetailBugData data
          VB: Public data As DtoDetailBugData
        return:
          type: Global.DtoDetailBugData
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.DtoDetailBugData
    commentId: T:Global.DtoDetailBugData
    language: CSharp
    name:
      CSharp: DtoDetailBugData
      VB: DtoDetailBugData
    nameWithType:
      CSharp: DtoDetailBugData
      VB: DtoDetailBugData
    qualifiedName:
      CSharp: DtoDetailBugData
      VB: DtoDetailBugData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DtoDetailBugData
      path: ''
      startLine: 19543
    syntax:
      content:
        CSharp: public struct DtoDetailBugData
        VB: Public Structure DtoDetailBugData
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Global.DtoDetailBugData.link
      commentId: F:Global.DtoDetailBugData.link
      language: CSharp
      name:
        CSharp: link
        VB: link
      nameWithType:
        CSharp: DtoDetailBugData.link
        VB: DtoDetailBugData.link
      qualifiedName:
        CSharp: DtoDetailBugData.link
        VB: DtoDetailBugData.link
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: link
        path: ''
        startLine: 19545
      syntax:
        content:
          CSharp: public string link
          VB: Public link As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.SettingsController
    commentId: T:Global.SettingsController
    language: CSharp
    name:
      CSharp: SettingsController
      VB: SettingsController
    nameWithType:
      CSharp: SettingsController
      VB: SettingsController
    qualifiedName:
      CSharp: SettingsController
      VB: SettingsController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SettingsController
      path: ''
      startLine: 19553
    syntax:
      content:
        CSharp: 'public class SettingsController : MonoBehaviour'
        VB: >-
          Public Class SettingsController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SettingsController.ToggleSettingsPopUp
      commentId: M:Global.SettingsController.ToggleSettingsPopUp
      language: CSharp
      name:
        CSharp: ToggleSettingsPopUp()
        VB: ToggleSettingsPopUp()
      nameWithType:
        CSharp: SettingsController.ToggleSettingsPopUp()
        VB: SettingsController.ToggleSettingsPopUp()
      qualifiedName:
        CSharp: SettingsController.ToggleSettingsPopUp()
        VB: SettingsController.ToggleSettingsPopUp()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ToggleSettingsPopUp
        path: ''
        startLine: 19564
      syntax:
        content:
          CSharp: public void ToggleSettingsPopUp()
          VB: Public Sub ToggleSettingsPopUp
      overload: Global.SettingsController.ToggleSettingsPopUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ShinseiAnimBehaviour
    commentId: T:Global.ShinseiAnimBehaviour
    language: CSharp
    name:
      CSharp: ShinseiAnimBehaviour
      VB: ShinseiAnimBehaviour
    nameWithType:
      CSharp: ShinseiAnimBehaviour
      VB: ShinseiAnimBehaviour
    qualifiedName:
      CSharp: ShinseiAnimBehaviour
      VB: ShinseiAnimBehaviour
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShinseiAnimBehaviour
      path: ''
      startLine: 19584
    syntax:
      content:
        CSharp: 'public class ShinseiAnimBehaviour : StateMachineBehaviour'
        VB: >-
          Public Class ShinseiAnimBehaviour

              Inherits StateMachineBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ShinseiAnimBehaviour.OnStateExit(Animator,AnimatorStateInfo,System.Int32)
      commentId: M:Global.ShinseiAnimBehaviour.OnStateExit(Animator,AnimatorStateInfo,System.Int32)
      language: CSharp
      name:
        CSharp: OnStateExit(Animator, AnimatorStateInfo, Int32)
        VB: OnStateExit(Animator, AnimatorStateInfo, Int32)
      nameWithType:
        CSharp: ShinseiAnimBehaviour.OnStateExit(Animator, AnimatorStateInfo, Int32)
        VB: ShinseiAnimBehaviour.OnStateExit(Animator, AnimatorStateInfo, Int32)
      qualifiedName:
        CSharp: ShinseiAnimBehaviour.OnStateExit(Animator, AnimatorStateInfo, System.Int32)
        VB: ShinseiAnimBehaviour.OnStateExit(Animator, AnimatorStateInfo, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnStateExit
        path: ''
        startLine: 19587
      syntax:
        content:
          CSharp: public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
          VB: Public Overrides Sub OnStateExit(animator As Animator, stateInfo As AnimatorStateInfo, layerIndex As Integer)
        parameters:
        - id: animator
          type: Global.Animator
        - id: stateInfo
          type: Global.AnimatorStateInfo
        - id: layerIndex
          type: System.Int32
      overload: Global.ShinseiAnimBehaviour.OnStateExit*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Global.TestExplorer
    commentId: T:Global.TestExplorer
    language: CSharp
    name:
      CSharp: TestExplorer
      VB: TestExplorer
    nameWithType:
      CSharp: TestExplorer
      VB: TestExplorer
    qualifiedName:
      CSharp: TestExplorer
      VB: TestExplorer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TestExplorer
      path: ''
      startLine: 20121
    syntax:
      content:
        CSharp: 'public class TestExplorer : MonoBehaviour'
        VB: >-
          Public Class TestExplorer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TestExplorer.OPEN(System.String)
      commentId: M:Global.TestExplorer.OPEN(System.String)
      language: CSharp
      name:
        CSharp: OPEN(String)
        VB: OPEN(String)
      nameWithType:
        CSharp: TestExplorer.OPEN(String)
        VB: TestExplorer.OPEN(String)
      qualifiedName:
        CSharp: TestExplorer.OPEN(System.String)
        VB: TestExplorer.OPEN(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OPEN
        path: ''
        startLine: 20130
      syntax:
        content:
          CSharp: public void OPEN(string itemPath)
          VB: Public Sub OPEN(itemPath As String)
        parameters:
        - id: itemPath
          type: System.String
      overload: Global.TestExplorer.OPEN*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TournamentCamera
    commentId: T:Global.TournamentCamera
    language: CSharp
    name:
      CSharp: TournamentCamera
      VB: TournamentCamera
    nameWithType:
      CSharp: TournamentCamera
      VB: TournamentCamera
    qualifiedName:
      CSharp: TournamentCamera
      VB: TournamentCamera
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TournamentCamera
      path: ''
      startLine: 20144
    syntax:
      content:
        CSharp: 'public class TournamentCamera : MonoBehaviour'
        VB: >-
          Public Class TournamentCamera

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TournamentCamera.Show
      commentId: M:Global.TournamentCamera.Show
      language: CSharp
      name:
        CSharp: Show()
        VB: Show()
      nameWithType:
        CSharp: TournamentCamera.Show()
        VB: TournamentCamera.Show()
      qualifiedName:
        CSharp: TournamentCamera.Show()
        VB: TournamentCamera.Show()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Show
        path: ''
        startLine: 20165
      syntax:
        content:
          CSharp: public void Show()
          VB: Public Sub Show
      overload: Global.TournamentCamera.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TournamentCamera.Hide
      commentId: M:Global.TournamentCamera.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: TournamentCamera.Hide()
        VB: TournamentCamera.Hide()
      qualifiedName:
        CSharp: TournamentCamera.Hide()
        VB: TournamentCamera.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Hide
        path: ''
        startLine: 20171
      syntax:
        content:
          CSharp: public void Hide()
          VB: Public Sub Hide
      overload: Global.TournamentCamera.Hide*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TriggerNotificator
    commentId: T:Global.TriggerNotificator
    language: CSharp
    name:
      CSharp: TriggerNotificator
      VB: TriggerNotificator
    nameWithType:
      CSharp: TriggerNotificator
      VB: TriggerNotificator
    qualifiedName:
      CSharp: TriggerNotificator
      VB: TriggerNotificator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TriggerNotificator
      path: ''
      startLine: 20182
    syntax:
      content:
        CSharp: 'public class TriggerNotificator : MonoBehaviour'
        VB: >-
          Public Class TriggerNotificator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TriggerNotificator.Notify
      commentId: M:Global.TriggerNotificator.Notify
      language: CSharp
      name:
        CSharp: Notify()
        VB: Notify()
      nameWithType:
        CSharp: TriggerNotificator.Notify()
        VB: TriggerNotificator.Notify()
      qualifiedName:
        CSharp: TriggerNotificator.Notify()
        VB: TriggerNotificator.Notify()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Notify
        path: ''
        startLine: 20198
      syntax:
        content:
          CSharp: public void Notify()
          VB: Public Sub Notify
      overload: Global.TriggerNotificator.Notify*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.UiEmoji
    commentId: T:Global.UiEmoji
    language: CSharp
    name:
      CSharp: UiEmoji
      VB: UiEmoji
    nameWithType:
      CSharp: UiEmoji
      VB: UiEmoji
    qualifiedName:
      CSharp: UiEmoji
      VB: UiEmoji
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UiEmoji
      path: ''
      startLine: 20217
    syntax:
      content:
        CSharp: 'public class UiEmoji : MonoBehaviour'
        VB: >-
          Public Class UiEmoji

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.UiEmoji.Start
      commentId: M:Global.UiEmoji.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: UiEmoji.Start()
        VB: UiEmoji.Start()
      qualifiedName:
        CSharp: UiEmoji.Start()
        VB: UiEmoji.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Start
        path: ''
        startLine: 20224
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Global.UiEmoji.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.UiEmoji.Init
      commentId: M:Global.UiEmoji.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: UiEmoji.Init()
        VB: UiEmoji.Init()
      qualifiedName:
        CSharp: UiEmoji.Init()
        VB: UiEmoji.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Init
        path: ''
        startLine: 20229
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Global.UiEmoji.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.UiEmoji.ResetLastEmoji
      commentId: M:Global.UiEmoji.ResetLastEmoji
      language: CSharp
      name:
        CSharp: ResetLastEmoji()
        VB: ResetLastEmoji()
      nameWithType:
        CSharp: UiEmoji.ResetLastEmoji()
        VB: UiEmoji.ResetLastEmoji()
      qualifiedName:
        CSharp: UiEmoji.ResetLastEmoji()
        VB: UiEmoji.ResetLastEmoji()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ResetLastEmoji
        path: ''
        startLine: 20251
      syntax:
        content:
          CSharp: public void ResetLastEmoji()
          VB: Public Sub ResetLastEmoji
      overload: Global.UiEmoji.ResetLastEmoji*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.UiEmoji.ToggleShow
      commentId: M:Global.UiEmoji.ToggleShow
      language: CSharp
      name:
        CSharp: ToggleShow()
        VB: ToggleShow()
      nameWithType:
        CSharp: UiEmoji.ToggleShow()
        VB: UiEmoji.ToggleShow()
      qualifiedName:
        CSharp: UiEmoji.ToggleShow()
        VB: UiEmoji.ToggleShow()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ToggleShow
        path: ''
        startLine: 20266
      syntax:
        content:
          CSharp: public void ToggleShow()
          VB: Public Sub ToggleShow
      overload: Global.UiEmoji.ToggleShow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.UiEmoji.Show(System.Boolean)
      commentId: M:Global.UiEmoji.Show(System.Boolean)
      language: CSharp
      name:
        CSharp: Show(Boolean)
        VB: Show(Boolean)
      nameWithType:
        CSharp: UiEmoji.Show(Boolean)
        VB: UiEmoji.Show(Boolean)
      qualifiedName:
        CSharp: UiEmoji.Show(System.Boolean)
        VB: UiEmoji.Show(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Show
        path: ''
        startLine: 20271
      syntax:
        content:
          CSharp: public void Show(bool state)
          VB: Public Sub Show(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Global.UiEmoji.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.UiTrigger
    commentId: T:Global.UiTrigger
    language: CSharp
    name:
      CSharp: UiTrigger
      VB: UiTrigger
    nameWithType:
      CSharp: UiTrigger
      VB: UiTrigger
    qualifiedName:
      CSharp: UiTrigger
      VB: UiTrigger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UiTrigger
      path: ''
      startLine: 20286
    syntax:
      content:
        CSharp: 'public class UiTrigger : IUiTrigger'
        VB: >-
          Public Class UiTrigger

              Inherits IUiTrigger
    inheritance:
    - System.Object
    - Global.IUiTrigger
    inheritedMembers:
    - Global.IUiTrigger.OnTriggerEnterEvent
    - Global.IUiTrigger.OnTriggerExitEvent
    - Global.IUiTrigger.Update
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.UiTrigger.ShowVendorUi
      commentId: M:Global.UiTrigger.ShowVendorUi
      language: CSharp
      name:
        CSharp: ShowVendorUi()
        VB: ShowVendorUi()
      nameWithType:
        CSharp: UiTrigger.ShowVendorUi()
        VB: UiTrigger.ShowVendorUi()
      qualifiedName:
        CSharp: UiTrigger.ShowVendorUi()
        VB: UiTrigger.ShowVendorUi()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShowVendorUi
        path: ''
        startLine: 20323
      syntax:
        content:
          CSharp: public void ShowVendorUi()
          VB: Public Sub ShowVendorUi
      overload: Global.UiTrigger.ShowVendorUi*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.UiTrigger.HideVendor
      commentId: M:Global.UiTrigger.HideVendor
      language: CSharp
      name:
        CSharp: HideVendor()
        VB: HideVendor()
      nameWithType:
        CSharp: UiTrigger.HideVendor()
        VB: UiTrigger.HideVendor()
      qualifiedName:
        CSharp: UiTrigger.HideVendor()
        VB: UiTrigger.HideVendor()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: HideVendor
        path: ''
        startLine: 20332
      syntax:
        content:
          CSharp: public void HideVendor()
          VB: Public Sub HideVendor
      overload: Global.UiTrigger.HideVendor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.UIViewerTrigger
    commentId: T:Global.UIViewerTrigger
    language: CSharp
    name:
      CSharp: UIViewerTrigger
      VB: UIViewerTrigger
    nameWithType:
      CSharp: UIViewerTrigger
      VB: UIViewerTrigger
    qualifiedName:
      CSharp: UIViewerTrigger
      VB: UIViewerTrigger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UIViewerTrigger
      path: ''
      startLine: 20349
    syntax:
      content:
        CSharp: 'public class UIViewerTrigger : IUiTrigger'
        VB: >-
          Public Class UIViewerTrigger

              Inherits IUiTrigger
    inheritance:
    - System.Object
    - Global.IUiTrigger
    inheritedMembers:
    - Global.IUiTrigger.OnTriggerEnterEvent
    - Global.IUiTrigger.OnTriggerExitEvent
    - Global.IUiTrigger.Update
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.UIViewerTrigger.lobbyCamera
      commentId: F:Global.UIViewerTrigger.lobbyCamera
      language: CSharp
      name:
        CSharp: lobbyCamera
        VB: lobbyCamera
      nameWithType:
        CSharp: UIViewerTrigger.lobbyCamera
        VB: UIViewerTrigger.lobbyCamera
      qualifiedName:
        CSharp: UIViewerTrigger.lobbyCamera
        VB: UIViewerTrigger.lobbyCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: lobbyCamera
        path: ''
        startLine: 20351
      syntax:
        content:
          CSharp: public CinemachineVirtualCamera lobbyCamera
          VB: Public lobbyCamera As CinemachineVirtualCamera
        return:
          type: Global.CinemachineVirtualCamera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.UIViewerTrigger.viewerCamera
      commentId: F:Global.UIViewerTrigger.viewerCamera
      language: CSharp
      name:
        CSharp: viewerCamera
        VB: viewerCamera
      nameWithType:
        CSharp: UIViewerTrigger.viewerCamera
        VB: UIViewerTrigger.viewerCamera
      qualifiedName:
        CSharp: UIViewerTrigger.viewerCamera
        VB: UIViewerTrigger.viewerCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: viewerCamera
        path: ''
        startLine: 20352
      syntax:
        content:
          CSharp: public CinemachineVirtualCamera viewerCamera
          VB: Public viewerCamera As CinemachineVirtualCamera
        return:
          type: Global.CinemachineVirtualCamera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.UIViewerTrigger.ChangeCamera
      commentId: M:Global.UIViewerTrigger.ChangeCamera
      language: CSharp
      name:
        CSharp: ChangeCamera()
        VB: ChangeCamera()
      nameWithType:
        CSharp: UIViewerTrigger.ChangeCamera()
        VB: UIViewerTrigger.ChangeCamera()
      qualifiedName:
        CSharp: UIViewerTrigger.ChangeCamera()
        VB: UIViewerTrigger.ChangeCamera()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeCamera
        path: ''
        startLine: 20363
      syntax:
        content:
          CSharp: public void ChangeCamera()
          VB: Public Sub ChangeCamera
      overload: Global.UIViewerTrigger.ChangeCamera*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.VendorHeadTracking
    commentId: T:Global.VendorHeadTracking
    language: CSharp
    name:
      CSharp: VendorHeadTracking
      VB: VendorHeadTracking
    nameWithType:
      CSharp: VendorHeadTracking
      VB: VendorHeadTracking
    qualifiedName:
      CSharp: VendorHeadTracking
      VB: VendorHeadTracking
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: VendorHeadTracking
      path: ''
      startLine: 20405
    syntax:
      content:
        CSharp: 'public class VendorHeadTracking : MonoBehaviour'
        VB: >-
          Public Class VendorHeadTracking

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.VendorHeadTracking.SetSeeTarget(Transform)
      commentId: M:Global.VendorHeadTracking.SetSeeTarget(Transform)
      language: CSharp
      name:
        CSharp: SetSeeTarget(Transform)
        VB: SetSeeTarget(Transform)
      nameWithType:
        CSharp: VendorHeadTracking.SetSeeTarget(Transform)
        VB: VendorHeadTracking.SetSeeTarget(Transform)
      qualifiedName:
        CSharp: VendorHeadTracking.SetSeeTarget(Transform)
        VB: VendorHeadTracking.SetSeeTarget(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetSeeTarget
        path: ''
        startLine: 20418
      syntax:
        content:
          CSharp: public void SetSeeTarget(Transform colisionTarget)
          VB: Public Sub SetSeeTarget(colisionTarget As Transform)
        parameters:
        - id: colisionTarget
          type: Global.Transform
      overload: Global.VendorHeadTracking.SetSeeTarget*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.VendorHeadTracking.SetOriginal
      commentId: M:Global.VendorHeadTracking.SetOriginal
      language: CSharp
      name:
        CSharp: SetOriginal()
        VB: SetOriginal()
      nameWithType:
        CSharp: VendorHeadTracking.SetOriginal()
        VB: VendorHeadTracking.SetOriginal()
      qualifiedName:
        CSharp: VendorHeadTracking.SetOriginal()
        VB: VendorHeadTracking.SetOriginal()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetOriginal
        path: ''
        startLine: 20423
      syntax:
        content:
          CSharp: public void SetOriginal()
          VB: Public Sub SetOriginal
      overload: Global.VendorHeadTracking.SetOriginal*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.VendorSeeArea
    commentId: T:Global.VendorSeeArea
    language: CSharp
    name:
      CSharp: VendorSeeArea
      VB: VendorSeeArea
    nameWithType:
      CSharp: VendorSeeArea
      VB: VendorSeeArea
    qualifiedName:
      CSharp: VendorSeeArea
      VB: VendorSeeArea
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: VendorSeeArea
      path: ''
      startLine: 20445
    syntax:
      content:
        CSharp: 'public class VendorSeeArea : NetworkBehaviour'
        VB: >-
          Public Class VendorSeeArea

              Inherits NetworkBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.WorldPositionateElement
    commentId: T:Global.WorldPositionateElement
    language: CSharp
    name:
      CSharp: WorldPositionateElement
      VB: WorldPositionateElement
    nameWithType:
      CSharp: WorldPositionateElement
      VB: WorldPositionateElement
    qualifiedName:
      CSharp: WorldPositionateElement
      VB: WorldPositionateElement
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: WorldPositionateElement
      path: ''
      startLine: 20473
    syntax:
      content:
        CSharp: 'public class WorldPositionateElement : MonoBehaviour'
        VB: >-
          Public Class WorldPositionateElement

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.WorldPositionateElement.target
      commentId: F:Global.WorldPositionateElement.target
      language: CSharp
      name:
        CSharp: target
        VB: target
      nameWithType:
        CSharp: WorldPositionateElement.target
        VB: WorldPositionateElement.target
      qualifiedName:
        CSharp: WorldPositionateElement.target
        VB: WorldPositionateElement.target
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: target
        path: ''
        startLine: 20475
      syntax:
        content:
          CSharp: public Transform target
          VB: Public target As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.WorldPositionateElement.offset
      commentId: F:Global.WorldPositionateElement.offset
      language: CSharp
      name:
        CSharp: offset
        VB: offset
      nameWithType:
        CSharp: WorldPositionateElement.offset
        VB: WorldPositionateElement.offset
      qualifiedName:
        CSharp: WorldPositionateElement.offset
        VB: WorldPositionateElement.offset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: offset
        path: ''
        startLine: 20476
      syntax:
        content:
          CSharp: public Vector3 offset
          VB: Public offset As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CheckTournamentInscription
    commentId: T:Global.CheckTournamentInscription
    language: CSharp
    name:
      CSharp: CheckTournamentInscription
      VB: CheckTournamentInscription
    nameWithType:
      CSharp: CheckTournamentInscription
      VB: CheckTournamentInscription
    qualifiedName:
      CSharp: CheckTournamentInscription
      VB: CheckTournamentInscription
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CheckTournamentInscription
      path: ''
      startLine: 20875
    summary: "\nAllow hide all objects innecesary in tournament mode, only visual results\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CheckTournamentInscription : MonoBehaviour'
        VB: >-
          Public Class CheckTournamentInscription

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CheckTournamentInscription.onCheckIfTournamentExist
      commentId: F:Global.CheckTournamentInscription.onCheckIfTournamentExist
      language: CSharp
      name:
        CSharp: onCheckIfTournamentExist
        VB: onCheckIfTournamentExist
      nameWithType:
        CSharp: CheckTournamentInscription.onCheckIfTournamentExist
        VB: CheckTournamentInscription.onCheckIfTournamentExist
      qualifiedName:
        CSharp: CheckTournamentInscription.onCheckIfTournamentExist
        VB: CheckTournamentInscription.onCheckIfTournamentExist
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: onCheckIfTournamentExist
        path: ''
        startLine: 20880
      syntax:
        content:
          CSharp: public Action onCheckIfTournamentExist
          VB: Public onCheckIfTournamentExist As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CheckTournamentInscription.hasAlreadyRecheckConnection
      commentId: F:Global.CheckTournamentInscription.hasAlreadyRecheckConnection
      language: CSharp
      name:
        CSharp: hasAlreadyRecheckConnection
        VB: hasAlreadyRecheckConnection
      nameWithType:
        CSharp: CheckTournamentInscription.hasAlreadyRecheckConnection
        VB: CheckTournamentInscription.hasAlreadyRecheckConnection
      qualifiedName:
        CSharp: CheckTournamentInscription.hasAlreadyRecheckConnection
        VB: CheckTournamentInscription.hasAlreadyRecheckConnection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: hasAlreadyRecheckConnection
        path: ''
        startLine: 20887
      syntax:
        content:
          CSharp: public bool hasAlreadyRecheckConnection
          VB: Public hasAlreadyRecheckConnection As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CheckTournamentInscription.EnableNPCs
      commentId: M:Global.CheckTournamentInscription.EnableNPCs
      language: CSharp
      name:
        CSharp: EnableNPCs()
        VB: EnableNPCs()
      nameWithType:
        CSharp: CheckTournamentInscription.EnableNPCs()
        VB: CheckTournamentInscription.EnableNPCs()
      qualifiedName:
        CSharp: CheckTournamentInscription.EnableNPCs()
        VB: CheckTournamentInscription.EnableNPCs()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EnableNPCs
        path: ''
        startLine: 20888
      syntax:
        content:
          CSharp: public void EnableNPCs()
          VB: Public Sub EnableNPCs
      overload: Global.CheckTournamentInscription.EnableNPCs*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CheckTournamentInscription.DisableObjectsInTournament(System.Boolean)
      commentId: M:Global.CheckTournamentInscription.DisableObjectsInTournament(System.Boolean)
      language: CSharp
      name:
        CSharp: DisableObjectsInTournament(Boolean)
        VB: DisableObjectsInTournament(Boolean)
      nameWithType:
        CSharp: CheckTournamentInscription.DisableObjectsInTournament(Boolean)
        VB: CheckTournamentInscription.DisableObjectsInTournament(Boolean)
      qualifiedName:
        CSharp: CheckTournamentInscription.DisableObjectsInTournament(System.Boolean)
        VB: CheckTournamentInscription.DisableObjectsInTournament(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DisableObjectsInTournament
        path: ''
        startLine: 20908
      syntax:
        content:
          CSharp: public void DisableObjectsInTournament(bool state)
          VB: Public Sub DisableObjectsInTournament(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Global.CheckTournamentInscription.DisableObjectsInTournament*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PendingVariableNPC
    commentId: T:Global.PendingVariableNPC
    language: CSharp
    name:
      CSharp: PendingVariableNPC
      VB: PendingVariableNPC
    nameWithType:
      CSharp: PendingVariableNPC
      VB: PendingVariableNPC
    qualifiedName:
      CSharp: PendingVariableNPC
      VB: PendingVariableNPC
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PendingVariableNPC
      path: ''
      startLine: 21372
    summary: "\nCall all necesary actions to leave the tournament\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PendingVariableNPC : MonoBehaviour'
        VB: >-
          Public Class PendingVariableNPC

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PendingVariableNPC.CheckTournamentInscription
      commentId: F:Global.PendingVariableNPC.CheckTournamentInscription
      language: CSharp
      name:
        CSharp: CheckTournamentInscription
        VB: CheckTournamentInscription
      nameWithType:
        CSharp: PendingVariableNPC.CheckTournamentInscription
        VB: PendingVariableNPC.CheckTournamentInscription
      qualifiedName:
        CSharp: PendingVariableNPC.CheckTournamentInscription
        VB: PendingVariableNPC.CheckTournamentInscription
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CheckTournamentInscription
        path: ''
        startLine: 21375
      syntax:
        content:
          CSharp: public CheckTournamentInscription CheckTournamentInscription
          VB: Public CheckTournamentInscription As CheckTournamentInscription
        return:
          type: Global.CheckTournamentInscription
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PendingVariableNPC.ShowVendor(System.Int32)
      commentId: M:Global.PendingVariableNPC.ShowVendor(System.Int32)
      language: CSharp
      name:
        CSharp: ShowVendor(Int32)
        VB: ShowVendor(Int32)
      nameWithType:
        CSharp: PendingVariableNPC.ShowVendor(Int32)
        VB: PendingVariableNPC.ShowVendor(Int32)
      qualifiedName:
        CSharp: PendingVariableNPC.ShowVendor(System.Int32)
        VB: PendingVariableNPC.ShowVendor(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShowVendor
        path: ''
        startLine: 21381
      summary: "\nChange between two npc with different dialogs in the same place\n"
      example: []
      syntax:
        content:
          CSharp: public void ShowVendor(int value)
          VB: Public Sub ShowVendor(value As Integer)
        parameters:
        - id: value
          type: System.Int32
          description: Index of npc
      overload: Global.PendingVariableNPC.ShowVendor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PendingVariableNPC.LeaveTournament
      commentId: M:Global.PendingVariableNPC.LeaveTournament
      language: CSharp
      name:
        CSharp: LeaveTournament()
        VB: LeaveTournament()
      nameWithType:
        CSharp: PendingVariableNPC.LeaveTournament()
        VB: PendingVariableNPC.LeaveTournament()
      qualifiedName:
        CSharp: PendingVariableNPC.LeaveTournament()
        VB: PendingVariableNPC.LeaveTournament()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LeaveTournament
        path: ''
        startLine: 21390
      syntax:
        content:
          CSharp: public void LeaveTournament()
          VB: Public Sub LeaveTournament
      overload: Global.PendingVariableNPC.LeaveTournament*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.NodeEnumAttribute
    commentId: T:Global.NodeEnumAttribute
    language: CSharp
    name:
      CSharp: NodeEnumAttribute
      VB: NodeEnumAttribute
    nameWithType:
      CSharp: NodeEnumAttribute
      VB: NodeEnumAttribute
    qualifiedName:
      CSharp: NodeEnumAttribute
      VB: NodeEnumAttribute
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: NodeEnumAttribute
      path: ''
      startLine: 22712
    summary: 'Draw enums correctly within nodes. Without it, enums show up at the wrong positions. '
    remarks: 'Enums with this attribute are not detected by EditorGui.ChangeCheck due to waiting before executing '
    example: []
    syntax:
      content:
        CSharp: 'public class NodeEnumAttribute : PropertyAttribute'
        VB: >-
          Public Class NodeEnumAttribute

              Inherits PropertyAttribute
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.AESEncryption
    commentId: T:Global.AESEncryption
    language: CSharp
    name:
      CSharp: AESEncryption
      VB: AESEncryption
    nameWithType:
      CSharp: AESEncryption
      VB: AESEncryption
    qualifiedName:
      CSharp: AESEncryption
      VB: AESEncryption
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AESEncryption
      path: ''
      startLine: 27598
    syntax:
      content:
        CSharp: public static class AESEncryption
        VB: Public Module AESEncryption
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Global.AESEncryption.Key
      commentId: F:Global.AESEncryption.Key
      language: CSharp
      name:
        CSharp: Key
        VB: Key
      nameWithType:
        CSharp: AESEncryption.Key
        VB: AESEncryption.Key
      qualifiedName:
        CSharp: AESEncryption.Key
        VB: AESEncryption.Key
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Key
        path: ''
        startLine: 27600
      syntax:
        content:
          CSharp: public const string Key = "ABCDEFGHJKLMNOPQRSTUVWXYZABCDEFG"
          VB: Public Const Key As String = "ABCDEFGHJKLMNOPQRSTUVWXYZABCDEFG"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.AESEncryption.IV
      commentId: F:Global.AESEncryption.IV
      language: CSharp
      name:
        CSharp: IV
        VB: IV
      nameWithType:
        CSharp: AESEncryption.IV
        VB: AESEncryption.IV
      qualifiedName:
        CSharp: AESEncryption.IV
        VB: AESEncryption.IV
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: IV
        path: ''
        startLine: 27601
      syntax:
        content:
          CSharp: public const string IV = "ABCDEFGHIJKLMNOP"
          VB: Public Const IV As String = "ABCDEFGHIJKLMNOP"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.AESEncryption.Encrypt(System.String)
      commentId: M:Global.AESEncryption.Encrypt(System.String)
      language: CSharp
      name:
        CSharp: Encrypt(String)
        VB: Encrypt(String)
      nameWithType:
        CSharp: AESEncryption.Encrypt(String)
        VB: AESEncryption.Encrypt(String)
      qualifiedName:
        CSharp: AESEncryption.Encrypt(System.String)
        VB: AESEncryption.Encrypt(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Encrypt
        path: ''
        startLine: 27602
      syntax:
        content:
          CSharp: public static string Encrypt(string message)
          VB: Public Shared Function Encrypt(message As String) As String
        parameters:
        - id: message
          type: System.String
        return:
          type: System.String
      overload: Global.AESEncryption.Encrypt*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.AESEncryption.Decrypt(System.String)
      commentId: M:Global.AESEncryption.Decrypt(System.String)
      language: CSharp
      name:
        CSharp: Decrypt(String)
        VB: Decrypt(String)
      nameWithType:
        CSharp: AESEncryption.Decrypt(String)
        VB: AESEncryption.Decrypt(String)
      qualifiedName:
        CSharp: AESEncryption.Decrypt(System.String)
        VB: AESEncryption.Decrypt(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Decrypt
        path: ''
        startLine: 27619
      syntax:
        content:
          CSharp: public static string Decrypt(string encryptedText)
          VB: Public Shared Function Decrypt(encryptedText As String) As String
        parameters:
        - id: encryptedText
          type: System.String
        return:
          type: System.String
      overload: Global.AESEncryption.Decrypt*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.UnityNewtonsoftJsonSerializer
    commentId: T:Global.UnityNewtonsoftJsonSerializer
    language: CSharp
    name:
      CSharp: UnityNewtonsoftJsonSerializer
      VB: UnityNewtonsoftJsonSerializer
    nameWithType:
      CSharp: UnityNewtonsoftJsonSerializer
      VB: UnityNewtonsoftJsonSerializer
    qualifiedName:
      CSharp: UnityNewtonsoftJsonSerializer
      VB: UnityNewtonsoftJsonSerializer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UnityNewtonsoftJsonSerializer
      path: ''
      startLine: 28232
    syntax:
      content:
        CSharp: public class UnityNewtonsoftJsonSerializer
        VB: Public Class UnityNewtonsoftJsonSerializer
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.UnityNewtonsoftJsonSerializer.Serialize(System.Object)
      commentId: M:Global.UnityNewtonsoftJsonSerializer.Serialize(System.Object)
      language: CSharp
      name:
        CSharp: Serialize(Object)
        VB: Serialize(Object)
      nameWithType:
        CSharp: UnityNewtonsoftJsonSerializer.Serialize(Object)
        VB: UnityNewtonsoftJsonSerializer.Serialize(Object)
      qualifiedName:
        CSharp: UnityNewtonsoftJsonSerializer.Serialize(System.Object)
        VB: UnityNewtonsoftJsonSerializer.Serialize(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Serialize
        path: ''
        startLine: 28338
      syntax:
        content:
          CSharp: public static string Serialize(object obj)
          VB: Public Shared Function Serialize(obj As Object) As String
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.String
      overload: Global.UnityNewtonsoftJsonSerializer.Serialize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.UnityNewtonsoftJsonSerializer.Deserialize``1(System.String)
      commentId: M:Global.UnityNewtonsoftJsonSerializer.Deserialize``1(System.String)
      language: CSharp
      name:
        CSharp: Deserialize<T>(String)
        VB: Deserialize(Of T)(String)
      nameWithType:
        CSharp: UnityNewtonsoftJsonSerializer.Deserialize<T>(String)
        VB: UnityNewtonsoftJsonSerializer.Deserialize(Of T)(String)
      qualifiedName:
        CSharp: UnityNewtonsoftJsonSerializer.Deserialize<T>(System.String)
        VB: UnityNewtonsoftJsonSerializer.Deserialize(Of T)(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Deserialize
        path: ''
        startLine: 28360
      syntax:
        content:
          CSharp: public static T Deserialize<T>(string text)
          VB: Public Shared Function Deserialize(Of T)(text As String) As T
        parameters:
        - id: text
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Global.UnityNewtonsoftJsonSerializer.Deserialize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.Cooker
    commentId: T:Global.Cooker
    language: CSharp
    name:
      CSharp: Cooker
      VB: Cooker
    nameWithType:
      CSharp: Cooker
      VB: Cooker
    qualifiedName:
      CSharp: Cooker
      VB: Cooker
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Cooker
      path: ''
      startLine: 28379
    summary: "\nThis script controls the behavior of npc cooker in the bar\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Cooker : MonoBehaviour'
        VB: >-
          Public Class Cooker

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.Cooker.layerMaskForCook
      commentId: F:Global.Cooker.layerMaskForCook
      language: CSharp
      name:
        CSharp: layerMaskForCook
        VB: layerMaskForCook
      nameWithType:
        CSharp: Cooker.layerMaskForCook
        VB: Cooker.layerMaskForCook
      qualifiedName:
        CSharp: Cooker.layerMaskForCook
        VB: Cooker.layerMaskForCook
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: layerMaskForCook
        path: ''
        startLine: 28386
      syntax:
        content:
          CSharp: public LayerMask layerMaskForCook
          VB: Public layerMaskForCook As LayerMask
        return:
          type: Global.LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Cooker.GetFood(System.Int32)
      commentId: M:Global.Cooker.GetFood(System.Int32)
      language: CSharp
      name:
        CSharp: GetFood(Int32)
        VB: GetFood(Int32)
      nameWithType:
        CSharp: Cooker.GetFood(Int32)
        VB: Cooker.GetFood(Int32)
      qualifiedName:
        CSharp: Cooker.GetFood(System.Int32)
        VB: Cooker.GetFood(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetFood
        path: ''
        startLine: 28399
      summary: "\nPlayback the cooking animations\n"
      example: []
      syntax:
        content:
          CSharp: public void GetFood(int type)
          VB: Public Sub GetFood(type As Integer)
        parameters:
        - id: type
          type: System.Int32
          description: ''
      overload: Global.Cooker.GetFood*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Cooker.Show
      commentId: M:Global.Cooker.Show
      language: CSharp
      name:
        CSharp: Show()
        VB: Show()
      nameWithType:
        CSharp: Cooker.Show()
        VB: Cooker.Show()
      qualifiedName:
        CSharp: Cooker.Show()
        VB: Cooker.Show()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Show
        path: ''
        startLine: 28472
      summary: "\nSet camera setting for cooking event\n"
      example: []
      syntax:
        content:
          CSharp: public void Show()
          VB: Public Sub Show
      overload: Global.Cooker.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.Cooker.Hide
      commentId: M:Global.Cooker.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: Cooker.Hide()
        VB: Cooker.Hide()
      qualifiedName:
        CSharp: Cooker.Hide()
        VB: Cooker.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Hide
        path: ''
        startLine: 28488
      summary: "\nPut camera settings to normal values\n"
      example: []
      syntax:
        content:
          CSharp: public void Hide()
          VB: Public Sub Hide
      overload: Global.Cooker.Hide*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PlayerIconController
    commentId: T:Global.PlayerIconController
    language: CSharp
    name:
      CSharp: PlayerIconController
      VB: PlayerIconController
    nameWithType:
      CSharp: PlayerIconController
      VB: PlayerIconController
    qualifiedName:
      CSharp: PlayerIconController
      VB: PlayerIconController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerIconController
      path: ''
      startLine: 28501
    syntax:
      content:
        CSharp: 'public class PlayerIconController : MonoBehaviour'
        VB: >-
          Public Class PlayerIconController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayerIconController.backpackIcon
      commentId: F:Global.PlayerIconController.backpackIcon
      language: CSharp
      name:
        CSharp: backpackIcon
        VB: backpackIcon
      nameWithType:
        CSharp: PlayerIconController.backpackIcon
        VB: PlayerIconController.backpackIcon
      qualifiedName:
        CSharp: PlayerIconController.backpackIcon
        VB: PlayerIconController.backpackIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: backpackIcon
        path: ''
        startLine: 28503
      syntax:
        content:
          CSharp: public GameObject backpackIcon
          VB: Public backpackIcon As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerIconController.combatIcon
      commentId: F:Global.PlayerIconController.combatIcon
      language: CSharp
      name:
        CSharp: combatIcon
        VB: combatIcon
      nameWithType:
        CSharp: PlayerIconController.combatIcon
        VB: PlayerIconController.combatIcon
      qualifiedName:
        CSharp: PlayerIconController.combatIcon
        VB: PlayerIconController.combatIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: combatIcon
        path: ''
        startLine: 28504
      syntax:
        content:
          CSharp: public GameObject combatIcon
          VB: Public combatIcon As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerIconController.ChangeIcon(CharacterStateEnum)
      commentId: M:Global.PlayerIconController.ChangeIcon(CharacterStateEnum)
      language: CSharp
      name:
        CSharp: ChangeIcon(CharacterStateEnum)
        VB: ChangeIcon(CharacterStateEnum)
      nameWithType:
        CSharp: PlayerIconController.ChangeIcon(CharacterStateEnum)
        VB: PlayerIconController.ChangeIcon(CharacterStateEnum)
      qualifiedName:
        CSharp: PlayerIconController.ChangeIcon(CharacterStateEnum)
        VB: PlayerIconController.ChangeIcon(CharacterStateEnum)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeIcon
        path: ''
        startLine: 28506
      syntax:
        content:
          CSharp: public void ChangeIcon(CharacterStateEnum characterState)
          VB: Public Sub ChangeIcon(characterState As CharacterStateEnum)
        parameters:
        - id: characterState
          type: Global.CharacterStateEnum
      overload: Global.PlayerIconController.ChangeIcon*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ThirdPersonController
    commentId: T:Global.ThirdPersonController
    language: CSharp
    name:
      CSharp: ThirdPersonController
      VB: ThirdPersonController
    nameWithType:
      CSharp: ThirdPersonController
      VB: ThirdPersonController
    qualifiedName:
      CSharp: ThirdPersonController
      VB: ThirdPersonController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ThirdPersonController
      path: ''
      startLine: 28547
    summary: "\nControll the behavior of the main character\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ThirdPersonController : ThirdPersonCoreController'
        VB: >-
          Public Class ThirdPersonController

              Inherits ThirdPersonCoreController
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ThirdPersonController.playerPersonalUI
      commentId: F:Global.ThirdPersonController.playerPersonalUI
      language: CSharp
      name:
        CSharp: playerPersonalUI
        VB: playerPersonalUI
      nameWithType:
        CSharp: ThirdPersonController.playerPersonalUI
        VB: ThirdPersonController.playerPersonalUI
      qualifiedName:
        CSharp: ThirdPersonController.playerPersonalUI
        VB: ThirdPersonController.playerPersonalUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playerPersonalUI
        path: ''
        startLine: 28556
      syntax:
        content:
          CSharp: public GameObject playerPersonalUI
          VB: Public playerPersonalUI As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.animator
      commentId: F:Global.ThirdPersonController.animator
      language: CSharp
      name:
        CSharp: animator
        VB: animator
      nameWithType:
        CSharp: ThirdPersonController.animator
        VB: ThirdPersonController.animator
      qualifiedName:
        CSharp: ThirdPersonController.animator
        VB: ThirdPersonController.animator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: animator
        path: ''
        startLine: 28557
      syntax:
        content:
          CSharp: public List<Animator> animator
          VB: Public animator As List(Of Animator)
        return:
          type: System.Collections.Generic.List{Animator}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.navmeshAgent
      commentId: F:Global.ThirdPersonController.navmeshAgent
      language: CSharp
      name:
        CSharp: navmeshAgent
        VB: navmeshAgent
      nameWithType:
        CSharp: ThirdPersonController.navmeshAgent
        VB: ThirdPersonController.navmeshAgent
      qualifiedName:
        CSharp: ThirdPersonController.navmeshAgent
        VB: ThirdPersonController.navmeshAgent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: navmeshAgent
        path: ''
        startLine: 28558
      syntax:
        content:
          CSharp: public NavMeshAgent navmeshAgent
          VB: Public navmeshAgent As NavMeshAgent
        return:
          type: Global.NavMeshAgent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.playfabId
      commentId: F:Global.ThirdPersonController.playfabId
      language: CSharp
      name:
        CSharp: playfabId
        VB: playfabId
      nameWithType:
        CSharp: ThirdPersonController.playfabId
        VB: ThirdPersonController.playfabId
      qualifiedName:
        CSharp: ThirdPersonController.playfabId
        VB: ThirdPersonController.playfabId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playfabId
        path: ''
        startLine: 28561
      syntax:
        content:
          CSharp: public string playfabId
          VB: Public playfabId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.displayName
      commentId: F:Global.ThirdPersonController.displayName
      language: CSharp
      name:
        CSharp: displayName
        VB: displayName
      nameWithType:
        CSharp: ThirdPersonController.displayName
        VB: ThirdPersonController.displayName
      qualifiedName:
        CSharp: ThirdPersonController.displayName
        VB: ThirdPersonController.displayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: displayName
        path: ''
        startLine: 28562
      syntax:
        content:
          CSharp: public string displayName
          VB: Public displayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.currentMatchId
      commentId: F:Global.ThirdPersonController.currentMatchId
      language: CSharp
      name:
        CSharp: currentMatchId
        VB: currentMatchId
      nameWithType:
        CSharp: ThirdPersonController.currentMatchId
        VB: ThirdPersonController.currentMatchId
      qualifiedName:
        CSharp: ThirdPersonController.currentMatchId
        VB: ThirdPersonController.currentMatchId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentMatchId
        path: ''
        startLine: 28563
      syntax:
        content:
          CSharp: public string currentMatchId
          VB: Public currentMatchId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.IsMovementBloqued
      commentId: P:Global.ThirdPersonController.IsMovementBloqued
      language: CSharp
      name:
        CSharp: IsMovementBloqued
        VB: IsMovementBloqued
      nameWithType:
        CSharp: ThirdPersonController.IsMovementBloqued
        VB: ThirdPersonController.IsMovementBloqued
      qualifiedName:
        CSharp: ThirdPersonController.IsMovementBloqued
        VB: ThirdPersonController.IsMovementBloqued
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: IsMovementBloqued
        path: ''
        startLine: 28570
      syntax:
        content:
          CSharp: public bool IsMovementBloqued { get; set; }
          VB: Public Property IsMovementBloqued As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Global.ThirdPersonController.IsMovementBloqued*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.ThirdPersonController.CanBeBlocked
      commentId: F:Global.ThirdPersonController.CanBeBlocked
      language: CSharp
      name:
        CSharp: CanBeBlocked
        VB: CanBeBlocked
      nameWithType:
        CSharp: ThirdPersonController.CanBeBlocked
        VB: ThirdPersonController.CanBeBlocked
      qualifiedName:
        CSharp: ThirdPersonController.CanBeBlocked
        VB: ThirdPersonController.CanBeBlocked
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CanBeBlocked
        path: ''
        startLine: 28579
      syntax:
        content:
          CSharp: public bool CanBeBlocked
          VB: Public CanBeBlocked As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.IsChatMode
      commentId: F:Global.ThirdPersonController.IsChatMode
      language: CSharp
      name:
        CSharp: IsChatMode
        VB: IsChatMode
      nameWithType:
        CSharp: ThirdPersonController.IsChatMode
        VB: ThirdPersonController.IsChatMode
      qualifiedName:
        CSharp: ThirdPersonController.IsChatMode
        VB: ThirdPersonController.IsChatMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: IsChatMode
        path: ''
        startLine: 28580
      syntax:
        content:
          CSharp: public bool IsChatMode
          VB: Public IsChatMode As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.IsLocalPlayer
      commentId: F:Global.ThirdPersonController.IsLocalPlayer
      language: CSharp
      name:
        CSharp: IsLocalPlayer
        VB: IsLocalPlayer
      nameWithType:
        CSharp: ThirdPersonController.IsLocalPlayer
        VB: ThirdPersonController.IsLocalPlayer
      qualifiedName:
        CSharp: ThirdPersonController.IsLocalPlayer
        VB: ThirdPersonController.IsLocalPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: IsLocalPlayer
        path: ''
        startLine: 28581
      syntax:
        content:
          CSharp: public bool IsLocalPlayer
          VB: Public IsLocalPlayer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.distance
      commentId: F:Global.ThirdPersonController.distance
      language: CSharp
      name:
        CSharp: distance
        VB: distance
      nameWithType:
        CSharp: ThirdPersonController.distance
        VB: ThirdPersonController.distance
      qualifiedName:
        CSharp: ThirdPersonController.distance
        VB: ThirdPersonController.distance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: distance
        path: ''
        startLine: 28583
      syntax:
        content:
          CSharp: public float distance
          VB: Public distance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.EnableMovement
      commentId: F:Global.ThirdPersonController.EnableMovement
      language: CSharp
      name:
        CSharp: EnableMovement
        VB: EnableMovement
      nameWithType:
        CSharp: ThirdPersonController.EnableMovement
        VB: ThirdPersonController.EnableMovement
      qualifiedName:
        CSharp: ThirdPersonController.EnableMovement
        VB: ThirdPersonController.EnableMovement
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: EnableMovement
        path: ''
        startLine: 28585
      syntax:
        content:
          CSharp: public bool EnableMovement
          VB: Public EnableMovement As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.OnDisablePLayer
      commentId: F:Global.ThirdPersonController.OnDisablePLayer
      language: CSharp
      name:
        CSharp: OnDisablePLayer
        VB: OnDisablePLayer
      nameWithType:
        CSharp: ThirdPersonController.OnDisablePLayer
        VB: ThirdPersonController.OnDisablePLayer
      qualifiedName:
        CSharp: ThirdPersonController.OnDisablePLayer
        VB: ThirdPersonController.OnDisablePLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDisablePLayer
        path: ''
        startLine: 28587
      syntax:
        content:
          CSharp: public Action OnDisablePLayer
          VB: Public OnDisablePLayer As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.playerIconController
      commentId: F:Global.ThirdPersonController.playerIconController
      language: CSharp
      name:
        CSharp: playerIconController
        VB: playerIconController
      nameWithType:
        CSharp: ThirdPersonController.playerIconController
        VB: ThirdPersonController.playerIconController
      qualifiedName:
        CSharp: ThirdPersonController.playerIconController
        VB: ThirdPersonController.playerIconController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playerIconController
        path: ''
        startLine: 28588
      syntax:
        content:
          CSharp: public PlayerIconController playerIconController
          VB: Public playerIconController As PlayerIconController
        return:
          type: Global.PlayerIconController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.challengePlayerController
      commentId: F:Global.ThirdPersonController.challengePlayerController
      language: CSharp
      name:
        CSharp: challengePlayerController
        VB: challengePlayerController
      nameWithType:
        CSharp: ThirdPersonController.challengePlayerController
        VB: ThirdPersonController.challengePlayerController
      qualifiedName:
        CSharp: ThirdPersonController.challengePlayerController
        VB: ThirdPersonController.challengePlayerController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: challengePlayerController
        path: ''
        startLine: 28589
      syntax:
        content:
          CSharp: public ChallengePlayerController challengePlayerController
          VB: Public challengePlayerController As ChallengePlayerController
        return:
          type: Global.ChallengePlayerController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.openTournamentButton
      commentId: F:Global.ThirdPersonController.openTournamentButton
      language: CSharp
      name:
        CSharp: openTournamentButton
        VB: openTournamentButton
      nameWithType:
        CSharp: ThirdPersonController.openTournamentButton
        VB: ThirdPersonController.openTournamentButton
      qualifiedName:
        CSharp: ThirdPersonController.openTournamentButton
        VB: ThirdPersonController.openTournamentButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: openTournamentButton
        path: ''
        startLine: 28594
      syntax:
        content:
          CSharp: public Button openTournamentButton
          VB: Public openTournamentButton As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.tournamentReadyController
      commentId: F:Global.ThirdPersonController.tournamentReadyController
      language: CSharp
      name:
        CSharp: tournamentReadyController
        VB: tournamentReadyController
      nameWithType:
        CSharp: ThirdPersonController.tournamentReadyController
        VB: ThirdPersonController.tournamentReadyController
      qualifiedName:
        CSharp: ThirdPersonController.tournamentReadyController
        VB: ThirdPersonController.tournamentReadyController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tournamentReadyController
        path: ''
        startLine: 28595
      syntax:
        content:
          CSharp: public TournamentReadyController tournamentReadyController
          VB: Public tournamentReadyController As TournamentReadyController
        return:
          type: Global.TournamentReadyController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.MaxDistanceToTeleport
      commentId: F:Global.ThirdPersonController.MaxDistanceToTeleport
      language: CSharp
      name:
        CSharp: MaxDistanceToTeleport
        VB: MaxDistanceToTeleport
      nameWithType:
        CSharp: ThirdPersonController.MaxDistanceToTeleport
        VB: ThirdPersonController.MaxDistanceToTeleport
      qualifiedName:
        CSharp: ThirdPersonController.MaxDistanceToTeleport
        VB: ThirdPersonController.MaxDistanceToTeleport
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MaxDistanceToTeleport
        path: ''
        startLine: 28597
      syntax:
        content:
          CSharp: public float MaxDistanceToTeleport
          VB: Public MaxDistanceToTeleport As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.Init``1(``0)
      commentId: M:Global.ThirdPersonController.Init``1(``0)
      language: CSharp
      name:
        CSharp: Init<T>(T)
        VB: Init(Of T)(T)
      nameWithType:
        CSharp: ThirdPersonController.Init<T>(T)
        VB: ThirdPersonController.Init(Of T)(T)
      qualifiedName:
        CSharp: ThirdPersonController.Init<T>(T)
        VB: ThirdPersonController.Init(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Init
        path: ''
        startLine: 28622
      syntax:
        content:
          CSharp: public override void Init<T>(T data)
          VB: Public Overrides Sub Init(Of T)(data As T)
        parameters:
        - id: data
          type: '{T}'
        typeParameters:
        - id: T
      overload: Global.ThirdPersonController.Init*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.ThirdPersonController.PutPlayerInFacingCamera
      commentId: M:Global.ThirdPersonController.PutPlayerInFacingCamera
      language: CSharp
      name:
        CSharp: PutPlayerInFacingCamera()
        VB: PutPlayerInFacingCamera()
      nameWithType:
        CSharp: ThirdPersonController.PutPlayerInFacingCamera()
        VB: ThirdPersonController.PutPlayerInFacingCamera()
      qualifiedName:
        CSharp: ThirdPersonController.PutPlayerInFacingCamera()
        VB: ThirdPersonController.PutPlayerInFacingCamera()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PutPlayerInFacingCamera
        path: ''
        startLine: 28695
      syntax:
        content:
          CSharp: public void PutPlayerInFacingCamera()
          VB: Public Sub PutPlayerInFacingCamera
      overload: Global.ThirdPersonController.PutPlayerInFacingCamera*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.MoveObject(System.Nullable{Vector3})
      commentId: M:Global.ThirdPersonController.MoveObject(System.Nullable{Vector3})
      language: CSharp
      name:
        CSharp: MoveObject(Nullable<Vector3>)
        VB: MoveObject(Nullable(Of Vector3))
      nameWithType:
        CSharp: ThirdPersonController.MoveObject(Nullable<Vector3>)
        VB: ThirdPersonController.MoveObject(Nullable(Of Vector3))
      qualifiedName:
        CSharp: ThirdPersonController.MoveObject(System.Nullable<Vector3>)
        VB: ThirdPersonController.MoveObject(System.Nullable(Of Vector3))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MoveObject
        path: ''
        startLine: 28702
      syntax:
        content:
          CSharp: public void MoveObject(Vector3? replacePosition = null)
          VB: Public Sub MoveObject(replacePosition As Vector3? = Nothing)
        parameters:
        - id: replacePosition
          type: System.Nullable{Vector3}
      overload: Global.ThirdPersonController.MoveObject*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ThirdPersonController.SetStateIcon(CharacterStateEnum)
      commentId: M:Global.ThirdPersonController.SetStateIcon(CharacterStateEnum)
      language: CSharp
      name:
        CSharp: SetStateIcon(CharacterStateEnum)
        VB: SetStateIcon(CharacterStateEnum)
      nameWithType:
        CSharp: ThirdPersonController.SetStateIcon(CharacterStateEnum)
        VB: ThirdPersonController.SetStateIcon(CharacterStateEnum)
      qualifiedName:
        CSharp: ThirdPersonController.SetStateIcon(CharacterStateEnum)
        VB: ThirdPersonController.SetStateIcon(CharacterStateEnum)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetStateIcon
        path: ''
        startLine: 28756
      syntax:
        content:
          CSharp: public void SetStateIcon(CharacterStateEnum characterState)
          VB: Public Sub SetStateIcon(characterState As CharacterStateEnum)
        parameters:
        - id: characterState
          type: Global.CharacterStateEnum
      overload: Global.ThirdPersonController.SetStateIcon*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.SimpleVideoPlayer
    commentId: T:Global.SimpleVideoPlayer
    language: CSharp
    name:
      CSharp: SimpleVideoPlayer
      VB: SimpleVideoPlayer
    nameWithType:
      CSharp: SimpleVideoPlayer
      VB: SimpleVideoPlayer
    qualifiedName:
      CSharp: SimpleVideoPlayer
      VB: SimpleVideoPlayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SimpleVideoPlayer
      path: ''
      startLine: 28957
    syntax:
      content:
        CSharp: 'public class SimpleVideoPlayer : MonoBehaviour'
        VB: >-
          Public Class SimpleVideoPlayer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.FreeCam
    commentId: T:Global.FreeCam
    language: CSharp
    name:
      CSharp: FreeCam
      VB: FreeCam
    nameWithType:
      CSharp: FreeCam
      VB: FreeCam
    qualifiedName:
      CSharp: FreeCam
      VB: FreeCam
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FreeCam
      path: ''
      startLine: 29072
    summary: "\nA simple free camera to be added to a Unity game object.\n\nKeys:\nwasd / arrows	- movement\nq/e 			- up/down (local space)\nr/f 			- up/down (world space)\npageup/pagedown	- up/down (world space)\nhold shift		- enable fast movement mode\nright mouse  	- enable free look\nmouse			- free look / rotation\n\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FreeCam : MonoBehaviour'
        VB: >-
          Public Class FreeCam

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.FreeCam.movementSpeed
      commentId: F:Global.FreeCam.movementSpeed
      language: CSharp
      name:
        CSharp: movementSpeed
        VB: movementSpeed
      nameWithType:
        CSharp: FreeCam.movementSpeed
        VB: FreeCam.movementSpeed
      qualifiedName:
        CSharp: FreeCam.movementSpeed
        VB: FreeCam.movementSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: movementSpeed
        path: ''
        startLine: 29077
      summary: "\nNormal speed of camera movement.\n"
      example: []
      syntax:
        content:
          CSharp: public float movementSpeed
          VB: Public movementSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FreeCam.fastMovementSpeed
      commentId: F:Global.FreeCam.fastMovementSpeed
      language: CSharp
      name:
        CSharp: fastMovementSpeed
        VB: fastMovementSpeed
      nameWithType:
        CSharp: FreeCam.fastMovementSpeed
        VB: FreeCam.fastMovementSpeed
      qualifiedName:
        CSharp: FreeCam.fastMovementSpeed
        VB: FreeCam.fastMovementSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: fastMovementSpeed
        path: ''
        startLine: 29082
      summary: "\nSpeed of camera movement when shift is held down,\n"
      example: []
      syntax:
        content:
          CSharp: public float fastMovementSpeed
          VB: Public fastMovementSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FreeCam.freeLookSensitivity
      commentId: F:Global.FreeCam.freeLookSensitivity
      language: CSharp
      name:
        CSharp: freeLookSensitivity
        VB: freeLookSensitivity
      nameWithType:
        CSharp: FreeCam.freeLookSensitivity
        VB: FreeCam.freeLookSensitivity
      qualifiedName:
        CSharp: FreeCam.freeLookSensitivity
        VB: FreeCam.freeLookSensitivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: freeLookSensitivity
        path: ''
        startLine: 29087
      summary: "\nSensitivity for free look.\n"
      example: []
      syntax:
        content:
          CSharp: public float freeLookSensitivity
          VB: Public freeLookSensitivity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FreeCam.zoomSensitivity
      commentId: F:Global.FreeCam.zoomSensitivity
      language: CSharp
      name:
        CSharp: zoomSensitivity
        VB: zoomSensitivity
      nameWithType:
        CSharp: FreeCam.zoomSensitivity
        VB: FreeCam.zoomSensitivity
      qualifiedName:
        CSharp: FreeCam.zoomSensitivity
        VB: FreeCam.zoomSensitivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: zoomSensitivity
        path: ''
        startLine: 29092
      summary: "\nAmount to zoom the camera when using the mouse wheel.\n"
      example: []
      syntax:
        content:
          CSharp: public float zoomSensitivity
          VB: Public zoomSensitivity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FreeCam.fastZoomSensitivity
      commentId: F:Global.FreeCam.fastZoomSensitivity
      language: CSharp
      name:
        CSharp: fastZoomSensitivity
        VB: fastZoomSensitivity
      nameWithType:
        CSharp: FreeCam.fastZoomSensitivity
        VB: FreeCam.fastZoomSensitivity
      qualifiedName:
        CSharp: FreeCam.fastZoomSensitivity
        VB: FreeCam.fastZoomSensitivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: fastZoomSensitivity
        path: ''
        startLine: 29097
      summary: "\nAmount to zoom the camera when using the mouse wheel (fast mode).\n"
      example: []
      syntax:
        content:
          CSharp: public float fastZoomSensitivity
          VB: Public fastZoomSensitivity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FreeCam.StartLooking
      commentId: M:Global.FreeCam.StartLooking
      language: CSharp
      name:
        CSharp: StartLooking()
        VB: StartLooking()
      nameWithType:
        CSharp: FreeCam.StartLooking()
        VB: FreeCam.StartLooking()
      qualifiedName:
        CSharp: FreeCam.StartLooking()
        VB: FreeCam.StartLooking()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StartLooking
        path: ''
        startLine: 29181
      summary: "\nEnable free looking.\n"
      example: []
      syntax:
        content:
          CSharp: public void StartLooking()
          VB: Public Sub StartLooking
      overload: Global.FreeCam.StartLooking*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FreeCam.StopLooking
      commentId: M:Global.FreeCam.StopLooking
      language: CSharp
      name:
        CSharp: StopLooking()
        VB: StopLooking()
      nameWithType:
        CSharp: FreeCam.StopLooking()
        VB: FreeCam.StopLooking()
      qualifiedName:
        CSharp: FreeCam.StopLooking()
        VB: FreeCam.StopLooking()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StopLooking
        path: ''
        startLine: 29191
      summary: "\nDisable free looking.\n"
      example: []
      syntax:
        content:
          CSharp: public void StopLooking()
          VB: Public Sub StopLooking
      overload: Global.FreeCam.StopLooking*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ChangeGender
    commentId: T:Global.ChangeGender
    language: CSharp
    name:
      CSharp: ChangeGender
      VB: ChangeGender
    nameWithType:
      CSharp: ChangeGender
      VB: ChangeGender
    qualifiedName:
      CSharp: ChangeGender
      VB: ChangeGender
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ChangeGender
      path: ''
      startLine: 29206
    summary: "\nChange between male and female character and update in playfab data\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ChangeGender : MonoBehaviour'
        VB: >-
          Public Class ChangeGender

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ChangeGender.SelectGender(System.Int32)
      commentId: M:Global.ChangeGender.SelectGender(System.Int32)
      language: CSharp
      name:
        CSharp: SelectGender(Int32)
        VB: SelectGender(Int32)
      nameWithType:
        CSharp: ChangeGender.SelectGender(Int32)
        VB: ChangeGender.SelectGender(Int32)
      qualifiedName:
        CSharp: ChangeGender.SelectGender(System.Int32)
        VB: ChangeGender.SelectGender(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SelectGender
        path: ''
        startLine: 29210
      syntax:
        content:
          CSharp: public void SelectGender(int index)
          VB: Public Sub SelectGender(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Global.ChangeGender.SelectGender*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.Constants
    commentId: T:Global.Constants
    language: CSharp
    name:
      CSharp: Constants
      VB: Constants
    nameWithType:
      CSharp: Constants
      VB: Constants
    qualifiedName:
      CSharp: Constants
      VB: Constants
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Constants
      path: ''
      startLine: 29230
    syntax:
      content:
        CSharp: public static class Constants
        VB: Public Module Constants
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Global.Constants.SHINSEI_VAULT
      commentId: F:Global.Constants.SHINSEI_VAULT
      language: CSharp
      name:
        CSharp: SHINSEI_VAULT
        VB: SHINSEI_VAULT
      nameWithType:
        CSharp: Constants.SHINSEI_VAULT
        VB: Constants.SHINSEI_VAULT
      qualifiedName:
        CSharp: Constants.SHINSEI_VAULT
        VB: Constants.SHINSEI_VAULT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SHINSEI_VAULT
        path: ''
        startLine: 29232
      syntax:
        content:
          CSharp: public const string SHINSEI_VAULT = "ShinseiVault"
          VB: Public Const SHINSEI_VAULT As String = "ShinseiVault"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.Constants.CARD_STORE
      commentId: F:Global.Constants.CARD_STORE
      language: CSharp
      name:
        CSharp: CARD_STORE
        VB: CARD_STORE
      nameWithType:
        CSharp: Constants.CARD_STORE
        VB: Constants.CARD_STORE
      qualifiedName:
        CSharp: Constants.CARD_STORE
        VB: Constants.CARD_STORE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CARD_STORE
        path: ''
        startLine: 29233
      syntax:
        content:
          CSharp: public const string CARD_STORE = "CardStore"
          VB: Public Const CARD_STORE As String = "CardStore"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.Constants.SHINSEI_COMPANION
      commentId: F:Global.Constants.SHINSEI_COMPANION
      language: CSharp
      name:
        CSharp: SHINSEI_COMPANION
        VB: SHINSEI_COMPANION
      nameWithType:
        CSharp: Constants.SHINSEI_COMPANION
        VB: Constants.SHINSEI_COMPANION
      qualifiedName:
        CSharp: Constants.SHINSEI_COMPANION
        VB: Constants.SHINSEI_COMPANION
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SHINSEI_COMPANION
        path: ''
        startLine: 29234
      syntax:
        content:
          CSharp: public const string SHINSEI_COMPANION = "ShinseiCompanion"
          VB: Public Const SHINSEI_COMPANION As String = "ShinseiCompanion"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.Constants.SHINSEI_SLOT
      commentId: F:Global.Constants.SHINSEI_SLOT
      language: CSharp
      name:
        CSharp: SHINSEI_SLOT
        VB: SHINSEI_SLOT
      nameWithType:
        CSharp: Constants.SHINSEI_SLOT
        VB: Constants.SHINSEI_SLOT
      qualifiedName:
        CSharp: Constants.SHINSEI_SLOT
        VB: Constants.SHINSEI_SLOT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SHINSEI_SLOT
        path: ''
        startLine: 29235
      syntax:
        content:
          CSharp: public const string SHINSEI_SLOT = "ShinseiSlot"
          VB: Public Const SHINSEI_SLOT As String = "ShinseiSlot"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.Constants.CHARACTER_STYLE
      commentId: F:Global.Constants.CHARACTER_STYLE
      language: CSharp
      name:
        CSharp: CHARACTER_STYLE
        VB: CHARACTER_STYLE
      nameWithType:
        CSharp: Constants.CHARACTER_STYLE
        VB: Constants.CHARACTER_STYLE
      qualifiedName:
        CSharp: Constants.CHARACTER_STYLE
        VB: Constants.CHARACTER_STYLE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CHARACTER_STYLE
        path: ''
        startLine: 29236
      syntax:
        content:
          CSharp: public const string CHARACTER_STYLE = "CharacterStyle"
          VB: Public Const CHARACTER_STYLE As String = "CharacterStyle"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.Constants.FRIENDLY_MATCH
      commentId: F:Global.Constants.FRIENDLY_MATCH
      language: CSharp
      name:
        CSharp: FRIENDLY_MATCH
        VB: FRIENDLY_MATCH
      nameWithType:
        CSharp: Constants.FRIENDLY_MATCH
        VB: Constants.FRIENDLY_MATCH
      qualifiedName:
        CSharp: Constants.FRIENDLY_MATCH
        VB: Constants.FRIENDLY_MATCH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FRIENDLY_MATCH
        path: ''
        startLine: 29237
      syntax:
        content:
          CSharp: public const string FRIENDLY_MATCH = "FriendlyMatch"
          VB: Public Const FRIENDLY_MATCH As String = "FriendlyMatch"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.Constants.FRIENDLY_LEADERBOARD
      commentId: F:Global.Constants.FRIENDLY_LEADERBOARD
      language: CSharp
      name:
        CSharp: FRIENDLY_LEADERBOARD
        VB: FRIENDLY_LEADERBOARD
      nameWithType:
        CSharp: Constants.FRIENDLY_LEADERBOARD
        VB: Constants.FRIENDLY_LEADERBOARD
      qualifiedName:
        CSharp: Constants.FRIENDLY_LEADERBOARD
        VB: Constants.FRIENDLY_LEADERBOARD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FRIENDLY_LEADERBOARD
        path: ''
        startLine: 29238
      syntax:
        content:
          CSharp: public const string FRIENDLY_LEADERBOARD = "Victories"
          VB: Public Const FRIENDLY_LEADERBOARD As String = "Victories"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.Constants.TITLE_ID
      commentId: F:Global.Constants.TITLE_ID
      language: CSharp
      name:
        CSharp: TITLE_ID
        VB: TITLE_ID
      nameWithType:
        CSharp: Constants.TITLE_ID
        VB: Constants.TITLE_ID
      qualifiedName:
        CSharp: Constants.TITLE_ID
        VB: Constants.TITLE_ID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: TITLE_ID
        path: ''
        startLine: 29239
      syntax:
        content:
          CSharp: public const string TITLE_ID = "BFDDE"
          VB: Public Const TITLE_ID As String = "BFDDE"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.Courtain
    commentId: T:Global.Courtain
    language: CSharp
    name:
      CSharp: Courtain
      VB: Courtain
    nameWithType:
      CSharp: Courtain
      VB: Courtain
    qualifiedName:
      CSharp: Courtain
      VB: Courtain
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Courtain
      path: ''
      startLine: 29249
    summary: "\nA component that make a black transition \n"
    example: []
    syntax:
      content:
        CSharp: 'public class Courtain : MonoBehaviour'
        VB: >-
          Public Class Courtain

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.Courtain.StartFade(System.Int32)
      commentId: M:Global.Courtain.StartFade(System.Int32)
      language: CSharp
      name:
        CSharp: StartFade(Int32)
        VB: StartFade(Int32)
      nameWithType:
        CSharp: Courtain.StartFade(Int32)
        VB: Courtain.StartFade(Int32)
      qualifiedName:
        CSharp: Courtain.StartFade(System.Int32)
        VB: Courtain.StartFade(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StartFade
        path: ''
        startLine: 29257
      syntax:
        content:
          CSharp: public void StartFade(int transitionDuration)
          VB: Public Sub StartFade(transitionDuration As Integer)
        parameters:
        - id: transitionDuration
          type: System.Int32
      overload: Global.Courtain.StartFade*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.EnableWhenEnable
    commentId: T:Global.EnableWhenEnable
    language: CSharp
    name:
      CSharp: EnableWhenEnable
      VB: EnableWhenEnable
    nameWithType:
      CSharp: EnableWhenEnable
      VB: EnableWhenEnable
    qualifiedName:
      CSharp: EnableWhenEnable
      VB: EnableWhenEnable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EnableWhenEnable
      path: ''
      startLine: 29285
    syntax:
      content:
        CSharp: 'public class EnableWhenEnable : MonoBehaviour'
        VB: >-
          Public Class EnableWhenEnable

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.FreeFlyCamera
    commentId: T:Global.FreeFlyCamera
    language: CSharp
    name:
      CSharp: FreeFlyCamera
      VB: FreeFlyCamera
    nameWithType:
      CSharp: FreeFlyCamera
      VB: FreeFlyCamera
    qualifiedName:
      CSharp: FreeFlyCamera
      VB: FreeFlyCamera
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FreeFlyCamera
      path: ''
      startLine: 29307
    syntax:
      content:
        CSharp: 'public class FreeFlyCamera : MonoBehaviour'
        VB: >-
          Public Class FreeFlyCamera

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.FreeLookCam
    commentId: T:Global.FreeLookCam
    language: CSharp
    name:
      CSharp: FreeLookCam
      VB: FreeLookCam
    nameWithType:
      CSharp: FreeLookCam
      VB: FreeLookCam
    qualifiedName:
      CSharp: FreeLookCam
      VB: FreeLookCam
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: FreeLookCam
      path: ''
      startLine: 29525
    syntax:
      content:
        CSharp: 'public class FreeLookCam : MonoBehaviour'
        VB: >-
          Public Class FreeLookCam

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.FreeLookCam.freeLookCamera
      commentId: F:Global.FreeLookCam.freeLookCamera
      language: CSharp
      name:
        CSharp: freeLookCamera
        VB: freeLookCamera
      nameWithType:
        CSharp: FreeLookCam.freeLookCamera
        VB: FreeLookCam.freeLookCamera
      qualifiedName:
        CSharp: FreeLookCam.freeLookCamera
        VB: FreeLookCam.freeLookCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: freeLookCamera
        path: ''
        startLine: 29527
      syntax:
        content:
          CSharp: public GameObject freeLookCamera
          VB: Public freeLookCamera As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FreeLookCam.mainCamera
      commentId: F:Global.FreeLookCam.mainCamera
      language: CSharp
      name:
        CSharp: mainCamera
        VB: mainCamera
      nameWithType:
        CSharp: FreeLookCam.mainCamera
        VB: FreeLookCam.mainCamera
      qualifiedName:
        CSharp: FreeLookCam.mainCamera
        VB: FreeLookCam.mainCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: mainCamera
        path: ''
        startLine: 29528
      syntax:
        content:
          CSharp: public GameObject mainCamera
          VB: Public mainCamera As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FreeLookCam.Update
      commentId: M:Global.FreeLookCam.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: FreeLookCam.Update()
        VB: FreeLookCam.Update()
      qualifiedName:
        CSharp: FreeLookCam.Update()
        VB: FreeLookCam.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Update
        path: ''
        startLine: 29531
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: Global.FreeLookCam.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.FreeLookCam.ActivateCamera(System.Boolean)
      commentId: M:Global.FreeLookCam.ActivateCamera(System.Boolean)
      language: CSharp
      name:
        CSharp: ActivateCamera(Boolean)
        VB: ActivateCamera(Boolean)
      nameWithType:
        CSharp: FreeLookCam.ActivateCamera(Boolean)
        VB: FreeLookCam.ActivateCamera(Boolean)
      qualifiedName:
        CSharp: FreeLookCam.ActivateCamera(System.Boolean)
        VB: FreeLookCam.ActivateCamera(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ActivateCamera
        path: ''
        startLine: 29542
      syntax:
        content:
          CSharp: public void ActivateCamera(bool activateFreelook)
          VB: Public Sub ActivateCamera(activateFreelook As Boolean)
        parameters:
        - id: activateFreelook
          type: System.Boolean
      overload: Global.FreeLookCam.ActivateCamera*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.HideAfterSeconds
    commentId: T:Global.HideAfterSeconds
    language: CSharp
    name:
      CSharp: HideAfterSeconds
      VB: HideAfterSeconds
    nameWithType:
      CSharp: HideAfterSeconds
      VB: HideAfterSeconds
    qualifiedName:
      CSharp: HideAfterSeconds
      VB: HideAfterSeconds
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: HideAfterSeconds
      path: ''
      startLine: 29665
    syntax:
      content:
        CSharp: 'public class HideAfterSeconds : MonoBehaviour'
        VB: >-
          Public Class HideAfterSeconds

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.HideAfterSeconds.seconds
      commentId: F:Global.HideAfterSeconds.seconds
      language: CSharp
      name:
        CSharp: seconds
        VB: seconds
      nameWithType:
        CSharp: HideAfterSeconds.seconds
        VB: HideAfterSeconds.seconds
      qualifiedName:
        CSharp: HideAfterSeconds.seconds
        VB: HideAfterSeconds.seconds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: seconds
        path: ''
        startLine: 29667
      syntax:
        content:
          CSharp: public float seconds
          VB: Public seconds As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HideAfterSeconds.fade
      commentId: F:Global.HideAfterSeconds.fade
      language: CSharp
      name:
        CSharp: fade
        VB: fade
      nameWithType:
        CSharp: HideAfterSeconds.fade
        VB: HideAfterSeconds.fade
      qualifiedName:
        CSharp: HideAfterSeconds.fade
        VB: HideAfterSeconds.fade
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: fade
        path: ''
        startLine: 29668
      syntax:
        content:
          CSharp: public bool fade
          VB: Public fade As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.HideAfterSeconds.StartHideCountdown
      commentId: M:Global.HideAfterSeconds.StartHideCountdown
      language: CSharp
      name:
        CSharp: StartHideCountdown()
        VB: StartHideCountdown()
      nameWithType:
        CSharp: HideAfterSeconds.StartHideCountdown()
        VB: HideAfterSeconds.StartHideCountdown()
      qualifiedName:
        CSharp: HideAfterSeconds.StartHideCountdown()
        VB: HideAfterSeconds.StartHideCountdown()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StartHideCountdown
        path: ''
        startLine: 29671
      syntax:
        content:
          CSharp: public void StartHideCountdown()
          VB: Public Sub StartHideCountdown
      overload: Global.HideAfterSeconds.StartHideCountdown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.InteractWithPlayerController
    commentId: T:Global.InteractWithPlayerController
    language: CSharp
    name:
      CSharp: InteractWithPlayerController
      VB: InteractWithPlayerController
    nameWithType:
      CSharp: InteractWithPlayerController
      VB: InteractWithPlayerController
    qualifiedName:
      CSharp: InteractWithPlayerController
      VB: InteractWithPlayerController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: InteractWithPlayerController
      path: ''
      startLine: 29705
    syntax:
      content:
        CSharp: 'public class InteractWithPlayerController : MonoBehaviour'
        VB: >-
          Public Class InteractWithPlayerController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.InteractWithPlayerController.interactionsPanel
      commentId: F:Global.InteractWithPlayerController.interactionsPanel
      language: CSharp
      name:
        CSharp: interactionsPanel
        VB: interactionsPanel
      nameWithType:
        CSharp: InteractWithPlayerController.interactionsPanel
        VB: InteractWithPlayerController.interactionsPanel
      qualifiedName:
        CSharp: InteractWithPlayerController.interactionsPanel
        VB: InteractWithPlayerController.interactionsPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: interactionsPanel
        path: ''
        startLine: 29708
      syntax:
        content:
          CSharp: public GameObject interactionsPanel
          VB: Public interactionsPanel As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.InteractWithPlayerController.ActivatePieMenu
      commentId: M:Global.InteractWithPlayerController.ActivatePieMenu
      language: CSharp
      name:
        CSharp: ActivatePieMenu()
        VB: ActivatePieMenu()
      nameWithType:
        CSharp: InteractWithPlayerController.ActivatePieMenu()
        VB: InteractWithPlayerController.ActivatePieMenu()
      qualifiedName:
        CSharp: InteractWithPlayerController.ActivatePieMenu()
        VB: InteractWithPlayerController.ActivatePieMenu()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ActivatePieMenu
        path: ''
        startLine: 29719
      syntax:
        content:
          CSharp: public void ActivatePieMenu()
          VB: Public Sub ActivatePieMenu
      overload: Global.InteractWithPlayerController.ActivatePieMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ITimer
    commentId: T:Global.ITimer
    language: CSharp
    name:
      CSharp: ITimer
      VB: ITimer
    nameWithType:
      CSharp: ITimer
      VB: ITimer
    qualifiedName:
      CSharp: ITimer
      VB: ITimer
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ITimer
      path: ''
      startLine: 29731
    syntax:
      content:
        CSharp: public interface ITimer
        VB: >-
          Public Interface ITimer

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Global.ITimer.UpdateTimer(System.Single,System.String,System.Boolean)
      commentId: M:Global.ITimer.UpdateTimer(System.Single,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateTimer(Single, String, Boolean)
        VB: UpdateTimer(Single, String, Boolean)
      nameWithType:
        CSharp: ITimer.UpdateTimer(Single, String, Boolean)
        VB: ITimer.UpdateTimer(Single, String, Boolean)
      qualifiedName:
        CSharp: ITimer.UpdateTimer(System.Single, System.String, System.Boolean)
        VB: ITimer.UpdateTimer(System.Single, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateTimer
        path: ''
        startLine: 29733
      syntax:
        content:
          CSharp: string UpdateTimer(float timeInSeconds, string colorText = null, bool showHour = false)
          VB: Function UpdateTimer(timeInSeconds As Single, colorText As String = Nothing, showHour As Boolean = False) As String
        parameters:
        - id: timeInSeconds
          type: System.Single
        - id: colorText
          type: System.String
        - id: showHour
          type: System.Boolean
        return:
          type: System.String
      overload: Global.ITimer.UpdateTimer*
      modifiers:
        CSharp: []
        VB: []
  - id: Global.LightFlickerEffect
    commentId: T:Global.LightFlickerEffect
    language: CSharp
    name:
      CSharp: LightFlickerEffect
      VB: LightFlickerEffect
    nameWithType:
      CSharp: LightFlickerEffect
      VB: LightFlickerEffect
    qualifiedName:
      CSharp: LightFlickerEffect
      VB: LightFlickerEffect
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LightFlickerEffect
      path: ''
      startLine: 29749
    summary: "\nComponent which will flicker a linked light while active by changing its\nintensity between the min and max values given. The flickering can be\nsharp or smoothed depending on the value of the smoothing parameter.\n\nJust activate / deactivate this component as usual to pause / resume flicker\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LightFlickerEffect : MonoBehaviour'
        VB: >-
          Public Class LightFlickerEffect

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.LightFlickerEffect.light
      commentId: F:Global.LightFlickerEffect.light
      language: CSharp
      name:
        CSharp: light
        VB: light
      nameWithType:
        CSharp: LightFlickerEffect.light
        VB: LightFlickerEffect.light
      qualifiedName:
        CSharp: LightFlickerEffect.light
        VB: LightFlickerEffect.light
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: light
        path: ''
        startLine: 29752
      syntax:
        content:
          CSharp: public Light light
          VB: Public light As Light
        return:
          type: Global.Light
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LightFlickerEffect.minIntensity
      commentId: F:Global.LightFlickerEffect.minIntensity
      language: CSharp
      name:
        CSharp: minIntensity
        VB: minIntensity
      nameWithType:
        CSharp: LightFlickerEffect.minIntensity
        VB: LightFlickerEffect.minIntensity
      qualifiedName:
        CSharp: LightFlickerEffect.minIntensity
        VB: LightFlickerEffect.minIntensity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: minIntensity
        path: ''
        startLine: 29754
      syntax:
        content:
          CSharp: public float minIntensity
          VB: Public minIntensity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LightFlickerEffect.maxIntensity
      commentId: F:Global.LightFlickerEffect.maxIntensity
      language: CSharp
      name:
        CSharp: maxIntensity
        VB: maxIntensity
      nameWithType:
        CSharp: LightFlickerEffect.maxIntensity
        VB: LightFlickerEffect.maxIntensity
      qualifiedName:
        CSharp: LightFlickerEffect.maxIntensity
        VB: LightFlickerEffect.maxIntensity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: maxIntensity
        path: ''
        startLine: 29756
      syntax:
        content:
          CSharp: public float maxIntensity
          VB: Public maxIntensity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LightFlickerEffect.smoothing
      commentId: F:Global.LightFlickerEffect.smoothing
      language: CSharp
      name:
        CSharp: smoothing
        VB: smoothing
      nameWithType:
        CSharp: LightFlickerEffect.smoothing
        VB: LightFlickerEffect.smoothing
      qualifiedName:
        CSharp: LightFlickerEffect.smoothing
        VB: LightFlickerEffect.smoothing
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: smoothing
        path: ''
        startLine: 29759
      syntax:
        content:
          CSharp: public int smoothing
          VB: Public smoothing As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LightFlickerEffect.Reset
      commentId: M:Global.LightFlickerEffect.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: LightFlickerEffect.Reset()
        VB: LightFlickerEffect.Reset()
      qualifiedName:
        CSharp: LightFlickerEffect.Reset()
        VB: LightFlickerEffect.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Reset
        path: ''
        startLine: 29772
      summary: "\nReset the randomness and start again. You usually don&apos;t need to call\nthis, deactivating/reactivating is usually fine but if you want a strict\nrestart you can do.\n"
      example: []
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: Global.LightFlickerEffect.Reset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.LocalPlayerData
    commentId: T:Global.LocalPlayerData
    language: CSharp
    name:
      CSharp: LocalPlayerData
      VB: LocalPlayerData
    nameWithType:
      CSharp: LocalPlayerData
      VB: LocalPlayerData
    qualifiedName:
      CSharp: LocalPlayerData
      VB: LocalPlayerData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LocalPlayerData
      path: ''
      startLine: 29815
    syntax:
      content:
        CSharp: public class LocalPlayerData
        VB: Public Class LocalPlayerData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.LocalPlayerData.localPlayerNetId
      commentId: F:Global.LocalPlayerData.localPlayerNetId
      language: CSharp
      name:
        CSharp: localPlayerNetId
        VB: localPlayerNetId
      nameWithType:
        CSharp: LocalPlayerData.localPlayerNetId
        VB: LocalPlayerData.localPlayerNetId
      qualifiedName:
        CSharp: LocalPlayerData.localPlayerNetId
        VB: LocalPlayerData.localPlayerNetId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: localPlayerNetId
        path: ''
        startLine: 29818
      syntax:
        content:
          CSharp: public ulong localPlayerNetId
          VB: Public localPlayerNetId As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.playerName
      commentId: F:Global.LocalPlayerData.playerName
      language: CSharp
      name:
        CSharp: playerName
        VB: playerName
      nameWithType:
        CSharp: LocalPlayerData.playerName
        VB: LocalPlayerData.playerName
      qualifiedName:
        CSharp: LocalPlayerData.playerName
        VB: LocalPlayerData.playerName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playerName
        path: ''
        startLine: 29819
      syntax:
        content:
          CSharp: public string playerName
          VB: Public playerName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.playfabId
      commentId: F:Global.LocalPlayerData.playfabId
      language: CSharp
      name:
        CSharp: playfabId
        VB: playfabId
      nameWithType:
        CSharp: LocalPlayerData.playfabId
        VB: LocalPlayerData.playfabId
      qualifiedName:
        CSharp: LocalPlayerData.playfabId
        VB: LocalPlayerData.playfabId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playfabId
        path: ''
        startLine: 29820
      syntax:
        content:
          CSharp: public string playfabId
          VB: Public playfabId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.entityId
      commentId: F:Global.LocalPlayerData.entityId
      language: CSharp
      name:
        CSharp: entityId
        VB: entityId
      nameWithType:
        CSharp: LocalPlayerData.entityId
        VB: LocalPlayerData.entityId
      qualifiedName:
        CSharp: LocalPlayerData.entityId
        VB: LocalPlayerData.entityId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: entityId
        path: ''
        startLine: 29821
      syntax:
        content:
          CSharp: public string entityId
          VB: Public entityId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.entityType
      commentId: F:Global.LocalPlayerData.entityType
      language: CSharp
      name:
        CSharp: entityType
        VB: entityType
      nameWithType:
        CSharp: LocalPlayerData.entityType
        VB: LocalPlayerData.entityType
      qualifiedName:
        CSharp: LocalPlayerData.entityType
        VB: LocalPlayerData.entityType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: entityType
        path: ''
        startLine: 29822
      syntax:
        content:
          CSharp: public string entityType
          VB: Public entityType As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.ShinseiCompanion
      commentId: F:Global.LocalPlayerData.ShinseiCompanion
      language: CSharp
      name:
        CSharp: ShinseiCompanion
        VB: ShinseiCompanion
      nameWithType:
        CSharp: LocalPlayerData.ShinseiCompanion
        VB: LocalPlayerData.ShinseiCompanion
      qualifiedName:
        CSharp: LocalPlayerData.ShinseiCompanion
        VB: LocalPlayerData.ShinseiCompanion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShinseiCompanion
        path: ''
        startLine: 29824
      syntax:
        content:
          CSharp: public Shinsei ShinseiCompanion
          VB: Public ShinseiCompanion As Shinsei
        return:
          type: Global.Shinsei
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.ShinseiParty
      commentId: F:Global.LocalPlayerData.ShinseiParty
      language: CSharp
      name:
        CSharp: ShinseiParty
        VB: ShinseiParty
      nameWithType:
        CSharp: LocalPlayerData.ShinseiParty
        VB: LocalPlayerData.ShinseiParty
      qualifiedName:
        CSharp: LocalPlayerData.ShinseiParty
        VB: LocalPlayerData.ShinseiParty
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShinseiParty
        path: ''
        startLine: 29825
      syntax:
        content:
          CSharp: public List<Shinsei> ShinseiParty
          VB: Public ShinseiParty As List(Of Shinsei)
        return:
          type: System.Collections.Generic.List{Shinsei}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.ShinseiVault
      commentId: F:Global.LocalPlayerData.ShinseiVault
      language: CSharp
      name:
        CSharp: ShinseiVault
        VB: ShinseiVault
      nameWithType:
        CSharp: LocalPlayerData.ShinseiVault
        VB: LocalPlayerData.ShinseiVault
      qualifiedName:
        CSharp: LocalPlayerData.ShinseiVault
        VB: LocalPlayerData.ShinseiVault
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShinseiVault
        path: ''
        startLine: 29826
      syntax:
        content:
          CSharp: public ShinseiVault ShinseiVault
          VB: Public ShinseiVault As ShinseiVault
        return:
          type: Global.ShinseiVault
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.Deck
      commentId: F:Global.LocalPlayerData.Deck
      language: CSharp
      name:
        CSharp: Deck
        VB: Deck
      nameWithType:
        CSharp: LocalPlayerData.Deck
        VB: LocalPlayerData.Deck
      qualifiedName:
        CSharp: LocalPlayerData.Deck
        VB: LocalPlayerData.Deck
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Deck
        path: ''
        startLine: 29827
      syntax:
        content:
          CSharp: public Deck Deck
          VB: Public Deck As Deck
        return:
          type: Global.Deck
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.currentChatMessages
      commentId: F:Global.LocalPlayerData.currentChatMessages
      language: CSharp
      name:
        CSharp: currentChatMessages
        VB: currentChatMessages
      nameWithType:
        CSharp: LocalPlayerData.currentChatMessages
        VB: LocalPlayerData.currentChatMessages
      qualifiedName:
        CSharp: LocalPlayerData.currentChatMessages
        VB: LocalPlayerData.currentChatMessages
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentChatMessages
        path: ''
        startLine: 29828
      syntax:
        content:
          CSharp: public List<ChatMessagePayload> currentChatMessages
          VB: Public currentChatMessages As List(Of ChatMessagePayload)
        return:
          type: System.Collections.Generic.List{ChatMessagePayload}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.currentCharacterStyle
      commentId: F:Global.LocalPlayerData.currentCharacterStyle
      language: CSharp
      name:
        CSharp: currentCharacterStyle
        VB: currentCharacterStyle
      nameWithType:
        CSharp: LocalPlayerData.currentCharacterStyle
        VB: LocalPlayerData.currentCharacterStyle
      qualifiedName:
        CSharp: LocalPlayerData.currentCharacterStyle
        VB: LocalPlayerData.currentCharacterStyle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentCharacterStyle
        path: ''
        startLine: 29829
      syntax:
        content:
          CSharp: public Dictionary<PartsOfCharacter, CharacterStyleInfo> currentCharacterStyle
          VB: Public currentCharacterStyle As Dictionary(Of PartsOfCharacter, CharacterStyleInfo)
        return:
          type: System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.unlockedStyles
      commentId: F:Global.LocalPlayerData.unlockedStyles
      language: CSharp
      name:
        CSharp: unlockedStyles
        VB: unlockedStyles
      nameWithType:
        CSharp: LocalPlayerData.unlockedStyles
        VB: LocalPlayerData.unlockedStyles
      qualifiedName:
        CSharp: LocalPlayerData.unlockedStyles
        VB: LocalPlayerData.unlockedStyles
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: unlockedStyles
        path: ''
        startLine: 29830
      syntax:
        content:
          CSharp: public Dictionary<PartsOfCharacter, UnlockedCharacterStyleInfo> unlockedStyles
          VB: Public unlockedStyles As Dictionary(Of PartsOfCharacter, UnlockedCharacterStyleInfo)
        return:
          type: System.Collections.Generic.Dictionary{PartsOfCharacter,UnlockedCharacterStyleInfo}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.challengedPlayer
      commentId: F:Global.LocalPlayerData.challengedPlayer
      language: CSharp
      name:
        CSharp: challengedPlayer
        VB: challengedPlayer
      nameWithType:
        CSharp: LocalPlayerData.challengedPlayer
        VB: LocalPlayerData.challengedPlayer
      qualifiedName:
        CSharp: LocalPlayerData.challengedPlayer
        VB: LocalPlayerData.challengedPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: challengedPlayer
        path: ''
        startLine: 29831
      syntax:
        content:
          CSharp: public string challengedPlayer
          VB: Public challengedPlayer As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.characterState
      commentId: F:Global.LocalPlayerData.characterState
      language: CSharp
      name:
        CSharp: characterState
        VB: characterState
      nameWithType:
        CSharp: LocalPlayerData.characterState
        VB: LocalPlayerData.characterState
      qualifiedName:
        CSharp: LocalPlayerData.characterState
        VB: LocalPlayerData.characterState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: characterState
        path: ''
        startLine: 29833
      syntax:
        content:
          CSharp: public CharacterStateEnum characterState
          VB: Public characterState As CharacterStateEnum
        return:
          type: Global.CharacterStateEnum
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.currentMatchId
      commentId: F:Global.LocalPlayerData.currentMatchId
      language: CSharp
      name:
        CSharp: currentMatchId
        VB: currentMatchId
      nameWithType:
        CSharp: LocalPlayerData.currentMatchId
        VB: LocalPlayerData.currentMatchId
      qualifiedName:
        CSharp: LocalPlayerData.currentMatchId
        VB: LocalPlayerData.currentMatchId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentMatchId
        path: ''
        startLine: 29834
      syntax:
        content:
          CSharp: public string currentMatchId
          VB: Public currentMatchId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.onPartyChange
      commentId: F:Global.LocalPlayerData.onPartyChange
      language: CSharp
      name:
        CSharp: onPartyChange
        VB: onPartyChange
      nameWithType:
        CSharp: LocalPlayerData.onPartyChange
        VB: LocalPlayerData.onPartyChange
      qualifiedName:
        CSharp: LocalPlayerData.onPartyChange
        VB: LocalPlayerData.onPartyChange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: onPartyChange
        path: ''
        startLine: 29836
      syntax:
        content:
          CSharp: public Action onPartyChange
          VB: Public onPartyChange As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.CastCompressedStyleToDictionary(System.String)
      commentId: M:Global.LocalPlayerData.CastCompressedStyleToDictionary(System.String)
      language: CSharp
      name:
        CSharp: CastCompressedStyleToDictionary(String)
        VB: CastCompressedStyleToDictionary(String)
      nameWithType:
        CSharp: LocalPlayerData.CastCompressedStyleToDictionary(String)
        VB: LocalPlayerData.CastCompressedStyleToDictionary(String)
      qualifiedName:
        CSharp: LocalPlayerData.CastCompressedStyleToDictionary(System.String)
        VB: LocalPlayerData.CastCompressedStyleToDictionary(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CastCompressedStyleToDictionary
        path: ''
        startLine: 29838
      syntax:
        content:
          CSharp: public Dictionary<PartsOfCharacter, CharacterStyleInfo> CastCompressedStyleToDictionary(string compressedStyle)
          VB: Public Function CastCompressedStyleToDictionary(compressedStyle As String) As Dictionary(Of PartsOfCharacter, CharacterStyleInfo)
        parameters:
        - id: compressedStyle
          type: System.String
        return:
          type: System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo}
      overload: Global.LocalPlayerData.CastCompressedStyleToDictionary*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LocalPlayerData.CastDictionaryToCompressedStyle
      commentId: M:Global.LocalPlayerData.CastDictionaryToCompressedStyle
      language: CSharp
      name:
        CSharp: CastDictionaryToCompressedStyle()
        VB: CastDictionaryToCompressedStyle()
      nameWithType:
        CSharp: LocalPlayerData.CastDictionaryToCompressedStyle()
        VB: LocalPlayerData.CastDictionaryToCompressedStyle()
      qualifiedName:
        CSharp: LocalPlayerData.CastDictionaryToCompressedStyle()
        VB: LocalPlayerData.CastDictionaryToCompressedStyle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CastDictionaryToCompressedStyle
        path: ''
        startLine: 29854
      syntax:
        content:
          CSharp: public string CastDictionaryToCompressedStyle()
          VB: Public Function CastDictionaryToCompressedStyle As String
        return:
          type: System.String
      overload: Global.LocalPlayerData.CastDictionaryToCompressedStyle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.UnlockedCharacterStyleInfo
    commentId: T:Global.UnlockedCharacterStyleInfo
    language: CSharp
    name:
      CSharp: UnlockedCharacterStyleInfo
      VB: UnlockedCharacterStyleInfo
    nameWithType:
      CSharp: UnlockedCharacterStyleInfo
      VB: UnlockedCharacterStyleInfo
    qualifiedName:
      CSharp: UnlockedCharacterStyleInfo
      VB: UnlockedCharacterStyleInfo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UnlockedCharacterStyleInfo
      path: ''
      startLine: 29870
    syntax:
      content:
        CSharp: public class UnlockedCharacterStyleInfo
        VB: Public Class UnlockedCharacterStyleInfo
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.UnlockedCharacterStyleInfo.unlockedColors
      commentId: F:Global.UnlockedCharacterStyleInfo.unlockedColors
      language: CSharp
      name:
        CSharp: unlockedColors
        VB: unlockedColors
      nameWithType:
        CSharp: UnlockedCharacterStyleInfo.unlockedColors
        VB: UnlockedCharacterStyleInfo.unlockedColors
      qualifiedName:
        CSharp: UnlockedCharacterStyleInfo.unlockedColors
        VB: UnlockedCharacterStyleInfo.unlockedColors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: unlockedColors
        path: ''
        startLine: 29873
      syntax:
        content:
          CSharp: public List<int> unlockedColors
          VB: Public unlockedColors As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.UnlockedCharacterStyleInfo.unlockedParts
      commentId: F:Global.UnlockedCharacterStyleInfo.unlockedParts
      language: CSharp
      name:
        CSharp: unlockedParts
        VB: unlockedParts
      nameWithType:
        CSharp: UnlockedCharacterStyleInfo.unlockedParts
        VB: UnlockedCharacterStyleInfo.unlockedParts
      qualifiedName:
        CSharp: UnlockedCharacterStyleInfo.unlockedParts
        VB: UnlockedCharacterStyleInfo.unlockedParts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: unlockedParts
        path: ''
        startLine: 29874
      syntax:
        content:
          CSharp: public List<int> unlockedParts
          VB: Public unlockedParts As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.LookAtAxis
    commentId: T:Global.LookAtAxis
    language: CSharp
    name:
      CSharp: LookAtAxis
      VB: LookAtAxis
    nameWithType:
      CSharp: LookAtAxis
      VB: LookAtAxis
    qualifiedName:
      CSharp: LookAtAxis
      VB: LookAtAxis
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LookAtAxis
      path: ''
      startLine: 29881
    syntax:
      content:
        CSharp: 'public class LookAtAxis : MonoBehaviour'
        VB: >-
          Public Class LookAtAxis

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.MaterialOffset
    commentId: T:Global.MaterialOffset
    language: CSharp
    name:
      CSharp: MaterialOffset
      VB: MaterialOffset
    nameWithType:
      CSharp: MaterialOffset
      VB: MaterialOffset
    qualifiedName:
      CSharp: MaterialOffset
      VB: MaterialOffset
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: MaterialOffset
      path: ''
      startLine: 29895
    syntax:
      content:
        CSharp: 'public class MaterialOffset : MonoBehaviour'
        VB: >-
          Public Class MaterialOffset

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.PlayerDataManager
    commentId: T:Global.PlayerDataManager
    language: CSharp
    name:
      CSharp: PlayerDataManager
      VB: PlayerDataManager
    nameWithType:
      CSharp: PlayerDataManager
      VB: PlayerDataManager
    qualifiedName:
      CSharp: PlayerDataManager
      VB: PlayerDataManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayerDataManager
      path: ''
      startLine: 29932
    syntax:
      content:
        CSharp: 'public class PlayerDataManager : MonoBehaviour'
        VB: >-
          Public Class PlayerDataManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayerDataManager.localPlayerData
      commentId: F:Global.PlayerDataManager.localPlayerData
      language: CSharp
      name:
        CSharp: localPlayerData
        VB: localPlayerData
      nameWithType:
        CSharp: PlayerDataManager.localPlayerData
        VB: PlayerDataManager.localPlayerData
      qualifiedName:
        CSharp: PlayerDataManager.localPlayerData
        VB: PlayerDataManager.localPlayerData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: localPlayerData
        path: ''
        startLine: 29935
      syntax:
        content:
          CSharp: public LocalPlayerData localPlayerData
          VB: Public localPlayerData As LocalPlayerData
        return:
          type: Global.LocalPlayerData
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.localPlayerGameObject
      commentId: F:Global.PlayerDataManager.localPlayerGameObject
      language: CSharp
      name:
        CSharp: localPlayerGameObject
        VB: localPlayerGameObject
      nameWithType:
        CSharp: PlayerDataManager.localPlayerGameObject
        VB: PlayerDataManager.localPlayerGameObject
      qualifiedName:
        CSharp: PlayerDataManager.localPlayerGameObject
        VB: PlayerDataManager.localPlayerGameObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: localPlayerGameObject
        path: ''
        startLine: 29936
      syntax:
        content:
          CSharp: public GameObject localPlayerGameObject
          VB: Public localPlayerGameObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.isFrenchKeyboardLayout
      commentId: F:Global.PlayerDataManager.isFrenchKeyboardLayout
      language: CSharp
      name:
        CSharp: isFrenchKeyboardLayout
        VB: isFrenchKeyboardLayout
      nameWithType:
        CSharp: PlayerDataManager.isFrenchKeyboardLayout
        VB: PlayerDataManager.isFrenchKeyboardLayout
      qualifiedName:
        CSharp: PlayerDataManager.isFrenchKeyboardLayout
        VB: PlayerDataManager.isFrenchKeyboardLayout
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isFrenchKeyboardLayout
        path: ''
        startLine: 29937
      syntax:
        content:
          CSharp: public bool isFrenchKeyboardLayout
          VB: Public isFrenchKeyboardLayout As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.Singleton
      commentId: F:Global.PlayerDataManager.Singleton
      language: CSharp
      name:
        CSharp: Singleton
        VB: Singleton
      nameWithType:
        CSharp: PlayerDataManager.Singleton
        VB: PlayerDataManager.Singleton
      qualifiedName:
        CSharp: PlayerDataManager.Singleton
        VB: PlayerDataManager.Singleton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Singleton
        path: ''
        startLine: 29938
      syntax:
        content:
          CSharp: public static PlayerDataManager Singleton
          VB: Public Shared Singleton As PlayerDataManager
        return:
          type: Global.PlayerDataManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.PlayerDataManager.characterStyleController
      commentId: F:Global.PlayerDataManager.characterStyleController
      language: CSharp
      name:
        CSharp: characterStyleController
        VB: characterStyleController
      nameWithType:
        CSharp: PlayerDataManager.characterStyleController
        VB: PlayerDataManager.characterStyleController
      qualifiedName:
        CSharp: PlayerDataManager.characterStyleController
        VB: PlayerDataManager.characterStyleController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: characterStyleController
        path: ''
        startLine: 29940
      syntax:
        content:
          CSharp: public CharacterStyleController characterStyleController
          VB: Public characterStyleController As CharacterStyleController
        return:
          type: Global.CharacterStyleController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.cardToTest
      commentId: F:Global.PlayerDataManager.cardToTest
      language: CSharp
      name:
        CSharp: cardToTest
        VB: cardToTest
      nameWithType:
        CSharp: PlayerDataManager.cardToTest
        VB: PlayerDataManager.cardToTest
      qualifiedName:
        CSharp: PlayerDataManager.cardToTest
        VB: PlayerDataManager.cardToTest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: cardToTest
        path: ''
        startLine: 29948
      syntax:
        content:
          CSharp: public List<int> cardToTest
          VB: Public cardToTest As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.playerDataReady
      commentId: F:Global.PlayerDataManager.playerDataReady
      language: CSharp
      name:
        CSharp: playerDataReady
        VB: playerDataReady
      nameWithType:
        CSharp: PlayerDataManager.playerDataReady
        VB: PlayerDataManager.playerDataReady
      qualifiedName:
        CSharp: PlayerDataManager.playerDataReady
        VB: PlayerDataManager.playerDataReady
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playerDataReady
        path: ''
        startLine: 29952
      syntax:
        content:
          CSharp: public Action playerDataReady
          VB: Public playerDataReady As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.OnDataObtained
      commentId: E:Global.PlayerDataManager.OnDataObtained
      language: CSharp
      name:
        CSharp: OnDataObtained
        VB: OnDataObtained
      nameWithType:
        CSharp: PlayerDataManager.OnDataObtained
        VB: PlayerDataManager.OnDataObtained
      qualifiedName:
        CSharp: PlayerDataManager.OnDataObtained
        VB: PlayerDataManager.OnDataObtained
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnDataObtained
        path: ''
        startLine: 29953
      syntax:
        content:
          CSharp: public event Action OnDataObtained
          VB: Public Event OnDataObtained As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.endGamePoint
      commentId: F:Global.PlayerDataManager.endGamePoint
      language: CSharp
      name:
        CSharp: endGamePoint
        VB: endGamePoint
      nameWithType:
        CSharp: PlayerDataManager.endGamePoint
        VB: PlayerDataManager.endGamePoint
      qualifiedName:
        CSharp: PlayerDataManager.endGamePoint
        VB: PlayerDataManager.endGamePoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: endGamePoint
        path: ''
        startLine: 29955
      syntax:
        content:
          CSharp: public Transform endGamePoint
          VB: Public endGamePoint As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.currentTournamentId
      commentId: F:Global.PlayerDataManager.currentTournamentId
      language: CSharp
      name:
        CSharp: currentTournamentId
        VB: currentTournamentId
      nameWithType:
        CSharp: PlayerDataManager.currentTournamentId
        VB: PlayerDataManager.currentTournamentId
      qualifiedName:
        CSharp: PlayerDataManager.currentTournamentId
        VB: PlayerDataManager.currentTournamentId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentTournamentId
        path: ''
        startLine: 29956
      syntax:
        content:
          CSharp: public string currentTournamentId
          VB: Public currentTournamentId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.currentTournamentStage
      commentId: F:Global.PlayerDataManager.currentTournamentStage
      language: CSharp
      name:
        CSharp: currentTournamentStage
        VB: currentTournamentStage
      nameWithType:
        CSharp: PlayerDataManager.currentTournamentStage
        VB: PlayerDataManager.currentTournamentStage
      qualifiedName:
        CSharp: PlayerDataManager.currentTournamentStage
        VB: PlayerDataManager.currentTournamentStage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: currentTournamentStage
        path: ''
        startLine: 29957
      syntax:
        content:
          CSharp: public int currentTournamentStage
          VB: Public currentTournamentStage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.isOnTheTournament
      commentId: F:Global.PlayerDataManager.isOnTheTournament
      language: CSharp
      name:
        CSharp: isOnTheTournament
        VB: isOnTheTournament
      nameWithType:
        CSharp: PlayerDataManager.isOnTheTournament
        VB: PlayerDataManager.isOnTheTournament
      qualifiedName:
        CSharp: PlayerDataManager.isOnTheTournament
        VB: PlayerDataManager.isOnTheTournament
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isOnTheTournament
        path: ''
        startLine: 29958
      syntax:
        content:
          CSharp: public bool isOnTheTournament
          VB: Public isOnTheTournament As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.isBot
      commentId: F:Global.PlayerDataManager.isBot
      language: CSharp
      name:
        CSharp: isBot
        VB: isBot
      nameWithType:
        CSharp: PlayerDataManager.isBot
        VB: PlayerDataManager.isBot
      qualifiedName:
        CSharp: PlayerDataManager.isBot
        VB: PlayerDataManager.isBot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isBot
        path: ''
        startLine: 29961
      syntax:
        content:
          CSharp: public bool isBot
          VB: Public isBot As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.numberOfBots
      commentId: F:Global.PlayerDataManager.numberOfBots
      language: CSharp
      name:
        CSharp: numberOfBots
        VB: numberOfBots
      nameWithType:
        CSharp: PlayerDataManager.numberOfBots
        VB: PlayerDataManager.numberOfBots
      qualifiedName:
        CSharp: PlayerDataManager.numberOfBots
        VB: PlayerDataManager.numberOfBots
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: numberOfBots
        path: ''
        startLine: 29962
      syntax:
        content:
          CSharp: public int numberOfBots
          VB: Public numberOfBots As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.isBotCreatorOfTournaments
      commentId: F:Global.PlayerDataManager.isBotCreatorOfTournaments
      language: CSharp
      name:
        CSharp: isBotCreatorOfTournaments
        VB: isBotCreatorOfTournaments
      nameWithType:
        CSharp: PlayerDataManager.isBotCreatorOfTournaments
        VB: PlayerDataManager.isBotCreatorOfTournaments
      qualifiedName:
        CSharp: PlayerDataManager.isBotCreatorOfTournaments
        VB: PlayerDataManager.isBotCreatorOfTournaments
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isBotCreatorOfTournaments
        path: ''
        startLine: 29963
      syntax:
        content:
          CSharp: public bool isBotCreatorOfTournaments
          VB: Public isBotCreatorOfTournaments As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.botChallengeId
      commentId: F:Global.PlayerDataManager.botChallengeId
      language: CSharp
      name:
        CSharp: botChallengeId
        VB: botChallengeId
      nameWithType:
        CSharp: PlayerDataManager.botChallengeId
        VB: PlayerDataManager.botChallengeId
      qualifiedName:
        CSharp: PlayerDataManager.botChallengeId
        VB: PlayerDataManager.botChallengeId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: botChallengeId
        path: ''
        startLine: 29964
      syntax:
        content:
          CSharp: public string botChallengeId
          VB: Public botChallengeId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.InitPlayerData(LoginResult)
      commentId: M:Global.PlayerDataManager.InitPlayerData(LoginResult)
      language: CSharp
      name:
        CSharp: InitPlayerData(LoginResult)
        VB: InitPlayerData(LoginResult)
      nameWithType:
        CSharp: PlayerDataManager.InitPlayerData(LoginResult)
        VB: PlayerDataManager.InitPlayerData(LoginResult)
      qualifiedName:
        CSharp: PlayerDataManager.InitPlayerData(LoginResult)
        VB: PlayerDataManager.InitPlayerData(LoginResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitPlayerData
        path: ''
        startLine: 29997
      summary: "\nCreate NewlyPlayerData\n"
      example: []
      syntax:
        content:
          CSharp: public void InitPlayerData(LoginResult loginResult)
          VB: Public Sub InitPlayerData(loginResult As LoginResult)
        parameters:
        - id: loginResult
          type: Global.LoginResult
          description: ''
      overload: Global.PlayerDataManager.InitPlayerData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.GetShinseis(GetUserDataResult)
      commentId: M:Global.PlayerDataManager.GetShinseis(GetUserDataResult)
      language: CSharp
      name:
        CSharp: GetShinseis(GetUserDataResult)
        VB: GetShinseis(GetUserDataResult)
      nameWithType:
        CSharp: PlayerDataManager.GetShinseis(GetUserDataResult)
        VB: PlayerDataManager.GetShinseis(GetUserDataResult)
      qualifiedName:
        CSharp: PlayerDataManager.GetShinseis(GetUserDataResult)
        VB: PlayerDataManager.GetShinseis(GetUserDataResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetShinseis
        path: ''
        startLine: 30036
      syntax:
        content:
          CSharp: public void GetShinseis(GetUserDataResult getUserDataResult)
          VB: Public Sub GetShinseis(getUserDataResult As GetUserDataResult)
        parameters:
        - id: getUserDataResult
          type: Global.GetUserDataResult
      overload: Global.PlayerDataManager.GetShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.FillPlayerData
      commentId: M:Global.PlayerDataManager.FillPlayerData
      language: CSharp
      name:
        CSharp: FillPlayerData()
        VB: FillPlayerData()
      nameWithType:
        CSharp: PlayerDataManager.FillPlayerData()
        VB: PlayerDataManager.FillPlayerData()
      qualifiedName:
        CSharp: PlayerDataManager.FillPlayerData()
        VB: PlayerDataManager.FillPlayerData()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FillPlayerData
        path: ''
        startLine: 30062
      syntax:
        content:
          CSharp: public Dictionary<string, string> FillPlayerData()
          VB: Public Function FillPlayerData As Dictionary(Of String, String)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Global.PlayerDataManager.FillPlayerData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.ButtonChangeShinseis
      commentId: M:Global.PlayerDataManager.ButtonChangeShinseis
      language: CSharp
      name:
        CSharp: ButtonChangeShinseis()
        VB: ButtonChangeShinseis()
      nameWithType:
        CSharp: PlayerDataManager.ButtonChangeShinseis()
        VB: PlayerDataManager.ButtonChangeShinseis()
      qualifiedName:
        CSharp: PlayerDataManager.ButtonChangeShinseis()
        VB: PlayerDataManager.ButtonChangeShinseis()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ButtonChangeShinseis
        path: ''
        startLine: 30073
      syntax:
        content:
          CSharp: public void ButtonChangeShinseis()
          VB: Public Sub ButtonChangeShinseis
      overload: Global.PlayerDataManager.ButtonChangeShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.FillShinseiData
      commentId: M:Global.PlayerDataManager.FillShinseiData
      language: CSharp
      name:
        CSharp: FillShinseiData()
        VB: FillShinseiData()
      nameWithType:
        CSharp: PlayerDataManager.FillShinseiData()
        VB: PlayerDataManager.FillShinseiData()
      qualifiedName:
        CSharp: PlayerDataManager.FillShinseiData()
        VB: PlayerDataManager.FillShinseiData()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FillShinseiData
        path: ''
        startLine: 30089
      syntax:
        content:
          CSharp: public Dictionary<string, string> FillShinseiData()
          VB: Public Function FillShinseiData As Dictionary(Of String, String)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Global.PlayerDataManager.FillShinseiData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.UpdateCharacterStyleForAnyReason
      commentId: M:Global.PlayerDataManager.UpdateCharacterStyleForAnyReason
      language: CSharp
      name:
        CSharp: UpdateCharacterStyleForAnyReason()
        VB: UpdateCharacterStyleForAnyReason()
      nameWithType:
        CSharp: PlayerDataManager.UpdateCharacterStyleForAnyReason()
        VB: PlayerDataManager.UpdateCharacterStyleForAnyReason()
      qualifiedName:
        CSharp: PlayerDataManager.UpdateCharacterStyleForAnyReason()
        VB: PlayerDataManager.UpdateCharacterStyleForAnyReason()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateCharacterStyleForAnyReason
        path: ''
        startLine: 30098
      syntax:
        content:
          CSharp: public void UpdateCharacterStyleForAnyReason()
          VB: Public Sub UpdateCharacterStyleForAnyReason
      overload: Global.PlayerDataManager.UpdateCharacterStyleForAnyReason*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.CharacterStyleFill(System.Collections.Generic.Dictionary{System.String,System.String})
      commentId: M:Global.PlayerDataManager.CharacterStyleFill(System.Collections.Generic.Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: CharacterStyleFill(Dictionary<String, String>)
        VB: CharacterStyleFill(Dictionary(Of String, String))
      nameWithType:
        CSharp: PlayerDataManager.CharacterStyleFill(Dictionary<String, String>)
        VB: PlayerDataManager.CharacterStyleFill(Dictionary(Of String, String))
      qualifiedName:
        CSharp: PlayerDataManager.CharacterStyleFill(System.Collections.Generic.Dictionary<System.String, System.String>)
        VB: PlayerDataManager.CharacterStyleFill(System.Collections.Generic.Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CharacterStyleFill
        path: ''
        startLine: 30106
      syntax:
        content:
          CSharp: public void CharacterStyleFill(Dictionary<string, string> data = null)
          VB: Public Sub CharacterStyleFill(data As Dictionary(Of String, String) = Nothing)
        parameters:
        - id: data
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Global.PlayerDataManager.CharacterStyleFill*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.CardManagerFill(System.Collections.Generic.Dictionary{System.String,System.String})
      commentId: M:Global.PlayerDataManager.CardManagerFill(System.Collections.Generic.Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: CardManagerFill(Dictionary<String, String>)
        VB: CardManagerFill(Dictionary(Of String, String))
      nameWithType:
        CSharp: PlayerDataManager.CardManagerFill(Dictionary<String, String>)
        VB: PlayerDataManager.CardManagerFill(Dictionary(Of String, String))
      qualifiedName:
        CSharp: PlayerDataManager.CardManagerFill(System.Collections.Generic.Dictionary<System.String, System.String>)
        VB: PlayerDataManager.CardManagerFill(System.Collections.Generic.Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CardManagerFill
        path: ''
        startLine: 30113
      syntax:
        content:
          CSharp: public void CardManagerFill(Dictionary<string, string> data)
          VB: Public Sub CardManagerFill(data As Dictionary(Of String, String))
        parameters:
        - id: data
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Global.PlayerDataManager.CardManagerFill*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.PlayerShinseisFill(System.Collections.Generic.Dictionary{System.String,System.String})
      commentId: M:Global.PlayerDataManager.PlayerShinseisFill(System.Collections.Generic.Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: PlayerShinseisFill(Dictionary<String, String>)
        VB: PlayerShinseisFill(Dictionary(Of String, String))
      nameWithType:
        CSharp: PlayerDataManager.PlayerShinseisFill(Dictionary<String, String>)
        VB: PlayerDataManager.PlayerShinseisFill(Dictionary(Of String, String))
      qualifiedName:
        CSharp: PlayerDataManager.PlayerShinseisFill(System.Collections.Generic.Dictionary<System.String, System.String>)
        VB: PlayerDataManager.PlayerShinseisFill(System.Collections.Generic.Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PlayerShinseisFill
        path: ''
        startLine: 30127
      syntax:
        content:
          CSharp: public void PlayerShinseisFill(Dictionary<string, string> data)
          VB: Public Sub PlayerShinseisFill(data As Dictionary(Of String, String))
        parameters:
        - id: data
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Global.PlayerDataManager.PlayerShinseisFill*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.SetLocalPlayerId(System.UInt64)
      commentId: M:Global.PlayerDataManager.SetLocalPlayerId(System.UInt64)
      language: CSharp
      name:
        CSharp: SetLocalPlayerId(UInt64)
        VB: SetLocalPlayerId(UInt64)
      nameWithType:
        CSharp: PlayerDataManager.SetLocalPlayerId(UInt64)
        VB: PlayerDataManager.SetLocalPlayerId(UInt64)
      qualifiedName:
        CSharp: PlayerDataManager.SetLocalPlayerId(System.UInt64)
        VB: PlayerDataManager.SetLocalPlayerId(System.UInt64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetLocalPlayerId
        path: ''
        startLine: 30194
      syntax:
        content:
          CSharp: public void SetLocalPlayerId(ulong data)
          VB: Public Sub SetLocalPlayerId(data As ULong)
        parameters:
        - id: data
          type: System.UInt64
      overload: Global.PlayerDataManager.SetLocalPlayerId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.UpdatePlayerData
      commentId: M:Global.PlayerDataManager.UpdatePlayerData
      language: CSharp
      name:
        CSharp: UpdatePlayerData()
        VB: UpdatePlayerData()
      nameWithType:
        CSharp: PlayerDataManager.UpdatePlayerData()
        VB: PlayerDataManager.UpdatePlayerData()
      qualifiedName:
        CSharp: PlayerDataManager.UpdatePlayerData()
        VB: PlayerDataManager.UpdatePlayerData()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdatePlayerData
        path: ''
        startLine: 30215
      syntax:
        content:
          CSharp: public void UpdatePlayerData()
          VB: Public Sub UpdatePlayerData
      overload: Global.PlayerDataManager.UpdatePlayerData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayerDataManager.UpdatePlayerName(UpdateUserTitleDisplayNameResult)
      commentId: M:Global.PlayerDataManager.UpdatePlayerName(UpdateUserTitleDisplayNameResult)
      language: CSharp
      name:
        CSharp: UpdatePlayerName(UpdateUserTitleDisplayNameResult)
        VB: UpdatePlayerName(UpdateUserTitleDisplayNameResult)
      nameWithType:
        CSharp: PlayerDataManager.UpdatePlayerName(UpdateUserTitleDisplayNameResult)
        VB: PlayerDataManager.UpdatePlayerName(UpdateUserTitleDisplayNameResult)
      qualifiedName:
        CSharp: PlayerDataManager.UpdatePlayerName(UpdateUserTitleDisplayNameResult)
        VB: PlayerDataManager.UpdatePlayerName(UpdateUserTitleDisplayNameResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdatePlayerName
        path: ''
        startLine: 30232
      syntax:
        content:
          CSharp: public void UpdatePlayerName(UpdateUserTitleDisplayNameResult displayNameResult)
          VB: Public Sub UpdatePlayerName(displayNameResult As UpdateUserTitleDisplayNameResult)
        parameters:
        - id: displayNameResult
          type: Global.UpdateUserTitleDisplayNameResult
      overload: Global.PlayerDataManager.UpdatePlayerName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PlayfabManager
    commentId: T:Global.PlayfabManager
    language: CSharp
    name:
      CSharp: PlayfabManager
      VB: PlayfabManager
    nameWithType:
      CSharp: PlayfabManager
      VB: PlayfabManager
    qualifiedName:
      CSharp: PlayfabManager
      VB: PlayfabManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PlayfabManager
      path: ''
      startLine: 30258
    summary: "\nThis works as bridge with playfab, all client petitions pass first here\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlayfabManager : MonoBehaviour'
        VB: >-
          Public Class PlayfabManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PlayfabManager.Singleton
      commentId: F:Global.PlayfabManager.Singleton
      language: CSharp
      name:
        CSharp: Singleton
        VB: Singleton
      nameWithType:
        CSharp: PlayfabManager.Singleton
        VB: PlayfabManager.Singleton
      qualifiedName:
        CSharp: PlayfabManager.Singleton
        VB: PlayfabManager.Singleton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Singleton
        path: ''
        startLine: 30262
      syntax:
        content:
          CSharp: public static PlayfabManager Singleton
          VB: Public Shared Singleton As PlayfabManager
        return:
          type: Global.PlayfabManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.PlayfabManager.debugDataOnServerRequest
      commentId: F:Global.PlayfabManager.debugDataOnServerRequest
      language: CSharp
      name:
        CSharp: debugDataOnServerRequest
        VB: debugDataOnServerRequest
      nameWithType:
        CSharp: PlayfabManager.debugDataOnServerRequest
        VB: PlayfabManager.debugDataOnServerRequest
      qualifiedName:
        CSharp: PlayfabManager.debugDataOnServerRequest
        VB: PlayfabManager.debugDataOnServerRequest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: debugDataOnServerRequest
        path: ''
        startLine: 30266
      syntax:
        content:
          CSharp: public bool debugDataOnServerRequest
          VB: Public debugDataOnServerRequest As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnLoginSucces
      commentId: F:Global.PlayfabManager.OnLoginSucces
      language: CSharp
      name:
        CSharp: OnLoginSucces
        VB: OnLoginSucces
      nameWithType:
        CSharp: PlayfabManager.OnLoginSucces
        VB: PlayfabManager.OnLoginSucces
      qualifiedName:
        CSharp: PlayfabManager.OnLoginSucces
        VB: PlayfabManager.OnLoginSucces
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnLoginSucces
        path: ''
        startLine: 30270
      syntax:
        content:
          CSharp: public UnityEvent<LoginResult> OnLoginSucces
          VB: Public OnLoginSucces As UnityEvent(Of LoginResult)
        return:
          type: Global.UnityEvent{LoginResult}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnSuccess
      commentId: E:Global.PlayfabManager.OnSuccess
      language: CSharp
      name:
        CSharp: OnSuccess
        VB: OnSuccess
      nameWithType:
        CSharp: PlayfabManager.OnSuccess
        VB: PlayfabManager.OnSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnSuccess
        VB: PlayfabManager.OnSuccess
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSuccess
        path: ''
        startLine: 30271
      syntax:
        content:
          CSharp: public event Action<string> OnSuccess
          VB: Public Event OnSuccess As Action(Of String)
        return:
          type: Global.Action{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnSignupSuccess
      commentId: F:Global.PlayfabManager.OnSignupSuccess
      language: CSharp
      name:
        CSharp: OnSignupSuccess
        VB: OnSignupSuccess
      nameWithType:
        CSharp: PlayfabManager.OnSignupSuccess
        VB: PlayfabManager.OnSignupSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnSignupSuccess
        VB: PlayfabManager.OnSignupSuccess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSignupSuccess
        path: ''
        startLine: 30273
      syntax:
        content:
          CSharp: public UnityEvent<RegisterPlayFabUserResult> OnSignupSuccess
          VB: Public OnSignupSuccess As UnityEvent(Of RegisterPlayFabUserResult)
        return:
          type: Global.UnityEvent{RegisterPlayFabUserResult}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnLoginFailed
      commentId: F:Global.PlayfabManager.OnLoginFailed
      language: CSharp
      name:
        CSharp: OnLoginFailed
        VB: OnLoginFailed
      nameWithType:
        CSharp: PlayfabManager.OnLoginFailed
        VB: PlayfabManager.OnLoginFailed
      qualifiedName:
        CSharp: PlayfabManager.OnLoginFailed
        VB: PlayfabManager.OnLoginFailed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnLoginFailed
        path: ''
        startLine: 30274
      syntax:
        content:
          CSharp: public UnityEvent OnLoginFailed
          VB: Public OnLoginFailed As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnUpdateNameSuccess
      commentId: F:Global.PlayfabManager.OnUpdateNameSuccess
      language: CSharp
      name:
        CSharp: OnUpdateNameSuccess
        VB: OnUpdateNameSuccess
      nameWithType:
        CSharp: PlayfabManager.OnUpdateNameSuccess
        VB: PlayfabManager.OnUpdateNameSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnUpdateNameSuccess
        VB: PlayfabManager.OnUpdateNameSuccess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnUpdateNameSuccess
        path: ''
        startLine: 30276
      syntax:
        content:
          CSharp: public UnityEvent<UpdateUserTitleDisplayNameResult> OnUpdateNameSuccess
          VB: Public OnUpdateNameSuccess As UnityEvent(Of UpdateUserTitleDisplayNameResult)
        return:
          type: Global.UnityEvent{UpdateUserTitleDisplayNameResult}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnCreateTicketSuccess
      commentId: F:Global.PlayfabManager.OnCreateTicketSuccess
      language: CSharp
      name:
        CSharp: OnCreateTicketSuccess
        VB: OnCreateTicketSuccess
      nameWithType:
        CSharp: PlayfabManager.OnCreateTicketSuccess
        VB: PlayfabManager.OnCreateTicketSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnCreateTicketSuccess
        VB: PlayfabManager.OnCreateTicketSuccess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCreateTicketSuccess
        path: ''
        startLine: 30280
      syntax:
        content:
          CSharp: public UnityEvent<MultiplayerModels.CreateMatchmakingTicketResult> OnCreateTicketSuccess
          VB: Public OnCreateTicketSuccess As UnityEvent(Of MultiplayerModels.CreateMatchmakingTicketResult)
        return:
          type: Global.UnityEvent{MultiplayerModels.CreateMatchmakingTicketResult}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnCreateTicketFailed
      commentId: F:Global.PlayfabManager.OnCreateTicketFailed
      language: CSharp
      name:
        CSharp: OnCreateTicketFailed
        VB: OnCreateTicketFailed
      nameWithType:
        CSharp: PlayfabManager.OnCreateTicketFailed
        VB: PlayfabManager.OnCreateTicketFailed
      qualifiedName:
        CSharp: PlayfabManager.OnCreateTicketFailed
        VB: PlayfabManager.OnCreateTicketFailed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnCreateTicketFailed
        path: ''
        startLine: 30281
      syntax:
        content:
          CSharp: public UnityEvent OnCreateTicketFailed
          VB: Public OnCreateTicketFailed As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnTicketResultSuccess
      commentId: F:Global.PlayfabManager.OnTicketResultSuccess
      language: CSharp
      name:
        CSharp: OnTicketResultSuccess
        VB: OnTicketResultSuccess
      nameWithType:
        CSharp: PlayfabManager.OnTicketResultSuccess
        VB: PlayfabManager.OnTicketResultSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnTicketResultSuccess
        VB: PlayfabManager.OnTicketResultSuccess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTicketResultSuccess
        path: ''
        startLine: 30283
      syntax:
        content:
          CSharp: public UnityEvent<MultiplayerModels.GetMatchmakingTicketResult> OnTicketResultSuccess
          VB: Public OnTicketResultSuccess As UnityEvent(Of MultiplayerModels.GetMatchmakingTicketResult)
        return:
          type: Global.UnityEvent{MultiplayerModels.GetMatchmakingTicketResult}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnTicketResultFailed
      commentId: F:Global.PlayfabManager.OnTicketResultFailed
      language: CSharp
      name:
        CSharp: OnTicketResultFailed
        VB: OnTicketResultFailed
      nameWithType:
        CSharp: PlayfabManager.OnTicketResultFailed
        VB: PlayfabManager.OnTicketResultFailed
      qualifiedName:
        CSharp: PlayfabManager.OnTicketResultFailed
        VB: PlayfabManager.OnTicketResultFailed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnTicketResultFailed
        path: ''
        startLine: 30284
      syntax:
        content:
          CSharp: public UnityEvent OnTicketResultFailed
          VB: Public OnTicketResultFailed As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnMatchResultSuccess
      commentId: F:Global.PlayfabManager.OnMatchResultSuccess
      language: CSharp
      name:
        CSharp: OnMatchResultSuccess
        VB: OnMatchResultSuccess
      nameWithType:
        CSharp: PlayfabManager.OnMatchResultSuccess
        VB: PlayfabManager.OnMatchResultSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnMatchResultSuccess
        VB: PlayfabManager.OnMatchResultSuccess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnMatchResultSuccess
        path: ''
        startLine: 30286
      syntax:
        content:
          CSharp: public UnityEvent<MultiplayerModels.GetMatchResult> OnMatchResultSuccess
          VB: Public OnMatchResultSuccess As UnityEvent(Of MultiplayerModels.GetMatchResult)
        return:
          type: Global.UnityEvent{MultiplayerModels.GetMatchResult}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnMatchResultFailed
      commentId: F:Global.PlayfabManager.OnMatchResultFailed
      language: CSharp
      name:
        CSharp: OnMatchResultFailed
        VB: OnMatchResultFailed
      nameWithType:
        CSharp: PlayfabManager.OnMatchResultFailed
        VB: PlayfabManager.OnMatchResultFailed
      qualifiedName:
        CSharp: PlayfabManager.OnMatchResultFailed
        VB: PlayfabManager.OnMatchResultFailed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnMatchResultFailed
        path: ''
        startLine: 30287
      syntax:
        content:
          CSharp: public UnityEvent OnMatchResultFailed
          VB: Public OnMatchResultFailed As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnUserCurrencyGetSuccess
      commentId: F:Global.PlayfabManager.OnUserCurrencyGetSuccess
      language: CSharp
      name:
        CSharp: OnUserCurrencyGetSuccess
        VB: OnUserCurrencyGetSuccess
      nameWithType:
        CSharp: PlayfabManager.OnUserCurrencyGetSuccess
        VB: PlayfabManager.OnUserCurrencyGetSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnUserCurrencyGetSuccess
        VB: PlayfabManager.OnUserCurrencyGetSuccess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnUserCurrencyGetSuccess
        path: ''
        startLine: 30291
      syntax:
        content:
          CSharp: public UnityEvent<PlayFab.ClientModels.GetUserInventoryResult> OnUserCurrencyGetSuccess
          VB: Public OnUserCurrencyGetSuccess As UnityEvent(Of PlayFab.ClientModels.GetUserInventoryResult)
        return:
          type: Global.UnityEvent{PlayFab.ClientModels.GetUserInventoryResult}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnUserCurrencyGetFailed
      commentId: F:Global.PlayfabManager.OnUserCurrencyGetFailed
      language: CSharp
      name:
        CSharp: OnUserCurrencyGetFailed
        VB: OnUserCurrencyGetFailed
      nameWithType:
        CSharp: PlayfabManager.OnUserCurrencyGetFailed
        VB: PlayfabManager.OnUserCurrencyGetFailed
      qualifiedName:
        CSharp: PlayfabManager.OnUserCurrencyGetFailed
        VB: PlayfabManager.OnUserCurrencyGetFailed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnUserCurrencyGetFailed
        path: ''
        startLine: 30292
      syntax:
        content:
          CSharp: public UnityEvent OnUserCurrencyGetFailed
          VB: Public OnUserCurrencyGetFailed As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnGetCardsStoreSuccess
      commentId: F:Global.PlayfabManager.OnGetCardsStoreSuccess
      language: CSharp
      name:
        CSharp: OnGetCardsStoreSuccess
        VB: OnGetCardsStoreSuccess
      nameWithType:
        CSharp: PlayfabManager.OnGetCardsStoreSuccess
        VB: PlayfabManager.OnGetCardsStoreSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnGetCardsStoreSuccess
        VB: PlayfabManager.OnGetCardsStoreSuccess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGetCardsStoreSuccess
        path: ''
        startLine: 30294
      syntax:
        content:
          CSharp: public UnityEvent<PlayFab.ClientModels.GetCatalogItemsResult> OnGetCardsStoreSuccess
          VB: Public OnGetCardsStoreSuccess As UnityEvent(Of PlayFab.ClientModels.GetCatalogItemsResult)
        return:
          type: Global.UnityEvent{PlayFab.ClientModels.GetCatalogItemsResult}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnGetCardsStoreFailed
      commentId: F:Global.PlayfabManager.OnGetCardsStoreFailed
      language: CSharp
      name:
        CSharp: OnGetCardsStoreFailed
        VB: OnGetCardsStoreFailed
      nameWithType:
        CSharp: PlayfabManager.OnGetCardsStoreFailed
        VB: PlayfabManager.OnGetCardsStoreFailed
      qualifiedName:
        CSharp: PlayfabManager.OnGetCardsStoreFailed
        VB: PlayfabManager.OnGetCardsStoreFailed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGetCardsStoreFailed
        path: ''
        startLine: 30295
      syntax:
        content:
          CSharp: public UnityEvent OnGetCardsStoreFailed
          VB: Public OnGetCardsStoreFailed As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnPurchaseCardsSuccess
      commentId: F:Global.PlayfabManager.OnPurchaseCardsSuccess
      language: CSharp
      name:
        CSharp: OnPurchaseCardsSuccess
        VB: OnPurchaseCardsSuccess
      nameWithType:
        CSharp: PlayfabManager.OnPurchaseCardsSuccess
        VB: PlayfabManager.OnPurchaseCardsSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnPurchaseCardsSuccess
        VB: PlayfabManager.OnPurchaseCardsSuccess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPurchaseCardsSuccess
        path: ''
        startLine: 30297
      syntax:
        content:
          CSharp: public UnityEvent<PurchaseItemResult> OnPurchaseCardsSuccess
          VB: Public OnPurchaseCardsSuccess As UnityEvent(Of PurchaseItemResult)
        return:
          type: Global.UnityEvent{PurchaseItemResult}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnPurchaseCardsFailed
      commentId: F:Global.PlayfabManager.OnPurchaseCardsFailed
      language: CSharp
      name:
        CSharp: OnPurchaseCardsFailed
        VB: OnPurchaseCardsFailed
      nameWithType:
        CSharp: PlayfabManager.OnPurchaseCardsFailed
        VB: PlayfabManager.OnPurchaseCardsFailed
      qualifiedName:
        CSharp: PlayfabManager.OnPurchaseCardsFailed
        VB: PlayfabManager.OnPurchaseCardsFailed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPurchaseCardsFailed
        path: ''
        startLine: 30298
      syntax:
        content:
          CSharp: public UnityEvent<PlayFabError> OnPurchaseCardsFailed
          VB: Public OnPurchaseCardsFailed As UnityEvent(Of PlayFabError)
        return:
          type: Global.UnityEvent{PlayFabError}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnGetLeaderboardsArroundPlayerSuccess
      commentId: E:Global.PlayfabManager.OnGetLeaderboardsArroundPlayerSuccess
      language: CSharp
      name:
        CSharp: OnGetLeaderboardsArroundPlayerSuccess
        VB: OnGetLeaderboardsArroundPlayerSuccess
      nameWithType:
        CSharp: PlayfabManager.OnGetLeaderboardsArroundPlayerSuccess
        VB: PlayfabManager.OnGetLeaderboardsArroundPlayerSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnGetLeaderboardsArroundPlayerSuccess
        VB: PlayfabManager.OnGetLeaderboardsArroundPlayerSuccess
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGetLeaderboardsArroundPlayerSuccess
        path: ''
        startLine: 30302
      syntax:
        content:
          CSharp: public event Action<string> OnGetLeaderboardsArroundPlayerSuccess
          VB: Public Event OnGetLeaderboardsArroundPlayerSuccess As Action(Of String)
        return:
          type: Global.Action{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.OnGetLeaderboardsSuccess
      commentId: E:Global.PlayfabManager.OnGetLeaderboardsSuccess
      language: CSharp
      name:
        CSharp: OnGetLeaderboardsSuccess
        VB: OnGetLeaderboardsSuccess
      nameWithType:
        CSharp: PlayfabManager.OnGetLeaderboardsSuccess
        VB: PlayfabManager.OnGetLeaderboardsSuccess
      qualifiedName:
        CSharp: PlayfabManager.OnGetLeaderboardsSuccess
        VB: PlayfabManager.OnGetLeaderboardsSuccess
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnGetLeaderboardsSuccess
        path: ''
        startLine: 30303
      syntax:
        content:
          CSharp: public event Action<string> OnGetLeaderboardsSuccess
          VB: Public Event OnGetLeaderboardsSuccess As Action(Of String)
        return:
          type: Global.Action{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.SignUp(System.String,System.String,System.String,Action{PlayFabError})
      commentId: M:Global.PlayfabManager.SignUp(System.String,System.String,System.String,Action{PlayFabError})
      language: CSharp
      name:
        CSharp: SignUp(String, String, String, Action<PlayFabError>)
        VB: SignUp(String, String, String, Action(Of PlayFabError))
      nameWithType:
        CSharp: PlayfabManager.SignUp(String, String, String, Action<PlayFabError>)
        VB: PlayfabManager.SignUp(String, String, String, Action(Of PlayFabError))
      qualifiedName:
        CSharp: PlayfabManager.SignUp(System.String, System.String, System.String, Action<PlayFabError>)
        VB: PlayfabManager.SignUp(System.String, System.String, System.String, Action(Of PlayFabError))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SignUp
        path: ''
        startLine: 30334
      summary: "\nRegister with user email and password\n"
      example: []
      syntax:
        content:
          CSharp: public void SignUp(string userName, string userEmail, string password, Action<PlayFabError> errorCallback = null)
          VB: Public Sub SignUp(userName As String, userEmail As String, password As String, errorCallback As Action(Of PlayFabError) = Nothing)
        parameters:
        - id: userName
          type: System.String
          description: ''
        - id: userEmail
          type: System.String
          description: ''
        - id: password
          type: System.String
          description: ''
        - id: errorCallback
          type: Global.Action{PlayFabError}
          description: ''
      overload: Global.PlayfabManager.SignUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.Login(System.String,System.String,Action{PlayFabError},System.Boolean)
      commentId: M:Global.PlayfabManager.Login(System.String,System.String,Action{PlayFabError},System.Boolean)
      language: CSharp
      name:
        CSharp: Login(String, String, Action<PlayFabError>, Boolean)
        VB: Login(String, String, Action(Of PlayFabError), Boolean)
      nameWithType:
        CSharp: PlayfabManager.Login(String, String, Action<PlayFabError>, Boolean)
        VB: PlayfabManager.Login(String, String, Action(Of PlayFabError), Boolean)
      qualifiedName:
        CSharp: PlayfabManager.Login(System.String, System.String, Action<PlayFabError>, System.Boolean)
        VB: PlayfabManager.Login(System.String, System.String, Action(Of PlayFabError), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Login
        path: ''
        startLine: 30356
      syntax:
        content:
          CSharp: public void Login(string email, string password, Action<PlayFabError> errorCallback = null, bool isTournamentCreationLogin = false)
          VB: Public Sub Login(email As String, password As String, errorCallback As Action(Of PlayFabError) = Nothing, isTournamentCreationLogin As Boolean = False)
        parameters:
        - id: email
          type: System.String
        - id: password
          type: System.String
        - id: errorCallback
          type: Global.Action{PlayFabError}
        - id: isTournamentCreationLogin
          type: System.Boolean
      overload: Global.PlayfabManager.Login*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.RequestPasswordRecovery(System.String,Action{System.String},Action{PlayFabError})
      commentId: M:Global.PlayfabManager.RequestPasswordRecovery(System.String,Action{System.String},Action{PlayFabError})
      language: CSharp
      name:
        CSharp: RequestPasswordRecovery(String, Action<String>, Action<PlayFabError>)
        VB: RequestPasswordRecovery(String, Action(Of String), Action(Of PlayFabError))
      nameWithType:
        CSharp: PlayfabManager.RequestPasswordRecovery(String, Action<String>, Action<PlayFabError>)
        VB: PlayfabManager.RequestPasswordRecovery(String, Action(Of String), Action(Of PlayFabError))
      qualifiedName:
        CSharp: PlayfabManager.RequestPasswordRecovery(System.String, Action<System.String>, Action<PlayFabError>)
        VB: PlayfabManager.RequestPasswordRecovery(System.String, Action(Of System.String), Action(Of PlayFabError))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RequestPasswordRecovery
        path: ''
        startLine: 30393
      syntax:
        content:
          CSharp: public void RequestPasswordRecovery(string email, Action<string> successCallback = null, Action<PlayFabError> errorCallback = null)
          VB: Public Sub RequestPasswordRecovery(email As String, successCallback As Action(Of String) = Nothing, errorCallback As Action(Of PlayFabError) = Nothing)
        parameters:
        - id: email
          type: System.String
        - id: successCallback
          type: Global.Action{System.String}
        - id: errorCallback
          type: Global.Action{PlayFabError}
      overload: Global.PlayfabManager.RequestPasswordRecovery*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.UpdateDisplayName(System.String)
      commentId: M:Global.PlayfabManager.UpdateDisplayName(System.String)
      language: CSharp
      name:
        CSharp: UpdateDisplayName(String)
        VB: UpdateDisplayName(String)
      nameWithType:
        CSharp: PlayfabManager.UpdateDisplayName(String)
        VB: PlayfabManager.UpdateDisplayName(String)
      qualifiedName:
        CSharp: PlayfabManager.UpdateDisplayName(System.String)
        VB: PlayfabManager.UpdateDisplayName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateDisplayName
        path: ''
        startLine: 30417
      syntax:
        content:
          CSharp: public void UpdateDisplayName(string newName)
          VB: Public Sub UpdateDisplayName(newName As String)
        parameters:
        - id: newName
          type: System.String
      overload: Global.PlayfabManager.UpdateDisplayName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.UpdateStatistic(System.String,System.Int32)
      commentId: M:Global.PlayfabManager.UpdateStatistic(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: UpdateStatistic(String, Int32)
        VB: UpdateStatistic(String, Int32)
      nameWithType:
        CSharp: PlayfabManager.UpdateStatistic(String, Int32)
        VB: PlayfabManager.UpdateStatistic(String, Int32)
      qualifiedName:
        CSharp: PlayfabManager.UpdateStatistic(System.String, System.Int32)
        VB: PlayfabManager.UpdateStatistic(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateStatistic
        path: ''
        startLine: 30432
      syntax:
        content:
          CSharp: public void UpdateStatistic(string statisticName, int value)
          VB: Public Sub UpdateStatistic(statisticName As String, value As Integer)
        parameters:
        - id: statisticName
          type: System.String
        - id: value
          type: System.Int32
      overload: Global.PlayfabManager.UpdateStatistic*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.GetStatistics(Action{System.Collections.Generic.List{StatisticValue}})
      commentId: M:Global.PlayfabManager.GetStatistics(Action{System.Collections.Generic.List{StatisticValue}})
      language: CSharp
      name:
        CSharp: GetStatistics(Action<List<StatisticValue>>)
        VB: GetStatistics(Action(Of List(Of StatisticValue)))
      nameWithType:
        CSharp: PlayfabManager.GetStatistics(Action<List<StatisticValue>>)
        VB: PlayfabManager.GetStatistics(Action(Of List(Of StatisticValue)))
      qualifiedName:
        CSharp: PlayfabManager.GetStatistics(Action<System.Collections.Generic.List<StatisticValue>>)
        VB: PlayfabManager.GetStatistics(Action(Of System.Collections.Generic.List(Of StatisticValue)))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetStatistics
        path: ''
        startLine: 30445
      syntax:
        content:
          CSharp: public void GetStatistics(Action<List<StatisticValue>> actionCallback)
          VB: Public Sub GetStatistics(actionCallback As Action(Of List(Of StatisticValue)))
        parameters:
        - id: actionCallback
          type: Global.Action{System.Collections.Generic.List{StatisticValue}}
      overload: Global.PlayfabManager.GetStatistics*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.RemoveUserData(System.Collections.Generic.List{System.String},Action{UpdateUserDataResult},System.Int32,PlayFab.ClientModels.UserDataPermission)
      commentId: M:Global.PlayfabManager.RemoveUserData(System.Collections.Generic.List{System.String},Action{UpdateUserDataResult},System.Int32,PlayFab.ClientModels.UserDataPermission)
      language: CSharp
      name:
        CSharp: RemoveUserData(List<String>, Action<UpdateUserDataResult>, Int32, PlayFab.ClientModels.UserDataPermission)
        VB: RemoveUserData(List(Of String), Action(Of UpdateUserDataResult), Int32, PlayFab.ClientModels.UserDataPermission)
      nameWithType:
        CSharp: PlayfabManager.RemoveUserData(List<String>, Action<UpdateUserDataResult>, Int32, PlayFab.ClientModels.UserDataPermission)
        VB: PlayfabManager.RemoveUserData(List(Of String), Action(Of UpdateUserDataResult), Int32, PlayFab.ClientModels.UserDataPermission)
      qualifiedName:
        CSharp: PlayfabManager.RemoveUserData(System.Collections.Generic.List<System.String>, Action<UpdateUserDataResult>, System.Int32, PlayFab.ClientModels.UserDataPermission)
        VB: PlayfabManager.RemoveUserData(System.Collections.Generic.List(Of System.String), Action(Of UpdateUserDataResult), System.Int32, PlayFab.ClientModels.UserDataPermission)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: RemoveUserData
        path: ''
        startLine: 30461
      summary: "\nRemove  keys of user data\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveUserData(List<string> keysToRemove, Action<UpdateUserDataResult> onResult = null, int timesTrying = 0, PlayFab.ClientModels.UserDataPermission permission = null)
          VB: Public Sub RemoveUserData(keysToRemove As List(Of String), onResult As Action(Of UpdateUserDataResult) = Nothing, timesTrying As Integer = 0, permission As PlayFab.ClientModels.UserDataPermission = Nothing)
        parameters:
        - id: keysToRemove
          type: System.Collections.Generic.List{System.String}
        - id: onResult
          type: Global.Action{UpdateUserDataResult}
        - id: timesTrying
          type: System.Int32
        - id: permission
          type: Global.PlayFab.ClientModels.UserDataPermission
      overload: Global.PlayfabManager.RemoveUserData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.SetUserData(System.Collections.Generic.Dictionary{System.String,System.String},PlayFab.ClientModels.UserDataPermission)
      commentId: M:Global.PlayfabManager.SetUserData(System.Collections.Generic.Dictionary{System.String,System.String},PlayFab.ClientModels.UserDataPermission)
      language: CSharp
      name:
        CSharp: SetUserData(Dictionary<String, String>, PlayFab.ClientModels.UserDataPermission)
        VB: SetUserData(Dictionary(Of String, String), PlayFab.ClientModels.UserDataPermission)
      nameWithType:
        CSharp: PlayfabManager.SetUserData(Dictionary<String, String>, PlayFab.ClientModels.UserDataPermission)
        VB: PlayfabManager.SetUserData(Dictionary(Of String, String), PlayFab.ClientModels.UserDataPermission)
      qualifiedName:
        CSharp: PlayfabManager.SetUserData(System.Collections.Generic.Dictionary<System.String, System.String>, PlayFab.ClientModels.UserDataPermission)
        VB: PlayfabManager.SetUserData(System.Collections.Generic.Dictionary(Of System.String, System.String), PlayFab.ClientModels.UserDataPermission)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetUserData
        path: ''
        startLine: 30486
      syntax:
        content:
          CSharp: public void SetUserData(Dictionary<string, string> newData, PlayFab.ClientModels.UserDataPermission permission = null)
          VB: Public Sub SetUserData(newData As Dictionary(Of String, String), permission As PlayFab.ClientModels.UserDataPermission = Nothing)
        parameters:
        - id: newData
          type: System.Collections.Generic.Dictionary{System.String,System.String}
        - id: permission
          type: Global.PlayFab.ClientModels.UserDataPermission
      overload: Global.PlayfabManager.SetUserData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.GetUserData(System.String,System.Collections.Generic.List{System.String},Action{PlayFab.ClientModels.GetUserDataResult})
      commentId: M:Global.PlayfabManager.GetUserData(System.String,System.Collections.Generic.List{System.String},Action{PlayFab.ClientModels.GetUserDataResult})
      language: CSharp
      name:
        CSharp: GetUserData(String, List<String>, Action<PlayFab.ClientModels.GetUserDataResult>)
        VB: GetUserData(String, List(Of String), Action(Of PlayFab.ClientModels.GetUserDataResult))
      nameWithType:
        CSharp: PlayfabManager.GetUserData(String, List<String>, Action<PlayFab.ClientModels.GetUserDataResult>)
        VB: PlayfabManager.GetUserData(String, List(Of String), Action(Of PlayFab.ClientModels.GetUserDataResult))
      qualifiedName:
        CSharp: PlayfabManager.GetUserData(System.String, System.Collections.Generic.List<System.String>, Action<PlayFab.ClientModels.GetUserDataResult>)
        VB: PlayfabManager.GetUserData(System.String, System.Collections.Generic.List(Of System.String), Action(Of PlayFab.ClientModels.GetUserDataResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetUserData
        path: ''
        startLine: 30520
      syntax:
        content:
          CSharp: public void GetUserData(string playfabId, List<string> targetKeys = null, Action<PlayFab.ClientModels.GetUserDataResult> OnResult = null)
          VB: Public Sub GetUserData(playfabId As String, targetKeys As List(Of String) = Nothing, OnResult As Action(Of PlayFab.ClientModels.GetUserDataResult) = Nothing)
        parameters:
        - id: playfabId
          type: System.String
        - id: targetKeys
          type: System.Collections.Generic.List{System.String}
        - id: OnResult
          type: Global.Action{PlayFab.ClientModels.GetUserDataResult}
      overload: Global.PlayfabManager.GetUserData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.CreateMatchTicket(System.String,System.String,System.Int32,System.String)
      commentId: M:Global.PlayfabManager.CreateMatchTicket(System.String,System.String,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: CreateMatchTicket(String, String, Int32, String)
        VB: CreateMatchTicket(String, String, Int32, String)
      nameWithType:
        CSharp: PlayfabManager.CreateMatchTicket(String, String, Int32, String)
        VB: PlayfabManager.CreateMatchTicket(String, String, Int32, String)
      qualifiedName:
        CSharp: PlayfabManager.CreateMatchTicket(System.String, System.String, System.Int32, System.String)
        VB: PlayfabManager.CreateMatchTicket(System.String, System.String, System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CreateMatchTicket
        path: ''
        startLine: 30599
      summary: "\nCreate a matchmaking ticket to the specified Queue\n"
      example: []
      syntax:
        content:
          CSharp: public void CreateMatchTicket(string uniqueId, string playerType, int skillLevel, string queueName)
          VB: Public Sub CreateMatchTicket(uniqueId As String, playerType As String, skillLevel As Integer, queueName As String)
        parameters:
        - id: uniqueId
          type: System.String
        - id: playerType
          type: System.String
        - id: skillLevel
          type: System.Int32
        - id: queueName
          type: System.String
      overload: Global.PlayfabManager.CreateMatchTicket*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.GetTicketState(System.String,System.String,Action{MultiplayerModels.GetMatchmakingTicketResult})
      commentId: M:Global.PlayfabManager.GetTicketState(System.String,System.String,Action{MultiplayerModels.GetMatchmakingTicketResult})
      language: CSharp
      name:
        CSharp: GetTicketState(String, String, Action<MultiplayerModels.GetMatchmakingTicketResult>)
        VB: GetTicketState(String, String, Action(Of MultiplayerModels.GetMatchmakingTicketResult))
      nameWithType:
        CSharp: PlayfabManager.GetTicketState(String, String, Action<MultiplayerModels.GetMatchmakingTicketResult>)
        VB: PlayfabManager.GetTicketState(String, String, Action(Of MultiplayerModels.GetMatchmakingTicketResult))
      qualifiedName:
        CSharp: PlayfabManager.GetTicketState(System.String, System.String, Action<MultiplayerModels.GetMatchmakingTicketResult>)
        VB: PlayfabManager.GetTicketState(System.String, System.String, Action(Of MultiplayerModels.GetMatchmakingTicketResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetTicketState
        path: ''
        startLine: 30646
      summary: "\ncall this method every 6 to 10 seconds to query the specified ticket state\n"
      example: []
      syntax:
        content:
          CSharp: public void GetTicketState(string ticketId, string queueName, Action<MultiplayerModels.GetMatchmakingTicketResult> result)
          VB: Public Sub GetTicketState(ticketId As String, queueName As String, result As Action(Of MultiplayerModels.GetMatchmakingTicketResult))
        parameters:
        - id: ticketId
          type: System.String
        - id: queueName
          type: System.String
        - id: result
          type: Global.Action{MultiplayerModels.GetMatchmakingTicketResult}
      overload: Global.PlayfabManager.GetTicketState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.GetMatch(System.String,System.String)
      commentId: M:Global.PlayfabManager.GetMatch(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetMatch(String, String)
        VB: GetMatch(String, String)
      nameWithType:
        CSharp: PlayfabManager.GetMatch(String, String)
        VB: PlayfabManager.GetMatch(String, String)
      qualifiedName:
        CSharp: PlayfabManager.GetMatch(System.String, System.String)
        VB: PlayfabManager.GetMatch(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetMatch
        path: ''
        startLine: 30671
      summary: "\nGets the created match under the specified ticket id\n"
      example: []
      syntax:
        content:
          CSharp: public void GetMatch(string matchId, string queueName)
          VB: Public Sub GetMatch(matchId As String, queueName As String)
        parameters:
        - id: matchId
          type: System.String
        - id: queueName
          type: System.String
      overload: Global.PlayfabManager.GetMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.CancelMatchmaking(System.String,System.String)
      commentId: M:Global.PlayfabManager.CancelMatchmaking(System.String,System.String)
      language: CSharp
      name:
        CSharp: CancelMatchmaking(String, String)
        VB: CancelMatchmaking(String, String)
      nameWithType:
        CSharp: PlayfabManager.CancelMatchmaking(String, String)
        VB: PlayfabManager.CancelMatchmaking(String, String)
      qualifiedName:
        CSharp: PlayfabManager.CancelMatchmaking(System.String, System.String)
        VB: PlayfabManager.CancelMatchmaking(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CancelMatchmaking
        path: ''
        startLine: 30692
      syntax:
        content:
          CSharp: public void CancelMatchmaking(string queueName, string ticketId)
          VB: Public Sub CancelMatchmaking(queueName As String, ticketId As String)
        parameters:
        - id: queueName
          type: System.String
        - id: ticketId
          type: System.String
      overload: Global.PlayfabManager.CancelMatchmaking*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.GetPlayerCurrency
      commentId: M:Global.PlayfabManager.GetPlayerCurrency
      language: CSharp
      name:
        CSharp: GetPlayerCurrency()
        VB: GetPlayerCurrency()
      nameWithType:
        CSharp: PlayfabManager.GetPlayerCurrency()
        VB: PlayfabManager.GetPlayerCurrency()
      qualifiedName:
        CSharp: PlayfabManager.GetPlayerCurrency()
        VB: PlayfabManager.GetPlayerCurrency()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetPlayerCurrency
        path: ''
        startLine: 30712
      syntax:
        content:
          CSharp: public void GetPlayerCurrency()
          VB: Public Sub GetPlayerCurrency
      overload: Global.PlayfabManager.GetPlayerCurrency*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.GetStoreCards
      commentId: M:Global.PlayfabManager.GetStoreCards
      language: CSharp
      name:
        CSharp: GetStoreCards()
        VB: GetStoreCards()
      nameWithType:
        CSharp: PlayfabManager.GetStoreCards()
        VB: PlayfabManager.GetStoreCards()
      qualifiedName:
        CSharp: PlayfabManager.GetStoreCards()
        VB: PlayfabManager.GetStoreCards()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetStoreCards
        path: ''
        startLine: 30718
      syntax:
        content:
          CSharp: public void GetStoreCards()
          VB: Public Sub GetStoreCards
      overload: Global.PlayfabManager.GetStoreCards*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.PurchaseCard(System.Int32,System.UInt32)
      commentId: M:Global.PlayfabManager.PurchaseCard(System.Int32,System.UInt32)
      language: CSharp
      name:
        CSharp: PurchaseCard(Int32, UInt32)
        VB: PurchaseCard(Int32, UInt32)
      nameWithType:
        CSharp: PlayfabManager.PurchaseCard(Int32, UInt32)
        VB: PlayfabManager.PurchaseCard(Int32, UInt32)
      qualifiedName:
        CSharp: PlayfabManager.PurchaseCard(System.Int32, System.UInt32)
        VB: PlayfabManager.PurchaseCard(System.Int32, System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PurchaseCard
        path: ''
        startLine: 30725
      syntax:
        content:
          CSharp: public void PurchaseCard(int itemId, uint itemPrice)
          VB: Public Sub PurchaseCard(itemId As Integer, itemPrice As UInteger)
        parameters:
        - id: itemId
          type: System.Int32
        - id: itemPrice
          type: System.UInt32
      overload: Global.PlayfabManager.PurchaseCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.AddPlayerCurrency(System.Int32)
      commentId: M:Global.PlayfabManager.AddPlayerCurrency(System.Int32)
      language: CSharp
      name:
        CSharp: AddPlayerCurrency(Int32)
        VB: AddPlayerCurrency(Int32)
      nameWithType:
        CSharp: PlayfabManager.AddPlayerCurrency(Int32)
        VB: PlayfabManager.AddPlayerCurrency(Int32)
      qualifiedName:
        CSharp: PlayfabManager.AddPlayerCurrency(System.Int32)
        VB: PlayfabManager.AddPlayerCurrency(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: AddPlayerCurrency
        path: ''
        startLine: 30732
      syntax:
        content:
          CSharp: public void AddPlayerCurrency(int amountToModify)
          VB: Public Sub AddPlayerCurrency(amountToModify As Integer)
        parameters:
        - id: amountToModify
          type: System.Int32
      overload: Global.PlayfabManager.AddPlayerCurrency*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.SubtractPlayerCurrency(System.Int32)
      commentId: M:Global.PlayfabManager.SubtractPlayerCurrency(System.Int32)
      language: CSharp
      name:
        CSharp: SubtractPlayerCurrency(Int32)
        VB: SubtractPlayerCurrency(Int32)
      nameWithType:
        CSharp: PlayfabManager.SubtractPlayerCurrency(Int32)
        VB: PlayfabManager.SubtractPlayerCurrency(Int32)
      qualifiedName:
        CSharp: PlayfabManager.SubtractPlayerCurrency(System.Int32)
        VB: PlayfabManager.SubtractPlayerCurrency(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SubtractPlayerCurrency
        path: ''
        startLine: 30739
      syntax:
        content:
          CSharp: public void SubtractPlayerCurrency(int amountToModify)
          VB: Public Sub SubtractPlayerCurrency(amountToModify As Integer)
        parameters:
        - id: amountToModify
          type: System.Int32
      overload: Global.PlayfabManager.SubtractPlayerCurrency*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.UpdatePlayerStatistics(System.String,System.Int32)
      commentId: M:Global.PlayfabManager.UpdatePlayerStatistics(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: UpdatePlayerStatistics(String, Int32)
        VB: UpdatePlayerStatistics(String, Int32)
      nameWithType:
        CSharp: PlayfabManager.UpdatePlayerStatistics(String, Int32)
        VB: PlayfabManager.UpdatePlayerStatistics(String, Int32)
      qualifiedName:
        CSharp: PlayfabManager.UpdatePlayerStatistics(System.String, System.Int32)
        VB: PlayfabManager.UpdatePlayerStatistics(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdatePlayerStatistics
        path: ''
        startLine: 30749
      syntax:
        content:
          CSharp: public void UpdatePlayerStatistics(string leaderboardName, int score)
          VB: Public Sub UpdatePlayerStatistics(leaderboardName As String, score As Integer)
        parameters:
        - id: leaderboardName
          type: System.String
        - id: score
          type: System.Int32
      overload: Global.PlayfabManager.UpdatePlayerStatistics*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.GetLeaderboardAroundPlayer(System.String,System.Int32,System.String)
      commentId: M:Global.PlayfabManager.GetLeaderboardAroundPlayer(System.String,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: GetLeaderboardAroundPlayer(String, Int32, String)
        VB: GetLeaderboardAroundPlayer(String, Int32, String)
      nameWithType:
        CSharp: PlayfabManager.GetLeaderboardAroundPlayer(String, Int32, String)
        VB: PlayfabManager.GetLeaderboardAroundPlayer(String, Int32, String)
      qualifiedName:
        CSharp: PlayfabManager.GetLeaderboardAroundPlayer(System.String, System.Int32, System.String)
        VB: PlayfabManager.GetLeaderboardAroundPlayer(System.String, System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetLeaderboardAroundPlayer
        path: ''
        startLine: 30776
      syntax:
        content:
          CSharp: public void GetLeaderboardAroundPlayer(string playerId, int maxResultCount, string leaderboardName)
          VB: Public Sub GetLeaderboardAroundPlayer(playerId As String, maxResultCount As Integer, leaderboardName As String)
        parameters:
        - id: playerId
          type: System.String
        - id: maxResultCount
          type: System.Int32
        - id: leaderboardName
          type: System.String
      overload: Global.PlayfabManager.GetLeaderboardAroundPlayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.GetLeaderboardEntries(System.Int32,System.Int32,System.String)
      commentId: M:Global.PlayfabManager.GetLeaderboardEntries(System.Int32,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: GetLeaderboardEntries(Int32, Int32, String)
        VB: GetLeaderboardEntries(Int32, Int32, String)
      nameWithType:
        CSharp: PlayfabManager.GetLeaderboardEntries(Int32, Int32, String)
        VB: PlayfabManager.GetLeaderboardEntries(Int32, Int32, String)
      qualifiedName:
        CSharp: PlayfabManager.GetLeaderboardEntries(System.Int32, System.Int32, System.String)
        VB: PlayfabManager.GetLeaderboardEntries(System.Int32, System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetLeaderboardEntries
        path: ''
        startLine: 30796
      syntax:
        content:
          CSharp: public void GetLeaderboardEntries(int startPosition, int maxResultCount, string leaderboardName)
          VB: Public Sub GetLeaderboardEntries(startPosition As Integer, maxResultCount As Integer, leaderboardName As String)
        parameters:
        - id: startPosition
          type: System.Int32
        - id: maxResultCount
          type: System.Int32
        - id: leaderboardName
          type: System.String
      overload: Global.PlayfabManager.GetLeaderboardEntries*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.GetLeaderboardEntries(System.Int32,System.Int32,System.String,Action{GetLeaderboardResult})
      commentId: M:Global.PlayfabManager.GetLeaderboardEntries(System.Int32,System.Int32,System.String,Action{GetLeaderboardResult})
      language: CSharp
      name:
        CSharp: GetLeaderboardEntries(Int32, Int32, String, Action<GetLeaderboardResult>)
        VB: GetLeaderboardEntries(Int32, Int32, String, Action(Of GetLeaderboardResult))
      nameWithType:
        CSharp: PlayfabManager.GetLeaderboardEntries(Int32, Int32, String, Action<GetLeaderboardResult>)
        VB: PlayfabManager.GetLeaderboardEntries(Int32, Int32, String, Action(Of GetLeaderboardResult))
      qualifiedName:
        CSharp: PlayfabManager.GetLeaderboardEntries(System.Int32, System.Int32, System.String, Action<GetLeaderboardResult>)
        VB: PlayfabManager.GetLeaderboardEntries(System.Int32, System.Int32, System.String, Action(Of GetLeaderboardResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetLeaderboardEntries
        path: ''
        startLine: 30810
      syntax:
        content:
          CSharp: public void GetLeaderboardEntries(int startPosition, int maxResultCount, string leaderboardName, Action<GetLeaderboardResult> Callback)
          VB: Public Sub GetLeaderboardEntries(startPosition As Integer, maxResultCount As Integer, leaderboardName As String, Callback As Action(Of GetLeaderboardResult))
        parameters:
        - id: startPosition
          type: System.Int32
        - id: maxResultCount
          type: System.Int32
        - id: leaderboardName
          type: System.String
        - id: Callback
          type: Global.Action{GetLeaderboardResult}
      overload: Global.PlayfabManager.GetLeaderboardEntries*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.debugMessagePrefix
      commentId: F:Global.PlayfabManager.debugMessagePrefix
      language: CSharp
      name:
        CSharp: debugMessagePrefix
        VB: debugMessagePrefix
      nameWithType:
        CSharp: PlayfabManager.debugMessagePrefix
        VB: PlayfabManager.debugMessagePrefix
      qualifiedName:
        CSharp: PlayfabManager.debugMessagePrefix
        VB: PlayfabManager.debugMessagePrefix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: debugMessagePrefix
        path: ''
        startLine: 30839
      syntax:
        content:
          CSharp: 'public const string debugMessagePrefix = "<color=orange>PlayfabManager battleServer message: </color>"'
          VB: 'Public Const debugMessagePrefix As String = "<color=orange>PlayfabManager battleServer message: </color>"'
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.PlayfabManager.BattleServerCreateMatch(System.String,Action{ExecuteFunctionResult})
      commentId: M:Global.PlayfabManager.BattleServerCreateMatch(System.String,Action{ExecuteFunctionResult})
      language: CSharp
      name:
        CSharp: BattleServerCreateMatch(String, Action<ExecuteFunctionResult>)
        VB: BattleServerCreateMatch(String, Action(Of ExecuteFunctionResult))
      nameWithType:
        CSharp: PlayfabManager.BattleServerCreateMatch(String, Action<ExecuteFunctionResult>)
        VB: PlayfabManager.BattleServerCreateMatch(String, Action(Of ExecuteFunctionResult))
      qualifiedName:
        CSharp: PlayfabManager.BattleServerCreateMatch(System.String, Action<ExecuteFunctionResult>)
        VB: PlayfabManager.BattleServerCreateMatch(System.String, Action(Of ExecuteFunctionResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BattleServerCreateMatch
        path: ''
        startLine: 30842
      syntax:
        content:
          CSharp: public void BattleServerCreateMatch(string matchId, Action<ExecuteFunctionResult> resultCallback)
          VB: Public Sub BattleServerCreateMatch(matchId As String, resultCallback As Action(Of ExecuteFunctionResult))
        parameters:
        - id: matchId
          type: System.String
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
      overload: Global.PlayfabManager.BattleServerCreateMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.BattleServerCheckMatchConfirm(System.String,System.Int32,Action{ExecuteFunctionResult},Action{PlayFabError})
      commentId: M:Global.PlayfabManager.BattleServerCheckMatchConfirm(System.String,System.Int32,Action{ExecuteFunctionResult},Action{PlayFabError})
      language: CSharp
      name:
        CSharp: BattleServerCheckMatchConfirm(String, Int32, Action<ExecuteFunctionResult>, Action<PlayFabError>)
        VB: BattleServerCheckMatchConfirm(String, Int32, Action(Of ExecuteFunctionResult), Action(Of PlayFabError))
      nameWithType:
        CSharp: PlayfabManager.BattleServerCheckMatchConfirm(String, Int32, Action<ExecuteFunctionResult>, Action<PlayFabError>)
        VB: PlayfabManager.BattleServerCheckMatchConfirm(String, Int32, Action(Of ExecuteFunctionResult), Action(Of PlayFabError))
      qualifiedName:
        CSharp: PlayfabManager.BattleServerCheckMatchConfirm(System.String, System.Int32, Action<ExecuteFunctionResult>, Action<PlayFabError>)
        VB: PlayfabManager.BattleServerCheckMatchConfirm(System.String, System.Int32, Action(Of ExecuteFunctionResult), Action(Of PlayFabError))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BattleServerCheckMatchConfirm
        path: ''
        startLine: 30862
      syntax:
        content:
          CSharp: public void BattleServerCheckMatchConfirm(string matchId, int spawnPoint, Action<ExecuteFunctionResult> resultCallback, Action<PlayFabError> errorCallback = null)
          VB: Public Sub BattleServerCheckMatchConfirm(matchId As String, spawnPoint As Integer, resultCallback As Action(Of ExecuteFunctionResult), errorCallback As Action(Of PlayFabError) = Nothing)
        parameters:
        - id: matchId
          type: System.String
        - id: spawnPoint
          type: System.Int32
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
        - id: errorCallback
          type: Global.Action{PlayFabError}
      overload: Global.PlayfabManager.BattleServerCheckMatchConfirm*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.BattleServerSelectShinseis(System.String,CombatPlayer,System.Collections.Generic.List{System.Int32},Action{ExecuteFunctionResult},Action{PlayFabError})
      commentId: M:Global.PlayfabManager.BattleServerSelectShinseis(System.String,CombatPlayer,System.Collections.Generic.List{System.Int32},Action{ExecuteFunctionResult},Action{PlayFabError})
      language: CSharp
      name:
        CSharp: BattleServerSelectShinseis(String, CombatPlayer, List<Int32>, Action<ExecuteFunctionResult>, Action<PlayFabError>)
        VB: BattleServerSelectShinseis(String, CombatPlayer, List(Of Int32), Action(Of ExecuteFunctionResult), Action(Of PlayFabError))
      nameWithType:
        CSharp: PlayfabManager.BattleServerSelectShinseis(String, CombatPlayer, List<Int32>, Action<ExecuteFunctionResult>, Action<PlayFabError>)
        VB: PlayfabManager.BattleServerSelectShinseis(String, CombatPlayer, List(Of Int32), Action(Of ExecuteFunctionResult), Action(Of PlayFabError))
      qualifiedName:
        CSharp: PlayfabManager.BattleServerSelectShinseis(System.String, CombatPlayer, System.Collections.Generic.List<System.Int32>, Action<ExecuteFunctionResult>, Action<PlayFabError>)
        VB: PlayfabManager.BattleServerSelectShinseis(System.String, CombatPlayer, System.Collections.Generic.List(Of System.Int32), Action(Of ExecuteFunctionResult), Action(Of PlayFabError))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BattleServerSelectShinseis
        path: ''
        startLine: 30879
      syntax:
        content:
          CSharp: public void BattleServerSelectShinseis(string matchId, CombatPlayer playerData, List<int> shinseisPlayer, Action<ExecuteFunctionResult> resultCallback, Action<PlayFabError> errorCallback)
          VB: Public Sub BattleServerSelectShinseis(matchId As String, playerData As CombatPlayer, shinseisPlayer As List(Of Integer), resultCallback As Action(Of ExecuteFunctionResult), errorCallback As Action(Of PlayFabError))
        parameters:
        - id: matchId
          type: System.String
        - id: playerData
          type: Global.CombatPlayer
        - id: shinseisPlayer
          type: System.Collections.Generic.List{System.Int32}
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
        - id: errorCallback
          type: Global.Action{PlayFabError}
      overload: Global.PlayfabManager.BattleServerSelectShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.BattleServerCheckShinseisChoosed(System.String,Action{ExecuteFunctionResult})
      commentId: M:Global.PlayfabManager.BattleServerCheckShinseisChoosed(System.String,Action{ExecuteFunctionResult})
      language: CSharp
      name:
        CSharp: BattleServerCheckShinseisChoosed(String, Action<ExecuteFunctionResult>)
        VB: BattleServerCheckShinseisChoosed(String, Action(Of ExecuteFunctionResult))
      nameWithType:
        CSharp: PlayfabManager.BattleServerCheckShinseisChoosed(String, Action<ExecuteFunctionResult>)
        VB: PlayfabManager.BattleServerCheckShinseisChoosed(String, Action(Of ExecuteFunctionResult))
      qualifiedName:
        CSharp: PlayfabManager.BattleServerCheckShinseisChoosed(System.String, Action<ExecuteFunctionResult>)
        VB: PlayfabManager.BattleServerCheckShinseisChoosed(System.String, Action(Of ExecuteFunctionResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BattleServerCheckShinseisChoosed
        path: ''
        startLine: 30909
      syntax:
        content:
          CSharp: public void BattleServerCheckShinseisChoosed(string matchId, Action<ExecuteFunctionResult> resultCallback)
          VB: Public Sub BattleServerCheckShinseisChoosed(matchId As String, resultCallback As Action(Of ExecuteFunctionResult))
        parameters:
        - id: matchId
          type: System.String
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
      overload: Global.PlayfabManager.BattleServerCheckShinseisChoosed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.BattleServerSendTurn(System.String,System.Int32,Action{ExecuteFunctionResult},System.Int32,System.Int32)
      commentId: M:Global.PlayfabManager.BattleServerSendTurn(System.String,System.Int32,Action{ExecuteFunctionResult},System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: BattleServerSendTurn(String, Int32, Action<ExecuteFunctionResult>, Int32, Int32)
        VB: BattleServerSendTurn(String, Int32, Action(Of ExecuteFunctionResult), Int32, Int32)
      nameWithType:
        CSharp: PlayfabManager.BattleServerSendTurn(String, Int32, Action<ExecuteFunctionResult>, Int32, Int32)
        VB: PlayfabManager.BattleServerSendTurn(String, Int32, Action(Of ExecuteFunctionResult), Int32, Int32)
      qualifiedName:
        CSharp: PlayfabManager.BattleServerSendTurn(System.String, System.Int32, Action<ExecuteFunctionResult>, System.Int32, System.Int32)
        VB: PlayfabManager.BattleServerSendTurn(System.String, System.Int32, Action(Of ExecuteFunctionResult), System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BattleServerSendTurn
        path: ''
        startLine: 30936
      syntax:
        content:
          CSharp: public void BattleServerSendTurn(string matchId, int indexOfCard, Action<ExecuteFunctionResult> resultCallback, int counter = 0, int currentShinsei = 0)
          VB: Public Sub BattleServerSendTurn(matchId As String, indexOfCard As Integer, resultCallback As Action(Of ExecuteFunctionResult), counter As Integer = 0, currentShinsei As Integer = 0)
        parameters:
        - id: matchId
          type: System.String
        - id: indexOfCard
          type: System.Int32
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
        - id: counter
          type: System.Int32
        - id: currentShinsei
          type: System.Int32
      overload: Global.PlayfabManager.BattleServerSendTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PlayfabManager.BattleServerGetMatchState(System.String,System.Boolean,Action{ExecuteFunctionResult},System.Boolean,System.Boolean)
      commentId: M:Global.PlayfabManager.BattleServerGetMatchState(System.String,System.Boolean,Action{ExecuteFunctionResult},System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: BattleServerGetMatchState(String, Boolean, Action<ExecuteFunctionResult>, Boolean, Boolean)
        VB: BattleServerGetMatchState(String, Boolean, Action(Of ExecuteFunctionResult), Boolean, Boolean)
      nameWithType:
        CSharp: PlayfabManager.BattleServerGetMatchState(String, Boolean, Action<ExecuteFunctionResult>, Boolean, Boolean)
        VB: PlayfabManager.BattleServerGetMatchState(String, Boolean, Action(Of ExecuteFunctionResult), Boolean, Boolean)
      qualifiedName:
        CSharp: PlayfabManager.BattleServerGetMatchState(System.String, System.Boolean, Action<ExecuteFunctionResult>, System.Boolean, System.Boolean)
        VB: PlayfabManager.BattleServerGetMatchState(System.String, System.Boolean, Action(Of ExecuteFunctionResult), System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: BattleServerGetMatchState
        path: ''
        startLine: 30974
      syntax:
        content:
          CSharp: public void BattleServerGetMatchState(string matchId, bool isViewer = false, Action<ExecuteFunctionResult> resultCallback = null, bool retryEndMatch = false, bool enemyDisconnected = false)
          VB: Public Sub BattleServerGetMatchState(matchId As String, isViewer As Boolean = False, resultCallback As Action(Of ExecuteFunctionResult) = Nothing, retryEndMatch As Boolean = False, enemyDisconnected As Boolean = False)
        parameters:
        - id: matchId
          type: System.String
        - id: isViewer
          type: System.Boolean
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
        - id: retryEndMatch
          type: System.Boolean
        - id: enemyDisconnected
          type: System.Boolean
      overload: Global.PlayfabManager.BattleServerGetMatchState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PutBackgroundMusic
    commentId: T:Global.PutBackgroundMusic
    language: CSharp
    name:
      CSharp: PutBackgroundMusic
      VB: PutBackgroundMusic
    nameWithType:
      CSharp: PutBackgroundMusic
      VB: PutBackgroundMusic
    qualifiedName:
      CSharp: PutBackgroundMusic
      VB: PutBackgroundMusic
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PutBackgroundMusic
      path: ''
      startLine: 31014
    syntax:
      content:
        CSharp: 'public class PutBackgroundMusic : MonoBehaviour'
        VB: >-
          Public Class PutBackgroundMusic

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.RareThing
    commentId: T:Global.RareThing
    language: CSharp
    name:
      CSharp: RareThing
      VB: RareThing
    nameWithType:
      CSharp: RareThing
      VB: RareThing
    qualifiedName:
      CSharp: RareThing
      VB: RareThing
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RareThing
      path: ''
      startLine: 31037
    summary: "\nThis script solves a problem with WWise when you put the game in second plane at return all songs in queque play at time, and control the bird sounds\n"
    example: []
    syntax:
      content:
        CSharp: 'public class RareThing : MonoBehaviour'
        VB: >-
          Public Class RareThing

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RareThing.MyEvent
      commentId: F:Global.RareThing.MyEvent
      language: CSharp
      name:
        CSharp: MyEvent
        VB: MyEvent
      nameWithType:
        CSharp: RareThing.MyEvent
        VB: RareThing.MyEvent
      qualifiedName:
        CSharp: RareThing.MyEvent
        VB: RareThing.MyEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MyEvent
        path: ''
        startLine: 31040
      syntax:
        content:
          CSharp: public AK.Wwise.Event MyEvent
          VB: Public MyEvent As AK.Wwise.Event
        return:
          type: Global.AK.Wwise.Event
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RareThing.Birds
      commentId: F:Global.RareThing.Birds
      language: CSharp
      name:
        CSharp: Birds
        VB: Birds
      nameWithType:
        CSharp: RareThing.Birds
        VB: RareThing.Birds
      qualifiedName:
        CSharp: RareThing.Birds
        VB: RareThing.Birds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Birds
        path: ''
        startLine: 31041
      syntax:
        content:
          CSharp: public AK.Wwise.Event Birds
          VB: Public Birds As AK.Wwise.Event
        return:
          type: Global.AK.Wwise.Event
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RareThing.PlaySound(System.String)
      commentId: M:Global.RareThing.PlaySound(System.String)
      language: CSharp
      name:
        CSharp: PlaySound(String)
        VB: PlaySound(String)
      nameWithType:
        CSharp: RareThing.PlaySound(String)
        VB: RareThing.PlaySound(String)
      qualifiedName:
        CSharp: RareThing.PlaySound(System.String)
        VB: RareThing.PlaySound(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PlaySound
        path: ''
        startLine: 31049
      syntax:
        content:
          CSharp: public void PlaySound(string state)
          VB: Public Sub PlaySound(state As String)
        parameters:
        - id: state
          type: System.String
      overload: Global.RareThing.PlaySound*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ScrollArrows
    commentId: T:Global.ScrollArrows
    language: CSharp
    name:
      CSharp: ScrollArrows
      VB: ScrollArrows
    nameWithType:
      CSharp: ScrollArrows
      VB: ScrollArrows
    qualifiedName:
      CSharp: ScrollArrows
      VB: ScrollArrows
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ScrollArrows
      path: ''
      startLine: 31080
    syntax:
      content:
        CSharp: 'public class ScrollArrows : MonoBehaviour'
        VB: >-
          Public Class ScrollArrows

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.SerializableVector3
    commentId: T:Global.SerializableVector3
    language: CSharp
    name:
      CSharp: SerializableVector3
      VB: SerializableVector3
    nameWithType:
      CSharp: SerializableVector3
      VB: SerializableVector3
    qualifiedName:
      CSharp: SerializableVector3
      VB: SerializableVector3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SerializableVector3
      path: ''
      startLine: 31100
    syntax:
      content:
        CSharp: public class SerializableVector3
        VB: Public Class SerializableVector3
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.SerializableVector3.x
      commentId: F:Global.SerializableVector3.x
      language: CSharp
      name:
        CSharp: x
        VB: x
      nameWithType:
        CSharp: SerializableVector3.x
        VB: SerializableVector3.x
      qualifiedName:
        CSharp: SerializableVector3.x
        VB: SerializableVector3.x
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: x
        path: ''
        startLine: 31103
      syntax:
        content:
          CSharp: public float x
          VB: Public x As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SerializableVector3.y
      commentId: F:Global.SerializableVector3.y
      language: CSharp
      name:
        CSharp: y
        VB: y
      nameWithType:
        CSharp: SerializableVector3.y
        VB: SerializableVector3.y
      qualifiedName:
        CSharp: SerializableVector3.y
        VB: SerializableVector3.y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: y
        path: ''
        startLine: 31104
      syntax:
        content:
          CSharp: public float y
          VB: Public y As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SerializableVector3.z
      commentId: F:Global.SerializableVector3.z
      language: CSharp
      name:
        CSharp: z
        VB: z
      nameWithType:
        CSharp: SerializableVector3.z
        VB: SerializableVector3.z
      qualifiedName:
        CSharp: SerializableVector3.z
        VB: SerializableVector3.z
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: z
        path: ''
        startLine: 31105
      syntax:
        content:
          CSharp: public float z
          VB: Public z As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SerializableVector3.#ctor(System.Single,System.Single,System.Single)
      commentId: M:Global.SerializableVector3.#ctor(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SerializableVector3(Single, Single, Single)
        VB: SerializableVector3(Single, Single, Single)
      nameWithType:
        CSharp: SerializableVector3.SerializableVector3(Single, Single, Single)
        VB: SerializableVector3.SerializableVector3(Single, Single, Single)
      qualifiedName:
        CSharp: SerializableVector3.SerializableVector3(System.Single, System.Single, System.Single)
        VB: SerializableVector3.SerializableVector3(System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 31107
      syntax:
        content:
          CSharp: public SerializableVector3(float x, float y, float z)
          VB: Public Sub New(x As Single, y As Single, z As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        - id: z
          type: System.Single
      overload: Global.SerializableVector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.SerializableVector3.#ctor(Vector3)
      commentId: M:Global.SerializableVector3.#ctor(Vector3)
      language: CSharp
      name:
        CSharp: SerializableVector3(Vector3)
        VB: SerializableVector3(Vector3)
      nameWithType:
        CSharp: SerializableVector3.SerializableVector3(Vector3)
        VB: SerializableVector3.SerializableVector3(Vector3)
      qualifiedName:
        CSharp: SerializableVector3.SerializableVector3(Vector3)
        VB: SerializableVector3.SerializableVector3(Vector3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: .ctor
        path: ''
        startLine: 31115
      syntax:
        content:
          CSharp: public SerializableVector3(Vector3 vector3)
          VB: Public Sub New(vector3 As Vector3)
        parameters:
        - id: vector3
          type: Global.Vector3
      overload: Global.SerializableVector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.Vector3Extensions
    commentId: T:Global.Vector3Extensions
    language: CSharp
    name:
      CSharp: Vector3Extensions
      VB: Vector3Extensions
    nameWithType:
      CSharp: Vector3Extensions
      VB: Vector3Extensions
    qualifiedName:
      CSharp: Vector3Extensions
      VB: Vector3Extensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Vector3Extensions
      path: ''
      startLine: 31123
    syntax:
      content:
        CSharp: public static class Vector3Extensions
        VB: Public Module Vector3Extensions
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Global.Vector3Extensions.ToVector3(SerializableVector3)
      commentId: M:Global.Vector3Extensions.ToVector3(SerializableVector3)
      language: CSharp
      name:
        CSharp: ToVector3(SerializableVector3)
        VB: ToVector3(SerializableVector3)
      nameWithType:
        CSharp: Vector3Extensions.ToVector3(SerializableVector3)
        VB: Vector3Extensions.ToVector3(SerializableVector3)
      qualifiedName:
        CSharp: Vector3Extensions.ToVector3(SerializableVector3)
        VB: Vector3Extensions.ToVector3(SerializableVector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ToVector3
        path: ''
        startLine: 31125
      syntax:
        content:
          CSharp: public static Vector3 ToVector3(this SerializableVector3 serializedVector3)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function ToVector3(serializedVector3 As SerializableVector3) As Vector3
        parameters:
        - id: serializedVector3
          type: Global.SerializableVector3
        return:
          type: Global.Vector3
      overload: Global.Vector3Extensions.ToVector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: Global.Vector3Extensions.FromVector3(Vector3)
      commentId: M:Global.Vector3Extensions.FromVector3(Vector3)
      language: CSharp
      name:
        CSharp: FromVector3(Vector3)
        VB: FromVector3(Vector3)
      nameWithType:
        CSharp: Vector3Extensions.FromVector3(Vector3)
        VB: Vector3Extensions.FromVector3(Vector3)
      qualifiedName:
        CSharp: Vector3Extensions.FromVector3(Vector3)
        VB: Vector3Extensions.FromVector3(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FromVector3
        path: ''
        startLine: 31130
      syntax:
        content:
          CSharp: public static SerializableVector3 FromVector3(this Vector3 vector3)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function FromVector3(vector3 As Vector3) As SerializableVector3
        parameters:
        - id: vector3
          type: Global.Vector3
        return:
          type: Global.SerializableVector3
      overload: Global.Vector3Extensions.FromVector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.ShowPreviewOfSlot
    commentId: T:Global.ShowPreviewOfSlot
    language: CSharp
    name:
      CSharp: ShowPreviewOfSlot
      VB: ShowPreviewOfSlot
    nameWithType:
      CSharp: ShowPreviewOfSlot
      VB: ShowPreviewOfSlot
    qualifiedName:
      CSharp: ShowPreviewOfSlot
      VB: ShowPreviewOfSlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ShowPreviewOfSlot
      path: ''
      startLine: 31142
    syntax:
      content:
        CSharp: 'public class ShowPreviewOfSlot : MonoBehaviour'
        VB: >-
          Public Class ShowPreviewOfSlot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    implements:
    - Global.IPointerEnterHandler
    - Global.IPointerExitHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ShowPreviewOfSlot.shinseiPreviewPanel
      commentId: F:Global.ShowPreviewOfSlot.shinseiPreviewPanel
      language: CSharp
      name:
        CSharp: shinseiPreviewPanel
        VB: shinseiPreviewPanel
      nameWithType:
        CSharp: ShowPreviewOfSlot.shinseiPreviewPanel
        VB: ShowPreviewOfSlot.shinseiPreviewPanel
      qualifiedName:
        CSharp: ShowPreviewOfSlot.shinseiPreviewPanel
        VB: ShowPreviewOfSlot.shinseiPreviewPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: shinseiPreviewPanel
        path: ''
        startLine: 31144
      syntax:
        content:
          CSharp: public ShinseiPreviewPanelManager shinseiPreviewPanel
          VB: Public shinseiPreviewPanel As ShinseiPreviewPanelManager
        return:
          type: Global.ShinseiPreviewPanelManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ShowPreviewOfSlot.OnPointerEnter(PointerEventData)
      commentId: M:Global.ShowPreviewOfSlot.OnPointerEnter(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerEnter(PointerEventData)
        VB: OnPointerEnter(PointerEventData)
      nameWithType:
        CSharp: ShowPreviewOfSlot.OnPointerEnter(PointerEventData)
        VB: ShowPreviewOfSlot.OnPointerEnter(PointerEventData)
      qualifiedName:
        CSharp: ShowPreviewOfSlot.OnPointerEnter(PointerEventData)
        VB: ShowPreviewOfSlot.OnPointerEnter(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerEnter
        path: ''
        startLine: 31146
      syntax:
        content:
          CSharp: public void OnPointerEnter(PointerEventData eventData)
          VB: Public Sub OnPointerEnter(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.ShowPreviewOfSlot.OnPointerEnter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ShowPreviewOfSlot.OnPointerExit(PointerEventData)
      commentId: M:Global.ShowPreviewOfSlot.OnPointerExit(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerExit(PointerEventData)
        VB: OnPointerExit(PointerEventData)
      nameWithType:
        CSharp: ShowPreviewOfSlot.OnPointerExit(PointerEventData)
        VB: ShowPreviewOfSlot.OnPointerExit(PointerEventData)
      qualifiedName:
        CSharp: ShowPreviewOfSlot.OnPointerExit(PointerEventData)
        VB: ShowPreviewOfSlot.OnPointerExit(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnPointerExit
        path: ''
        startLine: 31152
      syntax:
        content:
          CSharp: public void OnPointerExit(PointerEventData eventData)
          VB: Public Sub OnPointerExit(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Global.ShowPreviewOfSlot.OnPointerExit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.TimerService
    commentId: T:Global.TimerService
    language: CSharp
    name:
      CSharp: TimerService
      VB: TimerService
    nameWithType:
      CSharp: TimerService
      VB: TimerService
    qualifiedName:
      CSharp: TimerService
      VB: TimerService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TimerService
      path: ''
      startLine: 31163
    syntax:
      content:
        CSharp: 'public class TimerService : MonoBehaviour, ITimer'
        VB: >-
          Public Class TimerService

              Inherits MonoBehaviour

              Implements ITimer
    inheritance:
    - System.Object
    implements:
    - Global.ITimer
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TimerService.UpdateTimer(System.Single,System.String,System.Boolean)
      commentId: M:Global.TimerService.UpdateTimer(System.Single,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateTimer(Single, String, Boolean)
        VB: UpdateTimer(Single, String, Boolean)
      nameWithType:
        CSharp: TimerService.UpdateTimer(Single, String, Boolean)
        VB: TimerService.UpdateTimer(Single, String, Boolean)
      qualifiedName:
        CSharp: TimerService.UpdateTimer(System.Single, System.String, System.Boolean)
        VB: TimerService.UpdateTimer(System.Single, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: UpdateTimer
        path: ''
        startLine: 31166
      syntax:
        content:
          CSharp: public string UpdateTimer(float timeInSeconds, string colorText = null, bool showHour = false)
          VB: Public Function UpdateTimer(timeInSeconds As Single, colorText As String = Nothing, showHour As Boolean = False) As String
        parameters:
        - id: timeInSeconds
          type: System.Single
        - id: colorText
          type: System.String
        - id: showHour
          type: System.Boolean
        return:
          type: System.String
      overload: Global.TimerService.UpdateTimer*
      implements:
      - Global.ITimer.UpdateTimer(System.Single,System.String,System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TimerService.IsReady
      commentId: M:Global.TimerService.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: TimerService.IsReady()
        VB: TimerService.IsReady()
      qualifiedName:
        CSharp: TimerService.IsReady()
        VB: TimerService.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: IsReady
        path: ''
        startLine: 31181
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Global.TimerService.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.BotPlayfabIdsList
    commentId: T:Global.BotPlayfabIdsList
    language: CSharp
    name:
      CSharp: BotPlayfabIdsList
      VB: BotPlayfabIdsList
    nameWithType:
      CSharp: BotPlayfabIdsList
      VB: BotPlayfabIdsList
    qualifiedName:
      CSharp: BotPlayfabIdsList
      VB: BotPlayfabIdsList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: BotPlayfabIdsList
      path: ''
      startLine: 31231
    syntax:
      content:
        CSharp: 'public class BotPlayfabIdsList : ScriptableObject'
        VB: >-
          Public Class BotPlayfabIdsList

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.BotPlayfabIdsList.playfabIdList
      commentId: F:Global.BotPlayfabIdsList.playfabIdList
      language: CSharp
      name:
        CSharp: playfabIdList
        VB: playfabIdList
      nameWithType:
        CSharp: BotPlayfabIdsList.playfabIdList
        VB: BotPlayfabIdsList.playfabIdList
      qualifiedName:
        CSharp: BotPlayfabIdsList.playfabIdList
        VB: BotPlayfabIdsList.playfabIdList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: playfabIdList
        path: ''
        startLine: 31234
      syntax:
        content:
          CSharp: public List<string> playfabIdList
          VB: Public playfabIdList As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.EndpointsForBots
    commentId: T:Global.EndpointsForBots
    language: CSharp
    name:
      CSharp: EndpointsForBots
      VB: EndpointsForBots
    nameWithType:
      CSharp: EndpointsForBots
      VB: EndpointsForBots
    qualifiedName:
      CSharp: EndpointsForBots
      VB: EndpointsForBots
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: EndpointsForBots
      path: ''
      startLine: 31255
    syntax:
      content:
        CSharp: public static class EndpointsForBots
        VB: Public Module EndpointsForBots
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Global.EndpointsForBots.DELETE_MATCH
      commentId: F:Global.EndpointsForBots.DELETE_MATCH
      language: CSharp
      name:
        CSharp: DELETE_MATCH
        VB: DELETE_MATCH
      nameWithType:
        CSharp: EndpointsForBots.DELETE_MATCH
        VB: EndpointsForBots.DELETE_MATCH
      qualifiedName:
        CSharp: EndpointsForBots.DELETE_MATCH
        VB: EndpointsForBots.DELETE_MATCH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DELETE_MATCH
        path: ''
        startLine: 31257
      syntax:
        content:
          CSharp: public static string DELETE_MATCH
          VB: Public Shared DELETE_MATCH As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.EndpointsForBots.CREATE_MATCH
      commentId: F:Global.EndpointsForBots.CREATE_MATCH
      language: CSharp
      name:
        CSharp: CREATE_MATCH
        VB: CREATE_MATCH
      nameWithType:
        CSharp: EndpointsForBots.CREATE_MATCH
        VB: EndpointsForBots.CREATE_MATCH
      qualifiedName:
        CSharp: EndpointsForBots.CREATE_MATCH
        VB: EndpointsForBots.CREATE_MATCH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CREATE_MATCH
        path: ''
        startLine: 31258
      syntax:
        content:
          CSharp: public static string CREATE_MATCH
          VB: Public Shared CREATE_MATCH As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.EndpointsForBots.SELECT_SHINSEIS
      commentId: F:Global.EndpointsForBots.SELECT_SHINSEIS
      language: CSharp
      name:
        CSharp: SELECT_SHINSEIS
        VB: SELECT_SHINSEIS
      nameWithType:
        CSharp: EndpointsForBots.SELECT_SHINSEIS
        VB: EndpointsForBots.SELECT_SHINSEIS
      qualifiedName:
        CSharp: EndpointsForBots.SELECT_SHINSEIS
        VB: EndpointsForBots.SELECT_SHINSEIS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SELECT_SHINSEIS
        path: ''
        startLine: 31259
      syntax:
        content:
          CSharp: public static string SELECT_SHINSEIS
          VB: Public Shared SELECT_SHINSEIS As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.TestBotController
    commentId: T:Global.TestBotController
    language: CSharp
    name:
      CSharp: TestBotController
      VB: TestBotController
    nameWithType:
      CSharp: TestBotController
      VB: TestBotController
    qualifiedName:
      CSharp: TestBotController
      VB: TestBotController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: TestBotController
      path: ''
      startLine: 31262
    syntax:
      content:
        CSharp: 'public class TestBotController : MonoBehaviour'
        VB: >-
          Public Class TestBotController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.TestBotController.challengePlayerController
      commentId: F:Global.TestBotController.challengePlayerController
      language: CSharp
      name:
        CSharp: challengePlayerController
        VB: challengePlayerController
      nameWithType:
        CSharp: TestBotController.challengePlayerController
        VB: TestBotController.challengePlayerController
      qualifiedName:
        CSharp: TestBotController.challengePlayerController
        VB: TestBotController.challengePlayerController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: challengePlayerController
        path: ''
        startLine: 31266
      syntax:
        content:
          CSharp: public ChallengePlayerController challengePlayerController
          VB: Public challengePlayerController As ChallengePlayerController
        return:
          type: Global.ChallengePlayerController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TestBotController.authController
      commentId: F:Global.TestBotController.authController
      language: CSharp
      name:
        CSharp: authController
        VB: authController
      nameWithType:
        CSharp: TestBotController.authController
        VB: TestBotController.authController
      qualifiedName:
        CSharp: TestBotController.authController
        VB: TestBotController.authController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: authController
        path: ''
        startLine: 31267
      syntax:
        content:
          CSharp: public AuthController authController
          VB: Public authController As AuthController
        return:
          type: Global.AuthController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TestBotController.botPlayfabIdsList
      commentId: F:Global.TestBotController.botPlayfabIdsList
      language: CSharp
      name:
        CSharp: botPlayfabIdsList
        VB: botPlayfabIdsList
      nameWithType:
        CSharp: TestBotController.botPlayfabIdsList
        VB: TestBotController.botPlayfabIdsList
      qualifiedName:
        CSharp: TestBotController.botPlayfabIdsList
        VB: TestBotController.botPlayfabIdsList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: botPlayfabIdsList
        path: ''
        startLine: 31268
      syntax:
        content:
          CSharp: public BotPlayfabIdsList botPlayfabIdsList
          VB: Public botPlayfabIdsList As BotPlayfabIdsList
        return:
          type: Global.BotPlayfabIdsList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TestBotController.localBotIndex
      commentId: F:Global.TestBotController.localBotIndex
      language: CSharp
      name:
        CSharp: localBotIndex
        VB: localBotIndex
      nameWithType:
        CSharp: TestBotController.localBotIndex
        VB: TestBotController.localBotIndex
      qualifiedName:
        CSharp: TestBotController.localBotIndex
        VB: TestBotController.localBotIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: localBotIndex
        path: ''
        startLine: 31269
      syntax:
        content:
          CSharp: public int localBotIndex
          VB: Public localBotIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TestBotController.numberOfBots
      commentId: F:Global.TestBotController.numberOfBots
      language: CSharp
      name:
        CSharp: numberOfBots
        VB: numberOfBots
      nameWithType:
        CSharp: TestBotController.numberOfBots
        VB: TestBotController.numberOfBots
      qualifiedName:
        CSharp: TestBotController.numberOfBots
        VB: TestBotController.numberOfBots
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: numberOfBots
        path: ''
        startLine: 31270
      syntax:
        content:
          CSharp: public int numberOfBots
          VB: Public numberOfBots As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TestBotController.searchTournament
      commentId: F:Global.TestBotController.searchTournament
      language: CSharp
      name:
        CSharp: searchTournament
        VB: searchTournament
      nameWithType:
        CSharp: TestBotController.searchTournament
        VB: TestBotController.searchTournament
      qualifiedName:
        CSharp: TestBotController.searchTournament
        VB: TestBotController.searchTournament
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: searchTournament
        path: ''
        startLine: 31278
      syntax:
        content:
          CSharp: public SearchAndShow searchTournament
          VB: Public searchTournament As SearchAndShow
        return:
          type: Global.SearchAndShow
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TestBotController.tournamentCreationController
      commentId: F:Global.TestBotController.tournamentCreationController
      language: CSharp
      name:
        CSharp: tournamentCreationController
        VB: tournamentCreationController
      nameWithType:
        CSharp: TestBotController.tournamentCreationController
        VB: TestBotController.tournamentCreationController
      qualifiedName:
        CSharp: TestBotController.tournamentCreationController
        VB: TestBotController.tournamentCreationController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: tournamentCreationController
        path: ''
        startLine: 31279
      syntax:
        content:
          CSharp: public TournamentCreationController tournamentCreationController
          VB: Public tournamentCreationController As TournamentCreationController
        return:
          type: Global.TournamentCreationController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TestBotController.timeToWaitForTournamentCreation
      commentId: F:Global.TestBotController.timeToWaitForTournamentCreation
      language: CSharp
      name:
        CSharp: timeToWaitForTournamentCreation
        VB: timeToWaitForTournamentCreation
      nameWithType:
        CSharp: TestBotController.timeToWaitForTournamentCreation
        VB: TestBotController.timeToWaitForTournamentCreation
      qualifiedName:
        CSharp: TestBotController.timeToWaitForTournamentCreation
        VB: TestBotController.timeToWaitForTournamentCreation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: timeToWaitForTournamentCreation
        path: ''
        startLine: 31280
      syntax:
        content:
          CSharp: public float timeToWaitForTournamentCreation
          VB: Public timeToWaitForTournamentCreation As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TestBotController.MAX_NUMBER_OF_BOT
      commentId: F:Global.TestBotController.MAX_NUMBER_OF_BOT
      language: CSharp
      name:
        CSharp: MAX_NUMBER_OF_BOT
        VB: MAX_NUMBER_OF_BOT
      nameWithType:
        CSharp: TestBotController.MAX_NUMBER_OF_BOT
        VB: TestBotController.MAX_NUMBER_OF_BOT
      qualifiedName:
        CSharp: TestBotController.MAX_NUMBER_OF_BOT
        VB: TestBotController.MAX_NUMBER_OF_BOT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MAX_NUMBER_OF_BOT
        path: ''
        startLine: 31281
      syntax:
        content:
          CSharp: public const int MAX_NUMBER_OF_BOT = 64
          VB: Public Const MAX_NUMBER_OF_BOT As Integer = 64
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.TestBotController.Start
      commentId: M:Global.TestBotController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: TestBotController.Start()
        VB: TestBotController.Start()
      qualifiedName:
        CSharp: TestBotController.Start()
        VB: TestBotController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Start
        path: ''
        startLine: 31289
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Global.TestBotController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TestBotController.CreateNewTournament(Action)
      commentId: M:Global.TestBotController.CreateNewTournament(Action)
      language: CSharp
      name:
        CSharp: CreateNewTournament(Action)
        VB: CreateNewTournament(Action)
      nameWithType:
        CSharp: TestBotController.CreateNewTournament(Action)
        VB: TestBotController.CreateNewTournament(Action)
      qualifiedName:
        CSharp: TestBotController.CreateNewTournament(Action)
        VB: TestBotController.CreateNewTournament(Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CreateNewTournament
        path: ''
        startLine: 31423
      syntax:
        content:
          CSharp: public void CreateNewTournament(Action callback = null)
          VB: Public Sub CreateNewTournament(callback As Action = Nothing)
        parameters:
        - id: callback
          type: Global.Action
      overload: Global.TestBotController.CreateNewTournament*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.TestBotController.StartNewMatch
      commentId: M:Global.TestBotController.StartNewMatch
      language: CSharp
      name:
        CSharp: StartNewMatch()
        VB: StartNewMatch()
      nameWithType:
        CSharp: TestBotController.StartNewMatch()
        VB: TestBotController.StartNewMatch()
      qualifiedName:
        CSharp: TestBotController.StartNewMatch()
        VB: TestBotController.StartNewMatch()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StartNewMatch
        path: ''
        startLine: 31437
      syntax:
        content:
          CSharp: public void StartNewMatch()
          VB: Public Sub StartNewMatch
      overload: Global.TestBotController.StartNewMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CharacterColorSlot
    commentId: T:Global.CharacterColorSlot
    language: CSharp
    name:
      CSharp: CharacterColorSlot
      VB: CharacterColorSlot
    nameWithType:
      CSharp: CharacterColorSlot
      VB: CharacterColorSlot
    qualifiedName:
      CSharp: CharacterColorSlot
      VB: CharacterColorSlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CharacterColorSlot
      path: ''
      startLine: 31568
    summary: "\nUI Element that represents a color for character\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CharacterColorSlot : CharacterStyleSlot'
        VB: >-
          Public Class CharacterColorSlot

              Inherits CharacterStyleSlot
    inheritance:
    - System.Object
    - Global.CharacterStyleSlot
    inheritedMembers:
    - Global.CharacterStyleSlot.OnColorSelected
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CharacterColorSlot.colorSlotImage
      commentId: F:Global.CharacterColorSlot.colorSlotImage
      language: CSharp
      name:
        CSharp: colorSlotImage
        VB: colorSlotImage
      nameWithType:
        CSharp: CharacterColorSlot.colorSlotImage
        VB: CharacterColorSlot.colorSlotImage
      qualifiedName:
        CSharp: CharacterColorSlot.colorSlotImage
        VB: CharacterColorSlot.colorSlotImage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: colorSlotImage
        path: ''
        startLine: 31571
      syntax:
        content:
          CSharp: public Image colorSlotImage
          VB: Public colorSlotImage As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterColorSlot.InitSlot``1(``0)
      commentId: M:Global.CharacterColorSlot.InitSlot``1(``0)
      language: CSharp
      name:
        CSharp: InitSlot<T>(T)
        VB: InitSlot(Of T)(T)
      nameWithType:
        CSharp: CharacterColorSlot.InitSlot<T>(T)
        VB: CharacterColorSlot.InitSlot(Of T)(T)
      qualifiedName:
        CSharp: CharacterColorSlot.InitSlot<T>(T)
        VB: CharacterColorSlot.InitSlot(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitSlot
        path: ''
        startLine: 31573
      syntax:
        content:
          CSharp: >-
            public override void InitSlot<T>(T _colorValue)

                where T : CharacterStyleRelation
          VB: Public Overrides Sub InitSlot(Of T As CharacterStyleRelation)(_colorValue As T)
        parameters:
        - id: _colorValue
          type: '{T}'
        typeParameters:
        - id: T
      overload: Global.CharacterColorSlot.InitSlot*
      overridden: Global.CharacterStyleSlot.InitSlot``1({T})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Global.CharacterColorSlot.SelectSlot
      commentId: M:Global.CharacterColorSlot.SelectSlot
      language: CSharp
      name:
        CSharp: SelectSlot()
        VB: SelectSlot()
      nameWithType:
        CSharp: CharacterColorSlot.SelectSlot()
        VB: CharacterColorSlot.SelectSlot()
      qualifiedName:
        CSharp: CharacterColorSlot.SelectSlot()
        VB: CharacterColorSlot.SelectSlot()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SelectSlot
        path: ''
        startLine: 31579
      syntax:
        content:
          CSharp: public void SelectSlot()
          VB: Public Sub SelectSlot
      overload: Global.CharacterColorSlot.SelectSlot*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterColorSlot.SelectLockedSlot
      commentId: M:Global.CharacterColorSlot.SelectLockedSlot
      language: CSharp
      name:
        CSharp: SelectLockedSlot()
        VB: SelectLockedSlot()
      nameWithType:
        CSharp: CharacterColorSlot.SelectLockedSlot()
        VB: CharacterColorSlot.SelectLockedSlot()
      qualifiedName:
        CSharp: CharacterColorSlot.SelectLockedSlot()
        VB: CharacterColorSlot.SelectLockedSlot()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SelectLockedSlot
        path: ''
        startLine: 31584
      syntax:
        content:
          CSharp: public void SelectLockedSlot()
          VB: Public Sub SelectLockedSlot
      overload: Global.CharacterColorSlot.SelectLockedSlot*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CharacterStyleSlot
    commentId: T:Global.CharacterStyleSlot
    language: CSharp
    name:
      CSharp: CharacterStyleSlot
      VB: CharacterStyleSlot
    nameWithType:
      CSharp: CharacterStyleSlot
      VB: CharacterStyleSlot
    qualifiedName:
      CSharp: CharacterStyleSlot
      VB: CharacterStyleSlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CharacterStyleSlot
      path: ''
      startLine: 31590
    syntax:
      content:
        CSharp: 'public abstract class CharacterStyleSlot : MonoBehaviour'
        VB: >-
          Public MustInherit Class CharacterStyleSlot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Global.CharacterStyleSlot.OnColorSelected
      commentId: F:Global.CharacterStyleSlot.OnColorSelected
      language: CSharp
      name:
        CSharp: OnColorSelected
        VB: OnColorSelected
      nameWithType:
        CSharp: CharacterStyleSlot.OnColorSelected
        VB: CharacterStyleSlot.OnColorSelected
      qualifiedName:
        CSharp: CharacterStyleSlot.OnColorSelected
        VB: CharacterStyleSlot.OnColorSelected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnColorSelected
        path: ''
        startLine: 31592
      syntax:
        content:
          CSharp: public Action<CharacterStyleRelation> OnColorSelected
          VB: Public OnColorSelected As Action(Of CharacterStyleRelation)
        return:
          type: Global.Action{CharacterStyleRelation}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterStyleSlot.InitSlot``1(``0)
      commentId: M:Global.CharacterStyleSlot.InitSlot``1(``0)
      language: CSharp
      name:
        CSharp: InitSlot<T>(T)
        VB: InitSlot(Of T)(T)
      nameWithType:
        CSharp: CharacterStyleSlot.InitSlot<T>(T)
        VB: CharacterStyleSlot.InitSlot(Of T)(T)
      qualifiedName:
        CSharp: CharacterStyleSlot.InitSlot<T>(T)
        VB: CharacterStyleSlot.InitSlot(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitSlot
        path: ''
        startLine: 31593
      syntax:
        content:
          CSharp: >-
            public abstract void InitSlot<T>(T _colorValue)

                where T : CharacterStyleRelation
          VB: Public MustOverride Sub InitSlot(Of T As CharacterStyleRelation)(_colorValue As T)
        parameters:
        - id: _colorValue
          type: '{T}'
        typeParameters:
        - id: T
      overload: Global.CharacterStyleSlot.InitSlot*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: Global.CharacterStyleInfo
    commentId: T:Global.CharacterStyleInfo
    language: CSharp
    name:
      CSharp: CharacterStyleInfo
      VB: CharacterStyleInfo
    nameWithType:
      CSharp: CharacterStyleInfo
      VB: CharacterStyleInfo
    qualifiedName:
      CSharp: CharacterStyleInfo
      VB: CharacterStyleInfo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CharacterStyleInfo
      path: ''
      startLine: 31598
    syntax:
      content:
        CSharp: public class CharacterStyleInfo
        VB: Public Class CharacterStyleInfo
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CharacterStyleInfo.presetId
      commentId: F:Global.CharacterStyleInfo.presetId
      language: CSharp
      name:
        CSharp: presetId
        VB: presetId
      nameWithType:
        CSharp: CharacterStyleInfo.presetId
        VB: CharacterStyleInfo.presetId
      qualifiedName:
        CSharp: CharacterStyleInfo.presetId
        VB: CharacterStyleInfo.presetId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: presetId
        path: ''
        startLine: 31601
      syntax:
        content:
          CSharp: public int presetId
          VB: Public presetId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CharacterStyleInfo.colorHex
      commentId: F:Global.CharacterStyleInfo.colorHex
      language: CSharp
      name:
        CSharp: colorHex
        VB: colorHex
      nameWithType:
        CSharp: CharacterStyleInfo.colorHex
        VB: CharacterStyleInfo.colorHex
      qualifiedName:
        CSharp: CharacterStyleInfo.colorHex
        VB: CharacterStyleInfo.colorHex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: colorHex
        path: ''
        startLine: 31602
      syntax:
        content:
          CSharp: public string colorHex
          VB: Public colorHex As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.ColorIdRelation
    commentId: T:Global.ColorIdRelation
    language: CSharp
    name:
      CSharp: ColorIdRelation
      VB: ColorIdRelation
    nameWithType:
      CSharp: ColorIdRelation
      VB: ColorIdRelation
    qualifiedName:
      CSharp: ColorIdRelation
      VB: ColorIdRelation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ColorIdRelation
      path: ''
      startLine: 32109
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ColorIdRelation : CharacterStyleRelation
        VB: >-
          <Serializable>

          Public Class ColorIdRelation

              Inherits CharacterStyleRelation
    inheritance:
    - System.Object
    - Global.CharacterStyleRelation
    inheritedMembers:
    - Global.CharacterStyleRelation.id
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ColorIdRelation.usableOnParts
      commentId: F:Global.ColorIdRelation.usableOnParts
      language: CSharp
      name:
        CSharp: usableOnParts
        VB: usableOnParts
      nameWithType:
        CSharp: ColorIdRelation.usableOnParts
        VB: ColorIdRelation.usableOnParts
      qualifiedName:
        CSharp: ColorIdRelation.usableOnParts
        VB: ColorIdRelation.usableOnParts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: usableOnParts
        path: ''
        startLine: 32112
      syntax:
        content:
          CSharp: public List<PartsOfCharacter> usableOnParts
          VB: Public usableOnParts As List(Of PartsOfCharacter)
        return:
          type: System.Collections.Generic.List{PartsOfCharacter}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ColorIdRelation.color
      commentId: F:Global.ColorIdRelation.color
      language: CSharp
      name:
        CSharp: color
        VB: color
      nameWithType:
        CSharp: ColorIdRelation.color
        VB: ColorIdRelation.color
      qualifiedName:
        CSharp: ColorIdRelation.color
        VB: ColorIdRelation.color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: color
        path: ''
        startLine: 32113
      syntax:
        content:
          CSharp: public Color color
          VB: Public color As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CharacterStyleRelation
    commentId: T:Global.CharacterStyleRelation
    language: CSharp
    name:
      CSharp: CharacterStyleRelation
      VB: CharacterStyleRelation
    nameWithType:
      CSharp: CharacterStyleRelation
      VB: CharacterStyleRelation
    qualifiedName:
      CSharp: CharacterStyleRelation
      VB: CharacterStyleRelation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CharacterStyleRelation
      path: ''
      startLine: 32116
    syntax:
      content:
        CSharp: public class CharacterStyleRelation
        VB: Public Class CharacterStyleRelation
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CharacterStyleRelation.id
      commentId: F:Global.CharacterStyleRelation.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: CharacterStyleRelation.id
        VB: CharacterStyleRelation.id
      qualifiedName:
        CSharp: CharacterStyleRelation.id
        VB: CharacterStyleRelation.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: id
        path: ''
        startLine: 32118
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.PartIdRelation
    commentId: T:Global.PartIdRelation
    language: CSharp
    name:
      CSharp: PartIdRelation
      VB: PartIdRelation
    nameWithType:
      CSharp: PartIdRelation
      VB: PartIdRelation
    qualifiedName:
      CSharp: PartIdRelation
      VB: PartIdRelation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: PartIdRelation
      path: ''
      startLine: 32124
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class PartIdRelation : CharacterStyleRelation
        VB: >-
          <Serializable>

          Public Class PartIdRelation

              Inherits CharacterStyleRelation
    inheritance:
    - System.Object
    - Global.CharacterStyleRelation
    inheritedMembers:
    - Global.CharacterStyleRelation.id
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.PartIdRelation.slotType
      commentId: F:Global.PartIdRelation.slotType
      language: CSharp
      name:
        CSharp: slotType
        VB: slotType
      nameWithType:
        CSharp: PartIdRelation.slotType
        VB: PartIdRelation.slotType
      qualifiedName:
        CSharp: PartIdRelation.slotType
        VB: PartIdRelation.slotType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: slotType
        path: ''
        startLine: 32127
      syntax:
        content:
          CSharp: public PartsOfCharacter slotType
          VB: Public slotType As PartsOfCharacter
        return:
          type: Global.PartsOfCharacter
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIdRelation.name
      commentId: F:Global.PartIdRelation.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: PartIdRelation.name
        VB: PartIdRelation.name
      qualifiedName:
        CSharp: PartIdRelation.name
        VB: PartIdRelation.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: name
        path: ''
        startLine: 32128
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.PartIdRelation.sprite
      commentId: F:Global.PartIdRelation.sprite
      language: CSharp
      name:
        CSharp: sprite
        VB: sprite
      nameWithType:
        CSharp: PartIdRelation.sprite
        VB: PartIdRelation.sprite
      qualifiedName:
        CSharp: PartIdRelation.sprite
        VB: PartIdRelation.sprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: sprite
        path: ''
        startLine: 32129
      syntax:
        content:
          CSharp: public Sprite sprite
          VB: Public sprite As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.SacredTailsLog
    commentId: T:Global.SacredTailsLog
    language: CSharp
    name:
      CSharp: SacredTailsLog
      VB: SacredTailsLog
    nameWithType:
      CSharp: SacredTailsLog
      VB: SacredTailsLog
    qualifiedName:
      CSharp: SacredTailsLog
      VB: SacredTailsLog
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: SacredTailsLog
      path: ''
      startLine: 32465
    syntax:
      content:
        CSharp: public static class SacredTailsLog
        VB: Public Module SacredTailsLog
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Global.SacredTailsLog.isBot
      commentId: F:Global.SacredTailsLog.isBot
      language: CSharp
      name:
        CSharp: isBot
        VB: isBot
      nameWithType:
        CSharp: SacredTailsLog.isBot
        VB: SacredTailsLog.isBot
      qualifiedName:
        CSharp: SacredTailsLog.isBot
        VB: SacredTailsLog.isBot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: isBot
        path: ''
        startLine: 32467
      syntax:
        content:
          CSharp: public static bool isBot
          VB: Public Shared isBot As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.SacredTailsLog.messagesLogged
      commentId: F:Global.SacredTailsLog.messagesLogged
      language: CSharp
      name:
        CSharp: messagesLogged
        VB: messagesLogged
      nameWithType:
        CSharp: SacredTailsLog.messagesLogged
        VB: SacredTailsLog.messagesLogged
      qualifiedName:
        CSharp: SacredTailsLog.messagesLogged
        VB: SacredTailsLog.messagesLogged
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: messagesLogged
        path: ''
        startLine: 32468
      syntax:
        content:
          CSharp: public static List<string> messagesLogged
          VB: Public Shared messagesLogged As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.SacredTailsLog.Init
      commentId: M:Global.SacredTailsLog.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: SacredTailsLog.Init()
        VB: SacredTailsLog.Init()
      qualifiedName:
        CSharp: SacredTailsLog.Init()
        VB: SacredTailsLog.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Init
        path: ''
        startLine: 32469
      syntax:
        content:
          CSharp: public static void Init()
          VB: Public Shared Sub Init
      overload: Global.SacredTailsLog.Init*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.SacredTailsLog.LogMessageForBot(System.String)
      commentId: M:Global.SacredTailsLog.LogMessageForBot(System.String)
      language: CSharp
      name:
        CSharp: LogMessageForBot(String)
        VB: LogMessageForBot(String)
      nameWithType:
        CSharp: SacredTailsLog.LogMessageForBot(String)
        VB: SacredTailsLog.LogMessageForBot(String)
      qualifiedName:
        CSharp: SacredTailsLog.LogMessageForBot(System.String)
        VB: SacredTailsLog.LogMessageForBot(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LogMessageForBot
        path: ''
        startLine: 32479
      syntax:
        content:
          CSharp: public static void LogMessageForBot(string message)
          VB: Public Shared Sub LogMessageForBot(message As String)
        parameters:
        - id: message
          type: System.String
      overload: Global.SacredTailsLog.LogMessageForBot*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.SacredTailsLog.LogErrorMessageForBot(System.String)
      commentId: M:Global.SacredTailsLog.LogErrorMessageForBot(System.String)
      language: CSharp
      name:
        CSharp: LogErrorMessageForBot(String)
        VB: LogErrorMessageForBot(String)
      nameWithType:
        CSharp: SacredTailsLog.LogErrorMessageForBot(String)
        VB: SacredTailsLog.LogErrorMessageForBot(String)
      qualifiedName:
        CSharp: SacredTailsLog.LogErrorMessageForBot(System.String)
        VB: SacredTailsLog.LogErrorMessageForBot(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LogErrorMessageForBot
        path: ''
        startLine: 32483
      syntax:
        content:
          CSharp: public static void LogErrorMessageForBot(string message)
          VB: Public Shared Sub LogErrorMessageForBot(message As String)
        parameters:
        - id: message
          type: System.String
      overload: Global.SacredTailsLog.LogErrorMessageForBot*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.SacredTailsLog.LogMessage(System.String,System.Boolean)
      commentId: M:Global.SacredTailsLog.LogMessage(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: LogMessage(String, Boolean)
        VB: LogMessage(String, Boolean)
      nameWithType:
        CSharp: SacredTailsLog.LogMessage(String, Boolean)
        VB: SacredTailsLog.LogMessage(String, Boolean)
      qualifiedName:
        CSharp: SacredTailsLog.LogMessage(System.String, System.Boolean)
        VB: SacredTailsLog.LogMessage(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LogMessage
        path: ''
        startLine: 32488
      syntax:
        content:
          CSharp: public static void LogMessage(string message, bool botDebug = false)
          VB: Public Shared Sub LogMessage(message As String, botDebug As Boolean = False)
        parameters:
        - id: message
          type: System.String
        - id: botDebug
          type: System.Boolean
      overload: Global.SacredTailsLog.LogMessage*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.SacredTailsLog.LogErrorMessage(System.String,System.Boolean)
      commentId: M:Global.SacredTailsLog.LogErrorMessage(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: LogErrorMessage(String, Boolean)
        VB: LogErrorMessage(String, Boolean)
      nameWithType:
        CSharp: SacredTailsLog.LogErrorMessage(String, Boolean)
        VB: SacredTailsLog.LogErrorMessage(String, Boolean)
      qualifiedName:
        CSharp: SacredTailsLog.LogErrorMessage(System.String, System.Boolean)
        VB: SacredTailsLog.LogErrorMessage(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LogErrorMessage
        path: ''
        startLine: 32497
      syntax:
        content:
          CSharp: public static void LogErrorMessage(string message, bool botDebug = false)
          VB: Public Shared Sub LogErrorMessage(message As String, botDebug As Boolean = False)
        parameters:
        - id: message
          type: System.String
        - id: botDebug
          type: System.Boolean
      overload: Global.SacredTailsLog.LogErrorMessage*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Global.SacredTailsLog.OnEnd(System.Int32)
      commentId: M:Global.SacredTailsLog.OnEnd(System.Int32)
      language: CSharp
      name:
        CSharp: OnEnd(Int32)
        VB: OnEnd(Int32)
      nameWithType:
        CSharp: SacredTailsLog.OnEnd(Int32)
        VB: SacredTailsLog.OnEnd(Int32)
      qualifiedName:
        CSharp: SacredTailsLog.OnEnd(System.Int32)
        VB: SacredTailsLog.OnEnd(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnEnd
        path: ''
        startLine: 32514
      syntax:
        content:
          CSharp: public static void OnEnd(int numberOfBot)
          VB: Public Shared Sub OnEnd(numberOfBot As Integer)
        parameters:
        - id: numberOfBot
          type: System.Int32
      overload: Global.SacredTailsLog.OnEnd*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Global.ChangeIconLeague
    commentId: T:Global.ChangeIconLeague
    language: CSharp
    name:
      CSharp: ChangeIconLeague
      VB: ChangeIconLeague
    nameWithType:
      CSharp: ChangeIconLeague
      VB: ChangeIconLeague
    qualifiedName:
      CSharp: ChangeIconLeague
      VB: ChangeIconLeague
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ChangeIconLeague
      path: ''
      startLine: 33001
    syntax:
      content:
        CSharp: 'public class ChangeIconLeague : MonoBehaviour'
        VB: >-
          Public Class ChangeIconLeague

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ChangeIconLeague.ChangeIconUsingIndex(System.Int32)
      commentId: M:Global.ChangeIconLeague.ChangeIconUsingIndex(System.Int32)
      language: CSharp
      name:
        CSharp: ChangeIconUsingIndex(Int32)
        VB: ChangeIconUsingIndex(Int32)
      nameWithType:
        CSharp: ChangeIconLeague.ChangeIconUsingIndex(Int32)
        VB: ChangeIconLeague.ChangeIconUsingIndex(Int32)
      qualifiedName:
        CSharp: ChangeIconLeague.ChangeIconUsingIndex(System.Int32)
        VB: ChangeIconLeague.ChangeIconUsingIndex(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeIconUsingIndex
        path: ''
        startLine: 33005
      syntax:
        content:
          CSharp: public void ChangeIconUsingIndex(int index)
          VB: Public Sub ChangeIconUsingIndex(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Global.ChangeIconLeague.ChangeIconUsingIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.NewLeaderBoard
    commentId: T:Global.NewLeaderBoard
    language: CSharp
    name:
      CSharp: NewLeaderBoard
      VB: NewLeaderBoard
    nameWithType:
      CSharp: NewLeaderBoard
      VB: NewLeaderBoard
    qualifiedName:
      CSharp: NewLeaderBoard
      VB: NewLeaderBoard
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: NewLeaderBoard
      path: ''
      startLine: 33225
    syntax:
      content:
        CSharp: 'public class NewLeaderBoard : MonoBehaviour'
        VB: >-
          Public Class NewLeaderBoard

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.NewLeaderBoard.ChangeIsRewardWindow(System.Boolean)
      commentId: M:Global.NewLeaderBoard.ChangeIsRewardWindow(System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeIsRewardWindow(Boolean)
        VB: ChangeIsRewardWindow(Boolean)
      nameWithType:
        CSharp: NewLeaderBoard.ChangeIsRewardWindow(Boolean)
        VB: NewLeaderBoard.ChangeIsRewardWindow(Boolean)
      qualifiedName:
        CSharp: NewLeaderBoard.ChangeIsRewardWindow(System.Boolean)
        VB: NewLeaderBoard.ChangeIsRewardWindow(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ChangeIsRewardWindow
        path: ''
        startLine: 33240
      syntax:
        content:
          CSharp: public void ChangeIsRewardWindow(bool _isRewardWindows)
          VB: Public Sub ChangeIsRewardWindow(_isRewardWindows As Boolean)
        parameters:
        - id: _isRewardWindows
          type: System.Boolean
      overload: Global.NewLeaderBoard.ChangeIsRewardWindow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.NewLeaderBoard.DrawList(System.Collections.Generic.List{LeaderboardElement.ElementData})
      commentId: M:Global.NewLeaderBoard.DrawList(System.Collections.Generic.List{LeaderboardElement.ElementData})
      language: CSharp
      name:
        CSharp: DrawList(List<LeaderboardElement.ElementData>)
        VB: DrawList(List(Of LeaderboardElement.ElementData))
      nameWithType:
        CSharp: NewLeaderBoard.DrawList(List<LeaderboardElement.ElementData>)
        VB: NewLeaderBoard.DrawList(List(Of LeaderboardElement.ElementData))
      qualifiedName:
        CSharp: NewLeaderBoard.DrawList(System.Collections.Generic.List<LeaderboardElement.ElementData>)
        VB: NewLeaderBoard.DrawList(System.Collections.Generic.List(Of LeaderboardElement.ElementData))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DrawList
        path: ''
        startLine: 33280
      syntax:
        content:
          CSharp: public void DrawList(List<LeaderboardElement.ElementData> elements)
          VB: Public Sub DrawList(elements As List(Of LeaderboardElement.ElementData))
        parameters:
        - id: elements
          type: System.Collections.Generic.List{LeaderboardElement.ElementData}
      overload: Global.NewLeaderBoard.DrawList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.NewLeaderBoard.GetListOfDivision(System.Int32)
      commentId: M:Global.NewLeaderBoard.GetListOfDivision(System.Int32)
      language: CSharp
      name:
        CSharp: GetListOfDivision(Int32)
        VB: GetListOfDivision(Int32)
      nameWithType:
        CSharp: NewLeaderBoard.GetListOfDivision(Int32)
        VB: NewLeaderBoard.GetListOfDivision(Int32)
      qualifiedName:
        CSharp: NewLeaderBoard.GetListOfDivision(System.Int32)
        VB: NewLeaderBoard.GetListOfDivision(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GetListOfDivision
        path: ''
        startLine: 33304
      syntax:
        content:
          CSharp: public void GetListOfDivision(int divisionIndex)
          VB: Public Sub GetListOfDivision(divisionIndex As Integer)
        parameters:
        - id: divisionIndex
          type: System.Int32
      overload: Global.NewLeaderBoard.GetListOfDivision*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.NewLeaderBoard.StatisticRecursiveSearch(PlayFab.ClientModels.GetLeaderboardResult,System.String,System.Int32,Action{PlayFab.ClientModels.GetLeaderboardResult},Action)
      commentId: M:Global.NewLeaderBoard.StatisticRecursiveSearch(PlayFab.ClientModels.GetLeaderboardResult,System.String,System.Int32,Action{PlayFab.ClientModels.GetLeaderboardResult},Action)
      language: CSharp
      name:
        CSharp: StatisticRecursiveSearch(PlayFab.ClientModels.GetLeaderboardResult, String, Int32, Action<PlayFab.ClientModels.GetLeaderboardResult>, Action)
        VB: StatisticRecursiveSearch(PlayFab.ClientModels.GetLeaderboardResult, String, Int32, Action(Of PlayFab.ClientModels.GetLeaderboardResult), Action)
      nameWithType:
        CSharp: NewLeaderBoard.StatisticRecursiveSearch(PlayFab.ClientModels.GetLeaderboardResult, String, Int32, Action<PlayFab.ClientModels.GetLeaderboardResult>, Action)
        VB: NewLeaderBoard.StatisticRecursiveSearch(PlayFab.ClientModels.GetLeaderboardResult, String, Int32, Action(Of PlayFab.ClientModels.GetLeaderboardResult), Action)
      qualifiedName:
        CSharp: NewLeaderBoard.StatisticRecursiveSearch(PlayFab.ClientModels.GetLeaderboardResult, System.String, System.Int32, Action<PlayFab.ClientModels.GetLeaderboardResult>, Action)
        VB: NewLeaderBoard.StatisticRecursiveSearch(PlayFab.ClientModels.GetLeaderboardResult, System.String, System.Int32, Action(Of PlayFab.ClientModels.GetLeaderboardResult), Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: StatisticRecursiveSearch
        path: ''
        startLine: 33364
      syntax:
        content:
          CSharp: public void StatisticRecursiveSearch(PlayFab.ClientModels.GetLeaderboardResult result, string division, int iterationNumber, Action<PlayFab.ClientModels.GetLeaderboardResult> Callback, Action OnLastIteration = null)
          VB: Public Sub StatisticRecursiveSearch(result As PlayFab.ClientModels.GetLeaderboardResult, division As String, iterationNumber As Integer, Callback As Action(Of PlayFab.ClientModels.GetLeaderboardResult), OnLastIteration As Action = Nothing)
        parameters:
        - id: result
          type: Global.PlayFab.ClientModels.GetLeaderboardResult
        - id: division
          type: System.String
        - id: iterationNumber
          type: System.Int32
        - id: Callback
          type: Global.Action{PlayFab.ClientModels.GetLeaderboardResult}
        - id: OnLastIteration
          type: Global.Action
      overload: Global.NewLeaderBoard.StatisticRecursiveSearch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.NewLeaderBoard.ProcessDivisionList(PlayFab.ClientModels.GetLeaderboardResult)
      commentId: M:Global.NewLeaderBoard.ProcessDivisionList(PlayFab.ClientModels.GetLeaderboardResult)
      language: CSharp
      name:
        CSharp: ProcessDivisionList(PlayFab.ClientModels.GetLeaderboardResult)
        VB: ProcessDivisionList(PlayFab.ClientModels.GetLeaderboardResult)
      nameWithType:
        CSharp: NewLeaderBoard.ProcessDivisionList(PlayFab.ClientModels.GetLeaderboardResult)
        VB: NewLeaderBoard.ProcessDivisionList(PlayFab.ClientModels.GetLeaderboardResult)
      qualifiedName:
        CSharp: NewLeaderBoard.ProcessDivisionList(PlayFab.ClientModels.GetLeaderboardResult)
        VB: NewLeaderBoard.ProcessDivisionList(PlayFab.ClientModels.GetLeaderboardResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ProcessDivisionList
        path: ''
        startLine: 33382
      syntax:
        content:
          CSharp: public void ProcessDivisionList(PlayFab.ClientModels.GetLeaderboardResult result)
          VB: Public Sub ProcessDivisionList(result As PlayFab.ClientModels.GetLeaderboardResult)
        parameters:
        - id: result
          type: Global.PlayFab.ClientModels.GetLeaderboardResult
      overload: Global.NewLeaderBoard.ProcessDivisionList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.NewLeaderBoard.ProcessVictorieList(PlayFab.ClientModels.GetLeaderboardResult)
      commentId: M:Global.NewLeaderBoard.ProcessVictorieList(PlayFab.ClientModels.GetLeaderboardResult)
      language: CSharp
      name:
        CSharp: ProcessVictorieList(PlayFab.ClientModels.GetLeaderboardResult)
        VB: ProcessVictorieList(PlayFab.ClientModels.GetLeaderboardResult)
      nameWithType:
        CSharp: NewLeaderBoard.ProcessVictorieList(PlayFab.ClientModels.GetLeaderboardResult)
        VB: NewLeaderBoard.ProcessVictorieList(PlayFab.ClientModels.GetLeaderboardResult)
      qualifiedName:
        CSharp: NewLeaderBoard.ProcessVictorieList(PlayFab.ClientModels.GetLeaderboardResult)
        VB: NewLeaderBoard.ProcessVictorieList(PlayFab.ClientModels.GetLeaderboardResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ProcessVictorieList
        path: ''
        startLine: 33394
      syntax:
        content:
          CSharp: public void ProcessVictorieList(PlayFab.ClientModels.GetLeaderboardResult result)
          VB: Public Sub ProcessVictorieList(result As PlayFab.ClientModels.GetLeaderboardResult)
        parameters:
        - id: result
          type: Global.PlayFab.ClientModels.GetLeaderboardResult
      overload: Global.NewLeaderBoard.ProcessVictorieList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.NewLeaderBoard.Division
    commentId: T:Global.NewLeaderBoard.Division
    language: CSharp
    name:
      CSharp: NewLeaderBoard.Division
      VB: NewLeaderBoard.Division
    nameWithType:
      CSharp: NewLeaderBoard.Division
      VB: NewLeaderBoard.Division
    qualifiedName:
      CSharp: NewLeaderBoard.Division
      VB: NewLeaderBoard.Division
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: Division
      path: ''
      startLine: 33404
    syntax:
      content:
        CSharp: public enum Division
        VB: Public Enum Division
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.NewLeaderBoard.Division.Bronze
      commentId: F:Global.NewLeaderBoard.Division.Bronze
      language: CSharp
      name:
        CSharp: Bronze
        VB: Bronze
      nameWithType:
        CSharp: NewLeaderBoard.Division.Bronze
        VB: NewLeaderBoard.Division.Bronze
      qualifiedName:
        CSharp: NewLeaderBoard.Division.Bronze
        VB: NewLeaderBoard.Division.Bronze
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Bronze
        path: ''
        startLine: 33406
      syntax:
        content:
          CSharp: Bronze = 0
          VB: Bronze = 0
        return:
          type: Global.NewLeaderBoard.Division
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.NewLeaderBoard.Division.Silver
      commentId: F:Global.NewLeaderBoard.Division.Silver
      language: CSharp
      name:
        CSharp: Silver
        VB: Silver
      nameWithType:
        CSharp: NewLeaderBoard.Division.Silver
        VB: NewLeaderBoard.Division.Silver
      qualifiedName:
        CSharp: NewLeaderBoard.Division.Silver
        VB: NewLeaderBoard.Division.Silver
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Silver
        path: ''
        startLine: 33407
      syntax:
        content:
          CSharp: Silver = 1
          VB: Silver = 1
        return:
          type: Global.NewLeaderBoard.Division
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.NewLeaderBoard.Division.Gold
      commentId: F:Global.NewLeaderBoard.Division.Gold
      language: CSharp
      name:
        CSharp: Gold
        VB: Gold
      nameWithType:
        CSharp: NewLeaderBoard.Division.Gold
        VB: NewLeaderBoard.Division.Gold
      qualifiedName:
        CSharp: NewLeaderBoard.Division.Gold
        VB: NewLeaderBoard.Division.Gold
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Gold
        path: ''
        startLine: 33408
      syntax:
        content:
          CSharp: Gold = 2
          VB: Gold = 2
        return:
          type: Global.NewLeaderBoard.Division
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.NewLeaderBoard.Division.Champion
      commentId: F:Global.NewLeaderBoard.Division.Champion
      language: CSharp
      name:
        CSharp: Champion
        VB: Champion
      nameWithType:
        CSharp: NewLeaderBoard.Division.Champion
        VB: NewLeaderBoard.Division.Champion
      qualifiedName:
        CSharp: NewLeaderBoard.Division.Champion
        VB: NewLeaderBoard.Division.Champion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Champion
        path: ''
        startLine: 33409
      syntax:
        content:
          CSharp: Champion = 3
          VB: Champion = 3
        return:
          type: Global.NewLeaderBoard.Division
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.RewardsRankingSystemController
    commentId: T:Global.RewardsRankingSystemController
    language: CSharp
    name:
      CSharp: RewardsRankingSystemController
      VB: RewardsRankingSystemController
    nameWithType:
      CSharp: RewardsRankingSystemController
      VB: RewardsRankingSystemController
    qualifiedName:
      CSharp: RewardsRankingSystemController
      VB: RewardsRankingSystemController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RewardsRankingSystemController
      path: ''
      startLine: 33424
    syntax:
      content:
        CSharp: 'public class RewardsRankingSystemController : MonoBehaviour'
        VB: >-
          Public Class RewardsRankingSystemController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RewardsRankingSystemController.container
      commentId: F:Global.RewardsRankingSystemController.container
      language: CSharp
      name:
        CSharp: container
        VB: container
      nameWithType:
        CSharp: RewardsRankingSystemController.container
        VB: RewardsRankingSystemController.container
      qualifiedName:
        CSharp: RewardsRankingSystemController.container
        VB: RewardsRankingSystemController.container
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: container
        path: ''
        startLine: 33426
      syntax:
        content:
          CSharp: public Transform container
          VB: Public container As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RewardsRankingSystemController.rowPrefab
      commentId: F:Global.RewardsRankingSystemController.rowPrefab
      language: CSharp
      name:
        CSharp: rowPrefab
        VB: rowPrefab
      nameWithType:
        CSharp: RewardsRankingSystemController.rowPrefab
        VB: RewardsRankingSystemController.rowPrefab
      qualifiedName:
        CSharp: RewardsRankingSystemController.rowPrefab
        VB: RewardsRankingSystemController.rowPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rowPrefab
        path: ''
        startLine: 33427
      syntax:
        content:
          CSharp: public GameObject rowPrefab
          VB: Public rowPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RewardsRankingSystemController.prefabEntry
      commentId: F:Global.RewardsRankingSystemController.prefabEntry
      language: CSharp
      name:
        CSharp: prefabEntry
        VB: prefabEntry
      nameWithType:
        CSharp: RewardsRankingSystemController.prefabEntry
        VB: RewardsRankingSystemController.prefabEntry
      qualifiedName:
        CSharp: RewardsRankingSystemController.prefabEntry
        VB: RewardsRankingSystemController.prefabEntry
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: prefabEntry
        path: ''
        startLine: 33428
      syntax:
        content:
          CSharp: public EntryController prefabEntry
          VB: Public prefabEntry As EntryController
        return:
          type: Global.EntryController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RewardsRankingSystemController.InitRewardSystem(Division)
      commentId: M:Global.RewardsRankingSystemController.InitRewardSystem(Division)
      language: CSharp
      name:
        CSharp: InitRewardSystem(Division)
        VB: InitRewardSystem(Division)
      nameWithType:
        CSharp: RewardsRankingSystemController.InitRewardSystem(Division)
        VB: RewardsRankingSystemController.InitRewardSystem(Division)
      qualifiedName:
        CSharp: RewardsRankingSystemController.InitRewardSystem(Division)
        VB: RewardsRankingSystemController.InitRewardSystem(Division)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: InitRewardSystem
        path: ''
        startLine: 33429
      syntax:
        content:
          CSharp: public void InitRewardSystem(Division rewardSystem)
          VB: Public Sub InitRewardSystem(rewardSystem As Division)
        parameters:
        - id: rewardSystem
          type: Global.Division
      overload: Global.RewardsRankingSystemController.InitRewardSystem*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.RankRewardDto
    commentId: T:Global.RankRewardDto
    language: CSharp
    name:
      CSharp: RankRewardDto
      VB: RankRewardDto
    nameWithType:
      CSharp: RankRewardDto
      VB: RankRewardDto
    qualifiedName:
      CSharp: RankRewardDto
      VB: RankRewardDto
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RankRewardDto
      path: ''
      startLine: 33490
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class RankRewardDto
        VB: >-
          <Serializable>

          Public Class RankRewardDto
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RankRewardDto.Bronze
      commentId: F:Global.RankRewardDto.Bronze
      language: CSharp
      name:
        CSharp: Bronze
        VB: Bronze
      nameWithType:
        CSharp: RankRewardDto.Bronze
        VB: RankRewardDto.Bronze
      qualifiedName:
        CSharp: RankRewardDto.Bronze
        VB: RankRewardDto.Bronze
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Bronze
        path: ''
        startLine: 33493
      syntax:
        content:
          CSharp: public List<RankRewardEntry> Bronze
          VB: Public Bronze As List(Of RankRewardEntry)
        return:
          type: System.Collections.Generic.List{RankRewardEntry}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RankRewardDto.Silver
      commentId: F:Global.RankRewardDto.Silver
      language: CSharp
      name:
        CSharp: Silver
        VB: Silver
      nameWithType:
        CSharp: RankRewardDto.Silver
        VB: RankRewardDto.Silver
      qualifiedName:
        CSharp: RankRewardDto.Silver
        VB: RankRewardDto.Silver
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Silver
        path: ''
        startLine: 33494
      syntax:
        content:
          CSharp: public List<RankRewardEntry> Silver
          VB: Public Silver As List(Of RankRewardEntry)
        return:
          type: System.Collections.Generic.List{RankRewardEntry}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RankRewardDto.Gold
      commentId: F:Global.RankRewardDto.Gold
      language: CSharp
      name:
        CSharp: Gold
        VB: Gold
      nameWithType:
        CSharp: RankRewardDto.Gold
        VB: RankRewardDto.Gold
      qualifiedName:
        CSharp: RankRewardDto.Gold
        VB: RankRewardDto.Gold
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Gold
        path: ''
        startLine: 33495
      syntax:
        content:
          CSharp: public List<RankRewardEntry> Gold
          VB: Public Gold As List(Of RankRewardEntry)
        return:
          type: System.Collections.Generic.List{RankRewardEntry}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RankRewardDto.Champion
      commentId: F:Global.RankRewardDto.Champion
      language: CSharp
      name:
        CSharp: Champion
        VB: Champion
      nameWithType:
        CSharp: RankRewardDto.Champion
        VB: RankRewardDto.Champion
      qualifiedName:
        CSharp: RankRewardDto.Champion
        VB: RankRewardDto.Champion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Champion
        path: ''
        startLine: 33496
      syntax:
        content:
          CSharp: public List<RankRewardEntry> Champion
          VB: Public Champion As List(Of RankRewardEntry)
        return:
          type: System.Collections.Generic.List{RankRewardEntry}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.RankRewardEntry
    commentId: T:Global.RankRewardEntry
    language: CSharp
    name:
      CSharp: RankRewardEntry
      VB: RankRewardEntry
    nameWithType:
      CSharp: RankRewardEntry
      VB: RankRewardEntry
    qualifiedName:
      CSharp: RankRewardEntry
      VB: RankRewardEntry
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RankRewardEntry
      path: ''
      startLine: 33499
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class RankRewardEntry
        VB: >-
          <Serializable>

          Public Class RankRewardEntry
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RankRewardEntry.position
      commentId: F:Global.RankRewardEntry.position
      language: CSharp
      name:
        CSharp: position
        VB: position
      nameWithType:
        CSharp: RankRewardEntry.position
        VB: RankRewardEntry.position
      qualifiedName:
        CSharp: RankRewardEntry.position
        VB: RankRewardEntry.position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: position
        path: ''
        startLine: 33502
      syntax:
        content:
          CSharp: public int? position
          VB: Public position As Integer?
        return:
          type: System.Nullable{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RankRewardEntry.thresholdUp
      commentId: F:Global.RankRewardEntry.thresholdUp
      language: CSharp
      name:
        CSharp: thresholdUp
        VB: thresholdUp
      nameWithType:
        CSharp: RankRewardEntry.thresholdUp
        VB: RankRewardEntry.thresholdUp
      qualifiedName:
        CSharp: RankRewardEntry.thresholdUp
        VB: RankRewardEntry.thresholdUp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: thresholdUp
        path: ''
        startLine: 33503
      syntax:
        content:
          CSharp: public float thresholdUp
          VB: Public thresholdUp As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RankRewardEntry.thresholdDown
      commentId: F:Global.RankRewardEntry.thresholdDown
      language: CSharp
      name:
        CSharp: thresholdDown
        VB: thresholdDown
      nameWithType:
        CSharp: RankRewardEntry.thresholdDown
        VB: RankRewardEntry.thresholdDown
      qualifiedName:
        CSharp: RankRewardEntry.thresholdDown
        VB: RankRewardEntry.thresholdDown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: thresholdDown
        path: ''
        startLine: 33504
      syntax:
        content:
          CSharp: public float thresholdDown
          VB: Public thresholdDown As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RankRewardEntry.rewards
      commentId: F:Global.RankRewardEntry.rewards
      language: CSharp
      name:
        CSharp: rewards
        VB: rewards
      nameWithType:
        CSharp: RankRewardEntry.rewards
        VB: RankRewardEntry.rewards
      qualifiedName:
        CSharp: RankRewardEntry.rewards
        VB: RankRewardEntry.rewards
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: rewards
        path: ''
        startLine: 33505
      syntax:
        content:
          CSharp: public List<RewardEntry> rewards
          VB: Public rewards As List(Of RewardEntry)
        return:
          type: System.Collections.Generic.List{RewardEntry}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.RewardEntry
    commentId: T:Global.RewardEntry
    language: CSharp
    name:
      CSharp: RewardEntry
      VB: RewardEntry
    nameWithType:
      CSharp: RewardEntry
      VB: RewardEntry
    qualifiedName:
      CSharp: RewardEntry
      VB: RewardEntry
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: RewardEntry
      path: ''
      startLine: 33508
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class RewardEntry
        VB: >-
          <Serializable>

          Public Class RewardEntry
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.RewardEntry.type
      commentId: F:Global.RewardEntry.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: RewardEntry.type
        VB: RewardEntry.type
      qualifiedName:
        CSharp: RewardEntry.type
        VB: RewardEntry.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: type
        path: ''
        startLine: 33511
      syntax:
        content:
          CSharp: public string type
          VB: Public type As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.RewardEntry.amount
      commentId: F:Global.RewardEntry.amount
      language: CSharp
      name:
        CSharp: amount
        VB: amount
      nameWithType:
        CSharp: RewardEntry.amount
        VB: RewardEntry.amount
      qualifiedName:
        CSharp: RewardEntry.amount
        VB: RewardEntry.amount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: amount
        path: ''
        startLine: 33512
      syntax:
        content:
          CSharp: public int amount
          VB: Public amount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.DemoScenesNavigation
    commentId: T:Global.DemoScenesNavigation
    language: CSharp
    name:
      CSharp: DemoScenesNavigation
      VB: DemoScenesNavigation
    nameWithType:
      CSharp: DemoScenesNavigation
      VB: DemoScenesNavigation
    qualifiedName:
      CSharp: DemoScenesNavigation
      VB: DemoScenesNavigation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DemoScenesNavigation
      path: ''
      startLine: 34060
    syntax:
      content:
        CSharp: 'public class DemoScenesNavigation : MonoBehaviour'
        VB: >-
          Public Class DemoScenesNavigation

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.DummyMainMenuNavigation
    commentId: T:Global.DummyMainMenuNavigation
    language: CSharp
    name:
      CSharp: DummyMainMenuNavigation
      VB: DummyMainMenuNavigation
    nameWithType:
      CSharp: DummyMainMenuNavigation
      VB: DummyMainMenuNavigation
    qualifiedName:
      CSharp: DummyMainMenuNavigation
      VB: DummyMainMenuNavigation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: DummyMainMenuNavigation
      path: ''
      startLine: 34078
    syntax:
      content:
        CSharp: 'public class DummyMainMenuNavigation : MonoBehaviour'
        VB: >-
          Public Class DummyMainMenuNavigation

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.AuthPanel
    commentId: T:Global.AuthPanel
    language: CSharp
    name:
      CSharp: AuthPanel
      VB: AuthPanel
    nameWithType:
      CSharp: AuthPanel
      VB: AuthPanel
    qualifiedName:
      CSharp: AuthPanel
      VB: AuthPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AuthPanel
      path: ''
      startLine: 34321
    syntax:
      content:
        CSharp: public class AuthPanel
        VB: Public Class AuthPanel
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.AuthPanel.authPanelType
      commentId: F:Global.AuthPanel.authPanelType
      language: CSharp
      name:
        CSharp: authPanelType
        VB: authPanelType
      nameWithType:
        CSharp: AuthPanel.authPanelType
        VB: AuthPanel.authPanelType
      qualifiedName:
        CSharp: AuthPanel.authPanelType
        VB: AuthPanel.authPanelType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: authPanelType
        path: ''
        startLine: 34323
      syntax:
        content:
          CSharp: public List<AuthPanelType> authPanelType
          VB: Public authPanelType As List(Of AuthPanelType)
        return:
          type: System.Collections.Generic.List{AuthPanelType}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.AuthPanel.panelItem
      commentId: F:Global.AuthPanel.panelItem
      language: CSharp
      name:
        CSharp: panelItem
        VB: panelItem
      nameWithType:
        CSharp: AuthPanel.panelItem
        VB: AuthPanel.panelItem
      qualifiedName:
        CSharp: AuthPanel.panelItem
        VB: AuthPanel.panelItem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: panelItem
        path: ''
        startLine: 34324
      syntax:
        content:
          CSharp: public Transform panelItem
          VB: Public panelItem As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.AuthPanelType
    commentId: T:Global.AuthPanelType
    language: CSharp
    name:
      CSharp: AuthPanelType
      VB: AuthPanelType
    nameWithType:
      CSharp: AuthPanelType
      VB: AuthPanelType
    qualifiedName:
      CSharp: AuthPanelType
      VB: AuthPanelType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: AuthPanelType
      path: ''
      startLine: 34327
    syntax:
      content:
        CSharp: public enum AuthPanelType
        VB: Public Enum AuthPanelType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.AuthPanelType.SIGN_UP
      commentId: F:Global.AuthPanelType.SIGN_UP
      language: CSharp
      name:
        CSharp: SIGN_UP
        VB: SIGN_UP
      nameWithType:
        CSharp: AuthPanelType.SIGN_UP
        VB: AuthPanelType.SIGN_UP
      qualifiedName:
        CSharp: AuthPanelType.SIGN_UP
        VB: AuthPanelType.SIGN_UP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SIGN_UP
        path: ''
        startLine: 34329
      syntax:
        content:
          CSharp: SIGN_UP = 0
          VB: SIGN_UP = 0
        return:
          type: Global.AuthPanelType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.AuthPanelType.LOGIN
      commentId: F:Global.AuthPanelType.LOGIN
      language: CSharp
      name:
        CSharp: LOGIN
        VB: LOGIN
      nameWithType:
        CSharp: AuthPanelType.LOGIN
        VB: AuthPanelType.LOGIN
      qualifiedName:
        CSharp: AuthPanelType.LOGIN
        VB: AuthPanelType.LOGIN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LOGIN
        path: ''
        startLine: 34330
      syntax:
        content:
          CSharp: LOGIN = 1
          VB: LOGIN = 1
        return:
          type: Global.AuthPanelType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.AuthPanelType.FORGOT_PASSWORD
      commentId: F:Global.AuthPanelType.FORGOT_PASSWORD
      language: CSharp
      name:
        CSharp: FORGOT_PASSWORD
        VB: FORGOT_PASSWORD
      nameWithType:
        CSharp: AuthPanelType.FORGOT_PASSWORD
        VB: AuthPanelType.FORGOT_PASSWORD
      qualifiedName:
        CSharp: AuthPanelType.FORGOT_PASSWORD
        VB: AuthPanelType.FORGOT_PASSWORD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FORGOT_PASSWORD
        path: ''
        startLine: 34331
      syntax:
        content:
          CSharp: FORGOT_PASSWORD = 2
          VB: FORGOT_PASSWORD = 2
        return:
          type: Global.AuthPanelType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.CreateBotsController
    commentId: T:Global.CreateBotsController
    language: CSharp
    name:
      CSharp: CreateBotsController
      VB: CreateBotsController
    nameWithType:
      CSharp: CreateBotsController
      VB: CreateBotsController
    qualifiedName:
      CSharp: CreateBotsController
      VB: CreateBotsController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CreateBotsController
      path: ''
      startLine: 34341
    syntax:
      content:
        CSharp: 'public class CreateBotsController : MonoBehaviour'
        VB: >-
          Public Class CreateBotsController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.CreateBotsController.lastBotIndex
      commentId: F:Global.CreateBotsController.lastBotIndex
      language: CSharp
      name:
        CSharp: lastBotIndex
        VB: lastBotIndex
      nameWithType:
        CSharp: CreateBotsController.lastBotIndex
        VB: CreateBotsController.lastBotIndex
      qualifiedName:
        CSharp: CreateBotsController.lastBotIndex
        VB: CreateBotsController.lastBotIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: lastBotIndex
        path: ''
        startLine: 34344
      syntax:
        content:
          CSharp: public int lastBotIndex
          VB: Public lastBotIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CreateBotsController.numberOfBotsToCreate
      commentId: F:Global.CreateBotsController.numberOfBotsToCreate
      language: CSharp
      name:
        CSharp: numberOfBotsToCreate
        VB: numberOfBotsToCreate
      nameWithType:
        CSharp: CreateBotsController.numberOfBotsToCreate
        VB: CreateBotsController.numberOfBotsToCreate
      qualifiedName:
        CSharp: CreateBotsController.numberOfBotsToCreate
        VB: CreateBotsController.numberOfBotsToCreate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: numberOfBotsToCreate
        path: ''
        startLine: 34345
      syntax:
        content:
          CSharp: public int numberOfBotsToCreate
          VB: Public numberOfBotsToCreate As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CreateBotsController.botPlayfabIdsList
      commentId: F:Global.CreateBotsController.botPlayfabIdsList
      language: CSharp
      name:
        CSharp: botPlayfabIdsList
        VB: botPlayfabIdsList
      nameWithType:
        CSharp: CreateBotsController.botPlayfabIdsList
        VB: CreateBotsController.botPlayfabIdsList
      qualifiedName:
        CSharp: CreateBotsController.botPlayfabIdsList
        VB: CreateBotsController.botPlayfabIdsList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: botPlayfabIdsList
        path: ''
        startLine: 34347
      syntax:
        content:
          CSharp: public BotPlayfabIdsList botPlayfabIdsList
          VB: Public botPlayfabIdsList As BotPlayfabIdsList
        return:
          type: Global.BotPlayfabIdsList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CreateBotsController.Start
      commentId: M:Global.CreateBotsController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: CreateBotsController.Start()
        VB: CreateBotsController.Start()
      qualifiedName:
        CSharp: CreateBotsController.Start()
        VB: CreateBotsController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Start
        path: ''
        startLine: 34349
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Global.CreateBotsController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CreateBotsController.SetInitNumber
      commentId: M:Global.CreateBotsController.SetInitNumber
      language: CSharp
      name:
        CSharp: SetInitNumber()
        VB: SetInitNumber()
      nameWithType:
        CSharp: CreateBotsController.SetInitNumber()
        VB: CreateBotsController.SetInitNumber()
      qualifiedName:
        CSharp: CreateBotsController.SetInitNumber()
        VB: CreateBotsController.SetInitNumber()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SetInitNumber
        path: ''
        startLine: 34354
      syntax:
        content:
          CSharp: public void SetInitNumber()
          VB: Public Sub SetInitNumber
      overload: Global.CreateBotsController.SetInitNumber*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CreateBotsController.CreateBots
      commentId: M:Global.CreateBotsController.CreateBots
      language: CSharp
      name:
        CSharp: CreateBots()
        VB: CreateBots()
      nameWithType:
        CSharp: CreateBotsController.CreateBots()
        VB: CreateBotsController.CreateBots()
      qualifiedName:
        CSharp: CreateBotsController.CreateBots()
        VB: CreateBotsController.CreateBots()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CreateBots
        path: ''
        startLine: 34360
      syntax:
        content:
          CSharp: public void CreateBots()
          VB: Public Sub CreateBots
      overload: Global.CreateBotsController.CreateBots*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.CreateBotsController.SignUp(System.String,System.String,System.String)
      commentId: M:Global.CreateBotsController.SignUp(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: SignUp(String, String, String)
        VB: SignUp(String, String, String)
      nameWithType:
        CSharp: CreateBotsController.SignUp(String, String, String)
        VB: CreateBotsController.SignUp(String, String, String)
      qualifiedName:
        CSharp: CreateBotsController.SignUp(System.String, System.String, System.String)
        VB: CreateBotsController.SignUp(System.String, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SignUp
        path: ''
        startLine: 34367
      syntax:
        content:
          CSharp: public void SignUp(string userName, string userEmail, string password)
          VB: Public Sub SignUp(userName As String, userEmail As String, password As String)
        parameters:
        - id: userName
          type: System.String
        - id: userEmail
          type: System.String
        - id: password
          type: System.String
      overload: Global.CreateBotsController.SignUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.UIColorSwapper
    commentId: T:Global.UIColorSwapper
    language: CSharp
    name:
      CSharp: UIColorSwapper
      VB: UIColorSwapper
    nameWithType:
      CSharp: UIColorSwapper
      VB: UIColorSwapper
    qualifiedName:
      CSharp: UIColorSwapper
      VB: UIColorSwapper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: UIColorSwapper
      path: ''
      startLine: 34511
    syntax:
      content:
        CSharp: 'public class UIColorSwapper : MonoBehaviour'
        VB: >-
          Public Class UIColorSwapper

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Global.LobbyChatView
    commentId: T:Global.LobbyChatView
    language: CSharp
    name:
      CSharp: LobbyChatView
      VB: LobbyChatView
    nameWithType:
      CSharp: LobbyChatView
      VB: LobbyChatView
    qualifiedName:
      CSharp: LobbyChatView
      VB: LobbyChatView
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: LobbyChatView
      path: ''
      startLine: 34868
    syntax:
      content:
        CSharp: 'public class LobbyChatView : MonoBehaviour'
        VB: >-
          Public Class LobbyChatView

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    implements:
    - Global.ILobbyChatViewable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.LobbyChatView.OnSendMessage
      commentId: P:Global.LobbyChatView.OnSendMessage
      language: CSharp
      name:
        CSharp: OnSendMessage
        VB: OnSendMessage
      nameWithType:
        CSharp: LobbyChatView.OnSendMessage
        VB: LobbyChatView.OnSendMessage
      qualifiedName:
        CSharp: LobbyChatView.OnSendMessage
        VB: LobbyChatView.OnSendMessage
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: OnSendMessage
        path: ''
        startLine: 34870
      syntax:
        content:
          CSharp: public Action<string> OnSendMessage { get; set; }
          VB: Public Property OnSendMessage As Action(Of String)
        parameters: []
        return:
          type: Global.Action{System.String}
      overload: Global.LobbyChatView.OnSendMessage*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Global.LobbyChatView.Init
      commentId: M:Global.LobbyChatView.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: LobbyChatView.Init()
        VB: LobbyChatView.Init()
      qualifiedName:
        CSharp: LobbyChatView.Init()
        VB: LobbyChatView.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: Init
        path: ''
        startLine: 34874
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Global.LobbyChatView.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.LobbyChatView.ShowMessage(MessageDto)
      commentId: M:Global.LobbyChatView.ShowMessage(MessageDto)
      language: CSharp
      name:
        CSharp: ShowMessage(MessageDto)
        VB: ShowMessage(MessageDto)
      nameWithType:
        CSharp: LobbyChatView.ShowMessage(MessageDto)
        VB: LobbyChatView.ShowMessage(MessageDto)
      qualifiedName:
        CSharp: LobbyChatView.ShowMessage(MessageDto)
        VB: LobbyChatView.ShowMessage(MessageDto)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ShowMessage
        path: ''
        startLine: 34888
      syntax:
        content:
          CSharp: public void ShowMessage(MessageDto messageDto)
          VB: Public Sub ShowMessage(messageDto As MessageDto)
        parameters:
        - id: messageDto
          type: Global.MessageDto
      overload: Global.LobbyChatView.ShowMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Global.CamerasAvailableEnum
    commentId: T:Global.CamerasAvailableEnum
    language: CSharp
    name:
      CSharp: CamerasAvailableEnum
      VB: CamerasAvailableEnum
    nameWithType:
      CSharp: CamerasAvailableEnum
      VB: CamerasAvailableEnum
    qualifiedName:
      CSharp: CamerasAvailableEnum
      VB: CamerasAvailableEnum
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CamerasAvailableEnum
      path: ''
      startLine: 35117
    syntax:
      content:
        CSharp: public enum CamerasAvailableEnum
        VB: Public Enum CamerasAvailableEnum
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.CamerasAvailableEnum.DEFAULT_CAMERA
      commentId: F:Global.CamerasAvailableEnum.DEFAULT_CAMERA
      language: CSharp
      name:
        CSharp: DEFAULT_CAMERA
        VB: DEFAULT_CAMERA
      nameWithType:
        CSharp: CamerasAvailableEnum.DEFAULT_CAMERA
        VB: CamerasAvailableEnum.DEFAULT_CAMERA
      qualifiedName:
        CSharp: CamerasAvailableEnum.DEFAULT_CAMERA
        VB: CamerasAvailableEnum.DEFAULT_CAMERA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: DEFAULT_CAMERA
        path: ''
        startLine: 35119
      syntax:
        content:
          CSharp: DEFAULT_CAMERA = 0
          VB: DEFAULT_CAMERA = 0
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.SIDE_CAMERA_PLAYER
      commentId: F:Global.CamerasAvailableEnum.SIDE_CAMERA_PLAYER
      language: CSharp
      name:
        CSharp: SIDE_CAMERA_PLAYER
        VB: SIDE_CAMERA_PLAYER
      nameWithType:
        CSharp: CamerasAvailableEnum.SIDE_CAMERA_PLAYER
        VB: CamerasAvailableEnum.SIDE_CAMERA_PLAYER
      qualifiedName:
        CSharp: CamerasAvailableEnum.SIDE_CAMERA_PLAYER
        VB: CamerasAvailableEnum.SIDE_CAMERA_PLAYER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SIDE_CAMERA_PLAYER
        path: ''
        startLine: 35120
      syntax:
        content:
          CSharp: SIDE_CAMERA_PLAYER = 1
          VB: SIDE_CAMERA_PLAYER = 1
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.SIDE_CAMERA_ENEMY
      commentId: F:Global.CamerasAvailableEnum.SIDE_CAMERA_ENEMY
      language: CSharp
      name:
        CSharp: SIDE_CAMERA_ENEMY
        VB: SIDE_CAMERA_ENEMY
      nameWithType:
        CSharp: CamerasAvailableEnum.SIDE_CAMERA_ENEMY
        VB: CamerasAvailableEnum.SIDE_CAMERA_ENEMY
      qualifiedName:
        CSharp: CamerasAvailableEnum.SIDE_CAMERA_ENEMY
        VB: CamerasAvailableEnum.SIDE_CAMERA_ENEMY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: SIDE_CAMERA_ENEMY
        path: ''
        startLine: 35121
      syntax:
        content:
          CSharp: SIDE_CAMERA_ENEMY = 2
          VB: SIDE_CAMERA_ENEMY = 2
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.PAN_CAMERA
      commentId: F:Global.CamerasAvailableEnum.PAN_CAMERA
      language: CSharp
      name:
        CSharp: PAN_CAMERA
        VB: PAN_CAMERA
      nameWithType:
        CSharp: CamerasAvailableEnum.PAN_CAMERA
        VB: CamerasAvailableEnum.PAN_CAMERA
      qualifiedName:
        CSharp: CamerasAvailableEnum.PAN_CAMERA
        VB: CamerasAvailableEnum.PAN_CAMERA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PAN_CAMERA
        path: ''
        startLine: 35122
      syntax:
        content:
          CSharp: PAN_CAMERA = 3
          VB: PAN_CAMERA = 3
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.PAN_CAMERA_BACK
      commentId: F:Global.CamerasAvailableEnum.PAN_CAMERA_BACK
      language: CSharp
      name:
        CSharp: PAN_CAMERA_BACK
        VB: PAN_CAMERA_BACK
      nameWithType:
        CSharp: CamerasAvailableEnum.PAN_CAMERA_BACK
        VB: CamerasAvailableEnum.PAN_CAMERA_BACK
      qualifiedName:
        CSharp: CamerasAvailableEnum.PAN_CAMERA_BACK
        VB: CamerasAvailableEnum.PAN_CAMERA_BACK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PAN_CAMERA_BACK
        path: ''
        startLine: 35123
      syntax:
        content:
          CSharp: PAN_CAMERA_BACK = 4
          VB: PAN_CAMERA_BACK = 4
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.ORBIT_CAMERA
      commentId: F:Global.CamerasAvailableEnum.ORBIT_CAMERA
      language: CSharp
      name:
        CSharp: ORBIT_CAMERA
        VB: ORBIT_CAMERA
      nameWithType:
        CSharp: CamerasAvailableEnum.ORBIT_CAMERA
        VB: CamerasAvailableEnum.ORBIT_CAMERA
      qualifiedName:
        CSharp: CamerasAvailableEnum.ORBIT_CAMERA
        VB: CamerasAvailableEnum.ORBIT_CAMERA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ORBIT_CAMERA
        path: ''
        startLine: 35124
      syntax:
        content:
          CSharp: ORBIT_CAMERA = 5
          VB: ORBIT_CAMERA = 5
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.ORBIT_CAMERA_BACK
      commentId: F:Global.CamerasAvailableEnum.ORBIT_CAMERA_BACK
      language: CSharp
      name:
        CSharp: ORBIT_CAMERA_BACK
        VB: ORBIT_CAMERA_BACK
      nameWithType:
        CSharp: CamerasAvailableEnum.ORBIT_CAMERA_BACK
        VB: CamerasAvailableEnum.ORBIT_CAMERA_BACK
      qualifiedName:
        CSharp: CamerasAvailableEnum.ORBIT_CAMERA_BACK
        VB: CamerasAvailableEnum.ORBIT_CAMERA_BACK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ORBIT_CAMERA_BACK
        path: ''
        startLine: 35125
      syntax:
        content:
          CSharp: ORBIT_CAMERA_BACK = 6
          VB: ORBIT_CAMERA_BACK = 6
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.LOOK_AT_CAMERA_PLAYER
      commentId: F:Global.CamerasAvailableEnum.LOOK_AT_CAMERA_PLAYER
      language: CSharp
      name:
        CSharp: LOOK_AT_CAMERA_PLAYER
        VB: LOOK_AT_CAMERA_PLAYER
      nameWithType:
        CSharp: CamerasAvailableEnum.LOOK_AT_CAMERA_PLAYER
        VB: CamerasAvailableEnum.LOOK_AT_CAMERA_PLAYER
      qualifiedName:
        CSharp: CamerasAvailableEnum.LOOK_AT_CAMERA_PLAYER
        VB: CamerasAvailableEnum.LOOK_AT_CAMERA_PLAYER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LOOK_AT_CAMERA_PLAYER
        path: ''
        startLine: 35126
      syntax:
        content:
          CSharp: LOOK_AT_CAMERA_PLAYER = 7
          VB: LOOK_AT_CAMERA_PLAYER = 7
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.LOOK_AT_CAMERA_ENEMY
      commentId: F:Global.CamerasAvailableEnum.LOOK_AT_CAMERA_ENEMY
      language: CSharp
      name:
        CSharp: LOOK_AT_CAMERA_ENEMY
        VB: LOOK_AT_CAMERA_ENEMY
      nameWithType:
        CSharp: CamerasAvailableEnum.LOOK_AT_CAMERA_ENEMY
        VB: CamerasAvailableEnum.LOOK_AT_CAMERA_ENEMY
      qualifiedName:
        CSharp: CamerasAvailableEnum.LOOK_AT_CAMERA_ENEMY
        VB: CamerasAvailableEnum.LOOK_AT_CAMERA_ENEMY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: LOOK_AT_CAMERA_ENEMY
        path: ''
        startLine: 35127
      syntax:
        content:
          CSharp: LOOK_AT_CAMERA_ENEMY = 8
          VB: LOOK_AT_CAMERA_ENEMY = 8
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.MIDDLE_CAMERA
      commentId: F:Global.CamerasAvailableEnum.MIDDLE_CAMERA
      language: CSharp
      name:
        CSharp: MIDDLE_CAMERA
        VB: MIDDLE_CAMERA
      nameWithType:
        CSharp: CamerasAvailableEnum.MIDDLE_CAMERA
        VB: CamerasAvailableEnum.MIDDLE_CAMERA
      qualifiedName:
        CSharp: CamerasAvailableEnum.MIDDLE_CAMERA
        VB: CamerasAvailableEnum.MIDDLE_CAMERA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: MIDDLE_CAMERA
        path: ''
        startLine: 35128
      syntax:
        content:
          CSharp: MIDDLE_CAMERA = 9
          VB: MIDDLE_CAMERA = 9
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.FAR_MIDDLE_CAMERA
      commentId: F:Global.CamerasAvailableEnum.FAR_MIDDLE_CAMERA
      language: CSharp
      name:
        CSharp: FAR_MIDDLE_CAMERA
        VB: FAR_MIDDLE_CAMERA
      nameWithType:
        CSharp: CamerasAvailableEnum.FAR_MIDDLE_CAMERA
        VB: CamerasAvailableEnum.FAR_MIDDLE_CAMERA
      qualifiedName:
        CSharp: CamerasAvailableEnum.FAR_MIDDLE_CAMERA
        VB: CamerasAvailableEnum.FAR_MIDDLE_CAMERA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: FAR_MIDDLE_CAMERA
        path: ''
        startLine: 35129
      syntax:
        content:
          CSharp: FAR_MIDDLE_CAMERA = 10
          VB: FAR_MIDDLE_CAMERA = 10
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.GENERAL_CAMERA
      commentId: F:Global.CamerasAvailableEnum.GENERAL_CAMERA
      language: CSharp
      name:
        CSharp: GENERAL_CAMERA
        VB: GENERAL_CAMERA
      nameWithType:
        CSharp: CamerasAvailableEnum.GENERAL_CAMERA
        VB: CamerasAvailableEnum.GENERAL_CAMERA
      qualifiedName:
        CSharp: CamerasAvailableEnum.GENERAL_CAMERA
        VB: CamerasAvailableEnum.GENERAL_CAMERA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: GENERAL_CAMERA
        path: ''
        startLine: 35130
      syntax:
        content:
          CSharp: GENERAL_CAMERA = 11
          VB: GENERAL_CAMERA = 11
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.CENITAL_PLAYER
      commentId: F:Global.CamerasAvailableEnum.CENITAL_PLAYER
      language: CSharp
      name:
        CSharp: CENITAL_PLAYER
        VB: CENITAL_PLAYER
      nameWithType:
        CSharp: CamerasAvailableEnum.CENITAL_PLAYER
        VB: CamerasAvailableEnum.CENITAL_PLAYER
      qualifiedName:
        CSharp: CamerasAvailableEnum.CENITAL_PLAYER
        VB: CamerasAvailableEnum.CENITAL_PLAYER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CENITAL_PLAYER
        path: ''
        startLine: 35131
      syntax:
        content:
          CSharp: CENITAL_PLAYER = 12
          VB: CENITAL_PLAYER = 12
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CamerasAvailableEnum.CENITAL_ENEMY
      commentId: F:Global.CamerasAvailableEnum.CENITAL_ENEMY
      language: CSharp
      name:
        CSharp: CENITAL_ENEMY
        VB: CENITAL_ENEMY
      nameWithType:
        CSharp: CamerasAvailableEnum.CENITAL_ENEMY
        VB: CamerasAvailableEnum.CENITAL_ENEMY
      qualifiedName:
        CSharp: CamerasAvailableEnum.CENITAL_ENEMY
        VB: CamerasAvailableEnum.CENITAL_ENEMY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: CENITAL_ENEMY
        path: ''
        startLine: 35132
      syntax:
        content:
          CSharp: CENITAL_ENEMY = 13
          VB: CENITAL_ENEMY = 13
        return:
          type: Global.CamerasAvailableEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.CameraPointOfInteresEnum
    commentId: T:Global.CameraPointOfInteresEnum
    language: CSharp
    name:
      CSharp: CameraPointOfInteresEnum
      VB: CameraPointOfInteresEnum
    nameWithType:
      CSharp: CameraPointOfInteresEnum
      VB: CameraPointOfInteresEnum
    qualifiedName:
      CSharp: CameraPointOfInteresEnum
      VB: CameraPointOfInteresEnum
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CameraPointOfInteresEnum
      path: ''
      startLine: 35135
    syntax:
      content:
        CSharp: public enum CameraPointOfInteresEnum
        VB: Public Enum CameraPointOfInteresEnum
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.CameraPointOfInteresEnum.ARENA_CENTER
      commentId: F:Global.CameraPointOfInteresEnum.ARENA_CENTER
      language: CSharp
      name:
        CSharp: ARENA_CENTER
        VB: ARENA_CENTER
      nameWithType:
        CSharp: CameraPointOfInteresEnum.ARENA_CENTER
        VB: CameraPointOfInteresEnum.ARENA_CENTER
      qualifiedName:
        CSharp: CameraPointOfInteresEnum.ARENA_CENTER
        VB: CameraPointOfInteresEnum.ARENA_CENTER
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ARENA_CENTER
        path: ''
        startLine: 35137
      syntax:
        content:
          CSharp: ARENA_CENTER = 0
          VB: ARENA_CENTER = 0
        return:
          type: Global.CameraPointOfInteresEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CameraPointOfInteresEnum.PLAYER_SHINSEI
      commentId: F:Global.CameraPointOfInteresEnum.PLAYER_SHINSEI
      language: CSharp
      name:
        CSharp: PLAYER_SHINSEI
        VB: PLAYER_SHINSEI
      nameWithType:
        CSharp: CameraPointOfInteresEnum.PLAYER_SHINSEI
        VB: CameraPointOfInteresEnum.PLAYER_SHINSEI
      qualifiedName:
        CSharp: CameraPointOfInteresEnum.PLAYER_SHINSEI
        VB: CameraPointOfInteresEnum.PLAYER_SHINSEI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PLAYER_SHINSEI
        path: ''
        startLine: 35138
      syntax:
        content:
          CSharp: PLAYER_SHINSEI = 1
          VB: PLAYER_SHINSEI = 1
        return:
          type: Global.CameraPointOfInteresEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CameraPointOfInteresEnum.ENEMY_SHINSEI
      commentId: F:Global.CameraPointOfInteresEnum.ENEMY_SHINSEI
      language: CSharp
      name:
        CSharp: ENEMY_SHINSEI
        VB: ENEMY_SHINSEI
      nameWithType:
        CSharp: CameraPointOfInteresEnum.ENEMY_SHINSEI
        VB: CameraPointOfInteresEnum.ENEMY_SHINSEI
      qualifiedName:
        CSharp: CameraPointOfInteresEnum.ENEMY_SHINSEI
        VB: CameraPointOfInteresEnum.ENEMY_SHINSEI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: ENEMY_SHINSEI
        path: ''
        startLine: 35139
      syntax:
        content:
          CSharp: ENEMY_SHINSEI = 2
          VB: ENEMY_SHINSEI = 2
        return:
          type: Global.CameraPointOfInteresEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Global.CameraPhasesEnum
    commentId: T:Global.CameraPhasesEnum
    language: CSharp
    name:
      CSharp: CameraPhasesEnum
      VB: CameraPhasesEnum
    nameWithType:
      CSharp: CameraPhasesEnum
      VB: CameraPhasesEnum
    qualifiedName:
      CSharp: CameraPhasesEnum
      VB: CameraPhasesEnum
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: CameraPhasesEnum
      path: ''
      startLine: 35142
    syntax:
      content:
        CSharp: public enum CameraPhasesEnum
        VB: Public Enum CameraPhasesEnum
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Global.CameraPhasesEnum.PHASE_A
      commentId: F:Global.CameraPhasesEnum.PHASE_A
      language: CSharp
      name:
        CSharp: PHASE_A
        VB: PHASE_A
      nameWithType:
        CSharp: CameraPhasesEnum.PHASE_A
        VB: CameraPhasesEnum.PHASE_A
      qualifiedName:
        CSharp: CameraPhasesEnum.PHASE_A
        VB: CameraPhasesEnum.PHASE_A
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PHASE_A
        path: ''
        startLine: 35144
      syntax:
        content:
          CSharp: PHASE_A = 0
          VB: PHASE_A = 0
        return:
          type: Global.CameraPhasesEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CameraPhasesEnum.PHASE_B
      commentId: F:Global.CameraPhasesEnum.PHASE_B
      language: CSharp
      name:
        CSharp: PHASE_B
        VB: PHASE_B
      nameWithType:
        CSharp: CameraPhasesEnum.PHASE_B
        VB: CameraPhasesEnum.PHASE_B
      qualifiedName:
        CSharp: CameraPhasesEnum.PHASE_B
        VB: CameraPhasesEnum.PHASE_B
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PHASE_B
        path: ''
        startLine: 35145
      syntax:
        content:
          CSharp: PHASE_B = 1
          VB: PHASE_B = 1
        return:
          type: Global.CameraPhasesEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CameraPhasesEnum.PHASE_C
      commentId: F:Global.CameraPhasesEnum.PHASE_C
      language: CSharp
      name:
        CSharp: PHASE_C
        VB: PHASE_C
      nameWithType:
        CSharp: CameraPhasesEnum.PHASE_C
        VB: CameraPhasesEnum.PHASE_C
      qualifiedName:
        CSharp: CameraPhasesEnum.PHASE_C
        VB: CameraPhasesEnum.PHASE_C
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PHASE_C
        path: ''
        startLine: 35146
      syntax:
        content:
          CSharp: PHASE_C = 2
          VB: PHASE_C = 2
        return:
          type: Global.CameraPhasesEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Global.CameraPhasesEnum.PHASE_D
      commentId: F:Global.CameraPhasesEnum.PHASE_D
      language: CSharp
      name:
        CSharp: PHASE_D
        VB: PHASE_D
      nameWithType:
        CSharp: CameraPhasesEnum.PHASE_D
        VB: CameraPhasesEnum.PHASE_D
      qualifiedName:
        CSharp: CameraPhasesEnum.PHASE_D
        VB: CameraPhasesEnum.PHASE_D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: PHASE_D
        path: ''
        startLine: 35147
      syntax:
        content:
          CSharp: PHASE_D = 3
          VB: PHASE_D = 3
        return:
          type: Global.CameraPhasesEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: Timba.SacredTails.Arena
  commentId: N:Timba.SacredTails.Arena
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Arena
    VB: Timba.SacredTails.Arena
  nameWithType:
    CSharp: Timba.SacredTails.Arena
    VB: Timba.SacredTails.Arena
  qualifiedName:
    CSharp: Timba.SacredTails.Arena
    VB: Timba.SacredTails.Arena
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Arena.BattleShinseiSpawner
    commentId: T:Timba.SacredTails.Arena.BattleShinseiSpawner
    language: CSharp
    name:
      CSharp: BattleShinseiSpawner
      VB: BattleShinseiSpawner
    nameWithType:
      CSharp: BattleShinseiSpawner
      VB: BattleShinseiSpawner
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner
      VB: Timba.SacredTails.Arena.BattleShinseiSpawner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleShinseiSpawner
      path: ''
      startLine: 5571
    summary: "\nSpawns Player&apos;s and Oponent&apos;s shinseis for the arena instances\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleShinseiSpawner : MonoBehaviour'
        VB: >-
          Public Class BattleShinseiSpawner

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
      commentId: F:Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
      language: CSharp
      name:
        CSharp: enemyParent
        VB: enemyParent
      nameWithType:
        CSharp: BattleShinseiSpawner.enemyParent
        VB: BattleShinseiSpawner.enemyParent
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
        VB: Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: enemyParent
        path: ''
        startLine: 5576
      syntax:
        content:
          CSharp: public Transform enemyParent
          VB: Public enemyParent As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean,System.String)
      commentId: M:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: SpawnPlayerShinseis(Boolean, String)
        VB: SpawnPlayerShinseis(Boolean, String)
      nameWithType:
        CSharp: BattleShinseiSpawner.SpawnPlayerShinseis(Boolean, String)
        VB: BattleShinseiSpawner.SpawnPlayerShinseis(Boolean, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean, System.String)
        VB: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SpawnPlayerShinseis
        path: ''
        startLine: 5586
      syntax:
        content:
          CSharp: public CharacterSlot SpawnPlayerShinseis(bool isEnemy, string dna)
          VB: Public Function SpawnPlayerShinseis(isEnemy As Boolean, dna As String) As CharacterSlot
        parameters:
        - id: isEnemy
          type: System.Boolean
        - id: dna
          type: System.String
        return:
          type: Global.CharacterSlot
      overload: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List{System.String},Transform)
      commentId: M:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List{System.String},Transform)
      language: CSharp
      name:
        CSharp: SpawnShinseiEndGame(List<String>, Transform)
        VB: SpawnShinseiEndGame(List(Of String), Transform)
      nameWithType:
        CSharp: BattleShinseiSpawner.SpawnShinseiEndGame(List<String>, Transform)
        VB: BattleShinseiSpawner.SpawnShinseiEndGame(List(Of String), Transform)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List<System.String>, Transform)
        VB: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List(Of System.String), Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SpawnShinseiEndGame
        path: ''
        startLine: 5594
      syntax:
        content:
          CSharp: public void SpawnShinseiEndGame(List<string> dnas, Transform parent)
          VB: Public Sub SpawnShinseiEndGame(dnas As List(Of String), parent As Transform)
        parameters:
        - id: dnas
          type: System.Collections.Generic.List{System.String}
        - id: parent
          type: Global.Transform
      overload: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.BattleUIController
    commentId: T:Timba.SacredTails.Arena.BattleUIController
    language: CSharp
    name:
      CSharp: BattleUIController
      VB: BattleUIController
    nameWithType:
      CSharp: BattleUIController
      VB: BattleUIController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleUIController
      VB: Timba.SacredTails.Arena.BattleUIController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleUIController
      path: ''
      startLine: 5643
    summary: "\nHandles all of the events present in the UI of the Combat arena Mode\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleUIController : MonoBehaviour'
        VB: >-
          Public Class BattleUIController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
      commentId: F:Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
      language: CSharp
      name:
        CSharp: titleEndMatchPanel
        VB: titleEndMatchPanel
      nameWithType:
        CSharp: BattleUIController.titleEndMatchPanel
        VB: BattleUIController.titleEndMatchPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
        VB: Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: titleEndMatchPanel
        path: ''
        startLine: 5646
      syntax:
        content:
          CSharp: public TMP_Text titleEndMatchPanel
          VB: Public titleEndMatchPanel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.versusPanelController
      commentId: F:Timba.SacredTails.Arena.BattleUIController.versusPanelController
      language: CSharp
      name:
        CSharp: versusPanelController
        VB: versusPanelController
      nameWithType:
        CSharp: BattleUIController.versusPanelController
        VB: BattleUIController.versusPanelController
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.versusPanelController
        VB: Timba.SacredTails.Arena.BattleUIController.versusPanelController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: versusPanelController
        path: ''
        startLine: 5651
      syntax:
        content:
          CSharp: public VersusPanelController versusPanelController
          VB: Public versusPanelController As VersusPanelController
        return:
          type: Global.VersusPanelController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.battleMenu
      commentId: F:Timba.SacredTails.Arena.BattleUIController.battleMenu
      language: CSharp
      name:
        CSharp: battleMenu
        VB: battleMenu
      nameWithType:
        CSharp: BattleUIController.battleMenu
        VB: BattleUIController.battleMenu
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.battleMenu
        VB: Timba.SacredTails.Arena.BattleUIController.battleMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleMenu
        path: ''
        startLine: 5672
      syntax:
        content:
          CSharp: public GameObject battleMenu
          VB: Public battleMenu As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
      commentId: F:Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
      language: CSharp
      name:
        CSharp: viewingBackToLobbyButton
        VB: viewingBackToLobbyButton
      nameWithType:
        CSharp: BattleUIController.viewingBackToLobbyButton
        VB: BattleUIController.viewingBackToLobbyButton
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
        VB: Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: viewingBackToLobbyButton
        path: ''
        startLine: 5673
      syntax:
        content:
          CSharp: public GameObject viewingBackToLobbyButton
          VB: Public viewingBackToLobbyButton As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.cardContainer
      commentId: F:Timba.SacredTails.Arena.BattleUIController.cardContainer
      language: CSharp
      name:
        CSharp: cardContainer
        VB: cardContainer
      nameWithType:
        CSharp: BattleUIController.cardContainer
        VB: BattleUIController.cardContainer
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.cardContainer
        VB: Timba.SacredTails.Arena.BattleUIController.cardContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardContainer
        path: ''
        startLine: 5674
      syntax:
        content:
          CSharp: public GameObject cardContainer
          VB: Public cardContainer As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
      commentId: F:Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
      language: CSharp
      name:
        CSharp: battleNotificationSystem
        VB: battleNotificationSystem
      nameWithType:
        CSharp: BattleUIController.battleNotificationSystem
        VB: BattleUIController.battleNotificationSystem
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
        VB: Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleNotificationSystem
        path: ''
        startLine: 5675
      syntax:
        content:
          CSharp: public BattleNotificationSystem battleNotificationSystem
          VB: Public battleNotificationSystem As BattleNotificationSystem
        return:
          type: Global.BattleNotificationSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.cardUis
      commentId: F:Timba.SacredTails.Arena.BattleUIController.cardUis
      language: CSharp
      name:
        CSharp: cardUis
        VB: cardUis
      nameWithType:
        CSharp: BattleUIController.cardUis
        VB: BattleUIController.cardUis
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.cardUis
        VB: Timba.SacredTails.Arena.BattleUIController.cardUis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardUis
        path: ''
        startLine: 5676
      syntax:
        content:
          CSharp: public List<CardUI> cardUis
          VB: Public cardUis As List(Of CardUI)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.CardUI}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.uIDisolver
      commentId: F:Timba.SacredTails.Arena.BattleUIController.uIDisolver
      language: CSharp
      name:
        CSharp: uIDisolver
        VB: uIDisolver
      nameWithType:
        CSharp: BattleUIController.uIDisolver
        VB: BattleUIController.uIDisolver
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.uIDisolver
        VB: Timba.SacredTails.Arena.BattleUIController.uIDisolver
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: uIDisolver
        path: ''
        startLine: 5686
      syntax:
        content:
          CSharp: public UIDisolver uIDisolver
          VB: Public uIDisolver As UIDisolver
        return:
          type: Global.UIDisolver
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,System.String,System.String,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
        VB: Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
      nameWithType:
        CSharp: BattleUIController.Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
        VB: BattleUIController.Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, System.String, System.String, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, System.String, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 5690
      syntax:
        content:
          CSharp: public void Init(ResourceBarValues player1Hp, ResourceBarValues player2Hp, ResourceBarValues player1Pp, ResourceBarValues player2Pp, string playerName, string enemyName, bool isViewing = false)
          VB: Public Sub Init(player1Hp As ResourceBarValues, player2Hp As ResourceBarValues, player1Pp As ResourceBarValues, player2Pp As ResourceBarValues, playerName As String, enemyName As String, isViewing As Boolean = False)
        parameters:
        - id: player1Hp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: player2Hp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: player1Pp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: player2Pp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: playerName
          type: System.String
        - id: enemyName
          type: System.String
        - id: isViewing
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.AddPing(System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.AddPing(System.Int32)
      language: CSharp
      name:
        CSharp: AddPing(Int32)
        VB: AddPing(Int32)
      nameWithType:
        CSharp: BattleUIController.AddPing(Int32)
        VB: BattleUIController.AddPing(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.AddPing(System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.AddPing(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: AddPing
        path: ''
        startLine: 5760
      syntax:
        content:
          CSharp: public void AddPing(int amount)
          VB: Public Sub AddPing(amount As Integer)
        parameters:
        - id: amount
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.AddPing*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.UpdatePing(System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.UpdatePing(System.Int32)
      language: CSharp
      name:
        CSharp: UpdatePing(Int32)
        VB: UpdatePing(Int32)
      nameWithType:
        CSharp: BattleUIController.UpdatePing(Int32)
        VB: BattleUIController.UpdatePing(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.UpdatePing(System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.UpdatePing(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdatePing
        path: ''
        startLine: 5765
      syntax:
        content:
          CSharp: public void UpdatePing(int amount)
          VB: Public Sub UpdatePing(amount As Integer)
        parameters:
        - id: amount
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.UpdatePing*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32,Shinsei)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32,Shinsei)
      language: CSharp
      name:
        CSharp: UpdateShinseiPicture(Int32, Shinsei)
        VB: UpdateShinseiPicture(Int32, Shinsei)
      nameWithType:
        CSharp: BattleUIController.UpdateShinseiPicture(Int32, Shinsei)
        VB: BattleUIController.UpdateShinseiPicture(Int32, Shinsei)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32, Shinsei)
        VB: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32, Shinsei)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateShinseiPicture
        path: ''
        startLine: 5771
      syntax:
        content:
          CSharp: public void UpdateShinseiPicture(int playerIndex, Shinsei playerShinsei)
          VB: Public Sub UpdateShinseiPicture(playerIndex As Integer, playerShinsei As Shinsei)
        parameters:
        - id: playerIndex
          type: System.Int32
        - id: playerShinsei
          type: Global.Shinsei
      overload: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single,System.String,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateTimer(Single, String, Boolean)
        VB: UpdateTimer(Single, String, Boolean)
      nameWithType:
        CSharp: BattleUIController.UpdateTimer(Single, String, Boolean)
        VB: BattleUIController.UpdateTimer(Single, String, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single, System.String, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateTimer
        path: ''
        startLine: 5777
      syntax:
        content:
          CSharp: public void UpdateTimer(float timeInSeconds, string colorText = null, bool didEnemyDisconnect = true)
          VB: Public Sub UpdateTimer(timeInSeconds As Single, colorText As String = Nothing, didEnemyDisconnect As Boolean = True)
        parameters:
        - id: timeInSeconds
          type: System.Single
        - id: colorText
          type: System.String
        - id: didEnemyDisconnect
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.UpdateTimer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
      language: CSharp
      name:
        CSharp: ChangeHealthColorBar(Int32)
        VB: ChangeHealthColorBar(Int32)
      nameWithType:
        CSharp: BattleUIController.ChangeHealthColorBar(Int32)
        VB: BattleUIController.ChangeHealthColorBar(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeHealthColorBar
        path: ''
        startLine: 5796
      syntax:
        content:
          CSharp: public void ChangeHealthColorBar(int indexBar)
          VB: Public Sub ChangeHealthColorBar(indexBar As Integer)
        parameters:
        - id: indexBar
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
        VB: InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
      nameWithType:
        CSharp: BattleUIController.InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
        VB: BattleUIController.InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitializeBars
        path: ''
        startLine: 5818
      syntax:
        content:
          CSharp: public void InitializeBars(int playerHealth, int healthBarIndex, int maxValueHealth, int playerEnergy, int energyBarIndex, int maxValueEnergy)
          VB: Public Sub InitializeBars(playerHealth As Integer, healthBarIndex As Integer, maxValueHealth As Integer, playerEnergy As Integer, energyBarIndex As Integer, maxValueEnergy As Integer)
        parameters:
        - id: playerHealth
          type: System.Int32
        - id: healthBarIndex
          type: System.Int32
        - id: maxValueHealth
          type: System.Int32
        - id: playerEnergy
          type: System.Int32
        - id: energyBarIndex
          type: System.Int32
        - id: maxValueEnergy
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.InitializeBars*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
      language: CSharp
      name:
        CSharp: ShowFaster(Int32)
        VB: ShowFaster(Int32)
      nameWithType:
        CSharp: BattleUIController.ShowFaster(Int32)
        VB: BattleUIController.ShowFaster(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowFaster
        path: ''
        startLine: 5844
      syntax:
        content:
          CSharp: public void ShowFaster(int index)
          VB: Public Sub ShowFaster(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.ShowFaster*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.EndMatchCheck(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.EndMatchCheck(System.Boolean)
      language: CSharp
      name:
        CSharp: EndMatchCheck(Boolean)
        VB: EndMatchCheck(Boolean)
      nameWithType:
        CSharp: BattleUIController.EndMatchCheck(Boolean)
        VB: BattleUIController.EndMatchCheck(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.EndMatchCheck(System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.EndMatchCheck(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: EndMatchCheck
        path: ''
        startLine: 5849
      syntax:
        content:
          CSharp: public bool EndMatchCheck(bool isLocalPlayerHealthBars)
          VB: Public Function EndMatchCheck(isLocalPlayerHealthBars As Boolean) As Boolean
        parameters:
        - id: isLocalPlayerHealthBars
          type: System.Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.EndMatchCheck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
      commentId: F:Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
      language: CSharp
      name:
        CSharp: OnGetValueOfBars
        VB: OnGetValueOfBars
      nameWithType:
        CSharp: BattleUIController.OnGetValueOfBars
        VB: BattleUIController.OnGetValueOfBars
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
        VB: Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnGetValueOfBars
        path: ''
        startLine: 5854
      syntax:
        content:
          CSharp: public Func<List<int>> OnGetValueOfBars
          VB: Public OnGetValueOfBars As Func(Of List(Of Integer))
        return:
          type: Global.Func{System.Collections.Generic.List{System.Int32}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
      language: CSharp
      name:
        CSharp: ChangeHealthbarView()
        VB: ChangeHealthbarView()
      nameWithType:
        CSharp: BattleUIController.ChangeHealthbarView()
        VB: BattleUIController.ChangeHealthbarView()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView()
        VB: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeHealthbarView
        path: ''
        startLine: 5855
      syntax:
        content:
          CSharp: public void ChangeHealthbarView()
          VB: Public Sub ChangeHealthbarView
      overload: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: ApplyEnergyChange(Int32, Int32)
        VB: ApplyEnergyChange(Int32, Int32)
      nameWithType:
        CSharp: BattleUIController.ApplyEnergyChange(Int32, Int32)
        VB: BattleUIController.ApplyEnergyChange(Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ApplyEnergyChange
        path: ''
        startLine: 5873
      syntax:
        content:
          CSharp: public void ApplyEnergyChange(int energyBarIndex, int newEnergyValue)
          VB: Public Sub ApplyEnergyChange(energyBarIndex As Integer, newEnergyValue As Integer)
        parameters:
        - id: energyBarIndex
          type: System.Int32
        - id: newEnergyValue
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
      language: CSharp
      name:
        CSharp: HideEverythingForWatchMatch(Boolean)
        VB: HideEverythingForWatchMatch(Boolean)
      nameWithType:
        CSharp: BattleUIController.HideEverythingForWatchMatch(Boolean)
        VB: BattleUIController.HideEverythingForWatchMatch(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: HideEverythingForWatchMatch
        path: ''
        startLine: 5880
      syntax:
        content:
          CSharp: public void HideEverythingForWatchMatch(bool isViewer)
          VB: Public Sub HideEverythingForWatchMatch(isViewer As Boolean)
        parameters:
        - id: isViewer
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleWaitingPrompt(Boolean, Boolean)
        VB: ToggleWaitingPrompt(Boolean, Boolean)
      nameWithType:
        CSharp: BattleUIController.ToggleWaitingPrompt(Boolean, Boolean)
        VB: BattleUIController.ToggleWaitingPrompt(Boolean, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ToggleWaitingPrompt
        path: ''
        startLine: 5896
      syntax:
        content:
          CSharp: public void ToggleWaitingPrompt(bool isWaiting, bool isSkipTurn = false)
          VB: Public Sub ToggleWaitingPrompt(isWaiting As Boolean, isSkipTurn As Boolean = False)
        parameters:
        - id: isWaiting
          type: System.Boolean
        - id: isSkipTurn
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowCards(Boolean)
        VB: ShowCards(Boolean)
      nameWithType:
        CSharp: BattleUIController.ShowCards(Boolean)
        VB: BattleUIController.ShowCards(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowCards
        path: ''
        startLine: 5910
      syntax:
        content:
          CSharp: public void ShowCards(bool isShow)
          VB: Public Sub ShowCards(isShow As Boolean)
        parameters:
        - id: isShow
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.ShowCards*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.VfxInfo
    commentId: T:Timba.SacredTails.Arena.VfxInfo
    language: CSharp
    name:
      CSharp: VfxInfo
      VB: VfxInfo
    nameWithType:
      CSharp: VfxInfo
      VB: VfxInfo
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.VfxInfo
      VB: Timba.SacredTails.Arena.VfxInfo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: VfxInfo
      path: ''
      startLine: 7230
    syntax:
      content:
        CSharp: 'public class VfxInfo : MonoBehaviour'
        VB: >-
          Public Class VfxInfo

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.VfxInfo.isVfxReversed
      commentId: F:Timba.SacredTails.Arena.VfxInfo.isVfxReversed
      language: CSharp
      name:
        CSharp: isVfxReversed
        VB: isVfxReversed
      nameWithType:
        CSharp: VfxInfo.isVfxReversed
        VB: VfxInfo.isVfxReversed
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.VfxInfo.isVfxReversed
        VB: Timba.SacredTails.Arena.VfxInfo.isVfxReversed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isVfxReversed
        path: ''
        startLine: 7232
      syntax:
        content:
          CSharp: public bool isVfxReversed
          VB: Public isVfxReversed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.VfxInfo.vfxDuration
      commentId: F:Timba.SacredTails.Arena.VfxInfo.vfxDuration
      language: CSharp
      name:
        CSharp: vfxDuration
        VB: vfxDuration
      nameWithType:
        CSharp: VfxInfo.vfxDuration
        VB: VfxInfo.vfxDuration
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.VfxInfo.vfxDuration
        VB: Timba.SacredTails.Arena.VfxInfo.vfxDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxDuration
        path: ''
        startLine: 7233
      syntax:
        content:
          CSharp: public float vfxDuration
          VB: Public vfxDuration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.VfxInfo.vfxBeforeHit
      commentId: F:Timba.SacredTails.Arena.VfxInfo.vfxBeforeHit
      language: CSharp
      name:
        CSharp: vfxBeforeHit
        VB: vfxBeforeHit
      nameWithType:
        CSharp: VfxInfo.vfxBeforeHit
        VB: VfxInfo.vfxBeforeHit
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.VfxInfo.vfxBeforeHit
        VB: Timba.SacredTails.Arena.VfxInfo.vfxBeforeHit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxBeforeHit
        path: ''
        startLine: 7234
      syntax:
        content:
          CSharp: public float vfxBeforeHit
          VB: Public vfxBeforeHit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionController
    language: CSharp
    name:
      CSharp: ArenaShinseiSelectionController
      VB: ArenaShinseiSelectionController
    nameWithType:
      CSharp: ArenaShinseiSelectionController
      VB: ArenaShinseiSelectionController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController
      VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ArenaShinseiSelectionController
      path: ''
      startLine: 8943
    syntax:
      content:
        CSharp: 'public class ArenaShinseiSelectionController : MonoBehaviour'
        VB: >-
          Public Class ArenaShinseiSelectionController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
      language: CSharp
      name:
        CSharp: OnShinseisSelected
        VB: OnShinseisSelected
      nameWithType:
        CSharp: ArenaShinseiSelectionController.OnShinseisSelected
        VB: ArenaShinseiSelectionController.OnShinseisSelected
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnShinseisSelected
        path: ''
        startLine: 8951
      syntax:
        content:
          CSharp: public Action<bool, List<int>> OnShinseisSelected
          VB: Public OnShinseisSelected As Action(Of Boolean, List(Of Integer))
        return:
          type: Global.Action{System.Boolean,System.Collections.Generic.List{System.Int32}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData,System.Int32,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: Init(MatchData, Int32, Boolean)
        VB: Init(MatchData, Int32, Boolean)
      nameWithType:
        CSharp: ArenaShinseiSelectionController.Init(MatchData, Int32, Boolean)
        VB: ArenaShinseiSelectionController.Init(MatchData, Int32, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData, System.Int32, System.Boolean)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 8961
      syntax:
        content:
          CSharp: public void Init(MatchData matchData, int playerIndex, bool isViewer = false)
          VB: Public Sub Init(matchData As MatchData, playerIndex As Integer, isViewer As Boolean = False)
        parameters:
        - id: matchData
          type: Global.MatchData
        - id: playerIndex
          type: System.Int32
        - id: isViewer
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
      language: CSharp
      name:
        CSharp: OnShinseiSelectionCompleted()
        VB: OnShinseiSelectionCompleted()
      nameWithType:
        CSharp: ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
        VB: ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnShinseiSelectionCompleted
        path: ''
        startLine: 8979
      syntax:
        content:
          CSharp: public void OnShinseiSelectionCompleted()
          VB: Public Sub OnShinseiSelectionCompleted
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    language: CSharp
    name:
      CSharp: ArenaShinseiSelectionUserPanelController
      VB: ArenaShinseiSelectionUserPanelController
    nameWithType:
      CSharp: ArenaShinseiSelectionUserPanelController
      VB: ArenaShinseiSelectionUserPanelController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
      VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ArenaShinseiSelectionUserPanelController
      path: ''
      startLine: 9023
    summary: "\nPanel before the combat when players select the Shinsei party to the battle\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ArenaShinseiSelectionUserPanelController : MonoBehaviour'
        VB: >-
          Public Class ArenaShinseiSelectionUserPanelController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
      language: CSharp
      name:
        CSharp: selectionIndicators
        VB: selectionIndicators
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.selectionIndicators
        VB: ArenaShinseiSelectionUserPanelController.selectionIndicators
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: selectionIndicators
        path: ''
        startLine: 9027
      syntax:
        content:
          CSharp: public List<Image> selectionIndicators
          VB: Public selectionIndicators As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      language: CSharp
      name:
        CSharp: selectionIndicatorsDetail
        VB: selectionIndicatorsDetail
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
        VB: ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: selectionIndicatorsDetail
        path: ''
        startLine: 9027
      syntax:
        content:
          CSharp: public List<Image> selectionIndicatorsDetail
          VB: Public selectionIndicatorsDetail As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
      language: CSharp
      name:
        CSharp: selectedIndicator
        VB: selectedIndicator
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.selectedIndicator
        VB: ArenaShinseiSelectionUserPanelController.selectedIndicator
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: selectedIndicator
        path: ''
        startLine: 9028
      syntax:
        content:
          CSharp: public Sprite selectedIndicator
          VB: Public selectedIndicator As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
      language: CSharp
      name:
        CSharp: unselectedIndicator
        VB: unselectedIndicator
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.unselectedIndicator
        VB: ArenaShinseiSelectionUserPanelController.unselectedIndicator
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: unselectedIndicator
        path: ''
        startLine: 9029
      syntax:
        content:
          CSharp: public Sprite unselectedIndicator
          VB: Public unselectedIndicator As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      language: CSharp
      name:
        CSharp: shinseSlotPrefab
        VB: shinseSlotPrefab
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
        VB: ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseSlotPrefab
        path: ''
        startLine: 9030
      syntax:
        content:
          CSharp: public ShinseiSlot shinseSlotPrefab
          VB: Public shinseSlotPrefab As ShinseiSlot
        return:
          type: Timba.SacredTails.Arena.ShinseiSlot
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
      language: CSharp
      name:
        CSharp: partyRow1
        VB: partyRow1
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.partyRow1
        VB: ArenaShinseiSelectionUserPanelController.partyRow1
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: partyRow1
        path: ''
        startLine: 9032
      syntax:
        content:
          CSharp: public Transform partyRow1
          VB: Public partyRow1 As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
      language: CSharp
      name:
        CSharp: partyRow2
        VB: partyRow2
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.partyRow2
        VB: ArenaShinseiSelectionUserPanelController.partyRow2
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: partyRow2
        path: ''
        startLine: 9033
      syntax:
        content:
          CSharp: public Transform partyRow2
          VB: Public partyRow2 As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
      language: CSharp
      name:
        CSharp: nameLabel
        VB: nameLabel
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.nameLabel
        VB: ArenaShinseiSelectionUserPanelController.nameLabel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: nameLabel
        path: ''
        startLine: 9034
      syntax:
        content:
          CSharp: public TMP_Text nameLabel
          VB: Public nameLabel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
      language: CSharp
      name:
        CSharp: textCounter
        VB: textCounter
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.textCounter
        VB: ArenaShinseiSelectionUserPanelController.textCounter
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: textCounter
        path: ''
        startLine: 9035
      syntax:
        content:
          CSharp: public TextMeshProUGUI textCounter
          VB: Public textCounter As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
      language: CSharp
      name:
        CSharp: isEnemyPanel
        VB: isEnemyPanel
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.isEnemyPanel
        VB: ArenaShinseiSelectionUserPanelController.isEnemyPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isEnemyPanel
        path: ''
        startLine: 9038
      syntax:
        content:
          CSharp: public bool isEnemyPanel
          VB: Public isEnemyPanel As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
      language: CSharp
      name:
        CSharp: previewPanel
        VB: previewPanel
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.previewPanel
        VB: ArenaShinseiSelectionUserPanelController.previewPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: previewPanel
        path: ''
        startLine: 9039
      syntax:
        content:
          CSharp: public ShinseiPreviewPanelManager previewPanel
          VB: Public previewPanel As ShinseiPreviewPanelManager
        return:
          type: Timba.SacredTails.Arena.ShinseiPreviewPanelManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(Timba.SacredTails.Arena.CombatPlayer)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(Timba.SacredTails.Arena.CombatPlayer)
      language: CSharp
      name:
        CSharp: Init(CombatPlayer)
        VB: Init(CombatPlayer)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
        VB: ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(Timba.SacredTails.Arena.CombatPlayer)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(Timba.SacredTails.Arena.CombatPlayer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 9045
      syntax:
        content:
          CSharp: public void Init(CombatPlayer combatPlayer)
          VB: Public Sub Init(combatPlayer As CombatPlayer)
        parameters:
        - id: combatPlayer
          type: Timba.SacredTails.Arena.CombatPlayer
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowNext(Boolean)
        VB: ShowNext(Boolean)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.ShowNext(Boolean)
        VB: ArenaShinseiSelectionUserPanelController.ShowNext(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowNext
        path: ''
        startLine: 9095
      syntax:
        content:
          CSharp: public void ShowNext(bool direction)
          VB: Public Sub ShowNext(direction As Boolean)
        parameters:
        - id: direction
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
      language: CSharp
      name:
        CSharp: Show(Int32)
        VB: Show(Int32)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.Show(Int32)
        VB: ArenaShinseiSelectionUserPanelController.Show(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Show
        path: ''
        startLine: 9100
      syntax:
        content:
          CSharp: public void Show(int direction)
          VB: Public Sub Show(direction As Integer)
        parameters:
        - id: direction
          type: System.Int32
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32,Timba.SacredTails.Arena.ShinseiSlot)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32,Timba.SacredTails.Arena.ShinseiSlot)
      language: CSharp
      name:
        CSharp: SelectShinseiForBattle(Int32, ShinseiSlot)
        VB: SelectShinseiForBattle(Int32, ShinseiSlot)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(Int32, ShinseiSlot)
        VB: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32, Timba.SacredTails.Arena.ShinseiSlot)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32, Timba.SacredTails.Arena.ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SelectShinseiForBattle
        path: ''
        startLine: 9122
      syntax:
        content:
          CSharp: public void SelectShinseiForBattle(int listIndex, ShinseiSlot shinseiSlot)
          VB: Public Sub SelectShinseiForBattle(listIndex As Integer, shinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: shinseiSlot
          type: Timba.SacredTails.Arena.ShinseiSlot
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
      language: CSharp
      name:
        CSharp: MakeSlotsUnclickeable()
        VB: MakeSlotsUnclickeable()
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
        VB: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: MakeSlotsUnclickeable
        path: ''
        startLine: 9182
      syntax:
        content:
          CSharp: public void MakeSlotsUnclickeable()
          VB: Public Sub MakeSlotsUnclickeable
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
      language: CSharp
      name:
        CSharp: GetShinseisSelected()
        VB: GetShinseisSelected()
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
        VB: ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetShinseisSelected
        path: ''
        startLine: 9191
      syntax:
        content:
          CSharp: public List<int> GetShinseisSelected()
          VB: Public Function GetShinseisSelected As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.BattleStatisticsCalculator
    commentId: T:Timba.SacredTails.Arena.BattleStatisticsCalculator
    language: CSharp
    name:
      CSharp: BattleStatisticsCalculator
      VB: BattleStatisticsCalculator
    nameWithType:
      CSharp: BattleStatisticsCalculator
      VB: BattleStatisticsCalculator
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator
      VB: Timba.SacredTails.Arena.BattleStatisticsCalculator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleStatisticsCalculator
      path: ''
      startLine: 9218
    summary: "\nThis class process all damage in the game apply the effect of statistics to final value, Attack, Deffence etc\n"
    example: []
    syntax:
      content:
        CSharp: public static class BattleStatisticsCalculator
        VB: Public Module BattleStatisticsCalculator
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.healthMultiplier
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.healthMultiplier
      language: CSharp
      name:
        CSharp: healthMultiplier
        VB: healthMultiplier
      nameWithType:
        CSharp: BattleStatisticsCalculator.healthMultiplier
        VB: BattleStatisticsCalculator.healthMultiplier
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.healthMultiplier
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.healthMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: healthMultiplier
        path: ''
        startLine: 9221
      syntax:
        content:
          CSharp: public static float healthMultiplier
          VB: Public Shared healthMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_attackMultiplicationValue
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.m_attackMultiplicationValue
      language: CSharp
      name:
        CSharp: m_attackMultiplicationValue
        VB: m_attackMultiplicationValue
      nameWithType:
        CSharp: BattleStatisticsCalculator.m_attackMultiplicationValue
        VB: BattleStatisticsCalculator.m_attackMultiplicationValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_attackMultiplicationValue
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_attackMultiplicationValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: m_attackMultiplicationValue
        path: ''
        startLine: 9224
      syntax:
        content:
          CSharp: public static float m_attackMultiplicationValue
          VB: Public Shared m_attackMultiplicationValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_attackDivisionValue
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.m_attackDivisionValue
      language: CSharp
      name:
        CSharp: m_attackDivisionValue
        VB: m_attackDivisionValue
      nameWithType:
        CSharp: BattleStatisticsCalculator.m_attackDivisionValue
        VB: BattleStatisticsCalculator.m_attackDivisionValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_attackDivisionValue
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_attackDivisionValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: m_attackDivisionValue
        path: ''
        startLine: 9225
      syntax:
        content:
          CSharp: public static float m_attackDivisionValue
          VB: Public Shared m_attackDivisionValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_deffenseDivisionValue
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.m_deffenseDivisionValue
      language: CSharp
      name:
        CSharp: m_deffenseDivisionValue
        VB: m_deffenseDivisionValue
      nameWithType:
        CSharp: BattleStatisticsCalculator.m_deffenseDivisionValue
        VB: BattleStatisticsCalculator.m_deffenseDivisionValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_deffenseDivisionValue
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_deffenseDivisionValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: m_deffenseDivisionValue
        path: ''
        startLine: 9228
      syntax:
        content:
          CSharp: public static float m_deffenseDivisionValue
          VB: Public Shared m_deffenseDivisionValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_deffenseSumValue
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.m_deffenseSumValue
      language: CSharp
      name:
        CSharp: m_deffenseSumValue
        VB: m_deffenseSumValue
      nameWithType:
        CSharp: BattleStatisticsCalculator.m_deffenseSumValue
        VB: BattleStatisticsCalculator.m_deffenseSumValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_deffenseSumValue
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_deffenseSumValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: m_deffenseSumValue
        path: ''
        startLine: 9229
      syntax:
        content:
          CSharp: public static float m_deffenseSumValue
          VB: Public Shared m_deffenseSumValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_elementTypeBonusDivisionValue
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.m_elementTypeBonusDivisionValue
      language: CSharp
      name:
        CSharp: m_elementTypeBonusDivisionValue
        VB: m_elementTypeBonusDivisionValue
      nameWithType:
        CSharp: BattleStatisticsCalculator.m_elementTypeBonusDivisionValue
        VB: BattleStatisticsCalculator.m_elementTypeBonusDivisionValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_elementTypeBonusDivisionValue
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_elementTypeBonusDivisionValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: m_elementTypeBonusDivisionValue
        path: ''
        startLine: 9232
      syntax:
        content:
          CSharp: public static float m_elementTypeBonusDivisionValue
          VB: Public Shared m_elementTypeBonusDivisionValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold1
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold1
      language: CSharp
      name:
        CSharp: m_evasionThreshold1
        VB: m_evasionThreshold1
      nameWithType:
        CSharp: BattleStatisticsCalculator.m_evasionThreshold1
        VB: BattleStatisticsCalculator.m_evasionThreshold1
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold1
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: m_evasionThreshold1
        path: ''
        startLine: 9235
      syntax:
        content:
          CSharp: public static float m_evasionThreshold1
          VB: Public Shared m_evasionThreshold1 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold2
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold2
      language: CSharp
      name:
        CSharp: m_evasionThreshold2
        VB: m_evasionThreshold2
      nameWithType:
        CSharp: BattleStatisticsCalculator.m_evasionThreshold2
        VB: BattleStatisticsCalculator.m_evasionThreshold2
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold2
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: m_evasionThreshold2
        path: ''
        startLine: 9236
      syntax:
        content:
          CSharp: public static float m_evasionThreshold2
          VB: Public Shared m_evasionThreshold2 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold3
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold3
      language: CSharp
      name:
        CSharp: m_evasionThreshold3
        VB: m_evasionThreshold3
      nameWithType:
        CSharp: BattleStatisticsCalculator.m_evasionThreshold3
        VB: BattleStatisticsCalculator.m_evasionThreshold3
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold3
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: m_evasionThreshold3
        path: ''
        startLine: 9237
      syntax:
        content:
          CSharp: public static float m_evasionThreshold3
          VB: Public Shared m_evasionThreshold3 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold4
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold4
      language: CSharp
      name:
        CSharp: m_evasionThreshold4
        VB: m_evasionThreshold4
      nameWithType:
        CSharp: BattleStatisticsCalculator.m_evasionThreshold4
        VB: BattleStatisticsCalculator.m_evasionThreshold4
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold4
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: m_evasionThreshold4
        path: ''
        startLine: 9238
      syntax:
        content:
          CSharp: public static float m_evasionThreshold4
          VB: Public Shared m_evasionThreshold4 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold5
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold5
      language: CSharp
      name:
        CSharp: m_evasionThreshold5
        VB: m_evasionThreshold5
      nameWithType:
        CSharp: BattleStatisticsCalculator.m_evasionThreshold5
        VB: BattleStatisticsCalculator.m_evasionThreshold5
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold5
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.m_evasionThreshold5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: m_evasionThreshold5
        path: ''
        startLine: 9239
      syntax:
        content:
          CSharp: public static float m_evasionThreshold5
          VB: Public Shared m_evasionThreshold5 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth(System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth(System.Int32)
      language: CSharp
      name:
        CSharp: CalculateHealth(Int32)
        VB: CalculateHealth(Int32)
      nameWithType:
        CSharp: BattleStatisticsCalculator.CalculateHealth(Int32)
        VB: BattleStatisticsCalculator.CalculateHealth(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth(System.Int32)
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CalculateHealth
        path: ''
        startLine: 9241
      syntax:
        content:
          CSharp: public static float CalculateHealth(int healthStat)
          VB: Public Shared Function CalculateHealth(healthStat As Integer) As Single
        parameters:
        - id: healthStat
          type: System.Int32
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage(System.Single,System.Single,System.Single,System.Single,System.Single)
      commentId: M:Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage(System.Single,System.Single,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GetRawDamage(Single, Single, Single, Single, Single)
        VB: GetRawDamage(Single, Single, Single, Single, Single)
      nameWithType:
        CSharp: BattleStatisticsCalculator.GetRawDamage(Single, Single, Single, Single, Single)
        VB: BattleStatisticsCalculator.GetRawDamage(Single, Single, Single, Single, Single)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage(System.Single, System.Single, System.Single, System.Single, System.Single)
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage(System.Single, System.Single, System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetRawDamage
        path: ''
        startLine: 9246
      syntax:
        content:
          CSharp: public static float GetRawDamage(float skillHitDamage, float shinseiAttackStat, float stab, float elementBonusMultiplier, float criticsMultiplier)
          VB: Public Shared Function GetRawDamage(skillHitDamage As Single, shinseiAttackStat As Single, stab As Single, elementBonusMultiplier As Single, criticsMultiplier As Single) As Single
        parameters:
        - id: skillHitDamage
          type: System.Single
        - id: shinseiAttackStat
          type: System.Single
        - id: stab
          type: System.Single
        - id: elementBonusMultiplier
          type: System.Single
        - id: criticsMultiplier
          type: System.Single
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget(System.Single,System.Single)
      commentId: M:Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GetDamageReceiveByTarget(Single, Single)
        VB: GetDamageReceiveByTarget(Single, Single)
      nameWithType:
        CSharp: BattleStatisticsCalculator.GetDamageReceiveByTarget(Single, Single)
        VB: BattleStatisticsCalculator.GetDamageReceiveByTarget(Single, Single)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget(System.Single, System.Single)
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetDamageReceiveByTarget
        path: ''
        startLine: 9257
      syntax:
        content:
          CSharp: public static float GetDamageReceiveByTarget(float deffenseStat, float rawDamage)
          VB: Public Shared Function GetDamageReceiveByTarget(deffenseStat As Single, rawDamage As Single) As Single
        parameters:
        - id: deffenseStat
          type: System.Single
        - id: rawDamage
          type: System.Single
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics(System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics(System.Int32)
      language: CSharp
      name:
        CSharp: ApplyEvationCritics(Int32)
        VB: ApplyEvationCritics(Int32)
      nameWithType:
        CSharp: BattleStatisticsCalculator.ApplyEvationCritics(Int32)
        VB: BattleStatisticsCalculator.ApplyEvationCritics(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics(System.Int32)
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ApplyEvationCritics
        path: ''
        startLine: 9262
      syntax:
        content:
          CSharp: public static float ApplyEvationCritics(int multiplierStat)
          VB: Public Shared Function ApplyEvationCritics(multiplierStat As Integer) As Single
        parameters:
        - id: multiplierStat
          type: System.Int32
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade(System.Int32,System.Single)
      commentId: M:Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade(System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: CheckIfEvade(Int32, Single)
        VB: CheckIfEvade(Int32, Single)
      nameWithType:
        CSharp: BattleStatisticsCalculator.CheckIfEvade(Int32, Single)
        VB: BattleStatisticsCalculator.CheckIfEvade(Int32, Single)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade(System.Int32, System.Single)
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade(System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckIfEvade
        path: ''
        startLine: 9278
      syntax:
        content:
          CSharp: public static bool CheckIfEvade(int multiplierStat, float evadeRoll)
          VB: Public Shared Function CheckIfEvade(multiplierStat As Integer, evadeRoll As Single) As Boolean
        parameters:
        - id: multiplierStat
          type: System.Int32
        - id: evadeRoll
          type: System.Single
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat(Shinsei,ShinseiStatsEnum,System.Single)
      commentId: M:Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat(Shinsei,ShinseiStatsEnum,System.Single)
      language: CSharp
      name:
        CSharp: GetBonusStat(Shinsei, ShinseiStatsEnum, Single)
        VB: GetBonusStat(Shinsei, ShinseiStatsEnum, Single)
      nameWithType:
        CSharp: BattleStatisticsCalculator.GetBonusStat(Shinsei, ShinseiStatsEnum, Single)
        VB: BattleStatisticsCalculator.GetBonusStat(Shinsei, ShinseiStatsEnum, Single)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat(Shinsei, ShinseiStatsEnum, System.Single)
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat(Shinsei, ShinseiStatsEnum, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetBonusStat
        path: ''
        startLine: 9283
      syntax:
        content:
          CSharp: public static float GetBonusStat(Shinsei shinsei, ShinseiStatsEnum statBonus, float bonusPercentage)
          VB: Public Shared Function GetBonusStat(shinsei As Shinsei, statBonus As ShinseiStatsEnum, bonusPercentage As Single) As Single
        parameters:
        - id: shinsei
          type: Global.Shinsei
        - id: statBonus
          type: Global.ShinseiStatsEnum
        - id: bonusPercentage
          type: System.Single
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName(Timba.SacredTails.Arena.ShinseiStats@,ShinseiStatsEnum,System.Single,System.Boolean,System.Boolean,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName(Timba.SacredTails.Arena.ShinseiStats@,ShinseiStatsEnum,System.Single,System.Boolean,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: SetStatByName(ref ShinseiStats, ShinseiStatsEnum, Single, Boolean, Boolean, Boolean)
        VB: SetStatByName(ByRef ShinseiStats, ShinseiStatsEnum, Single, Boolean, Boolean, Boolean)
      nameWithType:
        CSharp: BattleStatisticsCalculator.SetStatByName(ref ShinseiStats, ShinseiStatsEnum, Single, Boolean, Boolean, Boolean)
        VB: BattleStatisticsCalculator.SetStatByName(ByRef ShinseiStats, ShinseiStatsEnum, Single, Boolean, Boolean, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName(ref Timba.SacredTails.Arena.ShinseiStats, ShinseiStatsEnum, System.Single, System.Boolean, System.Boolean, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName(ByRef Timba.SacredTails.Arena.ShinseiStats, ShinseiStatsEnum, System.Single, System.Boolean, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetStatByName
        path: ''
        startLine: 9289
      syntax:
        content:
          CSharp: public static (string, bool) SetStatByName(ref ShinseiStats shinseiStats, ShinseiStatsEnum statToModify, float amountToAdd, bool isPercentage, bool replaceStat = false, bool isEndAction = false)
          VB: Public Shared Function SetStatByName(ByRef shinseiStats As ShinseiStats, statToModify As ShinseiStatsEnum, amountToAdd As Single, isPercentage As Boolean, replaceStat As Boolean = False, isEndAction As Boolean = False) As(String, Boolean)(Of String , Boolean)
        parameters:
        - id: shinseiStats
          type: Timba.SacredTails.Arena.ShinseiStats
        - id: statToModify
          type: Global.ShinseiStatsEnum
        - id: amountToAdd
          type: System.Single
        - id: isPercentage
          type: System.Boolean
        - id: replaceStat
          type: System.Boolean
        - id: isEndAction
          type: System.Boolean
        return:
          type: System.ValueTuple{System.String,System.Boolean}
      overload: Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName(Timba.SacredTails.Arena.ShinseiStats,ShinseiStatsEnum)
      commentId: M:Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName(Timba.SacredTails.Arena.ShinseiStats,ShinseiStatsEnum)
      language: CSharp
      name:
        CSharp: GetStatByName(ShinseiStats, ShinseiStatsEnum)
        VB: GetStatByName(ShinseiStats, ShinseiStatsEnum)
      nameWithType:
        CSharp: BattleStatisticsCalculator.GetStatByName(ShinseiStats, ShinseiStatsEnum)
        VB: BattleStatisticsCalculator.GetStatByName(ShinseiStats, ShinseiStatsEnum)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName(Timba.SacredTails.Arena.ShinseiStats, ShinseiStatsEnum)
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName(Timba.SacredTails.Arena.ShinseiStats, ShinseiStatsEnum)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetStatByName
        path: ''
        startLine: 9332
      syntax:
        content:
          CSharp: public static float GetStatByName(ShinseiStats shinseiStats, ShinseiStatsEnum statToModify)
          VB: Public Shared Function GetStatByName(shinseiStats As ShinseiStats, statToModify As ShinseiStatsEnum) As Single
        parameters:
        - id: shinseiStats
          type: Timba.SacredTails.Arena.ShinseiStats
        - id: statToModify
          type: Global.ShinseiStatsEnum
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO
    commentId: T:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO
    language: CSharp
    name:
      CSharp: BattleStatisticsCalculatorSO
      VB: BattleStatisticsCalculatorSO
    nameWithType:
      CSharp: BattleStatisticsCalculatorSO
      VB: BattleStatisticsCalculatorSO
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO
      VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleStatisticsCalculatorSO
      path: ''
      startLine: 9354
    summary: "\nScriptable object for configurate the constants of the game for the BattleStatisticsCalculator\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class BattleStatisticsCalculatorSO : ScriptableObject
        VB: >-
          <Serializable>

          Public Class BattleStatisticsCalculatorSO

              Inherits ScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.attackMultiplicationValue
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.attackMultiplicationValue
      language: CSharp
      name:
        CSharp: attackMultiplicationValue
        VB: attackMultiplicationValue
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.attackMultiplicationValue
        VB: BattleStatisticsCalculatorSO.attackMultiplicationValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.attackMultiplicationValue
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.attackMultiplicationValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: attackMultiplicationValue
        path: ''
        startLine: 9360
      syntax:
        content:
          CSharp: public float attackMultiplicationValue
          VB: Public attackMultiplicationValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.attackDivisionValue
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.attackDivisionValue
      language: CSharp
      name:
        CSharp: attackDivisionValue
        VB: attackDivisionValue
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.attackDivisionValue
        VB: BattleStatisticsCalculatorSO.attackDivisionValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.attackDivisionValue
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.attackDivisionValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: attackDivisionValue
        path: ''
        startLine: 9361
      syntax:
        content:
          CSharp: public float attackDivisionValue
          VB: Public attackDivisionValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.deffenseDivisionValue
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.deffenseDivisionValue
      language: CSharp
      name:
        CSharp: deffenseDivisionValue
        VB: deffenseDivisionValue
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.deffenseDivisionValue
        VB: BattleStatisticsCalculatorSO.deffenseDivisionValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.deffenseDivisionValue
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.deffenseDivisionValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: deffenseDivisionValue
        path: ''
        startLine: 9364
      syntax:
        content:
          CSharp: public float deffenseDivisionValue
          VB: Public deffenseDivisionValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.deffenseSumValue
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.deffenseSumValue
      language: CSharp
      name:
        CSharp: deffenseSumValue
        VB: deffenseSumValue
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.deffenseSumValue
        VB: BattleStatisticsCalculatorSO.deffenseSumValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.deffenseSumValue
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.deffenseSumValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: deffenseSumValue
        path: ''
        startLine: 9365
      syntax:
        content:
          CSharp: public float deffenseSumValue
          VB: Public deffenseSumValue As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.elementTypeBonusDivison
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.elementTypeBonusDivison
      language: CSharp
      name:
        CSharp: elementTypeBonusDivison
        VB: elementTypeBonusDivison
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.elementTypeBonusDivison
        VB: BattleStatisticsCalculatorSO.elementTypeBonusDivison
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.elementTypeBonusDivison
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.elementTypeBonusDivison
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: elementTypeBonusDivison
        path: ''
        startLine: 9368
      syntax:
        content:
          CSharp: public float elementTypeBonusDivison
          VB: Public elementTypeBonusDivison As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold1
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold1
      language: CSharp
      name:
        CSharp: evasionThreshold1
        VB: evasionThreshold1
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.evasionThreshold1
        VB: BattleStatisticsCalculatorSO.evasionThreshold1
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold1
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: evasionThreshold1
        path: ''
        startLine: 9371
      syntax:
        content:
          CSharp: public float evasionThreshold1
          VB: Public evasionThreshold1 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold2
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold2
      language: CSharp
      name:
        CSharp: evasionThreshold2
        VB: evasionThreshold2
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.evasionThreshold2
        VB: BattleStatisticsCalculatorSO.evasionThreshold2
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold2
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: evasionThreshold2
        path: ''
        startLine: 9372
      syntax:
        content:
          CSharp: public float evasionThreshold2
          VB: Public evasionThreshold2 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold3
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold3
      language: CSharp
      name:
        CSharp: evasionThreshold3
        VB: evasionThreshold3
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.evasionThreshold3
        VB: BattleStatisticsCalculatorSO.evasionThreshold3
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold3
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: evasionThreshold3
        path: ''
        startLine: 9373
      syntax:
        content:
          CSharp: public float evasionThreshold3
          VB: Public evasionThreshold3 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold4
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold4
      language: CSharp
      name:
        CSharp: evasionThreshold4
        VB: evasionThreshold4
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.evasionThreshold4
        VB: BattleStatisticsCalculatorSO.evasionThreshold4
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold4
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: evasionThreshold4
        path: ''
        startLine: 9374
      syntax:
        content:
          CSharp: public float evasionThreshold4
          VB: Public evasionThreshold4 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold5
      commentId: F:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold5
      language: CSharp
      name:
        CSharp: evasionThreshold5
        VB: evasionThreshold5
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.evasionThreshold5
        VB: BattleStatisticsCalculatorSO.evasionThreshold5
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold5
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.evasionThreshold5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: evasionThreshold5
        path: ''
        startLine: 9375
      syntax:
        content:
          CSharp: public float evasionThreshold5
          VB: Public evasionThreshold5 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges
      commentId: M:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges
      language: CSharp
      name:
        CSharp: SaveChanges()
        VB: SaveChanges()
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.SaveChanges()
        VB: BattleStatisticsCalculatorSO.SaveChanges()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges()
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SaveChanges
        path: ''
        startLine: 9378
      syntax:
        content:
          CSharp: public void SaveChanges()
          VB: Public Sub SaveChanges
      overload: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards
      commentId: M:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards
      language: CSharp
      name:
        CSharp: GetJsonActionCards()
        VB: GetJsonActionCards()
      nameWithType:
        CSharp: BattleStatisticsCalculatorSO.GetJsonActionCards()
        VB: BattleStatisticsCalculatorSO.GetJsonActionCards()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards()
        VB: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetJsonActionCards
        path: ''
        startLine: 9402
      syntax:
        content:
          CSharp: public void GetJsonActionCards()
          VB: Public Sub GetJsonActionCards
      overload: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.CardUI
    commentId: T:Timba.SacredTails.Arena.CardUI
    language: CSharp
    name:
      CSharp: CardUI
      VB: CardUI
    nameWithType:
      CSharp: CardUI
      VB: CardUI
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.CardUI
      VB: Timba.SacredTails.Arena.CardUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: CardUI
      path: ''
      startLine: 9425
    summary: "\nUI element of cards from the card store also show a preview of card with details\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CardUI : MonoBehaviour'
        VB: >-
          Public Class CardUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.CardUI.textDescription
      commentId: F:Timba.SacredTails.Arena.CardUI.textDescription
      language: CSharp
      name:
        CSharp: textDescription
        VB: textDescription
      nameWithType:
        CSharp: CardUI.textDescription
        VB: CardUI.textDescription
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardUI.textDescription
        VB: Timba.SacredTails.Arena.CardUI.textDescription
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: textDescription
        path: ''
        startLine: 9429
      syntax:
        content:
          CSharp: public string textDescription
          VB: Public textDescription As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardUI.battleGameMode
      commentId: F:Timba.SacredTails.Arena.CardUI.battleGameMode
      language: CSharp
      name:
        CSharp: battleGameMode
        VB: battleGameMode
      nameWithType:
        CSharp: CardUI.battleGameMode
        VB: CardUI.battleGameMode
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardUI.battleGameMode
        VB: Timba.SacredTails.Arena.CardUI.battleGameMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleGameMode
        path: ''
        startLine: 9437
      syntax:
        content:
          CSharp: public BattleGameMode battleGameMode
          VB: Public battleGameMode As BattleGameMode
        return:
          type: Timba.SacredTails.Arena.BattleGameMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardUI.OnTurnChange
      commentId: M:Timba.SacredTails.Arena.CardUI.OnTurnChange
      language: CSharp
      name:
        CSharp: OnTurnChange()
        VB: OnTurnChange()
      nameWithType:
        CSharp: CardUI.OnTurnChange()
        VB: CardUI.OnTurnChange()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardUI.OnTurnChange()
        VB: Timba.SacredTails.Arena.CardUI.OnTurnChange()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnTurnChange
        path: ''
        startLine: 9462
      syntax:
        content:
          CSharp: public void OnTurnChange()
          VB: Public Sub OnTurnChange
      overload: Timba.SacredTails.Arena.CardUI.OnTurnChange*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardUI.SetCardEmpty
      commentId: M:Timba.SacredTails.Arena.CardUI.SetCardEmpty
      language: CSharp
      name:
        CSharp: SetCardEmpty()
        VB: SetCardEmpty()
      nameWithType:
        CSharp: CardUI.SetCardEmpty()
        VB: CardUI.SetCardEmpty()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardUI.SetCardEmpty()
        VB: Timba.SacredTails.Arena.CardUI.SetCardEmpty()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetCardEmpty
        path: ''
        startLine: 9480
      syntax:
        content:
          CSharp: public void SetCardEmpty()
          VB: Public Sub SetCardEmpty
      overload: Timba.SacredTails.Arena.CardUI.SetCardEmpty*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardUI.DisplayTooltip
      commentId: M:Timba.SacredTails.Arena.CardUI.DisplayTooltip
      language: CSharp
      name:
        CSharp: DisplayTooltip()
        VB: DisplayTooltip()
      nameWithType:
        CSharp: CardUI.DisplayTooltip()
        VB: CardUI.DisplayTooltip()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardUI.DisplayTooltip()
        VB: Timba.SacredTails.Arena.CardUI.DisplayTooltip()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: DisplayTooltip
        path: ''
        startLine: 9492
      syntax:
        content:
          CSharp: public void DisplayTooltip()
          VB: Public Sub DisplayTooltip
      overload: Timba.SacredTails.Arena.CardUI.DisplayTooltip*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardUI.SetDataCard(System.String,System.String,System.String,CharacterType)
      commentId: M:Timba.SacredTails.Arena.CardUI.SetDataCard(System.String,System.String,System.String,CharacterType)
      language: CSharp
      name:
        CSharp: SetDataCard(String, String, String, CharacterType)
        VB: SetDataCard(String, String, String, CharacterType)
      nameWithType:
        CSharp: CardUI.SetDataCard(String, String, String, CharacterType)
        VB: CardUI.SetDataCard(String, String, String, CharacterType)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardUI.SetDataCard(System.String, System.String, System.String, CharacterType)
        VB: Timba.SacredTails.Arena.CardUI.SetDataCard(System.String, System.String, System.String, CharacterType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetDataCard
        path: ''
        startLine: 9503
      syntax:
        content:
          CSharp: public void SetDataCard(string textTitle, string textDescription, string textEnergy, CharacterType cardType)
          VB: Public Sub SetDataCard(textTitle As String, textDescription As String, textEnergy As String, cardType As CharacterType)
        parameters:
        - id: textTitle
          type: System.String
        - id: textDescription
          type: System.String
        - id: textEnergy
          type: System.String
        - id: cardType
          type: Global.CharacterType
      overload: Timba.SacredTails.Arena.CardUI.SetDataCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.Combat
    commentId: T:Timba.SacredTails.Arena.Combat
    language: CSharp
    name:
      CSharp: Combat
      VB: Combat
    nameWithType:
      CSharp: Combat
      VB: Combat
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.Combat
      VB: Timba.SacredTails.Arena.Combat
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: Combat
      path: ''
      startLine: 9743
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Combat
        VB: >-
          <Serializable>

          Public Class Combat
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.Combat.MatchData
      commentId: F:Timba.SacredTails.Arena.Combat.MatchData
      language: CSharp
      name:
        CSharp: MatchData
        VB: MatchData
      nameWithType:
        CSharp: Combat.MatchData
        VB: Combat.MatchData
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.Combat.MatchData
        VB: Timba.SacredTails.Arena.Combat.MatchData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: MatchData
        path: ''
        startLine: 9746
      syntax:
        content:
          CSharp: public MatchData MatchData
          VB: Public MatchData As MatchData
        return:
          type: Global.MatchData
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.Combat.Turns
      commentId: F:Timba.SacredTails.Arena.Combat.Turns
      language: CSharp
      name:
        CSharp: Turns
        VB: Turns
      nameWithType:
        CSharp: Combat.Turns
        VB: Combat.Turns
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.Combat.Turns
        VB: Timba.SacredTails.Arena.Combat.Turns
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Turns
        path: ''
        startLine: 9747
      syntax:
        content:
          CSharp: public List<ActionCard> Turns
          VB: Public Turns As List(Of ActionCard)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ActionCard}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.Combat.CurrentTurn
      commentId: F:Timba.SacredTails.Arena.Combat.CurrentTurn
      language: CSharp
      name:
        CSharp: CurrentTurn
        VB: CurrentTurn
      nameWithType:
        CSharp: Combat.CurrentTurn
        VB: Combat.CurrentTurn
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.Combat.CurrentTurn
        VB: Timba.SacredTails.Arena.Combat.CurrentTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CurrentTurn
        path: ''
        startLine: 9748
      syntax:
        content:
          CSharp: public int CurrentTurn
          VB: Public CurrentTurn As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.Combat.CurrentShinsei
      commentId: F:Timba.SacredTails.Arena.Combat.CurrentShinsei
      language: CSharp
      name:
        CSharp: CurrentShinsei
        VB: CurrentShinsei
      nameWithType:
        CSharp: Combat.CurrentShinsei
        VB: Combat.CurrentShinsei
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.Combat.CurrentShinsei
        VB: Timba.SacredTails.Arena.Combat.CurrentShinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CurrentShinsei
        path: ''
        startLine: 9749
      syntax:
        content:
          CSharp: public int CurrentShinsei
          VB: Public CurrentShinsei As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.CombatPlayer
    commentId: T:Timba.SacredTails.Arena.CombatPlayer
    language: CSharp
    name:
      CSharp: CombatPlayer
      VB: CombatPlayer
    nameWithType:
      CSharp: CombatPlayer
      VB: CombatPlayer
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.CombatPlayer
      VB: Timba.SacredTails.Arena.CombatPlayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: CombatPlayer
      path: ''
      startLine: 9840
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class CombatPlayer
        VB: >-
          <Serializable>

          Public Class CombatPlayer
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.CombatPlayer.PlayfabId
      commentId: F:Timba.SacredTails.Arena.CombatPlayer.PlayfabId
      language: CSharp
      name:
        CSharp: PlayfabId
        VB: PlayfabId
      nameWithType:
        CSharp: CombatPlayer.PlayfabId
        VB: CombatPlayer.PlayfabId
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CombatPlayer.PlayfabId
        VB: Timba.SacredTails.Arena.CombatPlayer.PlayfabId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: PlayfabId
        path: ''
        startLine: 9843
      syntax:
        content:
          CSharp: >-
            [NonSerialized]

            public string PlayfabId
          VB: >-
            <NonSerialized>

            Public PlayfabId As String
        return:
          type: System.String
      attributes:
      - type: System.NonSerializedAttribute
        ctor: System.NonSerializedAttribute.#ctor
        arguments: []
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CombatPlayer.DisplayName
      commentId: F:Timba.SacredTails.Arena.CombatPlayer.DisplayName
      language: CSharp
      name:
        CSharp: DisplayName
        VB: DisplayName
      nameWithType:
        CSharp: CombatPlayer.DisplayName
        VB: CombatPlayer.DisplayName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CombatPlayer.DisplayName
        VB: Timba.SacredTails.Arena.CombatPlayer.DisplayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: DisplayName
        path: ''
        startLine: 9844
      syntax:
        content:
          CSharp: public string DisplayName
          VB: Public DisplayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CombatPlayer.shinseisSelected
      commentId: F:Timba.SacredTails.Arena.CombatPlayer.shinseisSelected
      language: CSharp
      name:
        CSharp: shinseisSelected
        VB: shinseisSelected
      nameWithType:
        CSharp: CombatPlayer.shinseisSelected
        VB: CombatPlayer.shinseisSelected
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CombatPlayer.shinseisSelected
        VB: Timba.SacredTails.Arena.CombatPlayer.shinseisSelected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseisSelected
        path: ''
        startLine: 9845
      syntax:
        content:
          CSharp: public bool shinseisSelected
          VB: Public shinseisSelected As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CombatPlayer.hasSurrender
      commentId: F:Timba.SacredTails.Arena.CombatPlayer.hasSurrender
      language: CSharp
      name:
        CSharp: hasSurrender
        VB: hasSurrender
      nameWithType:
        CSharp: CombatPlayer.hasSurrender
        VB: CombatPlayer.hasSurrender
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CombatPlayer.hasSurrender
        VB: Timba.SacredTails.Arena.CombatPlayer.hasSurrender
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: hasSurrender
        path: ''
        startLine: 9846
      syntax:
        content:
          CSharp: public bool hasSurrender
          VB: Public hasSurrender As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CombatPlayer.confirmState
      commentId: F:Timba.SacredTails.Arena.CombatPlayer.confirmState
      language: CSharp
      name:
        CSharp: confirmState
        VB: confirmState
      nameWithType:
        CSharp: CombatPlayer.confirmState
        VB: CombatPlayer.confirmState
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CombatPlayer.confirmState
        VB: Timba.SacredTails.Arena.CombatPlayer.confirmState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: confirmState
        path: ''
        startLine: 9847
      syntax:
        content:
          CSharp: public bool confirmState
          VB: Public confirmState As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CombatPlayer.strikes
      commentId: F:Timba.SacredTails.Arena.CombatPlayer.strikes
      language: CSharp
      name:
        CSharp: strikes
        VB: strikes
      nameWithType:
        CSharp: CombatPlayer.strikes
        VB: CombatPlayer.strikes
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CombatPlayer.strikes
        VB: Timba.SacredTails.Arena.CombatPlayer.strikes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: strikes
        path: ''
        startLine: 9848
      syntax:
        content:
          CSharp: public int strikes
          VB: Public strikes As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CombatPlayer.forbidenActions
      commentId: F:Timba.SacredTails.Arena.CombatPlayer.forbidenActions
      language: CSharp
      name:
        CSharp: forbidenActions
        VB: forbidenActions
      nameWithType:
        CSharp: CombatPlayer.forbidenActions
        VB: CombatPlayer.forbidenActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CombatPlayer.forbidenActions
        VB: Timba.SacredTails.Arena.CombatPlayer.forbidenActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: forbidenActions
        path: ''
        startLine: 9849
      syntax:
        content:
          CSharp: public Dictionary<int, int> forbidenActions
          VB: Public forbidenActions As Dictionary(Of Integer, Integer)
        return:
          type: System.Collections.Generic.Dictionary{System.Int32,System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CombatPlayer.ShinseiParty
      commentId: F:Timba.SacredTails.Arena.CombatPlayer.ShinseiParty
      language: CSharp
      name:
        CSharp: ShinseiParty
        VB: ShinseiParty
      nameWithType:
        CSharp: CombatPlayer.ShinseiParty
        VB: CombatPlayer.ShinseiParty
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CombatPlayer.ShinseiParty
        VB: Timba.SacredTails.Arena.CombatPlayer.ShinseiParty
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShinseiParty
        path: ''
        startLine: 9850
      syntax:
        content:
          CSharp: public List<Shinsei> ShinseiParty
          VB: Public ShinseiParty As List(Of Shinsei)
        return:
          type: System.Collections.Generic.List{Shinsei}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.CustomAtributes
    commentId: T:Timba.SacredTails.Arena.CustomAtributes
    language: CSharp
    name:
      CSharp: CustomAtributes
      VB: CustomAtributes
    nameWithType:
      CSharp: CustomAtributes
      VB: CustomAtributes
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.CustomAtributes
      VB: Timba.SacredTails.Arena.CustomAtributes
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: CustomAtributes
      path: ''
      startLine: 9859
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class CustomAtributes
        VB: >-
          <Serializable>

          Public Class CustomAtributes
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.CustomAtributes.Skill
      commentId: F:Timba.SacredTails.Arena.CustomAtributes.Skill
      language: CSharp
      name:
        CSharp: Skill
        VB: Skill
      nameWithType:
        CSharp: CustomAtributes.Skill
        VB: CustomAtributes.Skill
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CustomAtributes.Skill
        VB: Timba.SacredTails.Arena.CustomAtributes.Skill
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Skill
        path: ''
        startLine: 9862
      syntax:
        content:
          CSharp: public int Skill
          VB: Public Skill As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CustomAtributes.PlayerPlayfabId
      commentId: F:Timba.SacredTails.Arena.CustomAtributes.PlayerPlayfabId
      language: CSharp
      name:
        CSharp: PlayerPlayfabId
        VB: PlayerPlayfabId
      nameWithType:
        CSharp: CustomAtributes.PlayerPlayfabId
        VB: CustomAtributes.PlayerPlayfabId
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CustomAtributes.PlayerPlayfabId
        VB: Timba.SacredTails.Arena.CustomAtributes.PlayerPlayfabId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: PlayerPlayfabId
        path: ''
        startLine: 9863
      syntax:
        content:
          CSharp: public string PlayerPlayfabId
          VB: Public PlayerPlayfabId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CustomAtributes.displayName
      commentId: F:Timba.SacredTails.Arena.CustomAtributes.displayName
      language: CSharp
      name:
        CSharp: displayName
        VB: displayName
      nameWithType:
        CSharp: CustomAtributes.displayName
        VB: CustomAtributes.displayName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CustomAtributes.displayName
        VB: Timba.SacredTails.Arena.CustomAtributes.displayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: displayName
        path: ''
        startLine: 9864
      syntax:
        content:
          CSharp: public string displayName
          VB: Public displayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ShinseiStats
    commentId: T:Timba.SacredTails.Arena.ShinseiStats
    language: CSharp
    name:
      CSharp: ShinseiStats
      VB: ShinseiStats
    nameWithType:
      CSharp: ShinseiStats
      VB: ShinseiStats
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiStats
      VB: Timba.SacredTails.Arena.ShinseiStats
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ShinseiStats
      path: ''
      startLine: 9931
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ShinseiStats
        VB: >-
          <Serializable>

          Public Class ShinseiStats
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiStats.Attack
      commentId: F:Timba.SacredTails.Arena.ShinseiStats.Attack
      language: CSharp
      name:
        CSharp: Attack
        VB: Attack
      nameWithType:
        CSharp: ShinseiStats.Attack
        VB: ShinseiStats.Attack
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.Attack
        VB: Timba.SacredTails.Arena.ShinseiStats.Attack
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Attack
        path: ''
        startLine: 9935
      syntax:
        content:
          CSharp: public float Attack
          VB: Public Attack As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiStats.Defence
      commentId: F:Timba.SacredTails.Arena.ShinseiStats.Defence
      language: CSharp
      name:
        CSharp: Defence
        VB: Defence
      nameWithType:
        CSharp: ShinseiStats.Defence
        VB: ShinseiStats.Defence
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.Defence
        VB: Timba.SacredTails.Arena.ShinseiStats.Defence
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Defence
        path: ''
        startLine: 9935
      syntax:
        content:
          CSharp: public float Defence
          VB: Public Defence As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiStats.Speed
      commentId: F:Timba.SacredTails.Arena.ShinseiStats.Speed
      language: CSharp
      name:
        CSharp: Speed
        VB: Speed
      nameWithType:
        CSharp: ShinseiStats.Speed
        VB: ShinseiStats.Speed
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.Speed
        VB: Timba.SacredTails.Arena.ShinseiStats.Speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Speed
        path: ''
        startLine: 9935
      syntax:
        content:
          CSharp: public float Speed
          VB: Public Speed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiStats.Stamina
      commentId: F:Timba.SacredTails.Arena.ShinseiStats.Stamina
      language: CSharp
      name:
        CSharp: Stamina
        VB: Stamina
      nameWithType:
        CSharp: ShinseiStats.Stamina
        VB: ShinseiStats.Stamina
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.Stamina
        VB: Timba.SacredTails.Arena.ShinseiStats.Stamina
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Stamina
        path: ''
        startLine: 9935
      syntax:
        content:
          CSharp: public float Stamina
          VB: Public Stamina As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiStats.Vigor
      commentId: F:Timba.SacredTails.Arena.ShinseiStats.Vigor
      language: CSharp
      name:
        CSharp: Vigor
        VB: Vigor
      nameWithType:
        CSharp: ShinseiStats.Vigor
        VB: ShinseiStats.Vigor
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.Vigor
        VB: Timba.SacredTails.Arena.ShinseiStats.Vigor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Vigor
        path: ''
        startLine: 9935
      syntax:
        content:
          CSharp: public float Vigor
          VB: Public Vigor As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiStats.attack
      commentId: P:Timba.SacredTails.Arena.ShinseiStats.attack
      language: CSharp
      name:
        CSharp: attack
        VB: attack
      nameWithType:
        CSharp: ShinseiStats.attack
        VB: ShinseiStats.attack
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.attack
        VB: Timba.SacredTails.Arena.ShinseiStats.attack
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: attack
        path: ''
        startLine: 9936
      syntax:
        content:
          CSharp: public float attack { get; }
          VB: Public ReadOnly Property attack As Single
        parameters: []
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.ShinseiStats.attack*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.SacredTails.Arena.ShinseiStats.defence
      commentId: P:Timba.SacredTails.Arena.ShinseiStats.defence
      language: CSharp
      name:
        CSharp: defence
        VB: defence
      nameWithType:
        CSharp: ShinseiStats.defence
        VB: ShinseiStats.defence
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.defence
        VB: Timba.SacredTails.Arena.ShinseiStats.defence
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: defence
        path: ''
        startLine: 9937
      syntax:
        content:
          CSharp: public float defence { get; }
          VB: Public ReadOnly Property defence As Single
        parameters: []
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.ShinseiStats.defence*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.SacredTails.Arena.ShinseiStats.speed
      commentId: P:Timba.SacredTails.Arena.ShinseiStats.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: ShinseiStats.speed
        VB: ShinseiStats.speed
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.speed
        VB: Timba.SacredTails.Arena.ShinseiStats.speed
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: speed
        path: ''
        startLine: 9938
      syntax:
        content:
          CSharp: public float speed { get; }
          VB: Public ReadOnly Property speed As Single
        parameters: []
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.ShinseiStats.speed*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.SacredTails.Arena.ShinseiStats.stamina
      commentId: P:Timba.SacredTails.Arena.ShinseiStats.stamina
      language: CSharp
      name:
        CSharp: stamina
        VB: stamina
      nameWithType:
        CSharp: ShinseiStats.stamina
        VB: ShinseiStats.stamina
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.stamina
        VB: Timba.SacredTails.Arena.ShinseiStats.stamina
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: stamina
        path: ''
        startLine: 9939
      syntax:
        content:
          CSharp: public float stamina { get; }
          VB: Public ReadOnly Property stamina As Single
        parameters: []
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.ShinseiStats.stamina*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.SacredTails.Arena.ShinseiStats.vigor
      commentId: P:Timba.SacredTails.Arena.ShinseiStats.vigor
      language: CSharp
      name:
        CSharp: vigor
        VB: vigor
      nameWithType:
        CSharp: ShinseiStats.vigor
        VB: ShinseiStats.vigor
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.vigor
        VB: Timba.SacredTails.Arena.ShinseiStats.vigor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vigor
        path: ''
        startLine: 9940
      syntax:
        content:
          CSharp: public float vigor { get; }
          VB: Public ReadOnly Property vigor As Single
        parameters: []
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.ShinseiStats.vigor*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.SacredTails.Arena.ShinseiStats.GetRealStat(System.Single)
      commentId: M:Timba.SacredTails.Arena.ShinseiStats.GetRealStat(System.Single)
      language: CSharp
      name:
        CSharp: GetRealStat(Single)
        VB: GetRealStat(Single)
      nameWithType:
        CSharp: ShinseiStats.GetRealStat(Single)
        VB: ShinseiStats.GetRealStat(Single)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.GetRealStat(System.Single)
        VB: Timba.SacredTails.Arena.ShinseiStats.GetRealStat(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetRealStat
        path: ''
        startLine: 9942
      syntax:
        content:
          CSharp: public float GetRealStat(float stat)
          VB: Public Function GetRealStat(stat As Single) As Single
        parameters:
        - id: stat
          type: System.Single
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.ShinseiStats.GetRealStat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiStats.Health
      commentId: F:Timba.SacredTails.Arena.ShinseiStats.Health
      language: CSharp
      name:
        CSharp: Health
        VB: Health
      nameWithType:
        CSharp: ShinseiStats.Health
        VB: ShinseiStats.Health
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.Health
        VB: Timba.SacredTails.Arena.ShinseiStats.Health
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Health
        path: ''
        startLine: 9949
      syntax:
        content:
          CSharp: public int Health
          VB: Public Health As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiStats.Energy
      commentId: F:Timba.SacredTails.Arena.ShinseiStats.Energy
      language: CSharp
      name:
        CSharp: Energy
        VB: Energy
      nameWithType:
        CSharp: ShinseiStats.Energy
        VB: ShinseiStats.Energy
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiStats.Energy
        VB: Timba.SacredTails.Arena.ShinseiStats.Energy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Energy
        path: ''
        startLine: 9949
      syntax:
        content:
          CSharp: public int Energy
          VB: Public Energy As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.TextboxBase
    commentId: T:Timba.SacredTails.Arena.TextboxBase
    language: CSharp
    name:
      CSharp: TextboxBase
      VB: TextboxBase
    nameWithType:
      CSharp: TextboxBase
      VB: TextboxBase
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.TextboxBase
      VB: Timba.SacredTails.Arena.TextboxBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: TextboxBase
      path: ''
      startLine: 9971
    syntax:
      content:
        CSharp: 'public abstract class TextboxBase : MonoBehaviour'
        VB: >-
          Public MustInherit Class TextboxBase

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Timba.SacredTails.Arena.TextboxBase.AddText(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
      commentId: M:Timba.SacredTails.Arena.TextboxBase.AddText(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: AddText(String, Dictionary<String, String>)
        VB: AddText(String, Dictionary(Of String, String))
      nameWithType:
        CSharp: TextboxBase.AddText(String, Dictionary<String, String>)
        VB: TextboxBase.AddText(String, Dictionary(Of String, String))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TextboxBase.AddText(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
        VB: Timba.SacredTails.Arena.TextboxBase.AddText(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: AddText
        path: ''
        startLine: 9983
      syntax:
        content:
          CSharp: public virtual void AddText(string message, Dictionary<string, string> customCodes = null)
          VB: Public Overridable Sub AddText(message As String, customCodes As Dictionary(Of String, String) = Nothing)
        parameters:
        - id: message
          type: System.String
        - id: customCodes
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Timba.SacredTails.Arena.TextboxBase.AddText*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.SacredTails.Arena.TextboxBase.CheckAlteredState(System.String)
      commentId: M:Timba.SacredTails.Arena.TextboxBase.CheckAlteredState(System.String)
      language: CSharp
      name:
        CSharp: CheckAlteredState(String)
        VB: CheckAlteredState(String)
      nameWithType:
        CSharp: TextboxBase.CheckAlteredState(String)
        VB: TextboxBase.CheckAlteredState(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TextboxBase.CheckAlteredState(System.String)
        VB: Timba.SacredTails.Arena.TextboxBase.CheckAlteredState(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckAlteredState
        path: ''
        startLine: 10027
      syntax:
        content:
          CSharp: public void CheckAlteredState(string message)
          VB: Public Sub CheckAlteredState(message As String)
        parameters:
        - id: message
          type: System.String
      overload: Timba.SacredTails.Arena.TextboxBase.CheckAlteredState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TextboxBase.State(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TextboxBase.State(System.Boolean)
      language: CSharp
      name:
        CSharp: State(Boolean)
        VB: State(Boolean)
      nameWithType:
        CSharp: TextboxBase.State(Boolean)
        VB: TextboxBase.State(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TextboxBase.State(System.Boolean)
        VB: Timba.SacredTails.Arena.TextboxBase.State(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: State
        path: ''
        startLine: 10041
      syntax:
        content:
          CSharp: public void State(bool state)
          VB: Public Sub State(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TextboxBase.State*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter(System.String)
      commentId: M:Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter(System.String)
      language: CSharp
      name:
        CSharp: AddRemoveFilter(String)
        VB: AddRemoveFilter(String)
      nameWithType:
        CSharp: TextboxBase.AddRemoveFilter(String)
        VB: TextboxBase.AddRemoveFilter(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter(System.String)
        VB: Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: AddRemoveFilter
        path: ''
        startLine: 10048
      syntax:
        content:
          CSharp: public void AddRemoveFilter(string data)
          VB: Public Sub AddRemoveFilter(data As String)
        parameters:
        - id: data
          type: System.String
      overload: Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TextboxBase.ApplyFilters
      commentId: M:Timba.SacredTails.Arena.TextboxBase.ApplyFilters
      language: CSharp
      name:
        CSharp: ApplyFilters()
        VB: ApplyFilters()
      nameWithType:
        CSharp: TextboxBase.ApplyFilters()
        VB: TextboxBase.ApplyFilters()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TextboxBase.ApplyFilters()
        VB: Timba.SacredTails.Arena.TextboxBase.ApplyFilters()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ApplyFilters
        path: ''
        startLine: 10062
      syntax:
        content:
          CSharp: public void ApplyFilters()
          VB: Public Sub ApplyFilters
      overload: Timba.SacredTails.Arena.TextboxBase.ApplyFilters*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TextboxBase.CheckIndividual(TextMeshProUGUI)
      commentId: M:Timba.SacredTails.Arena.TextboxBase.CheckIndividual(TextMeshProUGUI)
      language: CSharp
      name:
        CSharp: CheckIndividual(TextMeshProUGUI)
        VB: CheckIndividual(TextMeshProUGUI)
      nameWithType:
        CSharp: TextboxBase.CheckIndividual(TextMeshProUGUI)
        VB: TextboxBase.CheckIndividual(TextMeshProUGUI)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TextboxBase.CheckIndividual(TextMeshProUGUI)
        VB: Timba.SacredTails.Arena.TextboxBase.CheckIndividual(TextMeshProUGUI)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckIndividual
        path: ''
        startLine: 10075
      syntax:
        content:
          CSharp: public void CheckIndividual(TextMeshProUGUI text)
          VB: Public Sub CheckIndividual(text As TextMeshProUGUI)
        parameters:
        - id: text
          type: Global.TextMeshProUGUI
      overload: Timba.SacredTails.Arena.TextboxBase.CheckIndividual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.Turn
    commentId: T:Timba.SacredTails.Arena.Turn
    language: CSharp
    name:
      CSharp: Turn
      VB: Turn
    nameWithType:
      CSharp: Turn
      VB: Turn
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.Turn
      VB: Timba.SacredTails.Arena.Turn
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: Turn
      path: ''
      startLine: 10107
    summary: "\nTurn describes the minimun necesary data to calculate battles in the game\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Turn
        VB: >-
          <Serializable>

          Public Class Turn
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.Turn.indexCard
      commentId: F:Timba.SacredTails.Arena.Turn.indexCard
      language: CSharp
      name:
        CSharp: indexCard
        VB: indexCard
      nameWithType:
        CSharp: Turn.indexCard
        VB: Turn.indexCard
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.Turn.indexCard
        VB: Timba.SacredTails.Arena.Turn.indexCard
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: indexCard
        path: ''
        startLine: 10110
      syntax:
        content:
          CSharp: public int indexCard
          VB: Public indexCard As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.Turn.BattleActions
      commentId: F:Timba.SacredTails.Arena.Turn.BattleActions
      language: CSharp
      name:
        CSharp: BattleActions
        VB: BattleActions
      nameWithType:
        CSharp: Turn.BattleActions
        VB: Turn.BattleActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.Turn.BattleActions
        VB: Timba.SacredTails.Arena.Turn.BattleActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: BattleActions
        path: ''
        startLine: 10111
      syntax:
        content:
          CSharp: public List<BattleActionData> BattleActions
          VB: Public BattleActions As List(Of BattleActionData)
        return:
          type: System.Collections.Generic.List{BattleActionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.Turn.ppCost
      commentId: F:Timba.SacredTails.Arena.Turn.ppCost
      language: CSharp
      name:
        CSharp: ppCost
        VB: ppCost
      nameWithType:
        CSharp: Turn.ppCost
        VB: Turn.ppCost
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.Turn.ppCost
        VB: Timba.SacredTails.Arena.Turn.ppCost
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ppCost
        path: ''
        startLine: 10112
      syntax:
        content:
          CSharp: public int ppCost
          VB: Public ppCost As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.Turn.turnActionType
      commentId: F:Timba.SacredTails.Arena.Turn.turnActionType
      language: CSharp
      name:
        CSharp: turnActionType
        VB: turnActionType
      nameWithType:
        CSharp: Turn.turnActionType
        VB: Turn.turnActionType
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.Turn.turnActionType
        VB: Timba.SacredTails.Arena.Turn.turnActionType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnActionType
        path: ''
        startLine: 10113
      syntax:
        content:
          CSharp: public CharacterType turnActionType
          VB: Public turnActionType As CharacterType
        return:
          type: Global.CharacterType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.UserInfo
    commentId: T:Timba.SacredTails.Arena.UserInfo
    language: CSharp
    name:
      CSharp: UserInfo
      VB: UserInfo
    nameWithType:
      CSharp: UserInfo
      VB: UserInfo
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.UserInfo
      VB: Timba.SacredTails.Arena.UserInfo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: UserInfo
      path: ''
      startLine: 10127
    syntax:
      content:
        CSharp: public class UserInfo
        VB: Public Class UserInfo
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.UserInfo.healthbars
      commentId: F:Timba.SacredTails.Arena.UserInfo.healthbars
      language: CSharp
      name:
        CSharp: healthbars
        VB: healthbars
      nameWithType:
        CSharp: UserInfo.healthbars
        VB: UserInfo.healthbars
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.healthbars
        VB: Timba.SacredTails.Arena.UserInfo.healthbars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: healthbars
        path: ''
        startLine: 10130
      syntax:
        content:
          CSharp: public List<ResourceBarValues> healthbars
          VB: Public healthbars As List(Of ResourceBarValues)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.energybars
      commentId: F:Timba.SacredTails.Arena.UserInfo.energybars
      language: CSharp
      name:
        CSharp: energybars
        VB: energybars
      nameWithType:
        CSharp: UserInfo.energybars
        VB: UserInfo.energybars
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.energybars
        VB: Timba.SacredTails.Arena.UserInfo.energybars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: energybars
        path: ''
        startLine: 10131
      syntax:
        content:
          CSharp: public List<ResourceBarValues> energybars
          VB: Public energybars As List(Of ResourceBarValues)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.userIndex
      commentId: F:Timba.SacredTails.Arena.UserInfo.userIndex
      language: CSharp
      name:
        CSharp: userIndex
        VB: userIndex
      nameWithType:
        CSharp: UserInfo.userIndex
        VB: UserInfo.userIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.userIndex
        VB: Timba.SacredTails.Arena.UserInfo.userIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: userIndex
        path: ''
        startLine: 10132
      syntax:
        content:
          CSharp: public int userIndex
          VB: Public userIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.spawnedShinsei
      commentId: F:Timba.SacredTails.Arena.UserInfo.spawnedShinsei
      language: CSharp
      name:
        CSharp: spawnedShinsei
        VB: spawnedShinsei
      nameWithType:
        CSharp: UserInfo.spawnedShinsei
        VB: UserInfo.spawnedShinsei
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.spawnedShinsei
        VB: Timba.SacredTails.Arena.UserInfo.spawnedShinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: spawnedShinsei
        path: ''
        startLine: 10133
      syntax:
        content:
          CSharp: public CharacterSlot spawnedShinsei
          VB: Public spawnedShinsei As CharacterSlot
        return:
          type: Global.CharacterSlot
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.battleShinseis
      commentId: F:Timba.SacredTails.Arena.UserInfo.battleShinseis
      language: CSharp
      name:
        CSharp: battleShinseis
        VB: battleShinseis
      nameWithType:
        CSharp: UserInfo.battleShinseis
        VB: UserInfo.battleShinseis
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.battleShinseis
        VB: Timba.SacredTails.Arena.UserInfo.battleShinseis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleShinseis
        path: ''
        startLine: 10134
      syntax:
        content:
          CSharp: public List<Shinsei> battleShinseis
          VB: Public battleShinseis As List(Of Shinsei)
        return:
          type: System.Collections.Generic.List{Shinsei}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.turnActions
      commentId: F:Timba.SacredTails.Arena.UserInfo.turnActions
      language: CSharp
      name:
        CSharp: turnActions
        VB: turnActions
      nameWithType:
        CSharp: UserInfo.turnActions
        VB: UserInfo.turnActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.turnActions
        VB: Timba.SacredTails.Arena.UserInfo.turnActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnActions
        path: ''
        startLine: 10135
      syntax:
        content:
          CSharp: public List<BattleActionsBase> turnActions
          VB: Public turnActions As List(Of BattleActionsBase)
        return:
          type: System.Collections.Generic.List{BattleActionsBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
      commentId: F:Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
      language: CSharp
      name:
        CSharp: currentShinseiIndex
        VB: currentShinseiIndex
      nameWithType:
        CSharp: UserInfo.currentShinseiIndex
        VB: UserInfo.currentShinseiIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
        VB: Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: currentShinseiIndex
        path: ''
        startLine: 10136
      syntax:
        content:
          CSharp: public int currentShinseiIndex
          VB: Public currentShinseiIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.isLocalPlayer
      commentId: F:Timba.SacredTails.Arena.UserInfo.isLocalPlayer
      language: CSharp
      name:
        CSharp: isLocalPlayer
        VB: isLocalPlayer
      nameWithType:
        CSharp: UserInfo.isLocalPlayer
        VB: UserInfo.isLocalPlayer
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.isLocalPlayer
        VB: Timba.SacredTails.Arena.UserInfo.isLocalPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isLocalPlayer
        path: ''
        startLine: 10137
      syntax:
        content:
          CSharp: public bool isLocalPlayer
          VB: Public isLocalPlayer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ResourceBarValues
    commentId: T:Timba.SacredTails.Arena.ResourceBarValues
    language: CSharp
    name:
      CSharp: ResourceBarValues
      VB: ResourceBarValues
    nameWithType:
      CSharp: ResourceBarValues
      VB: ResourceBarValues
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ResourceBarValues
      VB: Timba.SacredTails.Arena.ResourceBarValues
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ResourceBarValues
      path: ''
      startLine: 10140
    syntax:
      content:
        CSharp: public class ResourceBarValues
        VB: Public Class ResourceBarValues
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ResourceBarValues.currentValue
      commentId: F:Timba.SacredTails.Arena.ResourceBarValues.currentValue
      language: CSharp
      name:
        CSharp: currentValue
        VB: currentValue
      nameWithType:
        CSharp: ResourceBarValues.currentValue
        VB: ResourceBarValues.currentValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ResourceBarValues.currentValue
        VB: Timba.SacredTails.Arena.ResourceBarValues.currentValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: currentValue
        path: ''
        startLine: 10143
      syntax:
        content:
          CSharp: public int currentValue
          VB: Public currentValue As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ResourceBarValues.maxValue
      commentId: F:Timba.SacredTails.Arena.ResourceBarValues.maxValue
      language: CSharp
      name:
        CSharp: maxValue
        VB: maxValue
      nameWithType:
        CSharp: ResourceBarValues.maxValue
        VB: ResourceBarValues.maxValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ResourceBarValues.maxValue
        VB: Timba.SacredTails.Arena.ResourceBarValues.maxValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: maxValue
        path: ''
        startLine: 10144
      syntax:
        content:
          CSharp: public int maxValue
          VB: Public maxValue As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ActionCard
    commentId: T:Timba.SacredTails.Arena.ActionCard
    language: CSharp
    name:
      CSharp: ActionCard
      VB: ActionCard
    nameWithType:
      CSharp: ActionCard
      VB: ActionCard
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ActionCard
      VB: Timba.SacredTails.Arena.ActionCard
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ActionCard
      path: ''
      startLine: 10161
    summary: "\nCode representation of attack cards in the game\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ActionCard : ScriptableObject
        VB: >-
          <Serializable>

          Public Class ActionCard

              Inherits ScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ActionCard.cardType
      commentId: F:Timba.SacredTails.Arena.ActionCard.cardType
      language: CSharp
      name:
        CSharp: cardType
        VB: cardType
      nameWithType:
        CSharp: ActionCard.cardType
        VB: ActionCard.cardType
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.cardType
        VB: Timba.SacredTails.Arena.ActionCard.cardType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardType
        path: ''
        startLine: 10165
      syntax:
        content:
          CSharp: public CharacterType cardType
          VB: Public cardType As CharacterType
        return:
          type: Global.CharacterType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.BattleActions
      commentId: F:Timba.SacredTails.Arena.ActionCard.BattleActions
      language: CSharp
      name:
        CSharp: BattleActions
        VB: BattleActions
      nameWithType:
        CSharp: ActionCard.BattleActions
        VB: ActionCard.BattleActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.BattleActions
        VB: Timba.SacredTails.Arena.ActionCard.BattleActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: BattleActions
        path: ''
        startLine: 10166
      syntax:
        content:
          CSharp: public List<BattleActionData> BattleActions
          VB: Public BattleActions As List(Of BattleActionData)
        return:
          type: System.Collections.Generic.List{BattleActionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.Description
      commentId: F:Timba.SacredTails.Arena.ActionCard.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: ActionCard.Description
        VB: ActionCard.Description
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.Description
        VB: Timba.SacredTails.Arena.ActionCard.Description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Description
        path: ''
        startLine: 10167
      syntax:
        content:
          CSharp: public string Description
          VB: Public Description As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.DisplayNotification
      commentId: F:Timba.SacredTails.Arena.ActionCard.DisplayNotification
      language: CSharp
      name:
        CSharp: DisplayNotification
        VB: DisplayNotification
      nameWithType:
        CSharp: ActionCard.DisplayNotification
        VB: ActionCard.DisplayNotification
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.DisplayNotification
        VB: Timba.SacredTails.Arena.ActionCard.DisplayNotification
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: DisplayNotification
        path: ''
        startLine: 10168
      syntax:
        content:
          CSharp: public string DisplayNotification
          VB: Public DisplayNotification As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.VfxIndex
      commentId: F:Timba.SacredTails.Arena.ActionCard.VfxIndex
      language: CSharp
      name:
        CSharp: VfxIndex
        VB: VfxIndex
      nameWithType:
        CSharp: ActionCard.VfxIndex
        VB: ActionCard.VfxIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.VfxIndex
        VB: Timba.SacredTails.Arena.ActionCard.VfxIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: VfxIndex
        path: ''
        startLine: 10169
      syntax:
        content:
          CSharp: public int VfxIndex
          VB: Public VfxIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.vfxAffectBoth
      commentId: F:Timba.SacredTails.Arena.ActionCard.vfxAffectBoth
      language: CSharp
      name:
        CSharp: vfxAffectBoth
        VB: vfxAffectBoth
      nameWithType:
        CSharp: ActionCard.vfxAffectBoth
        VB: ActionCard.vfxAffectBoth
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.vfxAffectBoth
        VB: Timba.SacredTails.Arena.ActionCard.vfxAffectBoth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxAffectBoth
        path: ''
        startLine: 10170
      syntax:
        content:
          CSharp: public bool vfxAffectBoth
          VB: Public vfxAffectBoth As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.casterAnimation
      commentId: F:Timba.SacredTails.Arena.ActionCard.casterAnimation
      language: CSharp
      name:
        CSharp: casterAnimation
        VB: casterAnimation
      nameWithType:
        CSharp: ActionCard.casterAnimation
        VB: ActionCard.casterAnimation
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.casterAnimation
        VB: Timba.SacredTails.Arena.ActionCard.casterAnimation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: casterAnimation
        path: ''
        startLine: 10171
      syntax:
        content:
          CSharp: public AttacksAnimation casterAnimation
          VB: Public casterAnimation As AttacksAnimation
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.targetAnimation
      commentId: F:Timba.SacredTails.Arena.ActionCard.targetAnimation
      language: CSharp
      name:
        CSharp: targetAnimation
        VB: targetAnimation
      nameWithType:
        CSharp: ActionCard.targetAnimation
        VB: ActionCard.targetAnimation
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.targetAnimation
        VB: Timba.SacredTails.Arena.ActionCard.targetAnimation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: targetAnimation
        path: ''
        startLine: 10172
      syntax:
        content:
          CSharp: public AttacksAnimation targetAnimation
          VB: Public targetAnimation As AttacksAnimation
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.isComingFromCopyIndex
      commentId: F:Timba.SacredTails.Arena.ActionCard.isComingFromCopyIndex
      language: CSharp
      name:
        CSharp: isComingFromCopyIndex
        VB: isComingFromCopyIndex
      nameWithType:
        CSharp: ActionCard.isComingFromCopyIndex
        VB: ActionCard.isComingFromCopyIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.isComingFromCopyIndex
        VB: Timba.SacredTails.Arena.ActionCard.isComingFromCopyIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isComingFromCopyIndex
        path: ''
        startLine: 10173
      syntax:
        content:
          CSharp: public int isComingFromCopyIndex
          VB: Public isComingFromCopyIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.cardImage
      commentId: F:Timba.SacredTails.Arena.ActionCard.cardImage
      language: CSharp
      name:
        CSharp: cardImage
        VB: cardImage
      nameWithType:
        CSharp: ActionCard.cardImage
        VB: ActionCard.cardImage
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.cardImage
        VB: Timba.SacredTails.Arena.ActionCard.cardImage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardImage
        path: ''
        startLine: 10174
      syntax:
        content:
          CSharp: public Sprite cardImage
          VB: Public cardImage As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.PpCost
      commentId: F:Timba.SacredTails.Arena.ActionCard.PpCost
      language: CSharp
      name:
        CSharp: PpCost
        VB: PpCost
      nameWithType:
        CSharp: ActionCard.PpCost
        VB: ActionCard.PpCost
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.PpCost
        VB: Timba.SacredTails.Arena.ActionCard.PpCost
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: PpCost
        path: ''
        startLine: 10175
      syntax:
        content:
          CSharp: public int PpCost
          VB: Public PpCost As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.BattleAction
      commentId: F:Timba.SacredTails.Arena.ActionCard.BattleAction
      language: CSharp
      name:
        CSharp: BattleAction
        VB: BattleAction
      nameWithType:
        CSharp: ActionCard.BattleAction
        VB: ActionCard.BattleAction
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.BattleAction
        VB: Timba.SacredTails.Arena.ActionCard.BattleAction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: BattleAction
        path: ''
        startLine: 10176
      syntax:
        content:
          CSharp: public List<string> BattleAction
          VB: Public BattleAction As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions
      commentId: M:Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions
      language: CSharp
      name:
        CSharp: ShouldSerializeBattleActions()
        VB: ShouldSerializeBattleActions()
      nameWithType:
        CSharp: ActionCard.ShouldSerializeBattleActions()
        VB: ActionCard.ShouldSerializeBattleActions()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions()
        VB: Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShouldSerializeBattleActions
        path: ''
        startLine: 10177
      syntax:
        content:
          CSharp: public bool ShouldSerializeBattleActions()
          VB: Public Function ShouldSerializeBattleActions As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ActionCard.OnValidate
      commentId: M:Timba.SacredTails.Arena.ActionCard.OnValidate
      language: CSharp
      name:
        CSharp: OnValidate()
        VB: OnValidate()
      nameWithType:
        CSharp: ActionCard.OnValidate()
        VB: ActionCard.OnValidate()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ActionCard.OnValidate()
        VB: Timba.SacredTails.Arena.ActionCard.OnValidate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnValidate
        path: ''
        startLine: 10182
      syntax:
        content:
          CSharp: public void OnValidate()
          VB: Public Sub OnValidate
      overload: Timba.SacredTails.Arena.ActionCard.OnValidate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.AttacksAnimation
    commentId: T:Timba.SacredTails.Arena.AttacksAnimation
    language: CSharp
    name:
      CSharp: AttacksAnimation
      VB: AttacksAnimation
    nameWithType:
      CSharp: AttacksAnimation
      VB: AttacksAnimation
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.AttacksAnimation
      VB: Timba.SacredTails.Arena.AttacksAnimation
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: AttacksAnimation
      path: ''
      startLine: 10194
    syntax:
      content:
        CSharp: public enum AttacksAnimation
        VB: Public Enum AttacksAnimation
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Timba.SacredTails.Arena.AttacksAnimation.NONE
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.NONE
      language: CSharp
      name:
        CSharp: NONE
        VB: NONE
      nameWithType:
        CSharp: AttacksAnimation.NONE
        VB: AttacksAnimation.NONE
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.NONE
        VB: Timba.SacredTails.Arena.AttacksAnimation.NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: NONE
        path: ''
        startLine: 10196
      syntax:
        content:
          CSharp: NONE = 0
          VB: NONE = 0
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.ATTACK0
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.ATTACK0
      language: CSharp
      name:
        CSharp: ATTACK0
        VB: ATTACK0
      nameWithType:
        CSharp: AttacksAnimation.ATTACK0
        VB: AttacksAnimation.ATTACK0
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.ATTACK0
        VB: Timba.SacredTails.Arena.AttacksAnimation.ATTACK0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ATTACK0
        path: ''
        startLine: 10197
      syntax:
        content:
          CSharp: ATTACK0 = 1
          VB: ATTACK0 = 1
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.ATTACK1
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.ATTACK1
      language: CSharp
      name:
        CSharp: ATTACK1
        VB: ATTACK1
      nameWithType:
        CSharp: AttacksAnimation.ATTACK1
        VB: AttacksAnimation.ATTACK1
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.ATTACK1
        VB: Timba.SacredTails.Arena.AttacksAnimation.ATTACK1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ATTACK1
        path: ''
        startLine: 10198
      syntax:
        content:
          CSharp: ATTACK1 = 2
          VB: ATTACK1 = 2
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.ATTACK2
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.ATTACK2
      language: CSharp
      name:
        CSharp: ATTACK2
        VB: ATTACK2
      nameWithType:
        CSharp: AttacksAnimation.ATTACK2
        VB: AttacksAnimation.ATTACK2
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.ATTACK2
        VB: Timba.SacredTails.Arena.AttacksAnimation.ATTACK2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ATTACK2
        path: ''
        startLine: 10199
      syntax:
        content:
          CSharp: ATTACK2 = 3
          VB: ATTACK2 = 3
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.ATTACK3
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.ATTACK3
      language: CSharp
      name:
        CSharp: ATTACK3
        VB: ATTACK3
      nameWithType:
        CSharp: AttacksAnimation.ATTACK3
        VB: AttacksAnimation.ATTACK3
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.ATTACK3
        VB: Timba.SacredTails.Arena.AttacksAnimation.ATTACK3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ATTACK3
        path: ''
        startLine: 10200
      syntax:
        content:
          CSharp: ATTACK3 = 4
          VB: ATTACK3 = 4
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Awake
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Awake
      language: CSharp
      name:
        CSharp: Awake
        VB: Awake
      nameWithType:
        CSharp: AttacksAnimation.Awake
        VB: AttacksAnimation.Awake
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Awake
        VB: Timba.SacredTails.Arena.AttacksAnimation.Awake
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Awake
        path: ''
        startLine: 10201
      syntax:
        content:
          CSharp: Awake = 5
          VB: Awake = 5
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Confused
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Confused
      language: CSharp
      name:
        CSharp: Confused
        VB: Confused
      nameWithType:
        CSharp: AttacksAnimation.Confused
        VB: AttacksAnimation.Confused
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Confused
        VB: Timba.SacredTails.Arena.AttacksAnimation.Confused
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Confused
        path: ''
        startLine: 10202
      syntax:
        content:
          CSharp: Confused = 6
          VB: Confused = 6
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Change
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Change
      language: CSharp
      name:
        CSharp: Change
        VB: Change
      nameWithType:
        CSharp: AttacksAnimation.Change
        VB: AttacksAnimation.Change
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Change
        VB: Timba.SacredTails.Arena.AttacksAnimation.Change
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Change
        path: ''
        startLine: 10203
      syntax:
        content:
          CSharp: Change = 7
          VB: Change = 7
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Dance
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Dance
      language: CSharp
      name:
        CSharp: Dance
        VB: Dance
      nameWithType:
        CSharp: AttacksAnimation.Dance
        VB: AttacksAnimation.Dance
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Dance
        VB: Timba.SacredTails.Arena.AttacksAnimation.Dance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Dance
        path: ''
        startLine: 10204
      syntax:
        content:
          CSharp: Dance = 8
          VB: Dance = 8
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Damage
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Damage
      language: CSharp
      name:
        CSharp: Damage
        VB: Damage
      nameWithType:
        CSharp: AttacksAnimation.Damage
        VB: AttacksAnimation.Damage
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Damage
        VB: Timba.SacredTails.Arena.AttacksAnimation.Damage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Damage
        path: ''
        startLine: 10205
      syntax:
        content:
          CSharp: Damage = 9
          VB: Damage = 9
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Death
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Death
      language: CSharp
      name:
        CSharp: Death
        VB: Death
      nameWithType:
        CSharp: AttacksAnimation.Death
        VB: AttacksAnimation.Death
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Death
        VB: Timba.SacredTails.Arena.AttacksAnimation.Death
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Death
        path: ''
        startLine: 10206
      syntax:
        content:
          CSharp: Death = 10
          VB: Death = 10
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Dodge
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Dodge
      language: CSharp
      name:
        CSharp: Dodge
        VB: Dodge
      nameWithType:
        CSharp: AttacksAnimation.Dodge
        VB: AttacksAnimation.Dodge
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Dodge
        VB: Timba.SacredTails.Arena.AttacksAnimation.Dodge
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Dodge
        path: ''
        startLine: 10207
      syntax:
        content:
          CSharp: Dodge = 11
          VB: Dodge = 11
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Emote
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Emote
      language: CSharp
      name:
        CSharp: Emote
        VB: Emote
      nameWithType:
        CSharp: AttacksAnimation.Emote
        VB: AttacksAnimation.Emote
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Emote
        VB: Timba.SacredTails.Arena.AttacksAnimation.Emote
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Emote
        path: ''
        startLine: 10208
      syntax:
        content:
          CSharp: Emote = 12
          VB: Emote = 12
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Recharge
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Recharge
      language: CSharp
      name:
        CSharp: Recharge
        VB: Recharge
      nameWithType:
        CSharp: AttacksAnimation.Recharge
        VB: AttacksAnimation.Recharge
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Recharge
        VB: Timba.SacredTails.Arena.AttacksAnimation.Recharge
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Recharge
        path: ''
        startLine: 10209
      syntax:
        content:
          CSharp: Recharge = 13
          VB: Recharge = 13
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Ready
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Ready
      language: CSharp
      name:
        CSharp: Ready
        VB: Ready
      nameWithType:
        CSharp: AttacksAnimation.Ready
        VB: AttacksAnimation.Ready
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Ready
        VB: Timba.SacredTails.Arena.AttacksAnimation.Ready
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Ready
        path: ''
        startLine: 10210
      syntax:
        content:
          CSharp: Ready = 14
          VB: Ready = 14
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.Arena.AttacksAnimation.Sleep
      commentId: F:Timba.SacredTails.Arena.AttacksAnimation.Sleep
      language: CSharp
      name:
        CSharp: Sleep
        VB: Sleep
      nameWithType:
        CSharp: AttacksAnimation.Sleep
        VB: AttacksAnimation.Sleep
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.AttacksAnimation.Sleep
        VB: Timba.SacredTails.Arena.AttacksAnimation.Sleep
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Sleep
        path: ''
        startLine: 10211
      syntax:
        content:
          CSharp: Sleep = 15
          VB: Sleep = 15
        return:
          type: Timba.SacredTails.Arena.AttacksAnimation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Timba.SacredTails.Arena.CardDatabase
    commentId: T:Timba.SacredTails.Arena.CardDatabase
    language: CSharp
    name:
      CSharp: CardDatabase
      VB: CardDatabase
    nameWithType:
      CSharp: CardDatabase
      VB: CardDatabase
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.CardDatabase
      VB: Timba.SacredTails.Arena.CardDatabase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: CardDatabase
      path: ''
      startLine: 10226
    syntax:
      content:
        CSharp: 'public class CardDatabase : ScriptableObject'
        VB: >-
          Public Class CardDatabase

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.CardDatabase.actionCards
      commentId: F:Timba.SacredTails.Arena.CardDatabase.actionCards
      language: CSharp
      name:
        CSharp: actionCards
        VB: actionCards
      nameWithType:
        CSharp: CardDatabase.actionCards
        VB: CardDatabase.actionCards
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardDatabase.actionCards
        VB: Timba.SacredTails.Arena.CardDatabase.actionCards
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: actionCards
        path: ''
        startLine: 10229
      syntax:
        content:
          CSharp: public List<ActionCard> actionCards
          VB: Public actionCards As List(Of ActionCard)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ActionCard}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards
      commentId: M:Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards
      language: CSharp
      name:
        CSharp: GetJsonActionCards()
        VB: GetJsonActionCards()
      nameWithType:
        CSharp: CardDatabase.GetJsonActionCards()
        VB: CardDatabase.GetJsonActionCards()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards()
        VB: Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetJsonActionCards
        path: ''
        startLine: 10231
      syntax:
        content:
          CSharp: public void GetJsonActionCards()
          VB: Public Sub GetJsonActionCards
      overload: Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardDatabase.SetVfxIndex
      commentId: M:Timba.SacredTails.Arena.CardDatabase.SetVfxIndex
      language: CSharp
      name:
        CSharp: SetVfxIndex()
        VB: SetVfxIndex()
      nameWithType:
        CSharp: CardDatabase.SetVfxIndex()
        VB: CardDatabase.SetVfxIndex()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardDatabase.SetVfxIndex()
        VB: Timba.SacredTails.Arena.CardDatabase.SetVfxIndex()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetVfxIndex
        path: ''
        startLine: 10248
      syntax:
        content:
          CSharp: public void SetVfxIndex()
          VB: Public Sub SetVfxIndex
      overload: Timba.SacredTails.Arena.CardDatabase.SetVfxIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardDatabase.searchByName
      commentId: F:Timba.SacredTails.Arena.CardDatabase.searchByName
      language: CSharp
      name:
        CSharp: searchByName
        VB: searchByName
      nameWithType:
        CSharp: CardDatabase.searchByName
        VB: CardDatabase.searchByName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardDatabase.searchByName
        VB: Timba.SacredTails.Arena.CardDatabase.searchByName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: searchByName
        path: ''
        startLine: 10262
      syntax:
        content:
          CSharp: public bool searchByName
          VB: Public searchByName As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardDatabase.searchByType
      commentId: F:Timba.SacredTails.Arena.CardDatabase.searchByType
      language: CSharp
      name:
        CSharp: searchByType
        VB: searchByType
      nameWithType:
        CSharp: CardDatabase.searchByType
        VB: CardDatabase.searchByType
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardDatabase.searchByType
        VB: Timba.SacredTails.Arena.CardDatabase.searchByType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: searchByType
        path: ''
        startLine: 10267
      syntax:
        content:
          CSharp: public bool searchByType
          VB: Public searchByType As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardDatabase.searchByIndex
      commentId: F:Timba.SacredTails.Arena.CardDatabase.searchByIndex
      language: CSharp
      name:
        CSharp: searchByIndex
        VB: searchByIndex
      nameWithType:
        CSharp: CardDatabase.searchByIndex
        VB: CardDatabase.searchByIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardDatabase.searchByIndex
        VB: Timba.SacredTails.Arena.CardDatabase.searchByIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: searchByIndex
        path: ''
        startLine: 10272
      syntax:
        content:
          CSharp: public bool searchByIndex
          VB: Public searchByIndex As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardDatabase._
      commentId: F:Timba.SacredTails.Arena.CardDatabase._
      language: CSharp
      name:
        CSharp: _
        VB: _
      nameWithType:
        CSharp: CardDatabase._
        VB: CardDatabase._
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardDatabase._
        VB: Timba.SacredTails.Arena.CardDatabase._
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _
        path: ''
        startLine: 10280
      syntax:
        content:
          CSharp: public bool _
          VB: Public _ As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardDatabase.OnValidate
      commentId: M:Timba.SacredTails.Arena.CardDatabase.OnValidate
      language: CSharp
      name:
        CSharp: OnValidate()
        VB: OnValidate()
      nameWithType:
        CSharp: CardDatabase.OnValidate()
        VB: CardDatabase.OnValidate()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardDatabase.OnValidate()
        VB: Timba.SacredTails.Arena.CardDatabase.OnValidate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnValidate
        path: ''
        startLine: 10282
      syntax:
        content:
          CSharp: public void OnValidate()
          VB: Public Sub OnValidate
      overload: Timba.SacredTails.Arena.CardDatabase.OnValidate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.BattleGameMode
    commentId: T:Timba.SacredTails.Arena.BattleGameMode
    language: CSharp
    name:
      CSharp: BattleGameMode
      VB: BattleGameMode
    nameWithType:
      CSharp: BattleGameMode
      VB: BattleGameMode
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleGameMode
      VB: Timba.SacredTails.Arena.BattleGameMode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleGameMode
      path: ''
      startLine: 11860
    syntax:
      content:
        CSharp: 'public class BattleGameMode : MonoBehaviour'
        VB: >-
          Public Class BattleGameMode

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
      language: CSharp
      name:
        CSharp: gameSceneManager
        VB: gameSceneManager
      nameWithType:
        CSharp: BattleGameMode.gameSceneManager
        VB: BattleGameMode.gameSceneManager
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
        VB: Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: gameSceneManager
        path: ''
        startLine: 11866
      syntax:
        content:
          CSharp: public GameSceneManager gameSceneManager
          VB: Public gameSceneManager As GameSceneManager
        return:
          type: Timba.SacredTails.Arena.GameSceneManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.turnsController
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.turnsController
      language: CSharp
      name:
        CSharp: turnsController
        VB: turnsController
      nameWithType:
        CSharp: BattleGameMode.turnsController
        VB: BattleGameMode.turnsController
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.turnsController
        VB: Timba.SacredTails.Arena.BattleGameMode.turnsController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnsController
        path: ''
        startLine: 11867
      syntax:
        content:
          CSharp: public TurnsController turnsController
          VB: Public turnsController As TurnsController
        return:
          type: Timba.SacredTails.Arena.TurnsController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.delayTime
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.delayTime
      language: CSharp
      name:
        CSharp: delayTime
        VB: delayTime
      nameWithType:
        CSharp: BattleGameMode.delayTime
        VB: BattleGameMode.delayTime
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.delayTime
        VB: Timba.SacredTails.Arena.BattleGameMode.delayTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: delayTime
        path: ''
        startLine: 11870
      syntax:
        content:
          CSharp: public float delayTime
          VB: Public delayTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
      language: CSharp
      name:
        CSharp: matchIdSeed
        VB: matchIdSeed
      nameWithType:
        CSharp: BattleGameMode.matchIdSeed
        VB: BattleGameMode.matchIdSeed
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
        VB: Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: matchIdSeed
        path: ''
        startLine: 11871
      syntax:
        content:
          CSharp: public int matchIdSeed
          VB: Public matchIdSeed As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
      language: CSharp
      name:
        CSharp: isViewingMatch
        VB: isViewingMatch
      nameWithType:
        CSharp: BattleGameMode.isViewingMatch
        VB: BattleGameMode.isViewingMatch
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
        VB: Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isViewingMatch
        path: ''
        startLine: 11872
      syntax:
        content:
          CSharp: public bool isViewingMatch
          VB: Public isViewingMatch As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.currentTerrain
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.currentTerrain
      language: CSharp
      name:
        CSharp: currentTerrain
        VB: currentTerrain
      nameWithType:
        CSharp: BattleGameMode.currentTerrain
        VB: BattleGameMode.currentTerrain
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.currentTerrain
        VB: Timba.SacredTails.Arena.BattleGameMode.currentTerrain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: currentTerrain
        path: ''
        startLine: 11877
      syntax:
        content:
          CSharp: public BattleTerrainBehavioursBase currentTerrain
          VB: Public currentTerrain As BattleTerrainBehavioursBase
        return:
          type: Global.BattleTerrainBehavioursBase
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.playerInfo
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.playerInfo
      language: CSharp
      name:
        CSharp: playerInfo
        VB: playerInfo
      nameWithType:
        CSharp: BattleGameMode.playerInfo
        VB: BattleGameMode.playerInfo
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.playerInfo
        VB: Timba.SacredTails.Arena.BattleGameMode.playerInfo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: playerInfo
        path: ''
        startLine: 11883
      syntax:
        content:
          CSharp: public UserInfo playerInfo
          VB: Public playerInfo As UserInfo
        return:
          type: Timba.SacredTails.Arena.UserInfo
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.localCombat
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.localCombat
      language: CSharp
      name:
        CSharp: localCombat
        VB: localCombat
      nameWithType:
        CSharp: BattleGameMode.localCombat
        VB: BattleGameMode.localCombat
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.localCombat
        VB: Timba.SacredTails.Arena.BattleGameMode.localCombat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: localCombat
        path: ''
        startLine: 11884
      syntax:
        content:
          CSharp: public Combat localCombat
          VB: Public localCombat As Combat
        return:
          type: Timba.SacredTails.Arena.Combat
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.enemyInfo
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.enemyInfo
      language: CSharp
      name:
        CSharp: enemyInfo
        VB: enemyInfo
      nameWithType:
        CSharp: BattleGameMode.enemyInfo
        VB: BattleGameMode.enemyInfo
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.enemyInfo
        VB: Timba.SacredTails.Arena.BattleGameMode.enemyInfo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: enemyInfo
        path: ''
        startLine: 11889
      syntax:
        content:
          CSharp: public UserInfo enemyInfo
          VB: Public enemyInfo As UserInfo
        return:
          type: Timba.SacredTails.Arena.UserInfo
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
      language: CSharp
      name:
        CSharp: titleEndMatchPanel
        VB: titleEndMatchPanel
      nameWithType:
        CSharp: BattleGameMode.titleEndMatchPanel
        VB: BattleGameMode.titleEndMatchPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
        VB: Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: titleEndMatchPanel
        path: ''
        startLine: 11913
      syntax:
        content:
          CSharp: public TMP_Text titleEndMatchPanel
          VB: Public titleEndMatchPanel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.blackSprites
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.blackSprites
      language: CSharp
      name:
        CSharp: blackSprites
        VB: blackSprites
      nameWithType:
        CSharp: BattleGameMode.blackSprites
        VB: BattleGameMode.blackSprites
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.blackSprites
        VB: Timba.SacredTails.Arena.BattleGameMode.blackSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: blackSprites
        path: ''
        startLine: 11914
      syntax:
        content:
          CSharp: public List<Sprite> blackSprites
          VB: Public blackSprites As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.whiteSprites
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.whiteSprites
      language: CSharp
      name:
        CSharp: whiteSprites
        VB: whiteSprites
      nameWithType:
        CSharp: BattleGameMode.whiteSprites
        VB: BattleGameMode.whiteSprites
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.whiteSprites
        VB: Timba.SacredTails.Arena.BattleGameMode.whiteSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: whiteSprites
        path: ''
        startLine: 11915
      syntax:
        content:
          CSharp: public List<Sprite> whiteSprites
          VB: Public whiteSprites As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.texts
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.texts
      language: CSharp
      name:
        CSharp: texts
        VB: texts
      nameWithType:
        CSharp: BattleGameMode.texts
        VB: BattleGameMode.texts
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.texts
        VB: Timba.SacredTails.Arena.BattleGameMode.texts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: texts
        path: ''
        startLine: 11916
      syntax:
        content:
          CSharp: public List<TextMeshProUGUI> texts
          VB: Public texts As List(Of TextMeshProUGUI)
        return:
          type: System.Collections.Generic.List{TextMeshProUGUI}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.changeColorElements
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.changeColorElements
      language: CSharp
      name:
        CSharp: changeColorElements
        VB: changeColorElements
      nameWithType:
        CSharp: BattleGameMode.changeColorElements
        VB: BattleGameMode.changeColorElements
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.changeColorElements
        VB: Timba.SacredTails.Arena.BattleGameMode.changeColorElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: changeColorElements
        path: ''
        startLine: 11917
      syntax:
        content:
          CSharp: public List<Image> changeColorElements
          VB: Public changeColorElements As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
      language: CSharp
      name:
        CSharp: changeColorInvertElements
        VB: changeColorInvertElements
      nameWithType:
        CSharp: BattleGameMode.changeColorInvertElements
        VB: BattleGameMode.changeColorInvertElements
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
        VB: Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: changeColorInvertElements
        path: ''
        startLine: 11917
      syntax:
        content:
          CSharp: public List<Image> changeColorInvertElements
          VB: Public changeColorInvertElements As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
      language: CSharp
      name:
        CSharp: changeSpriteElements
        VB: changeSpriteElements
      nameWithType:
        CSharp: BattleGameMode.changeSpriteElements
        VB: BattleGameMode.changeSpriteElements
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
        VB: Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: changeSpriteElements
        path: ''
        startLine: 11918
      syntax:
        content:
          CSharp: public List<Image> changeSpriteElements
          VB: Public changeSpriteElements As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.colors
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.colors
      language: CSharp
      name:
        CSharp: colors
        VB: colors
      nameWithType:
        CSharp: BattleGameMode.colors
        VB: BattleGameMode.colors
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.colors
        VB: Timba.SacredTails.Arena.BattleGameMode.colors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: colors
        path: ''
        startLine: 11919
      syntax:
        content:
          CSharp: public List<Color> colors
          VB: Public colors As List(Of Color)
        return:
          type: System.Collections.Generic.List{Color}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
      language: CSharp
      name:
        CSharp: cameraEndBattle
        VB: cameraEndBattle
      nameWithType:
        CSharp: BattleGameMode.cameraEndBattle
        VB: BattleGameMode.cameraEndBattle
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
        VB: Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cameraEndBattle
        path: ''
        startLine: 11929
      syntax:
        content:
          CSharp: public Camera cameraEndBattle
          VB: Public cameraEndBattle As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
      language: CSharp
      name:
        CSharp: OnStartMatch(GetMatchResult)
        VB: OnStartMatch(GetMatchResult)
      nameWithType:
        CSharp: BattleGameMode.OnStartMatch(GetMatchResult)
        VB: BattleGameMode.OnStartMatch(GetMatchResult)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
        VB: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnStartMatch
        path: ''
        startLine: 11946
      syntax:
        content:
          CSharp: public void OnStartMatch(GetMatchResult getMatchResult)
          VB: Public Sub OnStartMatch(getMatchResult As GetMatchResult)
        parameters:
        - id: getMatchResult
          type: Global.GetMatchResult
      overload: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      language: CSharp
      name:
        CSharp: OnStartMatchRoutine(GetMatchResult)
        VB: OnStartMatchRoutine(GetMatchResult)
      nameWithType:
        CSharp: BattleGameMode.OnStartMatchRoutine(GetMatchResult)
        VB: BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
        VB: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnStartMatchRoutine
        path: ''
        startLine: 11951
      syntax:
        content:
          CSharp: public IEnumerator OnStartMatchRoutine(GetMatchResult getMatchResult)
          VB: Public Function OnStartMatchRoutine(getMatchResult As GetMatchResult) As IEnumerator
        parameters:
        - id: getMatchResult
          type: Global.GetMatchResult
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
      language: CSharp
      name:
        CSharp: MakeShinseiPartyUsingPlayfabId(String)
        VB: MakeShinseiPartyUsingPlayfabId(String)
      nameWithType:
        CSharp: BattleGameMode.MakeShinseiPartyUsingPlayfabId(String)
        VB: BattleGameMode.MakeShinseiPartyUsingPlayfabId(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
        VB: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: MakeShinseiPartyUsingPlayfabId
        path: ''
        startLine: 12018
      summary: "\nBring shinsei party from playfab\n"
      example: []
      syntax:
        content:
          CSharp: public void MakeShinseiPartyUsingPlayfabId(string playfabId)
          VB: Public Sub MakeShinseiPartyUsingPlayfabId(playfabId As String)
        parameters:
        - id: playfabId
          type: System.String
          description: Playfab ID
      overload: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
      language: CSharp
      name:
        CSharp: Initialize(MatchData)
        VB: Initialize(MatchData)
      nameWithType:
        CSharp: BattleGameMode.Initialize(MatchData)
        VB: BattleGameMode.Initialize(MatchData)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
        VB: Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Initialize
        path: ''
        startLine: 12037
      syntax:
        content:
          CSharp: public void Initialize(MatchData matchData)
          VB: Public Sub Initialize(matchData As MatchData)
        parameters:
        - id: matchData
          type: Global.MatchData
      overload: Timba.SacredTails.Arena.BattleGameMode.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean,System.Collections.Generic.List{System.Int32})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean,System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: ShinseiSelected(Boolean, List<Int32>)
        VB: ShinseiSelected(Boolean, List(Of Int32))
      nameWithType:
        CSharp: BattleGameMode.ShinseiSelected(Boolean, List<Int32>)
        VB: BattleGameMode.ShinseiSelected(Boolean, List(Of Int32))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean, System.Collections.Generic.List<System.Int32>)
        VB: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean, System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShinseiSelected
        path: ''
        startLine: 12065
      syntax:
        content:
          CSharp: public void ShinseiSelected(bool endTime, List<int> shinseisPlayer)
          VB: Public Sub ShinseiSelected(endTime As Boolean, shinseisPlayer As List(Of Integer))
        parameters:
        - id: endTime
          type: System.Boolean
        - id: shinseisPlayer
          type: System.Collections.Generic.List{System.Int32}
      overload: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnDisable
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: BattleGameMode.OnDisable()
        VB: BattleGameMode.OnDisable()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnDisable()
        VB: Timba.SacredTails.Arena.BattleGameMode.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnDisable
        path: ''
        startLine: 12093
      syntax:
        content:
          CSharp: public void OnDisable()
          VB: Public Sub OnDisable
      overload: Timba.SacredTails.Arena.BattleGameMode.OnDisable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
      language: CSharp
      name:
        CSharp: OnApplicationQuit()
        VB: OnApplicationQuit()
      nameWithType:
        CSharp: BattleGameMode.OnApplicationQuit()
        VB: BattleGameMode.OnApplicationQuit()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit()
        VB: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnApplicationQuit
        path: ''
        startLine: 12097
      syntax:
        content:
          CSharp: public void OnApplicationQuit()
          VB: Public Sub OnApplicationQuit
      overload: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
      language: CSharp
      name:
        CSharp: CancelSelectShinsei()
        VB: CancelSelectShinsei()
      nameWithType:
        CSharp: BattleGameMode.CancelSelectShinsei()
        VB: BattleGameMode.CancelSelectShinsei()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei()
        VB: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CancelSelectShinsei
        path: ''
        startLine: 12102
      syntax:
        content:
          CSharp: public void CancelSelectShinsei()
          VB: Public Sub CancelSelectShinsei
      overload: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
      language: CSharp
      name:
        CSharp: WaitForOpponentToSelectViewMatch()
        VB: WaitForOpponentToSelectViewMatch()
      nameWithType:
        CSharp: BattleGameMode.WaitForOpponentToSelectViewMatch()
        VB: BattleGameMode.WaitForOpponentToSelectViewMatch()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch()
        VB: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitForOpponentToSelectViewMatch
        path: ''
        startLine: 12113
      syntax:
        content:
          CSharp: public void WaitForOpponentToSelectViewMatch()
          VB: Public Sub WaitForOpponentToSelectViewMatch
      overload: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
      language: CSharp
      name:
        CSharp: WaitForOpponentToSelect()
        VB: WaitForOpponentToSelect()
      nameWithType:
        CSharp: BattleGameMode.WaitForOpponentToSelect()
        VB: BattleGameMode.WaitForOpponentToSelect()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect()
        VB: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitForOpponentToSelect
        path: ''
        startLine: 12120
      syntax:
        content:
          CSharp: public IEnumerator WaitForOpponentToSelect()
          VB: Public Function WaitForOpponentToSelect As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.InitBattle
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.InitBattle
      language: CSharp
      name:
        CSharp: InitBattle()
        VB: InitBattle()
      nameWithType:
        CSharp: BattleGameMode.InitBattle()
        VB: BattleGameMode.InitBattle()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.InitBattle()
        VB: Timba.SacredTails.Arena.BattleGameMode.InitBattle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitBattle
        path: ''
        startLine: 12172
      syntax:
        content:
          CSharp: public void InitBattle()
          VB: Public Sub InitBattle
      overload: Timba.SacredTails.Arena.BattleGameMode.InitBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
      language: CSharp
      name:
        CSharp: OpenChangeShinseiPanel()
        VB: OpenChangeShinseiPanel()
      nameWithType:
        CSharp: BattleGameMode.OpenChangeShinseiPanel()
        VB: BattleGameMode.OpenChangeShinseiPanel()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel()
        VB: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OpenChangeShinseiPanel
        path: ''
        startLine: 12267
      syntax:
        content:
          CSharp: public void OpenChangeShinseiPanel()
          VB: Public Sub OpenChangeShinseiPanel
      overload: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(Timba.SacredTails.Arena.UserInfo@)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(Timba.SacredTails.Arena.UserInfo@)
      language: CSharp
      name:
        CSharp: UpdateCurrentShinsei(ref UserInfo)
        VB: UpdateCurrentShinsei(ByRef UserInfo)
      nameWithType:
        CSharp: BattleGameMode.UpdateCurrentShinsei(ref UserInfo)
        VB: BattleGameMode.UpdateCurrentShinsei(ByRef UserInfo)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(ref Timba.SacredTails.Arena.UserInfo)
        VB: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(ByRef Timba.SacredTails.Arena.UserInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateCurrentShinsei
        path: ''
        startLine: 12320
      syntax:
        content:
          CSharp: public void UpdateCurrentShinsei(ref UserInfo userInfo)
          VB: Public Sub UpdateCurrentShinsei(ByRef userInfo As UserInfo)
        parameters:
        - id: userInfo
          type: Timba.SacredTails.Arena.UserInfo
      overload: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action,System.String,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: ShowPopupEndMatch(Action, String, Boolean)
        VB: ShowPopupEndMatch(Action, String, Boolean)
      nameWithType:
        CSharp: BattleGameMode.ShowPopupEndMatch(Action, String, Boolean)
        VB: BattleGameMode.ShowPopupEndMatch(Action, String, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action, System.String, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowPopupEndMatch
        path: ''
        startLine: 12354
      syntax:
        content:
          CSharp: public void ShowPopupEndMatch(Action callback, string message, bool localPlayerWon)
          VB: Public Sub ShowPopupEndMatch(callback As Action, message As String, localPlayerWon As Boolean)
        parameters:
        - id: callback
          type: Global.Action
        - id: message
          type: System.String
        - id: localPlayerWon
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
      language: CSharp
      name:
        CSharp: hasShowEndResult
        VB: hasShowEndResult
      nameWithType:
        CSharp: BattleGameMode.hasShowEndResult
        VB: BattleGameMode.hasShowEndResult
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
        VB: Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: hasShowEndResult
        path: ''
        startLine: 12373
      syntax:
        content:
          CSharp: public bool hasShowEndResult
          VB: Public hasShowEndResult As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean,Action)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean,Action)
      language: CSharp
      name:
        CSharp: ShowEndResultPanel(Boolean, Action)
        VB: ShowEndResultPanel(Boolean, Action)
      nameWithType:
        CSharp: BattleGameMode.ShowEndResultPanel(Boolean, Action)
        VB: BattleGameMode.ShowEndResultPanel(Boolean, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean, Action)
        VB: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowEndResultPanel
        path: ''
        startLine: 12374
      syntax:
        content:
          CSharp: public void ShowEndResultPanel(bool localPlayerWon, Action onEndAnimations = null)
          VB: Public Sub ShowEndResultPanel(localPlayerWon As Boolean, onEndAnimations As Action = Nothing)
        parameters:
        - id: localPlayerWon
          type: System.Boolean
        - id: onEndAnimations
          type: Global.Action
      overload: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean,Action)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean,Action)
      language: CSharp
      name:
        CSharp: SpawnWinnerShisneis(Boolean, Action)
        VB: SpawnWinnerShisneis(Boolean, Action)
      nameWithType:
        CSharp: BattleGameMode.SpawnWinnerShisneis(Boolean, Action)
        VB: BattleGameMode.SpawnWinnerShisneis(Boolean, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean, Action)
        VB: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SpawnWinnerShisneis
        path: ''
        startLine: 12403
      syntax:
        content:
          CSharp: public void SpawnWinnerShisneis(bool localPlayerWon, Action onEndAnimations = null)
          VB: Public Sub SpawnWinnerShisneis(localPlayerWon As Boolean, onEndAnimations As Action = Nothing)
        parameters:
        - id: localPlayerWon
          type: System.Boolean
        - id: onEndAnimations
          type: Global.Action
      overload: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
      language: CSharp
      name:
        CSharp: GoBackToLobbyPopup()
        VB: GoBackToLobbyPopup()
      nameWithType:
        CSharp: BattleGameMode.GoBackToLobbyPopup()
        VB: BattleGameMode.GoBackToLobbyPopup()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup()
        VB: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GoBackToLobbyPopup
        path: ''
        startLine: 12458
      syntax:
        content:
          CSharp: public void GoBackToLobbyPopup()
          VB: Public Sub GoBackToLobbyPopup
      overload: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
      language: CSharp
      name:
        CSharp: GoBackToLobby()
        VB: GoBackToLobby()
      nameWithType:
        CSharp: BattleGameMode.GoBackToLobby()
        VB: BattleGameMode.GoBackToLobby()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby()
        VB: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GoBackToLobby
        path: ''
        startLine: 12471
      syntax:
        content:
          CSharp: public void GoBackToLobby()
          VB: Public Sub GoBackToLobby
      overload: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues})
      language: CSharp
      name:
        CSharp: EndMatchCheck(List<ResourceBarValues>)
        VB: EndMatchCheck(List(Of ResourceBarValues))
      nameWithType:
        CSharp: BattleGameMode.EndMatchCheck(List<ResourceBarValues>)
        VB: BattleGameMode.EndMatchCheck(List(Of ResourceBarValues))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List<Timba.SacredTails.Arena.ResourceBarValues>)
        VB: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List(Of Timba.SacredTails.Arena.ResourceBarValues))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: EndMatchCheck
        path: ''
        startLine: 12485
      syntax:
        content:
          CSharp: public bool EndMatchCheck(List<ResourceBarValues> healthBars)
          VB: Public Function EndMatchCheck(healthBars As List(Of ResourceBarValues)) As Boolean
        parameters:
        - id: healthBars
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: AddTextToLog(String, Dictionary<String, String>)
        VB: AddTextToLog(String, Dictionary(Of String, String))
      nameWithType:
        CSharp: BattleGameMode.AddTextToLog(String, Dictionary<String, String>)
        VB: BattleGameMode.AddTextToLog(String, Dictionary(Of String, String))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
        VB: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: AddTextToLog
        path: ''
        startLine: 12511
      syntax:
        content:
          CSharp: public void AddTextToLog(string text, Dictionary<string, string> customCodes = null)
          VB: Public Sub AddTextToLog(text As String, customCodes As Dictionary(Of String, String) = Nothing)
        parameters:
        - id: text
          type: System.String
        - id: customCodes
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action{Timba.SacredTails.Arena.Combat})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action{Timba.SacredTails.Arena.Combat})
      language: CSharp
      name:
        CSharp: GetOwnCombatData(Action<Combat>)
        VB: GetOwnCombatData(Action(Of Combat))
      nameWithType:
        CSharp: BattleGameMode.GetOwnCombatData(Action<Combat>)
        VB: BattleGameMode.GetOwnCombatData(Action(Of Combat))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action<Timba.SacredTails.Arena.Combat>)
        VB: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action(Of Timba.SacredTails.Arena.Combat))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetOwnCombatData
        path: ''
        startLine: 12518
      syntax:
        content:
          CSharp: public void GetOwnCombatData(Action<Combat> onRecieveData)
          VB: Public Sub GetOwnCombatData(onRecieveData As Action(Of Combat))
        parameters:
        - id: onRecieveData
          type: Global.Action{Timba.SacredTails.Arena.Combat}
      overload: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
      language: CSharp
      name:
        CSharp: GetCurrentShinseiEnergy()
        VB: GetCurrentShinseiEnergy()
      nameWithType:
        CSharp: BattleGameMode.GetCurrentShinseiEnergy()
        VB: BattleGameMode.GetCurrentShinseiEnergy()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy()
        VB: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetCurrentShinseiEnergy
        path: ''
        startLine: 12543
      syntax:
        content:
          CSharp: public int GetCurrentShinseiEnergy()
          VB: Public Function GetCurrentShinseiEnergy As Integer
        return:
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.BattleViewerController
    commentId: T:Timba.SacredTails.Arena.BattleViewerController
    language: CSharp
    name:
      CSharp: BattleViewerController
      VB: BattleViewerController
    nameWithType:
      CSharp: BattleViewerController
      VB: BattleViewerController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleViewerController
      VB: Timba.SacredTails.Arena.BattleViewerController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleViewerController
      path: ''
      startLine: 12565
    syntax:
      content:
        CSharp: 'public class BattleViewerController : MonoBehaviour'
        VB: >-
          Public Class BattleViewerController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleViewerController.battleGameMode
      commentId: F:Timba.SacredTails.Arena.BattleViewerController.battleGameMode
      language: CSharp
      name:
        CSharp: battleGameMode
        VB: battleGameMode
      nameWithType:
        CSharp: BattleViewerController.battleGameMode
        VB: BattleViewerController.battleGameMode
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleViewerController.battleGameMode
        VB: Timba.SacredTails.Arena.BattleViewerController.battleGameMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleGameMode
        path: ''
        startLine: 12567
      syntax:
        content:
          CSharp: public BattleGameMode battleGameMode
          VB: Public battleGameMode As BattleGameMode
        return:
          type: Timba.SacredTails.Arena.BattleGameMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: Initialize(String, Boolean)
        VB: Initialize(String, Boolean)
      nameWithType:
        CSharp: BattleViewerController.Initialize(String, Boolean)
        VB: BattleViewerController.Initialize(String, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Initialize
        path: ''
        startLine: 12569
      syntax:
        content:
          CSharp: public void Initialize(string matchId, bool isViewing)
          VB: Public Sub Initialize(matchId As String, isViewing As Boolean)
        parameters:
        - id: matchId
          type: System.String
        - id: isViewing
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleViewerController.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.TurnsController
    commentId: T:Timba.SacredTails.Arena.TurnsController
    language: CSharp
    name:
      CSharp: TurnsController
      VB: TurnsController
    nameWithType:
      CSharp: TurnsController
      VB: TurnsController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.TurnsController
      VB: Timba.SacredTails.Arena.TurnsController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: TurnsController
      path: ''
      startLine: 12621
    summary: "\nThis class handles the flow of the battle once it has started.\nThings like sending turns, recieving the match state and executing the turns with vfx are done/delegated here.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TurnsController : MonoBehaviour'
        VB: >-
          Public Class TurnsController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
      commentId: F:Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
      language: CSharp
      name:
        CSharp: turnActionsDatabase
        VB: turnActionsDatabase
      nameWithType:
        CSharp: TurnsController.turnActionsDatabase
        VB: TurnsController.turnActionsDatabase
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
        VB: Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnActionsDatabase
        path: ''
        startLine: 12636
      syntax:
        content:
          CSharp: public List<BattleActionsBase> turnActionsDatabase
          VB: Public turnActionsDatabase As List(Of BattleActionsBase)
        return:
          type: System.Collections.Generic.List{BattleActionsBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.alteredStateController
      commentId: F:Timba.SacredTails.Arena.TurnsController.alteredStateController
      language: CSharp
      name:
        CSharp: alteredStateController
        VB: alteredStateController
      nameWithType:
        CSharp: TurnsController.alteredStateController
        VB: TurnsController.alteredStateController
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.alteredStateController
        VB: Timba.SacredTails.Arena.TurnsController.alteredStateController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: alteredStateController
        path: ''
        startLine: 12638
      syntax:
        content:
          CSharp: public AlteredStateController alteredStateController
          VB: Public alteredStateController As AlteredStateController
        return:
          type: Global.AlteredStateController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
      commentId: F:Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
      language: CSharp
      name:
        CSharp: turnActionsDatabaseDictionary
        VB: turnActionsDatabaseDictionary
      nameWithType:
        CSharp: TurnsController.turnActionsDatabaseDictionary
        VB: TurnsController.turnActionsDatabaseDictionary
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
        VB: Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnActionsDatabaseDictionary
        path: ''
        startLine: 12639
      syntax:
        content:
          CSharp: public Dictionary<ActionTypeEnum, BattleActionsBase> turnActionsDatabaseDictionary
          VB: Public turnActionsDatabaseDictionary As Dictionary(Of ActionTypeEnum, BattleActionsBase)
        return:
          type: System.Collections.Generic.Dictionary{ActionTypeEnum,BattleActionsBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.localPlayer
      commentId: F:Timba.SacredTails.Arena.TurnsController.localPlayer
      language: CSharp
      name:
        CSharp: localPlayer
        VB: localPlayer
      nameWithType:
        CSharp: TurnsController.localPlayer
        VB: TurnsController.localPlayer
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.localPlayer
        VB: Timba.SacredTails.Arena.TurnsController.localPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: localPlayer
        path: ''
        startLine: 12644
      syntax:
        content:
          CSharp: public CombatPlayer localPlayer
          VB: Public localPlayer As CombatPlayer
        return:
          type: Timba.SacredTails.Arena.CombatPlayer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.vfxsActionType
      commentId: F:Timba.SacredTails.Arena.TurnsController.vfxsActionType
      language: CSharp
      name:
        CSharp: vfxsActionType
        VB: vfxsActionType
      nameWithType:
        CSharp: TurnsController.vfxsActionType
        VB: TurnsController.vfxsActionType
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.vfxsActionType
        VB: Timba.SacredTails.Arena.TurnsController.vfxsActionType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxsActionType
        path: ''
        startLine: 12645
      syntax:
        content:
          CSharp: public List<VFXTypeData> vfxsActionType
          VB: Public vfxsActionType As List(Of VFXTypeData)
        return:
          type: System.Collections.Generic.List{VFXTypeData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.isViewingMatch
      commentId: F:Timba.SacredTails.Arena.TurnsController.isViewingMatch
      language: CSharp
      name:
        CSharp: isViewingMatch
        VB: isViewingMatch
      nameWithType:
        CSharp: TurnsController.isViewingMatch
        VB: TurnsController.isViewingMatch
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.isViewingMatch
        VB: Timba.SacredTails.Arena.TurnsController.isViewingMatch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isViewingMatch
        path: ''
        startLine: 12646
      syntax:
        content:
          CSharp: public bool isViewingMatch
          VB: Public isViewingMatch As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.matchEnded
      commentId: F:Timba.SacredTails.Arena.TurnsController.matchEnded
      language: CSharp
      name:
        CSharp: matchEnded
        VB: matchEnded
      nameWithType:
        CSharp: TurnsController.matchEnded
        VB: TurnsController.matchEnded
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.matchEnded
        VB: Timba.SacredTails.Arena.TurnsController.matchEnded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: matchEnded
        path: ''
        startLine: 12663
      syntax:
        content:
          CSharp: public bool matchEnded
          VB: Public matchEnded As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
      commentId: F:Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
      language: CSharp
      name:
        CSharp: battlePlayerCurrentActions
        VB: battlePlayerCurrentActions
      nameWithType:
        CSharp: TurnsController.battlePlayerCurrentActions
        VB: TurnsController.battlePlayerCurrentActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
        VB: Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battlePlayerCurrentActions
        path: ''
        startLine: 12665
      syntax:
        content:
          CSharp: public List<BattleActionData> battlePlayerCurrentActions
          VB: Public battlePlayerCurrentActions As List(Of BattleActionData)
        return:
          type: System.Collections.Generic.List{BattleActionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
      commentId: F:Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
      language: CSharp
      name:
        CSharp: battleEnemyCurrentActions
        VB: battleEnemyCurrentActions
      nameWithType:
        CSharp: TurnsController.battleEnemyCurrentActions
        VB: TurnsController.battleEnemyCurrentActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
        VB: Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleEnemyCurrentActions
        path: ''
        startLine: 12666
      syntax:
        content:
          CSharp: public List<BattleActionData> battleEnemyCurrentActions
          VB: Public battleEnemyCurrentActions As List(Of BattleActionData)
        return:
          type: System.Collections.Generic.List{BattleActionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.uiCards
      commentId: F:Timba.SacredTails.Arena.TurnsController.uiCards
      language: CSharp
      name:
        CSharp: uiCards
        VB: uiCards
      nameWithType:
        CSharp: TurnsController.uiCards
        VB: TurnsController.uiCards
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.uiCards
        VB: Timba.SacredTails.Arena.TurnsController.uiCards
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: uiCards
        path: ''
        startLine: 12674
      syntax:
        content:
          CSharp: public List<CardUI> uiCards
          VB: Public uiCards As List(Of CardUI)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.CardUI}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.camManager
      commentId: F:Timba.SacredTails.Arena.TurnsController.camManager
      language: CSharp
      name:
        CSharp: camManager
        VB: camManager
      nameWithType:
        CSharp: TurnsController.camManager
        VB: TurnsController.camManager
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.camManager
        VB: Timba.SacredTails.Arena.TurnsController.camManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: camManager
        path: ''
        startLine: 12680
      syntax:
        content:
          CSharp: public CameraPlaneController camManager
          VB: Public camManager As CameraPlaneController
        return:
          type: Global.CameraPlaneController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.vfxPositions
      commentId: F:Timba.SacredTails.Arena.TurnsController.vfxPositions
      language: CSharp
      name:
        CSharp: vfxPositions
        VB: vfxPositions
      nameWithType:
        CSharp: TurnsController.vfxPositions
        VB: TurnsController.vfxPositions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.vfxPositions
        VB: Timba.SacredTails.Arena.TurnsController.vfxPositions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxPositions
        path: ''
        startLine: 12687
      syntax:
        content:
          CSharp: public List<VFXPositionData> vfxPositions
          VB: Public vfxPositions As List(Of VFXPositionData)
        return:
          type: System.Collections.Generic.List{VFXPositionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
      commentId: F:Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
      language: CSharp
      name:
        CSharp: vfxPositionsDictionary
        VB: vfxPositionsDictionary
      nameWithType:
        CSharp: TurnsController.vfxPositionsDictionary
        VB: TurnsController.vfxPositionsDictionary
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
        VB: Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxPositionsDictionary
        path: ''
        startLine: 12688
      syntax:
        content:
          CSharp: public Dictionary<VFXPositionEnum, Transform> vfxPositionsDictionary
          VB: Public vfxPositionsDictionary As Dictionary(Of VFXPositionEnum, Transform)
        return:
          type: System.Collections.Generic.Dictionary{VFXPositionEnum,Transform}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.isPlayerSleep
      commentId: F:Timba.SacredTails.Arena.TurnsController.isPlayerSleep
      language: CSharp
      name:
        CSharp: isPlayerSleep
        VB: isPlayerSleep
      nameWithType:
        CSharp: TurnsController.isPlayerSleep
        VB: TurnsController.isPlayerSleep
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.isPlayerSleep
        VB: Timba.SacredTails.Arena.TurnsController.isPlayerSleep
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isPlayerSleep
        path: ''
        startLine: 12690
      syntax:
        content:
          CSharp: public bool isPlayerSleep
          VB: Public isPlayerSleep As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.isEnemySleep
      commentId: F:Timba.SacredTails.Arena.TurnsController.isEnemySleep
      language: CSharp
      name:
        CSharp: isEnemySleep
        VB: isEnemySleep
      nameWithType:
        CSharp: TurnsController.isEnemySleep
        VB: TurnsController.isEnemySleep
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.isEnemySleep
        VB: Timba.SacredTails.Arena.TurnsController.isEnemySleep
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isEnemySleep
        path: ''
        startLine: 12691
      syntax:
        content:
          CSharp: public bool isEnemySleep
          VB: Public isEnemySleep As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
      commentId: F:Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
      language: CSharp
      name:
        CSharp: testMatchSendTurnAutomatically
        VB: testMatchSendTurnAutomatically
      nameWithType:
        CSharp: TurnsController.testMatchSendTurnAutomatically
        VB: TurnsController.testMatchSendTurnAutomatically
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
        VB: Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: testMatchSendTurnAutomatically
        path: ''
        startLine: 12696
      syntax:
        content:
          CSharp: public bool testMatchSendTurnAutomatically
          VB: Public testMatchSendTurnAutomatically As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.cardToTest
      commentId: F:Timba.SacredTails.Arena.TurnsController.cardToTest
      language: CSharp
      name:
        CSharp: cardToTest
        VB: cardToTest
      nameWithType:
        CSharp: TurnsController.cardToTest
        VB: TurnsController.cardToTest
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.cardToTest
        VB: Timba.SacredTails.Arena.TurnsController.cardToTest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardToTest
        path: ''
        startLine: 12697
      syntax:
        content:
          CSharp: public int cardToTest
          VB: Public cardToTest As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode,System.Boolean)
      language: CSharp
      name:
        CSharp: Init(BattleGameMode, Boolean)
        VB: Init(BattleGameMode, Boolean)
      nameWithType:
        CSharp: TurnsController.Init(BattleGameMode, Boolean)
        VB: TurnsController.Init(BattleGameMode, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode, System.Boolean)
        VB: Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 12723
      summary: "\nInitialize turns controller by setting the vfx positions(enemy, center and player),\nthen  initialize a dictionary with of the battleActions(attack,buffdebuff,etc)\nAlso it susbscribe to the change of turn to execute the InitNewTurn.\n"
      example: []
      syntax:
        content:
          CSharp: public void Init(BattleGameMode battleGameMode, bool isViewing = false)
          VB: Public Sub Init(battleGameMode As BattleGameMode, isViewing As Boolean = False)
        parameters:
        - id: battleGameMode
          type: Timba.SacredTails.Arena.BattleGameMode
          description: 'Reference to the battlemode in order to acces the users data i.e: shisneis'
        - id: isViewing
          type: System.Boolean
          description: if the user is watching a match or participating in the match
      overload: Timba.SacredTails.Arena.TurnsController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.InitNewTurn
      commentId: M:Timba.SacredTails.Arena.TurnsController.InitNewTurn
      language: CSharp
      name:
        CSharp: InitNewTurn()
        VB: InitNewTurn()
      nameWithType:
        CSharp: TurnsController.InitNewTurn()
        VB: TurnsController.InitNewTurn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.InitNewTurn()
        VB: Timba.SacredTails.Arena.TurnsController.InitNewTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitNewTurn
        path: ''
        startLine: 12759
      summary: "\nInit new turn checking if any player has a sleep in his battleActions \nin order to execute an automatic skipturn. This is temporal logic.\nThe sleep logic should be it&apos;s own BattleAction/AlteredState.\n"
      example: []
      syntax:
        content:
          CSharp: public void InitNewTurn()
          VB: Public Sub InitNewTurn
      overload: Timba.SacredTails.Arena.TurnsController.InitNewTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.secondsToSendTurnAfterTurnInit
      commentId: F:Timba.SacredTails.Arena.TurnsController.secondsToSendTurnAfterTurnInit
      language: CSharp
      name:
        CSharp: secondsToSendTurnAfterTurnInit
        VB: secondsToSendTurnAfterTurnInit
      nameWithType:
        CSharp: TurnsController.secondsToSendTurnAfterTurnInit
        VB: TurnsController.secondsToSendTurnAfterTurnInit
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.secondsToSendTurnAfterTurnInit
        VB: Timba.SacredTails.Arena.TurnsController.secondsToSendTurnAfterTurnInit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: secondsToSendTurnAfterTurnInit
        path: ''
        startLine: 12826
      syntax:
        content:
          CSharp: public float secondsToSendTurnAfterTurnInit
          VB: Public secondsToSendTurnAfterTurnInit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
      commentId: M:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
      language: CSharp
      name:
        CSharp: CurrentActionsHasSkipTurnForLocalPlayer()
        VB: CurrentActionsHasSkipTurnForLocalPlayer()
      nameWithType:
        CSharp: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
        VB: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
        VB: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CurrentActionsHasSkipTurnForLocalPlayer
        path: ''
        startLine: 12874
      summary: "\nChecks the actions of both players to see if any of the both \nhas a skip turn directed to the local player\n"
      example: []
      syntax:
        content:
          CSharp: public bool CurrentActionsHasSkipTurnForLocalPlayer()
          VB: Public Function CurrentActionsHasSkipTurnForLocalPlayer As Boolean
        return:
          type: System.Boolean
          description: 'Player has skip turn '
      overload: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
      commentId: M:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
      language: CSharp
      name:
        CSharp: CurrentActionsHasSkipTurnForEnemy()
        VB: CurrentActionsHasSkipTurnForEnemy()
      nameWithType:
        CSharp: TurnsController.CurrentActionsHasSkipTurnForEnemy()
        VB: TurnsController.CurrentActionsHasSkipTurnForEnemy()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy()
        VB: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CurrentActionsHasSkipTurnForEnemy
        path: ''
        startLine: 12890
      summary: "\nChecks the actions of both players to see if any of the both \nhas a skip turn directed to the enemy player\n"
      example: []
      syntax:
        content:
          CSharp: public bool CurrentActionsHasSkipTurnForEnemy()
          VB: Public Function CurrentActionsHasSkipTurnForEnemy As Boolean
        return:
          type: System.Boolean
          description: 'Enemy has skip turn '
      overload: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
      language: CSharp
      name:
        CSharp: BtnSendTurn(Int32)
        VB: BtnSendTurn(Int32)
      nameWithType:
        CSharp: TurnsController.BtnSendTurn(Int32)
        VB: TurnsController.BtnSendTurn(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: BtnSendTurn
        path: ''
        startLine: 12985
      summary: "\nMethod that will be called by the cards buttons.\nThis method will start sending a turn to the server with the SendMyTurn method.\n"
      example: []
      syntax:
        content:
          CSharp: public void BtnSendTurn(int indexCard)
          VB: Public Sub BtnSendTurn(indexCard As Integer)
        parameters:
        - id: indexCard
          type: System.Int32
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.BtnSendTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
      language: CSharp
      name:
        CSharp: SendMyTurn(Int32)
        VB: SendMyTurn(Int32)
      nameWithType:
        CSharp: TurnsController.SendMyTurn(Int32)
        VB: TurnsController.SendMyTurn(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SendMyTurn
        path: ''
        startLine: 12995
      summary: "\nPrepare my turn with the card selected, execute it in local(cameras,ui) and send it to the other player.\nAlso check if the card has been forbideen by other card effect, if so then shows a popup explaining that.\n"
      example: []
      syntax:
        content:
          CSharp: public void SendMyTurn(int indexCard)
          VB: Public Sub SendMyTurn(indexCard As Integer)
        parameters:
        - id: indexCard
          type: System.Int32
          description: Index of card
      overload: Timba.SacredTails.Arena.TurnsController.SendMyTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.TestSendTurn
      commentId: M:Timba.SacredTails.Arena.TurnsController.TestSendTurn
      language: CSharp
      name:
        CSharp: TestSendTurn()
        VB: TestSendTurn()
      nameWithType:
        CSharp: TurnsController.TestSendTurn()
        VB: TurnsController.TestSendTurn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.TestSendTurn()
        VB: Timba.SacredTails.Arena.TurnsController.TestSendTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: TestSendTurn
        path: ''
        startLine: 13042
      summary: "\nFor testing only, this method will send an automatic turn to a bot player in the server.\n"
      example: []
      syntax:
        content:
          CSharp: public void TestSendTurn()
          VB: Public Sub TestSendTurn
      overload: Timba.SacredTails.Arena.TurnsController.TestSendTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.alreadyCheckWinnerOnSend
      commentId: F:Timba.SacredTails.Arena.TurnsController.alreadyCheckWinnerOnSend
      language: CSharp
      name:
        CSharp: alreadyCheckWinnerOnSend
        VB: alreadyCheckWinnerOnSend
      nameWithType:
        CSharp: TurnsController.alreadyCheckWinnerOnSend
        VB: TurnsController.alreadyCheckWinnerOnSend
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.alreadyCheckWinnerOnSend
        VB: Timba.SacredTails.Arena.TurnsController.alreadyCheckWinnerOnSend
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: alreadyCheckWinnerOnSend
        path: ''
        startLine: 13061
      syntax:
        content:
          CSharp: public bool alreadyCheckWinnerOnSend
          VB: Public alreadyCheckWinnerOnSend As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32,System.Int32,Action,Action)
      commentId: M:Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32,System.Int32,Action,Action)
      language: CSharp
      name:
        CSharp: SendTurnRequest(Int32, Int32, Action, Action)
        VB: SendTurnRequest(Int32, Int32, Action, Action)
      nameWithType:
        CSharp: TurnsController.SendTurnRequest(Int32, Int32, Action, Action)
        VB: TurnsController.SendTurnRequest(Int32, Int32, Action, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32, System.Int32, Action, Action)
        VB: Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32, System.Int32, Action, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SendTurnRequest
        path: ''
        startLine: 13069
      summary: "\nMain function to send turn. Takes the index card and send a petition to the server to register this turn in the database.\nthe server process it and then with the server response we continue to the WaitOponentTurn() method in order to wait for the other\nplayer to also send a turn\n"
      example: []
      syntax:
        content:
          CSharp: public void SendTurnRequest(int cardId, int timesTryingToSendTurn = 0, Action Callback = null, Action BadCallback = null)
          VB: Public Sub SendTurnRequest(cardId As Integer, timesTryingToSendTurn As Integer = 0, Callback As Action = Nothing, BadCallback As Action = Nothing)
        parameters:
        - id: cardId
          type: System.Int32
          description: The id of card that you need to send i.e(0,1,2,3...)
        - id: timesTryingToSendTurn
          type: System.Int32
          description: Times trying to send a turn, more than 5 is consider a player disconnect
        - id: Callback
          type: Global.Action
        - id: BadCallback
          type: Global.Action
      overload: Timba.SacredTails.Arena.TurnsController.SendTurnRequest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(Timba.SacredTails.Arena.ActionCard)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(Timba.SacredTails.Arena.ActionCard)
      language: CSharp
      name:
        CSharp: ForbiddenActionCheck(ActionCard)
        VB: ForbiddenActionCheck(ActionCard)
      nameWithType:
        CSharp: TurnsController.ForbiddenActionCheck(ActionCard)
        VB: TurnsController.ForbiddenActionCheck(ActionCard)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(Timba.SacredTails.Arena.ActionCard)
        VB: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(Timba.SacredTails.Arena.ActionCard)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ForbiddenActionCheck
        path: ''
        startLine: 13151
      syntax:
        content:
          CSharp: public bool ForbiddenActionCheck(ActionCard actionCard)
          VB: Public Function ForbiddenActionCheck(actionCard As ActionCard) As Boolean
        parameters:
        - id: actionCard
          type: Timba.SacredTails.Arena.ActionCard
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(Timba.SacredTails.Arena.ActionCard)
      commentId: M:Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(Timba.SacredTails.Arena.ActionCard)
      language: CSharp
      name:
        CSharp: SetForbiddenActions(ActionCard)
        VB: SetForbiddenActions(ActionCard)
      nameWithType:
        CSharp: TurnsController.SetForbiddenActions(ActionCard)
        VB: TurnsController.SetForbiddenActions(ActionCard)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(Timba.SacredTails.Arena.ActionCard)
        VB: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(Timba.SacredTails.Arena.ActionCard)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetForbiddenActions
        path: ''
        startLine: 13160
      syntax:
        content:
          CSharp: public void SetForbiddenActions(ActionCard actionCard)
          VB: Public Sub SetForbiddenActions(actionCard As ActionCard)
        parameters:
        - id: actionCard
          type: Timba.SacredTails.Arena.ActionCard
      overload: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
      commentId: M:Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
      language: CSharp
      name:
        CSharp: ReduceForbiddenActionsDuration()
        VB: ReduceForbiddenActionsDuration()
      nameWithType:
        CSharp: TurnsController.ReduceForbiddenActionsDuration()
        VB: TurnsController.ReduceForbiddenActionsDuration()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration()
        VB: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ReduceForbiddenActionsDuration
        path: ''
        startLine: 13173
      syntax:
        content:
          CSharp: public void ReduceForbiddenActionsDuration()
          VB: Public Sub ReduceForbiddenActionsDuration
      overload: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(System.Collections.Generic.List{BattleActionData}@,System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(System.Collections.Generic.List{BattleActionData}@,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: CalculateIncomingActions(ref List<BattleActionData>, Int32, Int32)
        VB: CalculateIncomingActions(ByRef List(Of BattleActionData), Int32, Int32)
      nameWithType:
        CSharp: TurnsController.CalculateIncomingActions(ref List<BattleActionData>, Int32, Int32)
        VB: TurnsController.CalculateIncomingActions(ByRef List(Of BattleActionData), Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(ref System.Collections.Generic.List<BattleActionData>, System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(ByRef System.Collections.Generic.List(Of BattleActionData), System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CalculateIncomingActions
        path: ''
        startLine: 13191
      summary: "\nExecute the action of the target player on this turn, uses the battleaction dictionary to execute the pending actions\nfrom the player.  Finally it checks if the shinseis are all dead in order to end the match.\n"
      example: []
      syntax:
        content:
          CSharp: public void CalculateIncomingActions(ref List<BattleActionData> currentActionsData, int playerIndex, int ppCost)
          VB: Public Sub CalculateIncomingActions(ByRef currentActionsData As List(Of BattleActionData), playerIndex As Integer, ppCost As Integer)
        parameters:
        - id: currentActionsData
          type: System.Collections.Generic.List{BattleActionData}
          description: Actions executed this turn
        - id: playerIndex
          type: System.Int32
          description: Index of user
        - id: ppCost
          type: System.Int32
          description: ppCost of card
      overload: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean,Timba.SacredTails.Arena.UserInfo)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean,Timba.SacredTails.Arena.UserInfo)
      language: CSharp
      name:
        CSharp: CheckEndMatch(Boolean, UserInfo)
        VB: CheckEndMatch(Boolean, UserInfo)
      nameWithType:
        CSharp: TurnsController.CheckEndMatch(Boolean, UserInfo)
        VB: TurnsController.CheckEndMatch(Boolean, UserInfo)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean, Timba.SacredTails.Arena.UserInfo)
        VB: Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean, Timba.SacredTails.Arena.UserInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckEndMatch
        path: ''
        startLine: 13284
      summary: "\nCheck if the match has ended due to all the shinseis beign death\n"
      example: []
      syntax:
        content:
          CSharp: public void CheckEndMatch(bool isLocalPlayer, UserInfo otherPlayer)
          VB: Public Sub CheckEndMatch(isLocalPlayer As Boolean, otherPlayer As UserInfo)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
          description: Is the player asking, the current player
        - id: otherPlayer
          type: Timba.SacredTails.Arena.UserInfo
          description: Player to check if shinseis are death
      overload: Timba.SacredTails.Arena.TurnsController.CheckEndMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32)
      language: CSharp
      name:
        CSharp: CheckDeadTime(Int32)
        VB: CheckDeadTime(Int32)
      nameWithType:
        CSharp: TurnsController.CheckDeadTime(Int32)
        VB: TurnsController.CheckDeadTime(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckDeadTime
        path: ''
        startLine: 13302
      summary: "\nCheck the dead time in order to make the InitTurnsFlow() wait that time.\n"
      example: []
      syntax:
        content:
          CSharp: public int CheckDeadTime(int healthOther)
          VB: Public Function CheckDeadTime(healthOther As Integer) As Integer
        parameters:
        - id: healthOther
          type: System.Int32
          description: 'helth of other player current shinsei '
        return:
          type: System.Int32
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.CheckDeadTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.deathTime
      commentId: F:Timba.SacredTails.Arena.TurnsController.deathTime
      language: CSharp
      name:
        CSharp: deathTime
        VB: deathTime
      nameWithType:
        CSharp: TurnsController.deathTime
        VB: TurnsController.deathTime
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.deathTime
        VB: Timba.SacredTails.Arena.TurnsController.deathTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: deathTime
        path: ''
        startLine: 13354
      syntax:
        content:
          CSharp: public int deathTime
          VB: Public deathTime As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
      commentId: F:Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
      language: CSharp
      name:
        CSharp: calculateEndMatchAgain
        VB: calculateEndMatchAgain
      nameWithType:
        CSharp: TurnsController.calculateEndMatchAgain
        VB: TurnsController.calculateEndMatchAgain
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
        VB: Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: calculateEndMatchAgain
        path: ''
        startLine: 13365
      syntax:
        content:
          CSharp: public bool calculateEndMatchAgain
          VB: Public calculateEndMatchAgain As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
      commentId: M:Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
      language: CSharp
      name:
        CSharp: WaitOponentTurn()
        VB: WaitOponentTurn()
      nameWithType:
        CSharp: TurnsController.WaitOponentTurn()
        VB: TurnsController.WaitOponentTurn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn()
        VB: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitOponentTurn
        path: ''
        startLine: 13383
      summary: "\nBring data and actions from the server and execute them. Checks altered states, terrains and players actions and \ndelegate all of those to be executed in order.\nIt also checks if the match has already ended on the server in orded to force the ending in the\nclient too. \n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator WaitOponentTurn()
          VB: Public Function WaitOponentTurn As IEnumerator
        return:
          type: System.Collections.IEnumerator
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData(System.Boolean,System.Object,Timba.SacredTails.Arena.UserInfo@)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData(System.Boolean,System.Object,Timba.SacredTails.Arena.UserInfo@)
      language: CSharp
      name:
        CSharp: ReplaceUserLocalDataWithServerData(Boolean, Object, ref UserInfo)
        VB: ReplaceUserLocalDataWithServerData(Boolean, Object, ByRef UserInfo)
      nameWithType:
        CSharp: TurnsController.ReplaceUserLocalDataWithServerData(Boolean, Object, ref UserInfo)
        VB: TurnsController.ReplaceUserLocalDataWithServerData(Boolean, Object, ByRef UserInfo)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData(System.Boolean, System.Object, ref Timba.SacredTails.Arena.UserInfo)
        VB: Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData(System.Boolean, System.Object, ByRef Timba.SacredTails.Arena.UserInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ReplaceUserLocalDataWithServerData
        path: ''
        startLine: 13538
      syntax:
        content:
          CSharp: public void ReplaceUserLocalDataWithServerData(bool isLocalPlayer, dynamic userServerData, ref UserInfo userInfo)
          VB: Public Sub ReplaceUserLocalDataWithServerData(isLocalPlayer As Boolean, userServerData As Object, ByRef userInfo As UserInfo)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: userServerData
          type: System.Object
        - id: userInfo
          type: Timba.SacredTails.Arena.UserInfo
      overload: Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer(System.Boolean,System.Object,Timba.SacredTails.Arena.UserInfo@)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer(System.Boolean,System.Object,Timba.SacredTails.Arena.UserInfo@)
      language: CSharp
      name:
        CSharp: ChangeShinseiFromServer(Boolean, Object, ref UserInfo)
        VB: ChangeShinseiFromServer(Boolean, Object, ByRef UserInfo)
      nameWithType:
        CSharp: TurnsController.ChangeShinseiFromServer(Boolean, Object, ref UserInfo)
        VB: TurnsController.ChangeShinseiFromServer(Boolean, Object, ByRef UserInfo)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer(System.Boolean, System.Object, ref Timba.SacredTails.Arena.UserInfo)
        VB: Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer(System.Boolean, System.Object, ByRef Timba.SacredTails.Arena.UserInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeShinseiFromServer
        path: ''
        startLine: 13556
      syntax:
        content:
          CSharp: public void ChangeShinseiFromServer(bool isLocalPlayer, dynamic userServerData, ref UserInfo userInfo)
          VB: Public Sub ChangeShinseiFromServer(isLocalPlayer As Boolean, userServerData As Object, ByRef userInfo As UserInfo)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: userServerData
          type: System.Object
        - id: userInfo
          type: Timba.SacredTails.Arena.UserInfo
      overload: Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      language: CSharp
      name:
        CSharp: CheckIfAnyoneSurrendered(List<ActionCardDto>, Boolean)
        VB: CheckIfAnyoneSurrendered(List(Of ActionCardDto), Boolean)
      nameWithType:
        CSharp: TurnsController.CheckIfAnyoneSurrendered(List<ActionCardDto>, Boolean)
        VB: TurnsController.CheckIfAnyoneSurrendered(List(Of ActionCardDto), Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List<ActionCardDto>, System.Boolean)
        VB: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List(Of ActionCardDto), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckIfAnyoneSurrendered
        path: ''
        startLine: 13621
      summary: "\nCheck if the enemy has surrender, if it has then end match.\n"
      example: []
      syntax:
        content:
          CSharp: public bool CheckIfAnyoneSurrendered(List<ActionCardDto> playersTurnIndexCard, bool isLocalFirst)
          VB: Public Function CheckIfAnyoneSurrendered(playersTurnIndexCard As List(Of ActionCardDto), isLocalFirst As Boolean) As Boolean
        parameters:
        - id: playersTurnIndexCard
          type: System.Collections.Generic.List{ActionCardDto}
          description: Players turns
        - id: isLocalFirst
          type: System.Boolean
          description: Is the local player surrendering first
        return:
          type: System.Boolean
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean,Action,Action,Action)
      commentId: M:Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean,Action,Action,Action)
      language: CSharp
      name:
        CSharp: InitTurnFlow(Boolean, Action, Action, Action)
        VB: InitTurnFlow(Boolean, Action, Action, Action)
      nameWithType:
        CSharp: TurnsController.InitTurnFlow(Boolean, Action, Action, Action)
        VB: TurnsController.InitTurnFlow(Boolean, Action, Action, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean, Action, Action, Action)
        VB: Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean, Action, Action, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitTurnFlow
        path: ''
        startLine: 13683
      summary: "\nManage the turn execution flow executing the turns in the order the server executed them.\nCheck if otherPlayer shinsei dies. If so, then doesn&apos;t execute his action.\n"
      example: []
      syntax:
        content:
          CSharp: public void InitTurnFlow(bool ownerOfActionIsLocal, Action userAction, Action enemyAction, Action callback)
          VB: Public Sub InitTurnFlow(ownerOfActionIsLocal As Boolean, userAction As Action, enemyAction As Action, callback As Action)
        parameters:
        - id: ownerOfActionIsLocal
          type: System.Boolean
          description: ''
        - id: userAction
          type: Global.Action
          description: ''
        - id: enemyAction
          type: Global.Action
          description: ''
        - id: callback
          type: Global.Action
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.InitTurnFlow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.DoDeathVerification(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TurnsController.DoDeathVerification(System.Boolean)
      language: CSharp
      name:
        CSharp: DoDeathVerification(Boolean)
        VB: DoDeathVerification(Boolean)
      nameWithType:
        CSharp: TurnsController.DoDeathVerification(Boolean)
        VB: TurnsController.DoDeathVerification(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.DoDeathVerification(System.Boolean)
        VB: Timba.SacredTails.Arena.TurnsController.DoDeathVerification(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: DoDeathVerification
        path: ''
        startLine: 13751
      syntax:
        content:
          CSharp: public void DoDeathVerification(bool targetIsLocal)
          VB: Public Sub DoDeathVerification(targetIsLocal As Boolean)
        parameters:
        - id: targetIsLocal
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.DoDeathVerification*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond(System.Int32,System.Int32,Action,Action)
      commentId: M:Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond(System.Int32,System.Int32,Action,Action)
      language: CSharp
      name:
        CSharp: WaitForSecondsAndDoActionEachSecond(Int32, Int32, Action, Action)
        VB: WaitForSecondsAndDoActionEachSecond(Int32, Int32, Action, Action)
      nameWithType:
        CSharp: TurnsController.WaitForSecondsAndDoActionEachSecond(Int32, Int32, Action, Action)
        VB: TurnsController.WaitForSecondsAndDoActionEachSecond(Int32, Int32, Action, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond(System.Int32, System.Int32, Action, Action)
        VB: Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond(System.Int32, System.Int32, Action, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitForSecondsAndDoActionEachSecond
        path: ''
        startLine: 13782
      summary: "\nWait for X seconds before executing some logic \n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator WaitForSecondsAndDoActionEachSecond(int time, int xSeconds, Action eachXSecondsCallback, Action callback)
          VB: Public Function WaitForSecondsAndDoActionEachSecond(time As Integer, xSeconds As Integer, eachXSecondsCallback As Action, callback As Action) As IEnumerator
        parameters:
        - id: time
          type: System.Int32
          description: Time before executing logic
        - id: xSeconds
          type: System.Int32
        - id: eachXSecondsCallback
          type: Global.Action
        - id: callback
          type: Global.Action
          description: Logic to execute
        return:
          type: System.Collections.IEnumerator
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single,Action)
      commentId: M:Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single,Action)
      language: CSharp
      name:
        CSharp: WaitForSeconds(Single, Action)
        VB: WaitForSeconds(Single, Action)
      nameWithType:
        CSharp: TurnsController.WaitForSeconds(Single, Action)
        VB: TurnsController.WaitForSeconds(Single, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single, Action)
        VB: Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitForSeconds
        path: ''
        startLine: 13804
      summary: "\nWait for X seconds before executing some logic\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator WaitForSeconds(float time, Action callback)
          VB: Public Function WaitForSeconds(time As Single, callback As Action) As IEnumerator
        parameters:
        - id: time
          type: System.Single
          description: Time before executing logic
        - id: callback
          type: Global.Action
          description: Logic to execute
        return:
          type: System.Collections.IEnumerator
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.WaitForSeconds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
      language: CSharp
      name:
        CSharp: CheckEnergyBarsAndInitNextTurn()
        VB: CheckEnergyBarsAndInitNextTurn()
      nameWithType:
        CSharp: TurnsController.CheckEnergyBarsAndInitNextTurn()
        VB: TurnsController.CheckEnergyBarsAndInitNextTurn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn()
        VB: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckEnergyBarsAndInitNextTurn
        path: ''
        startLine: 13813
      summary: "\nAfter executing actions update energyBars and init next turn.\n"
      example: []
      syntax:
        content:
          CSharp: public void CheckEnergyBarsAndInitNextTurn()
          VB: Public Sub CheckEnergyBarsAndInitNextTurn
      overload: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei,Timba.SacredTails.Arena.ResourceBarValues,System.Collections.Generic.List{BattleActionData},System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei,Timba.SacredTails.Arena.ResourceBarValues,System.Collections.Generic.List{BattleActionData},System.Int32)
      language: CSharp
      name:
        CSharp: CalculateEnergyRegen(Shinsei, ResourceBarValues, List<BattleActionData>, Int32)
        VB: CalculateEnergyRegen(Shinsei, ResourceBarValues, List(Of BattleActionData), Int32)
      nameWithType:
        CSharp: TurnsController.CalculateEnergyRegen(Shinsei, ResourceBarValues, List<BattleActionData>, Int32)
        VB: TurnsController.CalculateEnergyRegen(Shinsei, ResourceBarValues, List(Of BattleActionData), Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei, Timba.SacredTails.Arena.ResourceBarValues, System.Collections.Generic.List<BattleActionData>, System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei, Timba.SacredTails.Arena.ResourceBarValues, System.Collections.Generic.List(Of BattleActionData), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CalculateEnergyRegen
        path: ''
        startLine: 13853
      summary: "\nCalculates the amount of energy that a shinsei restores after the turn passes\n"
      example: []
      syntax:
        content:
          CSharp: public void CalculateEnergyRegen(Shinsei playerShinsei, ResourceBarValues energyBar, List<BattleActionData> playersActions, int playerIndex)
          VB: Public Sub CalculateEnergyRegen(playerShinsei As Shinsei, energyBar As ResourceBarValues, playersActions As List(Of BattleActionData), playerIndex As Integer)
        parameters:
        - id: playerShinsei
          type: Global.Shinsei
          description: Shinsei of the player
        - id: energyBar
          type: Timba.SacredTails.Arena.ResourceBarValues
          description: 'Energy bar of the shinsei '
        - id: playersActions
          type: System.Collections.Generic.List{BattleActionData}
          description: Player turn
        - id: playerIndex
          type: System.Int32
          description: Index of the player 0=local, 1=enemy
      overload: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      language: CSharp
      name:
        CSharp: ExecuteServerAction(List<ActionCardDto>, Boolean)
        VB: ExecuteServerAction(List(Of ActionCardDto), Boolean)
      nameWithType:
        CSharp: TurnsController.ExecuteServerAction(List<ActionCardDto>, Boolean)
        VB: TurnsController.ExecuteServerAction(List(Of ActionCardDto), Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List<ActionCardDto>, System.Boolean)
        VB: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List(Of ActionCardDto), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ExecuteServerAction
        path: ''
        startLine: 13876
      summary: "\nExecute enemy actions that we bringed earlier from the cloud.\n"
      example: []
      syntax:
        content:
          CSharp: public Action ExecuteServerAction(List<ActionCardDto> turns, bool isEnemy = false)
          VB: Public Function ExecuteServerAction(turns As List(Of ActionCardDto), isEnemy As Boolean = False) As Action
        parameters:
        - id: turns
          type: System.Collections.Generic.List{ActionCardDto}
          description: Turns of the players
        - id: isEnemy
          type: System.Boolean
          description: Is the enemy the one who want to execute his action?
        return:
          type: Global.Action
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
      language: CSharp
      name:
        CSharp: GetTrueIndexCard(Int32)
        VB: GetTrueIndexCard(Int32)
      nameWithType:
        CSharp: TurnsController.GetTrueIndexCard(Int32)
        VB: TurnsController.GetTrueIndexCard(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetTrueIndexCard
        path: ''
        startLine: 13954
      summary: "\nGet the index of a card in the cardDatabase \nby passing the index of the card in the shinsei\n"
      example:
      - "\n0,1,2,3 is for the first 4 cards of the shinsei.\n4,5,6 is for the shinsei change \n7 is for skipping turn\n8 is for surrender \n"
      syntax:
        content:
          CSharp: public int GetTrueIndexCard(int indexCard)
          VB: Public Function GetTrueIndexCard(indexCard As Integer) As Integer
        parameters:
        - id: indexCard
          type: System.Int32
          description: index of the card in the shinsei
        return:
          type: System.Int32
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.CardPreview
    commentId: T:Timba.SacredTails.Arena.CardPreview
    language: CSharp
    name:
      CSharp: CardPreview
      VB: CardPreview
    nameWithType:
      CSharp: CardPreview
      VB: CardPreview
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.CardPreview
      VB: Timba.SacredTails.Arena.CardPreview
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: CardPreview
      path: ''
      startLine: 14032
    summary: "\nUI element for card attack\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CardPreview : MonoBehaviour'
        VB: >-
          Public Class CardPreview

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    implements:
    - Global.IPointerClickHandler
    - Global.IPointerDownHandler
    - Global.IPointerEnterHandler
    - Global.IPointerExitHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.CardPreview.OnClickHandler
      commentId: F:Timba.SacredTails.Arena.CardPreview.OnClickHandler
      language: CSharp
      name:
        CSharp: OnClickHandler
        VB: OnClickHandler
      nameWithType:
        CSharp: CardPreview.OnClickHandler
        VB: CardPreview.OnClickHandler
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.OnClickHandler
        VB: Timba.SacredTails.Arena.CardPreview.OnClickHandler
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnClickHandler
        path: ''
        startLine: 14034
      syntax:
        content:
          CSharp: public Action<int> OnClickHandler
          VB: Public OnClickHandler As Action(Of Integer)
        return:
          type: Global.Action{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.cardIndex
      commentId: F:Timba.SacredTails.Arena.CardPreview.cardIndex
      language: CSharp
      name:
        CSharp: cardIndex
        VB: cardIndex
      nameWithType:
        CSharp: CardPreview.cardIndex
        VB: CardPreview.cardIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.cardIndex
        VB: Timba.SacredTails.Arena.CardPreview.cardIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardIndex
        path: ''
        startLine: 14035
      syntax:
        content:
          CSharp: public int cardIndex
          VB: Public cardIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.cardCount
      commentId: F:Timba.SacredTails.Arena.CardPreview.cardCount
      language: CSharp
      name:
        CSharp: cardCount
        VB: cardCount
      nameWithType:
        CSharp: CardPreview.cardCount
        VB: CardPreview.cardCount
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.cardCount
        VB: Timba.SacredTails.Arena.CardPreview.cardCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardCount
        path: ''
        startLine: 14036
      syntax:
        content:
          CSharp: public int cardCount
          VB: Public cardCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.cardSprite
      commentId: F:Timba.SacredTails.Arena.CardPreview.cardSprite
      language: CSharp
      name:
        CSharp: cardSprite
        VB: cardSprite
      nameWithType:
        CSharp: CardPreview.cardSprite
        VB: CardPreview.cardSprite
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.cardSprite
        VB: Timba.SacredTails.Arena.CardPreview.cardSprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardSprite
        path: ''
        startLine: 14039
      syntax:
        content:
          CSharp: public Image cardSprite
          VB: Public cardSprite As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.cardType
      commentId: F:Timba.SacredTails.Arena.CardPreview.cardType
      language: CSharp
      name:
        CSharp: cardType
        VB: cardType
      nameWithType:
        CSharp: CardPreview.cardType
        VB: CardPreview.cardType
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.cardType
        VB: Timba.SacredTails.Arena.CardPreview.cardType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardType
        path: ''
        startLine: 14040
      syntax:
        content:
          CSharp: public Image cardType
          VB: Public cardType As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.cardContainer
      commentId: F:Timba.SacredTails.Arena.CardPreview.cardContainer
      language: CSharp
      name:
        CSharp: cardContainer
        VB: cardContainer
      nameWithType:
        CSharp: CardPreview.cardContainer
        VB: CardPreview.cardContainer
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.cardContainer
        VB: Timba.SacredTails.Arena.CardPreview.cardContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardContainer
        path: ''
        startLine: 14041
      syntax:
        content:
          CSharp: public GameObject cardContainer
          VB: Public cardContainer As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.cardCountText
      commentId: F:Timba.SacredTails.Arena.CardPreview.cardCountText
      language: CSharp
      name:
        CSharp: cardCountText
        VB: cardCountText
      nameWithType:
        CSharp: CardPreview.cardCountText
        VB: CardPreview.cardCountText
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.cardCountText
        VB: Timba.SacredTails.Arena.CardPreview.cardCountText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardCountText
        path: ''
        startLine: 14044
      syntax:
        content:
          CSharp: public TMP_Text cardCountText
          VB: Public cardCountText As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.cardPP
      commentId: F:Timba.SacredTails.Arena.CardPreview.cardPP
      language: CSharp
      name:
        CSharp: cardPP
        VB: cardPP
      nameWithType:
        CSharp: CardPreview.cardPP
        VB: CardPreview.cardPP
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.cardPP
        VB: Timba.SacredTails.Arena.CardPreview.cardPP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardPP
        path: ''
        startLine: 14045
      syntax:
        content:
          CSharp: public TMP_Text cardPP
          VB: Public cardPP As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.cardName
      commentId: F:Timba.SacredTails.Arena.CardPreview.cardName
      language: CSharp
      name:
        CSharp: cardName
        VB: cardName
      nameWithType:
        CSharp: CardPreview.cardName
        VB: CardPreview.cardName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.cardName
        VB: Timba.SacredTails.Arena.CardPreview.cardName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardName
        path: ''
        startLine: 14046
      syntax:
        content:
          CSharp: public TMP_Text cardName
          VB: Public cardName As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.cardDesc
      commentId: F:Timba.SacredTails.Arena.CardPreview.cardDesc
      language: CSharp
      name:
        CSharp: cardDesc
        VB: cardDesc
      nameWithType:
        CSharp: CardPreview.cardDesc
        VB: CardPreview.cardDesc
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.cardDesc
        VB: Timba.SacredTails.Arena.CardPreview.cardDesc
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardDesc
        path: ''
        startLine: 14047
      syntax:
        content:
          CSharp: public TMP_Text cardDesc
          VB: Public cardDesc As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.SetToggable
      commentId: M:Timba.SacredTails.Arena.CardPreview.SetToggable
      language: CSharp
      name:
        CSharp: SetToggable()
        VB: SetToggable()
      nameWithType:
        CSharp: CardPreview.SetToggable()
        VB: CardPreview.SetToggable()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.SetToggable()
        VB: Timba.SacredTails.Arena.CardPreview.SetToggable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetToggable
        path: ''
        startLine: 14072
      syntax:
        content:
          CSharp: public void SetToggable()
          VB: Public Sub SetToggable
      overload: Timba.SacredTails.Arena.CardPreview.SetToggable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.Init(Timba.SacredTails.Arena.ActionCard,System.Int32)
      commentId: M:Timba.SacredTails.Arena.CardPreview.Init(Timba.SacredTails.Arena.ActionCard,System.Int32)
      language: CSharp
      name:
        CSharp: Init(ActionCard, Int32)
        VB: Init(ActionCard, Int32)
      nameWithType:
        CSharp: CardPreview.Init(ActionCard, Int32)
        VB: CardPreview.Init(ActionCard, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.Init(Timba.SacredTails.Arena.ActionCard, System.Int32)
        VB: Timba.SacredTails.Arena.CardPreview.Init(Timba.SacredTails.Arena.ActionCard, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 14077
      syntax:
        content:
          CSharp: public void Init(ActionCard card, int cardIndex)
          VB: Public Sub Init(card As ActionCard, cardIndex As Integer)
        parameters:
        - id: card
          type: Timba.SacredTails.Arena.ActionCard
        - id: cardIndex
          type: System.Int32
      overload: Timba.SacredTails.Arena.CardPreview.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.CopyCardIndex(Timba.SacredTails.Arena.CardPreview)
      commentId: M:Timba.SacredTails.Arena.CardPreview.CopyCardIndex(Timba.SacredTails.Arena.CardPreview)
      language: CSharp
      name:
        CSharp: CopyCardIndex(CardPreview)
        VB: CopyCardIndex(CardPreview)
      nameWithType:
        CSharp: CardPreview.CopyCardIndex(CardPreview)
        VB: CardPreview.CopyCardIndex(CardPreview)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.CopyCardIndex(Timba.SacredTails.Arena.CardPreview)
        VB: Timba.SacredTails.Arena.CardPreview.CopyCardIndex(Timba.SacredTails.Arena.CardPreview)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CopyCardIndex
        path: ''
        startLine: 14105
      syntax:
        content:
          CSharp: public void CopyCardIndex(CardPreview cardPreview)
          VB: Public Sub CopyCardIndex(cardPreview As CardPreview)
        parameters:
        - id: cardPreview
          type: Timba.SacredTails.Arena.CardPreview
      overload: Timba.SacredTails.Arena.CardPreview.CopyCardIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.UpdateVisual(System.Int32)
      commentId: M:Timba.SacredTails.Arena.CardPreview.UpdateVisual(System.Int32)
      language: CSharp
      name:
        CSharp: UpdateVisual(Int32)
        VB: UpdateVisual(Int32)
      nameWithType:
        CSharp: CardPreview.UpdateVisual(Int32)
        VB: CardPreview.UpdateVisual(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.UpdateVisual(System.Int32)
        VB: Timba.SacredTails.Arena.CardPreview.UpdateVisual(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateVisual
        path: ''
        startLine: 14111
      syntax:
        content:
          CSharp: public void UpdateVisual(int index)
          VB: Public Sub UpdateVisual(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.Arena.CardPreview.UpdateVisual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.OnPointerClick(PointerEventData)
      commentId: M:Timba.SacredTails.Arena.CardPreview.OnPointerClick(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerClick(PointerEventData)
        VB: OnPointerClick(PointerEventData)
      nameWithType:
        CSharp: CardPreview.OnPointerClick(PointerEventData)
        VB: CardPreview.OnPointerClick(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.OnPointerClick(PointerEventData)
        VB: Timba.SacredTails.Arena.CardPreview.OnPointerClick(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnPointerClick
        path: ''
        startLine: 14120
      syntax:
        content:
          CSharp: public void OnPointerClick(PointerEventData eventData)
          VB: Public Sub OnPointerClick(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.Arena.CardPreview.OnPointerClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.UseInCodeAkSounds
      commentId: F:Timba.SacredTails.Arena.CardPreview.UseInCodeAkSounds
      language: CSharp
      name:
        CSharp: UseInCodeAkSounds
        VB: UseInCodeAkSounds
      nameWithType:
        CSharp: CardPreview.UseInCodeAkSounds
        VB: CardPreview.UseInCodeAkSounds
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.UseInCodeAkSounds
        VB: Timba.SacredTails.Arena.CardPreview.UseInCodeAkSounds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UseInCodeAkSounds
        path: ''
        startLine: 14125
      syntax:
        content:
          CSharp: public bool UseInCodeAkSounds
          VB: Public UseInCodeAkSounds As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.onPointerDown
      commentId: F:Timba.SacredTails.Arena.CardPreview.onPointerDown
      language: CSharp
      name:
        CSharp: onPointerDown
        VB: onPointerDown
      nameWithType:
        CSharp: CardPreview.onPointerDown
        VB: CardPreview.onPointerDown
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.onPointerDown
        VB: Timba.SacredTails.Arena.CardPreview.onPointerDown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: onPointerDown
        path: ''
        startLine: 14127
      syntax:
        content:
          CSharp: public Action onPointerDown
          VB: Public onPointerDown As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.onPointerEnter
      commentId: F:Timba.SacredTails.Arena.CardPreview.onPointerEnter
      language: CSharp
      name:
        CSharp: onPointerEnter
        VB: onPointerEnter
      nameWithType:
        CSharp: CardPreview.onPointerEnter
        VB: CardPreview.onPointerEnter
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.onPointerEnter
        VB: Timba.SacredTails.Arena.CardPreview.onPointerEnter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: onPointerEnter
        path: ''
        startLine: 14128
      syntax:
        content:
          CSharp: public Action onPointerEnter
          VB: Public onPointerEnter As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.onPointerExit
      commentId: F:Timba.SacredTails.Arena.CardPreview.onPointerExit
      language: CSharp
      name:
        CSharp: onPointerExit
        VB: onPointerExit
      nameWithType:
        CSharp: CardPreview.onPointerExit
        VB: CardPreview.onPointerExit
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.onPointerExit
        VB: Timba.SacredTails.Arena.CardPreview.onPointerExit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: onPointerExit
        path: ''
        startLine: 14129
      syntax:
        content:
          CSharp: public Action onPointerExit
          VB: Public onPointerExit As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.OnPointerDown(PointerEventData)
      commentId: M:Timba.SacredTails.Arena.CardPreview.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: CardPreview.OnPointerDown(PointerEventData)
        VB: CardPreview.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.OnPointerDown(PointerEventData)
        VB: Timba.SacredTails.Arena.CardPreview.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnPointerDown
        path: ''
        startLine: 14131
      syntax:
        content:
          CSharp: public void OnPointerDown(PointerEventData eventData)
          VB: Public Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.Arena.CardPreview.OnPointerDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.OnPointerEnter(PointerEventData)
      commentId: M:Timba.SacredTails.Arena.CardPreview.OnPointerEnter(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerEnter(PointerEventData)
        VB: OnPointerEnter(PointerEventData)
      nameWithType:
        CSharp: CardPreview.OnPointerEnter(PointerEventData)
        VB: CardPreview.OnPointerEnter(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.OnPointerEnter(PointerEventData)
        VB: Timba.SacredTails.Arena.CardPreview.OnPointerEnter(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnPointerEnter
        path: ''
        startLine: 14137
      syntax:
        content:
          CSharp: public void OnPointerEnter(PointerEventData eventData)
          VB: Public Sub OnPointerEnter(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.Arena.CardPreview.OnPointerEnter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.CardPreview.OnPointerExit(PointerEventData)
      commentId: M:Timba.SacredTails.Arena.CardPreview.OnPointerExit(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerExit(PointerEventData)
        VB: OnPointerExit(PointerEventData)
      nameWithType:
        CSharp: CardPreview.OnPointerExit(PointerEventData)
        VB: CardPreview.OnPointerExit(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.CardPreview.OnPointerExit(PointerEventData)
        VB: Timba.SacredTails.Arena.CardPreview.OnPointerExit(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnPointerExit
        path: ''
        startLine: 14144
      syntax:
        content:
          CSharp: public void OnPointerExit(PointerEventData eventData)
          VB: Public Sub OnPointerExit(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.Arena.CardPreview.OnPointerExit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager
    commentId: T:Timba.SacredTails.Arena.ShinseiPreviewPanelManager
    language: CSharp
    name:
      CSharp: ShinseiPreviewPanelManager
      VB: ShinseiPreviewPanelManager
    nameWithType:
      CSharp: ShinseiPreviewPanelManager
      VB: ShinseiPreviewPanelManager
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager
      VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ShinseiPreviewPanelManager
      path: ''
      startLine: 14167
    summary: "\nUI element that show stats and details of Shinsei\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ShinseiPreviewPanelManager : MonoBehaviour'
        VB: >-
          Public Class ShinseiPreviewPanelManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiSprite
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiSprite
      language: CSharp
      name:
        CSharp: shinseiSprite
        VB: shinseiSprite
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.shinseiSprite
        VB: ShinseiPreviewPanelManager.shinseiSprite
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiSprite
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiSprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiSprite
        path: ''
        startLine: 14171
      syntax:
        content:
          CSharp: public Image shinseiSprite
          VB: Public shinseiSprite As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseBackground
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseBackground
      language: CSharp
      name:
        CSharp: shinseBackground
        VB: shinseBackground
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.shinseBackground
        VB: ShinseiPreviewPanelManager.shinseBackground
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseBackground
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseBackground
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseBackground
        path: ''
        startLine: 14171
      syntax:
        content:
          CSharp: public Image shinseBackground
          VB: Public shinseBackground As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.backgroundTypeSwapper
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.backgroundTypeSwapper
      language: CSharp
      name:
        CSharp: backgroundTypeSwapper
        VB: backgroundTypeSwapper
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.backgroundTypeSwapper
        VB: ShinseiPreviewPanelManager.backgroundTypeSwapper
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.backgroundTypeSwapper
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.backgroundTypeSwapper
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: backgroundTypeSwapper
        path: ''
        startLine: 14172
      syntax:
        content:
          CSharp: public BackgroundTypeSwapper backgroundTypeSwapper
          VB: Public backgroundTypeSwapper As BackgroundTypeSwapper
        return:
          type: Global.BackgroundTypeSwapper
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.health
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.health
      language: CSharp
      name:
        CSharp: health
        VB: health
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.health
        VB: ShinseiPreviewPanelManager.health
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.health
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.health
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: health
        path: ''
        startLine: 14173
      syntax:
        content:
          CSharp: public Slider health
          VB: Public health As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.energy
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.energy
      language: CSharp
      name:
        CSharp: energy
        VB: energy
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.energy
        VB: ShinseiPreviewPanelManager.energy
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.energy
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.energy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: energy
        path: ''
        startLine: 14174
      syntax:
        content:
          CSharp: public Slider energy
          VB: Public energy As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiName
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiName
      language: CSharp
      name:
        CSharp: shinseiName
        VB: shinseiName
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.shinseiName
        VB: ShinseiPreviewPanelManager.shinseiName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiName
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiName
        path: ''
        startLine: 14175
      syntax:
        content:
          CSharp: public TMP_Text shinseiName
          VB: Public shinseiName As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.healthLabel
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.healthLabel
      language: CSharp
      name:
        CSharp: healthLabel
        VB: healthLabel
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.healthLabel
        VB: ShinseiPreviewPanelManager.healthLabel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.healthLabel
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.healthLabel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: healthLabel
        path: ''
        startLine: 14176
      syntax:
        content:
          CSharp: public TMP_Text healthLabel
          VB: Public healthLabel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.energyLabel
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.energyLabel
      language: CSharp
      name:
        CSharp: energyLabel
        VB: energyLabel
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.energyLabel
        VB: ShinseiPreviewPanelManager.energyLabel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.energyLabel
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.energyLabel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: energyLabel
        path: ''
        startLine: 14177
      syntax:
        content:
          CSharp: public TMP_Text energyLabel
          VB: Public energyLabel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.positionCounter
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.positionCounter
      language: CSharp
      name:
        CSharp: positionCounter
        VB: positionCounter
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.positionCounter
        VB: ShinseiPreviewPanelManager.positionCounter
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.positionCounter
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.positionCounter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: positionCounter
        path: ''
        startLine: 14178
      syntax:
        content:
          CSharp: public PositionCounter positionCounter
          VB: Public positionCounter As PositionCounter
        return:
          type: Global.PositionCounter
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.partElements
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.partElements
      language: CSharp
      name:
        CSharp: partElements
        VB: partElements
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.partElements
        VB: ShinseiPreviewPanelManager.partElements
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.partElements
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.partElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: partElements
        path: ''
        startLine: 14181
      syntax:
        content:
          CSharp: public List<Image> partElements
          VB: Public partElements As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.statLabels
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.statLabels
      language: CSharp
      name:
        CSharp: statLabels
        VB: statLabels
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.statLabels
        VB: ShinseiPreviewPanelManager.statLabels
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.statLabels
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.statLabels
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: statLabels
        path: ''
        startLine: 14182
      syntax:
        content:
          CSharp: public List<TMP_Text> statLabels
          VB: Public statLabels As List(Of TMP_Text)
        return:
          type: System.Collections.Generic.List{TMP_Text}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiCards
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiCards
      language: CSharp
      name:
        CSharp: shinseiCards
        VB: shinseiCards
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.shinseiCards
        VB: ShinseiPreviewPanelManager.shinseiCards
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiCards
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.shinseiCards
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiCards
        path: ''
        startLine: 14185
      syntax:
        content:
          CSharp: public List<CardPreview> shinseiCards
          VB: Public shinseiCards As List(Of CardPreview)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.CardPreview}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.selectBtn
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.selectBtn
      language: CSharp
      name:
        CSharp: selectBtn
        VB: selectBtn
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.selectBtn
        VB: ShinseiPreviewPanelManager.selectBtn
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.selectBtn
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.selectBtn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: selectBtn
        path: ''
        startLine: 14188
      syntax:
        content:
          CSharp: public Button selectBtn
          VB: Public selectBtn As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.currentShinsei
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.currentShinsei
      language: CSharp
      name:
        CSharp: currentShinsei
        VB: currentShinsei
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.currentShinsei
        VB: ShinseiPreviewPanelManager.currentShinsei
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.currentShinsei
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.currentShinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: currentShinsei
        path: ''
        startLine: 14190
      syntax:
        content:
          CSharp: public Shinsei currentShinsei
          VB: Public currentShinsei As Shinsei
        return:
          type: Global.Shinsei
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.uiHelper
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.uiHelper
      language: CSharp
      name:
        CSharp: uiHelper
        VB: uiHelper
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.uiHelper
        VB: ShinseiPreviewPanelManager.uiHelper
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.uiHelper
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.uiHelper
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: uiHelper
        path: ''
        startLine: 14193
      syntax:
        content:
          CSharp: public IUIHelpable uiHelper
          VB: Public uiHelper As IUIHelpable
        return:
          type: Global.IUIHelpable
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.database
      commentId: F:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.database
      language: CSharp
      name:
        CSharp: database
        VB: database
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.database
        VB: ShinseiPreviewPanelManager.database
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.database
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.database
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: database
        path: ''
        startLine: 14194
      syntax:
        content:
          CSharp: public IDatabase database
          VB: Public database As IDatabase
        return:
          type: Global.IDatabase
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview(Shinsei,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)
      commentId: M:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview(Shinsei,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)
      language: CSharp
      name:
        CSharp: DisplayPreview(Shinsei, Boolean, Boolean, Boolean, Boolean, Int32)
        VB: DisplayPreview(Shinsei, Boolean, Boolean, Boolean, Boolean, Int32)
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.DisplayPreview(Shinsei, Boolean, Boolean, Boolean, Boolean, Int32)
        VB: ShinseiPreviewPanelManager.DisplayPreview(Shinsei, Boolean, Boolean, Boolean, Boolean, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview(Shinsei, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Int32)
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview(Shinsei, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: DisplayPreview
        path: ''
        startLine: 14206
      syntax:
        content:
          CSharp: public void DisplayPreview(Shinsei shinsei, bool isEnemyPreview = false, bool isSelectionScreen = false, bool isVault = false, bool isCardManagement = false, int index = 0)
          VB: Public Sub DisplayPreview(shinsei As Shinsei, isEnemyPreview As Boolean = False, isSelectionScreen As Boolean = False, isVault As Boolean = False, isCardManagement As Boolean = False, index As Integer = 0)
        parameters:
        - id: shinsei
          type: Global.Shinsei
        - id: isEnemyPreview
          type: System.Boolean
        - id: isSelectionScreen
          type: System.Boolean
        - id: isVault
          type: System.Boolean
        - id: isCardManagement
          type: System.Boolean
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel(Shinsei)
      commentId: M:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel(Shinsei)
      language: CSharp
      name:
        CSharp: SetCardsPanel(Shinsei)
        VB: SetCardsPanel(Shinsei)
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.SetCardsPanel(Shinsei)
        VB: ShinseiPreviewPanelManager.SetCardsPanel(Shinsei)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel(Shinsei)
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel(Shinsei)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetCardsPanel
        path: ''
        startLine: 14247
      syntax:
        content:
          CSharp: public void SetCardsPanel(Shinsei shinsei)
          VB: Public Sub SetCardsPanel(shinsei As Shinsei)
        parameters:
        - id: shinsei
          type: Global.Shinsei
      overload: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel(System.Collections.Generic.List{System.Single},System.Collections.Generic.Dictionary{System.String,System.String},CharacterType)
      commentId: M:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel(System.Collections.Generic.List{System.Single},System.Collections.Generic.Dictionary{System.String,System.String},CharacterType)
      language: CSharp
      name:
        CSharp: SetStatPanel(List<Single>, Dictionary<String, String>, CharacterType)
        VB: SetStatPanel(List(Of Single), Dictionary(Of String, String), CharacterType)
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.SetStatPanel(List<Single>, Dictionary<String, String>, CharacterType)
        VB: ShinseiPreviewPanelManager.SetStatPanel(List(Of Single), Dictionary(Of String, String), CharacterType)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel(System.Collections.Generic.List<System.Single>, System.Collections.Generic.Dictionary<System.String, System.String>, CharacterType)
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel(System.Collections.Generic.List(Of System.Single), System.Collections.Generic.Dictionary(Of System.String, System.String), CharacterType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetStatPanel
        path: ''
        startLine: 14266
      syntax:
        content:
          CSharp: public void SetStatPanel(List<float> shinseiStats, Dictionary<string, string> pTypes, CharacterType mainType)
          VB: Public Sub SetStatPanel(shinseiStats As List(Of Single), pTypes As Dictionary(Of String, String), mainType As CharacterType)
        parameters:
        - id: shinseiStats
          type: System.Collections.Generic.List{System.Single}
        - id: pTypes
          type: System.Collections.Generic.Dictionary{System.String,System.String}
        - id: mainType
          type: Global.CharacterType
      overload: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider(Slider,TMP_Text,System.Int32,System.Int32,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider(Slider,TMP_Text,System.Int32,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: SetSlider(Slider, TMP_Text, Int32, Int32, Boolean)
        VB: SetSlider(Slider, TMP_Text, Int32, Int32, Boolean)
      nameWithType:
        CSharp: ShinseiPreviewPanelManager.SetSlider(Slider, TMP_Text, Int32, Int32, Boolean)
        VB: ShinseiPreviewPanelManager.SetSlider(Slider, TMP_Text, Int32, Int32, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider(Slider, TMP_Text, System.Int32, System.Int32, System.Boolean)
        VB: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider(Slider, TMP_Text, System.Int32, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetSlider
        path: ''
        startLine: 14291
      syntax:
        content:
          CSharp: public void SetSlider(Slider slider, TMP_Text label, int value, int maxValue, bool isShinseiPreview = true)
          VB: Public Sub SetSlider(slider As Slider, label As TMP_Text, value As Integer, maxValue As Integer, isShinseiPreview As Boolean = True)
        parameters:
        - id: slider
          type: Global.Slider
        - id: label
          type: Global.TMP_Text
        - id: value
          type: System.Int32
        - id: maxValue
          type: System.Int32
        - id: isShinseiPreview
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ShinseiSlot
    commentId: T:Timba.SacredTails.Arena.ShinseiSlot
    language: CSharp
    name:
      CSharp: ShinseiSlot
      VB: ShinseiSlot
    nameWithType:
      CSharp: ShinseiSlot
      VB: ShinseiSlot
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiSlot
      VB: Timba.SacredTails.Arena.ShinseiSlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ShinseiSlot
      path: ''
      startLine: 19617
    syntax:
      content:
        CSharp: 'public class ShinseiSlot : MonoBehaviour'
        VB: >-
          Public Class ShinseiSlot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    implements:
    - Global.IPointerClickHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      commentId: P:Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      language: CSharp
      name:
        CSharp: IsCompanion
        VB: IsCompanion
      nameWithType:
        CSharp: ShinseiSlot.IsCompanion
        VB: ShinseiSlot.IsCompanion
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
        VB: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: IsCompanion
        path: ''
        startLine: 19620
      syntax:
        content:
          CSharp: public bool IsCompanion { get; set; }
          VB: Public Property IsCompanion As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
      language: CSharp
      name:
        CSharp: shinseiKey
        VB: shinseiKey
      nameWithType:
        CSharp: ShinseiSlot.shinseiKey
        VB: ShinseiSlot.shinseiKey
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiKey
        path: ''
        startLine: 19621
      syntax:
        content:
          CSharp: public string shinseiKey
          VB: Public shinseiKey As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinseiName
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinseiName
      language: CSharp
      name:
        CSharp: shinseiName
        VB: shinseiName
      nameWithType:
        CSharp: ShinseiSlot.shinseiName
        VB: ShinseiSlot.shinseiName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinseiName
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinseiName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiName
        path: ''
        startLine: 19622
      syntax:
        content:
          CSharp: public string shinseiName
          VB: Public shinseiName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.listIndex
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.listIndex
      language: CSharp
      name:
        CSharp: listIndex
        VB: listIndex
      nameWithType:
        CSharp: ShinseiSlot.listIndex
        VB: ShinseiSlot.listIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.listIndex
        VB: Timba.SacredTails.Arena.ShinseiSlot.listIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: listIndex
        path: ''
        startLine: 19623
      syntax:
        content:
          CSharp: public int listIndex
          VB: Public listIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinsei
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinsei
      language: CSharp
      name:
        CSharp: shinsei
        VB: shinsei
      nameWithType:
        CSharp: ShinseiSlot.shinsei
        VB: ShinseiSlot.shinsei
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinsei
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinsei
        path: ''
        startLine: 19624
      syntax:
        content:
          CSharp: public Shinsei shinsei
          VB: Public shinsei As Shinsei
        return:
          type: Global.Shinsei
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinseiView
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinseiView
      language: CSharp
      name:
        CSharp: shinseiView
        VB: shinseiView
      nameWithType:
        CSharp: ShinseiSlot.shinseiView
        VB: ShinseiSlot.shinseiView
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinseiView
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinseiView
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiView
        path: ''
        startLine: 19625
      syntax:
        content:
          CSharp: public Image shinseiView
          VB: Public shinseiView As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._infoBtn
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._infoBtn
      language: CSharp
      name:
        CSharp: _infoBtn
        VB: _infoBtn
      nameWithType:
        CSharp: ShinseiSlot._infoBtn
        VB: ShinseiSlot._infoBtn
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._infoBtn
        VB: Timba.SacredTails.Arena.ShinseiSlot._infoBtn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _infoBtn
        path: ''
        startLine: 19628
      syntax:
        content:
          CSharp: public Button _infoBtn
          VB: Public _infoBtn As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._shinseiName
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._shinseiName
      language: CSharp
      name:
        CSharp: _shinseiName
        VB: _shinseiName
      nameWithType:
        CSharp: ShinseiSlot._shinseiName
        VB: ShinseiSlot._shinseiName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._shinseiName
        VB: Timba.SacredTails.Arena.ShinseiSlot._shinseiName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _shinseiName
        path: ''
        startLine: 19629
      syntax:
        content:
          CSharp: public TMP_Text _shinseiName
          VB: Public _shinseiName As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._health
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._health
      language: CSharp
      name:
        CSharp: _health
        VB: _health
      nameWithType:
        CSharp: ShinseiSlot._health
        VB: ShinseiSlot._health
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._health
        VB: Timba.SacredTails.Arena.ShinseiSlot._health
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _health
        path: ''
        startLine: 19630
      syntax:
        content:
          CSharp: public TMP_Text _health
          VB: Public _health As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._energy
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._energy
      language: CSharp
      name:
        CSharp: _energy
        VB: _energy
      nameWithType:
        CSharp: ShinseiSlot._energy
        VB: ShinseiSlot._energy
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._energy
        VB: Timba.SacredTails.Arena.ShinseiSlot._energy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _energy
        path: ''
        startLine: 19631
      syntax:
        content:
          CSharp: public TMP_Text _energy
          VB: Public _energy As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._helathBar
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._helathBar
      language: CSharp
      name:
        CSharp: _helathBar
        VB: _helathBar
      nameWithType:
        CSharp: ShinseiSlot._helathBar
        VB: ShinseiSlot._helathBar
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._helathBar
        VB: Timba.SacredTails.Arena.ShinseiSlot._helathBar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _helathBar
        path: ''
        startLine: 19632
      syntax:
        content:
          CSharp: public Slider _helathBar
          VB: Public _helathBar As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._energyBar
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._energyBar
      language: CSharp
      name:
        CSharp: _energyBar
        VB: _energyBar
      nameWithType:
        CSharp: ShinseiSlot._energyBar
        VB: ShinseiSlot._energyBar
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._energyBar
        VB: Timba.SacredTails.Arena.ShinseiSlot._energyBar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _energyBar
        path: ''
        startLine: 19633
      syntax:
        content:
          CSharp: public Slider _energyBar
          VB: Public _energyBar As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._higlightColor
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._higlightColor
      language: CSharp
      name:
        CSharp: _higlightColor
        VB: _higlightColor
      nameWithType:
        CSharp: ShinseiSlot._higlightColor
        VB: ShinseiSlot._higlightColor
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._higlightColor
        VB: Timba.SacredTails.Arena.ShinseiSlot._higlightColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _higlightColor
        path: ''
        startLine: 19634
      syntax:
        content:
          CSharp: public Color _higlightColor
          VB: Public _higlightColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
      language: CSharp
      name:
        CSharp: _shinseiTypesImg
        VB: _shinseiTypesImg
      nameWithType:
        CSharp: ShinseiSlot._shinseiTypesImg
        VB: ShinseiSlot._shinseiTypesImg
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
        VB: Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _shinseiTypesImg
        path: ''
        startLine: 19635
      syntax:
        content:
          CSharp: public List<Image> _shinseiTypesImg
          VB: Public _shinseiTypesImg As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
      language: CSharp
      name:
        CSharp: isPreviewOnly
        VB: isPreviewOnly
      nameWithType:
        CSharp: ShinseiSlot.isPreviewOnly
        VB: ShinseiSlot.isPreviewOnly
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
        VB: Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isPreviewOnly
        path: ''
        startLine: 19638
      syntax:
        content:
          CSharp: public bool isPreviewOnly
          VB: Public isPreviewOnly As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.isLocked
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.isLocked
      language: CSharp
      name:
        CSharp: isLocked
        VB: isLocked
      nameWithType:
        CSharp: ShinseiSlot.isLocked
        VB: ShinseiSlot.isLocked
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.isLocked
        VB: Timba.SacredTails.Arena.ShinseiSlot.isLocked
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isLocked
        path: ''
        startLine: 19639
      syntax:
        content:
          CSharp: public bool isLocked
          VB: Public isLocked As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
      language: CSharp
      name:
        CSharp: deactivateSlotOnClick
        VB: deactivateSlotOnClick
      nameWithType:
        CSharp: ShinseiSlot.deactivateSlotOnClick
        VB: ShinseiSlot.deactivateSlotOnClick
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
        VB: Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: deactivateSlotOnClick
        path: ''
        startLine: 19640
      syntax:
        content:
          CSharp: public bool deactivateSlotOnClick
          VB: Public deactivateSlotOnClick As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.previewBtn
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.previewBtn
      language: CSharp
      name:
        CSharp: previewBtn
        VB: previewBtn
      nameWithType:
        CSharp: ShinseiSlot.previewBtn
        VB: ShinseiSlot.previewBtn
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.previewBtn
        VB: Timba.SacredTails.Arena.ShinseiSlot.previewBtn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: previewBtn
        path: ''
        startLine: 19643
      syntax:
        content:
          CSharp: public Button previewBtn
          VB: Public previewBtn As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.Counter
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.Counter
      language: CSharp
      name:
        CSharp: Counter
        VB: Counter
      nameWithType:
        CSharp: ShinseiSlot.Counter
        VB: ShinseiSlot.Counter
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.Counter
        VB: Timba.SacredTails.Arena.ShinseiSlot.Counter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Counter
        path: ''
        startLine: 19645
      syntax:
        content:
          CSharp: public TextMeshProUGUI Counter
          VB: Public Counter As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
      language: CSharp
      name:
        CSharp: OnSlotClicked
        VB: OnSlotClicked
      nameWithType:
        CSharp: ShinseiSlot.OnSlotClicked
        VB: ShinseiSlot.OnSlotClicked
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
        VB: Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnSlotClicked
        path: ''
        startLine: 19648
      syntax:
        content:
          CSharp: public UnityEvent<int, ShinseiSlot> OnSlotClicked
          VB: Public OnSlotClicked As UnityEvent(Of Integer, ShinseiSlot)
        return:
          type: Global.UnityEvent{System.Int32,Timba.SacredTails.Arena.ShinseiSlot}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerClick(PointerEventData)
        VB: OnPointerClick(PointerEventData)
      nameWithType:
        CSharp: ShinseiSlot.OnPointerClick(PointerEventData)
        VB: ShinseiSlot.OnPointerClick(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
        VB: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnPointerClick
        path: ''
        startLine: 19652
      syntax:
        content:
          CSharp: public void OnPointerClick(PointerEventData eventData)
          VB: Public Sub OnPointerClick(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String,System.String,Sprite)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String,System.String,Sprite)
      language: CSharp
      name:
        CSharp: UpdateVisual(String, String, Sprite)
        VB: UpdateVisual(String, String, Sprite)
      nameWithType:
        CSharp: ShinseiSlot.UpdateVisual(String, String, Sprite)
        VB: ShinseiSlot.UpdateVisual(String, String, Sprite)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String, System.String, Sprite)
        VB: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String, System.String, Sprite)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateVisual
        path: ''
        startLine: 19659
      syntax:
        content:
          CSharp: public void UpdateVisual(string shinseiName = null, string shinseiDNA = null, Sprite shinseiIcon = null)
          VB: Public Sub UpdateVisual(shinseiName As String = Nothing, shinseiDNA As String = Nothing, shinseiIcon As Sprite = Nothing)
        parameters:
        - id: shinseiName
          type: System.String
        - id: shinseiDNA
          type: System.String
        - id: shinseiIcon
          type: Global.Sprite
      overload: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String,System.Int32,Shinsei,System.String,Timba.SacredTails.Arena.ShinseiSlot)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String,System.Int32,Shinsei,System.String,Timba.SacredTails.Arena.ShinseiSlot)
      language: CSharp
      name:
        CSharp: ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
        VB: ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
      nameWithType:
        CSharp: ShinseiSlot.ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
        VB: ShinseiSlot.ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String, System.Int32, Shinsei, System.String, Timba.SacredTails.Arena.ShinseiSlot)
        VB: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String, System.Int32, Shinsei, System.String, Timba.SacredTails.Arena.ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeShinseiSlotValues
        path: ''
        startLine: 19672
      syntax:
        content:
          CSharp: public void ChangeShinseiSlotValues(string shinseiKey = null, int listIndex = -1, Shinsei shinsei = null, string name = null, ShinseiSlot newSlot = null)
          VB: Public Sub ChangeShinseiSlotValues(shinseiKey As String = Nothing, listIndex As Integer = -1, shinsei As Shinsei = Nothing, name As String = Nothing, newSlot As ShinseiSlot = Nothing)
        parameters:
        - id: shinseiKey
          type: System.String
        - id: listIndex
          type: System.Int32
        - id: shinsei
          type: Global.Shinsei
        - id: name
          type: System.String
        - id: newSlot
          type: Timba.SacredTails.Arena.ShinseiSlot
      overload: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeInteractuable(Boolean, Boolean)
        VB: ChangeInteractuable(Boolean, Boolean)
      nameWithType:
        CSharp: ShinseiSlot.ChangeInteractuable(Boolean, Boolean)
        VB: ShinseiSlot.ChangeInteractuable(Boolean, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean, System.Boolean)
        VB: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeInteractuable
        path: ''
        startLine: 19694
      syntax:
        content:
          CSharp: public void ChangeInteractuable(bool slotIsLocked = false, bool deactivateSlotOnClick = true)
          VB: Public Sub ChangeInteractuable(slotIsLocked As Boolean = False, deactivateSlotOnClick As Boolean = True)
        parameters:
        - id: slotIsLocked
          type: System.Boolean
        - id: deactivateSlotOnClick
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
      language: CSharp
      name:
        CSharp: SetDataColor()
        VB: SetDataColor()
      nameWithType:
        CSharp: ShinseiSlot.SetDataColor()
        VB: ShinseiSlot.SetDataColor()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor()
        VB: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetDataColor
        path: ''
        startLine: 19705
      syntax:
        content:
          CSharp: public void SetDataColor()
          VB: Public Sub SetDataColor
      overload: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String,CharacterType)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String,CharacterType)
      language: CSharp
      name:
        CSharp: PopulateShinseiTypesSprites(String, CharacterType)
        VB: PopulateShinseiTypesSprites(String, CharacterType)
      nameWithType:
        CSharp: ShinseiSlot.PopulateShinseiTypesSprites(String, CharacterType)
        VB: ShinseiSlot.PopulateShinseiTypesSprites(String, CharacterType)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String, CharacterType)
        VB: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String, CharacterType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: PopulateShinseiTypesSprites
        path: ''
        startLine: 19729
      syntax:
        content:
          CSharp: public void PopulateShinseiTypesSprites(string dna, CharacterType mainType)
          VB: Public Sub PopulateShinseiTypesSprites(dna As String, mainType As CharacterType)
        parameters:
        - id: dna
          type: System.String
        - id: mainType
          type: Global.CharacterType
      overload: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.GameSceneManager
    commentId: T:Timba.SacredTails.Arena.GameSceneManager
    language: CSharp
    name:
      CSharp: GameSceneManager
      VB: GameSceneManager
    nameWithType:
      CSharp: GameSceneManager
      VB: GameSceneManager
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.GameSceneManager
      VB: Timba.SacredTails.Arena.GameSceneManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: GameSceneManager
      path: ''
      startLine: 29569
    syntax:
      content:
        CSharp: 'public class GameSceneManager : NetworkBehaviour'
        VB: >-
          Public Class GameSceneManager

              Inherits NetworkBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.GameSceneManager.onEndBattle
      commentId: F:Timba.SacredTails.Arena.GameSceneManager.onEndBattle
      language: CSharp
      name:
        CSharp: onEndBattle
        VB: onEndBattle
      nameWithType:
        CSharp: GameSceneManager.onEndBattle
        VB: GameSceneManager.onEndBattle
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.GameSceneManager.onEndBattle
        VB: Timba.SacredTails.Arena.GameSceneManager.onEndBattle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: onEndBattle
        path: ''
        startLine: 29584
      syntax:
        content:
          CSharp: public UnityEvent onEndBattle
          VB: Public onEndBattle As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
      commentId: M:Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
      language: CSharp
      name:
        CSharp: GetClosestBattleSpawn()
        VB: GetClosestBattleSpawn()
      nameWithType:
        CSharp: GameSceneManager.GetClosestBattleSpawn()
        VB: GameSceneManager.GetClosestBattleSpawn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn()
        VB: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetClosestBattleSpawn
        path: ''
        startLine: 29591
      syntax:
        content:
          CSharp: public int GetClosestBattleSpawn()
          VB: Public Function GetClosestBattleSpawn As Integer
        return:
          type: System.Int32
      overload: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult,System.String,System.Int32,System.Boolean,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult,System.String,System.Int32,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: SendBattle(GetMatchResult, String, Int32, Boolean, Boolean)
        VB: SendBattle(GetMatchResult, String, Int32, Boolean, Boolean)
      nameWithType:
        CSharp: GameSceneManager.SendBattle(GetMatchResult, String, Int32, Boolean, Boolean)
        VB: GameSceneManager.SendBattle(GetMatchResult, String, Int32, Boolean, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult, System.String, System.Int32, System.Boolean, System.Boolean)
        VB: Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult, System.String, System.Int32, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SendBattle
        path: ''
        startLine: 29607
      syntax:
        content:
          CSharp: public void SendBattle(GetMatchResult getMatchResult = null, string matchId = null, int _closestSpawnPoint = -1, bool isViewing = false, bool isBotFight = false)
          VB: Public Sub SendBattle(getMatchResult As GetMatchResult = Nothing, matchId As String = Nothing, _closestSpawnPoint As Integer = -1, isViewing As Boolean = False, isBotFight As Boolean = False)
        parameters:
        - id: getMatchResult
          type: Global.GetMatchResult
        - id: matchId
          type: System.String
        - id: _closestSpawnPoint
          type: System.Int32
        - id: isViewing
          type: System.Boolean
        - id: isBotFight
          type: System.Boolean
      overload: Timba.SacredTails.Arena.GameSceneManager.SendBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.GameSceneManager.EndBattle
      commentId: M:Timba.SacredTails.Arena.GameSceneManager.EndBattle
      language: CSharp
      name:
        CSharp: EndBattle()
        VB: EndBattle()
      nameWithType:
        CSharp: GameSceneManager.EndBattle()
        VB: GameSceneManager.EndBattle()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.GameSceneManager.EndBattle()
        VB: Timba.SacredTails.Arena.GameSceneManager.EndBattle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: EndBattle
        path: ''
        startLine: 29643
      syntax:
        content:
          CSharp: public void EndBattle()
          VB: Public Sub
      overload: Timba.SacredTails.Arena.GameSceneManager.EndBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Arena.ShinseiType
  commentId: N:Timba.SacredTails.Arena.ShinseiType
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Arena.ShinseiType
    VB: Timba.SacredTails.Arena.ShinseiType
  nameWithType:
    CSharp: Timba.SacredTails.Arena.ShinseiType
    VB: Timba.SacredTails.Arena.ShinseiType
  qualifiedName:
    CSharp: Timba.SacredTails.Arena.ShinseiType
    VB: Timba.SacredTails.Arena.ShinseiType
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    language: CSharp
    name:
      CSharp: ShinseiTypeScriptable
      VB: ShinseiTypeScriptable
    nameWithType:
      CSharp: ShinseiTypeScriptable
      VB: ShinseiTypeScriptable
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
      VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena.ShinseiType
    source:
      id: ShinseiTypeScriptable
      path: ''
      startLine: 14315
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ShinseiTypeScriptable : ScriptableObject
        VB: >-
          <Serializable>

          Public Class ShinseiTypeScriptable

              Inherits ScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
      commentId: F:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
      language: CSharp
      name:
        CSharp: shinseiTypeMatrix
        VB: shinseiTypeMatrix
      nameWithType:
        CSharp: ShinseiTypeScriptable.shinseiTypeMatrix
        VB: ShinseiTypeScriptable.shinseiTypeMatrix
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: shinseiTypeMatrix
        path: ''
        startLine: 14319
      syntax:
        content:
          CSharp: public List<ShinseiTypeListClass> shinseiTypeMatrix
          VB: Public shinseiTypeMatrix As List(Of ShinseiTypeListClass)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
      language: CSharp
      name:
        CSharp: GetShinseiTypes()
        VB: GetShinseiTypes()
      nameWithType:
        CSharp: ShinseiTypeScriptable.GetShinseiTypes()
        VB: ShinseiTypeScriptable.GetShinseiTypes()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes()
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: GetShinseiTypes
        path: ''
        startLine: 14321
      syntax:
        content:
          CSharp: public void GetShinseiTypes()
          VB: Public Sub GetShinseiTypes
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType,CharacterType)
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType,CharacterType)
      language: CSharp
      name:
        CSharp: CompareTypesAndGetDamage(CharacterType, CharacterType)
        VB: CompareTypesAndGetDamage(CharacterType, CharacterType)
      nameWithType:
        CSharp: ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
        VB: ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: CompareTypesAndGetDamage
        path: ''
        startLine: 14331
      syntax:
        content:
          CSharp: public float CompareTypesAndGetDamage(CharacterType currentShinsei, CharacterType targetShinesi)
          VB: Public Function CompareTypesAndGetDamage(currentShinsei As CharacterType, targetShinesi As CharacterType) As Single
        parameters:
        - id: currentShinsei
          type: Global.CharacterType
        - id: targetShinesi
          type: Global.CharacterType
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
      language: CSharp
      name:
        CSharp: GetMessageForTypeDamage(Single)
        VB: GetMessageForTypeDamage(Single)
      nameWithType:
        CSharp: ShinseiTypeScriptable.GetMessageForTypeDamage(Single)
        VB: ShinseiTypeScriptable.GetMessageForTypeDamage(Single)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: GetMessageForTypeDamage
        path: ''
        startLine: 14336
      syntax:
        content:
          CSharp: public string GetMessageForTypeDamage(float typeDamageMultiplier)
          VB: Public Function GetMessageForTypeDamage(typeDamageMultiplier As Single) As String
        parameters:
        - id: typeDamageMultiplier
          type: System.Single
        return:
          type: System.String
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
      language: CSharp
      name:
        CSharp: SerializeShinseiTypeMatrix()
        VB: SerializeShinseiTypeMatrix()
      nameWithType:
        CSharp: ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
        VB: ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: SerializeShinseiTypeMatrix
        path: ''
        startLine: 14349
      syntax:
        content:
          CSharp: public void SerializeShinseiTypeMatrix()
          VB: Public Sub SerializeShinseiTypeMatrix
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    language: CSharp
    name:
      CSharp: ShinseiTypeListClass
      VB: ShinseiTypeListClass
    nameWithType:
      CSharp: ShinseiTypeListClass
      VB: ShinseiTypeListClass
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena.ShinseiType
    source:
      id: ShinseiTypeListClass
      path: ''
      startLine: 14370
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ShinseiTypeListClass
        VB: >-
          <Serializable>

          Public Class ShinseiTypeListClass
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
      commentId: F:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
      language: CSharp
      name:
        CSharp: rows
        VB: rows
      nameWithType:
        CSharp: ShinseiTypeListClass.rows
        VB: ShinseiTypeListClass.rows
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: rows
        path: ''
        startLine: 14373
      syntax:
        content:
          CSharp: public List<float> rows
          VB: Public rows As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.AudioIntegration
  commentId: N:Timba.SacredTails.AudioIntegration
  language: CSharp
  name:
    CSharp: Timba.SacredTails.AudioIntegration
    VB: Timba.SacredTails.AudioIntegration
  nameWithType:
    CSharp: Timba.SacredTails.AudioIntegration
    VB: Timba.SacredTails.AudioIntegration
  qualifiedName:
    CSharp: Timba.SacredTails.AudioIntegration
    VB: Timba.SacredTails.AudioIntegration
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.AudioIntegration.AudioSettings
    commentId: T:Timba.SacredTails.AudioIntegration.AudioSettings
    language: CSharp
    name:
      CSharp: AudioSettings
      VB: AudioSettings
    nameWithType:
      CSharp: AudioSettings
      VB: AudioSettings
    qualifiedName:
      CSharp: Timba.SacredTails.AudioIntegration.AudioSettings
      VB: Timba.SacredTails.AudioIntegration.AudioSettings
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.AudioIntegration
    source:
      id: AudioSettings
      path: ''
      startLine: 6753
    syntax:
      content:
        CSharp: 'public class AudioSettings : MonoBehaviour'
        VB: >-
          Public Class AudioSettings

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.AudioIntegration.AudioSettings.AmbienceVolume
      commentId: F:Timba.SacredTails.AudioIntegration.AudioSettings.AmbienceVolume
      language: CSharp
      name:
        CSharp: AmbienceVolume
        VB: AmbienceVolume
      nameWithType:
        CSharp: AudioSettings.AmbienceVolume
        VB: AudioSettings.AmbienceVolume
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.AudioSettings.AmbienceVolume
        VB: Timba.SacredTails.AudioIntegration.AudioSettings.AmbienceVolume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: AmbienceVolume
        path: ''
        startLine: 6755
      syntax:
        content:
          CSharp: public AK.Wwise.RTPC AmbienceVolume
          VB: Public AmbienceVolume As AK.Wwise.RTPC
        return:
          type: Global.AK.Wwise.RTPC
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.AudioSettings.MusicVolume
      commentId: F:Timba.SacredTails.AudioIntegration.AudioSettings.MusicVolume
      language: CSharp
      name:
        CSharp: MusicVolume
        VB: MusicVolume
      nameWithType:
        CSharp: AudioSettings.MusicVolume
        VB: AudioSettings.MusicVolume
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.AudioSettings.MusicVolume
        VB: Timba.SacredTails.AudioIntegration.AudioSettings.MusicVolume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: MusicVolume
        path: ''
        startLine: 6756
      syntax:
        content:
          CSharp: public AK.Wwise.RTPC MusicVolume
          VB: Public MusicVolume As AK.Wwise.RTPC
        return:
          type: Global.AK.Wwise.RTPC
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.AudioSettings.SFXVolume
      commentId: F:Timba.SacredTails.AudioIntegration.AudioSettings.SFXVolume
      language: CSharp
      name:
        CSharp: SFXVolume
        VB: SFXVolume
      nameWithType:
        CSharp: AudioSettings.SFXVolume
        VB: AudioSettings.SFXVolume
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.AudioSettings.SFXVolume
        VB: Timba.SacredTails.AudioIntegration.AudioSettings.SFXVolume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: SFXVolume
        path: ''
        startLine: 6757
      syntax:
        content:
          CSharp: public AK.Wwise.RTPC SFXVolume
          VB: Public SFXVolume As AK.Wwise.RTPC
        return:
          type: Global.AK.Wwise.RTPC
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.AudioSettings.MasterSlider
      commentId: F:Timba.SacredTails.AudioIntegration.AudioSettings.MasterSlider
      language: CSharp
      name:
        CSharp: MasterSlider
        VB: MasterSlider
      nameWithType:
        CSharp: AudioSettings.MasterSlider
        VB: AudioSettings.MasterSlider
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.AudioSettings.MasterSlider
        VB: Timba.SacredTails.AudioIntegration.AudioSettings.MasterSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: MasterSlider
        path: ''
        startLine: 6759
      syntax:
        content:
          CSharp: public Slider MasterSlider
          VB: Public MasterSlider As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.AudioSettings.MusicSlider
      commentId: F:Timba.SacredTails.AudioIntegration.AudioSettings.MusicSlider
      language: CSharp
      name:
        CSharp: MusicSlider
        VB: MusicSlider
      nameWithType:
        CSharp: AudioSettings.MusicSlider
        VB: AudioSettings.MusicSlider
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.AudioSettings.MusicSlider
        VB: Timba.SacredTails.AudioIntegration.AudioSettings.MusicSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: MusicSlider
        path: ''
        startLine: 6760
      syntax:
        content:
          CSharp: public Slider MusicSlider
          VB: Public MusicSlider As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.AudioSettings.SFXSlider
      commentId: F:Timba.SacredTails.AudioIntegration.AudioSettings.SFXSlider
      language: CSharp
      name:
        CSharp: SFXSlider
        VB: SFXSlider
      nameWithType:
        CSharp: AudioSettings.SFXSlider
        VB: AudioSettings.SFXSlider
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.AudioSettings.SFXSlider
        VB: Timba.SacredTails.AudioIntegration.AudioSettings.SFXSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: SFXSlider
        path: ''
        startLine: 6761
      syntax:
        content:
          CSharp: public Slider SFXSlider
          VB: Public SFXSlider As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart
      commentId: M:Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart
      language: CSharp
      name:
        CSharp: CustomStart()
        VB: CustomStart()
      nameWithType:
        CSharp: AudioSettings.CustomStart()
        VB: AudioSettings.CustomStart()
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart()
        VB: Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: CustomStart
        path: ''
        startLine: 6763
      syntax:
        content:
          CSharp: public void CustomStart()
          VB: Public Sub CustomStart
      overload: Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue(System.Single)
      commentId: M:Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue(System.Single)
      language: CSharp
      name:
        CSharp: SetMasterValue(Single)
        VB: SetMasterValue(Single)
      nameWithType:
        CSharp: AudioSettings.SetMasterValue(Single)
        VB: AudioSettings.SetMasterValue(Single)
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue(System.Single)
        VB: Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: SetMasterValue
        path: ''
        startLine: 6772
      syntax:
        content:
          CSharp: public void SetMasterValue(float value)
          VB: Public Sub SetMasterValue(value As Single)
        parameters:
        - id: value
          type: System.Single
      overload: Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue(System.Single)
      commentId: M:Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue(System.Single)
      language: CSharp
      name:
        CSharp: SetMusicValue(Single)
        VB: SetMusicValue(Single)
      nameWithType:
        CSharp: AudioSettings.SetMusicValue(Single)
        VB: AudioSettings.SetMusicValue(Single)
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue(System.Single)
        VB: Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: SetMusicValue
        path: ''
        startLine: 6778
      syntax:
        content:
          CSharp: public void SetMusicValue(float value)
          VB: Public Sub SetMusicValue(value As Single)
        parameters:
        - id: value
          type: System.Single
      overload: Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue(System.Single)
      commentId: M:Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue(System.Single)
      language: CSharp
      name:
        CSharp: SetSFXValue(Single)
        VB: SetSFXValue(Single)
      nameWithType:
        CSharp: AudioSettings.SetSFXValue(Single)
        VB: AudioSettings.SetSFXValue(Single)
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue(System.Single)
        VB: Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: SetSFXValue
        path: ''
        startLine: 6784
      syntax:
        content:
          CSharp: public void SetSFXValue(float value)
          VB: Public Sub SetSFXValue(value As Single)
        parameters:
        - id: value
          type: System.Single
      overload: Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.AudioIntegration.CallStart
    commentId: T:Timba.SacredTails.AudioIntegration.CallStart
    language: CSharp
    name:
      CSharp: CallStart
      VB: CallStart
    nameWithType:
      CSharp: CallStart
      VB: CallStart
    qualifiedName:
      CSharp: Timba.SacredTails.AudioIntegration.CallStart
      VB: Timba.SacredTails.AudioIntegration.CallStart
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.AudioIntegration
    source:
      id: CallStart
      path: ''
      startLine: 6798
    syntax:
      content:
        CSharp: 'public class CallStart : MonoBehaviour'
        VB: >-
          Public Class CallStart

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Timba.SacredTails.AudioIntegration.SimpleAudioBtn
    commentId: T:Timba.SacredTails.AudioIntegration.SimpleAudioBtn
    language: CSharp
    name:
      CSharp: SimpleAudioBtn
      VB: SimpleAudioBtn
    nameWithType:
      CSharp: SimpleAudioBtn
      VB: SimpleAudioBtn
    qualifiedName:
      CSharp: Timba.SacredTails.AudioIntegration.SimpleAudioBtn
      VB: Timba.SacredTails.AudioIntegration.SimpleAudioBtn
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.AudioIntegration
    source:
      id: SimpleAudioBtn
      path: ''
      startLine: 6918
    summary: "\nThis component add a callback to component attached button to play a WWise event\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SimpleAudioBtn : MonoBehaviour'
        VB: >-
          Public Class SimpleAudioBtn

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.AudioIntegration.SimpleAudioBtn.eventName
      commentId: F:Timba.SacredTails.AudioIntegration.SimpleAudioBtn.eventName
      language: CSharp
      name:
        CSharp: eventName
        VB: eventName
      nameWithType:
        CSharp: SimpleAudioBtn.eventName
        VB: SimpleAudioBtn.eventName
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.SimpleAudioBtn.eventName
        VB: Timba.SacredTails.AudioIntegration.SimpleAudioBtn.eventName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: eventName
        path: ''
        startLine: 6921
      syntax:
        content:
          CSharp: public string eventName
          VB: Public eventName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.AudioIntegration.SimpleAudioCallback
    commentId: T:Timba.SacredTails.AudioIntegration.SimpleAudioCallback
    language: CSharp
    name:
      CSharp: SimpleAudioCallback
      VB: SimpleAudioCallback
    nameWithType:
      CSharp: SimpleAudioCallback
      VB: SimpleAudioCallback
    qualifiedName:
      CSharp: Timba.SacredTails.AudioIntegration.SimpleAudioCallback
      VB: Timba.SacredTails.AudioIntegration.SimpleAudioCallback
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.AudioIntegration
    source:
      id: SimpleAudioCallback
      path: ''
      startLine: 6945
    summary: "\nThis component call an WWise event \n"
    example: []
    syntax:
      content:
        CSharp: 'public class SimpleAudioCallback : MonoBehaviour'
        VB: >-
          Public Class SimpleAudioCallback

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.eventName
      commentId: F:Timba.SacredTails.AudioIntegration.SimpleAudioCallback.eventName
      language: CSharp
      name:
        CSharp: eventName
        VB: eventName
      nameWithType:
        CSharp: SimpleAudioCallback.eventName
        VB: SimpleAudioCallback.eventName
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.eventName
        VB: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.eventName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: eventName
        path: ''
        startLine: 6947
      syntax:
        content:
          CSharp: public string eventName
          VB: Public eventName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio
      commentId: M:Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio
      language: CSharp
      name:
        CSharp: PlayAudio()
        VB: PlayAudio()
      nameWithType:
        CSharp: SimpleAudioCallback.PlayAudio()
        VB: SimpleAudioCallback.PlayAudio()
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio()
        VB: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: PlayAudio
        path: ''
        startLine: 6949
      syntax:
        content:
          CSharp: public void PlayAudio()
          VB: Public Sub PlayAudio
      overload: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.AudioIntegration.SimpleAudioToggle
    commentId: T:Timba.SacredTails.AudioIntegration.SimpleAudioToggle
    language: CSharp
    name:
      CSharp: SimpleAudioToggle
      VB: SimpleAudioToggle
    nameWithType:
      CSharp: SimpleAudioToggle
      VB: SimpleAudioToggle
    qualifiedName:
      CSharp: Timba.SacredTails.AudioIntegration.SimpleAudioToggle
      VB: Timba.SacredTails.AudioIntegration.SimpleAudioToggle
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.AudioIntegration
    source:
      id: SimpleAudioToggle
      path: ''
      startLine: 6963
    summary: "\nUI Element that allow enable or disable audio in the game\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SimpleAudioToggle : MonoBehaviour'
        VB: >-
          Public Class SimpleAudioToggle

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.AudioIntegration.SimpleAudioToggle.eventName
      commentId: F:Timba.SacredTails.AudioIntegration.SimpleAudioToggle.eventName
      language: CSharp
      name:
        CSharp: eventName
        VB: eventName
      nameWithType:
        CSharp: SimpleAudioToggle.eventName
        VB: SimpleAudioToggle.eventName
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.SimpleAudioToggle.eventName
        VB: Timba.SacredTails.AudioIntegration.SimpleAudioToggle.eventName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: eventName
        path: ''
        startLine: 6966
      syntax:
        content:
          CSharp: public string eventName
          VB: Public eventName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.AudioIntegration.SimpleButtonSound
    commentId: T:Timba.SacredTails.AudioIntegration.SimpleButtonSound
    language: CSharp
    name:
      CSharp: SimpleButtonSound
      VB: SimpleButtonSound
    nameWithType:
      CSharp: SimpleButtonSound
      VB: SimpleButtonSound
    qualifiedName:
      CSharp: Timba.SacredTails.AudioIntegration.SimpleButtonSound
      VB: Timba.SacredTails.AudioIntegration.SimpleButtonSound
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.AudioIntegration
    source:
      id: SimpleButtonSound
      path: ''
      startLine: 6990
    summary: "\nAdd callback to event OnClick of attached button using Unity Audio System\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SimpleButtonSound : MonoBehaviour'
        VB: >-
          Public Class SimpleButtonSound

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Timba.SacredTails.AudioIntegration.SimpleCustomAudio
    commentId: T:Timba.SacredTails.AudioIntegration.SimpleCustomAudio
    language: CSharp
    name:
      CSharp: SimpleCustomAudio
      VB: SimpleCustomAudio
    nameWithType:
      CSharp: SimpleCustomAudio
      VB: SimpleCustomAudio
    qualifiedName:
      CSharp: Timba.SacredTails.AudioIntegration.SimpleCustomAudio
      VB: Timba.SacredTails.AudioIntegration.SimpleCustomAudio
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.AudioIntegration
    source:
      id: SimpleCustomAudio
      path: ''
      startLine: 7015
    summary: "\nPlay simple custom audio\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SimpleCustomAudio : MonoBehaviour'
        VB: >-
          Public Class SimpleCustomAudio

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.eventName
      commentId: F:Timba.SacredTails.AudioIntegration.SimpleCustomAudio.eventName
      language: CSharp
      name:
        CSharp: eventName
        VB: eventName
      nameWithType:
        CSharp: SimpleCustomAudio.eventName
        VB: SimpleCustomAudio.eventName
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.eventName
        VB: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.eventName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: eventName
        path: ''
        startLine: 7017
      syntax:
        content:
          CSharp: public string eventName
          VB: Public eventName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play
      commentId: M:Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play
      language: CSharp
      name:
        CSharp: Play()
        VB: Play()
      nameWithType:
        CSharp: SimpleCustomAudio.Play()
        VB: SimpleCustomAudio.Play()
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play()
        VB: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: Play
        path: ''
        startLine: 7019
      syntax:
        content:
          CSharp: public void Play()
          VB: Public Sub Play
      overload: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.AudioIntegration.WWiseSacred
    commentId: T:Timba.SacredTails.AudioIntegration.WWiseSacred
    language: CSharp
    name:
      CSharp: WWiseSacred
      VB: WWiseSacred
    nameWithType:
      CSharp: WWiseSacred
      VB: WWiseSacred
    qualifiedName:
      CSharp: Timba.SacredTails.AudioIntegration.WWiseSacred
      VB: Timba.SacredTails.AudioIntegration.WWiseSacred
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.AudioIntegration
    source:
      id: WWiseSacred
      path: ''
      startLine: 7031
    syntax:
      content:
        CSharp: 'public class WWiseSacred : MonoBehaviour'
        VB: >-
          Public Class WWiseSacred

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent(System.String)
      commentId: M:Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent(System.String)
      language: CSharp
      name:
        CSharp: PTEvent(String)
        VB: PTEvent(String)
      nameWithType:
        CSharp: WWiseSacred.PTEvent(String)
        VB: WWiseSacred.PTEvent(String)
      qualifiedName:
        CSharp: Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent(System.String)
        VB: Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.AudioIntegration
      source:
        id: PTEvent
        path: ''
        startLine: 7035
      syntax:
        content:
          CSharp: public void PTEvent(string eventName)
          VB: Public Sub PTEvent(eventName As String)
        parameters:
        - id: eventName
          type: System.String
      overload: Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.BattleDebugTool
  commentId: N:Timba.SacredTails.BattleDebugTool
  language: CSharp
  name:
    CSharp: Timba.SacredTails.BattleDebugTool
    VB: Timba.SacredTails.BattleDebugTool
  nameWithType:
    CSharp: Timba.SacredTails.BattleDebugTool
    VB: Timba.SacredTails.BattleDebugTool
  qualifiedName:
    CSharp: Timba.SacredTails.BattleDebugTool
    VB: Timba.SacredTails.BattleDebugTool
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot
    commentId: T:Timba.SacredTails.BattleDebugTool.DebugShinseiSlot
    language: CSharp
    name:
      CSharp: DebugShinseiSlot
      VB: DebugShinseiSlot
    nameWithType:
      CSharp: DebugShinseiSlot
      VB: DebugShinseiSlot
    qualifiedName:
      CSharp: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot
      VB: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.BattleDebugTool
    source:
      id: DebugShinseiSlot
      path: ''
      startLine: 7054
    summary: "\nShow all necesary information for debug battle comparing data from local, and server allow to find errors in code\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DebugShinseiSlot : MonoBehaviour'
        VB: >-
          Public Class DebugShinseiSlot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.selectedImage
      commentId: F:Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.selectedImage
      language: CSharp
      name:
        CSharp: selectedImage
        VB: selectedImage
      nameWithType:
        CSharp: DebugShinseiSlot.selectedImage
        VB: DebugShinseiSlot.selectedImage
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.selectedImage
        VB: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.selectedImage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: selectedImage
        path: ''
        startLine: 7060
      syntax:
        content:
          CSharp: public Image selectedImage
          VB: Public selectedImage As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues(ShinseiStats,Shinsei,Shinsei)
      commentId: M:Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues(ShinseiStats,Shinsei,Shinsei)
      language: CSharp
      name:
        CSharp: ShowValues(ShinseiStats, Shinsei, Shinsei)
        VB: ShowValues(ShinseiStats, Shinsei, Shinsei)
      nameWithType:
        CSharp: DebugShinseiSlot.ShowValues(ShinseiStats, Shinsei, Shinsei)
        VB: DebugShinseiSlot.ShowValues(ShinseiStats, Shinsei, Shinsei)
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues(ShinseiStats, Shinsei, Shinsei)
        VB: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues(ShinseiStats, Shinsei, Shinsei)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: ShowValues
        path: ''
        startLine: 7062
      syntax:
        content:
          CSharp: public void ShowValues(ShinseiStats originalStats, Shinsei targetShinsei, Shinsei localShinsei)
          VB: Public Sub ShowValues(originalStats As ShinseiStats, targetShinsei As Shinsei, localShinsei As Shinsei)
        parameters:
        - id: originalStats
          type: Global.ShinseiStats
        - id: targetShinsei
          type: Global.Shinsei
        - id: localShinsei
          type: Global.Shinsei
      overload: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData
    commentId: T:Timba.SacredTails.BattleDebugTool.GetShareGroupData
    language: CSharp
    name:
      CSharp: GetShareGroupData
      VB: GetShareGroupData
    nameWithType:
      CSharp: GetShareGroupData
      VB: GetShareGroupData
    qualifiedName:
      CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData
      VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.BattleDebugTool
    source:
      id: GetShareGroupData
      path: ''
      startLine: 7108
    summary: "\nDownload to client all data from the server for debugging \n"
    example: []
    syntax:
      content:
        CSharp: 'public class GetShareGroupData : MonoBehaviour'
        VB: >-
          Public Class GetShareGroupData

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.matchId
      commentId: F:Timba.SacredTails.BattleDebugTool.GetShareGroupData.matchId
      language: CSharp
      name:
        CSharp: matchId
        VB: matchId
      nameWithType:
        CSharp: GetShareGroupData.matchId
        VB: GetShareGroupData.matchId
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.matchId
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.matchId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: matchId
        path: ''
        startLine: 7121
      syntax:
        content:
          CSharp: public string matchId
          VB: Public matchId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData(System.String,System.String)
      commentId: M:Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetServerMatchData(String, String)
        VB: GetServerMatchData(String, String)
      nameWithType:
        CSharp: GetShareGroupData.GetServerMatchData(String, String)
        VB: GetShareGroupData.GetServerMatchData(String, String)
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData(System.String, System.String)
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: GetServerMatchData
        path: ''
        startLine: 7138
      syntax:
        content:
          CSharp: public void GetServerMatchData(string matchId, string ownPlayfabId)
          VB: Public Sub GetServerMatchData(matchId As String, ownPlayfabId As String)
        parameters:
        - id: matchId
          type: System.String
        - id: ownPlayfabId
          type: System.String
      overload: Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer
    commentId: T:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer
    language: CSharp
    name:
      CSharp: GetShareGroupData.CombatPlayerServer
      VB: GetShareGroupData.CombatPlayerServer
    nameWithType:
      CSharp: GetShareGroupData.CombatPlayerServer
      VB: GetShareGroupData.CombatPlayerServer
    qualifiedName:
      CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer
      VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.BattleDebugTool
    source:
      id: CombatPlayerServer
      path: ''
      startLine: 7189
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class CombatPlayerServer
        VB: >-
          <Serializable>

          Public Class CombatPlayerServer
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.playfabId
      commentId: F:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.playfabId
      language: CSharp
      name:
        CSharp: playfabId
        VB: playfabId
      nameWithType:
        CSharp: GetShareGroupData.CombatPlayerServer.playfabId
        VB: GetShareGroupData.CombatPlayerServer.playfabId
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.playfabId
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.playfabId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: playfabId
        path: ''
        startLine: 7192
      syntax:
        content:
          CSharp: public string playfabId
          VB: Public playfabId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.DisplayName
      commentId: F:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.DisplayName
      language: CSharp
      name:
        CSharp: DisplayName
        VB: DisplayName
      nameWithType:
        CSharp: GetShareGroupData.CombatPlayerServer.DisplayName
        VB: GetShareGroupData.CombatPlayerServer.DisplayName
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.DisplayName
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.DisplayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: DisplayName
        path: ''
        startLine: 7193
      syntax:
        content:
          CSharp: public string DisplayName
          VB: Public DisplayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.shinseisSelected
      commentId: F:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.shinseisSelected
      language: CSharp
      name:
        CSharp: shinseisSelected
        VB: shinseisSelected
      nameWithType:
        CSharp: GetShareGroupData.CombatPlayerServer.shinseisSelected
        VB: GetShareGroupData.CombatPlayerServer.shinseisSelected
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.shinseisSelected
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.shinseisSelected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: shinseisSelected
        path: ''
        startLine: 7194
      syntax:
        content:
          CSharp: public bool shinseisSelected
          VB: Public shinseisSelected As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.hasSurrender
      commentId: F:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.hasSurrender
      language: CSharp
      name:
        CSharp: hasSurrender
        VB: hasSurrender
      nameWithType:
        CSharp: GetShareGroupData.CombatPlayerServer.hasSurrender
        VB: GetShareGroupData.CombatPlayerServer.hasSurrender
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.hasSurrender
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.hasSurrender
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: hasSurrender
        path: ''
        startLine: 7195
      syntax:
        content:
          CSharp: public bool hasSurrender
          VB: Public hasSurrender As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.confirmState
      commentId: F:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.confirmState
      language: CSharp
      name:
        CSharp: confirmState
        VB: confirmState
      nameWithType:
        CSharp: GetShareGroupData.CombatPlayerServer.confirmState
        VB: GetShareGroupData.CombatPlayerServer.confirmState
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.confirmState
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.confirmState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: confirmState
        path: ''
        startLine: 7196
      syntax:
        content:
          CSharp: public bool confirmState
          VB: Public confirmState As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.strikes
      commentId: F:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.strikes
      language: CSharp
      name:
        CSharp: strikes
        VB: strikes
      nameWithType:
        CSharp: GetShareGroupData.CombatPlayerServer.strikes
        VB: GetShareGroupData.CombatPlayerServer.strikes
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.strikes
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.strikes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: strikes
        path: ''
        startLine: 7197
      syntax:
        content:
          CSharp: public int strikes
          VB: Public strikes As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.forbidenActions
      commentId: F:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.forbidenActions
      language: CSharp
      name:
        CSharp: forbidenActions
        VB: forbidenActions
      nameWithType:
        CSharp: GetShareGroupData.CombatPlayerServer.forbidenActions
        VB: GetShareGroupData.CombatPlayerServer.forbidenActions
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.forbidenActions
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.forbidenActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: forbidenActions
        path: ''
        startLine: 7198
      syntax:
        content:
          CSharp: public Dictionary<int, int> forbidenActions
          VB: Public forbidenActions As Dictionary(Of Integer, Integer)
        return:
          type: System.Collections.Generic.Dictionary{System.Int32,System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.ShinseiParty
      commentId: F:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.ShinseiParty
      language: CSharp
      name:
        CSharp: ShinseiParty
        VB: ShinseiParty
      nameWithType:
        CSharp: GetShareGroupData.CombatPlayerServer.ShinseiParty
        VB: GetShareGroupData.CombatPlayerServer.ShinseiParty
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.ShinseiParty
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.ShinseiParty
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: ShinseiParty
        path: ''
        startLine: 7199
      syntax:
        content:
          CSharp: public List<Shinsei> ShinseiParty
          VB: Public ShinseiParty As List(Of Shinsei)
        return:
          type: System.Collections.Generic.List{Shinsei}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.currentShinsei
      commentId: F:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.currentShinsei
      language: CSharp
      name:
        CSharp: currentShinsei
        VB: currentShinsei
      nameWithType:
        CSharp: GetShareGroupData.CombatPlayerServer.currentShinsei
        VB: GetShareGroupData.CombatPlayerServer.currentShinsei
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.currentShinsei
        VB: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer.currentShinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: currentShinsei
        path: ''
        startLine: 7200
      syntax:
        content:
          CSharp: public int currentShinsei
          VB: Public currentShinsei As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest
    commentId: T:Timba.SacredTails.BattleDebugTool.ChangeCardsTest
    language: CSharp
    name:
      CSharp: ChangeCardsTest
      VB: ChangeCardsTest
    nameWithType:
      CSharp: ChangeCardsTest
      VB: ChangeCardsTest
    qualifiedName:
      CSharp: Timba.SacredTails.BattleDebugTool.ChangeCardsTest
      VB: Timba.SacredTails.BattleDebugTool.ChangeCardsTest
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.BattleDebugTool
    source:
      id: ChangeCardsTest
      path: ''
      startLine: 7331
    syntax:
      content:
        CSharp: 'public class ChangeCardsTest : MonoBehaviour'
        VB: >-
          Public Class ChangeCardsTest

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.playerDataManager
      commentId: F:Timba.SacredTails.BattleDebugTool.ChangeCardsTest.playerDataManager
      language: CSharp
      name:
        CSharp: playerDataManager
        VB: playerDataManager
      nameWithType:
        CSharp: ChangeCardsTest.playerDataManager
        VB: ChangeCardsTest.playerDataManager
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.playerDataManager
        VB: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.playerDataManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: playerDataManager
        path: ''
        startLine: 7333
      syntax:
        content:
          CSharp: public PlayerDataManager playerDataManager
          VB: Public playerDataManager As PlayerDataManager
        return:
          type: Global.PlayerDataManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0(System.String)
      commentId: M:Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0(System.String)
      language: CSharp
      name:
        CSharp: ChangeTestCard0(String)
        VB: ChangeTestCard0(String)
      nameWithType:
        CSharp: ChangeCardsTest.ChangeTestCard0(String)
        VB: ChangeCardsTest.ChangeTestCard0(String)
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0(System.String)
        VB: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: ChangeTestCard0
        path: ''
        startLine: 7335
      syntax:
        content:
          CSharp: public void ChangeTestCard0(string newIndex)
          VB: Public Sub ChangeTestCard0(newIndex As String)
        parameters:
        - id: newIndex
          type: System.String
      overload: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1(System.String)
      commentId: M:Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1(System.String)
      language: CSharp
      name:
        CSharp: ChangeTestCard1(String)
        VB: ChangeTestCard1(String)
      nameWithType:
        CSharp: ChangeCardsTest.ChangeTestCard1(String)
        VB: ChangeCardsTest.ChangeTestCard1(String)
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1(System.String)
        VB: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: ChangeTestCard1
        path: ''
        startLine: 7340
      syntax:
        content:
          CSharp: public void ChangeTestCard1(string newIndex)
          VB: Public Sub ChangeTestCard1(newIndex As String)
        parameters:
        - id: newIndex
          type: System.String
      overload: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2(System.String)
      commentId: M:Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2(System.String)
      language: CSharp
      name:
        CSharp: ChangeTestCard2(String)
        VB: ChangeTestCard2(String)
      nameWithType:
        CSharp: ChangeCardsTest.ChangeTestCard2(String)
        VB: ChangeCardsTest.ChangeTestCard2(String)
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2(System.String)
        VB: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: ChangeTestCard2
        path: ''
        startLine: 7345
      syntax:
        content:
          CSharp: public void ChangeTestCard2(string newIndex)
          VB: Public Sub ChangeTestCard2(newIndex As String)
        parameters:
        - id: newIndex
          type: System.String
      overload: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3(System.String)
      commentId: M:Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3(System.String)
      language: CSharp
      name:
        CSharp: ChangeTestCard3(String)
        VB: ChangeTestCard3(String)
      nameWithType:
        CSharp: ChangeCardsTest.ChangeTestCard3(String)
        VB: ChangeCardsTest.ChangeTestCard3(String)
      qualifiedName:
        CSharp: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3(System.String)
        VB: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.BattleDebugTool
      source:
        id: ChangeTestCard3
        path: ''
        startLine: 7350
      syntax:
        content:
          CSharp: public void ChangeTestCard3(string newIndex)
          VB: Public Sub ChangeTestCard3(newIndex As String)
        parameters:
        - id: newIndex
          type: System.String
      overload: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.VFXController
  commentId: N:Timba.SacredTails.VFXController
  language: CSharp
  name:
    CSharp: Timba.SacredTails.VFXController
    VB: Timba.SacredTails.VFXController
  nameWithType:
    CSharp: Timba.SacredTails.VFXController
    VB: Timba.SacredTails.VFXController
  qualifiedName:
    CSharp: Timba.SacredTails.VFXController
    VB: Timba.SacredTails.VFXController
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.VFXController.VFXDestroyer
    commentId: T:Timba.SacredTails.VFXController.VFXDestroyer
    language: CSharp
    name:
      CSharp: VFXDestroyer
      VB: VFXDestroyer
    nameWithType:
      CSharp: VFXDestroyer
      VB: VFXDestroyer
    qualifiedName:
      CSharp: Timba.SacredTails.VFXController.VFXDestroyer
      VB: Timba.SacredTails.VFXController.VFXDestroyer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.VFXController
    source:
      id: VFXDestroyer
      path: ''
      startLine: 7212
    syntax:
      content:
        CSharp: 'public class VFXDestroyer : MonoBehaviour'
        VB: >-
          Public Class VFXDestroyer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Timba.SacredTails.VFXController.VFXInstancer
    commentId: T:Timba.SacredTails.VFXController.VFXInstancer
    language: CSharp
    name:
      CSharp: VFXInstancer
      VB: VFXInstancer
    nameWithType:
      CSharp: VFXInstancer
      VB: VFXInstancer
    qualifiedName:
      CSharp: Timba.SacredTails.VFXController.VFXInstancer
      VB: Timba.SacredTails.VFXController.VFXInstancer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.VFXController
    source:
      id: VFXInstancer
      path: ''
      startLine: 7246
    syntax:
      content:
        CSharp: 'public class VFXInstancer : MonoBehaviour'
        VB: >-
          Public Class VFXInstancer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX(System.Int32,Vector3,Quaternion)
      commentId: M:Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX(System.Int32,Vector3,Quaternion)
      language: CSharp
      name:
        CSharp: SpawnVFX(Int32, Vector3, Quaternion)
        VB: SpawnVFX(Int32, Vector3, Quaternion)
      nameWithType:
        CSharp: VFXInstancer.SpawnVFX(Int32, Vector3, Quaternion)
        VB: VFXInstancer.SpawnVFX(Int32, Vector3, Quaternion)
      qualifiedName:
        CSharp: Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX(System.Int32, Vector3, Quaternion)
        VB: Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX(System.Int32, Vector3, Quaternion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.VFXController
      source:
        id: SpawnVFX
        path: ''
        startLine: 7250
      syntax:
        content:
          CSharp: public GameObject SpawnVFX(int vfxIndex, Vector3 position, Quaternion rotation)
          VB: Public Function SpawnVFX(vfxIndex As Integer, position As Vector3, rotation As Quaternion) As GameObject
        parameters:
        - id: vfxIndex
          type: System.Int32
        - id: position
          type: Global.Vector3
        - id: rotation
          type: Global.Quaternion
        return:
          type: Global.GameObject
      overload: Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.VFXController.VFXInstancer.Test
      commentId: M:Timba.SacredTails.VFXController.VFXInstancer.Test
      language: CSharp
      name:
        CSharp: Test()
        VB: Test()
      nameWithType:
        CSharp: VFXInstancer.Test()
        VB: VFXInstancer.Test()
      qualifiedName:
        CSharp: Timba.SacredTails.VFXController.VFXInstancer.Test()
        VB: Timba.SacredTails.VFXController.VFXInstancer.Test()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.VFXController
      source:
        id: Test
        path: ''
        startLine: 7257
      syntax:
        content:
          CSharp: public void Test()
          VB: Public Sub Test
      overload: Timba.SacredTails.VFXController.VFXInstancer.Test*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.VFXController.VFXInstancer.Test2
      commentId: M:Timba.SacredTails.VFXController.VFXInstancer.Test2
      language: CSharp
      name:
        CSharp: Test2()
        VB: Test2()
      nameWithType:
        CSharp: VFXInstancer.Test2()
        VB: VFXInstancer.Test2()
      qualifiedName:
        CSharp: Timba.SacredTails.VFXController.VFXInstancer.Test2()
        VB: Timba.SacredTails.VFXController.VFXInstancer.Test2()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.VFXController
      source:
        id: Test2
        path: ''
        startLine: 7265
      syntax:
        content:
          CSharp: public void Test2()
          VB: Public Sub Test2
      overload: Timba.SacredTails.VFXController.VFXInstancer.Test2*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfx(System.Int32)
      commentId: M:Timba.SacredTails.VFXController.VFXInstancer.GetVfx(System.Int32)
      language: CSharp
      name:
        CSharp: GetVfx(Int32)
        VB: GetVfx(Int32)
      nameWithType:
        CSharp: VFXInstancer.GetVfx(Int32)
        VB: VFXInstancer.GetVfx(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.VFXController.VFXInstancer.GetVfx(System.Int32)
        VB: Timba.SacredTails.VFXController.VFXInstancer.GetVfx(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.VFXController
      source:
        id: GetVfx
        path: ''
        startLine: 7271
      syntax:
        content:
          CSharp: public VfxInfo GetVfx(int vfxIndex)
          VB: Public Function GetVfx(vfxIndex As Integer) As VfxInfo
        parameters:
        - id: vfxIndex
          type: System.Int32
        return:
          type: Global.VfxInfo
      overload: Timba.SacredTails.VFXController.VFXInstancer.GetVfx*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime(VfxInfo)
      commentId: M:Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime(VfxInfo)
      language: CSharp
      name:
        CSharp: GetVfxTime(VfxInfo)
        VB: GetVfxTime(VfxInfo)
      nameWithType:
        CSharp: VFXInstancer.GetVfxTime(VfxInfo)
        VB: VFXInstancer.GetVfxTime(VfxInfo)
      qualifiedName:
        CSharp: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime(VfxInfo)
        VB: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime(VfxInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.VFXController
      source:
        id: GetVfxTime
        path: ''
        startLine: 7280
      syntax:
        content:
          CSharp: public float GetVfxTime(VfxInfo vfxInfo)
          VB: Public Function GetVfxTime(vfxInfo As VfxInfo) As Single
        parameters:
        - id: vfxInfo
          type: Global.VfxInfo
        return:
          type: System.Single
      overload: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay(System.Int32)
      commentId: M:Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay(System.Int32)
      language: CSharp
      name:
        CSharp: GetVfxHitDelay(Int32)
        VB: GetVfxHitDelay(Int32)
      nameWithType:
        CSharp: VFXInstancer.GetVfxHitDelay(Int32)
        VB: VFXInstancer.GetVfxHitDelay(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay(System.Int32)
        VB: Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.VFXController
      source:
        id: GetVfxHitDelay
        path: ''
        startLine: 7288
      syntax:
        content:
          CSharp: public float GetVfxHitDelay(int vfxIndex)
          VB: Public Function GetVfxHitDelay(vfxIndex As Integer) As Single
        parameters:
        - id: vfxIndex
          type: System.Int32
        return:
          type: System.Single
      overload: Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime(System.Int32)
      commentId: M:Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime(System.Int32)
      language: CSharp
      name:
        CSharp: GetVfxTime(Int32)
        VB: GetVfxTime(Int32)
      nameWithType:
        CSharp: VFXInstancer.GetVfxTime(Int32)
        VB: VFXInstancer.GetVfxTime(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime(System.Int32)
        VB: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.VFXController
      source:
        id: GetVfxTime
        path: ''
        startLine: 7297
      syntax:
        content:
          CSharp: public float GetVfxTime(int vfxIndex)
          VB: Public Function GetVfxTime(vfxIndex As Integer) As Single
        parameters:
        - id: vfxIndex
          type: System.Int32
        return:
          type: System.Single
      overload: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed(VfxInfo)
      commentId: M:Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed(VfxInfo)
      language: CSharp
      name:
        CSharp: GetVfxIsReversed(VfxInfo)
        VB: GetVfxIsReversed(VfxInfo)
      nameWithType:
        CSharp: VFXInstancer.GetVfxIsReversed(VfxInfo)
        VB: VFXInstancer.GetVfxIsReversed(VfxInfo)
      qualifiedName:
        CSharp: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed(VfxInfo)
        VB: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed(VfxInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.VFXController
      source:
        id: GetVfxIsReversed
        path: ''
        startLine: 7306
      syntax:
        content:
          CSharp: public bool GetVfxIsReversed(VfxInfo vfxInfo)
          VB: Public Function GetVfxIsReversed(vfxInfo As VfxInfo) As Boolean
        parameters:
        - id: vfxInfo
          type: Global.VfxInfo
        return:
          type: System.Boolean
      overload: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed(System.Int32)
      commentId: M:Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed(System.Int32)
      language: CSharp
      name:
        CSharp: GetVfxIsReversed(Int32)
        VB: GetVfxIsReversed(Int32)
      nameWithType:
        CSharp: VFXInstancer.GetVfxIsReversed(Int32)
        VB: VFXInstancer.GetVfxIsReversed(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed(System.Int32)
        VB: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.VFXController
      source:
        id: GetVfxIsReversed
        path: ''
        startLine: 7313
      syntax:
        content:
          CSharp: public bool GetVfxIsReversed(int vfxIndex)
          VB: Public Function GetVfxIsReversed(vfxIndex As Integer) As Boolean
        parameters:
        - id: vfxIndex
          type: System.Int32
        return:
          type: System.Boolean
      overload: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.TournamentBehavior
  commentId: N:Timba.SacredTails.TournamentBehavior
  language: CSharp
  name:
    CSharp: Timba.SacredTails.TournamentBehavior
    VB: Timba.SacredTails.TournamentBehavior
  nameWithType:
    CSharp: Timba.SacredTails.TournamentBehavior
    VB: Timba.SacredTails.TournamentBehavior
  qualifiedName:
    CSharp: Timba.SacredTails.TournamentBehavior
    VB: Timba.SacredTails.TournamentBehavior
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentCreationController
    language: CSharp
    name:
      CSharp: TournamentCreationController
      VB: TournamentCreationController
    nameWithType:
      CSharp: TournamentCreationController
      VB: TournamentCreationController
    qualifiedName:
      CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController
      VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.TournamentBehavior
    source:
      id: TournamentCreationController
      path: ''
      startLine: 7641
    syntax:
      content:
        CSharp: 'public class TournamentCreationController : MonoBehaviour'
        VB: >-
          Public Class TournamentCreationController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.loadingScreen
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentCreationController.loadingScreen
      language: CSharp
      name:
        CSharp: loadingScreen
        VB: loadingScreen
      nameWithType:
        CSharp: TournamentCreationController.loadingScreen
        VB: TournamentCreationController.loadingScreen
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController.loadingScreen
        VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController.loadingScreen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: loadingScreen
        path: ''
        startLine: 7643
      syntax:
        content:
          CSharp: public GameObject loadingScreen
          VB: Public loadingScreen As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.calendarController
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentCreationController.calendarController
      language: CSharp
      name:
        CSharp: calendarController
        VB: calendarController
      nameWithType:
        CSharp: TournamentCreationController.calendarController
        VB: TournamentCreationController.calendarController
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController.calendarController
        VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController.calendarController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: calendarController
        path: ''
        startLine: 7644
      syntax:
        content:
          CSharp: public CalendarController calendarController
          VB: Public calendarController As CalendarController
        return:
          type: Global.CalendarController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.tournamentName
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentCreationController.tournamentName
      language: CSharp
      name:
        CSharp: tournamentName
        VB: tournamentName
      nameWithType:
        CSharp: TournamentCreationController.tournamentName
        VB: TournamentCreationController.tournamentName
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController.tournamentName
        VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController.tournamentName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: tournamentName
        path: ''
        startLine: 7645
      syntax:
        content:
          CSharp: public TMP_InputField tournamentName
          VB: Public tournamentName As TMP_InputField
        return:
          type: Global.TMP_InputField
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.maxPlayerInput
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentCreationController.maxPlayerInput
      language: CSharp
      name:
        CSharp: maxPlayerInput
        VB: maxPlayerInput
      nameWithType:
        CSharp: TournamentCreationController.maxPlayerInput
        VB: TournamentCreationController.maxPlayerInput
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController.maxPlayerInput
        VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController.maxPlayerInput
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: maxPlayerInput
        path: ''
        startLine: 7646
      syntax:
        content:
          CSharp: public TMP_Dropdown maxPlayerInput
          VB: Public maxPlayerInput As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.onLoginSuccess
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentCreationController.onLoginSuccess
      language: CSharp
      name:
        CSharp: onLoginSuccess
        VB: onLoginSuccess
      nameWithType:
        CSharp: TournamentCreationController.onLoginSuccess
        VB: TournamentCreationController.onLoginSuccess
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController.onLoginSuccess
        VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController.onLoginSuccess
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: onLoginSuccess
        path: ''
        startLine: 7648
      syntax:
        content:
          CSharp: public UnityEvent onLoginSuccess
          VB: Public onLoginSuccess As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed(LoginResult)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed(LoginResult)
      language: CSharp
      name:
        CSharp: CheckIfUserIsAllowed(LoginResult)
        VB: CheckIfUserIsAllowed(LoginResult)
      nameWithType:
        CSharp: TournamentCreationController.CheckIfUserIsAllowed(LoginResult)
        VB: TournamentCreationController.CheckIfUserIsAllowed(LoginResult)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed(LoginResult)
        VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed(LoginResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: CheckIfUserIsAllowed
        path: ''
        startLine: 7650
      syntax:
        content:
          CSharp: public void CheckIfUserIsAllowed(LoginResult resultLogin)
          VB: Public Sub CheckIfUserIsAllowed(resultLogin As LoginResult)
        parameters:
        - id: resultLogin
          type: Global.LoginResult
      overload: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.onTournamentCreation
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentCreationController.onTournamentCreation
      language: CSharp
      name:
        CSharp: onTournamentCreation
        VB: onTournamentCreation
      nameWithType:
        CSharp: TournamentCreationController.onTournamentCreation
        VB: TournamentCreationController.onTournamentCreation
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController.onTournamentCreation
        VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController.onTournamentCreation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: onTournamentCreation
        path: ''
        startLine: 7661
      syntax:
        content:
          CSharp: public Action<string> onTournamentCreation
          VB: Public onTournamentCreation As Action(Of String)
        return:
          type: Global.Action{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament
      language: CSharp
      name:
        CSharp: CreateTournament()
        VB: CreateTournament()
      nameWithType:
        CSharp: TournamentCreationController.CreateTournament()
        VB: TournamentCreationController.CreateTournament()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament()
        VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: CreateTournament
        path: ''
        startLine: 7663
      syntax:
        content:
          CSharp: public void CreateTournament()
          VB: Public Sub CreateTournament
      overload: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData
      language: CSharp
      name:
        CSharp: FillBotData()
        VB: FillBotData()
      nameWithType:
        CSharp: TournamentCreationController.FillBotData()
        VB: TournamentCreationController.FillBotData()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData()
        VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: FillBotData
        path: ''
        startLine: 7724
      syntax:
        content:
          CSharp: public (string, ExecuteFunctionRequest) FillBotData()
          VB: Public Function FillBotData As(String, ExecuteFunctionRequest)(Of String , ExecuteFunctionRequest)
        return:
          type: System.ValueTuple{System.String,ExecuteFunctionRequest}
      overload: Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId
      language: CSharp
      name:
        CSharp: GenerateTournamentId()
        VB: GenerateTournamentId()
      nameWithType:
        CSharp: TournamentCreationController.GenerateTournamentId()
        VB: TournamentCreationController.GenerateTournamentId()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId()
        VB: Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: GenerateTournamentId
        path: ''
        startLine: 7752
      syntax:
        content:
          CSharp: public string GenerateTournamentId()
          VB: Public Function GenerateTournamentId As String
        return:
          type: System.String
      overload: Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController
    commentId: T:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController
    language: CSharp
    name:
      CSharp: SingleBracketPlayerLabelController
      VB: SingleBracketPlayerLabelController
    nameWithType:
      CSharp: SingleBracketPlayerLabelController
      VB: SingleBracketPlayerLabelController
    qualifiedName:
      CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController
      VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.TournamentBehavior
    source:
      id: SingleBracketPlayerLabelController
      path: ''
      startLine: 7775
    syntax:
      content:
        CSharp: 'public class SingleBracketPlayerLabelController : MonoBehaviour'
        VB: >-
          Public Class SingleBracketPlayerLabelController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.playerDisplayName
      commentId: F:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.playerDisplayName
      language: CSharp
      name:
        CSharp: playerDisplayName
        VB: playerDisplayName
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.playerDisplayName
        VB: SingleBracketPlayerLabelController.playerDisplayName
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.playerDisplayName
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.playerDisplayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: playerDisplayName
        path: ''
        startLine: 7778
      syntax:
        content:
          CSharp: public TMP_Text playerDisplayName
          VB: Public playerDisplayName As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.shinseiIcon
      commentId: F:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.shinseiIcon
      language: CSharp
      name:
        CSharp: shinseiIcon
        VB: shinseiIcon
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.shinseiIcon
        VB: SingleBracketPlayerLabelController.shinseiIcon
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.shinseiIcon
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.shinseiIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: shinseiIcon
        path: ''
        startLine: 7781
      syntax:
        content:
          CSharp: public Image shinseiIcon
          VB: Public shinseiIcon As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.vsImage
      commentId: F:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.vsImage
      language: CSharp
      name:
        CSharp: vsImage
        VB: vsImage
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.vsImage
        VB: SingleBracketPlayerLabelController.vsImage
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.vsImage
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.vsImage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: vsImage
        path: ''
        startLine: 7782
      syntax:
        content:
          CSharp: public Image vsImage
          VB: Public vsImage As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.labelFrameReference
      commentId: F:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.labelFrameReference
      language: CSharp
      name:
        CSharp: labelFrameReference
        VB: labelFrameReference
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.labelFrameReference
        VB: SingleBracketPlayerLabelController.labelFrameReference
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.labelFrameReference
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.labelFrameReference
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: labelFrameReference
        path: ''
        startLine: 7785
      syntax:
        content:
          CSharp: public Image labelFrameReference
          VB: Public labelFrameReference As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.labelFrameWhite
      commentId: F:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.labelFrameWhite
      language: CSharp
      name:
        CSharp: labelFrameWhite
        VB: labelFrameWhite
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.labelFrameWhite
        VB: SingleBracketPlayerLabelController.labelFrameWhite
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.labelFrameWhite
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.labelFrameWhite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: labelFrameWhite
        path: ''
        startLine: 7786
      syntax:
        content:
          CSharp: public Sprite labelFrameWhite
          VB: Public labelFrameWhite As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineGlowin
      commentId: F:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineGlowin
      language: CSharp
      name:
        CSharp: bracketLineGlowin
        VB: bracketLineGlowin
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.bracketLineGlowin
        VB: SingleBracketPlayerLabelController.bracketLineGlowin
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineGlowin
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineGlowin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: bracketLineGlowin
        path: ''
        startLine: 7789
      syntax:
        content:
          CSharp: public Sprite bracketLineGlowin
          VB: Public bracketLineGlowin As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineBack
      commentId: F:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineBack
      language: CSharp
      name:
        CSharp: bracketLineBack
        VB: bracketLineBack
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.bracketLineBack
        VB: SingleBracketPlayerLabelController.bracketLineBack
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineBack
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineBack
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: bracketLineBack
        path: ''
        startLine: 7790
      syntax:
        content:
          CSharp: public Image bracketLineBack
          VB: Public bracketLineBack As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineFront
      commentId: F:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineFront
      language: CSharp
      name:
        CSharp: bracketLineFront
        VB: bracketLineFront
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.bracketLineFront
        VB: SingleBracketPlayerLabelController.bracketLineFront
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineFront
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineFront
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: bracketLineFront
        path: ''
        startLine: 7791
      syntax:
        content:
          CSharp: public Image bracketLineFront
          VB: Public bracketLineFront As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineUp
      commentId: F:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineUp
      language: CSharp
      name:
        CSharp: bracketLineUp
        VB: bracketLineUp
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.bracketLineUp
        VB: SingleBracketPlayerLabelController.bracketLineUp
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineUp
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineUp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: bracketLineUp
        path: ''
        startLine: 7792
      syntax:
        content:
          CSharp: public Image bracketLineUp
          VB: Public bracketLineUp As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineDown
      commentId: F:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineDown
      language: CSharp
      name:
        CSharp: bracketLineDown
        VB: bracketLineDown
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.bracketLineDown
        VB: SingleBracketPlayerLabelController.bracketLineDown
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineDown
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.bracketLineDown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: bracketLineDown
        path: ''
        startLine: 7793
      syntax:
        content:
          CSharp: public Image bracketLineDown
          VB: Public bracketLineDown As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel(System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)
      commentId: M:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel(System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: InitPlayerLabel(Boolean, Boolean, Boolean, String, Int32, Int32, Boolean, Boolean)
        VB: InitPlayerLabel(Boolean, Boolean, Boolean, String, Int32, Int32, Boolean, Boolean)
      nameWithType:
        CSharp: SingleBracketPlayerLabelController.InitPlayerLabel(Boolean, Boolean, Boolean, String, Int32, Int32, Boolean, Boolean)
        VB: SingleBracketPlayerLabelController.InitPlayerLabel(Boolean, Boolean, Boolean, String, Int32, Int32, Boolean, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel(System.Boolean, System.Boolean, System.Boolean, System.String, System.Int32, System.Int32, System.Boolean, System.Boolean)
        VB: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel(System.Boolean, System.Boolean, System.Boolean, System.String, System.Int32, System.Int32, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: InitPlayerLabel
        path: ''
        startLine: 7796
      syntax:
        content:
          CSharp: public void InitPlayerLabel(bool isInitBracket, bool isWinnerBracket, bool isOddNumber, string playerName, int currentStage, int totalStages, bool isWinnerOfPreviousStage, bool isAnExistingStage)
          VB: Public Sub InitPlayerLabel(isInitBracket As Boolean, isWinnerBracket As Boolean, isOddNumber As Boolean, playerName As String, currentStage As Integer, totalStages As Integer, isWinnerOfPreviousStage As Boolean, isAnExistingStage As Boolean)
        parameters:
        - id: isInitBracket
          type: System.Boolean
        - id: isWinnerBracket
          type: System.Boolean
        - id: isOddNumber
          type: System.Boolean
        - id: playerName
          type: System.String
        - id: currentStage
          type: System.Int32
        - id: totalStages
          type: System.Int32
        - id: isWinnerOfPreviousStage
          type: System.Boolean
        - id: isAnExistingStage
          type: System.Boolean
      overload: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController
    language: CSharp
    name:
      CSharp: TournamentBracketsShowController
      VB: TournamentBracketsShowController
    nameWithType:
      CSharp: TournamentBracketsShowController
      VB: TournamentBracketsShowController
    qualifiedName:
      CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController
      VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.TournamentBehavior
    source:
      id: TournamentBracketsShowController
      path: ''
      startLine: 7879
    syntax:
      content:
        CSharp: 'public class TournamentBracketsShowController : MonoBehaviour'
        VB: >-
          Public Class TournamentBracketsShowController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketsContentParent
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketsContentParent
      language: CSharp
      name:
        CSharp: bracketsContentParent
        VB: bracketsContentParent
      nameWithType:
        CSharp: TournamentBracketsShowController.bracketsContentParent
        VB: TournamentBracketsShowController.bracketsContentParent
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketsContentParent
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketsContentParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: bracketsContentParent
        path: ''
        startLine: 7881
      syntax:
        content:
          CSharp: public Transform bracketsContentParent
          VB: Public bracketsContentParent As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketColumnPrefab
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketColumnPrefab
      language: CSharp
      name:
        CSharp: bracketColumnPrefab
        VB: bracketColumnPrefab
      nameWithType:
        CSharp: TournamentBracketsShowController.bracketColumnPrefab
        VB: TournamentBracketsShowController.bracketColumnPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketColumnPrefab
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketColumnPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: bracketColumnPrefab
        path: ''
        startLine: 7882
      syntax:
        content:
          CSharp: public GameObject bracketColumnPrefab
          VB: Public bracketColumnPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketLabelPrefab
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketLabelPrefab
      language: CSharp
      name:
        CSharp: bracketLabelPrefab
        VB: bracketLabelPrefab
      nameWithType:
        CSharp: TournamentBracketsShowController.bracketLabelPrefab
        VB: TournamentBracketsShowController.bracketLabelPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketLabelPrefab
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.bracketLabelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: bracketLabelPrefab
        path: ''
        startLine: 7883
      syntax:
        content:
          CSharp: public SingleBracketPlayerLabelController bracketLabelPrefab
          VB: Public bracketLabelPrefab As SingleBracketPlayerLabelController
        return:
          type: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.testBracket
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.testBracket
      language: CSharp
      name:
        CSharp: testBracket
        VB: testBracket
      nameWithType:
        CSharp: TournamentBracketsShowController.testBracket
        VB: TournamentBracketsShowController.testBracket
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.testBracket
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.testBracket
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: testBracket
        path: ''
        startLine: 7884
      syntax:
        content:
          CSharp: public string testBracket
          VB: Public testBracket As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets(System.Int32)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets(System.Int32)
      language: CSharp
      name:
        CSharp: GetTotalNumberOfStagesAndBrackets(Int32)
        VB: GetTotalNumberOfStagesAndBrackets(Int32)
      nameWithType:
        CSharp: TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets(Int32)
        VB: TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets(System.Int32)
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: GetTotalNumberOfStagesAndBrackets
        path: ''
        startLine: 7886
      syntax:
        content:
          CSharp: public (int, int) GetTotalNumberOfStagesAndBrackets(int maxPlayers)
          VB: Public Function GetTotalNumberOfStagesAndBrackets(maxPlayers As Integer) As(Integer, Integer)(Of Integer , Integer)
        parameters:
        - id: maxPlayers
          type: System.Int32
        return:
          type: System.ValueTuple{System.Int32,System.Int32}
      overload: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: TournamentBracketsShowController.OnEnable()
        VB: TournamentBracketsShowController.OnEnable()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable()
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: OnEnable
        path: ''
        startLine: 7900
      syntax:
        content:
          CSharp: public void OnEnable()
          VB: Public Sub OnEnable
      overload: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament
      language: CSharp
      name:
        CSharp: ShowTestTournament()
        VB: ShowTestTournament()
      nameWithType:
        CSharp: TournamentBracketsShowController.ShowTestTournament()
        VB: TournamentBracketsShowController.ShowTestTournament()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament()
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: ShowTestTournament
        path: ''
        startLine: 7905
      syntax:
        content:
          CSharp: public void ShowTestTournament()
          VB: Public Sub ShowTestTournament
      overload: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket
      language: CSharp
      name:
        CSharp: InitBracket()
        VB: InitBracket()
      nameWithType:
        CSharp: TournamentBracketsShowController.InitBracket()
        VB: TournamentBracketsShowController.InitBracket()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket()
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: InitBracket
        path: ''
        startLine: 7912
      syntax:
        content:
          CSharp: public void InitBracket()
          VB: Public Sub InitBracket
      overload: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage(System.Collections.Generic.Dictionary{System.String,StageBracketData},System.Int32)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage(System.Collections.Generic.Dictionary{System.String,StageBracketData},System.Int32)
      language: CSharp
      name:
        CSharp: GetWinnersOfThisStage(Dictionary<String, StageBracketData>, Int32)
        VB: GetWinnersOfThisStage(Dictionary(Of String, StageBracketData), Int32)
      nameWithType:
        CSharp: TournamentBracketsShowController.GetWinnersOfThisStage(Dictionary<String, StageBracketData>, Int32)
        VB: TournamentBracketsShowController.GetWinnersOfThisStage(Dictionary(Of String, StageBracketData), Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage(System.Collections.Generic.Dictionary<System.String, StageBracketData>, System.Int32)
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage(System.Collections.Generic.Dictionary(Of System.String, StageBracketData), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: GetWinnersOfThisStage
        path: ''
        startLine: 7945
      syntax:
        content:
          CSharp: public List<string> GetWinnersOfThisStage(Dictionary<string, StageBracketData> stagesData, int currentStageIndex)
          VB: Public Function GetWinnersOfThisStage(stagesData As Dictionary(Of String, StageBracketData), currentStageIndex As Integer) As List(Of String)
        parameters:
        - id: stagesData
          type: System.Collections.Generic.Dictionary{System.String,StageBracketData}
        - id: currentStageIndex
          type: System.Int32
        return:
          type: System.Collections.Generic.List{System.String}
      overload: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets(System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,StageBracketData},System.Boolean@)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets(System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,StageBracketData},System.Boolean@)
      language: CSharp
      name:
        CSharp: SetCurrentBrackets(Int32, Int32, Dictionary<String, StageBracketData>, ref Boolean)
        VB: SetCurrentBrackets(Int32, Int32, Dictionary(Of String, StageBracketData), ByRef Boolean)
      nameWithType:
        CSharp: TournamentBracketsShowController.SetCurrentBrackets(Int32, Int32, Dictionary<String, StageBracketData>, ref Boolean)
        VB: TournamentBracketsShowController.SetCurrentBrackets(Int32, Int32, Dictionary(Of String, StageBracketData), ByRef Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets(System.Int32, System.Int32, System.Collections.Generic.Dictionary<System.String, StageBracketData>, ref System.Boolean)
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets(System.Int32, System.Int32, System.Collections.Generic.Dictionary(Of System.String, StageBracketData), ByRef System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: SetCurrentBrackets
        path: ''
        startLine: 7960
      syntax:
        content:
          CSharp: public (int, int) SetCurrentBrackets(int maxPlayers, int totalStages, Dictionary<string, StageBracketData> stagesData, ref bool isInitBracket)
          VB: Public Function SetCurrentBrackets(maxPlayers As Integer, totalStages As Integer, stagesData As Dictionary(Of String, StageBracketData), ByRef isInitBracket As Boolean) As(Integer, Integer)(Of Integer , Integer)
        parameters:
        - id: maxPlayers
          type: System.Int32
        - id: totalStages
          type: System.Int32
        - id: stagesData
          type: System.Collections.Generic.Dictionary{System.String,StageBracketData}
        - id: isInitBracket
          type: System.Boolean
        return:
          type: System.ValueTuple{System.Int32,System.Int32}
      overload: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets(System.Int32,System.Int32,System.Int32,System.Boolean@,System.Int32@)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets(System.Int32,System.Int32,System.Int32,System.Boolean@,System.Int32@)
      language: CSharp
      name:
        CSharp: FillFutureBrackets(Int32, Int32, Int32, ref Boolean, ref Int32)
        VB: FillFutureBrackets(Int32, Int32, Int32, ByRef Boolean, ByRef Int32)
      nameWithType:
        CSharp: TournamentBracketsShowController.FillFutureBrackets(Int32, Int32, Int32, ref Boolean, ref Int32)
        VB: TournamentBracketsShowController.FillFutureBrackets(Int32, Int32, Int32, ByRef Boolean, ByRef Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets(System.Int32, System.Int32, System.Int32, ref System.Boolean, ref System.Int32)
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets(System.Int32, System.Int32, System.Int32, ByRef System.Boolean, ByRef System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: FillFutureBrackets
        path: ''
        startLine: 7989
      syntax:
        content:
          CSharp: public void FillFutureBrackets(int maxPlayers, int totalStages, int currentStage, ref bool isInitBracket, ref int counterBrackets)
          VB: Public Sub FillFutureBrackets(maxPlayers As Integer, totalStages As Integer, currentStage As Integer, ByRef isInitBracket As Boolean, ByRef counterBrackets As Integer)
        parameters:
        - id: maxPlayers
          type: System.Int32
        - id: totalStages
          type: System.Int32
        - id: currentStage
          type: System.Int32
        - id: isInitBracket
          type: System.Boolean
        - id: counterBrackets
          type: System.Int32
      overload: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets(VerticalLayoutGroup,System.Int32)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets(VerticalLayoutGroup,System.Int32)
      language: CSharp
      name:
        CSharp: SetSpacingBetweenBrackets(VerticalLayoutGroup, Int32)
        VB: SetSpacingBetweenBrackets(VerticalLayoutGroup, Int32)
      nameWithType:
        CSharp: TournamentBracketsShowController.SetSpacingBetweenBrackets(VerticalLayoutGroup, Int32)
        VB: TournamentBracketsShowController.SetSpacingBetweenBrackets(VerticalLayoutGroup, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets(VerticalLayoutGroup, System.Int32)
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets(VerticalLayoutGroup, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: SetSpacingBetweenBrackets
        path: ''
        startLine: 8006
      syntax:
        content:
          CSharp: public void SetSpacingBetweenBrackets(VerticalLayoutGroup currentColumnBracket, int currentStage)
          VB: Public Sub SetSpacingBetweenBrackets(currentColumnBracket As VerticalLayoutGroup, currentStage As Integer)
        parameters:
        - id: currentColumnBracket
          type: Global.VerticalLayoutGroup
        - id: currentStage
          type: System.Int32
      overload: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket(System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket(System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: FillFinalBracket(Int32, Boolean, Int32, Int32, Int32)
        VB: FillFinalBracket(Int32, Boolean, Int32, Int32, Int32)
      nameWithType:
        CSharp: TournamentBracketsShowController.FillFinalBracket(Int32, Boolean, Int32, Int32, Int32)
        VB: TournamentBracketsShowController.FillFinalBracket(Int32, Boolean, Int32, Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket(System.Int32, System.Boolean, System.Int32, System.Int32, System.Int32)
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket(System.Int32, System.Boolean, System.Int32, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: FillFinalBracket
        path: ''
        startLine: 8015
      syntax:
        content:
          CSharp: public void FillFinalBracket(int maxPlayers, bool isInitBracket, int counterBrackets, int currentStage, int totalStages)
          VB: Public Sub FillFinalBracket(maxPlayers As Integer, isInitBracket As Boolean, counterBrackets As Integer, currentStage As Integer, totalStages As Integer)
        parameters:
        - id: maxPlayers
          type: System.Int32
        - id: isInitBracket
          type: System.Boolean
        - id: counterBrackets
          type: System.Int32
        - id: currentStage
          type: System.Int32
        - id: totalStages
          type: System.Int32
      overload: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel(System.String,System.Boolean,System.Boolean,System.Int32,GameObject,System.Int32,System.Int32,System.Int32,System.Boolean,System.Collections.Generic.List{System.String})
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel(System.String,System.Boolean,System.Boolean,System.Int32,GameObject,System.Int32,System.Int32,System.Int32,System.Boolean,System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: CreateBracketLabel(String, Boolean, Boolean, Int32, GameObject, Int32, Int32, Int32, Boolean, List<String>)
        VB: CreateBracketLabel(String, Boolean, Boolean, Int32, GameObject, Int32, Int32, Int32, Boolean, List(Of String))
      nameWithType:
        CSharp: TournamentBracketsShowController.CreateBracketLabel(String, Boolean, Boolean, Int32, GameObject, Int32, Int32, Int32, Boolean, List<String>)
        VB: TournamentBracketsShowController.CreateBracketLabel(String, Boolean, Boolean, Int32, GameObject, Int32, Int32, Int32, Boolean, List(Of String))
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel(System.String, System.Boolean, System.Boolean, System.Int32, GameObject, System.Int32, System.Int32, System.Int32, System.Boolean, System.Collections.Generic.List<System.String>)
        VB: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel(System.String, System.Boolean, System.Boolean, System.Int32, GameObject, System.Int32, System.Int32, System.Int32, System.Boolean, System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: CreateBracketLabel
        path: ''
        startLine: 8024
      syntax:
        content:
          CSharp: public void CreateBracketLabel(string _PID, bool _isOddNumber, bool _isInitBracket, int _maxPlayers, GameObject _currentColumnBracket, int _counterBrackets, int _currentStage, int maxStage, bool _isAnExistingStage = false, List<string> winnersOfCurrentStage = null)
          VB: Public Sub CreateBracketLabel(_PID As String, _isOddNumber As Boolean, _isInitBracket As Boolean, _maxPlayers As Integer, _currentColumnBracket As GameObject, _counterBrackets As Integer, _currentStage As Integer, maxStage As Integer, _isAnExistingStage As Boolean = False, winnersOfCurrentStage As List(Of String) = Nothing)
        parameters:
        - id: _PID
          type: System.String
        - id: _isOddNumber
          type: System.Boolean
        - id: _isInitBracket
          type: System.Boolean
        - id: _maxPlayers
          type: System.Int32
        - id: _currentColumnBracket
          type: Global.GameObject
        - id: _counterBrackets
          type: System.Int32
        - id: _currentStage
          type: System.Int32
        - id: maxStage
          type: System.Int32
        - id: _isAnExistingStage
          type: System.Boolean
        - id: winnersOfCurrentStage
          type: System.Collections.Generic.List{System.String}
      overload: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentReadyController
    language: CSharp
    name:
      CSharp: TournamentReadyController
      VB: TournamentReadyController
    nameWithType:
      CSharp: TournamentReadyController
      VB: TournamentReadyController
    qualifiedName:
      CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController
      VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.TournamentBehavior
    source:
      id: TournamentReadyController
      path: ''
      startLine: 8250
    syntax:
      content:
        CSharp: 'public class TournamentReadyController : MonoBehaviour'
        VB: >-
          Public Class TournamentReadyController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.readyButton
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentReadyController.readyButton
      language: CSharp
      name:
        CSharp: readyButton
        VB: readyButton
      nameWithType:
        CSharp: TournamentReadyController.readyButton
        VB: TournamentReadyController.readyButton
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.readyButton
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.readyButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: readyButton
        path: ''
        startLine: 8258
      syntax:
        content:
          CSharp: public Button readyButton
          VB: Public readyButton As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.labelTimer
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentReadyController.labelTimer
      language: CSharp
      name:
        CSharp: labelTimer
        VB: labelTimer
      nameWithType:
        CSharp: TournamentReadyController.labelTimer
        VB: TournamentReadyController.labelTimer
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.labelTimer
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.labelTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: labelTimer
        path: ''
        startLine: 8259
      syntax:
        content:
          CSharp: public TMP_Text labelTimer
          VB: Public labelTimer As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.timerText
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentReadyController.timerText
      language: CSharp
      name:
        CSharp: timerText
        VB: timerText
      nameWithType:
        CSharp: TournamentReadyController.timerText
        VB: TournamentReadyController.timerText
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.timerText
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.timerText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: timerText
        path: ''
        startLine: 8260
      syntax:
        content:
          CSharp: public TMP_Text timerText
          VB: Public timerText As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.currentStageTime
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentReadyController.currentStageTime
      language: CSharp
      name:
        CSharp: currentStageTime
        VB: currentStageTime
      nameWithType:
        CSharp: TournamentReadyController.currentStageTime
        VB: TournamentReadyController.currentStageTime
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.currentStageTime
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.currentStageTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: currentStageTime
        path: ''
        startLine: 8261
      syntax:
        content:
          CSharp: public DateTime currentStageTime
          VB: Public currentStageTime As DateTime
        return:
          type: Global.DateTime
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.timerLeft
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentReadyController.timerLeft
      language: CSharp
      name:
        CSharp: timerLeft
        VB: timerLeft
      nameWithType:
        CSharp: TournamentReadyController.timerLeft
        VB: TournamentReadyController.timerLeft
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.timerLeft
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.timerLeft
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: timerLeft
        path: ''
        startLine: 8263
      syntax:
        content:
          CSharp: public float timerLeft
          VB: Public timerLeft As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.currentCountdownDate
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentReadyController.currentCountdownDate
      language: CSharp
      name:
        CSharp: currentCountdownDate
        VB: currentCountdownDate
      nameWithType:
        CSharp: TournamentReadyController.currentCountdownDate
        VB: TournamentReadyController.currentCountdownDate
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.currentCountdownDate
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.currentCountdownDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: currentCountdownDate
        path: ''
        startLine: 8264
      syntax:
        content:
          CSharp: public DateTime? currentCountdownDate
          VB: Public currentCountdownDate As DateTime?
        return:
          type: System.Nullable{DateTime}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.hasCreatedMatch
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentReadyController.hasCreatedMatch
      language: CSharp
      name:
        CSharp: hasCreatedMatch
        VB: hasCreatedMatch
      nameWithType:
        CSharp: TournamentReadyController.hasCreatedMatch
        VB: TournamentReadyController.hasCreatedMatch
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.hasCreatedMatch
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.hasCreatedMatch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: hasCreatedMatch
        path: ''
        startLine: 8265
      syntax:
        content:
          CSharp: public bool hasCreatedMatch
          VB: Public hasCreatedMatch As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter
      language: CSharp
      name:
        CSharp: Enter()
        VB: Enter()
      nameWithType:
        CSharp: TournamentReadyController.Enter()
        VB: TournamentReadyController.Enter()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter()
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: Enter
        path: ''
        startLine: 8280
      syntax:
        content:
          CSharp: public void Enter()
          VB: Public Sub Enter
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament(DateTime)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament(DateTime)
      language: CSharp
      name:
        CSharp: ShowTimerInitTournament(DateTime)
        VB: ShowTimerInitTournament(DateTime)
      nameWithType:
        CSharp: TournamentReadyController.ShowTimerInitTournament(DateTime)
        VB: TournamentReadyController.ShowTimerInitTournament(DateTime)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament(DateTime)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament(DateTime)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: ShowTimerInitTournament
        path: ''
        startLine: 8285
      syntax:
        content:
          CSharp: public void ShowTimerInitTournament(DateTime initTimeTournament)
          VB: Public Sub ShowTimerInitTournament(initTimeTournament As DateTime)
        parameters:
        - id: initTimeTournament
          type: Global.DateTime
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton(System.Single)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton(System.Single)
      language: CSharp
      name:
        CSharp: StartReadyButton(Single)
        VB: StartReadyButton(Single)
      nameWithType:
        CSharp: TournamentReadyController.StartReadyButton(Single)
        VB: TournamentReadyController.StartReadyButton(Single)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton(System.Single)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: StartReadyButton
        path: ''
        startLine: 8345
      syntax:
        content:
          CSharp: public void StartReadyButton(float _timerLeft = -1F)
          VB: Public Sub StartReadyButton(_timerLeft As Single = -1F)
        parameters:
        - id: _timerLeft
          type: System.Single
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady(System.Boolean)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady(System.Boolean)
      language: CSharp
      name:
        CSharp: MarkAsReady(Boolean)
        VB: MarkAsReady(Boolean)
      nameWithType:
        CSharp: TournamentReadyController.MarkAsReady(Boolean)
        VB: TournamentReadyController.MarkAsReady(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady(System.Boolean)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: MarkAsReady
        path: ''
        startLine: 8381
      syntax:
        content:
          CSharp: public void MarkAsReady(bool isMarkingReady = true)
          VB: Public Sub MarkAsReady(isMarkingReady As Boolean = True)
        parameters:
        - id: isMarkingReady
          type: System.Boolean
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault(BracketsData,SacredTailsPSDto{BracketsData})
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault(BracketsData,SacredTailsPSDto{BracketsData})
      language: CSharp
      name:
        CSharp: CheckIfWinByDefault(BracketsData, SacredTailsPSDto<BracketsData>)
        VB: CheckIfWinByDefault(BracketsData, SacredTailsPSDto(Of BracketsData))
      nameWithType:
        CSharp: TournamentReadyController.CheckIfWinByDefault(BracketsData, SacredTailsPSDto<BracketsData>)
        VB: TournamentReadyController.CheckIfWinByDefault(BracketsData, SacredTailsPSDto(Of BracketsData))
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault(BracketsData, SacredTailsPSDto<BracketsData>)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault(BracketsData, SacredTailsPSDto(Of BracketsData))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: CheckIfWinByDefault
        path: ''
        startLine: 8443
      syntax:
        content:
          CSharp: public bool CheckIfWinByDefault(BracketsData bracketsData, SacredTailsPSDto<BracketsData> response)
          VB: Public Function CheckIfWinByDefault(bracketsData As BracketsData, response As SacredTailsPSDto(Of BracketsData)) As Boolean
        parameters:
        - id: bracketsData
          type: Global.BracketsData
        - id: response
          type: Global.SacredTailsPSDto{BracketsData}
        return:
          type: System.Boolean
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch(System.String)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch(System.String)
      language: CSharp
      name:
        CSharp: ShowPendingTimeAfterMatch(String)
        VB: ShowPendingTimeAfterMatch(String)
      nameWithType:
        CSharp: TournamentReadyController.ShowPendingTimeAfterMatch(String)
        VB: TournamentReadyController.ShowPendingTimeAfterMatch(String)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch(System.String)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: ShowPendingTimeAfterMatch
        path: ''
        startLine: 8473
      syntax:
        content:
          CSharp: public void ShowPendingTimeAfterMatch(string nextStageTime = null)
          VB: Public Sub ShowPendingTimeAfterMatch(nextStageTime As String = Nothing)
        parameters:
        - id: nextStageTime
          type: System.String
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage(System.String)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage(System.String)
      language: CSharp
      name:
        CSharp: GetTimerLeftForNextStage(String)
        VB: GetTimerLeftForNextStage(String)
      nameWithType:
        CSharp: TournamentReadyController.GetTimerLeftForNextStage(String)
        VB: TournamentReadyController.GetTimerLeftForNextStage(String)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage(System.String)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: GetTimerLeftForNextStage
        path: ''
        startLine: 8493
      summary: "\nSet current timer to time left for next round\n"
      example: []
      syntax:
        content:
          CSharp: public void GetTimerLeftForNextStage(string nextStageTime)
          VB: Public Sub GetTimerLeftForNextStage(nextStageTime As String)
        parameters:
        - id: nextStageTime
          type: System.String
          description: ''
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: TournamentReadyController.OnEnable()
        VB: TournamentReadyController.OnEnable()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable()
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: OnEnable
        path: ''
        startLine: 8523
      syntax:
        content:
          CSharp: public void OnEnable()
          VB: Public Sub OnEnable
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: TournamentReadyController.OnDisable()
        VB: TournamentReadyController.OnDisable()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable()
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: OnDisable
        path: ''
        startLine: 8528
      syntax:
        content:
          CSharp: public void OnDisable()
          VB: Public Sub OnDisable
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch(BracketsData)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch(BracketsData)
      language: CSharp
      name:
        CSharp: CreateMatch(BracketsData)
        VB: CreateMatch(BracketsData)
      nameWithType:
        CSharp: TournamentReadyController.CreateMatch(BracketsData)
        VB: TournamentReadyController.CreateMatch(BracketsData)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch(BracketsData)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch(BracketsData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: CreateMatch
        path: ''
        startLine: 8533
      syntax:
        content:
          CSharp: public void CreateMatch(BracketsData _bracketsData)
          VB: Public Sub CreateMatch(_bracketsData As BracketsData)
        parameters:
        - id: _bracketsData
          type: Global.BracketsData
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament(System.String,Action)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament(System.String,Action)
      language: CSharp
      name:
        CSharp: ExitTournament(String, Action)
        VB: ExitTournament(String, Action)
      nameWithType:
        CSharp: TournamentReadyController.ExitTournament(String, Action)
        VB: TournamentReadyController.ExitTournament(String, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament(System.String, Action)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament(System.String, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: ExitTournament
        path: ''
        startLine: 8548
      syntax:
        content:
          CSharp: public void ExitTournament(string message = null, Action finishCallback = null)
          VB: Public Sub ExitTournament(message As String = Nothing, finishCallback As Action = Nothing)
        parameters:
        - id: message
          type: System.String
        - id: finishCallback
          type: Global.Action
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton(System.Boolean)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton(System.Boolean)
      language: CSharp
      name:
        CSharp: EnableReadyButton(Boolean)
        VB: EnableReadyButton(Boolean)
      nameWithType:
        CSharp: TournamentReadyController.EnableReadyButton(Boolean)
        VB: TournamentReadyController.EnableReadyButton(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton(System.Boolean)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: EnableReadyButton
        path: ''
        startLine: 8578
      syntax:
        content:
          CSharp: public void EnableReadyButton(bool isReadyEnable)
          VB: Public Sub EnableReadyButton(isReadyEnable As Boolean)
        parameters:
        - id: isReadyEnable
          type: System.Boolean
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer(System.Boolean,Action)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer(System.Boolean,Action)
      language: CSharp
      name:
        CSharp: ShowTimer(Boolean, Action)
        VB: ShowTimer(Boolean, Action)
      nameWithType:
        CSharp: TournamentReadyController.ShowTimer(Boolean, Action)
        VB: TournamentReadyController.ShowTimer(Boolean, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer(System.Boolean, Action)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer(System.Boolean, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: ShowTimer
        path: ''
        startLine: 8583
      syntax:
        content:
          CSharp: public void ShowTimer(bool showHour, Action onEndTimer)
          VB: Public Sub ShowTimer(showHour As Boolean, onEndTimer As Action)
        parameters:
        - id: showHour
          type: System.Boolean
        - id: onEndTimer
          type: Global.Action
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine(System.Boolean,Action)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine(System.Boolean,Action)
      language: CSharp
      name:
        CSharp: ShowTimerCoroutine(Boolean, Action)
        VB: ShowTimerCoroutine(Boolean, Action)
      nameWithType:
        CSharp: TournamentReadyController.ShowTimerCoroutine(Boolean, Action)
        VB: TournamentReadyController.ShowTimerCoroutine(Boolean, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine(System.Boolean, Action)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine(System.Boolean, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: ShowTimerCoroutine
        path: ''
        startLine: 8591
      syntax:
        content:
          CSharp: public IEnumerator ShowTimerCoroutine(bool showHour, Action onEndTimer)
          VB: Public Function ShowTimerCoroutine(showHour As Boolean, onEndTimer As Action) As IEnumerator
        parameters:
        - id: showHour
          type: System.Boolean
        - id: onEndTimer
          type: Global.Action
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer(System.Single,System.Boolean)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer(System.Single,System.Boolean)
      language: CSharp
      name:
        CSharp: ShowTimer(Single, Boolean)
        VB: ShowTimer(Single, Boolean)
      nameWithType:
        CSharp: TournamentReadyController.ShowTimer(Single, Boolean)
        VB: TournamentReadyController.ShowTimer(Single, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer(System.Single, System.Boolean)
        VB: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer(System.Single, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: ShowTimer
        path: ''
        startLine: 8617
      syntax:
        content:
          CSharp: public void ShowTimer(float timerLeft, bool showHour)
          VB: Public Sub ShowTimer(timerLeft As Single, showHour As Boolean)
        parameters:
        - id: timerLeft
          type: System.Single
        - id: showHour
          type: System.Boolean
      overload: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.TournamentBehavior.SearchAndShow
    commentId: T:Timba.SacredTails.TournamentBehavior.SearchAndShow
    language: CSharp
    name:
      CSharp: SearchAndShow
      VB: SearchAndShow
    nameWithType:
      CSharp: SearchAndShow
      VB: SearchAndShow
    qualifiedName:
      CSharp: Timba.SacredTails.TournamentBehavior.SearchAndShow
      VB: Timba.SacredTails.TournamentBehavior.SearchAndShow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.TournamentBehavior
    source:
      id: SearchAndShow
      path: ''
      startLine: 8645
    summary: "\nShow all active tournaments registered in the game\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SearchAndShow : MonoBehaviour'
        VB: >-
          Public Class SearchAndShow

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.TournamentBehavior.SearchAndShow.tournamentSlots
      commentId: F:Timba.SacredTails.TournamentBehavior.SearchAndShow.tournamentSlots
      language: CSharp
      name:
        CSharp: tournamentSlots
        VB: tournamentSlots
      nameWithType:
        CSharp: SearchAndShow.tournamentSlots
        VB: SearchAndShow.tournamentSlots
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SearchAndShow.tournamentSlots
        VB: Timba.SacredTails.TournamentBehavior.SearchAndShow.tournamentSlots
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: tournamentSlots
        path: ''
        startLine: 8647
      syntax:
        content:
          CSharp: public List<TournamentSlot> tournamentSlots
          VB: Public tournamentSlots As List(Of TournamentSlot)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.TournamentBehavior.TournamentSlot}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments
      commentId: M:Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments
      language: CSharp
      name:
        CSharp: SearchAndShowTournaments()
        VB: SearchAndShowTournaments()
      nameWithType:
        CSharp: SearchAndShow.SearchAndShowTournaments()
        VB: SearchAndShow.SearchAndShowTournaments()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments()
        VB: Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: SearchAndShowTournaments
        path: ''
        startLine: 8677
      syntax:
        content:
          CSharp: public void SearchAndShowTournaments()
          VB: Public Sub SearchAndShowTournaments
      overload: Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.TournamentBehavior.TournamentEntry
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentEntry
    language: CSharp
    name:
      CSharp: TournamentEntry
      VB: TournamentEntry
    nameWithType:
      CSharp: TournamentEntry
      VB: TournamentEntry
    qualifiedName:
      CSharp: Timba.SacredTails.TournamentBehavior.TournamentEntry
      VB: Timba.SacredTails.TournamentBehavior.TournamentEntry
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.TournamentBehavior
    source:
      id: TournamentEntry
      path: ''
      startLine: 8738
    syntax:
      content:
        CSharp: public class TournamentEntry
        VB: Public Class TournamentEntry
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.TournamentBehavior.TournamentEntry.tournamentId
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentEntry.tournamentId
      language: CSharp
      name:
        CSharp: tournamentId
        VB: tournamentId
      nameWithType:
        CSharp: TournamentEntry.tournamentId
        VB: TournamentEntry.tournamentId
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentEntry.tournamentId
        VB: Timba.SacredTails.TournamentBehavior.TournamentEntry.tournamentId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: tournamentId
        path: ''
        startLine: 8740
      syntax:
        content:
          CSharp: public string tournamentId
          VB: Public tournamentId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentEntry.tournamentName
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentEntry.tournamentName
      language: CSharp
      name:
        CSharp: tournamentName
        VB: tournamentName
      nameWithType:
        CSharp: TournamentEntry.tournamentName
        VB: TournamentEntry.tournamentName
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentEntry.tournamentName
        VB: Timba.SacredTails.TournamentBehavior.TournamentEntry.tournamentName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: tournamentName
        path: ''
        startLine: 8741
      syntax:
        content:
          CSharp: public string tournamentName
          VB: Public tournamentName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentEntry.initTimeStage_1
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentEntry.initTimeStage_1
      language: CSharp
      name:
        CSharp: initTimeStage_1
        VB: initTimeStage_1
      nameWithType:
        CSharp: TournamentEntry.initTimeStage_1
        VB: TournamentEntry.initTimeStage_1
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentEntry.initTimeStage_1
        VB: Timba.SacredTails.TournamentBehavior.TournamentEntry.initTimeStage_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: initTimeStage_1
        path: ''
        startLine: 8742
      syntax:
        content:
          CSharp: public string initTimeStage_1
          VB: Public initTimeStage_1 As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentEntry.maxPlayer
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentEntry.maxPlayer
      language: CSharp
      name:
        CSharp: maxPlayer
        VB: maxPlayer
      nameWithType:
        CSharp: TournamentEntry.maxPlayer
        VB: TournamentEntry.maxPlayer
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentEntry.maxPlayer
        VB: Timba.SacredTails.TournamentBehavior.TournamentEntry.maxPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: maxPlayer
        path: ''
        startLine: 8743
      syntax:
        content:
          CSharp: public string maxPlayer
          VB: Public maxPlayer As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.TournamentBehavior.TournamentSlot
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentSlot
    language: CSharp
    name:
      CSharp: TournamentSlot
      VB: TournamentSlot
    nameWithType:
      CSharp: TournamentSlot
      VB: TournamentSlot
    qualifiedName:
      CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot
      VB: Timba.SacredTails.TournamentBehavior.TournamentSlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.TournamentBehavior
    source:
      id: TournamentSlot
      path: ''
      startLine: 8766
    summary: "\nUI Element of clickable button for join to specific tournament\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TournamentSlot : MonoBehaviour'
        VB: >-
          Public Class TournamentSlot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    implements:
    - Global.IPointerClickHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.tournamentTitle
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.tournamentTitle
      language: CSharp
      name:
        CSharp: tournamentTitle
        VB: tournamentTitle
      nameWithType:
        CSharp: TournamentSlot.tournamentTitle
        VB: TournamentSlot.tournamentTitle
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.tournamentTitle
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.tournamentTitle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: tournamentTitle
        path: ''
        startLine: 8768
      syntax:
        content:
          CSharp: public TextMeshProUGUI tournamentTitle
          VB: Public tournamentTitle As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.maxPlayers
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.maxPlayers
      language: CSharp
      name:
        CSharp: maxPlayers
        VB: maxPlayers
      nameWithType:
        CSharp: TournamentSlot.maxPlayers
        VB: TournamentSlot.maxPlayers
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.maxPlayers
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.maxPlayers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: maxPlayers
        path: ''
        startLine: 8768
      syntax:
        content:
          CSharp: public TextMeshProUGUI maxPlayers
          VB: Public maxPlayers As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.initTime
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.initTime
      language: CSharp
      name:
        CSharp: initTime
        VB: initTime
      nameWithType:
        CSharp: TournamentSlot.initTime
        VB: TournamentSlot.initTime
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.initTime
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.initTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: initTime
        path: ''
        startLine: 8768
      syntax:
        content:
          CSharp: public TextMeshProUGUI initTime
          VB: Public initTime As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.hour
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.hour
      language: CSharp
      name:
        CSharp: hour
        VB: hour
      nameWithType:
        CSharp: TournamentSlot.hour
        VB: TournamentSlot.hour
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.hour
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.hour
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: hour
        path: ''
        startLine: 8768
      syntax:
        content:
          CSharp: public TextMeshProUGUI hour
          VB: Public hour As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.dayName
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.dayName
      language: CSharp
      name:
        CSharp: dayName
        VB: dayName
      nameWithType:
        CSharp: TournamentSlot.dayName
        VB: TournamentSlot.dayName
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.dayName
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.dayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: dayName
        path: ''
        startLine: 8768
      syntax:
        content:
          CSharp: public TextMeshProUGUI dayName
          VB: Public dayName As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.register
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.register
      language: CSharp
      name:
        CSharp: register
        VB: register
      nameWithType:
        CSharp: TournamentSlot.register
        VB: TournamentSlot.register
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.register
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.register
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: register
        path: ''
        startLine: 8768
      syntax:
        content:
          CSharp: public TextMeshProUGUI register
          VB: Public register As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.joinBtn
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.joinBtn
      language: CSharp
      name:
        CSharp: joinBtn
        VB: joinBtn
      nameWithType:
        CSharp: TournamentSlot.joinBtn
        VB: TournamentSlot.joinBtn
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.joinBtn
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.joinBtn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: joinBtn
        path: ''
        startLine: 8769
      syntax:
        content:
          CSharp: public Button joinBtn
          VB: Public joinBtn As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnClick
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.OnClick
      language: CSharp
      name:
        CSharp: OnClick
        VB: OnClick
      nameWithType:
        CSharp: TournamentSlot.OnClick
        VB: TournamentSlot.OnClick
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnClick
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnClick
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: OnClick
        path: ''
        startLine: 8772
      syntax:
        content:
          CSharp: public Action<TournamentSlot, string> OnClick
          VB: Public OnClick As Action(Of TournamentSlot, String)
        return:
          type: Global.Action{Timba.SacredTails.TournamentBehavior.TournamentSlot,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry(Timba.SacredTails.TournamentBehavior.TournamentEntry)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry(Timba.SacredTails.TournamentBehavior.TournamentEntry)
      language: CSharp
      name:
        CSharp: DrawEntry(TournamentEntry)
        VB: DrawEntry(TournamentEntry)
      nameWithType:
        CSharp: TournamentSlot.DrawEntry(TournamentEntry)
        VB: TournamentSlot.DrawEntry(TournamentEntry)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry(Timba.SacredTails.TournamentBehavior.TournamentEntry)
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry(Timba.SacredTails.TournamentBehavior.TournamentEntry)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: DrawEntry
        path: ''
        startLine: 8780
      syntax:
        content:
          CSharp: public void DrawEntry(TournamentEntry tournamentEntry)
          VB: Public Sub DrawEntry(tournamentEntry As TournamentEntry)
        parameters:
        - id: tournamentEntry
          type: Timba.SacredTails.TournamentBehavior.TournamentEntry
      overload: Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected
      language: CSharp
      name:
        CSharp: ShowSelected()
        VB: ShowSelected()
      nameWithType:
        CSharp: TournamentSlot.ShowSelected()
        VB: TournamentSlot.ShowSelected()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected()
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: ShowSelected
        path: ''
        startLine: 8814
      syntax:
        content:
          CSharp: public void ShowSelected()
          VB: Public Sub ShowSelected
      overload: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected
      language: CSharp
      name:
        CSharp: ShowUnselected()
        VB: ShowUnselected()
      nameWithType:
        CSharp: TournamentSlot.ShowUnselected()
        VB: TournamentSlot.ShowUnselected()
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected()
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: ShowUnselected
        path: ''
        startLine: 8824
      syntax:
        content:
          CSharp: public void ShowUnselected()
          VB: Public Sub ShowUnselected
      overload: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament(System.String,DateTime,System.String)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament(System.String,DateTime,System.String)
      language: CSharp
      name:
        CSharp: JoinTournament(String, DateTime, String)
        VB: JoinTournament(String, DateTime, String)
      nameWithType:
        CSharp: TournamentSlot.JoinTournament(String, DateTime, String)
        VB: TournamentSlot.JoinTournament(String, DateTime, String)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament(System.String, DateTime, System.String)
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament(System.String, DateTime, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: JoinTournament
        path: ''
        startLine: 8834
      syntax:
        content:
          CSharp: public void JoinTournament(string tournamentKey, DateTime initTimeTournament, string tournamentName)
          VB: Public Sub JoinTournament(tournamentKey As String, initTimeTournament As DateTime, tournamentName As String)
        parameters:
        - id: tournamentKey
          type: System.String
        - id: initTimeTournament
          type: Global.DateTime
        - id: tournamentName
          type: System.String
      overload: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick(PointerEventData)
      commentId: M:Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerClick(PointerEventData)
        VB: OnPointerClick(PointerEventData)
      nameWithType:
        CSharp: TournamentSlot.OnPointerClick(PointerEventData)
        VB: TournamentSlot.OnPointerClick(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick(PointerEventData)
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: OnPointerClick
        path: ''
        startLine: 8865
      syntax:
        content:
          CSharp: public void OnPointerClick(PointerEventData eventData)
          VB: Public Sub OnPointerClick(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto
    language: CSharp
    name:
      CSharp: TournamentSlot.JoinTournamentDto
      VB: TournamentSlot.JoinTournamentDto
    nameWithType:
      CSharp: TournamentSlot.JoinTournamentDto
      VB: TournamentSlot.JoinTournamentDto
    qualifiedName:
      CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto
      VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.TournamentBehavior
    source:
      id: JoinTournamentDto
      path: ''
      startLine: 8870
    syntax:
      content:
        CSharp: public class JoinTournamentDto
        VB: Public Class JoinTournamentDto
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto.displayName
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto.displayName
      language: CSharp
      name:
        CSharp: displayName
        VB: displayName
      nameWithType:
        CSharp: TournamentSlot.JoinTournamentDto.displayName
        VB: TournamentSlot.JoinTournamentDto.displayName
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto.displayName
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto.displayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: displayName
        path: ''
        startLine: 8872
      syntax:
        content:
          CSharp: public string displayName
          VB: Public displayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto.tournamentPlayerDataDto
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto.tournamentPlayerDataDto
      language: CSharp
      name:
        CSharp: tournamentPlayerDataDto
        VB: tournamentPlayerDataDto
      nameWithType:
        CSharp: TournamentSlot.JoinTournamentDto.tournamentPlayerDataDto
        VB: TournamentSlot.JoinTournamentDto.tournamentPlayerDataDto
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto.tournamentPlayerDataDto
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto.tournamentPlayerDataDto
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: tournamentPlayerDataDto
        path: ''
        startLine: 8873
      syntax:
        content:
          CSharp: public TournamentSlot.TournamentPlayerDataDto tournamentPlayerDataDto
          VB: Public tournamentPlayerDataDto As TournamentSlot.TournamentPlayerDataDto
        return:
          type: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto
    language: CSharp
    name:
      CSharp: TournamentSlot.TournamentPlayerDataDto
      VB: TournamentSlot.TournamentPlayerDataDto
    nameWithType:
      CSharp: TournamentSlot.TournamentPlayerDataDto
      VB: TournamentSlot.TournamentPlayerDataDto
    qualifiedName:
      CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto
      VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.TournamentBehavior
    source:
      id: TournamentPlayerDataDto
      path: ''
      startLine: 8875
    syntax:
      content:
        CSharp: public class TournamentPlayerDataDto
        VB: Public Class TournamentPlayerDataDto
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.displayName
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.displayName
      language: CSharp
      name:
        CSharp: displayName
        VB: displayName
      nameWithType:
        CSharp: TournamentSlot.TournamentPlayerDataDto.displayName
        VB: TournamentSlot.TournamentPlayerDataDto.displayName
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.displayName
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.displayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: displayName
        path: ''
        startLine: 8877
      syntax:
        content:
          CSharp: public string displayName
          VB: Public displayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.stage
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.stage
      language: CSharp
      name:
        CSharp: stage
        VB: stage
      nameWithType:
        CSharp: TournamentSlot.TournamentPlayerDataDto.stage
        VB: TournamentSlot.TournamentPlayerDataDto.stage
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.stage
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.stage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: stage
        path: ''
        startLine: 8878
      syntax:
        content:
          CSharp: public int stage
          VB: Public stage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.currentBracket
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.currentBracket
      language: CSharp
      name:
        CSharp: currentBracket
        VB: currentBracket
      nameWithType:
        CSharp: TournamentSlot.TournamentPlayerDataDto.currentBracket
        VB: TournamentSlot.TournamentPlayerDataDto.currentBracket
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.currentBracket
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.currentBracket
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: currentBracket
        path: ''
        startLine: 8878
      syntax:
        content:
          CSharp: public int currentBracket
          VB: Public currentBracket As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.lastPetitionTimeStamp
      commentId: F:Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.lastPetitionTimeStamp
      language: CSharp
      name:
        CSharp: lastPetitionTimeStamp
        VB: lastPetitionTimeStamp
      nameWithType:
        CSharp: TournamentSlot.TournamentPlayerDataDto.lastPetitionTimeStamp
        VB: TournamentSlot.TournamentPlayerDataDto.lastPetitionTimeStamp
      qualifiedName:
        CSharp: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.lastPetitionTimeStamp
        VB: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto.lastPetitionTimeStamp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.TournamentBehavior
      source:
        id: lastPetitionTimeStamp
        path: ''
        startLine: 8879
      syntax:
        content:
          CSharp: public string lastPetitionTimeStamp
          VB: Public lastPetitionTimeStamp As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.UiHelpers
  commentId: N:Timba.SacredTails.UiHelpers
  language: CSharp
  name:
    CSharp: Timba.SacredTails.UiHelpers
    VB: Timba.SacredTails.UiHelpers
  nameWithType:
    CSharp: Timba.SacredTails.UiHelpers
    VB: Timba.SacredTails.UiHelpers
  qualifiedName:
    CSharp: Timba.SacredTails.UiHelpers
    VB: Timba.SacredTails.UiHelpers
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.UiHelpers.CalendarController
    commentId: T:Timba.SacredTails.UiHelpers.CalendarController
    language: CSharp
    name:
      CSharp: CalendarController
      VB: CalendarController
    nameWithType:
      CSharp: CalendarController
      VB: CalendarController
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.CalendarController
      VB: Timba.SacredTails.UiHelpers.CalendarController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: CalendarController
      path: ''
      startLine: 8074
    syntax:
      content:
        CSharp: 'public class CalendarController : MonoBehaviour'
        VB: >-
          Public Class CalendarController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.CalendarController.target
      commentId: F:Timba.SacredTails.UiHelpers.CalendarController.target
      language: CSharp
      name:
        CSharp: target
        VB: target
      nameWithType:
        CSharp: CalendarController.target
        VB: CalendarController.target
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.target
        VB: Timba.SacredTails.UiHelpers.CalendarController.target
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: target
        path: ''
        startLine: 8076
      syntax:
        content:
          CSharp: public TMP_Text target
          VB: Public target As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController._yearNumText
      commentId: F:Timba.SacredTails.UiHelpers.CalendarController._yearNumText
      language: CSharp
      name:
        CSharp: _yearNumText
        VB: _yearNumText
      nameWithType:
        CSharp: CalendarController._yearNumText
        VB: CalendarController._yearNumText
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController._yearNumText
        VB: Timba.SacredTails.UiHelpers.CalendarController._yearNumText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: _yearNumText
        path: ''
        startLine: 8077
      syntax:
        content:
          CSharp: public TMP_Text _yearNumText
          VB: Public _yearNumText As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController._monthNumText
      commentId: F:Timba.SacredTails.UiHelpers.CalendarController._monthNumText
      language: CSharp
      name:
        CSharp: _monthNumText
        VB: _monthNumText
      nameWithType:
        CSharp: CalendarController._monthNumText
        VB: CalendarController._monthNumText
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController._monthNumText
        VB: Timba.SacredTails.UiHelpers.CalendarController._monthNumText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: _monthNumText
        path: ''
        startLine: 8078
      syntax:
        content:
          CSharp: public TMP_Text _monthNumText
          VB: Public _monthNumText As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.itemPrefab
      commentId: F:Timba.SacredTails.UiHelpers.CalendarController.itemPrefab
      language: CSharp
      name:
        CSharp: itemPrefab
        VB: itemPrefab
      nameWithType:
        CSharp: CalendarController.itemPrefab
        VB: CalendarController.itemPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.itemPrefab
        VB: Timba.SacredTails.UiHelpers.CalendarController.itemPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: itemPrefab
        path: ''
        startLine: 8080
      syntax:
        content:
          CSharp: public CalendarDateItem itemPrefab
          VB: Public itemPrefab As CalendarDateItem
        return:
          type: Timba.SacredTails.UiHelpers.CalendarDateItem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.dateItems
      commentId: F:Timba.SacredTails.UiHelpers.CalendarController.dateItems
      language: CSharp
      name:
        CSharp: dateItems
        VB: dateItems
      nameWithType:
        CSharp: CalendarController.dateItems
        VB: CalendarController.dateItems
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.dateItems
        VB: Timba.SacredTails.UiHelpers.CalendarController.dateItems
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: dateItems
        path: ''
        startLine: 8082
      syntax:
        content:
          CSharp: public List<CalendarDateItem> dateItems
          VB: Public dateItems As List(Of CalendarDateItem)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.UiHelpers.CalendarDateItem}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.onSelectDate
      commentId: F:Timba.SacredTails.UiHelpers.CalendarController.onSelectDate
      language: CSharp
      name:
        CSharp: onSelectDate
        VB: onSelectDate
      nameWithType:
        CSharp: CalendarController.onSelectDate
        VB: CalendarController.onSelectDate
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.onSelectDate
        VB: Timba.SacredTails.UiHelpers.CalendarController.onSelectDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: onSelectDate
        path: ''
        startLine: 8086
      syntax:
        content:
          CSharp: public UnityEvent onSelectDate
          VB: Public onSelectDate As UnityEvent
        return:
          type: Global.UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.YearPrev
      commentId: M:Timba.SacredTails.UiHelpers.CalendarController.YearPrev
      language: CSharp
      name:
        CSharp: YearPrev()
        VB: YearPrev()
      nameWithType:
        CSharp: CalendarController.YearPrev()
        VB: CalendarController.YearPrev()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.YearPrev()
        VB: Timba.SacredTails.UiHelpers.CalendarController.YearPrev()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: YearPrev
        path: ''
        startLine: 8154
      syntax:
        content:
          CSharp: public void YearPrev()
          VB: Public Sub YearPrev
      overload: Timba.SacredTails.UiHelpers.CalendarController.YearPrev*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.YearNext
      commentId: M:Timba.SacredTails.UiHelpers.CalendarController.YearNext
      language: CSharp
      name:
        CSharp: YearNext()
        VB: YearNext()
      nameWithType:
        CSharp: CalendarController.YearNext()
        VB: CalendarController.YearNext()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.YearNext()
        VB: Timba.SacredTails.UiHelpers.CalendarController.YearNext()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: YearNext
        path: ''
        startLine: 8160
      syntax:
        content:
          CSharp: public void YearNext()
          VB: Public Sub YearNext
      overload: Timba.SacredTails.UiHelpers.CalendarController.YearNext*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.MonthPrev
      commentId: M:Timba.SacredTails.UiHelpers.CalendarController.MonthPrev
      language: CSharp
      name:
        CSharp: MonthPrev()
        VB: MonthPrev()
      nameWithType:
        CSharp: CalendarController.MonthPrev()
        VB: CalendarController.MonthPrev()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.MonthPrev()
        VB: Timba.SacredTails.UiHelpers.CalendarController.MonthPrev()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: MonthPrev
        path: ''
        startLine: 8166
      syntax:
        content:
          CSharp: public void MonthPrev()
          VB: Public Sub MonthPrev
      overload: Timba.SacredTails.UiHelpers.CalendarController.MonthPrev*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.MonthNext
      commentId: M:Timba.SacredTails.UiHelpers.CalendarController.MonthNext
      language: CSharp
      name:
        CSharp: MonthNext()
        VB: MonthNext()
      nameWithType:
        CSharp: CalendarController.MonthNext()
        VB: CalendarController.MonthNext()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.MonthNext()
        VB: Timba.SacredTails.UiHelpers.CalendarController.MonthNext()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: MonthNext
        path: ''
        startLine: 8172
      syntax:
        content:
          CSharp: public void MonthNext()
          VB: Public Sub MonthNext
      overload: Timba.SacredTails.UiHelpers.CalendarController.MonthNext*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick(System.String)
      commentId: M:Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick(System.String)
      language: CSharp
      name:
        CSharp: OnDateItemClick(String)
        VB: OnDateItemClick(String)
      nameWithType:
        CSharp: CalendarController.OnDateItemClick(String)
        VB: CalendarController.OnDateItemClick(String)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick(System.String)
        VB: Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: OnDateItemClick
        path: ''
        startLine: 8178
      syntax:
        content:
          CSharp: public void OnDateItemClick(string day)
          VB: Public Sub OnDateItemClick(day As String)
        parameters:
        - id: day
          type: System.String
      overload: Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.hour
      commentId: F:Timba.SacredTails.UiHelpers.CalendarController.hour
      language: CSharp
      name:
        CSharp: hour
        VB: hour
      nameWithType:
        CSharp: CalendarController.hour
        VB: CalendarController.hour
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.hour
        VB: Timba.SacredTails.UiHelpers.CalendarController.hour
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: hour
        path: ''
        startLine: 8186
      syntax:
        content:
          CSharp: public TMP_Dropdown hour
          VB: Public hour As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.minute
      commentId: F:Timba.SacredTails.UiHelpers.CalendarController.minute
      language: CSharp
      name:
        CSharp: minute
        VB: minute
      nameWithType:
        CSharp: CalendarController.minute
        VB: CalendarController.minute
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.minute
        VB: Timba.SacredTails.UiHelpers.CalendarController.minute
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: minute
        path: ''
        startLine: 8187
      syntax:
        content:
          CSharp: public TMP_Dropdown minute
          VB: Public minute As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.second
      commentId: F:Timba.SacredTails.UiHelpers.CalendarController.second
      language: CSharp
      name:
        CSharp: second
        VB: second
      nameWithType:
        CSharp: CalendarController.second
        VB: CalendarController.second
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.second
        VB: Timba.SacredTails.UiHelpers.CalendarController.second
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: second
        path: ''
        startLine: 8188
      syntax:
        content:
          CSharp: public TMP_Dropdown second
          VB: Public second As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate
      commentId: M:Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate
      language: CSharp
      name:
        CSharp: CalendarHasDate()
        VB: CalendarHasDate()
      nameWithType:
        CSharp: CalendarController.CalendarHasDate()
        VB: CalendarController.CalendarHasDate()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate()
        VB: Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: CalendarHasDate
        path: ''
        startLine: 8190
      syntax:
        content:
          CSharp: public bool CalendarHasDate()
          VB: Public Function CalendarHasDate As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament
      commentId: M:Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament
      language: CSharp
      name:
        CSharp: CreateDateForTournament()
        VB: CreateDateForTournament()
      nameWithType:
        CSharp: CalendarController.CreateDateForTournament()
        VB: CalendarController.CreateDateForTournament()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament()
        VB: Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: CreateDateForTournament
        path: ''
        startLine: 8198
      syntax:
        content:
          CSharp: public string CreateDateForTournament()
          VB: Public Function CreateDateForTournament As String
        return:
          type: System.String
      overload: Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat(System.String)
      commentId: M:Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat(System.String)
      language: CSharp
      name:
        CSharp: ParseDateNumberToCorrectFormat(String)
        VB: ParseDateNumberToCorrectFormat(String)
      nameWithType:
        CSharp: CalendarController.ParseDateNumberToCorrectFormat(String)
        VB: CalendarController.ParseDateNumberToCorrectFormat(String)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat(System.String)
        VB: Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: ParseDateNumberToCorrectFormat
        path: ''
        startLine: 8204
      syntax:
        content:
          CSharp: public string ParseDateNumberToCorrectFormat(string number)
          VB: Public Function ParseDateNumberToCorrectFormat(number As String) As String
        parameters:
        - id: number
          type: System.String
        return:
          type: System.String
      overload: Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.CalendarDateItem
    commentId: T:Timba.SacredTails.UiHelpers.CalendarDateItem
    language: CSharp
    name:
      CSharp: CalendarDateItem
      VB: CalendarDateItem
    nameWithType:
      CSharp: CalendarDateItem
      VB: CalendarDateItem
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.CalendarDateItem
      VB: Timba.SacredTails.UiHelpers.CalendarDateItem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: CalendarDateItem
      path: ''
      startLine: 8222
    syntax:
      content:
        CSharp: 'public class CalendarDateItem : MonoBehaviour'
        VB: >-
          Public Class CalendarDateItem

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.CalendarDateItem.onClickDate
      commentId: F:Timba.SacredTails.UiHelpers.CalendarDateItem.onClickDate
      language: CSharp
      name:
        CSharp: onClickDate
        VB: onClickDate
      nameWithType:
        CSharp: CalendarDateItem.onClickDate
        VB: CalendarDateItem.onClickDate
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarDateItem.onClickDate
        VB: Timba.SacredTails.UiHelpers.CalendarDateItem.onClickDate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: onClickDate
        path: ''
        startLine: 8224
      syntax:
        content:
          CSharp: public Action<string> onClickDate
          VB: Public onClickDate As Action(Of String)
        return:
          type: Global.Action{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarDateItem.textField
      commentId: F:Timba.SacredTails.UiHelpers.CalendarDateItem.textField
      language: CSharp
      name:
        CSharp: textField
        VB: textField
      nameWithType:
        CSharp: CalendarDateItem.textField
        VB: CalendarDateItem.textField
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarDateItem.textField
        VB: Timba.SacredTails.UiHelpers.CalendarDateItem.textField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: textField
        path: ''
        startLine: 8225
      syntax:
        content:
          CSharp: public TMP_Text textField
          VB: Public textField As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick
      commentId: M:Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick
      language: CSharp
      name:
        CSharp: OnDateItemClick()
        VB: OnDateItemClick()
      nameWithType:
        CSharp: CalendarDateItem.OnDateItemClick()
        VB: CalendarDateItem.OnDateItemClick()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick()
        VB: Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: OnDateItemClick
        path: ''
        startLine: 8227
      syntax:
        content:
          CSharp: public void OnDateItemClick()
          VB: Public Sub OnDateItemClick
      overload: Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
    commentId: T:Timba.SacredTails.UiHelpers.WoldPositionateUiElement
    language: CSharp
    name:
      CSharp: WoldPositionateUiElement
      VB: WoldPositionateUiElement
    nameWithType:
      CSharp: WoldPositionateUiElement
      VB: WoldPositionateUiElement
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
      VB: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: WoldPositionateUiElement
      path: ''
      startLine: 28876
    syntax:
      content:
        CSharp: 'public class WoldPositionateUiElement : MonoBehaviour'
        VB: >-
          Public Class WoldPositionateUiElement

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.WoldPositionateUiElement.uiElement
      commentId: F:Timba.SacredTails.UiHelpers.WoldPositionateUiElement.uiElement
      language: CSharp
      name:
        CSharp: uiElement
        VB: uiElement
      nameWithType:
        CSharp: WoldPositionateUiElement.uiElement
        VB: WoldPositionateUiElement.uiElement
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.WoldPositionateUiElement.uiElement
        VB: Timba.SacredTails.UiHelpers.WoldPositionateUiElement.uiElement
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: uiElement
        path: ''
        startLine: 28878
      syntax:
        content:
          CSharp: public GameObject uiElement
          VB: Public uiElement As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler
    commentId: T:Timba.SacredTails.UiHelpers.WoldPositionUIHandler
    language: CSharp
    name:
      CSharp: WoldPositionUIHandler
      VB: WoldPositionUIHandler
    nameWithType:
      CSharp: WoldPositionUIHandler
      VB: WoldPositionUIHandler
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.WoldPositionUIHandler
      VB: Timba.SacredTails.UiHelpers.WoldPositionUIHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: WoldPositionUIHandler
      path: ''
      startLine: 28910
    summary: "\nThis allow you to put UI elements attached to player view\n"
    example: []
    syntax:
      content:
        CSharp: 'public class WoldPositionUIHandler : MonoBehaviour'
        VB: >-
          Public Class WoldPositionUIHandler

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.WorldPositionateUiElements
      commentId: F:Timba.SacredTails.UiHelpers.WoldPositionUIHandler.WorldPositionateUiElements
      language: CSharp
      name:
        CSharp: WorldPositionateUiElements
        VB: WorldPositionateUiElements
      nameWithType:
        CSharp: WoldPositionUIHandler.WorldPositionateUiElements
        VB: WoldPositionUIHandler.WorldPositionateUiElements
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.WorldPositionateUiElements
        VB: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.WorldPositionateUiElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: WorldPositionateUiElements
        path: ''
        startLine: 28912
      syntax:
        content:
          CSharp: public List<WoldPositionateUiElement> WorldPositionateUiElements
          VB: Public WorldPositionateUiElements As List(Of WoldPositionateUiElement)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.UiHelpers.WoldPositionateUiElement}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.instance
      commentId: F:Timba.SacredTails.UiHelpers.WoldPositionUIHandler.instance
      language: CSharp
      name:
        CSharp: instance
        VB: instance
      nameWithType:
        CSharp: WoldPositionUIHandler.instance
        VB: WoldPositionUIHandler.instance
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.instance
        VB: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: instance
        path: ''
        startLine: 28913
      syntax:
        content:
          CSharp: public static WoldPositionUIHandler instance
          VB: Public Shared instance As WoldPositionUIHandler
        return:
          type: Timba.SacredTails.UiHelpers.WoldPositionUIHandler
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement(Timba.SacredTails.UiHelpers.WoldPositionateUiElement)
      commentId: M:Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement(Timba.SacredTails.UiHelpers.WoldPositionateUiElement)
      language: CSharp
      name:
        CSharp: RegisterUiElement(WoldPositionateUiElement)
        VB: RegisterUiElement(WoldPositionateUiElement)
      nameWithType:
        CSharp: WoldPositionUIHandler.RegisterUiElement(WoldPositionateUiElement)
        VB: WoldPositionUIHandler.RegisterUiElement(WoldPositionateUiElement)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement(Timba.SacredTails.UiHelpers.WoldPositionateUiElement)
        VB: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement(Timba.SacredTails.UiHelpers.WoldPositionateUiElement)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: RegisterUiElement
        path: ''
        startLine: 28936
      syntax:
        content:
          CSharp: public void RegisterUiElement(WoldPositionateUiElement target)
          VB: Public Sub RegisterUiElement(target As WoldPositionateUiElement)
        parameters:
        - id: target
          type: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
      overload: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement(Timba.SacredTails.UiHelpers.WoldPositionateUiElement)
      commentId: M:Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement(Timba.SacredTails.UiHelpers.WoldPositionateUiElement)
      language: CSharp
      name:
        CSharp: UnregisterUiElement(WoldPositionateUiElement)
        VB: UnregisterUiElement(WoldPositionateUiElement)
      nameWithType:
        CSharp: WoldPositionUIHandler.UnregisterUiElement(WoldPositionateUiElement)
        VB: WoldPositionUIHandler.UnregisterUiElement(WoldPositionateUiElement)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement(Timba.SacredTails.UiHelpers.WoldPositionateUiElement)
        VB: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement(Timba.SacredTails.UiHelpers.WoldPositionateUiElement)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: UnregisterUiElement
        path: ''
        startLine: 28946
      syntax:
        content:
          CSharp: public void UnregisterUiElement(WoldPositionateUiElement target)
          VB: Public Sub UnregisterUiElement(target As WoldPositionateUiElement)
        parameters:
        - id: target
          type: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
      overload: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.ChangeSelectedWithTab
    commentId: T:Timba.SacredTails.UiHelpers.ChangeSelectedWithTab
    language: CSharp
    name:
      CSharp: ChangeSelectedWithTab
      VB: ChangeSelectedWithTab
    nameWithType:
      CSharp: ChangeSelectedWithTab
      VB: ChangeSelectedWithTab
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.ChangeSelectedWithTab
      VB: Timba.SacredTails.UiHelpers.ChangeSelectedWithTab
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: ChangeSelectedWithTab
      path: ''
      startLine: 33018
    syntax:
      content:
        CSharp: 'public class ChangeSelectedWithTab : MonoBehaviour'
        VB: >-
          Public Class ChangeSelectedWithTab

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Timba.SacredTails.UiHelpers.EntryController
    commentId: T:Timba.SacredTails.UiHelpers.EntryController
    language: CSharp
    name:
      CSharp: EntryController
      VB: EntryController
    nameWithType:
      CSharp: EntryController
      VB: EntryController
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.EntryController
      VB: Timba.SacredTails.UiHelpers.EntryController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: EntryController
      path: ''
      startLine: 33051
    syntax:
      content:
        CSharp: 'public class EntryController : MonoBehaviour'
        VB: >-
          Public Class EntryController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.EntryController.qualificator
      commentId: F:Timba.SacredTails.UiHelpers.EntryController.qualificator
      language: CSharp
      name:
        CSharp: qualificator
        VB: qualificator
      nameWithType:
        CSharp: EntryController.qualificator
        VB: EntryController.qualificator
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.EntryController.qualificator
        VB: Timba.SacredTails.UiHelpers.EntryController.qualificator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: qualificator
        path: ''
        startLine: 33053
      syntax:
        content:
          CSharp: public TMP_Text qualificator
          VB: Public qualificator As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.EntryController.nft_image
      commentId: F:Timba.SacredTails.UiHelpers.EntryController.nft_image
      language: CSharp
      name:
        CSharp: nft_image
        VB: nft_image
      nameWithType:
        CSharp: EntryController.nft_image
        VB: EntryController.nft_image
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.EntryController.nft_image
        VB: Timba.SacredTails.UiHelpers.EntryController.nft_image
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: nft_image
        path: ''
        startLine: 33054
      syntax:
        content:
          CSharp: public Image nft_image
          VB: Public nft_image As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.EntryController.nft_amount
      commentId: F:Timba.SacredTails.UiHelpers.EntryController.nft_amount
      language: CSharp
      name:
        CSharp: nft_amount
        VB: nft_amount
      nameWithType:
        CSharp: EntryController.nft_amount
        VB: EntryController.nft_amount
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.EntryController.nft_amount
        VB: Timba.SacredTails.UiHelpers.EntryController.nft_amount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: nft_amount
        path: ''
        startLine: 33055
      syntax:
        content:
          CSharp: public TMP_Text nft_amount
          VB: Public nft_amount As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.EntryController.sc_image
      commentId: F:Timba.SacredTails.UiHelpers.EntryController.sc_image
      language: CSharp
      name:
        CSharp: sc_image
        VB: sc_image
      nameWithType:
        CSharp: EntryController.sc_image
        VB: EntryController.sc_image
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.EntryController.sc_image
        VB: Timba.SacredTails.UiHelpers.EntryController.sc_image
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: sc_image
        path: ''
        startLine: 33056
      syntax:
        content:
          CSharp: public Image sc_image
          VB: Public sc_image As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.EntryController.sc_amount
      commentId: F:Timba.SacredTails.UiHelpers.EntryController.sc_amount
      language: CSharp
      name:
        CSharp: sc_amount
        VB: sc_amount
      nameWithType:
        CSharp: EntryController.sc_amount
        VB: EntryController.sc_amount
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.EntryController.sc_amount
        VB: Timba.SacredTails.UiHelpers.EntryController.sc_amount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: sc_amount
        path: ''
        startLine: 33057
      syntax:
        content:
          CSharp: public TMP_Text sc_amount
          VB: Public sc_amount As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.EntryController.FillData(RankRewardEntry)
      commentId: M:Timba.SacredTails.UiHelpers.EntryController.FillData(RankRewardEntry)
      language: CSharp
      name:
        CSharp: FillData(RankRewardEntry)
        VB: FillData(RankRewardEntry)
      nameWithType:
        CSharp: EntryController.FillData(RankRewardEntry)
        VB: EntryController.FillData(RankRewardEntry)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.EntryController.FillData(RankRewardEntry)
        VB: Timba.SacredTails.UiHelpers.EntryController.FillData(RankRewardEntry)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: FillData
        path: ''
        startLine: 33059
      syntax:
        content:
          CSharp: public void FillData(RankRewardEntry data)
          VB: Public Sub FillData(data As RankRewardEntry)
        parameters:
        - id: data
          type: Global.RankRewardEntry
      overload: Timba.SacredTails.UiHelpers.EntryController.FillData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.IconContainerSO
    commentId: T:Timba.SacredTails.UiHelpers.IconContainerSO
    language: CSharp
    name:
      CSharp: IconContainerSO
      VB: IconContainerSO
    nameWithType:
      CSharp: IconContainerSO
      VB: IconContainerSO
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.IconContainerSO
      VB: Timba.SacredTails.UiHelpers.IconContainerSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: IconContainerSO
      path: ''
      startLine: 33097
    syntax:
      content:
        CSharp: 'public class IconContainerSO : ScriptableObject'
        VB: >-
          Public Class IconContainerSO

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.IconContainerSO.nullIcon
      commentId: F:Timba.SacredTails.UiHelpers.IconContainerSO.nullIcon
      language: CSharp
      name:
        CSharp: nullIcon
        VB: nullIcon
      nameWithType:
        CSharp: IconContainerSO.nullIcon
        VB: IconContainerSO.nullIcon
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconContainerSO.nullIcon
        VB: Timba.SacredTails.UiHelpers.IconContainerSO.nullIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: nullIcon
        path: ''
        startLine: 33100
      syntax:
        content:
          CSharp: public IconSet nullIcon
          VB: Public nullIcon As IconSet
        return:
          type: Timba.SacredTails.UiHelpers.IconSet
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconContainerSO.IconCollection
      commentId: F:Timba.SacredTails.UiHelpers.IconContainerSO.IconCollection
      language: CSharp
      name:
        CSharp: IconCollection
        VB: IconCollection
      nameWithType:
        CSharp: IconContainerSO.IconCollection
        VB: IconContainerSO.IconCollection
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconContainerSO.IconCollection
        VB: Timba.SacredTails.UiHelpers.IconContainerSO.IconCollection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: IconCollection
        path: ''
        startLine: 33101
      syntax:
        content:
          CSharp: public List<IconSet> IconCollection
          VB: Public IconCollection As List(Of IconSet)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.UiHelpers.IconSet}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon(System.Nullable{CharacterType})
      commentId: M:Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon(System.Nullable{CharacterType})
      language: CSharp
      name:
        CSharp: AssignIcon(Nullable<CharacterType>)
        VB: AssignIcon(Nullable(Of CharacterType))
      nameWithType:
        CSharp: IconContainerSO.AssignIcon(Nullable<CharacterType>)
        VB: IconContainerSO.AssignIcon(Nullable(Of CharacterType))
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon(System.Nullable<CharacterType>)
        VB: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon(System.Nullable(Of CharacterType))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: AssignIcon
        path: ''
        startLine: 33103
      syntax:
        content:
          CSharp: public IconSet AssignIcon(CharacterType? charType)
          VB: Public Function AssignIcon(charType As CharacterType?) As IconSet
        parameters:
        - id: charType
          type: System.Nullable{CharacterType}
        return:
          type: Timba.SacredTails.UiHelpers.IconSet
      overload: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.IconSet
    commentId: T:Timba.SacredTails.UiHelpers.IconSet
    language: CSharp
    name:
      CSharp: IconSet
      VB: IconSet
    nameWithType:
      CSharp: IconSet
      VB: IconSet
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.IconSet
      VB: Timba.SacredTails.UiHelpers.IconSet
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: IconSet
      path: ''
      startLine: 33118
    syntax:
      content:
        CSharp: public class IconSet
        VB: Public Class IconSet
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.IconSet.iconType
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.iconType
      language: CSharp
      name:
        CSharp: iconType
        VB: iconType
      nameWithType:
        CSharp: IconSet.iconType
        VB: IconSet.iconType
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.iconType
        VB: Timba.SacredTails.UiHelpers.IconSet.iconType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: iconType
        path: ''
        startLine: 33121
      syntax:
        content:
          CSharp: public CharacterType iconType
          VB: Public iconType As CharacterType
        return:
          type: Global.CharacterType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconSet.battleIcon
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.battleIcon
      language: CSharp
      name:
        CSharp: battleIcon
        VB: battleIcon
      nameWithType:
        CSharp: IconSet.battleIcon
        VB: IconSet.battleIcon
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.battleIcon
        VB: Timba.SacredTails.UiHelpers.IconSet.battleIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: battleIcon
        path: ''
        startLine: 33122
      syntax:
        content:
          CSharp: public Sprite battleIcon
          VB: Public battleIcon As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconSet.partIcon
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.partIcon
      language: CSharp
      name:
        CSharp: partIcon
        VB: partIcon
      nameWithType:
        CSharp: IconSet.partIcon
        VB: IconSet.partIcon
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.partIcon
        VB: Timba.SacredTails.UiHelpers.IconSet.partIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: partIcon
        path: ''
        startLine: 33123
      syntax:
        content:
          CSharp: public Sprite partIcon
          VB: Public partIcon As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconSet.negativeIcon
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.negativeIcon
      language: CSharp
      name:
        CSharp: negativeIcon
        VB: negativeIcon
      nameWithType:
        CSharp: IconSet.negativeIcon
        VB: IconSet.negativeIcon
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.negativeIcon
        VB: Timba.SacredTails.UiHelpers.IconSet.negativeIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: negativeIcon
        path: ''
        startLine: 33124
      syntax:
        content:
          CSharp: public Sprite negativeIcon
          VB: Public negativeIcon As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconSet.backgroundSprite
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.backgroundSprite
      language: CSharp
      name:
        CSharp: backgroundSprite
        VB: backgroundSprite
      nameWithType:
        CSharp: IconSet.backgroundSprite
        VB: IconSet.backgroundSprite
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.backgroundSprite
        VB: Timba.SacredTails.UiHelpers.IconSet.backgroundSprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: backgroundSprite
        path: ''
        startLine: 33125
      syntax:
        content:
          CSharp: public Sprite backgroundSprite
          VB: Public backgroundSprite As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconSet.TypeColor
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.TypeColor
      language: CSharp
      name:
        CSharp: TypeColor
        VB: TypeColor
      nameWithType:
        CSharp: IconSet.TypeColor
        VB: IconSet.TypeColor
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.TypeColor
        VB: Timba.SacredTails.UiHelpers.IconSet.TypeColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: TypeColor
        path: ''
        startLine: 33126
      syntax:
        content:
          CSharp: public Color TypeColor
          VB: Public TypeColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.IUIHelpable
    commentId: T:Timba.SacredTails.UiHelpers.IUIHelpable
    language: CSharp
    name:
      CSharp: IUIHelpable
      VB: IUIHelpable
    nameWithType:
      CSharp: IUIHelpable
      VB: IUIHelpable
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.IUIHelpable
      VB: Timba.SacredTails.UiHelpers.IUIHelpable
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: IUIHelpable
      path: ''
      startLine: 33139
    syntax:
      content:
        CSharp: public interface IUIHelpable
        VB: >-
          Public Interface IUIHelpable

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
      commentId: M:Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
      language: CSharp
      name:
        CSharp: AssignIcon(Nullable<CharacterType>)
        VB: AssignIcon(Nullable(Of CharacterType))
      nameWithType:
        CSharp: IUIHelpable.AssignIcon(Nullable<CharacterType>)
        VB: IUIHelpable.AssignIcon(Nullable(Of CharacterType))
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable<CharacterType>)
        VB: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable(Of CharacterType))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: AssignIcon
        path: ''
        startLine: 33141
      syntax:
        content:
          CSharp: IconSet AssignIcon(CharacterType? charType)
          VB: Function AssignIcon(charType As CharacterType?) As IconSet
        parameters:
        - id: charType
          type: System.Nullable{CharacterType}
        return:
          type: Timba.SacredTails.UiHelpers.IconSet
      overload: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.SacredTails.UiHelpers.KeepScrollBar
    commentId: T:Timba.SacredTails.UiHelpers.KeepScrollBar
    language: CSharp
    name:
      CSharp: KeepScrollBar
      VB: KeepScrollBar
    nameWithType:
      CSharp: KeepScrollBar
      VB: KeepScrollBar
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.KeepScrollBar
      VB: Timba.SacredTails.UiHelpers.KeepScrollBar
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: KeepScrollBar
      path: ''
      startLine: 33151
    syntax:
      content:
        CSharp: 'public class KeepScrollBar : MonoBehaviour'
        VB: >-
          Public Class KeepScrollBar

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize
      commentId: M:Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize
      language: CSharp
      name:
        CSharp: setFixedHandleSize()
        VB: setFixedHandleSize()
      nameWithType:
        CSharp: KeepScrollBar.setFixedHandleSize()
        VB: KeepScrollBar.setFixedHandleSize()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize()
        VB: Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: setFixedHandleSize
        path: ''
        startLine: 33160
      syntax:
        content:
          CSharp: public void setFixedHandleSize()
          VB: Public Sub setFixedHandleSize
      overload: Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.LeaderboardElement
    commentId: T:Timba.SacredTails.UiHelpers.LeaderboardElement
    language: CSharp
    name:
      CSharp: LeaderboardElement
      VB: LeaderboardElement
    nameWithType:
      CSharp: LeaderboardElement
      VB: LeaderboardElement
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement
      VB: Timba.SacredTails.UiHelpers.LeaderboardElement
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: LeaderboardElement
      path: ''
      startLine: 33174
    syntax:
      content:
        CSharp: 'public class LeaderboardElement : MonoBehaviour'
        VB: >-
          Public Class LeaderboardElement

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.LeaderboardElement.button
      commentId: F:Timba.SacredTails.UiHelpers.LeaderboardElement.button
      language: CSharp
      name:
        CSharp: button
        VB: button
      nameWithType:
        CSharp: LeaderboardElement.button
        VB: LeaderboardElement.button
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement.button
        VB: Timba.SacredTails.UiHelpers.LeaderboardElement.button
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: button
        path: ''
        startLine: 33180
      syntax:
        content:
          CSharp: public Button button
          VB: Public button As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject
      commentId: P:Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject
      language: CSharp
      name:
        CSharp: ElementDataObject
        VB: ElementDataObject
      nameWithType:
        CSharp: LeaderboardElement.ElementDataObject
        VB: LeaderboardElement.ElementDataObject
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject
        VB: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: ElementDataObject
        path: ''
        startLine: 33183
      syntax:
        content:
          CSharp: public LeaderboardElement.ElementData ElementDataObject { get; }
          VB: Public ReadOnly Property ElementDataObject As LeaderboardElement.ElementData
        parameters: []
        return:
          type: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
      overload: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement(Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData)
      commentId: M:Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement(Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData)
      language: CSharp
      name:
        CSharp: DrawElement(LeaderboardElement.ElementData)
        VB: DrawElement(LeaderboardElement.ElementData)
      nameWithType:
        CSharp: LeaderboardElement.DrawElement(LeaderboardElement.ElementData)
        VB: LeaderboardElement.DrawElement(LeaderboardElement.ElementData)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement(Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData)
        VB: Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement(Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: DrawElement
        path: ''
        startLine: 33185
      syntax:
        content:
          CSharp: public void DrawElement(LeaderboardElement.ElementData elementData)
          VB: Public Sub DrawElement(elementData As LeaderboardElement.ElementData)
        parameters:
        - id: elementData
          type: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
      overload: Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition(System.Int32)
      commentId: M:Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition(System.Int32)
      language: CSharp
      name:
        CSharp: ChangePosition(Int32)
        VB: ChangePosition(Int32)
      nameWithType:
        CSharp: LeaderboardElement.ChangePosition(Int32)
        VB: LeaderboardElement.ChangePosition(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition(System.Int32)
        VB: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: ChangePosition
        path: ''
        startLine: 33193
      syntax:
        content:
          CSharp: public void ChangePosition(int value)
          VB: Public Sub ChangePosition(value As Integer)
        parameters:
        - id: value
          type: System.Int32
      overload: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories(System.String)
      commentId: M:Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories(System.String)
      language: CSharp
      name:
        CSharp: ChangeVictories(String)
        VB: ChangeVictories(String)
      nameWithType:
        CSharp: LeaderboardElement.ChangeVictories(String)
        VB: LeaderboardElement.ChangeVictories(String)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories(System.String)
        VB: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: ChangeVictories
        path: ''
        startLine: 33198
      syntax:
        content:
          CSharp: public void ChangeVictories(string value)
          VB: Public Sub ChangeVictories(value As String)
        parameters:
        - id: value
          type: System.String
      overload: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
    commentId: T:Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
    language: CSharp
    name:
      CSharp: LeaderboardElement.ElementData
      VB: LeaderboardElement.ElementData
    nameWithType:
      CSharp: LeaderboardElement.ElementData
      VB: LeaderboardElement.ElementData
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
      VB: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: ElementData
      path: ''
      startLine: 33204
    syntax:
      content:
        CSharp: public class ElementData
        VB: Public Class ElementData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.position
      commentId: F:Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.position
      language: CSharp
      name:
        CSharp: position
        VB: position
      nameWithType:
        CSharp: LeaderboardElement.ElementData.position
        VB: LeaderboardElement.ElementData.position
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.position
        VB: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: position
        path: ''
        startLine: 33206
      syntax:
        content:
          CSharp: public string position
          VB: Public position As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.name
      commentId: F:Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: LeaderboardElement.ElementData.name
        VB: LeaderboardElement.ElementData.name
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.name
        VB: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: name
        path: ''
        startLine: 33207
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.victories
      commentId: F:Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.victories
      language: CSharp
      name:
        CSharp: victories
        VB: victories
      nameWithType:
        CSharp: LeaderboardElement.ElementData.victories
        VB: LeaderboardElement.ElementData.victories
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.victories
        VB: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.victories
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: victories
        path: ''
        startLine: 33208
      syntax:
        content:
          CSharp: public string victories
          VB: Public victories As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.points
      commentId: F:Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.points
      language: CSharp
      name:
        CSharp: points
        VB: points
      nameWithType:
        CSharp: LeaderboardElement.ElementData.points
        VB: LeaderboardElement.ElementData.points
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.points
        VB: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData.points
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: points
        path: ''
        startLine: 33209
      syntax:
        content:
          CSharp: public string points
          VB: Public points As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup
    commentId: T:Timba.SacredTails.UiHelpers.SelectableButtonGroup
    language: CSharp
    name:
      CSharp: SelectableButtonGroup
      VB: SelectableButtonGroup
    nameWithType:
      CSharp: SelectableButtonGroup
      VB: SelectableButtonGroup
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.SelectableButtonGroup
      VB: Timba.SacredTails.UiHelpers.SelectableButtonGroup
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: SelectableButtonGroup
      path: ''
      startLine: 33523
    syntax:
      content:
        CSharp: 'public class SelectableButtonGroup : MonoBehaviour'
        VB: >-
          Public Class SelectableButtonGroup

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton(System.Int32)
      commentId: M:Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton(System.Int32)
      language: CSharp
      name:
        CSharp: SelectButton(Int32)
        VB: SelectButton(Int32)
      nameWithType:
        CSharp: SelectableButtonGroup.SelectButton(Int32)
        VB: SelectableButtonGroup.SelectButton(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton(System.Int32)
        VB: Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: SelectButton
        path: ''
        startLine: 33527
      syntax:
        content:
          CSharp: public void SelectButton(int index)
          VB: Public Sub SelectButton(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList
    commentId: T:Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList
    language: CSharp
    name:
      CSharp: SelectableButtonGroup.ButtonList
      VB: SelectableButtonGroup.ButtonList
    nameWithType:
      CSharp: SelectableButtonGroup.ButtonList
      VB: SelectableButtonGroup.ButtonList
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList
      VB: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: ButtonList
      path: ''
      startLine: 33537
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ButtonList
        VB: >-
          <Serializable>

          Public Class ButtonList
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList.buttonText
      commentId: F:Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList.buttonText
      language: CSharp
      name:
        CSharp: buttonText
        VB: buttonText
      nameWithType:
        CSharp: SelectableButtonGroup.ButtonList.buttonText
        VB: SelectableButtonGroup.ButtonList.buttonText
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList.buttonText
        VB: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList.buttonText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: buttonText
        path: ''
        startLine: 33540
      syntax:
        content:
          CSharp: public TextMeshProUGUI buttonText
          VB: Public buttonText As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList.marker
      commentId: F:Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList.marker
      language: CSharp
      name:
        CSharp: marker
        VB: marker
      nameWithType:
        CSharp: SelectableButtonGroup.ButtonList.marker
        VB: SelectableButtonGroup.ButtonList.marker
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList.marker
        VB: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList.marker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: marker
        path: ''
        startLine: 33541
      syntax:
        content:
          CSharp: public GameObject marker
          VB: Public marker As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.TypeIconAsigner
    commentId: T:Timba.SacredTails.UiHelpers.TypeIconAsigner
    language: CSharp
    name:
      CSharp: TypeIconAsigner
      VB: TypeIconAsigner
    nameWithType:
      CSharp: TypeIconAsigner
      VB: TypeIconAsigner
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.TypeIconAsigner
      VB: Timba.SacredTails.UiHelpers.TypeIconAsigner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: TypeIconAsigner
      path: ''
      startLine: 33552
    syntax:
      content:
        CSharp: 'public class TypeIconAsigner : MonoBehaviour, IUIHelpable'
        VB: >-
          Public Class TypeIconAsigner

              Inherits MonoBehaviour

              Implements IUIHelpable
    inheritance:
    - System.Object
    implements:
    - Timba.SacredTails.UiHelpers.IUIHelpable
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.IconDatabase
      commentId: F:Timba.SacredTails.UiHelpers.TypeIconAsigner.IconDatabase
      language: CSharp
      name:
        CSharp: IconDatabase
        VB: IconDatabase
      nameWithType:
        CSharp: TypeIconAsigner.IconDatabase
        VB: TypeIconAsigner.IconDatabase
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.TypeIconAsigner.IconDatabase
        VB: Timba.SacredTails.UiHelpers.TypeIconAsigner.IconDatabase
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: IconDatabase
        path: ''
        startLine: 33554
      syntax:
        content:
          CSharp: public IconContainerSO IconDatabase
          VB: Public IconDatabase As IconContainerSO
        return:
          type: Timba.SacredTails.UiHelpers.IconContainerSO
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon(System.Nullable{CharacterType})
      commentId: M:Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon(System.Nullable{CharacterType})
      language: CSharp
      name:
        CSharp: AssignIcon(Nullable<CharacterType>)
        VB: AssignIcon(Nullable(Of CharacterType))
      nameWithType:
        CSharp: TypeIconAsigner.AssignIcon(Nullable<CharacterType>)
        VB: TypeIconAsigner.AssignIcon(Nullable(Of CharacterType))
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon(System.Nullable<CharacterType>)
        VB: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon(System.Nullable(Of CharacterType))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: AssignIcon
        path: ''
        startLine: 33556
      syntax:
        content:
          CSharp: public IconSet AssignIcon(CharacterType? charType)
          VB: Public Function AssignIcon(charType As CharacterType?) As IconSet
        parameters:
        - id: charType
          type: System.Nullable{CharacterType}
        return:
          type: Timba.SacredTails.UiHelpers.IconSet
      overload: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon*
      implements:
      - Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady
      commentId: M:Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: TypeIconAsigner.IsReady()
        VB: TypeIconAsigner.IsReady()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady()
        VB: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: IsReady
        path: ''
        startLine: 33561
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.UIGroups
    commentId: T:Timba.SacredTails.UiHelpers.UIGroups
    language: CSharp
    name:
      CSharp: UIGroups
      VB: UIGroups
    nameWithType:
      CSharp: UIGroups
      VB: UIGroups
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.UIGroups
      VB: Timba.SacredTails.UiHelpers.UIGroups
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: UIGroups
      path: ''
      startLine: 33576
    syntax:
      content:
        CSharp: 'public class UIGroups : MonoBehaviour'
        VB: >-
          Public Class UIGroups

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.UIGroups.groups
      commentId: F:Timba.SacredTails.UiHelpers.UIGroups.groups
      language: CSharp
      name:
        CSharp: groups
        VB: groups
      nameWithType:
        CSharp: UIGroups.groups
        VB: UIGroups.groups
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.UIGroups.groups
        VB: Timba.SacredTails.UiHelpers.UIGroups.groups
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: groups
        path: ''
        startLine: 33578
      syntax:
        content:
          CSharp: public List<UIGroups.UiGroup> groups
          VB: Public groups As List(Of UIGroups.UiGroup)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.UiHelpers.UIGroups.UiGroup}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.UIGroups.instance
      commentId: F:Timba.SacredTails.UiHelpers.UIGroups.instance
      language: CSharp
      name:
        CSharp: instance
        VB: instance
      nameWithType:
        CSharp: UIGroups.instance
        VB: UIGroups.instance
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.UIGroups.instance
        VB: Timba.SacredTails.UiHelpers.UIGroups.instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: instance
        path: ''
        startLine: 33579
      syntax:
        content:
          CSharp: public static UIGroups instance
          VB: Public Shared instance As UIGroups
        return:
          type: Timba.SacredTails.UiHelpers.UIGroups
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.UiHelpers.UIGroups.lastActivate
      commentId: F:Timba.SacredTails.UiHelpers.UIGroups.lastActivate
      language: CSharp
      name:
        CSharp: lastActivate
        VB: lastActivate
      nameWithType:
        CSharp: UIGroups.lastActivate
        VB: UIGroups.lastActivate
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.UIGroups.lastActivate
        VB: Timba.SacredTails.UiHelpers.UIGroups.lastActivate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: lastActivate
        path: ''
        startLine: 33580
      syntax:
        content:
          CSharp: public string lastActivate
          VB: Public lastActivate As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup(System.String)
      commentId: M:Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup(System.String)
      language: CSharp
      name:
        CSharp: ShowOnlyThisGroup(String)
        VB: ShowOnlyThisGroup(String)
      nameWithType:
        CSharp: UIGroups.ShowOnlyThisGroup(String)
        VB: UIGroups.ShowOnlyThisGroup(String)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup(System.String)
        VB: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: ShowOnlyThisGroup
        path: ''
        startLine: 33592
      syntax:
        content:
          CSharp: public void ShowOnlyThisGroup(string key)
          VB: Public Sub ShowOnlyThisGroup(key As String)
        parameters:
        - id: key
          type: System.String
      overload: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating(System.String)
      commentId: M:Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating(System.String)
      language: CSharp
      name:
        CSharp: ShowOnlyThisGroupWithDeactivating(String)
        VB: ShowOnlyThisGroupWithDeactivating(String)
      nameWithType:
        CSharp: UIGroups.ShowOnlyThisGroupWithDeactivating(String)
        VB: UIGroups.ShowOnlyThisGroupWithDeactivating(String)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating(System.String)
        VB: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: ShowOnlyThisGroupWithDeactivating
        path: ''
        startLine: 33616
      syntax:
        content:
          CSharp: public void ShowOnlyThisGroupWithDeactivating(string key)
          VB: Public Sub ShowOnlyThisGroupWithDeactivating(key As String)
        parameters:
        - id: key
          type: System.String
      overload: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel(CanvasGroup,System.String)
      commentId: M:Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel(CanvasGroup,System.String)
      language: CSharp
      name:
        CSharp: NotifyDynamicPanel(CanvasGroup, String)
        VB: NotifyDynamicPanel(CanvasGroup, String)
      nameWithType:
        CSharp: UIGroups.NotifyDynamicPanel(CanvasGroup, String)
        VB: UIGroups.NotifyDynamicPanel(CanvasGroup, String)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel(CanvasGroup, System.String)
        VB: Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel(CanvasGroup, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: NotifyDynamicPanel
        path: ''
        startLine: 33642
      syntax:
        content:
          CSharp: public void NotifyDynamicPanel(CanvasGroup targetCanvas, string key)
          VB: Public Sub NotifyDynamicPanel(targetCanvas As CanvasGroup, key As String)
        parameters:
        - id: targetCanvas
          type: Global.CanvasGroup
        - id: key
          type: System.String
      overload: Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
    commentId: T:Timba.SacredTails.UiHelpers.UIGroups.UiGroup
    language: CSharp
    name:
      CSharp: UIGroups.UiGroup
      VB: UIGroups.UiGroup
    nameWithType:
      CSharp: UIGroups.UiGroup
      VB: UIGroups.UiGroup
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
      VB: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: UiGroup
      path: ''
      startLine: 33651
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class UiGroup
        VB: >-
          <Serializable>

          Public Class UiGroup
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.UIGroups.UiGroup.key
      commentId: F:Timba.SacredTails.UiHelpers.UIGroups.UiGroup.key
      language: CSharp
      name:
        CSharp: key
        VB: key
      nameWithType:
        CSharp: UIGroups.UiGroup.key
        VB: UIGroups.UiGroup.key
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.UIGroups.UiGroup.key
        VB: Timba.SacredTails.UiHelpers.UIGroups.UiGroup.key
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: key
        path: ''
        startLine: 33654
      syntax:
        content:
          CSharp: public string key
          VB: Public key As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.UIGroups.UiGroup.canvasOfGroup
      commentId: F:Timba.SacredTails.UiHelpers.UIGroups.UiGroup.canvasOfGroup
      language: CSharp
      name:
        CSharp: canvasOfGroup
        VB: canvasOfGroup
      nameWithType:
        CSharp: UIGroups.UiGroup.canvasOfGroup
        VB: UIGroups.UiGroup.canvasOfGroup
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.UIGroups.UiGroup.canvasOfGroup
        VB: Timba.SacredTails.UiHelpers.UIGroups.UiGroup.canvasOfGroup
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: canvasOfGroup
        path: ''
        startLine: 33655
      syntax:
        content:
          CSharp: public List<CanvasGroup> canvasOfGroup
          VB: Public canvasOfGroup As List(Of CanvasGroup)
        return:
          type: System.Collections.Generic.List{CanvasGroup}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.ScrollButton
    commentId: T:Timba.SacredTails.UiHelpers.ScrollButton
    language: CSharp
    name:
      CSharp: ScrollButton
      VB: ScrollButton
    nameWithType:
      CSharp: ScrollButton
      VB: ScrollButton
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.ScrollButton
      VB: Timba.SacredTails.UiHelpers.ScrollButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: ScrollButton
      path: ''
      startLine: 33892
    syntax:
      content:
        CSharp: 'public class ScrollButton : MonoBehaviour'
        VB: >-
          Public Class ScrollButton

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    implements:
    - Global.IPointerDownHandler
    - Global.IPointerUpHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.ScrollButton.isDown
      commentId: F:Timba.SacredTails.UiHelpers.ScrollButton.isDown
      language: CSharp
      name:
        CSharp: isDown
        VB: isDown
      nameWithType:
        CSharp: ScrollButton.isDown
        VB: ScrollButton.isDown
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.ScrollButton.isDown
        VB: Timba.SacredTails.UiHelpers.ScrollButton.isDown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: isDown
        path: ''
        startLine: 33895
      syntax:
        content:
          CSharp: public bool isDown
          VB: Public isDown As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown(PointerEventData)
      commentId: M:Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerDown(PointerEventData)
        VB: OnPointerDown(PointerEventData)
      nameWithType:
        CSharp: ScrollButton.OnPointerDown(PointerEventData)
        VB: ScrollButton.OnPointerDown(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown(PointerEventData)
        VB: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: OnPointerDown
        path: ''
        startLine: 33897
      syntax:
        content:
          CSharp: public void OnPointerDown(PointerEventData eventData)
          VB: Public Sub OnPointerDown(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp(PointerEventData)
      commentId: M:Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerUp(PointerEventData)
        VB: OnPointerUp(PointerEventData)
      nameWithType:
        CSharp: ScrollButton.OnPointerUp(PointerEventData)
        VB: ScrollButton.OnPointerUp(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp(PointerEventData)
        VB: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: OnPointerUp
        path: ''
        startLine: 33902
      syntax:
        content:
          CSharp: public void OnPointerUp(PointerEventData eventData)
          VB: Public Sub OnPointerUp(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.ScrollViewSystem
    commentId: T:Timba.SacredTails.UiHelpers.ScrollViewSystem
    language: CSharp
    name:
      CSharp: ScrollViewSystem
      VB: ScrollViewSystem
    nameWithType:
      CSharp: ScrollViewSystem
      VB: ScrollViewSystem
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.ScrollViewSystem
      VB: Timba.SacredTails.UiHelpers.ScrollViewSystem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: ScrollViewSystem
      path: ''
      startLine: 33913
    syntax:
      content:
        CSharp: 'public class ScrollViewSystem : MonoBehaviour'
        VB: >-
          Public Class ScrollViewSystem

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.ScrollViewSystem.Start
      commentId: M:Timba.SacredTails.UiHelpers.ScrollViewSystem.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: ScrollViewSystem.Start()
        VB: ScrollViewSystem.Start()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.ScrollViewSystem.Start()
        VB: Timba.SacredTails.UiHelpers.ScrollViewSystem.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: Start
        path: ''
        startLine: 33922
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Timba.SacredTails.UiHelpers.ScrollViewSystem.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll
      commentId: M:Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll
      language: CSharp
      name:
        CSharp: LeftScroll()
        VB: LeftScroll()
      nameWithType:
        CSharp: ScrollViewSystem.LeftScroll()
        VB: ScrollViewSystem.LeftScroll()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll()
        VB: Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: LeftScroll
        path: ''
        startLine: 33934
      syntax:
        content:
          CSharp: public void LeftScroll()
          VB: Public Sub LeftScroll
      overload: Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll
      commentId: M:Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll
      language: CSharp
      name:
        CSharp: RightScroll()
        VB: RightScroll()
      nameWithType:
        CSharp: ScrollViewSystem.RightScroll()
        VB: ScrollViewSystem.RightScroll()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll()
        VB: Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: RightScroll
        path: ''
        startLine: 33940
      syntax:
        content:
          CSharp: public void RightScroll()
          VB: Public Sub RightScroll
      overload: Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper
    commentId: T:Timba.SacredTails.UiHelpers.BackgroundTypeSwapper
    language: CSharp
    name:
      CSharp: BackgroundTypeSwapper
      VB: BackgroundTypeSwapper
    nameWithType:
      CSharp: BackgroundTypeSwapper
      VB: BackgroundTypeSwapper
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper
      VB: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: BackgroundTypeSwapper
      path: ''
      startLine: 34402
    syntax:
      content:
        CSharp: 'public class BackgroundTypeSwapper : MonoBehaviour'
        VB: >-
          Public Class BackgroundTypeSwapper

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType(Image,CharacterType)
      commentId: M:Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType(Image,CharacterType)
      language: CSharp
      name:
        CSharp: CallByShinseiType(Image, CharacterType)
        VB: CallByShinseiType(Image, CharacterType)
      nameWithType:
        CSharp: BackgroundTypeSwapper.CallByShinseiType(Image, CharacterType)
        VB: BackgroundTypeSwapper.CallByShinseiType(Image, CharacterType)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType(Image, CharacterType)
        VB: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType(Image, CharacterType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: CallByShinseiType
        path: ''
        startLine: 34407
      syntax:
        content:
          CSharp: public void CallByShinseiType(Image image, CharacterType shinseiType)
          VB: Public Sub CallByShinseiType(image As Image, shinseiType As CharacterType)
        parameters:
        - id: image
          type: Global.Image
        - id: shinseiType
          type: Global.CharacterType
      overload: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType(Image,System.Int32)
      commentId: M:Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType(Image,System.Int32)
      language: CSharp
      name:
        CSharp: SetImageSpriteByType(Image, Int32)
        VB: SetImageSpriteByType(Image, Int32)
      nameWithType:
        CSharp: BackgroundTypeSwapper.SetImageSpriteByType(Image, Int32)
        VB: BackgroundTypeSwapper.SetImageSpriteByType(Image, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType(Image, System.Int32)
        VB: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType(Image, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: SetImageSpriteByType
        path: ''
        startLine: 34458
      syntax:
        content:
          CSharp: public void SetImageSpriteByType(Image image, int indexSprite)
          VB: Public Sub SetImageSpriteByType(image As Image, indexSprite As Integer)
        parameters:
        - id: image
          type: Global.Image
        - id: indexSprite
          type: System.Int32
      overload: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.PositionCounter
    commentId: T:Timba.SacredTails.UiHelpers.PositionCounter
    language: CSharp
    name:
      CSharp: PositionCounter
      VB: PositionCounter
    nameWithType:
      CSharp: PositionCounter
      VB: PositionCounter
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.PositionCounter
      VB: Timba.SacredTails.UiHelpers.PositionCounter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: PositionCounter
      path: ''
      startLine: 34471
    syntax:
      content:
        CSharp: 'public class PositionCounter : MonoBehaviour'
        VB: >-
          Public Class PositionCounter

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition(System.Int32)
      commentId: M:Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition(System.Int32)
      language: CSharp
      name:
        CSharp: EnablePosition(Int32)
        VB: EnablePosition(Int32)
      nameWithType:
        CSharp: PositionCounter.EnablePosition(Int32)
        VB: PositionCounter.EnablePosition(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition(System.Int32)
        VB: Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: EnablePosition
        path: ''
        startLine: 34475
      syntax:
        content:
          CSharp: public void EnablePosition(int index)
          VB: Public Sub EnablePosition(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen
    commentId: T:Timba.SacredTails.UiHelpers.SeekMouseIntoScreen
    language: CSharp
    name:
      CSharp: SeekMouseIntoScreen
      VB: SeekMouseIntoScreen
    nameWithType:
      CSharp: SeekMouseIntoScreen
      VB: SeekMouseIntoScreen
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen
      VB: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: SeekMouseIntoScreen
      path: ''
      startLine: 34489
    syntax:
      content:
        CSharp: 'public class SeekMouseIntoScreen : MonoBehaviour'
        VB: >-
          Public Class SeekMouseIntoScreen

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.posOffsetX
      commentId: F:Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.posOffsetX
      language: CSharp
      name:
        CSharp: posOffsetX
        VB: posOffsetX
      nameWithType:
        CSharp: SeekMouseIntoScreen.posOffsetX
        VB: SeekMouseIntoScreen.posOffsetX
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.posOffsetX
        VB: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.posOffsetX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: posOffsetX
        path: ''
        startLine: 34491
      syntax:
        content:
          CSharp: public int posOffsetX
          VB: Public posOffsetX As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.posOffsetY
      commentId: F:Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.posOffsetY
      language: CSharp
      name:
        CSharp: posOffsetY
        VB: posOffsetY
      nameWithType:
        CSharp: SeekMouseIntoScreen.posOffsetY
        VB: SeekMouseIntoScreen.posOffsetY
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.posOffsetY
        VB: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.posOffsetY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: posOffsetY
        path: ''
        startLine: 34491
      syntax:
        content:
          CSharp: public int posOffsetY
          VB: Public posOffsetY As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.offsetX
      commentId: F:Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.offsetX
      language: CSharp
      name:
        CSharp: offsetX
        VB: offsetX
      nameWithType:
        CSharp: SeekMouseIntoScreen.offsetX
        VB: SeekMouseIntoScreen.offsetX
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.offsetX
        VB: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.offsetX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: offsetX
        path: ''
        startLine: 34492
      syntax:
        content:
          CSharp: public int offsetX
          VB: Public offsetX As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.offsetY
      commentId: F:Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.offsetY
      language: CSharp
      name:
        CSharp: offsetY
        VB: offsetY
      nameWithType:
        CSharp: SeekMouseIntoScreen.offsetY
        VB: SeekMouseIntoScreen.offsetY
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.offsetY
        VB: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.offsetY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: offsetY
        path: ''
        startLine: 34492
      syntax:
        content:
          CSharp: public int offsetY
          VB: Public offsetY As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable(System.Boolean)
      commentId: M:Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable(System.Boolean)
      language: CSharp
      name:
        CSharp: Enable(Boolean)
        VB: Enable(Boolean)
      nameWithType:
        CSharp: SeekMouseIntoScreen.Enable(Boolean)
        VB: SeekMouseIntoScreen.Enable(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable(System.Boolean)
        VB: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: Enable
        path: ''
        startLine: 34494
      syntax:
        content:
          CSharp: public void Enable(bool state)
          VB: Public Sub Enable(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.CameraModule
  commentId: N:Timba.SacredTails.CameraModule
  language: CSharp
  name:
    CSharp: Timba.SacredTails.CameraModule
    VB: Timba.SacredTails.CameraModule
  nameWithType:
    CSharp: Timba.SacredTails.CameraModule
    VB: Timba.SacredTails.CameraModule
  qualifiedName:
    CSharp: Timba.SacredTails.CameraModule
    VB: Timba.SacredTails.CameraModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.CameraModule.CameraTriggerChange
    commentId: T:Timba.SacredTails.CameraModule.CameraTriggerChange
    language: CSharp
    name:
      CSharp: CameraTriggerChange
      VB: CameraTriggerChange
    nameWithType:
      CSharp: CameraTriggerChange
      VB: CameraTriggerChange
    qualifiedName:
      CSharp: Timba.SacredTails.CameraModule.CameraTriggerChange
      VB: Timba.SacredTails.CameraModule.CameraTriggerChange
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CameraModule
    source:
      id: CameraTriggerChange
      path: ''
      startLine: 17777
    syntax:
      content:
        CSharp: 'public class CameraTriggerChange : MonoBehaviour'
        VB: >-
          Public Class CameraTriggerChange

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CameraModule.CameraTriggerChange.lobbyCamera
      commentId: F:Timba.SacredTails.CameraModule.CameraTriggerChange.lobbyCamera
      language: CSharp
      name:
        CSharp: lobbyCamera
        VB: lobbyCamera
      nameWithType:
        CSharp: CameraTriggerChange.lobbyCamera
        VB: CameraTriggerChange.lobbyCamera
      qualifiedName:
        CSharp: Timba.SacredTails.CameraModule.CameraTriggerChange.lobbyCamera
        VB: Timba.SacredTails.CameraModule.CameraTriggerChange.lobbyCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CameraModule
      source:
        id: lobbyCamera
        path: ''
        startLine: 17780
      syntax:
        content:
          CSharp: public CinemachineVirtualCamera lobbyCamera
          VB: Public lobbyCamera As CinemachineVirtualCamera
        return:
          type: Global.CinemachineVirtualCamera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CameraModule.CameraTriggerChange.treeCamera
      commentId: F:Timba.SacredTails.CameraModule.CameraTriggerChange.treeCamera
      language: CSharp
      name:
        CSharp: treeCamera
        VB: treeCamera
      nameWithType:
        CSharp: CameraTriggerChange.treeCamera
        VB: CameraTriggerChange.treeCamera
      qualifiedName:
        CSharp: Timba.SacredTails.CameraModule.CameraTriggerChange.treeCamera
        VB: Timba.SacredTails.CameraModule.CameraTriggerChange.treeCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CameraModule
      source:
        id: treeCamera
        path: ''
        startLine: 17781
      syntax:
        content:
          CSharp: public CinemachineVirtualCamera treeCamera
          VB: Public treeCamera As CinemachineVirtualCamera
        return:
          type: Global.CinemachineVirtualCamera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter(Collider)
      commentId: M:Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter(Collider)
      language: CSharp
      name:
        CSharp: OnTriggerEnter(Collider)
        VB: OnTriggerEnter(Collider)
      nameWithType:
        CSharp: CameraTriggerChange.OnTriggerEnter(Collider)
        VB: CameraTriggerChange.OnTriggerEnter(Collider)
      qualifiedName:
        CSharp: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter(Collider)
        VB: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter(Collider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CameraModule
      source:
        id: OnTriggerEnter
        path: ''
        startLine: 17785
      syntax:
        content:
          CSharp: public void OnTriggerEnter(Collider other)
          VB: Public Sub OnTriggerEnter(other As Collider)
        parameters:
        - id: other
          type: Global.Collider
      overload: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit(Collider)
      commentId: M:Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit(Collider)
      language: CSharp
      name:
        CSharp: OnTriggerExit(Collider)
        VB: OnTriggerExit(Collider)
      nameWithType:
        CSharp: CameraTriggerChange.OnTriggerExit(Collider)
        VB: CameraTriggerChange.OnTriggerExit(Collider)
      qualifiedName:
        CSharp: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit(Collider)
        VB: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit(Collider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CameraModule
      source:
        id: OnTriggerExit
        path: ''
        startLine: 17793
      syntax:
        content:
          CSharp: public void OnTriggerExit(Collider other)
          VB: Public Sub OnTriggerExit(other As Collider)
        parameters:
        - id: other
          type: Global.Collider
      overload: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.CameraModule.ViewerCameraChange
    commentId: T:Timba.SacredTails.CameraModule.ViewerCameraChange
    language: CSharp
    name:
      CSharp: ViewerCameraChange
      VB: ViewerCameraChange
    nameWithType:
      CSharp: ViewerCameraChange
      VB: ViewerCameraChange
    qualifiedName:
      CSharp: Timba.SacredTails.CameraModule.ViewerCameraChange
      VB: Timba.SacredTails.CameraModule.ViewerCameraChange
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CameraModule
    source:
      id: ViewerCameraChange
      path: ''
      startLine: 17809
    syntax:
      content:
        CSharp: 'public class ViewerCameraChange : MonoBehaviour'
        VB: >-
          Public Class ViewerCameraChange

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CameraModule.ViewerCameraChange.lobbyCamera
      commentId: F:Timba.SacredTails.CameraModule.ViewerCameraChange.lobbyCamera
      language: CSharp
      name:
        CSharp: lobbyCamera
        VB: lobbyCamera
      nameWithType:
        CSharp: ViewerCameraChange.lobbyCamera
        VB: ViewerCameraChange.lobbyCamera
      qualifiedName:
        CSharp: Timba.SacredTails.CameraModule.ViewerCameraChange.lobbyCamera
        VB: Timba.SacredTails.CameraModule.ViewerCameraChange.lobbyCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CameraModule
      source:
        id: lobbyCamera
        path: ''
        startLine: 17812
      syntax:
        content:
          CSharp: public CinemachineVirtualCamera lobbyCamera
          VB: Public lobbyCamera As CinemachineVirtualCamera
        return:
          type: Global.CinemachineVirtualCamera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CameraModule.ViewerCameraChange.viewerCamera
      commentId: F:Timba.SacredTails.CameraModule.ViewerCameraChange.viewerCamera
      language: CSharp
      name:
        CSharp: viewerCamera
        VB: viewerCamera
      nameWithType:
        CSharp: ViewerCameraChange.viewerCamera
        VB: ViewerCameraChange.viewerCamera
      qualifiedName:
        CSharp: Timba.SacredTails.CameraModule.ViewerCameraChange.viewerCamera
        VB: Timba.SacredTails.CameraModule.ViewerCameraChange.viewerCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CameraModule
      source:
        id: viewerCamera
        path: ''
        startLine: 17813
      syntax:
        content:
          CSharp: public CinemachineVirtualCamera viewerCamera
          VB: Public viewerCamera As CinemachineVirtualCamera
        return:
          type: Global.CinemachineVirtualCamera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera
      commentId: M:Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera
      language: CSharp
      name:
        CSharp: ChangeCamera()
        VB: ChangeCamera()
      nameWithType:
        CSharp: ViewerCameraChange.ChangeCamera()
        VB: ViewerCameraChange.ChangeCamera()
      qualifiedName:
        CSharp: Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera()
        VB: Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CameraModule
      source:
        id: ChangeCamera
        path: ''
        startLine: 17818
      syntax:
        content:
          CSharp: public void ChangeCamera()
          VB: Public Sub ChangeCamera
      overload: Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.OptionsModule
  commentId: N:Timba.SacredTails.OptionsModule
  language: CSharp
  name:
    CSharp: Timba.SacredTails.OptionsModule
    VB: Timba.SacredTails.OptionsModule
  nameWithType:
    CSharp: Timba.SacredTails.OptionsModule
    VB: Timba.SacredTails.OptionsModule
  qualifiedName:
    CSharp: Timba.SacredTails.OptionsModule
    VB: Timba.SacredTails.OptionsModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.OptionsModule.GameSettingsController
    commentId: T:Timba.SacredTails.OptionsModule.GameSettingsController
    language: CSharp
    name:
      CSharp: GameSettingsController
      VB: GameSettingsController
    nameWithType:
      CSharp: GameSettingsController
      VB: GameSettingsController
    qualifiedName:
      CSharp: Timba.SacredTails.OptionsModule.GameSettingsController
      VB: Timba.SacredTails.OptionsModule.GameSettingsController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.OptionsModule
    source:
      id: GameSettingsController
      path: ''
      startLine: 17834
    syntax:
      content:
        CSharp: 'public class GameSettingsController : MonoBehaviour'
        VB: >-
          Public Class GameSettingsController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.settingsContainer
      commentId: F:Timba.SacredTails.OptionsModule.GameSettingsController.settingsContainer
      language: CSharp
      name:
        CSharp: settingsContainer
        VB: settingsContainer
      nameWithType:
        CSharp: GameSettingsController.settingsContainer
        VB: GameSettingsController.settingsContainer
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.settingsContainer
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.settingsContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: settingsContainer
        path: ''
        startLine: 17837
      syntax:
        content:
          CSharp: public GameObject settingsContainer
          VB: Public settingsContainer As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.settingsPanel
      commentId: F:Timba.SacredTails.OptionsModule.GameSettingsController.settingsPanel
      language: CSharp
      name:
        CSharp: settingsPanel
        VB: settingsPanel
      nameWithType:
        CSharp: GameSettingsController.settingsPanel
        VB: GameSettingsController.settingsPanel
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.settingsPanel
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.settingsPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: settingsPanel
        path: ''
        startLine: 17838
      syntax:
        content:
          CSharp: public GameObject settingsPanel
          VB: Public settingsPanel As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.qualityLevel
      commentId: F:Timba.SacredTails.OptionsModule.GameSettingsController.qualityLevel
      language: CSharp
      name:
        CSharp: qualityLevel
        VB: qualityLevel
      nameWithType:
        CSharp: GameSettingsController.qualityLevel
        VB: GameSettingsController.qualityLevel
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.qualityLevel
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.qualityLevel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: qualityLevel
        path: ''
        startLine: 17839
      syntax:
        content:
          CSharp: public RenderPipelineAsset[] qualityLevel
          VB: Public qualityLevel As RenderPipelineAsset()
        return:
          type: Global.RenderPipelineAsset[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.terrain
      commentId: F:Timba.SacredTails.OptionsModule.GameSettingsController.terrain
      language: CSharp
      name:
        CSharp: terrain
        VB: terrain
      nameWithType:
        CSharp: GameSettingsController.terrain
        VB: GameSettingsController.terrain
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.terrain
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.terrain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: terrain
        path: ''
        startLine: 17840
      syntax:
        content:
          CSharp: public Terrain terrain
          VB: Public terrain As Terrain
        return:
          type: Global.Terrain
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.graphicsDropdown
      commentId: F:Timba.SacredTails.OptionsModule.GameSettingsController.graphicsDropdown
      language: CSharp
      name:
        CSharp: graphicsDropdown
        VB: graphicsDropdown
      nameWithType:
        CSharp: GameSettingsController.graphicsDropdown
        VB: GameSettingsController.graphicsDropdown
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.graphicsDropdown
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.graphicsDropdown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: graphicsDropdown
        path: ''
        startLine: 17841
      syntax:
        content:
          CSharp: public TMP_Dropdown graphicsDropdown
          VB: Public graphicsDropdown As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.resolutionDropdown
      commentId: F:Timba.SacredTails.OptionsModule.GameSettingsController.resolutionDropdown
      language: CSharp
      name:
        CSharp: resolutionDropdown
        VB: resolutionDropdown
      nameWithType:
        CSharp: GameSettingsController.resolutionDropdown
        VB: GameSettingsController.resolutionDropdown
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.resolutionDropdown
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.resolutionDropdown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: resolutionDropdown
        path: ''
        startLine: 17842
      syntax:
        content:
          CSharp: public TMP_Dropdown resolutionDropdown
          VB: Public resolutionDropdown As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.fullscreenToggle
      commentId: F:Timba.SacredTails.OptionsModule.GameSettingsController.fullscreenToggle
      language: CSharp
      name:
        CSharp: fullscreenToggle
        VB: fullscreenToggle
      nameWithType:
        CSharp: GameSettingsController.fullscreenToggle
        VB: GameSettingsController.fullscreenToggle
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.fullscreenToggle
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.fullscreenToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: fullscreenToggle
        path: ''
        startLine: 17843
      syntax:
        content:
          CSharp: public Toggle fullscreenToggle
          VB: Public fullscreenToggle As Toggle
        return:
          type: Global.Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.badWordFilterToggle
      commentId: F:Timba.SacredTails.OptionsModule.GameSettingsController.badWordFilterToggle
      language: CSharp
      name:
        CSharp: badWordFilterToggle
        VB: badWordFilterToggle
      nameWithType:
        CSharp: GameSettingsController.badWordFilterToggle
        VB: GameSettingsController.badWordFilterToggle
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.badWordFilterToggle
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.badWordFilterToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: badWordFilterToggle
        path: ''
        startLine: 17844
      syntax:
        content:
          CSharp: public Toggle badWordFilterToggle
          VB: Public badWordFilterToggle As Toggle
        return:
          type: Global.Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.frenchLayoutToggle
      commentId: F:Timba.SacredTails.OptionsModule.GameSettingsController.frenchLayoutToggle
      language: CSharp
      name:
        CSharp: frenchLayoutToggle
        VB: frenchLayoutToggle
      nameWithType:
        CSharp: GameSettingsController.frenchLayoutToggle
        VB: GameSettingsController.frenchLayoutToggle
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.frenchLayoutToggle
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.frenchLayoutToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: frenchLayoutToggle
        path: ''
        startLine: 17845
      syntax:
        content:
          CSharp: public Toggle frenchLayoutToggle
          VB: Public frenchLayoutToggle As Toggle
        return:
          type: Global.Toggle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.versionText
      commentId: F:Timba.SacredTails.OptionsModule.GameSettingsController.versionText
      language: CSharp
      name:
        CSharp: versionText
        VB: versionText
      nameWithType:
        CSharp: GameSettingsController.versionText
        VB: GameSettingsController.versionText
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.versionText
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.versionText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: versionText
        path: ''
        startLine: 17846
      syntax:
        content:
          CSharp: public TMP_Text versionText
          VB: Public versionText As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.Start
      commentId: M:Timba.SacredTails.OptionsModule.GameSettingsController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: GameSettingsController.Start()
        VB: GameSettingsController.Start()
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.Start()
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: Start
        path: ''
        startLine: 17851
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Timba.SacredTails.OptionsModule.GameSettingsController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract(System.Boolean)
      commentId: M:Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract(System.Boolean)
      language: CSharp
      name:
        CSharp: SettingsButtonInteract(Boolean)
        VB: SettingsButtonInteract(Boolean)
      nameWithType:
        CSharp: GameSettingsController.SettingsButtonInteract(Boolean)
        VB: GameSettingsController.SettingsButtonInteract(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract(System.Boolean)
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: SettingsButtonInteract
        path: ''
        startLine: 17883
      syntax:
        content:
          CSharp: public void SettingsButtonInteract(bool active)
          VB: Public Sub SettingsButtonInteract(active As Boolean)
        parameters:
        - id: active
          type: System.Boolean
      overload: Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen
      commentId: M:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen
      language: CSharp
      name:
        CSharp: ChangeFullScreen()
        VB: ChangeFullScreen()
      nameWithType:
        CSharp: GameSettingsController.ChangeFullScreen()
        VB: GameSettingsController.ChangeFullScreen()
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen()
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: ChangeFullScreen
        path: ''
        startLine: 17890
      syntax:
        content:
          CSharp: public void ChangeFullScreen()
          VB: Public Sub ChangeFullScreen
      overload: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen(System.Boolean)
      commentId: M:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen(System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeFullScreen(Boolean)
        VB: ChangeFullScreen(Boolean)
      nameWithType:
        CSharp: GameSettingsController.ChangeFullScreen(Boolean)
        VB: GameSettingsController.ChangeFullScreen(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen(System.Boolean)
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: ChangeFullScreen
        path: ''
        startLine: 17898
      syntax:
        content:
          CSharp: public void ChangeFullScreen(bool changeToogle)
          VB: Public Sub ChangeFullScreen(changeToogle As Boolean)
        parameters:
        - id: changeToogle
          type: System.Boolean
      overload: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution(System.Int32)
      commentId: M:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution(System.Int32)
      language: CSharp
      name:
        CSharp: ChangeResolution(Int32)
        VB: ChangeResolution(Int32)
      nameWithType:
        CSharp: GameSettingsController.ChangeResolution(Int32)
        VB: GameSettingsController.ChangeResolution(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution(System.Int32)
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: ChangeResolution
        path: ''
        startLine: 17908
      syntax:
        content:
          CSharp: public void ChangeResolution(int resolutionSettings)
          VB: Public Sub ChangeResolution(resolutionSettings As Integer)
        parameters:
        - id: resolutionSettings
          type: System.Int32
      overload: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution(System.Int32,System.Boolean)
      commentId: M:Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: GetResolution(Int32, Boolean)
        VB: GetResolution(Int32, Boolean)
      nameWithType:
        CSharp: GameSettingsController.GetResolution(Int32, Boolean)
        VB: GameSettingsController.GetResolution(Int32, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution(System.Int32, System.Boolean)
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: GetResolution
        path: ''
        startLine: 17916
      syntax:
        content:
          CSharp: public Vector2Int GetResolution(int option, bool saveOnPlayerPrefs = false)
          VB: Public Function GetResolution(option As Integer, saveOnPlayerPrefs As Boolean = False) As Vector2Int
        parameters:
        - id: option
          type: System.Int32
        - id: saveOnPlayerPrefs
          type: System.Boolean
        return:
          type: Global.Vector2Int
      overload: Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings(System.Int32)
      commentId: M:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings(System.Int32)
      language: CSharp
      name:
        CSharp: ChangeGraphicSettings(Int32)
        VB: ChangeGraphicSettings(Int32)
      nameWithType:
        CSharp: GameSettingsController.ChangeGraphicSettings(Int32)
        VB: GameSettingsController.ChangeGraphicSettings(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings(System.Int32)
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: ChangeGraphicSettings
        path: ''
        startLine: 17943
      syntax:
        content:
          CSharp: public void ChangeGraphicSettings(int value)
          VB: Public Sub ChangeGraphicSettings(value As Integer)
        parameters:
        - id: value
          type: System.Int32
      overload: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter(System.Boolean)
      commentId: M:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter(System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeBadWordFilter(Boolean)
        VB: ChangeBadWordFilter(Boolean)
      nameWithType:
        CSharp: GameSettingsController.ChangeBadWordFilter(Boolean)
        VB: GameSettingsController.ChangeBadWordFilter(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter(System.Boolean)
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: ChangeBadWordFilter
        path: ''
        startLine: 17973
      syntax:
        content:
          CSharp: public void ChangeBadWordFilter(bool changeToogle)
          VB: Public Sub ChangeBadWordFilter(changeToogle As Boolean)
        parameters:
        - id: changeToogle
          type: System.Boolean
      overload: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout(System.Boolean)
      commentId: M:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout(System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeKeyboardLayout(Boolean)
        VB: ChangeKeyboardLayout(Boolean)
      nameWithType:
        CSharp: GameSettingsController.ChangeKeyboardLayout(Boolean)
        VB: GameSettingsController.ChangeKeyboardLayout(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout(System.Boolean)
        VB: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.OptionsModule
      source:
        id: ChangeKeyboardLayout
        path: ''
        startLine: 17978
      syntax:
        content:
          CSharp: public void ChangeKeyboardLayout(bool changeToogle)
          VB: Public Sub ChangeKeyboardLayout(changeToogle As Boolean)
        parameters:
        - id: changeToogle
          type: System.Boolean
      overload: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.ChatModule
  commentId: N:Timba.SacredTails.ChatModule
  language: CSharp
  name:
    CSharp: Timba.SacredTails.ChatModule
    VB: Timba.SacredTails.ChatModule
  nameWithType:
    CSharp: Timba.SacredTails.ChatModule
    VB: Timba.SacredTails.ChatModule
  qualifiedName:
    CSharp: Timba.SacredTails.ChatModule
    VB: Timba.SacredTails.ChatModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.ChatModule.FilterController
    commentId: T:Timba.SacredTails.ChatModule.FilterController
    language: CSharp
    name:
      CSharp: FilterController
      VB: FilterController
    nameWithType:
      CSharp: FilterController
      VB: FilterController
    qualifiedName:
      CSharp: Timba.SacredTails.ChatModule.FilterController
      VB: Timba.SacredTails.ChatModule.FilterController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.ChatModule
    source:
      id: FilterController
      path: ''
      startLine: 18009
    syntax:
      content:
        CSharp: 'public class FilterController : MonoBehaviour'
        VB: >-
          Public Class FilterController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.ChatModule.FilterController.chatTextBox
      commentId: F:Timba.SacredTails.ChatModule.FilterController.chatTextBox
      language: CSharp
      name:
        CSharp: chatTextBox
        VB: chatTextBox
      nameWithType:
        CSharp: FilterController.chatTextBox
        VB: FilterController.chatTextBox
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.FilterController.chatTextBox
        VB: Timba.SacredTails.ChatModule.FilterController.chatTextBox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: chatTextBox
        path: ''
        startLine: 18011
      syntax:
        content:
          CSharp: public ChatTextBox chatTextBox
          VB: Public chatTextBox As ChatTextBox
        return:
          type: Global.ChatTextBox
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.FilterController.toggles
      commentId: F:Timba.SacredTails.ChatModule.FilterController.toggles
      language: CSharp
      name:
        CSharp: toggles
        VB: toggles
      nameWithType:
        CSharp: FilterController.toggles
        VB: FilterController.toggles
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.FilterController.toggles
        VB: Timba.SacredTails.ChatModule.FilterController.toggles
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: toggles
        path: ''
        startLine: 18012
      syntax:
        content:
          CSharp: public List<Toggle> toggles
          VB: Public toggles As List(Of Toggle)
        return:
          type: System.Collections.Generic.List{Toggle}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.FilterController.CallApplyFilters
      commentId: M:Timba.SacredTails.ChatModule.FilterController.CallApplyFilters
      language: CSharp
      name:
        CSharp: CallApplyFilters()
        VB: CallApplyFilters()
      nameWithType:
        CSharp: FilterController.CallApplyFilters()
        VB: FilterController.CallApplyFilters()
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.FilterController.CallApplyFilters()
        VB: Timba.SacredTails.ChatModule.FilterController.CallApplyFilters()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: CallApplyFilters
        path: ''
        startLine: 18034
      syntax:
        content:
          CSharp: public void CallApplyFilters()
          VB: Public Sub CallApplyFilters
      overload: Timba.SacredTails.ChatModule.FilterController.CallApplyFilters*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast(System.Boolean)
      commentId: M:Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast(System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeAllMinusLast(Boolean)
        VB: ChangeAllMinusLast(Boolean)
      nameWithType:
        CSharp: FilterController.ChangeAllMinusLast(Boolean)
        VB: FilterController.ChangeAllMinusLast(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast(System.Boolean)
        VB: Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: ChangeAllMinusLast
        path: ''
        startLine: 18039
      syntax:
        content:
          CSharp: public void ChangeAllMinusLast(bool state)
          VB: Public Sub ChangeAllMinusLast(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.FilterController.IfAnyDisable
      commentId: M:Timba.SacredTails.ChatModule.FilterController.IfAnyDisable
      language: CSharp
      name:
        CSharp: IfAnyDisable()
        VB: IfAnyDisable()
      nameWithType:
        CSharp: FilterController.IfAnyDisable()
        VB: FilterController.IfAnyDisable()
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.FilterController.IfAnyDisable()
        VB: Timba.SacredTails.ChatModule.FilterController.IfAnyDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: IfAnyDisable
        path: ''
        startLine: 18049
      syntax:
        content:
          CSharp: public void IfAnyDisable()
          VB: Public Sub IfAnyDisable
      overload: Timba.SacredTails.ChatModule.FilterController.IfAnyDisable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.FilterController.IfAllEnable
      commentId: M:Timba.SacredTails.ChatModule.FilterController.IfAllEnable
      language: CSharp
      name:
        CSharp: IfAllEnable()
        VB: IfAllEnable()
      nameWithType:
        CSharp: FilterController.IfAllEnable()
        VB: FilterController.IfAllEnable()
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.FilterController.IfAllEnable()
        VB: Timba.SacredTails.ChatModule.FilterController.IfAllEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: IfAllEnable
        path: ''
        startLine: 18056
      syntax:
        content:
          CSharp: public void IfAllEnable()
          VB: Public Sub IfAllEnable
      overload: Timba.SacredTails.ChatModule.FilterController.IfAllEnable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.ChatModule.ChatEmojis
    commentId: T:Timba.SacredTails.ChatModule.ChatEmojis
    language: CSharp
    name:
      CSharp: ChatEmojis
      VB: ChatEmojis
    nameWithType:
      CSharp: ChatEmojis
      VB: ChatEmojis
    qualifiedName:
      CSharp: Timba.SacredTails.ChatModule.ChatEmojis
      VB: Timba.SacredTails.ChatModule.ChatEmojis
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.ChatModule
    source:
      id: ChatEmojis
      path: ''
      startLine: 34535
    syntax:
      content:
        CSharp: 'public class ChatEmojis : MonoBehaviour'
        VB: >-
          Public Class ChatEmojis

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.ChatModule.ChatEmojis.chatTextBox
      commentId: F:Timba.SacredTails.ChatModule.ChatEmojis.chatTextBox
      language: CSharp
      name:
        CSharp: chatTextBox
        VB: chatTextBox
      nameWithType:
        CSharp: ChatEmojis.chatTextBox
        VB: ChatEmojis.chatTextBox
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.ChatEmojis.chatTextBox
        VB: Timba.SacredTails.ChatModule.ChatEmojis.chatTextBox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: chatTextBox
        path: ''
        startLine: 34537
      syntax:
        content:
          CSharp: public ChatTextBox chatTextBox
          VB: Public chatTextBox As ChatTextBox
        return:
          type: Global.ChatTextBox
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.ChatEmojis.diccionaryOfEmojis
      commentId: F:Timba.SacredTails.ChatModule.ChatEmojis.diccionaryOfEmojis
      language: CSharp
      name:
        CSharp: diccionaryOfEmojis
        VB: diccionaryOfEmojis
      nameWithType:
        CSharp: ChatEmojis.diccionaryOfEmojis
        VB: ChatEmojis.diccionaryOfEmojis
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.ChatEmojis.diccionaryOfEmojis
        VB: Timba.SacredTails.ChatModule.ChatEmojis.diccionaryOfEmojis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: diccionaryOfEmojis
        path: ''
        startLine: 34538
      syntax:
        content:
          CSharp: public ChatEmojis.DiccionaryOfEmojis diccionaryOfEmojis
          VB: Public diccionaryOfEmojis As ChatEmojis.DiccionaryOfEmojis
        return:
          type: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.ChatEmojis.inputField
      commentId: F:Timba.SacredTails.ChatModule.ChatEmojis.inputField
      language: CSharp
      name:
        CSharp: inputField
        VB: inputField
      nameWithType:
        CSharp: ChatEmojis.inputField
        VB: ChatEmojis.inputField
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.ChatEmojis.inputField
        VB: Timba.SacredTails.ChatModule.ChatEmojis.inputField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: inputField
        path: ''
        startLine: 34539
      syntax:
        content:
          CSharp: public TMP_InputField inputField
          VB: Public inputField As TMP_InputField
        return:
          type: Global.TMP_InputField
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.ChatEmojis.pendingCarets
      commentId: F:Timba.SacredTails.ChatModule.ChatEmojis.pendingCarets
      language: CSharp
      name:
        CSharp: pendingCarets
        VB: pendingCarets
      nameWithType:
        CSharp: ChatEmojis.pendingCarets
        VB: ChatEmojis.pendingCarets
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.ChatEmojis.pendingCarets
        VB: Timba.SacredTails.ChatModule.ChatEmojis.pendingCarets
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: pendingCarets
        path: ''
        startLine: 34540
      syntax:
        content:
          CSharp: public int pendingCarets
          VB: Public pendingCarets As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue(System.String)
      commentId: M:Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue(System.String)
      language: CSharp
      name:
        CSharp: OnChangeValue(String)
        VB: OnChangeValue(String)
      nameWithType:
        CSharp: ChatEmojis.OnChangeValue(String)
        VB: ChatEmojis.OnChangeValue(String)
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue(System.String)
        VB: Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: OnChangeValue
        path: ''
        startLine: 34549
      syntax:
        content:
          CSharp: public void OnChangeValue(string msg)
          VB: Public Sub OnChangeValue(msg As String)
        parameters:
        - id: msg
          type: System.String
      overload: Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.ChatEmojis.Update
      commentId: M:Timba.SacredTails.ChatModule.ChatEmojis.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: ChatEmojis.Update()
        VB: ChatEmojis.Update()
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.ChatEmojis.Update()
        VB: Timba.SacredTails.ChatModule.ChatEmojis.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: Update
        path: ''
        startLine: 34590
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: Timba.SacredTails.ChatModule.ChatEmojis.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis
    commentId: T:Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis
    language: CSharp
    name:
      CSharp: ChatEmojis.DiccionaryOfEmojis
      VB: ChatEmojis.DiccionaryOfEmojis
    nameWithType:
      CSharp: ChatEmojis.DiccionaryOfEmojis
      VB: ChatEmojis.DiccionaryOfEmojis
    qualifiedName:
      CSharp: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis
      VB: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.ChatModule
    source:
      id: DiccionaryOfEmojis
      path: ''
      startLine: 34602
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class DiccionaryOfEmojis
        VB: >-
          <Serializable>

          Public Class DiccionaryOfEmojis
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.keys
      commentId: F:Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.keys
      language: CSharp
      name:
        CSharp: keys
        VB: keys
      nameWithType:
        CSharp: ChatEmojis.DiccionaryOfEmojis.keys
        VB: ChatEmojis.DiccionaryOfEmojis.keys
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.keys
        VB: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.keys
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: keys
        path: ''
        startLine: 34605
      syntax:
        content:
          CSharp: public List<string> keys
          VB: Public keys As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.RealValues
      commentId: F:Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.RealValues
      language: CSharp
      name:
        CSharp: RealValues
        VB: RealValues
      nameWithType:
        CSharp: ChatEmojis.DiccionaryOfEmojis.RealValues
        VB: ChatEmojis.DiccionaryOfEmojis.RealValues
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.RealValues
        VB: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.RealValues
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: RealValues
        path: ''
        startLine: 34606
      syntax:
        content:
          CSharp: public List<string> RealValues
          VB: Public RealValues As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.visual
      commentId: F:Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.visual
      language: CSharp
      name:
        CSharp: visual
        VB: visual
      nameWithType:
        CSharp: ChatEmojis.DiccionaryOfEmojis.visual
        VB: ChatEmojis.DiccionaryOfEmojis.visual
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.visual
        VB: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.visual
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: visual
        path: ''
        startLine: 34608
      syntax:
        content:
          CSharp: public List<Sprite> visual
          VB: Public visual As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey(System.String)
      commentId: M:Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey(System.String)
      language: CSharp
      name:
        CSharp: GetByKey(String)
        VB: GetByKey(String)
      nameWithType:
        CSharp: ChatEmojis.DiccionaryOfEmojis.GetByKey(String)
        VB: ChatEmojis.DiccionaryOfEmojis.GetByKey(String)
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey(System.String)
        VB: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: GetByKey
        path: ''
        startLine: 34610
      syntax:
        content:
          CSharp: public string GetByKey(string key)
          VB: Public Function GetByKey(key As String) As String
        parameters:
        - id: key
          type: System.String
        return:
          type: System.String
      overload: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.ChatModule.EmojiButton
    commentId: T:Timba.SacredTails.ChatModule.EmojiButton
    language: CSharp
    name:
      CSharp: EmojiButton
      VB: EmojiButton
    nameWithType:
      CSharp: EmojiButton
      VB: EmojiButton
    qualifiedName:
      CSharp: Timba.SacredTails.ChatModule.EmojiButton
      VB: Timba.SacredTails.ChatModule.EmojiButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.ChatModule
    source:
      id: EmojiButton
      path: ''
      startLine: 34628
    syntax:
      content:
        CSharp: 'public class EmojiButton : MonoBehaviour'
        VB: >-
          Public Class EmojiButton

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.ChatModule.EmojiButton.button
      commentId: F:Timba.SacredTails.ChatModule.EmojiButton.button
      language: CSharp
      name:
        CSharp: button
        VB: button
      nameWithType:
        CSharp: EmojiButton.button
        VB: EmojiButton.button
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.EmojiButton.button
        VB: Timba.SacredTails.ChatModule.EmojiButton.button
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: button
        path: ''
        startLine: 34630
      syntax:
        content:
          CSharp: public Button button
          VB: Public button As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.EmojiButton.icon
      commentId: F:Timba.SacredTails.ChatModule.EmojiButton.icon
      language: CSharp
      name:
        CSharp: icon
        VB: icon
      nameWithType:
        CSharp: EmojiButton.icon
        VB: EmojiButton.icon
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.EmojiButton.icon
        VB: Timba.SacredTails.ChatModule.EmojiButton.icon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: icon
        path: ''
        startLine: 34631
      syntax:
        content:
          CSharp: public Image icon
          VB: Public icon As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.EmojiButton.codeValue
      commentId: F:Timba.SacredTails.ChatModule.EmojiButton.codeValue
      language: CSharp
      name:
        CSharp: codeValue
        VB: codeValue
      nameWithType:
        CSharp: EmojiButton.codeValue
        VB: EmojiButton.codeValue
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.EmojiButton.codeValue
        VB: Timba.SacredTails.ChatModule.EmojiButton.codeValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: codeValue
        path: ''
        startLine: 34632
      syntax:
        content:
          CSharp: public string codeValue
          VB: Public codeValue As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.ChatModule.EmojiButton.realValue
      commentId: F:Timba.SacredTails.ChatModule.EmojiButton.realValue
      language: CSharp
      name:
        CSharp: realValue
        VB: realValue
      nameWithType:
        CSharp: EmojiButton.realValue
        VB: EmojiButton.realValue
      qualifiedName:
        CSharp: Timba.SacredTails.ChatModule.EmojiButton.realValue
        VB: Timba.SacredTails.ChatModule.EmojiButton.realValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.ChatModule
      source:
        id: realValue
        path: ''
        startLine: 34633
      syntax:
        content:
          CSharp: public string realValue
          VB: Public realValue As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Lobby
  commentId: N:Timba.SacredTails.Lobby
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Lobby
    VB: Timba.SacredTails.Lobby
  nameWithType:
    CSharp: Timba.SacredTails.Lobby
    VB: Timba.SacredTails.Lobby
  qualifiedName:
    CSharp: Timba.SacredTails.Lobby
    VB: Timba.SacredTails.Lobby
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Lobby.PlayerCameraFollow
    commentId: T:Timba.SacredTails.Lobby.PlayerCameraFollow
    language: CSharp
    name:
      CSharp: PlayerCameraFollow
      VB: PlayerCameraFollow
    nameWithType:
      CSharp: PlayerCameraFollow
      VB: PlayerCameraFollow
    qualifiedName:
      CSharp: Timba.SacredTails.Lobby.PlayerCameraFollow
      VB: Timba.SacredTails.Lobby.PlayerCameraFollow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Lobby
    source:
      id: PlayerCameraFollow
      path: ''
      startLine: 18942
    syntax:
      content:
        CSharp: 'public class PlayerCameraFollow : Singleton<PlayerCameraFollow>'
        VB: >-
          Public Class PlayerCameraFollow

              Inherits Singleton(Of PlayerCameraFollow)
    inheritance:
    - System.Object
    - Utils.Singleton
    - Utils.Singleton{Timba.SacredTails.Lobby.PlayerCameraFollow}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Lobby.PlayerCameraFollow.virtualCam
      commentId: F:Timba.SacredTails.Lobby.PlayerCameraFollow.virtualCam
      language: CSharp
      name:
        CSharp: virtualCam
        VB: virtualCam
      nameWithType:
        CSharp: PlayerCameraFollow.virtualCam
        VB: PlayerCameraFollow.virtualCam
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.PlayerCameraFollow.virtualCam
        VB: Timba.SacredTails.Lobby.PlayerCameraFollow.virtualCam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: virtualCam
        path: ''
        startLine: 18944
      syntax:
        content:
          CSharp: public List<CinemachineVirtualCamera> virtualCam
          VB: Public virtualCam As List(Of CinemachineVirtualCamera)
        return:
          type: System.Collections.Generic.List{CinemachineVirtualCamera}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer(Transform)
      commentId: M:Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer(Transform)
      language: CSharp
      name:
        CSharp: FollowPlayer(Transform)
        VB: FollowPlayer(Transform)
      nameWithType:
        CSharp: PlayerCameraFollow.FollowPlayer(Transform)
        VB: PlayerCameraFollow.FollowPlayer(Transform)
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer(Transform)
        VB: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: FollowPlayer
        path: ''
        startLine: 18946
      syntax:
        content:
          CSharp: public void FollowPlayer(Transform transform)
          VB: Public Sub FollowPlayer(transform As Transform)
        parameters:
        - id: transform
          type: Global.Transform
      overload: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Lobby.ShinseiSpawner
    commentId: T:Timba.SacredTails.Lobby.ShinseiSpawner
    language: CSharp
    name:
      CSharp: ShinseiSpawner
      VB: ShinseiSpawner
    nameWithType:
      CSharp: ShinseiSpawner
      VB: ShinseiSpawner
    qualifiedName:
      CSharp: Timba.SacredTails.Lobby.ShinseiSpawner
      VB: Timba.SacredTails.Lobby.ShinseiSpawner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Lobby
    source:
      id: ShinseiSpawner
      path: ''
      startLine: 19764
    summary: "\nSpawns shinsei as network objects for the lobby scene \n"
    example: []
    syntax:
      content:
        CSharp: 'public class ShinseiSpawner : MonoBehaviour'
        VB: >-
          Public Class ShinseiSpawner

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Lobby.ShinseiSpawner.characterSlot
      commentId: F:Timba.SacredTails.Lobby.ShinseiSpawner.characterSlot
      language: CSharp
      name:
        CSharp: characterSlot
        VB: characterSlot
      nameWithType:
        CSharp: ShinseiSpawner.characterSlot
        VB: ShinseiSpawner.characterSlot
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.ShinseiSpawner.characterSlot
        VB: Timba.SacredTails.Lobby.ShinseiSpawner.characterSlot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: characterSlot
        path: ''
        startLine: 19768
      syntax:
        content:
          CSharp: public CharacterSlot characterSlot
          VB: Public characterSlot As CharacterSlot
        return:
          type: Global.CharacterSlot
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei(System.String,Transform,Vector3)
      commentId: M:Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei(System.String,Transform,Vector3)
      language: CSharp
      name:
        CSharp: SpawnOtherShinsei(String, Transform, Vector3)
        VB: SpawnOtherShinsei(String, Transform, Vector3)
      nameWithType:
        CSharp: ShinseiSpawner.SpawnOtherShinsei(String, Transform, Vector3)
        VB: ShinseiSpawner.SpawnOtherShinsei(String, Transform, Vector3)
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei(System.String, Transform, Vector3)
        VB: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei(System.String, Transform, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: SpawnOtherShinsei
        path: ''
        startLine: 19776
      syntax:
        content:
          CSharp: public void SpawnOtherShinsei(string shinseiCompanionDna, Transform parent, Vector3 playerPos)
          VB: Public Sub SpawnOtherShinsei(shinseiCompanionDna As String, parent As Transform, playerPos As Vector3)
        parameters:
        - id: shinseiCompanionDna
          type: System.String
        - id: parent
          type: Global.Transform
        - id: playerPos
          type: Global.Vector3
      overload: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn(Transform,System.Boolean,System.Boolean)
      commentId: M:Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn(Transform,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: OnSpawn(Transform, Boolean, Boolean)
        VB: OnSpawn(Transform, Boolean, Boolean)
      nameWithType:
        CSharp: ShinseiSpawner.OnSpawn(Transform, Boolean, Boolean)
        VB: ShinseiSpawner.OnSpawn(Transform, Boolean, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn(Transform, System.Boolean, System.Boolean)
        VB: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn(Transform, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: OnSpawn
        path: ''
        startLine: 19782
      syntax:
        content:
          CSharp: public void OnSpawn(Transform parent, bool isLocalPlayerShinsei = false, bool useGravity = false)
          VB: Public Sub OnSpawn(parent As Transform, isLocalPlayerShinsei As Boolean = False, useGravity As Boolean = False)
        parameters:
        - id: parent
          type: Global.Transform
        - id: isLocalPlayerShinsei
          type: System.Boolean
        - id: useGravity
          type: System.Boolean
      overload: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei(System.String)
      commentId: M:Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei(System.String)
      language: CSharp
      name:
        CSharp: ChangeCurrentShinsei(String)
        VB: ChangeCurrentShinsei(String)
      nameWithType:
        CSharp: ShinseiSpawner.ChangeCurrentShinsei(String)
        VB: ShinseiSpawner.ChangeCurrentShinsei(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei(System.String)
        VB: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: ChangeCurrentShinsei
        path: ''
        startLine: 19797
      syntax:
        content:
          CSharp: public void ChangeCurrentShinsei(string newValue)
          VB: Public Sub ChangeCurrentShinsei(newValue As String)
        parameters:
        - id: newValue
          type: System.String
      overload: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Interaction
  commentId: N:Timba.SacredTails.Interaction
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Interaction
    VB: Timba.SacredTails.Interaction
  nameWithType:
    CSharp: Timba.SacredTails.Interaction
    VB: Timba.SacredTails.Interaction
  qualifiedName:
    CSharp: Timba.SacredTails.Interaction
    VB: Timba.SacredTails.Interaction
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Interaction.SittableMechanic
    commentId: T:Timba.SacredTails.Interaction.SittableMechanic
    language: CSharp
    name:
      CSharp: SittableMechanic
      VB: SittableMechanic
    nameWithType:
      CSharp: SittableMechanic
      VB: SittableMechanic
    qualifiedName:
      CSharp: Timba.SacredTails.Interaction.SittableMechanic
      VB: Timba.SacredTails.Interaction.SittableMechanic
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Interaction
    source:
      id: SittableMechanic
      path: ''
      startLine: 20058
    summary: "\nAllow to player see their character sitdown in chairs on the bar\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SittableMechanic : MonoBehaviour'
        VB: >-
          Public Class SittableMechanic

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: Timba.SacredTails.CardStoreModule
  commentId: N:Timba.SacredTails.CardStoreModule
  language: CSharp
  name:
    CSharp: Timba.SacredTails.CardStoreModule
    VB: Timba.SacredTails.CardStoreModule
  nameWithType:
    CSharp: Timba.SacredTails.CardStoreModule
    VB: Timba.SacredTails.CardStoreModule
  qualifiedName:
    CSharp: Timba.SacredTails.CardStoreModule
    VB: Timba.SacredTails.CardStoreModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.CardStoreModule.Card
    commentId: T:Timba.SacredTails.CardStoreModule.Card
    language: CSharp
    name:
      CSharp: Card
      VB: Card
    nameWithType:
      CSharp: Card
      VB: Card
    qualifiedName:
      CSharp: Timba.SacredTails.CardStoreModule.Card
      VB: Timba.SacredTails.CardStoreModule.Card
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CardStoreModule
    source:
      id: Card
      path: ''
      startLine: 20492
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Card
        VB: >-
          <Serializable>

          Public Class Card
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CardStoreModule.Card.index
      commentId: F:Timba.SacredTails.CardStoreModule.Card.index
      language: CSharp
      name:
        CSharp: index
        VB: index
      nameWithType:
        CSharp: Card.index
        VB: Card.index
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.Card.index
        VB: Timba.SacredTails.CardStoreModule.Card.index
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: index
        path: ''
        startLine: 20495
      syntax:
        content:
          CSharp: public int index
          VB: Public index As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.Card.count
      commentId: F:Timba.SacredTails.CardStoreModule.Card.count
      language: CSharp
      name:
        CSharp: count
        VB: count
      nameWithType:
        CSharp: Card.count
        VB: Card.count
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.Card.count
        VB: Timba.SacredTails.CardStoreModule.Card.count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: count
        path: ''
        startLine: 20495
      syntax:
        content:
          CSharp: public int count
          VB: Public count As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.Card.cardName
      commentId: F:Timba.SacredTails.CardStoreModule.Card.cardName
      language: CSharp
      name:
        CSharp: cardName
        VB: cardName
      nameWithType:
        CSharp: Card.cardName
        VB: Card.cardName
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.Card.cardName
        VB: Timba.SacredTails.CardStoreModule.Card.cardName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: cardName
        path: ''
        startLine: 20496
      syntax:
        content:
          CSharp: public string cardName
          VB: Public cardName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.CardStoreModule.CardManagementController
    commentId: T:Timba.SacredTails.CardStoreModule.CardManagementController
    language: CSharp
    name:
      CSharp: CardManagementController
      VB: CardManagementController
    nameWithType:
      CSharp: CardManagementController
      VB: CardManagementController
    qualifiedName:
      CSharp: Timba.SacredTails.CardStoreModule.CardManagementController
      VB: Timba.SacredTails.CardStoreModule.CardManagementController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CardStoreModule
    source:
      id: CardManagementController
      path: ''
      startLine: 20513
    syntax:
      content:
        CSharp: 'public class CardManagementController : MonoBehaviour'
        VB: >-
          Public Class CardManagementController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.backgroundTypeSwapper
      commentId: F:Timba.SacredTails.CardStoreModule.CardManagementController.backgroundTypeSwapper
      language: CSharp
      name:
        CSharp: backgroundTypeSwapper
        VB: backgroundTypeSwapper
      nameWithType:
        CSharp: CardManagementController.backgroundTypeSwapper
        VB: CardManagementController.backgroundTypeSwapper
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.backgroundTypeSwapper
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.backgroundTypeSwapper
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: backgroundTypeSwapper
        path: ''
        startLine: 20517
      syntax:
        content:
          CSharp: public BackgroundTypeSwapper backgroundTypeSwapper
          VB: Public backgroundTypeSwapper As BackgroundTypeSwapper
        return:
          type: Global.BackgroundTypeSwapper
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager
      commentId: M:Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager
      language: CSharp
      name:
        CSharp: InitCardManager()
        VB: InitCardManager()
      nameWithType:
        CSharp: CardManagementController.InitCardManager()
        VB: CardManagementController.InitCardManager()
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager()
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: InitCardManager
        path: ''
        startLine: 20575
      syntax:
        content:
          CSharp: public void InitCardManager()
          VB: Public Sub InitCardManager
      overload: Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard(System.Int32)
      commentId: M:Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard(System.Int32)
      language: CSharp
      name:
        CSharp: AddSelectedCard(Int32)
        VB: AddSelectedCard(Int32)
      nameWithType:
        CSharp: CardManagementController.AddSelectedCard(Int32)
        VB: CardManagementController.AddSelectedCard(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard(System.Int32)
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: AddSelectedCard
        path: ''
        startLine: 20620
      syntax:
        content:
          CSharp: public void AddSelectedCard(int index)
          VB: Public Sub AddSelectedCard(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard(System.Int32)
      commentId: M:Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard(System.Int32)
      language: CSharp
      name:
        CSharp: RemoveSelectedCard(Int32)
        VB: RemoveSelectedCard(Int32)
      nameWithType:
        CSharp: CardManagementController.RemoveSelectedCard(Int32)
        VB: CardManagementController.RemoveSelectedCard(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard(System.Int32)
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: RemoveSelectedCard
        path: ''
        startLine: 20632
      syntax:
        content:
          CSharp: public void RemoveSelectedCard(int index)
          VB: Public Sub RemoveSelectedCard(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard(System.Int32)
      commentId: M:Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard(System.Int32)
      language: CSharp
      name:
        CSharp: SelectTargetCard(Int32)
        VB: SelectTargetCard(Int32)
      nameWithType:
        CSharp: CardManagementController.SelectTargetCard(Int32)
        VB: CardManagementController.SelectTargetCard(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard(System.Int32)
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: SelectTargetCard
        path: ''
        startLine: 20643
      syntax:
        content:
          CSharp: public void SelectTargetCard(int index)
          VB: Public Sub SelectTargetCard(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard
      commentId: M:Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard
      language: CSharp
      name:
        CSharp: DeselectTargetCard()
        VB: DeselectTargetCard()
      nameWithType:
        CSharp: CardManagementController.DeselectTargetCard()
        VB: CardManagementController.DeselectTargetCard()
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard()
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: DeselectTargetCard
        path: ''
        startLine: 20649
      syntax:
        content:
          CSharp: public void DeselectTargetCard()
          VB: Public Sub DeselectTargetCard
      overload: Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard(System.Int32)
      commentId: M:Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard(System.Int32)
      language: CSharp
      name:
        CSharp: ChangeTargetShinseiCard(Int32)
        VB: ChangeTargetShinseiCard(Int32)
      nameWithType:
        CSharp: CardManagementController.ChangeTargetShinseiCard(Int32)
        VB: CardManagementController.ChangeTargetShinseiCard(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard(System.Int32)
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: ChangeTargetShinseiCard
        path: ''
        startLine: 20657
      syntax:
        content:
          CSharp: public void ChangeTargetShinseiCard(int index)
          VB: Public Sub ChangeTargetShinseiCard(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck(System.Int32)
      commentId: M:Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck(System.Int32)
      language: CSharp
      name:
        CSharp: AddCardInDeck(Int32)
        VB: AddCardInDeck(Int32)
      nameWithType:
        CSharp: CardManagementController.AddCardInDeck(Int32)
        VB: CardManagementController.AddCardInDeck(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck(System.Int32)
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: AddCardInDeck
        path: ''
        startLine: 20677
      syntax:
        content:
          CSharp: public void AddCardInDeck(int indexCardToAdd)
          VB: Public Sub AddCardInDeck(indexCardToAdd As Integer)
        parameters:
        - id: indexCardToAdd
          type: System.Int32
      overload: Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck(System.Int32)
      commentId: M:Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck(System.Int32)
      language: CSharp
      name:
        CSharp: RemoveCardInDeck(Int32)
        VB: RemoveCardInDeck(Int32)
      nameWithType:
        CSharp: CardManagementController.RemoveCardInDeck(Int32)
        VB: CardManagementController.RemoveCardInDeck(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck(System.Int32)
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: RemoveCardInDeck
        path: ''
        startLine: 20695
      syntax:
        content:
          CSharp: public void RemoveCardInDeck(int indexCardToAdd)
          VB: Public Sub RemoveCardInDeck(indexCardToAdd As Integer)
        parameters:
        - id: indexCardToAdd
          type: System.Int32
      overload: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei(System.Int32)
      commentId: M:Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei(System.Int32)
      language: CSharp
      name:
        CSharp: SetCurrentChangeShinsei(Int32)
        VB: SetCurrentChangeShinsei(Int32)
      nameWithType:
        CSharp: CardManagementController.SetCurrentChangeShinsei(Int32)
        VB: CardManagementController.SetCurrentChangeShinsei(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei(System.Int32)
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: SetCurrentChangeShinsei
        path: ''
        startLine: 20712
      syntax:
        content:
          CSharp: public void SetCurrentChangeShinsei(int index)
          VB: Public Sub SetCurrentChangeShinsei(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual
      commentId: M:Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual
      language: CSharp
      name:
        CSharp: UpdateDetailViewVisual()
        VB: UpdateDetailViewVisual()
      nameWithType:
        CSharp: CardManagementController.UpdateDetailViewVisual()
        VB: CardManagementController.UpdateDetailViewVisual()
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual()
        VB: Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: UpdateDetailViewVisual
        path: ''
        startLine: 20729
      syntax:
        content:
          CSharp: public void UpdateDetailViewVisual()
          VB: Public Sub UpdateDetailViewVisual
      overload: Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.CardStoreModule.CardView
    commentId: T:Timba.SacredTails.CardStoreModule.CardView
    language: CSharp
    name:
      CSharp: CardView
      VB: CardView
    nameWithType:
      CSharp: CardView
      VB: CardView
    qualifiedName:
      CSharp: Timba.SacredTails.CardStoreModule.CardView
      VB: Timba.SacredTails.CardStoreModule.CardView
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CardStoreModule
    source:
      id: CardView
      path: ''
      startLine: 20761
    syntax:
      content:
        CSharp: 'public class CardView : MonoBehaviour'
        VB: >-
          Public Class CardView

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    implements:
    - Global.IPointerClickHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CardStoreModule.CardView.ActionCard
      commentId: P:Timba.SacredTails.CardStoreModule.CardView.ActionCard
      language: CSharp
      name:
        CSharp: ActionCard
        VB: ActionCard
      nameWithType:
        CSharp: CardView.ActionCard
        VB: CardView.ActionCard
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardView.ActionCard
        VB: Timba.SacredTails.CardStoreModule.CardView.ActionCard
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: ActionCard
        path: ''
        startLine: 20763
      syntax:
        content:
          CSharp: public ActionCard ActionCard { get; set; }
          VB: Public Property ActionCard As ActionCard
        parameters: []
        return:
          type: Global.ActionCard
      overload: Timba.SacredTails.CardStoreModule.CardView.ActionCard*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardView.OnClickHandler
      commentId: F:Timba.SacredTails.CardStoreModule.CardView.OnClickHandler
      language: CSharp
      name:
        CSharp: OnClickHandler
        VB: OnClickHandler
      nameWithType:
        CSharp: CardView.OnClickHandler
        VB: CardView.OnClickHandler
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardView.OnClickHandler
        VB: Timba.SacredTails.CardStoreModule.CardView.OnClickHandler
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: OnClickHandler
        path: ''
        startLine: 20774
      syntax:
        content:
          CSharp: public Action<int, CardView> OnClickHandler
          VB: Public OnClickHandler As Action(Of Integer, CardView)
        return:
          type: Global.Action{System.Int32,Timba.SacredTails.CardStoreModule.CardView}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardView.UpdateNumber(System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.CardStoreModule.CardView.UpdateNumber(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: UpdateNumber(Int32, Int32)
        VB: UpdateNumber(Int32, Int32)
      nameWithType:
        CSharp: CardView.UpdateNumber(Int32, Int32)
        VB: CardView.UpdateNumber(Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardView.UpdateNumber(System.Int32, System.Int32)
        VB: Timba.SacredTails.CardStoreModule.CardView.UpdateNumber(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: UpdateNumber
        path: ''
        startLine: 20790
      syntax:
        content:
          CSharp: public void UpdateNumber(int number, int indexCard)
          VB: Public Sub UpdateNumber(number As Integer, indexCard As Integer)
        parameters:
        - id: number
          type: System.Int32
        - id: indexCard
          type: System.Int32
      overload: Timba.SacredTails.CardStoreModule.CardView.UpdateNumber*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CardStoreModule.CardView.OnPointerClick(PointerEventData)
      commentId: M:Timba.SacredTails.CardStoreModule.CardView.OnPointerClick(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerClick(PointerEventData)
        VB: OnPointerClick(PointerEventData)
      nameWithType:
        CSharp: CardView.OnPointerClick(PointerEventData)
        VB: CardView.OnPointerClick(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.CardView.OnPointerClick(PointerEventData)
        VB: Timba.SacredTails.CardStoreModule.CardView.OnPointerClick(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: OnPointerClick
        path: ''
        startLine: 20796
      syntax:
        content:
          CSharp: public void OnPointerClick(PointerEventData eventData)
          VB: Public Sub OnPointerClick(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.CardStoreModule.CardView.OnPointerClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.CardStoreModule.Deck
    commentId: T:Timba.SacredTails.CardStoreModule.Deck
    language: CSharp
    name:
      CSharp: Deck
      VB: Deck
    nameWithType:
      CSharp: Deck
      VB: Deck
    qualifiedName:
      CSharp: Timba.SacredTails.CardStoreModule.Deck
      VB: Timba.SacredTails.CardStoreModule.Deck
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CardStoreModule
    source:
      id: Deck
      path: ''
      startLine: 20808
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Deck
        VB: >-
          <Serializable>

          Public Class Deck
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CardStoreModule.Deck.cards
      commentId: F:Timba.SacredTails.CardStoreModule.Deck.cards
      language: CSharp
      name:
        CSharp: cards
        VB: cards
      nameWithType:
        CSharp: Deck.cards
        VB: Deck.cards
      qualifiedName:
        CSharp: Timba.SacredTails.CardStoreModule.Deck.cards
        VB: Timba.SacredTails.CardStoreModule.Deck.cards
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CardStoreModule
      source:
        id: cards
        path: ''
        startLine: 20811
      syntax:
        content:
          CSharp: public List<Card> cards
          VB: Public cards As List(Of Card)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.CardStoreModule.Card}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.DialogSystem
  commentId: N:Timba.SacredTails.DialogSystem
  language: CSharp
  name:
    CSharp: Timba.SacredTails.DialogSystem
    VB: Timba.SacredTails.DialogSystem
  nameWithType:
    CSharp: Timba.SacredTails.DialogSystem
    VB: Timba.SacredTails.DialogSystem
  qualifiedName:
    CSharp: Timba.SacredTails.DialogSystem
    VB: Timba.SacredTails.DialogSystem
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.DialogSystem.ActionNode
    commentId: T:Timba.SacredTails.DialogSystem.ActionNode
    language: CSharp
    name:
      CSharp: ActionNode
      VB: ActionNode
    nameWithType:
      CSharp: ActionNode
      VB: ActionNode
    qualifiedName:
      CSharp: Timba.SacredTails.DialogSystem.ActionNode
      VB: Timba.SacredTails.DialogSystem.ActionNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.DialogSystem
    source:
      id: ActionNode
      path: ''
      startLine: 20822
    syntax:
      content:
        CSharp: 'public class ActionNode : Node'
        VB: >-
          Public Class ActionNode

              Inherits Node
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.DialogSystem.ActionNode.input
      commentId: F:Timba.SacredTails.DialogSystem.ActionNode.input
      language: CSharp
      name:
        CSharp: input
        VB: input
      nameWithType:
        CSharp: ActionNode.input
        VB: ActionNode.input
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.ActionNode.input
        VB: Timba.SacredTails.DialogSystem.ActionNode.input
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: input
        path: ''
        startLine: 20827
      syntax:
        content:
          CSharp: public ActionNode.Connection input
          VB: Public input As ActionNode.Connection
        return:
          type: Timba.SacredTails.DialogSystem.ActionNode.Connection
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.ActionNode.output
      commentId: F:Timba.SacredTails.DialogSystem.ActionNode.output
      language: CSharp
      name:
        CSharp: output
        VB: output
      nameWithType:
        CSharp: ActionNode.output
        VB: ActionNode.output
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.ActionNode.output
        VB: Timba.SacredTails.DialogSystem.ActionNode.output
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: output
        path: ''
        startLine: 20828
      syntax:
        content:
          CSharp: public ActionNode.Connection output
          VB: Public output As ActionNode.Connection
        return:
          type: Timba.SacredTails.DialogSystem.ActionNode.Connection
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.ActionNode.dialogText
      commentId: F:Timba.SacredTails.DialogSystem.ActionNode.dialogText
      language: CSharp
      name:
        CSharp: dialogText
        VB: dialogText
      nameWithType:
        CSharp: ActionNode.dialogText
        VB: ActionNode.dialogText
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.ActionNode.dialogText
        VB: Timba.SacredTails.DialogSystem.ActionNode.dialogText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: dialogText
        path: ''
        startLine: 20829
      syntax:
        content:
          CSharp: public string dialogText
          VB: Public dialogText As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.ActionNode.callback
      commentId: F:Timba.SacredTails.DialogSystem.ActionNode.callback
      language: CSharp
      name:
        CSharp: callback
        VB: callback
      nameWithType:
        CSharp: ActionNode.callback
        VB: ActionNode.callback
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.ActionNode.callback
        VB: Timba.SacredTails.DialogSystem.ActionNode.callback
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: callback
        path: ''
        startLine: 20830
      syntax:
        content:
          CSharp: public Action callback
          VB: Public callback As Action
        return:
          type: Global.Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.DialogSystem.ActionNode.Connection
    commentId: T:Timba.SacredTails.DialogSystem.ActionNode.Connection
    language: CSharp
    name:
      CSharp: ActionNode.Connection
      VB: ActionNode.Connection
    nameWithType:
      CSharp: ActionNode.Connection
      VB: ActionNode.Connection
    qualifiedName:
      CSharp: Timba.SacredTails.DialogSystem.ActionNode.Connection
      VB: Timba.SacredTails.DialogSystem.ActionNode.Connection
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.DialogSystem
    source:
      id: Connection
      path: ''
      startLine: 20825
    syntax:
      content:
        CSharp: public struct Connection
        VB: Public Structure Connection
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items: []
  - id: Timba.SacredTails.DialogSystem.AnswerField
    commentId: T:Timba.SacredTails.DialogSystem.AnswerField
    language: CSharp
    name:
      CSharp: AnswerField
      VB: AnswerField
    nameWithType:
      CSharp: AnswerField
      VB: AnswerField
    qualifiedName:
      CSharp: Timba.SacredTails.DialogSystem.AnswerField
      VB: Timba.SacredTails.DialogSystem.AnswerField
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.DialogSystem
    source:
      id: AnswerField
      path: ''
      startLine: 20842
    syntax:
      content:
        CSharp: 'public class AnswerField : MonoBehaviour'
        VB: >-
          Public Class AnswerField

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse(System.Int32,System.String,Timba.SacredTails.DialogSystem.Conversation,Action,Action)
      commentId: M:Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse(System.Int32,System.String,Timba.SacredTails.DialogSystem.Conversation,Action,Action)
      language: CSharp
      name:
        CSharp: SetButtonResponse(Int32, String, Conversation, Action, Action)
        VB: SetButtonResponse(Int32, String, Conversation, Action, Action)
      nameWithType:
        CSharp: AnswerField.SetButtonResponse(Int32, String, Conversation, Action, Action)
        VB: AnswerField.SetButtonResponse(Int32, String, Conversation, Action, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse(System.Int32, System.String, Timba.SacredTails.DialogSystem.Conversation, Action, Action)
        VB: Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse(System.Int32, System.String, Timba.SacredTails.DialogSystem.Conversation, Action, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: SetButtonResponse
        path: ''
        startLine: 20846
      syntax:
        content:
          CSharp: public void SetButtonResponse(int index, string text, Conversation conversation, Action backButtonCallback = null, Action skipDialog = null)
          VB: Public Sub SetButtonResponse(index As Integer, text As String, conversation As Conversation, backButtonCallback As Action = Nothing, skipDialog As Action = Nothing)
        parameters:
        - id: index
          type: System.Int32
        - id: text
          type: System.String
        - id: conversation
          type: Timba.SacredTails.DialogSystem.Conversation
        - id: backButtonCallback
          type: Global.Action
        - id: skipDialog
          type: Global.Action
      overload: Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.DialogSystem.Conversation
    commentId: T:Timba.SacredTails.DialogSystem.Conversation
    language: CSharp
    name:
      CSharp: Conversation
      VB: Conversation
    nameWithType:
      CSharp: Conversation
      VB: Conversation
    qualifiedName:
      CSharp: Timba.SacredTails.DialogSystem.Conversation
      VB: Timba.SacredTails.DialogSystem.Conversation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.DialogSystem
    source:
      id: Conversation
      path: ''
      startLine: 20939
    summary: "\nThis class keep the logic of write dialogs in screen, received a dialog graph and play them\n"
    example: []
    syntax:
      content:
        CSharp: public class Conversation
        VB: Public Class Conversation
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.DialogSystem.Conversation.dialogGraph
      commentId: F:Timba.SacredTails.DialogSystem.Conversation.dialogGraph
      language: CSharp
      name:
        CSharp: dialogGraph
        VB: dialogGraph
      nameWithType:
        CSharp: Conversation.dialogGraph
        VB: Conversation.dialogGraph
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Conversation.dialogGraph
        VB: Timba.SacredTails.DialogSystem.Conversation.dialogGraph
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: dialogGraph
        path: ''
        startLine: 20942
      syntax:
        content:
          CSharp: public DialogGraph dialogGraph
          VB: Public dialogGraph As DialogGraph
        return:
          type: Timba.SacredTails.DialogSystem.DialogGraph
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Conversation.currentNode
      commentId: F:Timba.SacredTails.DialogSystem.Conversation.currentNode
      language: CSharp
      name:
        CSharp: currentNode
        VB: currentNode
      nameWithType:
        CSharp: Conversation.currentNode
        VB: Conversation.currentNode
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Conversation.currentNode
        VB: Timba.SacredTails.DialogSystem.Conversation.currentNode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: currentNode
        path: ''
        startLine: 20943
      syntax:
        content:
          CSharp: public DialogNode currentNode
          VB: Public currentNode As DialogNode
        return:
          type: Timba.SacredTails.DialogSystem.DialogNode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Conversation.isWaitingResponse
      commentId: F:Timba.SacredTails.DialogSystem.Conversation.isWaitingResponse
      language: CSharp
      name:
        CSharp: isWaitingResponse
        VB: isWaitingResponse
      nameWithType:
        CSharp: Conversation.isWaitingResponse
        VB: Conversation.isWaitingResponse
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Conversation.isWaitingResponse
        VB: Timba.SacredTails.DialogSystem.Conversation.isWaitingResponse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: isWaitingResponse
        path: ''
        startLine: 20945
      syntax:
        content:
          CSharp: public bool isWaitingResponse
          VB: Public isWaitingResponse As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Conversation.isPlayerReadText
      commentId: F:Timba.SacredTails.DialogSystem.Conversation.isPlayerReadText
      language: CSharp
      name:
        CSharp: isPlayerReadText
        VB: isPlayerReadText
      nameWithType:
        CSharp: Conversation.isPlayerReadText
        VB: Conversation.isPlayerReadText
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Conversation.isPlayerReadText
        VB: Timba.SacredTails.DialogSystem.Conversation.isPlayerReadText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: isPlayerReadText
        path: ''
        startLine: 20945
      syntax:
        content:
          CSharp: public bool isPlayerReadText
          VB: Public isPlayerReadText As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Conversation.responseIndex
      commentId: F:Timba.SacredTails.DialogSystem.Conversation.responseIndex
      language: CSharp
      name:
        CSharp: responseIndex
        VB: responseIndex
      nameWithType:
        CSharp: Conversation.responseIndex
        VB: Conversation.responseIndex
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Conversation.responseIndex
        VB: Timba.SacredTails.DialogSystem.Conversation.responseIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: responseIndex
        path: ''
        startLine: 20946
      syntax:
        content:
          CSharp: public int responseIndex
          VB: Public responseIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Conversation.Init(Timba.SacredTails.DialogSystem.DialogUI,Action)
      commentId: M:Timba.SacredTails.DialogSystem.Conversation.Init(Timba.SacredTails.DialogSystem.DialogUI,Action)
      language: CSharp
      name:
        CSharp: Init(DialogUI, Action)
        VB: Init(DialogUI, Action)
      nameWithType:
        CSharp: Conversation.Init(DialogUI, Action)
        VB: Conversation.Init(DialogUI, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Conversation.Init(Timba.SacredTails.DialogSystem.DialogUI, Action)
        VB: Timba.SacredTails.DialogSystem.Conversation.Init(Timba.SacredTails.DialogSystem.DialogUI, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: Init
        path: ''
        startLine: 20948
      syntax:
        content:
          CSharp: public void Init(DialogUI dialogUI, Action EndConversationCallback)
          VB: Public Sub Init(dialogUI As DialogUI, EndConversationCallback As Action)
        parameters:
        - id: dialogUI
          type: Timba.SacredTails.DialogSystem.DialogUI
        - id: EndConversationCallback
          type: Global.Action
      overload: Timba.SacredTails.DialogSystem.Conversation.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Conversation.UpdateDialog(Timba.SacredTails.DialogSystem.DialogNode,Timba.SacredTails.DialogSystem.DialogUI,Action)
      commentId: M:Timba.SacredTails.DialogSystem.Conversation.UpdateDialog(Timba.SacredTails.DialogSystem.DialogNode,Timba.SacredTails.DialogSystem.DialogUI,Action)
      language: CSharp
      name:
        CSharp: UpdateDialog(DialogNode, DialogUI, Action)
        VB: UpdateDialog(DialogNode, DialogUI, Action)
      nameWithType:
        CSharp: Conversation.UpdateDialog(DialogNode, DialogUI, Action)
        VB: Conversation.UpdateDialog(DialogNode, DialogUI, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Conversation.UpdateDialog(Timba.SacredTails.DialogSystem.DialogNode, Timba.SacredTails.DialogSystem.DialogUI, Action)
        VB: Timba.SacredTails.DialogSystem.Conversation.UpdateDialog(Timba.SacredTails.DialogSystem.DialogNode, Timba.SacredTails.DialogSystem.DialogUI, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: UpdateDialog
        path: ''
        startLine: 20962
      syntax:
        content:
          CSharp: public void UpdateDialog(DialogNode dialogNode, DialogUI dialogUI, Action EndConversationCallback)
          VB: Public Sub UpdateDialog(dialogNode As DialogNode, dialogUI As DialogUI, EndConversationCallback As Action)
        parameters:
        - id: dialogNode
          type: Timba.SacredTails.DialogSystem.DialogNode
        - id: dialogUI
          type: Timba.SacredTails.DialogSystem.DialogUI
        - id: EndConversationCallback
          type: Global.Action
      overload: Timba.SacredTails.DialogSystem.Conversation.UpdateDialog*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText
      commentId: M:Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText
      language: CSharp
      name:
        CSharp: NotifyPlayerReadText()
        VB: NotifyPlayerReadText()
      nameWithType:
        CSharp: Conversation.NotifyPlayerReadText()
        VB: Conversation.NotifyPlayerReadText()
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText()
        VB: Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: NotifyPlayerReadText
        path: ''
        startLine: 20973
      syntax:
        content:
          CSharp: public void NotifyPlayerReadText()
          VB: Public Sub NotifyPlayerReadText
      overload: Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Conversation.SendResponse(System.Int32)
      commentId: M:Timba.SacredTails.DialogSystem.Conversation.SendResponse(System.Int32)
      language: CSharp
      name:
        CSharp: SendResponse(Int32)
        VB: SendResponse(Int32)
      nameWithType:
        CSharp: Conversation.SendResponse(Int32)
        VB: Conversation.SendResponse(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Conversation.SendResponse(System.Int32)
        VB: Timba.SacredTails.DialogSystem.Conversation.SendResponse(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: SendResponse
        path: ''
        startLine: 20978
      syntax:
        content:
          CSharp: public void SendResponse(int index)
          VB: Public Sub SendResponse(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.DialogSystem.Conversation.SendResponse*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine(Timba.SacredTails.DialogSystem.DialogUI,Action,Timba.SacredTails.DialogSystem.Dialogable)
      commentId: M:Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine(Timba.SacredTails.DialogSystem.DialogUI,Action,Timba.SacredTails.DialogSystem.Dialogable)
      language: CSharp
      name:
        CSharp: ConversationRoutine(DialogUI, Action, Dialogable)
        VB: ConversationRoutine(DialogUI, Action, Dialogable)
      nameWithType:
        CSharp: Conversation.ConversationRoutine(DialogUI, Action, Dialogable)
        VB: Conversation.ConversationRoutine(DialogUI, Action, Dialogable)
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine(Timba.SacredTails.DialogSystem.DialogUI, Action, Timba.SacredTails.DialogSystem.Dialogable)
        VB: Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine(Timba.SacredTails.DialogSystem.DialogUI, Action, Timba.SacredTails.DialogSystem.Dialogable)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: ConversationRoutine
        path: ''
        startLine: 20984
      syntax:
        content:
          CSharp: public IEnumerator ConversationRoutine(DialogUI dialogUI, Action EndConversationCallback = null, Dialogable targetDialogable = null)
          VB: Public Function ConversationRoutine(dialogUI As DialogUI, EndConversationCallback As Action = Nothing, targetDialogable As Dialogable = Nothing) As IEnumerator
        parameters:
        - id: dialogUI
          type: Timba.SacredTails.DialogSystem.DialogUI
        - id: EndConversationCallback
          type: Global.Action
        - id: targetDialogable
          type: Timba.SacredTails.DialogSystem.Dialogable
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.DialogSystem.Dialogable
    commentId: T:Timba.SacredTails.DialogSystem.Dialogable
    language: CSharp
    name:
      CSharp: Dialogable
      VB: Dialogable
    nameWithType:
      CSharp: Dialogable
      VB: Dialogable
    qualifiedName:
      CSharp: Timba.SacredTails.DialogSystem.Dialogable
      VB: Timba.SacredTails.DialogSystem.Dialogable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.DialogSystem
    source:
      id: Dialogable
      path: ''
      startLine: 21054
    summary: "\nA component that allow start conversations\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Dialogable : MonoBehaviour'
        VB: >-
          Public Class Dialogable

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.DialogSystem.Dialogable.CallbackEvents
      commentId: F:Timba.SacredTails.DialogSystem.Dialogable.CallbackEvents
      language: CSharp
      name:
        CSharp: CallbackEvents
        VB: CallbackEvents
      nameWithType:
        CSharp: Dialogable.CallbackEvents
        VB: Dialogable.CallbackEvents
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Dialogable.CallbackEvents
        VB: Timba.SacredTails.DialogSystem.Dialogable.CallbackEvents
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: CallbackEvents
        path: ''
        startLine: 21062
      summary: "\nEvents that can be triggered in conversations using a code character\n"
      remarks: "\nYou can find a example of use of this in NPC5_Conversation_Out scriptable object at Assets - _SacredTails - Lobby - Scripts - DialogSystem - Conversations\\NPC5_Conversation_Out.asset.\n"
      example: []
      syntax:
        content:
          CSharp: public List<UnityEvent> CallbackEvents
          VB: Public CallbackEvents As List(Of UnityEvent)
        return:
          type: System.Collections.Generic.List{UnityEvent}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Dialogable.dialogUI
      commentId: F:Timba.SacredTails.DialogSystem.Dialogable.dialogUI
      language: CSharp
      name:
        CSharp: dialogUI
        VB: dialogUI
      nameWithType:
        CSharp: Dialogable.dialogUI
        VB: Dialogable.dialogUI
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Dialogable.dialogUI
        VB: Timba.SacredTails.DialogSystem.Dialogable.dialogUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: dialogUI
        path: ''
        startLine: 21086
      syntax:
        content:
          CSharp: public DialogUI dialogUI
          VB: Public dialogUI As DialogUI
        return:
          type: Timba.SacredTails.DialogSystem.DialogUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Dialogable.StartConversation
      commentId: M:Timba.SacredTails.DialogSystem.Dialogable.StartConversation
      language: CSharp
      name:
        CSharp: StartConversation()
        VB: StartConversation()
      nameWithType:
        CSharp: Dialogable.StartConversation()
        VB: Dialogable.StartConversation()
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Dialogable.StartConversation()
        VB: Timba.SacredTails.DialogSystem.Dialogable.StartConversation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: StartConversation
        path: ''
        startLine: 21156
      summary: "\nThis start a new conversation\n"
      example: []
      syntax:
        content:
          CSharp: public void StartConversation()
          VB: Public Sub StartConversation
      overload: Timba.SacredTails.DialogSystem.Dialogable.StartConversation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Dialogable.isExecutingAnswerWithCallbackEvent
      commentId: F:Timba.SacredTails.DialogSystem.Dialogable.isExecutingAnswerWithCallbackEvent
      language: CSharp
      name:
        CSharp: isExecutingAnswerWithCallbackEvent
        VB: isExecutingAnswerWithCallbackEvent
      nameWithType:
        CSharp: Dialogable.isExecutingAnswerWithCallbackEvent
        VB: Dialogable.isExecutingAnswerWithCallbackEvent
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Dialogable.isExecutingAnswerWithCallbackEvent
        VB: Timba.SacredTails.DialogSystem.Dialogable.isExecutingAnswerWithCallbackEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: isExecutingAnswerWithCallbackEvent
        path: ''
        startLine: 21189
      syntax:
        content:
          CSharp: public bool isExecutingAnswerWithCallbackEvent
          VB: Public isExecutingAnswerWithCallbackEvent As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel
      commentId: M:Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel
      language: CSharp
      name:
        CSharp: EnteringAnotherPanel()
        VB: EnteringAnotherPanel()
      nameWithType:
        CSharp: Dialogable.EnteringAnotherPanel()
        VB: Dialogable.EnteringAnotherPanel()
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel()
        VB: Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: EnteringAnotherPanel
        path: ''
        startLine: 21190
      syntax:
        content:
          CSharp: public void EnteringAnotherPanel()
          VB: Public Sub EnteringAnotherPanel
      overload: Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.Dialogable.EndConversation
      commentId: M:Timba.SacredTails.DialogSystem.Dialogable.EndConversation
      language: CSharp
      name:
        CSharp: EndConversation()
        VB: EndConversation()
      nameWithType:
        CSharp: Dialogable.EndConversation()
        VB: Dialogable.EndConversation()
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.Dialogable.EndConversation()
        VB: Timba.SacredTails.DialogSystem.Dialogable.EndConversation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: EndConversation
        path: ''
        startLine: 21194
      syntax:
        content:
          CSharp: public void EndConversation()
          VB: Public Sub
      overload: Timba.SacredTails.DialogSystem.Dialogable.EndConversation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.DialogSystem.DialogGraph
    commentId: T:Timba.SacredTails.DialogSystem.DialogGraph
    language: CSharp
    name:
      CSharp: DialogGraph
      VB: DialogGraph
    nameWithType:
      CSharp: DialogGraph
      VB: DialogGraph
    qualifiedName:
      CSharp: Timba.SacredTails.DialogSystem.DialogGraph
      VB: Timba.SacredTails.DialogSystem.DialogGraph
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.DialogSystem
    source:
      id: DialogGraph
      path: ''
      startLine: 21224
    syntax:
      content:
        CSharp: 'public class DialogGraph : NodeGraph'
        VB: >-
          Public Class DialogGraph

              Inherits NodeGraph
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Timba.SacredTails.DialogSystem.DialogNode
    commentId: T:Timba.SacredTails.DialogSystem.DialogNode
    language: CSharp
    name:
      CSharp: DialogNode
      VB: DialogNode
    nameWithType:
      CSharp: DialogNode
      VB: DialogNode
    qualifiedName:
      CSharp: Timba.SacredTails.DialogSystem.DialogNode
      VB: Timba.SacredTails.DialogSystem.DialogNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.DialogSystem
    source:
      id: DialogNode
      path: ''
      startLine: 21237
    syntax:
      content:
        CSharp: 'public class DialogNode : Node'
        VB: >-
          Public Class DialogNode

              Inherits Node
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.DialogSystem.DialogNode.input
      commentId: F:Timba.SacredTails.DialogSystem.DialogNode.input
      language: CSharp
      name:
        CSharp: input
        VB: input
      nameWithType:
        CSharp: DialogNode.input
        VB: DialogNode.input
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogNode.input
        VB: Timba.SacredTails.DialogSystem.DialogNode.input
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: input
        path: ''
        startLine: 21242
      syntax:
        content:
          CSharp: public DialogNode.Connection input
          VB: Public input As DialogNode.Connection
        return:
          type: Timba.SacredTails.DialogSystem.DialogNode.Connection
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogNode.output
      commentId: F:Timba.SacredTails.DialogSystem.DialogNode.output
      language: CSharp
      name:
        CSharp: output
        VB: output
      nameWithType:
        CSharp: DialogNode.output
        VB: DialogNode.output
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogNode.output
        VB: Timba.SacredTails.DialogSystem.DialogNode.output
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: output
        path: ''
        startLine: 21243
      syntax:
        content:
          CSharp: public DialogNode.Connection output
          VB: Public output As DialogNode.Connection
        return:
          type: Timba.SacredTails.DialogSystem.DialogNode.Connection
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogNode.dialogText
      commentId: F:Timba.SacredTails.DialogSystem.DialogNode.dialogText
      language: CSharp
      name:
        CSharp: dialogText
        VB: dialogText
      nameWithType:
        CSharp: DialogNode.dialogText
        VB: DialogNode.dialogText
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogNode.dialogText
        VB: Timba.SacredTails.DialogSystem.DialogNode.dialogText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: dialogText
        path: ''
        startLine: 21244
      syntax:
        content:
          CSharp: public string dialogText
          VB: Public dialogText As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogNode.randomAnswer
      commentId: F:Timba.SacredTails.DialogSystem.DialogNode.randomAnswer
      language: CSharp
      name:
        CSharp: randomAnswer
        VB: randomAnswer
      nameWithType:
        CSharp: DialogNode.randomAnswer
        VB: DialogNode.randomAnswer
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogNode.randomAnswer
        VB: Timba.SacredTails.DialogSystem.DialogNode.randomAnswer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: randomAnswer
        path: ''
        startLine: 21245
      syntax:
        content:
          CSharp: public bool randomAnswer
          VB: Public randomAnswer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogNode.sequentialAnswers
      commentId: F:Timba.SacredTails.DialogSystem.DialogNode.sequentialAnswers
      language: CSharp
      name:
        CSharp: sequentialAnswers
        VB: sequentialAnswers
      nameWithType:
        CSharp: DialogNode.sequentialAnswers
        VB: DialogNode.sequentialAnswers
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogNode.sequentialAnswers
        VB: Timba.SacredTails.DialogSystem.DialogNode.sequentialAnswers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: sequentialAnswers
        path: ''
        startLine: 21247
      syntax:
        content:
          CSharp: public bool sequentialAnswers
          VB: Public sequentialAnswers As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogNode.sequentialCurrentAnswerKey
      commentId: F:Timba.SacredTails.DialogSystem.DialogNode.sequentialCurrentAnswerKey
      language: CSharp
      name:
        CSharp: sequentialCurrentAnswerKey
        VB: sequentialCurrentAnswerKey
      nameWithType:
        CSharp: DialogNode.sequentialCurrentAnswerKey
        VB: DialogNode.sequentialCurrentAnswerKey
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogNode.sequentialCurrentAnswerKey
        VB: Timba.SacredTails.DialogSystem.DialogNode.sequentialCurrentAnswerKey
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: sequentialCurrentAnswerKey
        path: ''
        startLine: 21248
      syntax:
        content:
          CSharp: public string sequentialCurrentAnswerKey
          VB: Public sequentialCurrentAnswerKey As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogNode.Answers
      commentId: F:Timba.SacredTails.DialogSystem.DialogNode.Answers
      language: CSharp
      name:
        CSharp: Answers
        VB: Answers
      nameWithType:
        CSharp: DialogNode.Answers
        VB: DialogNode.Answers
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogNode.Answers
        VB: Timba.SacredTails.DialogSystem.DialogNode.Answers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: Answers
        path: ''
        startLine: 21249
      syntax:
        content:
          CSharp: public List<string> Answers
          VB: Public Answers As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.DialogSystem.DialogNode.Connection
    commentId: T:Timba.SacredTails.DialogSystem.DialogNode.Connection
    language: CSharp
    name:
      CSharp: DialogNode.Connection
      VB: DialogNode.Connection
    nameWithType:
      CSharp: DialogNode.Connection
      VB: DialogNode.Connection
    qualifiedName:
      CSharp: Timba.SacredTails.DialogSystem.DialogNode.Connection
      VB: Timba.SacredTails.DialogSystem.DialogNode.Connection
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.DialogSystem
    source:
      id: Connection
      path: ''
      startLine: 21240
    syntax:
      content:
        CSharp: public struct Connection
        VB: Public Structure Connection
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items: []
  - id: Timba.SacredTails.DialogSystem.DialogUI
    commentId: T:Timba.SacredTails.DialogSystem.DialogUI
    language: CSharp
    name:
      CSharp: DialogUI
      VB: DialogUI
    nameWithType:
      CSharp: DialogUI
      VB: DialogUI
    qualifiedName:
      CSharp: Timba.SacredTails.DialogSystem.DialogUI
      VB: Timba.SacredTails.DialogSystem.DialogUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.DialogSystem
    source:
      id: DialogUI
      path: ''
      startLine: 21264
    summary: "\nDraw necesary components to dialog system in player screen\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DialogUI : MonoBehaviour'
        VB: >-
          Public Class DialogUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.DialogSystem.DialogUI.answerFields
      commentId: F:Timba.SacredTails.DialogSystem.DialogUI.answerFields
      language: CSharp
      name:
        CSharp: answerFields
        VB: answerFields
      nameWithType:
        CSharp: DialogUI.answerFields
        VB: DialogUI.answerFields
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogUI.answerFields
        VB: Timba.SacredTails.DialogSystem.DialogUI.answerFields
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: answerFields
        path: ''
        startLine: 21272
      syntax:
        content:
          CSharp: public List<AnswerField> answerFields
          VB: Public answerFields As List(Of AnswerField)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.DialogSystem.AnswerField}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate
      commentId: P:Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate
      language: CSharp
      name:
        CSharp: IsPlayerDialogate
        VB: IsPlayerDialogate
      nameWithType:
        CSharp: DialogUI.IsPlayerDialogate
        VB: DialogUI.IsPlayerDialogate
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate
        VB: Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: IsPlayerDialogate
        path: ''
        startLine: 21275
      syntax:
        content:
          CSharp: public bool IsPlayerDialogate { get; set; }
          VB: Public Property IsPlayerDialogate As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogUI.ShowResponses(System.Collections.Generic.List{System.String},Timba.SacredTails.DialogSystem.Conversation,Action)
      commentId: M:Timba.SacredTails.DialogSystem.DialogUI.ShowResponses(System.Collections.Generic.List{System.String},Timba.SacredTails.DialogSystem.Conversation,Action)
      language: CSharp
      name:
        CSharp: ShowResponses(List<String>, Conversation, Action)
        VB: ShowResponses(List(Of String), Conversation, Action)
      nameWithType:
        CSharp: DialogUI.ShowResponses(List<String>, Conversation, Action)
        VB: DialogUI.ShowResponses(List(Of String), Conversation, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogUI.ShowResponses(System.Collections.Generic.List<System.String>, Timba.SacredTails.DialogSystem.Conversation, Action)
        VB: Timba.SacredTails.DialogSystem.DialogUI.ShowResponses(System.Collections.Generic.List(Of System.String), Timba.SacredTails.DialogSystem.Conversation, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: ShowResponses
        path: ''
        startLine: 21281
      syntax:
        content:
          CSharp: public void ShowResponses(List<string> responses, Conversation conversation, Action EndConversationCallback)
          VB: Public Sub ShowResponses(responses As List(Of String), conversation As Conversation, EndConversationCallback As Action)
        parameters:
        - id: responses
          type: System.Collections.Generic.List{System.String}
        - id: conversation
          type: Timba.SacredTails.DialogSystem.Conversation
        - id: EndConversationCallback
          type: Global.Action
      overload: Timba.SacredTails.DialogSystem.DialogUI.ShowResponses*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogUI.WriteText(System.String,Action,System.Boolean)
      commentId: M:Timba.SacredTails.DialogSystem.DialogUI.WriteText(System.String,Action,System.Boolean)
      language: CSharp
      name:
        CSharp: WriteText(String, Action, Boolean)
        VB: WriteText(String, Action, Boolean)
      nameWithType:
        CSharp: DialogUI.WriteText(String, Action, Boolean)
        VB: DialogUI.WriteText(String, Action, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogUI.WriteText(System.String, Action, System.Boolean)
        VB: Timba.SacredTails.DialogSystem.DialogUI.WriteText(System.String, Action, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: WriteText
        path: ''
        startLine: 21324
      syntax:
        content:
          CSharp: public void WriteText(string dialogText, Action OnEndWrite = null, bool isTextWithAnswer = false)
          VB: Public Sub WriteText(dialogText As String, OnEndWrite As Action = Nothing, isTextWithAnswer As Boolean = False)
        parameters:
        - id: dialogText
          type: System.String
        - id: OnEndWrite
          type: Global.Action
        - id: isTextWithAnswer
          type: System.Boolean
      overload: Timba.SacredTails.DialogSystem.DialogUI.WriteText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogUI.SkipDialog(System.Boolean)
      commentId: M:Timba.SacredTails.DialogSystem.DialogUI.SkipDialog(System.Boolean)
      language: CSharp
      name:
        CSharp: SkipDialog(Boolean)
        VB: SkipDialog(Boolean)
      nameWithType:
        CSharp: DialogUI.SkipDialog(Boolean)
        VB: DialogUI.SkipDialog(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogUI.SkipDialog(System.Boolean)
        VB: Timba.SacredTails.DialogSystem.DialogUI.SkipDialog(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: SkipDialog
        path: ''
        startLine: 21333
      syntax:
        content:
          CSharp: public void SkipDialog(bool forceSkip = false)
          VB: Public Sub SkipDialog(forceSkip As Boolean = False)
        parameters:
        - id: forceSkip
          type: System.Boolean
      overload: Timba.SacredTails.DialogSystem.DialogUI.SkipDialog*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.DialogSystem.DialogNodeEditor
    commentId: T:Timba.SacredTails.DialogSystem.DialogNodeEditor
    language: CSharp
    name:
      CSharp: DialogNodeEditor
      VB: DialogNodeEditor
    nameWithType:
      CSharp: DialogNodeEditor
      VB: DialogNodeEditor
    qualifiedName:
      CSharp: Timba.SacredTails.DialogSystem.DialogNodeEditor
      VB: Timba.SacredTails.DialogSystem.DialogNodeEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.DialogSystem
    source:
      id: DialogNodeEditor
      path: ''
      startLine: 21416
    syntax:
      content:
        CSharp: 'public class DialogNodeEditor : NodeEditor'
        VB: >-
          Public Class DialogNodeEditor

              Inherits NodeEditor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.DialogSystem.DialogNodeEditor.ScrollPos
      commentId: F:Timba.SacredTails.DialogSystem.DialogNodeEditor.ScrollPos
      language: CSharp
      name:
        CSharp: ScrollPos
        VB: ScrollPos
      nameWithType:
        CSharp: DialogNodeEditor.ScrollPos
        VB: DialogNodeEditor.ScrollPos
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogNodeEditor.ScrollPos
        VB: Timba.SacredTails.DialogSystem.DialogNodeEditor.ScrollPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: ScrollPos
        path: ''
        startLine: 21419
      syntax:
        content:
          CSharp: public Vector2 ScrollPos
          VB: Public ScrollPos As Vector2
        return:
          type: Global.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI
      commentId: M:Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI
      language: CSharp
      name:
        CSharp: OnBodyGUI()
        VB: OnBodyGUI()
      nameWithType:
        CSharp: DialogNodeEditor.OnBodyGUI()
        VB: DialogNodeEditor.OnBodyGUI()
      qualifiedName:
        CSharp: Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI()
        VB: Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.DialogSystem
      source:
        id: OnBodyGUI
        path: ''
        startLine: 21420
      syntax:
        content:
          CSharp: public override void OnBodyGUI()
          VB: Public Overrides Sub OnBodyGUI
      overload: Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: Timba.SacredTails.CharacterStyle
  commentId: N:Timba.SacredTails.CharacterStyle
  language: CSharp
  name:
    CSharp: Timba.SacredTails.CharacterStyle
    VB: Timba.SacredTails.CharacterStyle
  nameWithType:
    CSharp: Timba.SacredTails.CharacterStyle
    VB: Timba.SacredTails.CharacterStyle
  qualifiedName:
    CSharp: Timba.SacredTails.CharacterStyle
    VB: Timba.SacredTails.CharacterStyle
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter
    commentId: T:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter
    language: CSharp
    name:
      CSharp: BakeColorsInCharacter
      VB: BakeColorsInCharacter
    nameWithType:
      CSharp: BakeColorsInCharacter
      VB: BakeColorsInCharacter
    qualifiedName:
      CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter
      VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CharacterStyle
    source:
      id: BakeColorsInCharacter
      path: ''
      startLine: 31524
    summary: "\nThis component allow you to define the color of the NPC in the game\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BakeColorsInCharacter : MonoBehaviour'
        VB: >-
          Public Class BakeColorsInCharacter

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.characterRecolor
      commentId: F:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.characterRecolor
      language: CSharp
      name:
        CSharp: characterRecolor
        VB: characterRecolor
      nameWithType:
        CSharp: BakeColorsInCharacter.characterRecolor
        VB: BakeColorsInCharacter.characterRecolor
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.characterRecolor
        VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.characterRecolor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: characterRecolor
        path: ''
        startLine: 31526
      syntax:
        content:
          CSharp: public CharacterRecolor characterRecolor
          VB: Public characterRecolor As CharacterRecolor
        return:
          type: Timba.SacredTails.CharacterStyle.CharacterRecolor
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.materialReskins
      commentId: F:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.materialReskins
      language: CSharp
      name:
        CSharp: materialReskins
        VB: materialReskins
      nameWithType:
        CSharp: BakeColorsInCharacter.materialReskins
        VB: BakeColorsInCharacter.materialReskins
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.materialReskins
        VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.materialReskins
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: materialReskins
        path: ''
        startLine: 31527
      syntax:
        content:
          CSharp: public List<MaterialReskin> materialReskins
          VB: Public materialReskins As List(Of MaterialReskin)
        return:
          type: System.Collections.Generic.List{MaterialReskin}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.bodyStyle
      commentId: F:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.bodyStyle
      language: CSharp
      name:
        CSharp: bodyStyle
        VB: bodyStyle
      nameWithType:
        CSharp: BakeColorsInCharacter.bodyStyle
        VB: BakeColorsInCharacter.bodyStyle
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.bodyStyle
        VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.bodyStyle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: bodyStyle
        path: ''
        startLine: 31528
      syntax:
        content:
          CSharp: public BodyStyle bodyStyle
          VB: Public bodyStyle As BodyStyle
        return:
          type: Global.BodyStyle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Skin
      commentId: F:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Skin
      language: CSharp
      name:
        CSharp: Skin
        VB: Skin
      nameWithType:
        CSharp: BakeColorsInCharacter.Skin
        VB: BakeColorsInCharacter.Skin
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Skin
        VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Skin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: Skin
        path: ''
        startLine: 31529
      syntax:
        content:
          CSharp: public Color Skin
          VB: Public Skin As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Hair
      commentId: F:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Hair
      language: CSharp
      name:
        CSharp: Hair
        VB: Hair
      nameWithType:
        CSharp: BakeColorsInCharacter.Hair
        VB: BakeColorsInCharacter.Hair
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Hair
        VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Hair
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: Hair
        path: ''
        startLine: 31529
      syntax:
        content:
          CSharp: public Color Hair
          VB: Public Hair As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Primary
      commentId: F:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Primary
      language: CSharp
      name:
        CSharp: Primary
        VB: Primary
      nameWithType:
        CSharp: BakeColorsInCharacter.Primary
        VB: BakeColorsInCharacter.Primary
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Primary
        VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Primary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: Primary
        path: ''
        startLine: 31529
      syntax:
        content:
          CSharp: public Color Primary
          VB: Public Primary As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Secondary
      commentId: F:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Secondary
      language: CSharp
      name:
        CSharp: Secondary
        VB: Secondary
      nameWithType:
        CSharp: BakeColorsInCharacter.Secondary
        VB: BakeColorsInCharacter.Secondary
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Secondary
        VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Secondary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: Secondary
        path: ''
        startLine: 31529
      syntax:
        content:
          CSharp: public Color Secondary
          VB: Public Secondary As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Details
      commentId: F:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Details
      language: CSharp
      name:
        CSharp: Details
        VB: Details
      nameWithType:
        CSharp: BakeColorsInCharacter.Details
        VB: BakeColorsInCharacter.Details
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Details
        VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.Details
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: Details
        path: ''
        startLine: 31529
      syntax:
        content:
          CSharp: public Color Details
          VB: Public Details As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.HairStyle
      commentId: F:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.HairStyle
      language: CSharp
      name:
        CSharp: HairStyle
        VB: HairStyle
      nameWithType:
        CSharp: BakeColorsInCharacter.HairStyle
        VB: BakeColorsInCharacter.HairStyle
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.HairStyle
        VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.HairStyle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: HairStyle
        path: ''
        startLine: 31531
      syntax:
        content:
          CSharp: public int HairStyle
          VB: Public HairStyle As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual
      commentId: M:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual
      language: CSharp
      name:
        CSharp: UpdateVisual()
        VB: UpdateVisual()
      nameWithType:
        CSharp: BakeColorsInCharacter.UpdateVisual()
        VB: BakeColorsInCharacter.UpdateVisual()
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual()
        VB: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: UpdateVisual
        path: ''
        startLine: 31542
      syntax:
        content:
          CSharp: public void UpdateVisual()
          VB: Public Sub UpdateVisual
      overload: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.CharacterStyle.CharacterRecolor
    commentId: T:Timba.SacredTails.CharacterStyle.CharacterRecolor
    language: CSharp
    name:
      CSharp: CharacterRecolor
      VB: CharacterRecolor
    nameWithType:
      CSharp: CharacterRecolor
      VB: CharacterRecolor
    qualifiedName:
      CSharp: Timba.SacredTails.CharacterStyle.CharacterRecolor
      VB: Timba.SacredTails.CharacterStyle.CharacterRecolor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CharacterStyle
    source:
      id: CharacterRecolor
      path: ''
      startLine: 31614
    summary: "\nThis component controls the recolor of a character\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CharacterRecolor : MonoBehaviour'
        VB: >-
          Public Class CharacterRecolor

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CharacterStyle.CharacterRecolor.Init(Material)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterRecolor.Init(Material)
      language: CSharp
      name:
        CSharp: Init(Material)
        VB: Init(Material)
      nameWithType:
        CSharp: CharacterRecolor.Init(Material)
        VB: CharacterRecolor.Init(Material)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterRecolor.Init(Material)
        VB: Timba.SacredTails.CharacterStyle.CharacterRecolor.Init(Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: Init
        path: ''
        startLine: 31627
      syntax:
        content:
          CSharp: public void Init(Material target)
          VB: Public Sub Init(target As Material)
        parameters:
        - id: target
          type: Global.Material
      overload: Timba.SacredTails.CharacterStyle.CharacterRecolor.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors(Timba.SacredTails.CharacterStyle.PartsOfCharacter,Color)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors(Timba.SacredTails.CharacterStyle.PartsOfCharacter,Color)
      language: CSharp
      name:
        CSharp: ChangeMaterialColors(PartsOfCharacter, Color)
        VB: ChangeMaterialColors(PartsOfCharacter, Color)
      nameWithType:
        CSharp: CharacterRecolor.ChangeMaterialColors(PartsOfCharacter, Color)
        VB: CharacterRecolor.ChangeMaterialColors(PartsOfCharacter, Color)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors(Timba.SacredTails.CharacterStyle.PartsOfCharacter, Color)
        VB: Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors(Timba.SacredTails.CharacterStyle.PartsOfCharacter, Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: ChangeMaterialColors
        path: ''
        startLine: 31636
      syntax:
        content:
          CSharp: public void ChangeMaterialColors(PartsOfCharacter part, Color color)
          VB: Public Sub ChangeMaterialColors(part As PartsOfCharacter, color As Color)
        parameters:
        - id: part
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
        - id: color
          type: Global.Color
      overload: Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.CharacterStyle.CharacterStyleButton
    commentId: T:Timba.SacredTails.CharacterStyle.CharacterStyleButton
    language: CSharp
    name:
      CSharp: CharacterStyleButton
      VB: CharacterStyleButton
    nameWithType:
      CSharp: CharacterStyleButton
      VB: CharacterStyleButton
    qualifiedName:
      CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleButton
      VB: Timba.SacredTails.CharacterStyle.CharacterStyleButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CharacterStyle
    source:
      id: CharacterStyleButton
      path: ''
      startLine: 31655
    summary: "\nUI element that represents a part of character for edition\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CharacterStyleButton : MonoBehaviour'
        VB: >-
          Public Class CharacterStyleButton

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn(System.Int32,System.Boolean)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateBtn(Int32, Boolean)
        VB: UpdateBtn(Int32, Boolean)
      nameWithType:
        CSharp: CharacterStyleButton.UpdateBtn(Int32, Boolean)
        VB: CharacterStyleButton.UpdateBtn(Int32, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn(System.Int32, System.Boolean)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: UpdateBtn
        path: ''
        startLine: 31667
      syntax:
        content:
          CSharp: public void UpdateBtn(int index, bool enable)
          VB: Public Sub UpdateBtn(index As Integer, enable As Boolean)
        parameters:
        - id: index
          type: System.Int32
        - id: enable
          type: System.Boolean
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.CharacterStyle.CharacterStyleController
    commentId: T:Timba.SacredTails.CharacterStyle.CharacterStyleController
    language: CSharp
    name:
      CSharp: CharacterStyleController
      VB: CharacterStyleController
    nameWithType:
      CSharp: CharacterStyleController
      VB: CharacterStyleController
    qualifiedName:
      CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController
      VB: Timba.SacredTails.CharacterStyle.CharacterStyleController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CharacterStyle
    source:
      id: CharacterStyleController
      path: ''
      startLine: 31699
    summary: "\nBehavior of panel Character Style Controller\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CharacterStyleController : MonoBehaviour'
        VB: >-
          Public Class CharacterStyleController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.characterRecolor
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.characterRecolor
      language: CSharp
      name:
        CSharp: characterRecolor
        VB: characterRecolor
      nameWithType:
        CSharp: CharacterStyleController.characterRecolor
        VB: CharacterStyleController.characterRecolor
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.characterRecolor
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.characterRecolor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: characterRecolor
        path: ''
        startLine: 31703
      syntax:
        content:
          CSharp: public CharacterRecolor characterRecolor
          VB: Public characterRecolor As CharacterRecolor
        return:
          type: Timba.SacredTails.CharacterStyle.CharacterRecolor
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.styleDB
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.styleDB
      language: CSharp
      name:
        CSharp: styleDB
        VB: styleDB
      nameWithType:
        CSharp: CharacterStyleController.styleDB
        VB: CharacterStyleController.styleDB
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.styleDB
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.styleDB
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: styleDB
        path: ''
        startLine: 31704
      syntax:
        content:
          CSharp: public CharacterStyleDatabase styleDB
          VB: Public styleDB As CharacterStyleDatabase
        return:
          type: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.title
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.title
      language: CSharp
      name:
        CSharp: title
        VB: title
      nameWithType:
        CSharp: CharacterStyleController.title
        VB: CharacterStyleController.title
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.title
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.title
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: title
        path: ''
        startLine: 31705
      syntax:
        content:
          CSharp: public TMP_Text title
          VB: Public title As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.cameraBackgroundColor
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.cameraBackgroundColor
      language: CSharp
      name:
        CSharp: cameraBackgroundColor
        VB: cameraBackgroundColor
      nameWithType:
        CSharp: CharacterStyleController.cameraBackgroundColor
        VB: CharacterStyleController.cameraBackgroundColor
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.cameraBackgroundColor
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.cameraBackgroundColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: cameraBackgroundColor
        path: ''
        startLine: 31706
      syntax:
        content:
          CSharp: public Color cameraBackgroundColor
          VB: Public cameraBackgroundColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.partRowsParent
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.partRowsParent
      language: CSharp
      name:
        CSharp: partRowsParent
        VB: partRowsParent
      nameWithType:
        CSharp: CharacterStyleController.partRowsParent
        VB: CharacterStyleController.partRowsParent
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.partRowsParent
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.partRowsParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: partRowsParent
        path: ''
        startLine: 31710
      syntax:
        content:
          CSharp: public Transform partRowsParent
          VB: Public partRowsParent As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.partRowPrefab
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.partRowPrefab
      language: CSharp
      name:
        CSharp: partRowPrefab
        VB: partRowPrefab
      nameWithType:
        CSharp: CharacterStyleController.partRowPrefab
        VB: CharacterStyleController.partRowPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.partRowPrefab
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.partRowPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: partRowPrefab
        path: ''
        startLine: 31711
      syntax:
        content:
          CSharp: public Transform partRowPrefab
          VB: Public partRowPrefab As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.partSlotUnlockedPrefab
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.partSlotUnlockedPrefab
      language: CSharp
      name:
        CSharp: partSlotUnlockedPrefab
        VB: partSlotUnlockedPrefab
      nameWithType:
        CSharp: CharacterStyleController.partSlotUnlockedPrefab
        VB: CharacterStyleController.partSlotUnlockedPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.partSlotUnlockedPrefab
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.partSlotUnlockedPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: partSlotUnlockedPrefab
        path: ''
        startLine: 31712
      syntax:
        content:
          CSharp: public Transform partSlotUnlockedPrefab
          VB: Public partSlotUnlockedPrefab As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.partSlotLockedPrefab
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.partSlotLockedPrefab
      language: CSharp
      name:
        CSharp: partSlotLockedPrefab
        VB: partSlotLockedPrefab
      nameWithType:
        CSharp: CharacterStyleController.partSlotLockedPrefab
        VB: CharacterStyleController.partSlotLockedPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.partSlotLockedPrefab
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.partSlotLockedPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: partSlotLockedPrefab
        path: ''
        startLine: 31713
      syntax:
        content:
          CSharp: public Transform partSlotLockedPrefab
          VB: Public partSlotLockedPrefab As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorRowsParent
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.colorRowsParent
      language: CSharp
      name:
        CSharp: colorRowsParent
        VB: colorRowsParent
      nameWithType:
        CSharp: CharacterStyleController.colorRowsParent
        VB: CharacterStyleController.colorRowsParent
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorRowsParent
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorRowsParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: colorRowsParent
        path: ''
        startLine: 31715
      syntax:
        content:
          CSharp: public Transform colorRowsParent
          VB: Public colorRowsParent As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorRowPrefab
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.colorRowPrefab
      language: CSharp
      name:
        CSharp: colorRowPrefab
        VB: colorRowPrefab
      nameWithType:
        CSharp: CharacterStyleController.colorRowPrefab
        VB: CharacterStyleController.colorRowPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorRowPrefab
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorRowPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: colorRowPrefab
        path: ''
        startLine: 31716
      syntax:
        content:
          CSharp: public Transform colorRowPrefab
          VB: Public colorRowPrefab As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotUnlockedPrefab
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotUnlockedPrefab
      language: CSharp
      name:
        CSharp: colorSlotUnlockedPrefab
        VB: colorSlotUnlockedPrefab
      nameWithType:
        CSharp: CharacterStyleController.colorSlotUnlockedPrefab
        VB: CharacterStyleController.colorSlotUnlockedPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotUnlockedPrefab
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotUnlockedPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: colorSlotUnlockedPrefab
        path: ''
        startLine: 31717
      syntax:
        content:
          CSharp: public Transform colorSlotUnlockedPrefab
          VB: Public colorSlotUnlockedPrefab As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotLockedPrefab
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotLockedPrefab
      language: CSharp
      name:
        CSharp: colorSlotLockedPrefab
        VB: colorSlotLockedPrefab
      nameWithType:
        CSharp: CharacterStyleController.colorSlotLockedPrefab
        VB: CharacterStyleController.colorSlotLockedPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotLockedPrefab
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotLockedPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: colorSlotLockedPrefab
        path: ''
        startLine: 31718
      syntax:
        content:
          CSharp: public Transform colorSlotLockedPrefab
          VB: Public colorSlotLockedPrefab As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotEmptyPrefab
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotEmptyPrefab
      language: CSharp
      name:
        CSharp: colorSlotEmptyPrefab
        VB: colorSlotEmptyPrefab
      nameWithType:
        CSharp: CharacterStyleController.colorSlotEmptyPrefab
        VB: CharacterStyleController.colorSlotEmptyPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotEmptyPrefab
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.colorSlotEmptyPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: colorSlotEmptyPrefab
        path: ''
        startLine: 31719
      syntax:
        content:
          CSharp: public Transform colorSlotEmptyPrefab
          VB: Public colorSlotEmptyPrefab As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.numberOfColumnsPerRow
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.numberOfColumnsPerRow
      language: CSharp
      name:
        CSharp: numberOfColumnsPerRow
        VB: numberOfColumnsPerRow
      nameWithType:
        CSharp: CharacterStyleController.numberOfColumnsPerRow
        VB: CharacterStyleController.numberOfColumnsPerRow
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.numberOfColumnsPerRow
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.numberOfColumnsPerRow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: numberOfColumnsPerRow
        path: ''
        startLine: 31722
      syntax:
        content:
          CSharp: public int numberOfColumnsPerRow
          VB: Public numberOfColumnsPerRow As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.lobbyCamera
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.lobbyCamera
      language: CSharp
      name:
        CSharp: lobbyCamera
        VB: lobbyCamera
      nameWithType:
        CSharp: CharacterStyleController.lobbyCamera
        VB: CharacterStyleController.lobbyCamera
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.lobbyCamera
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.lobbyCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: lobbyCamera
        path: ''
        startLine: 31727
      syntax:
        content:
          CSharp: public CinemachineVirtualCamera lobbyCamera
          VB: Public lobbyCamera As CinemachineVirtualCamera
        return:
          type: Global.CinemachineVirtualCamera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.styleCamera
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.styleCamera
      language: CSharp
      name:
        CSharp: styleCamera
        VB: styleCamera
      nameWithType:
        CSharp: CharacterStyleController.styleCamera
        VB: CharacterStyleController.styleCamera
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.styleCamera
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.styleCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: styleCamera
        path: ''
        startLine: 31728
      syntax:
        content:
          CSharp: public CinemachineVirtualCamera styleCamera
          VB: Public styleCamera As CinemachineVirtualCamera
        return:
          type: Global.CinemachineVirtualCamera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.layerMaskForStyle
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.layerMaskForStyle
      language: CSharp
      name:
        CSharp: layerMaskForStyle
        VB: layerMaskForStyle
      nameWithType:
        CSharp: CharacterStyleController.layerMaskForStyle
        VB: CharacterStyleController.layerMaskForStyle
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.layerMaskForStyle
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.layerMaskForStyle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: layerMaskForStyle
        path: ''
        startLine: 31729
      syntax:
        content:
          CSharp: public LayerMask layerMaskForStyle
          VB: Public layerMaskForStyle As LayerMask
        return:
          type: Global.LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.playerMouseRotator
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleController.playerMouseRotator
      language: CSharp
      name:
        CSharp: playerMouseRotator
        VB: playerMouseRotator
      nameWithType:
        CSharp: CharacterStyleController.playerMouseRotator
        VB: CharacterStyleController.playerMouseRotator
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.playerMouseRotator
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.playerMouseRotator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: playerMouseRotator
        path: ''
        startLine: 31730
      syntax:
        content:
          CSharp: public PlayerMouseRotator playerMouseRotator
          VB: Public playerMouseRotator As PlayerMouseRotator
        return:
          type: Timba.SacredTails.CharacterStyle.PlayerMouseRotator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: CharacterStyleController.Awake()
        VB: CharacterStyleController.Awake()
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake()
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: Awake
        path: ''
        startLine: 31742
      syntax:
        content:
          CSharp: public void Awake()
          VB: Public Sub Awake
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.Init
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: CharacterStyleController.Init()
        VB: CharacterStyleController.Init()
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.Init()
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: Init
        path: ''
        startLine: 31760
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: CharacterStyleController.Hide()
        VB: CharacterStyleController.Hide()
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide()
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: Hide
        path: ''
        startLine: 31788
      syntax:
        content:
          CSharp: public void Hide()
          VB: Public Sub Hide
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext(System.Boolean)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext(System.Boolean)
      language: CSharp
      name:
        CSharp: SelectPartNext(Boolean)
        VB: SelectPartNext(Boolean)
      nameWithType:
        CSharp: CharacterStyleController.SelectPartNext(Boolean)
        VB: CharacterStyleController.SelectPartNext(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext(System.Boolean)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: SelectPartNext
        path: ''
        startLine: 31805
      syntax:
        content:
          CSharp: public void SelectPartNext(bool left)
          VB: Public Sub SelectPartNext(left As Boolean)
        parameters:
        - id: left
          type: System.Boolean
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart(System.Int32)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart(System.Int32)
      language: CSharp
      name:
        CSharp: OnSelectPart(Int32)
        VB: OnSelectPart(Int32)
      nameWithType:
        CSharp: CharacterStyleController.OnSelectPart(Int32)
        VB: CharacterStyleController.OnSelectPart(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart(System.Int32)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: OnSelectPart
        path: ''
        startLine: 31815
      syntax:
        content:
          CSharp: public void OnSelectPart(int partSelected)
          VB: Public Sub OnSelectPart(partSelected As Integer)
        parameters:
        - id: partSelected
          type: System.Int32
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      language: CSharp
      name:
        CSharp: ChangeTitle(PartsOfCharacter)
        VB: ChangeTitle(PartsOfCharacter)
      nameWithType:
        CSharp: CharacterStyleController.ChangeTitle(PartsOfCharacter)
        VB: CharacterStyleController.ChangeTitle(PartsOfCharacter)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: ChangeTitle
        path: ''
        startLine: 31848
      syntax:
        content:
          CSharp: public string ChangeTitle(PartsOfCharacter part)
          VB: Public Function ChangeTitle(part As PartsOfCharacter) As String
        parameters:
        - id: part
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
        return:
          type: System.String
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      language: CSharp
      name:
        CSharp: ShowCategory(PartsOfCharacter)
        VB: ShowCategory(PartsOfCharacter)
      nameWithType:
        CSharp: CharacterStyleController.ShowCategory(PartsOfCharacter)
        VB: CharacterStyleController.ShowCategory(PartsOfCharacter)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: ShowCategory
        path: ''
        startLine: 31863
      syntax:
        content:
          CSharp: public void ShowCategory(PartsOfCharacter part)
          VB: Public Sub ShowCategory(part As PartsOfCharacter)
        parameters:
        - id: part
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit
      language: CSharp
      name:
        CSharp: GenerateRandomOutfit()
        VB: GenerateRandomOutfit()
      nameWithType:
        CSharp: CharacterStyleController.GenerateRandomOutfit()
        VB: CharacterStyleController.GenerateRandomOutfit()
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit()
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: GenerateRandomOutfit
        path: ''
        startLine: 31883
      summary: "\nThis fill all necesary data for character style with random values\n"
      example: []
      syntax:
        content:
          CSharp: public void GenerateRandomOutfit()
          VB: Public Sub GenerateRandomOutfit
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle
      language: CSharp
      name:
        CSharp: ApplyLastStyle()
        VB: ApplyLastStyle()
      nameWithType:
        CSharp: CharacterStyleController.ApplyLastStyle()
        VB: CharacterStyleController.ApplyLastStyle()
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle()
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: ApplyLastStyle
        path: ''
        startLine: 31906
      summary: "\nThis download the character style data and apply to the model in the game\n"
      example: []
      syntax:
        content:
          CSharp: public void ApplyLastStyle()
          VB: Public Sub ApplyLastStyle
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender
      language: CSharp
      name:
        CSharp: UpdateGender()
        VB: UpdateGender()
      nameWithType:
        CSharp: CharacterStyleController.UpdateGender()
        VB: CharacterStyleController.UpdateGender()
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender()
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: UpdateGender
        path: ''
        startLine: 31934
      summary: "\nToggle betwen male and female model\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateGender()
          VB: Public Sub UpdateGender
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter(Timba.SacredTails.CharacterStyle.PartsOfCharacter,Color,System.Boolean)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter(Timba.SacredTails.CharacterStyle.PartsOfCharacter,Color,System.Boolean)
      language: CSharp
      name:
        CSharp: UpdateColorPartOfCharacter(PartsOfCharacter, Color, Boolean)
        VB: UpdateColorPartOfCharacter(PartsOfCharacter, Color, Boolean)
      nameWithType:
        CSharp: CharacterStyleController.UpdateColorPartOfCharacter(PartsOfCharacter, Color, Boolean)
        VB: CharacterStyleController.UpdateColorPartOfCharacter(PartsOfCharacter, Color, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter(Timba.SacredTails.CharacterStyle.PartsOfCharacter, Color, System.Boolean)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter(Timba.SacredTails.CharacterStyle.PartsOfCharacter, Color, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: UpdateColorPartOfCharacter
        path: ''
        startLine: 31948
      syntax:
        content:
          CSharp: public static void UpdateColorPartOfCharacter(PartsOfCharacter part, Color color, bool isFill = true)
          VB: Public Shared Sub UpdateColorPartOfCharacter(part As PartsOfCharacter, color As Color, isFill As Boolean = True)
        parameters:
        - id: part
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
        - id: color
          type: Global.Color
        - id: isFill
          type: System.Boolean
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter(Timba.SacredTails.CharacterStyle.PartsOfCharacter,System.Int32)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter(Timba.SacredTails.CharacterStyle.PartsOfCharacter,System.Int32)
      language: CSharp
      name:
        CSharp: UpdatePartOfCharacter(PartsOfCharacter, Int32)
        VB: UpdatePartOfCharacter(PartsOfCharacter, Int32)
      nameWithType:
        CSharp: CharacterStyleController.UpdatePartOfCharacter(PartsOfCharacter, Int32)
        VB: CharacterStyleController.UpdatePartOfCharacter(PartsOfCharacter, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter(Timba.SacredTails.CharacterStyle.PartsOfCharacter, System.Int32)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter(Timba.SacredTails.CharacterStyle.PartsOfCharacter, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: UpdatePartOfCharacter
        path: ''
        startLine: 31956
      syntax:
        content:
          CSharp: public static void UpdatePartOfCharacter(PartsOfCharacter part, int partIndex)
          VB: Public Shared Sub UpdatePartOfCharacter(part As PartsOfCharacter, partIndex As Integer)
        parameters:
        - id: part
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
        - id: partIndex
          type: System.Int32
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle
      language: CSharp
      name:
        CSharp: UpdateCharacterStyle()
        VB: UpdateCharacterStyle()
      nameWithType:
        CSharp: CharacterStyleController.UpdateCharacterStyle()
        VB: CharacterStyleController.UpdateCharacterStyle()
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle()
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: UpdateCharacterStyle
        path: ''
        startLine: 31964
      syntax:
        content:
          CSharp: public void UpdateCharacterStyle()
          VB: Public Sub UpdateCharacterStyle
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart(System.Int32)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart(System.Int32)
      language: CSharp
      name:
        CSharp: ChangeHairBodyPart(Int32)
        VB: ChangeHairBodyPart(Int32)
      nameWithType:
        CSharp: CharacterStyleController.ChangeHairBodyPart(Int32)
        VB: CharacterStyleController.ChangeHairBodyPart(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart(System.Int32)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: ChangeHairBodyPart
        path: ''
        startLine: 31972
      summary: "\nShow a different part of hair in the model\n"
      example: []
      syntax:
        content:
          CSharp: public void ChangeHairBodyPart(int targetPart)
          VB: Public Sub ChangeHairBodyPart(targetPart As Integer)
        parameters:
        - id: targetPart
          type: System.Int32
          description: ''
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors
      language: CSharp
      name:
        CSharp: PopulateSkinColors()
        VB: PopulateSkinColors()
      nameWithType:
        CSharp: CharacterStyleController.PopulateSkinColors()
        VB: CharacterStyleController.PopulateSkinColors()
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors()
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: PopulateSkinColors
        path: ''
        startLine: 31990
      summary: "\nFill panel of color options using a scriptable object\n"
      example: []
      syntax:
        content:
          CSharp: public void PopulateSkinColors()
          VB: Public Sub PopulateSkinColors
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase
    commentId: T:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase
    language: CSharp
    name:
      CSharp: CharacterStyleDatabase
      VB: CharacterStyleDatabase
    nameWithType:
      CSharp: CharacterStyleDatabase
      VB: CharacterStyleDatabase
    qualifiedName:
      CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase
      VB: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CharacterStyle
    source:
      id: CharacterStyleDatabase
      path: ''
      startLine: 32050
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class CharacterStyleDatabase : ScriptableObject
        VB: >-
          <Serializable>

          Public Class CharacterStyleDatabase

              Inherits ScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.colorDB
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.colorDB
      language: CSharp
      name:
        CSharp: colorDB
        VB: colorDB
      nameWithType:
        CSharp: CharacterStyleDatabase.colorDB
        VB: CharacterStyleDatabase.colorDB
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.colorDB
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.colorDB
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: colorDB
        path: ''
        startLine: 32056
      syntax:
        content:
          CSharp: public List<ColorIdRelation> colorDB
          VB: Public colorDB As List(Of ColorIdRelation)
        return:
          type: System.Collections.Generic.List{ColorIdRelation}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.partDB
      commentId: F:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.partDB
      language: CSharp
      name:
        CSharp: partDB
        VB: partDB
      nameWithType:
        CSharp: CharacterStyleDatabase.partDB
        VB: CharacterStyleDatabase.partDB
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.partDB
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.partDB
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: partDB
        path: ''
        startLine: 32057
      syntax:
        content:
          CSharp: public List<PartIdRelation> partDB
          VB: Public partDB As List(Of PartIdRelation)
        return:
          type: System.Collections.Generic.List{PartIdRelation}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById(System.Int32,Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById(System.Int32,Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      language: CSharp
      name:
        CSharp: GetColorById(Int32, PartsOfCharacter)
        VB: GetColorById(Int32, PartsOfCharacter)
      nameWithType:
        CSharp: CharacterStyleDatabase.GetColorById(Int32, PartsOfCharacter)
        VB: CharacterStyleDatabase.GetColorById(Int32, PartsOfCharacter)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById(System.Int32, Timba.SacredTails.CharacterStyle.PartsOfCharacter)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById(System.Int32, Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: GetColorById
        path: ''
        startLine: 32068
      syntax:
        content:
          CSharp: public ColorIdRelation GetColorById(int id, PartsOfCharacter slotType)
          VB: Public Function GetColorById(id As Integer, slotType As PartsOfCharacter) As ColorIdRelation
        parameters:
        - id: id
          type: System.Int32
        - id: slotType
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
        return:
          type: Global.ColorIdRelation
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      language: CSharp
      name:
        CSharp: GetColorsByPartType(PartsOfCharacter)
        VB: GetColorsByPartType(PartsOfCharacter)
      nameWithType:
        CSharp: CharacterStyleDatabase.GetColorsByPartType(PartsOfCharacter)
        VB: CharacterStyleDatabase.GetColorsByPartType(PartsOfCharacter)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: GetColorsByPartType
        path: ''
        startLine: 32073
      syntax:
        content:
          CSharp: public List<ColorIdRelation> GetColorsByPartType(PartsOfCharacter slotType)
          VB: Public Function GetColorsByPartType(slotType As PartsOfCharacter) As List(Of ColorIdRelation)
        parameters:
        - id: slotType
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
        return:
          type: System.Collections.Generic.List{ColorIdRelation}
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById(System.Int32,Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById(System.Int32,Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      language: CSharp
      name:
        CSharp: GetPartById(Int32, PartsOfCharacter)
        VB: GetPartById(Int32, PartsOfCharacter)
      nameWithType:
        CSharp: CharacterStyleDatabase.GetPartById(Int32, PartsOfCharacter)
        VB: CharacterStyleDatabase.GetPartById(Int32, PartsOfCharacter)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById(System.Int32, Timba.SacredTails.CharacterStyle.PartsOfCharacter)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById(System.Int32, Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: GetPartById
        path: ''
        startLine: 32080
      syntax:
        content:
          CSharp: public PartIdRelation GetPartById(int id, PartsOfCharacter slotType)
          VB: Public Function GetPartById(id As Integer, slotType As PartsOfCharacter) As PartIdRelation
        parameters:
        - id: id
          type: System.Int32
        - id: slotType
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
        return:
          type: Global.PartIdRelation
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      language: CSharp
      name:
        CSharp: GetPartsByType(PartsOfCharacter)
        VB: GetPartsByType(PartsOfCharacter)
      nameWithType:
        CSharp: CharacterStyleDatabase.GetPartsByType(PartsOfCharacter)
        VB: CharacterStyleDatabase.GetPartsByType(PartsOfCharacter)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType(Timba.SacredTails.CharacterStyle.PartsOfCharacter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: GetPartsByType
        path: ''
        startLine: 32085
      syntax:
        content:
          CSharp: public List<PartIdRelation> GetPartsByType(PartsOfCharacter slotType)
          VB: Public Function GetPartsByType(slotType As PartsOfCharacter) As List(Of PartIdRelation)
        parameters:
        - id: slotType
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
        return:
          type: System.Collections.Generic.List{PartIdRelation}
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate
      commentId: M:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate
      language: CSharp
      name:
        CSharp: OnValidate()
        VB: OnValidate()
      nameWithType:
        CSharp: CharacterStyleDatabase.OnValidate()
        VB: CharacterStyleDatabase.OnValidate()
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate()
        VB: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: OnValidate
        path: ''
        startLine: 32091
      syntax:
        content:
          CSharp: public void OnValidate()
          VB: Public Sub OnValidate
      overload: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter
    commentId: T:Timba.SacredTails.CharacterStyle.PartsOfCharacter
    language: CSharp
    name:
      CSharp: PartsOfCharacter
      VB: PartsOfCharacter
    nameWithType:
      CSharp: PartsOfCharacter
      VB: PartsOfCharacter
    qualifiedName:
      CSharp: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      VB: Timba.SacredTails.CharacterStyle.PartsOfCharacter
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CharacterStyle
    source:
      id: PartsOfCharacter
      path: ''
      startLine: 32134
    syntax:
      content:
        CSharp: public enum PartsOfCharacter
        VB: Public Enum PartsOfCharacter
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter.SKIN
      commentId: F:Timba.SacredTails.CharacterStyle.PartsOfCharacter.SKIN
      language: CSharp
      name:
        CSharp: SKIN
        VB: SKIN
      nameWithType:
        CSharp: PartsOfCharacter.SKIN
        VB: PartsOfCharacter.SKIN
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PartsOfCharacter.SKIN
        VB: Timba.SacredTails.CharacterStyle.PartsOfCharacter.SKIN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: SKIN
        path: ''
        startLine: 32136
      syntax:
        content:
          CSharp: SKIN = 0
          VB: SKIN = 0
        return:
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter.HAIR
      commentId: F:Timba.SacredTails.CharacterStyle.PartsOfCharacter.HAIR
      language: CSharp
      name:
        CSharp: HAIR
        VB: HAIR
      nameWithType:
        CSharp: PartsOfCharacter.HAIR
        VB: PartsOfCharacter.HAIR
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PartsOfCharacter.HAIR
        VB: Timba.SacredTails.CharacterStyle.PartsOfCharacter.HAIR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: HAIR
        path: ''
        startLine: 32137
      syntax:
        content:
          CSharp: HAIR = 1
          VB: HAIR = 1
        return:
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter.PRIMARY_COLOR
      commentId: F:Timba.SacredTails.CharacterStyle.PartsOfCharacter.PRIMARY_COLOR
      language: CSharp
      name:
        CSharp: PRIMARY_COLOR
        VB: PRIMARY_COLOR
      nameWithType:
        CSharp: PartsOfCharacter.PRIMARY_COLOR
        VB: PartsOfCharacter.PRIMARY_COLOR
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PartsOfCharacter.PRIMARY_COLOR
        VB: Timba.SacredTails.CharacterStyle.PartsOfCharacter.PRIMARY_COLOR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: PRIMARY_COLOR
        path: ''
        startLine: 32138
      syntax:
        content:
          CSharp: PRIMARY_COLOR = 2
          VB: PRIMARY_COLOR = 2
        return:
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter.LEGS
      commentId: F:Timba.SacredTails.CharacterStyle.PartsOfCharacter.LEGS
      language: CSharp
      name:
        CSharp: LEGS
        VB: LEGS
      nameWithType:
        CSharp: PartsOfCharacter.LEGS
        VB: PartsOfCharacter.LEGS
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PartsOfCharacter.LEGS
        VB: Timba.SacredTails.CharacterStyle.PartsOfCharacter.LEGS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: LEGS
        path: ''
        startLine: 32139
      syntax:
        content:
          CSharp: LEGS = 3
          VB: LEGS = 3
        return:
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter.HANDS
      commentId: F:Timba.SacredTails.CharacterStyle.PartsOfCharacter.HANDS
      language: CSharp
      name:
        CSharp: HANDS
        VB: HANDS
      nameWithType:
        CSharp: PartsOfCharacter.HANDS
        VB: PartsOfCharacter.HANDS
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PartsOfCharacter.HANDS
        VB: Timba.SacredTails.CharacterStyle.PartsOfCharacter.HANDS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: HANDS
        path: ''
        startLine: 32140
      syntax:
        content:
          CSharp: HANDS = 4
          VB: HANDS = 4
        return:
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter.SECONDARY_COLOR
      commentId: F:Timba.SacredTails.CharacterStyle.PartsOfCharacter.SECONDARY_COLOR
      language: CSharp
      name:
        CSharp: SECONDARY_COLOR
        VB: SECONDARY_COLOR
      nameWithType:
        CSharp: PartsOfCharacter.SECONDARY_COLOR
        VB: PartsOfCharacter.SECONDARY_COLOR
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PartsOfCharacter.SECONDARY_COLOR
        VB: Timba.SacredTails.CharacterStyle.PartsOfCharacter.SECONDARY_COLOR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: SECONDARY_COLOR
        path: ''
        startLine: 32141
      syntax:
        content:
          CSharp: SECONDARY_COLOR = 5
          VB: SECONDARY_COLOR = 5
        return:
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter.DETAILS
      commentId: F:Timba.SacredTails.CharacterStyle.PartsOfCharacter.DETAILS
      language: CSharp
      name:
        CSharp: DETAILS
        VB: DETAILS
      nameWithType:
        CSharp: PartsOfCharacter.DETAILS
        VB: PartsOfCharacter.DETAILS
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PartsOfCharacter.DETAILS
        VB: Timba.SacredTails.CharacterStyle.PartsOfCharacter.DETAILS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: DETAILS
        path: ''
        startLine: 32142
      syntax:
        content:
          CSharp: DETAILS = 6
          VB: DETAILS = 6
        return:
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter.COLORS
      commentId: F:Timba.SacredTails.CharacterStyle.PartsOfCharacter.COLORS
      language: CSharp
      name:
        CSharp: COLORS
        VB: COLORS
      nameWithType:
        CSharp: PartsOfCharacter.COLORS
        VB: PartsOfCharacter.COLORS
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PartsOfCharacter.COLORS
        VB: Timba.SacredTails.CharacterStyle.PartsOfCharacter.COLORS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: COLORS
        path: ''
        startLine: 32143
      syntax:
        content:
          CSharp: COLORS = 7
          VB: COLORS = 7
        return:
          type: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Timba.SacredTails.CharacterStyle.PlayerMouseRotator
    commentId: T:Timba.SacredTails.CharacterStyle.PlayerMouseRotator
    language: CSharp
    name:
      CSharp: PlayerMouseRotator
      VB: PlayerMouseRotator
    nameWithType:
      CSharp: PlayerMouseRotator
      VB: PlayerMouseRotator
    qualifiedName:
      CSharp: Timba.SacredTails.CharacterStyle.PlayerMouseRotator
      VB: Timba.SacredTails.CharacterStyle.PlayerMouseRotator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.CharacterStyle
    source:
      id: PlayerMouseRotator
      path: ''
      startLine: 32155
    summary: "\nAllow player rotate character when is on Character Style Panel\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlayerMouseRotator : MonoBehaviour'
        VB: >-
          Public Class PlayerMouseRotator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.canRotateWithMouse
      commentId: F:Timba.SacredTails.CharacterStyle.PlayerMouseRotator.canRotateWithMouse
      language: CSharp
      name:
        CSharp: canRotateWithMouse
        VB: canRotateWithMouse
      nameWithType:
        CSharp: PlayerMouseRotator.canRotateWithMouse
        VB: PlayerMouseRotator.canRotateWithMouse
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.canRotateWithMouse
        VB: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.canRotateWithMouse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: canRotateWithMouse
        path: ''
        startLine: 32160
      syntax:
        content:
          CSharp: public bool canRotateWithMouse
          VB: Public canRotateWithMouse As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.isClickingOnArea
      commentId: F:Timba.SacredTails.CharacterStyle.PlayerMouseRotator.isClickingOnArea
      language: CSharp
      name:
        CSharp: isClickingOnArea
        VB: isClickingOnArea
      nameWithType:
        CSharp: PlayerMouseRotator.isClickingOnArea
        VB: PlayerMouseRotator.isClickingOnArea
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.isClickingOnArea
        VB: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.isClickingOnArea
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: isClickingOnArea
        path: ''
        startLine: 32161
      syntax:
        content:
          CSharp: public bool isClickingOnArea
          VB: Public isClickingOnArea As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.rotationTarget
      commentId: F:Timba.SacredTails.CharacterStyle.PlayerMouseRotator.rotationTarget
      language: CSharp
      name:
        CSharp: rotationTarget
        VB: rotationTarget
      nameWithType:
        CSharp: PlayerMouseRotator.rotationTarget
        VB: PlayerMouseRotator.rotationTarget
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.rotationTarget
        VB: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.rotationTarget
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: rotationTarget
        path: ''
        startLine: 32163
      syntax:
        content:
          CSharp: public Transform rotationTarget
          VB: Public rotationTarget As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea(System.Boolean)
      commentId: M:Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea(System.Boolean)
      language: CSharp
      name:
        CSharp: IsClickingOnArea(Boolean)
        VB: IsClickingOnArea(Boolean)
      nameWithType:
        CSharp: PlayerMouseRotator.IsClickingOnArea(Boolean)
        VB: PlayerMouseRotator.IsClickingOnArea(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea(System.Boolean)
        VB: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.CharacterStyle
      source:
        id: IsClickingOnArea
        path: ''
        startLine: 32174
      syntax:
        content:
          CSharp: public void IsClickingOnArea(bool isClicking)
          VB: Public Sub IsClickingOnArea(isClicking As Boolean)
        parameters:
        - id: isClicking
          type: System.Boolean
      overload: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Database
  commentId: N:Timba.SacredTails.Database
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Database
    VB: Timba.SacredTails.Database
  nameWithType:
    CSharp: Timba.SacredTails.Database
    VB: Timba.SacredTails.Database
  qualifiedName:
    CSharp: Timba.SacredTails.Database
    VB: Timba.SacredTails.Database
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Database.DatabaseConnection
    commentId: T:Timba.SacredTails.Database.DatabaseConnection
    language: CSharp
    name:
      CSharp: DatabaseConnection
      VB: DatabaseConnection
    nameWithType:
      CSharp: DatabaseConnection
      VB: DatabaseConnection
    qualifiedName:
      CSharp: Timba.SacredTails.Database.DatabaseConnection
      VB: Timba.SacredTails.Database.DatabaseConnection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Database
    source:
      id: DatabaseConnection
      path: ''
      startLine: 32205
    syntax:
      content:
        CSharp: 'public class DatabaseConnection : MonoBehaviour, IDatabase'
        VB: >-
          Public Class DatabaseConnection

              Inherits MonoBehaviour

              Implements IDatabase
    inheritance:
    - System.Object
    implements:
    - Timba.SacredTails.Database.IDatabase
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex(System.Int32)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex(System.Int32)
      language: CSharp
      name:
        CSharp: GetActionCardByIndex(Int32)
        VB: GetActionCardByIndex(Int32)
      nameWithType:
        CSharp: DatabaseConnection.GetActionCardByIndex(Int32)
        VB: DatabaseConnection.GetActionCardByIndex(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex(System.Int32)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetActionCardByIndex
        path: ''
        startLine: 32217
      syntax:
        content:
          CSharp: public ActionCard GetActionCardByIndex(int index)
          VB: Public Function GetActionCardByIndex(index As Integer) As ActionCard
        parameters:
        - id: index
          type: System.Int32
        return:
          type: Global.ActionCard
      overload: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount
      language: CSharp
      name:
        CSharp: CardDatabaseCount()
        VB: CardDatabaseCount()
      nameWithType:
        CSharp: DatabaseConnection.CardDatabaseCount()
        VB: DatabaseConnection.CardDatabaseCount()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount()
        VB: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: CardDatabaseCount
        path: ''
        startLine: 32222
      syntax:
        content:
          CSharp: public int CardDatabaseCount()
          VB: Public Function CardDatabaseCount As Integer
        return:
          type: System.Int32
      overload: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount*
      implements:
      - Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: GetDatabaseCardsIndexListByType(List<String>)
        VB: GetDatabaseCardsIndexListByType(List(Of String))
      nameWithType:
        CSharp: DatabaseConnection.GetDatabaseCardsIndexListByType(List<String>)
        VB: DatabaseConnection.GetDatabaseCardsIndexListByType(List(Of String))
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType(System.Collections.Generic.List<System.String>)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetDatabaseCardsIndexListByType
        path: ''
        startLine: 32227
      syntax:
        content:
          CSharp: public List<int> GetDatabaseCardsIndexListByType(List<string> partTypes)
          VB: Public Function GetDatabaseCardsIndexListByType(partTypes As List(Of String)) As List(Of Integer)
        parameters:
        - id: partTypes
          type: System.Collections.Generic.List{System.String}
        return:
          type: System.Collections.Generic.List{System.Int32}
      overload: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei
      language: CSharp
      name:
        CSharp: GetRandomShinsei()
        VB: GetRandomShinsei()
      nameWithType:
        CSharp: DatabaseConnection.GetRandomShinsei()
        VB: DatabaseConnection.GetRandomShinsei()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei()
        VB: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetRandomShinsei
        path: ''
        startLine: 32237
      syntax:
        content:
          CSharp: public string GetRandomShinsei()
          VB: Public Function GetRandomShinsei As String
        return:
          type: System.String
      overload: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure(System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure(System.String)
      language: CSharp
      name:
        CSharp: GetShinseiStructure(String)
        VB: GetShinseiStructure(String)
      nameWithType:
        CSharp: DatabaseConnection.GetShinseiStructure(String)
        VB: DatabaseConnection.GetShinseiStructure(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure(System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiStructure
        path: ''
        startLine: 32243
      syntax:
        content:
          CSharp: public string GetShinseiStructure(string dna)
          VB: Public Function GetShinseiStructure(dna As String) As String
        parameters:
        - id: dna
          type: System.String
        return:
          type: System.String
      overload: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats(System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats(System.String)
      language: CSharp
      name:
        CSharp: GetShinseiStats(String)
        VB: GetShinseiStats(String)
      nameWithType:
        CSharp: DatabaseConnection.GetShinseiStats(String)
        VB: DatabaseConnection.GetShinseiStats(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats(System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiStats
        path: ''
        startLine: 32248
      syntax:
        content:
          CSharp: public ShinseiStats GetShinseiStats(string shinseiDna)
          VB: Public Function GetShinseiStats(shinseiDna As String) As ShinseiStats
        parameters:
        - id: shinseiDna
          type: System.String
        return:
          type: Global.ShinseiStats
      overload: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetSetName(System.String,System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetSetName(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetSetName(String, String)
        VB: GetSetName(String, String)
      nameWithType:
        CSharp: DatabaseConnection.GetSetName(String, String)
        VB: DatabaseConnection.GetSetName(String, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetSetName(System.String, System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetSetName(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetSetName
        path: ''
        startLine: 32322
      syntax:
        content:
          CSharp: public string GetSetName(string partRarity, string partType)
          VB: Public Function GetSetName(partRarity As String, partType As String) As String
        parameters:
        - id: partRarity
          type: System.String
        - id: partType
          type: System.String
        return:
          type: System.String
      overload: Timba.SacredTails.Database.DatabaseConnection.GetSetName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes(System.String,Enum)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes(System.String,Enum)
      language: CSharp
      name:
        CSharp: GetShinseiPartsTypes(String, Enum)
        VB: GetShinseiPartsTypes(String, Enum)
      nameWithType:
        CSharp: DatabaseConnection.GetShinseiPartsTypes(String, Enum)
        VB: DatabaseConnection.GetShinseiPartsTypes(String, Enum)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes(System.String, Enum)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes(System.String, Enum)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiPartsTypes
        path: ''
        startLine: 32328
      syntax:
        content:
          CSharp: public Dictionary<string, string> GetShinseiPartsTypes(string shinseiDna, Enum genericEnum)
          VB: Public Function GetShinseiPartsTypes(shinseiDna As String, genericEnum As  Enum) As Dictionary(Of String, String)
        parameters:
        - id: shinseiDna
          type: System.String
        - id: genericEnum
          type: Global.Enum
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType(System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType(System.String)
      language: CSharp
      name:
        CSharp: ObtainShinseiType(String)
        VB: ObtainShinseiType(String)
      nameWithType:
        CSharp: DatabaseConnection.ObtainShinseiType(String)
        VB: DatabaseConnection.ObtainShinseiType(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType(System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: ObtainShinseiType
        path: ''
        startLine: 32333
      syntax:
        content:
          CSharp: public CharacterType ObtainShinseiType(string dna)
          VB: Public Function ObtainShinseiType(dna As String) As CharacterType
        parameters:
        - id: dna
          type: System.String
        return:
          type: Global.CharacterType
      overload: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType*
      implements:
      - Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity(System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity(System.String)
      language: CSharp
      name:
        CSharp: ObtainShinseiRarity(String)
        VB: ObtainShinseiRarity(String)
      nameWithType:
        CSharp: DatabaseConnection.ObtainShinseiRarity(String)
        VB: DatabaseConnection.ObtainShinseiRarity(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity(System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: ObtainShinseiRarity
        path: ''
        startLine: 32338
      syntax:
        content:
          CSharp: public RarityType ObtainShinseiRarity(string dna)
          VB: Public Function ObtainShinseiRarity(dna As String) As RarityType
        parameters:
        - id: dna
          type: System.String
        return:
          type: Global.RarityType
      overload: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity*
      implements:
      - Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence(System.Int32,System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: StartMatchmakingSequence(Int32, String)
        VB: StartMatchmakingSequence(Int32, String)
      nameWithType:
        CSharp: DatabaseConnection.StartMatchmakingSequence(Int32, String)
        VB: DatabaseConnection.StartMatchmakingSequence(Int32, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence(System.Int32, System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence(System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: StartMatchmakingSequence
        path: ''
        startLine: 32346
      summary: "\nstarts the matchmaking sequence under the specified queue \n"
      example: []
      syntax:
        content:
          CSharp: public void StartMatchmakingSequence(int skillLevel, string gamemodeQueue)
          VB: Public Sub StartMatchmakingSequence(skillLevel As Integer, gamemodeQueue As String)
        parameters:
        - id: skillLevel
          type: System.Int32
        - id: gamemodeQueue
          type: System.String
      overload: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence*
      implements:
      - Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult,System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult,System.String)
      language: CSharp
      name:
        CSharp: CheckTicketStatus(CreateMatchmakingTicketResult, String)
        VB: CheckTicketStatus(CreateMatchmakingTicketResult, String)
      nameWithType:
        CSharp: DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult, String)
        VB: DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult, System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: CheckTicketStatus
        path: ''
        startLine: 32358
      syntax:
        content:
          CSharp: public async void CheckTicketStatus(CreateMatchmakingTicketResult ticket, string gamemodeQueue)
          VB: Public Sub CheckTicketStatus(ticket As CreateMatchmakingTicketResult, gamemodeQueue As String)
        parameters:
        - id: ticket
          type: Global.CreateMatchmakingTicketResult
        - id: gamemodeQueue
          type: System.String
      overload: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus*
      modifiers:
        CSharp:
        - public
        - async
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.IsReady
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: DatabaseConnection.IsReady()
        VB: DatabaseConnection.IsReady()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.IsReady()
        VB: Timba.SacredTails.Database.DatabaseConnection.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: IsReady
        path: ''
        startLine: 32383
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Database.DatabaseConnection.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Database.IDatabase
    commentId: T:Timba.SacredTails.Database.IDatabase
    language: CSharp
    name:
      CSharp: IDatabase
      VB: IDatabase
    nameWithType:
      CSharp: IDatabase
      VB: IDatabase
    qualifiedName:
      CSharp: Timba.SacredTails.Database.IDatabase
      VB: Timba.SacredTails.Database.IDatabase
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Database
    source:
      id: IDatabase
      path: ''
      startLine: 32405
    syntax:
      content:
        CSharp: public interface IDatabase
        VB: >-
          Public Interface IDatabase

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      commentId: M:Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      language: CSharp
      name:
        CSharp: GetRandomShinsei()
        VB: GetRandomShinsei()
      nameWithType:
        CSharp: IDatabase.GetRandomShinsei()
        VB: IDatabase.GetRandomShinsei()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetRandomShinsei()
        VB: Timba.SacredTails.Database.IDatabase.GetRandomShinsei()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetRandomShinsei
        path: ''
        startLine: 32407
      syntax:
        content:
          CSharp: string GetRandomShinsei()
          VB: Function GetRandomShinsei As String
        return:
          type: System.String
      overload: Timba.SacredTails.Database.IDatabase.GetRandomShinsei*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
      commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
      language: CSharp
      name:
        CSharp: GetShinseiStructure(String)
        VB: GetShinseiStructure(String)
      nameWithType:
        CSharp: IDatabase.GetShinseiStructure(String)
        VB: IDatabase.GetShinseiStructure(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
        VB: Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiStructure
        path: ''
        startLine: 32408
      syntax:
        content:
          CSharp: string GetShinseiStructure(string dna)
          VB: Function GetShinseiStructure(dna As String) As String
        parameters:
        - id: dna
          type: System.String
        return:
          type: System.String
      overload: Timba.SacredTails.Database.IDatabase.GetShinseiStructure*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
      commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
      language: CSharp
      name:
        CSharp: GetShinseiStats(String)
        VB: GetShinseiStats(String)
      nameWithType:
        CSharp: IDatabase.GetShinseiStats(String)
        VB: IDatabase.GetShinseiStats(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
        VB: Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiStats
        path: ''
        startLine: 32409
      syntax:
        content:
          CSharp: ShinseiStats GetShinseiStats(string shinseiDna)
          VB: Function GetShinseiStats(shinseiDna As String) As ShinseiStats
        parameters:
        - id: shinseiDna
          type: System.String
        return:
          type: Global.ShinseiStats
      overload: Timba.SacredTails.Database.IDatabase.GetShinseiStats*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
      commentId: M:Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
      language: CSharp
      name:
        CSharp: GetActionCardByIndex(Int32)
        VB: GetActionCardByIndex(Int32)
      nameWithType:
        CSharp: IDatabase.GetActionCardByIndex(Int32)
        VB: IDatabase.GetActionCardByIndex(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
        VB: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetActionCardByIndex
        path: ''
        startLine: 32410
      syntax:
        content:
          CSharp: ActionCard GetActionCardByIndex(int index)
          VB: Function GetActionCardByIndex(index As Integer) As ActionCard
        parameters:
        - id: index
          type: System.Int32
        return:
          type: Global.ActionCard
      overload: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      commentId: M:Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      language: CSharp
      name:
        CSharp: CardDatabaseCount()
        VB: CardDatabaseCount()
      nameWithType:
        CSharp: IDatabase.CardDatabaseCount()
        VB: IDatabase.CardDatabaseCount()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.CardDatabaseCount()
        VB: Timba.SacredTails.Database.IDatabase.CardDatabaseCount()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: CardDatabaseCount
        path: ''
        startLine: 32411
      syntax:
        content:
          CSharp: int CardDatabaseCount()
          VB: Function CardDatabaseCount As Integer
        return:
          type: System.Int32
      overload: Timba.SacredTails.Database.IDatabase.CardDatabaseCount*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
      commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
      language: CSharp
      name:
        CSharp: GetShinseiPartsTypes(String, Enum)
        VB: GetShinseiPartsTypes(String, Enum)
      nameWithType:
        CSharp: IDatabase.GetShinseiPartsTypes(String, Enum)
        VB: IDatabase.GetShinseiPartsTypes(String, Enum)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String, Enum)
        VB: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String, Enum)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiPartsTypes
        path: ''
        startLine: 32412
      syntax:
        content:
          CSharp: Dictionary<string, string> GetShinseiPartsTypes(string shinseiDna, Enum genericEnum)
          VB: Function GetShinseiPartsTypes(shinseiDna As String, genericEnum As  Enum) As Dictionary(Of String, String)
        parameters:
        - id: shinseiDna
          type: System.String
        - id: genericEnum
          type: Global.Enum
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
      commentId: M:Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: GetDatabaseCardsIndexListByType(List<String>)
        VB: GetDatabaseCardsIndexListByType(List(Of String))
      nameWithType:
        CSharp: IDatabase.GetDatabaseCardsIndexListByType(List<String>)
        VB: IDatabase.GetDatabaseCardsIndexListByType(List(Of String))
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List<System.String>)
        VB: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetDatabaseCardsIndexListByType
        path: ''
        startLine: 32413
      syntax:
        content:
          CSharp: List<int> GetDatabaseCardsIndexListByType(List<string> type)
          VB: Function GetDatabaseCardsIndexListByType(type As List(Of String)) As List(Of Integer)
        parameters:
        - id: type
          type: System.Collections.Generic.List{System.String}
        return:
          type: System.Collections.Generic.List{System.Int32}
      overload: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
      commentId: M:Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
      language: CSharp
      name:
        CSharp: ObtainShinseiType(String)
        VB: ObtainShinseiType(String)
      nameWithType:
        CSharp: IDatabase.ObtainShinseiType(String)
        VB: IDatabase.ObtainShinseiType(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
        VB: Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: ObtainShinseiType
        path: ''
        startLine: 32414
      syntax:
        content:
          CSharp: CharacterType ObtainShinseiType(string dna)
          VB: Function ObtainShinseiType(dna As String) As CharacterType
        parameters:
        - id: dna
          type: System.String
        return:
          type: Global.CharacterType
      overload: Timba.SacredTails.Database.IDatabase.ObtainShinseiType*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
      commentId: M:Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
      language: CSharp
      name:
        CSharp: ObtainShinseiRarity(String)
        VB: ObtainShinseiRarity(String)
      nameWithType:
        CSharp: IDatabase.ObtainShinseiRarity(String)
        VB: IDatabase.ObtainShinseiRarity(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
        VB: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: ObtainShinseiRarity
        path: ''
        startLine: 32415
      syntax:
        content:
          CSharp: RarityType ObtainShinseiRarity(string dna)
          VB: Function ObtainShinseiRarity(dna As String) As RarityType
        parameters:
        - id: dna
          type: System.String
        return:
          type: Global.RarityType
      overload: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
      commentId: M:Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: StartMatchmakingSequence(Int32, String)
        VB: StartMatchmakingSequence(Int32, String)
      nameWithType:
        CSharp: IDatabase.StartMatchmakingSequence(Int32, String)
        VB: IDatabase.StartMatchmakingSequence(Int32, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32, System.String)
        VB: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: StartMatchmakingSequence
        path: ''
        startLine: 32416
      syntax:
        content:
          CSharp: void StartMatchmakingSequence(int skillLevel = 0, string gamemodeQueue = "FriendlyMatch")
          VB: Sub StartMatchmakingSequence(skillLevel As Integer = 0, gamemodeQueue As String = "FriendlyMatch")
        parameters:
        - id: skillLevel
          type: System.Int32
        - id: gamemodeQueue
          type: System.String
      overload: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.SacredTails.Database.AuthController
    commentId: T:Timba.SacredTails.Database.AuthController
    language: CSharp
    name:
      CSharp: AuthController
      VB: AuthController
    nameWithType:
      CSharp: AuthController
      VB: AuthController
    qualifiedName:
      CSharp: Timba.SacredTails.Database.AuthController
      VB: Timba.SacredTails.Database.AuthController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Database
    source:
      id: AuthController
      path: ''
      startLine: 34106
    syntax:
      content:
        CSharp: 'public class AuthController : MonoBehaviour'
        VB: >-
          Public Class AuthController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Database.AuthController.tournamentCreationLogin
      commentId: F:Timba.SacredTails.Database.AuthController.tournamentCreationLogin
      language: CSharp
      name:
        CSharp: tournamentCreationLogin
        VB: tournamentCreationLogin
      nameWithType:
        CSharp: AuthController.tournamentCreationLogin
        VB: AuthController.tournamentCreationLogin
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.tournamentCreationLogin
        VB: Timba.SacredTails.Database.AuthController.tournamentCreationLogin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: tournamentCreationLogin
        path: ''
        startLine: 34130
      syntax:
        content:
          CSharp: public bool tournamentCreationLogin
          VB: Public tournamentCreationLogin As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.ipField
      commentId: F:Timba.SacredTails.Database.AuthController.ipField
      language: CSharp
      name:
        CSharp: ipField
        VB: ipField
      nameWithType:
        CSharp: AuthController.ipField
        VB: AuthController.ipField
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.ipField
        VB: Timba.SacredTails.Database.AuthController.ipField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: ipField
        path: ''
        startLine: 34134
      syntax:
        content:
          CSharp: public TMP_InputField ipField
          VB: Public ipField As TMP_InputField
        return:
          type: Global.TMP_InputField
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.transport
      commentId: F:Timba.SacredTails.Database.AuthController.transport
      language: CSharp
      name:
        CSharp: transport
        VB: transport
      nameWithType:
        CSharp: AuthController.transport
        VB: AuthController.transport
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.transport
        VB: Timba.SacredTails.Database.AuthController.transport
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: transport
        path: ''
        startLine: 34135
      syntax:
        content:
          CSharp: public UnityTransport transport
          VB: Public transport As UnityTransport
        return:
          type: Global.UnityTransport
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.LoadCachedData
      commentId: M:Timba.SacredTails.Database.AuthController.LoadCachedData
      language: CSharp
      name:
        CSharp: LoadCachedData()
        VB: LoadCachedData()
      nameWithType:
        CSharp: AuthController.LoadCachedData()
        VB: AuthController.LoadCachedData()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.LoadCachedData()
        VB: Timba.SacredTails.Database.AuthController.LoadCachedData()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: LoadCachedData
        path: ''
        startLine: 34158
      syntax:
        content:
          CSharp: public void LoadCachedData()
          VB: Public Sub LoadCachedData
      overload: Timba.SacredTails.Database.AuthController.LoadCachedData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.SetIP
      commentId: M:Timba.SacredTails.Database.AuthController.SetIP
      language: CSharp
      name:
        CSharp: SetIP()
        VB: SetIP()
      nameWithType:
        CSharp: AuthController.SetIP()
        VB: AuthController.SetIP()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.SetIP()
        VB: Timba.SacredTails.Database.AuthController.SetIP()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: SetIP
        path: ''
        startLine: 34179
      syntax:
        content:
          CSharp: public void SetIP()
          VB: Public Sub SetIP
      overload: Timba.SacredTails.Database.AuthController.SetIP*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.SetLoginInfo(System.String,System.String,System.Int32)
      commentId: M:Timba.SacredTails.Database.AuthController.SetLoginInfo(System.String,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: SetLoginInfo(String, String, Int32)
        VB: SetLoginInfo(String, String, Int32)
      nameWithType:
        CSharp: AuthController.SetLoginInfo(String, String, Int32)
        VB: AuthController.SetLoginInfo(String, String, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.SetLoginInfo(System.String, System.String, System.Int32)
        VB: Timba.SacredTails.Database.AuthController.SetLoginInfo(System.String, System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: SetLoginInfo
        path: ''
        startLine: 34191
      syntax:
        content:
          CSharp: public void SetLoginInfo(string userEmail, string password, int lobby = 0)
          VB: Public Sub SetLoginInfo(userEmail As String, password As String, lobby As Integer = 0)
        parameters:
        - id: userEmail
          type: System.String
        - id: password
          type: System.String
        - id: lobby
          type: System.Int32
      overload: Timba.SacredTails.Database.AuthController.SetLoginInfo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.OpenPanel(System.Boolean)
      commentId: M:Timba.SacredTails.Database.AuthController.OpenPanel(System.Boolean)
      language: CSharp
      name:
        CSharp: OpenPanel(Boolean)
        VB: OpenPanel(Boolean)
      nameWithType:
        CSharp: AuthController.OpenPanel(Boolean)
        VB: AuthController.OpenPanel(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.OpenPanel(System.Boolean)
        VB: Timba.SacredTails.Database.AuthController.OpenPanel(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: OpenPanel
        path: ''
        startLine: 34197
      syntax:
        content:
          CSharp: public void OpenPanel(bool isLogin)
          VB: Public Sub OpenPanel(isLogin As Boolean)
        parameters:
        - id: isLogin
          type: System.Boolean
      overload: Timba.SacredTails.Database.AuthController.OpenPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel(System.Boolean)
      commentId: M:Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel(System.Boolean)
      language: CSharp
      name:
        CSharp: OpenForgotPasswordPanel(Boolean)
        VB: OpenForgotPasswordPanel(Boolean)
      nameWithType:
        CSharp: AuthController.OpenForgotPasswordPanel(Boolean)
        VB: AuthController.OpenForgotPasswordPanel(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel(System.Boolean)
        VB: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: OpenForgotPasswordPanel
        path: ''
        startLine: 34214
      syntax:
        content:
          CSharp: public void OpenForgotPasswordPanel(bool isLogin)
          VB: Public Sub OpenForgotPasswordPanel(isLogin As Boolean)
        parameters:
        - id: isLogin
          type: System.Boolean
      overload: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.Login
      commentId: M:Timba.SacredTails.Database.AuthController.Login
      language: CSharp
      name:
        CSharp: Login()
        VB: Login()
      nameWithType:
        CSharp: AuthController.Login()
        VB: AuthController.Login()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.Login()
        VB: Timba.SacredTails.Database.AuthController.Login()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: Login
        path: ''
        startLine: 34242
      syntax:
        content:
          CSharp: public void Login()
          VB: Public Sub Login
      overload: Timba.SacredTails.Database.AuthController.Login*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.EventsListenging
      commentId: M:Timba.SacredTails.Database.AuthController.EventsListenging
      language: CSharp
      name:
        CSharp: EventsListenging()
        VB: EventsListenging()
      nameWithType:
        CSharp: AuthController.EventsListenging()
        VB: AuthController.EventsListenging()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.EventsListenging()
        VB: Timba.SacredTails.Database.AuthController.EventsListenging()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: EventsListenging
        path: ''
        startLine: 34254
      syntax:
        content:
          CSharp: public void EventsListenging()
          VB: Public Sub EventsListenging
      overload: Timba.SacredTails.Database.AuthController.EventsListenging*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.SignUp
      commentId: M:Timba.SacredTails.Database.AuthController.SignUp
      language: CSharp
      name:
        CSharp: SignUp()
        VB: SignUp()
      nameWithType:
        CSharp: AuthController.SignUp()
        VB: AuthController.SignUp()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.SignUp()
        VB: Timba.SacredTails.Database.AuthController.SignUp()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: SignUp
        path: ''
        startLine: 34267
      syntax:
        content:
          CSharp: public void SignUp()
          VB: Public Sub SignUp
      overload: Timba.SacredTails.Database.AuthController.SignUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.SendPasswordEmail
      commentId: M:Timba.SacredTails.Database.AuthController.SendPasswordEmail
      language: CSharp
      name:
        CSharp: SendPasswordEmail()
        VB: SendPasswordEmail()
      nameWithType:
        CSharp: AuthController.SendPasswordEmail()
        VB: AuthController.SendPasswordEmail()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.SendPasswordEmail()
        VB: Timba.SacredTails.Database.AuthController.SendPasswordEmail()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: SendPasswordEmail
        path: ''
        startLine: 34282
      syntax:
        content:
          CSharp: public void SendPasswordEmail()
          VB: Public Sub SendPasswordEmail
      overload: Timba.SacredTails.Database.AuthController.SendPasswordEmail*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Navigation
  commentId: N:Timba.SacredTails.Navigation
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Navigation
    VB: Timba.SacredTails.Navigation
  nameWithType:
    CSharp: Timba.SacredTails.Navigation
    VB: Timba.SacredTails.Navigation
  qualifiedName:
    CSharp: Timba.SacredTails.Navigation
    VB: Timba.SacredTails.Navigation
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Navigation.INavigation
    commentId: T:Timba.SacredTails.Navigation.INavigation
    language: CSharp
    name:
      CSharp: INavigation
      VB: INavigation
    nameWithType:
      CSharp: INavigation
      VB: INavigation
    qualifiedName:
      CSharp: Timba.SacredTails.Navigation.INavigation
      VB: Timba.SacredTails.Navigation.INavigation
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Navigation
    source:
      id: INavigation
      path: ''
      startLine: 32528
    syntax:
      content:
        CSharp: public interface INavigation
        VB: >-
          Public Interface INavigation

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
      commentId: M:Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
      language: CSharp
      name:
        CSharp: GoToScene(Int32)
        VB: GoToScene(Int32)
      nameWithType:
        CSharp: INavigation.GoToScene(Int32)
        VB: INavigation.GoToScene(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
        VB: Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Navigation
      source:
        id: GoToScene
        path: ''
        startLine: 32530
      syntax:
        content:
          CSharp: void GoToScene(int index)
          VB: Sub GoToScene(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.Navigation.INavigation.GoToScene*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.SacredTails.Navigation.NavigationManager
    commentId: T:Timba.SacredTails.Navigation.NavigationManager
    language: CSharp
    name:
      CSharp: NavigationManager
      VB: NavigationManager
    nameWithType:
      CSharp: NavigationManager
      VB: NavigationManager
    qualifiedName:
      CSharp: Timba.SacredTails.Navigation.NavigationManager
      VB: Timba.SacredTails.Navigation.NavigationManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Navigation
    source:
      id: NavigationManager
      path: ''
      startLine: 32540
    syntax:
      content:
        CSharp: 'public class NavigationManager : MonoBehaviour, INavigation'
        VB: >-
          Public Class NavigationManager

              Inherits MonoBehaviour

              Implements INavigation
    inheritance:
    - System.Object
    implements:
    - Timba.SacredTails.Navigation.INavigation
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Navigation.NavigationManager.GoToScene(System.Int32)
      commentId: M:Timba.SacredTails.Navigation.NavigationManager.GoToScene(System.Int32)
      language: CSharp
      name:
        CSharp: GoToScene(Int32)
        VB: GoToScene(Int32)
      nameWithType:
        CSharp: NavigationManager.GoToScene(Int32)
        VB: NavigationManager.GoToScene(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Navigation.NavigationManager.GoToScene(System.Int32)
        VB: Timba.SacredTails.Navigation.NavigationManager.GoToScene(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Navigation
      source:
        id: GoToScene
        path: ''
        startLine: 32543
      syntax:
        content:
          CSharp: public void GoToScene(int index)
          VB: Public Sub GoToScene(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.Navigation.NavigationManager.GoToScene*
      implements:
      - Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Navigation.NavigationManager.IsReady
      commentId: M:Timba.SacredTails.Navigation.NavigationManager.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: NavigationManager.IsReady()
        VB: NavigationManager.IsReady()
      qualifiedName:
        CSharp: Timba.SacredTails.Navigation.NavigationManager.IsReady()
        VB: Timba.SacredTails.Navigation.NavigationManager.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Navigation
      source:
        id: IsReady
        path: ''
        startLine: 32549
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Navigation.NavigationManager.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Photoboot
  commentId: N:Timba.SacredTails.Photoboot
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Photoboot
    VB: Timba.SacredTails.Photoboot
  nameWithType:
    CSharp: Timba.SacredTails.Photoboot
    VB: Timba.SacredTails.Photoboot
  qualifiedName:
    CSharp: Timba.SacredTails.Photoboot
    VB: Timba.SacredTails.Photoboot
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Photoboot.IIconGeneration
    commentId: T:Timba.SacredTails.Photoboot.IIconGeneration
    language: CSharp
    name:
      CSharp: IIconGeneration
      VB: IIconGeneration
    nameWithType:
      CSharp: IIconGeneration
      VB: IIconGeneration
    qualifiedName:
      CSharp: Timba.SacredTails.Photoboot.IIconGeneration
      VB: Timba.SacredTails.Photoboot.IIconGeneration
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Photoboot
    source:
      id: IIconGeneration
      path: ''
      startLine: 32568
    summary: "\nService that allows take pictures of Shinsei for UI\n"
    example: []
    syntax:
      content:
        CSharp: public interface IIconGeneration
        VB: >-
          Public Interface IIconGeneration

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons(System.Collections.Generic.List{Shinsei},Action)
      commentId: M:Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons(System.Collections.Generic.List{Shinsei},Action)
      language: CSharp
      name:
        CSharp: GenerateShinseiIcons(List<Shinsei>, Action)
        VB: GenerateShinseiIcons(List(Of Shinsei), Action)
      nameWithType:
        CSharp: IIconGeneration.GenerateShinseiIcons(List<Shinsei>, Action)
        VB: IIconGeneration.GenerateShinseiIcons(List(Of Shinsei), Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons(System.Collections.Generic.List<Shinsei>, Action)
        VB: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons(System.Collections.Generic.List(Of Shinsei), Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Photoboot
      source:
        id: GenerateShinseiIcons
        path: ''
        startLine: 32570
      syntax:
        content:
          CSharp: void GenerateShinseiIcons(List<Shinsei> shinseiParty, Action callback = null)
          VB: Sub GenerateShinseiIcons(shinseiParty As List(Of Shinsei), callback As Action = Nothing)
        parameters:
        - id: shinseiParty
          type: System.Collections.Generic.List{Shinsei}
        - id: callback
          type: Global.Action
      overload: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.SacredTails.Photoboot.ShinseiWardrobe
    commentId: T:Timba.SacredTails.Photoboot.ShinseiWardrobe
    language: CSharp
    name:
      CSharp: ShinseiWardrobe
      VB: ShinseiWardrobe
    nameWithType:
      CSharp: ShinseiWardrobe
      VB: ShinseiWardrobe
    qualifiedName:
      CSharp: Timba.SacredTails.Photoboot.ShinseiWardrobe
      VB: Timba.SacredTails.Photoboot.ShinseiWardrobe
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Photoboot
    source:
      id: ShinseiWardrobe
      path: ''
      startLine: 32588
    summary: "\nThis allow take pictures to the Shinsei, using Camera and Coroutines \n"
    example: []
    syntax:
      content:
        CSharp: 'public class ShinseiWardrobe : MonoBehaviour, IIconGeneration'
        VB: >-
          Public Class ShinseiWardrobe

              Inherits MonoBehaviour

              Implements IIconGeneration
    inheritance:
    - System.Object
    implements:
    - Timba.SacredTails.Photoboot.IIconGeneration
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.generatedSprite
      commentId: F:Timba.SacredTails.Photoboot.ShinseiWardrobe.generatedSprite
      language: CSharp
      name:
        CSharp: generatedSprite
        VB: generatedSprite
      nameWithType:
        CSharp: ShinseiWardrobe.generatedSprite
        VB: ShinseiWardrobe.generatedSprite
      qualifiedName:
        CSharp: Timba.SacredTails.Photoboot.ShinseiWardrobe.generatedSprite
        VB: Timba.SacredTails.Photoboot.ShinseiWardrobe.generatedSprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Photoboot
      source:
        id: generatedSprite
        path: ''
        startLine: 32592
      syntax:
        content:
          CSharp: public Sprite generatedSprite
          VB: Public generatedSprite As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons(System.Collections.Generic.List{Shinsei},Action)
      commentId: M:Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons(System.Collections.Generic.List{Shinsei},Action)
      language: CSharp
      name:
        CSharp: GenerateShinseiIcons(List<Shinsei>, Action)
        VB: GenerateShinseiIcons(List(Of Shinsei), Action)
      nameWithType:
        CSharp: ShinseiWardrobe.GenerateShinseiIcons(List<Shinsei>, Action)
        VB: ShinseiWardrobe.GenerateShinseiIcons(List(Of Shinsei), Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons(System.Collections.Generic.List<Shinsei>, Action)
        VB: Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons(System.Collections.Generic.List(Of Shinsei), Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Photoboot
      source:
        id: GenerateShinseiIcons
        path: ''
        startLine: 32596
      syntax:
        content:
          CSharp: public void GenerateShinseiIcons(List<Shinsei> shinseiParty, Action callback = null)
          VB: Public Sub GenerateShinseiIcons(shinseiParty As List(Of Shinsei), callback As Action = Nothing)
        parameters:
        - id: shinseiParty
          type: System.Collections.Generic.List{Shinsei}
        - id: callback
          type: Global.Action
      overload: Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons*
      implements:
      - Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons(System.Collections.Generic.List{Shinsei},Action)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons(System.Collections.Generic.List{Shinsei})
      commentId: M:Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons(System.Collections.Generic.List{Shinsei})
      language: CSharp
      name:
        CSharp: GetGeneratedIcons(List<Shinsei>)
        VB: GetGeneratedIcons(List(Of Shinsei))
      nameWithType:
        CSharp: ShinseiWardrobe.GetGeneratedIcons(List<Shinsei>)
        VB: ShinseiWardrobe.GetGeneratedIcons(List(Of Shinsei))
      qualifiedName:
        CSharp: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons(System.Collections.Generic.List<Shinsei>)
        VB: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons(System.Collections.Generic.List(Of Shinsei))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Photoboot
      source:
        id: GetGeneratedIcons
        path: ''
        startLine: 32603
      syntax:
        content:
          CSharp: public List<Sprite> GetGeneratedIcons(List<Shinsei> shinseiParty)
          VB: Public Function GetGeneratedIcons(shinseiParty As List(Of Shinsei)) As List(Of Sprite)
        parameters:
        - id: shinseiParty
          type: System.Collections.Generic.List{Shinsei}
        return:
          type: System.Collections.Generic.List{Sprite}
      overload: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence(System.Collections.Generic.List{Shinsei},System.Int32)
      commentId: M:Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence(System.Collections.Generic.List{Shinsei},System.Int32)
      language: CSharp
      name:
        CSharp: GetGeneratedSequence(List<Shinsei>, Int32)
        VB: GetGeneratedSequence(List(Of Shinsei), Int32)
      nameWithType:
        CSharp: ShinseiWardrobe.GetGeneratedSequence(List<Shinsei>, Int32)
        VB: ShinseiWardrobe.GetGeneratedSequence(List(Of Shinsei), Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence(System.Collections.Generic.List<Shinsei>, System.Int32)
        VB: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence(System.Collections.Generic.List(Of Shinsei), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Photoboot
      source:
        id: GetGeneratedSequence
        path: ''
        startLine: 32614
      syntax:
        content:
          CSharp: public List<Sprite> GetGeneratedSequence(List<Shinsei> shinseiParty, int targetFrames)
          VB: Public Function GetGeneratedSequence(shinseiParty As List(Of Shinsei), targetFrames As Integer) As List(Of Sprite)
        parameters:
        - id: shinseiParty
          type: System.Collections.Generic.List{Shinsei}
        - id: targetFrames
          type: System.Int32
        return:
          type: System.Collections.Generic.List{Sprite}
      overload: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite(Texture2D)
      commentId: M:Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite(Texture2D)
      language: CSharp
      name:
        CSharp: TexToSprite(Texture2D)
        VB: TexToSprite(Texture2D)
      nameWithType:
        CSharp: ShinseiWardrobe.TexToSprite(Texture2D)
        VB: ShinseiWardrobe.TexToSprite(Texture2D)
      qualifiedName:
        CSharp: Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite(Texture2D)
        VB: Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite(Texture2D)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Photoboot
      source:
        id: TexToSprite
        path: ''
        startLine: 32664
      syntax:
        content:
          CSharp: public Sprite TexToSprite(Texture2D tex)
          VB: Public Function TexToSprite(tex As Texture2D) As Sprite
        parameters:
        - id: tex
          type: Global.Texture2D
        return:
          type: Global.Sprite
      overload: Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady
      commentId: M:Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: ShinseiWardrobe.IsReady()
        VB: ShinseiWardrobe.IsReady()
      qualifiedName:
        CSharp: Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady()
        VB: Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Photoboot
      source:
        id: IsReady
        path: ''
        startLine: 32670
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails
  commentId: N:Timba.Games.SacredTails
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails
    VB: Timba.Games.SacredTails
  nameWithType:
    CSharp: Timba.Games.SacredTails
    VB: Timba.Games.SacredTails
  qualifiedName:
    CSharp: Timba.Games.SacredTails
    VB: Timba.Games.SacredTails
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.DisconnectManager
    commentId: T:Timba.Games.SacredTails.DisconnectManager
    language: CSharp
    name:
      CSharp: DisconnectManager
      VB: DisconnectManager
    nameWithType:
      CSharp: DisconnectManager
      VB: DisconnectManager
    qualifiedName:
      CSharp: Timba.Games.SacredTails.DisconnectManager
      VB: Timba.Games.SacredTails.DisconnectManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails
    source:
      id: DisconnectManager
      path: ''
      startLine: 32430
    syntax:
      content:
        CSharp: 'public class DisconnectManager : MonoBehaviour'
        VB: >-
          Public Class DisconnectManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.DisconnectManager.logout
      commentId: F:Timba.Games.SacredTails.DisconnectManager.logout
      language: CSharp
      name:
        CSharp: logout
        VB: logout
      nameWithType:
        CSharp: DisconnectManager.logout
        VB: DisconnectManager.logout
      qualifiedName:
        CSharp: Timba.Games.SacredTails.DisconnectManager.logout
        VB: Timba.Games.SacredTails.DisconnectManager.logout
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: logout
        path: ''
        startLine: 32432
      syntax:
        content:
          CSharp: public Logout logout
          VB: Public logout As Logout
        return:
          type: Global.Logout
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.DisconnectManager.LogIn
      commentId: M:Timba.Games.SacredTails.DisconnectManager.LogIn
      language: CSharp
      name:
        CSharp: LogIn()
        VB: LogIn()
      nameWithType:
        CSharp: DisconnectManager.LogIn()
        VB: DisconnectManager.LogIn()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.DisconnectManager.LogIn()
        VB: Timba.Games.SacredTails.DisconnectManager.LogIn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: LogIn
        path: ''
        startLine: 32435
      syntax:
        content:
          CSharp: public void LogIn()
          VB: Public Sub LogIn
      overload: Timba.Games.SacredTails.DisconnectManager.LogIn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.DisconnectManager.Update
      commentId: M:Timba.Games.SacredTails.DisconnectManager.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: DisconnectManager.Update()
        VB: DisconnectManager.Update()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.DisconnectManager.Update()
        VB: Timba.Games.SacredTails.DisconnectManager.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: Update
        path: ''
        startLine: 32440
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: Timba.Games.SacredTails.DisconnectManager.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.IWallet
    commentId: T:Timba.Games.SacredTails.IWallet
    language: CSharp
    name:
      CSharp: IWallet
      VB: IWallet
    nameWithType:
      CSharp: IWallet
      VB: IWallet
    qualifiedName:
      CSharp: Timba.Games.SacredTails.IWallet
      VB: Timba.Games.SacredTails.IWallet
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails
    source:
      id: IWallet
      path: ''
      startLine: 33953
    syntax:
      content:
        CSharp: public interface IWallet
        VB: >-
          Public Interface IWallet

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Games.SacredTails.IWallet.UpdateUserWallet
      commentId: M:Timba.Games.SacredTails.IWallet.UpdateUserWallet
      language: CSharp
      name:
        CSharp: UpdateUserWallet()
        VB: UpdateUserWallet()
      nameWithType:
        CSharp: IWallet.UpdateUserWallet()
        VB: IWallet.UpdateUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.IWallet.UpdateUserWallet()
        VB: Timba.Games.SacredTails.IWallet.UpdateUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: UpdateUserWallet
        path: ''
        startLine: 33955
      syntax:
        content:
          CSharp: void UpdateUserWallet()
          VB: Sub UpdateUserWallet
      overload: Timba.Games.SacredTails.IWallet.UpdateUserWallet*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      commentId: M:Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      language: CSharp
      name:
        CSharp: GetUserCurrentCoins()
        VB: GetUserCurrentCoins()
      nameWithType:
        CSharp: IWallet.GetUserCurrentCoins()
        VB: IWallet.GetUserCurrentCoins()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins()
        VB: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: GetUserCurrentCoins
        path: ''
        startLine: 33956
      syntax:
        content:
          CSharp: int GetUserCurrentCoins()
          VB: Function GetUserCurrentCoins As Integer
        return:
          type: System.Int32
      overload: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.IWallet.HideUserWallet
      commentId: M:Timba.Games.SacredTails.IWallet.HideUserWallet
      language: CSharp
      name:
        CSharp: HideUserWallet()
        VB: HideUserWallet()
      nameWithType:
        CSharp: IWallet.HideUserWallet()
        VB: IWallet.HideUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.IWallet.HideUserWallet()
        VB: Timba.Games.SacredTails.IWallet.HideUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: HideUserWallet
        path: ''
        startLine: 33957
      syntax:
        content:
          CSharp: void HideUserWallet()
          VB: Sub HideUserWallet
      overload: Timba.Games.SacredTails.IWallet.HideUserWallet*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.IWallet.ShowUserWallet
      commentId: M:Timba.Games.SacredTails.IWallet.ShowUserWallet
      language: CSharp
      name:
        CSharp: ShowUserWallet()
        VB: ShowUserWallet()
      nameWithType:
        CSharp: IWallet.ShowUserWallet()
        VB: IWallet.ShowUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.IWallet.ShowUserWallet()
        VB: Timba.Games.SacredTails.IWallet.ShowUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: ShowUserWallet
        path: ''
        startLine: 33958
      syntax:
        content:
          CSharp: void ShowUserWallet()
          VB: Sub ShowUserWallet
      overload: Timba.Games.SacredTails.IWallet.ShowUserWallet*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Games.SacredTails.WalletController
    commentId: T:Timba.Games.SacredTails.WalletController
    language: CSharp
    name:
      CSharp: WalletController
      VB: WalletController
    nameWithType:
      CSharp: WalletController
      VB: WalletController
    qualifiedName:
      CSharp: Timba.Games.SacredTails.WalletController
      VB: Timba.Games.SacredTails.WalletController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails
    source:
      id: WalletController
      path: ''
      startLine: 33970
    syntax:
      content:
        CSharp: 'public class WalletController : MonoBehaviour, IWallet'
        VB: >-
          Public Class WalletController

              Inherits MonoBehaviour

              Implements IWallet
    inheritance:
    - System.Object
    implements:
    - Timba.Games.SacredTails.IWallet
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.WalletController.Start
      commentId: M:Timba.Games.SacredTails.WalletController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: WalletController.Start()
        VB: WalletController.Start()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.Start()
        VB: Timba.Games.SacredTails.WalletController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: Start
        path: ''
        startLine: 33978
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Timba.Games.SacredTails.WalletController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.GetPlayerCurrency(GetUserInventoryResult)
      commentId: M:Timba.Games.SacredTails.WalletController.GetPlayerCurrency(GetUserInventoryResult)
      language: CSharp
      name:
        CSharp: GetPlayerCurrency(GetUserInventoryResult)
        VB: GetPlayerCurrency(GetUserInventoryResult)
      nameWithType:
        CSharp: WalletController.GetPlayerCurrency(GetUserInventoryResult)
        VB: WalletController.GetPlayerCurrency(GetUserInventoryResult)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.GetPlayerCurrency(GetUserInventoryResult)
        VB: Timba.Games.SacredTails.WalletController.GetPlayerCurrency(GetUserInventoryResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: GetPlayerCurrency
        path: ''
        startLine: 33990
      syntax:
        content:
          CSharp: public void GetPlayerCurrency(GetUserInventoryResult result)
          VB: Public Sub GetPlayerCurrency(result As GetUserInventoryResult)
        parameters:
        - id: result
          type: Global.GetUserInventoryResult
      overload: Timba.Games.SacredTails.WalletController.GetPlayerCurrency*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins
      commentId: M:Timba.Games.SacredTails.WalletController.GetUserCurrentCoins
      language: CSharp
      name:
        CSharp: GetUserCurrentCoins()
        VB: GetUserCurrentCoins()
      nameWithType:
        CSharp: WalletController.GetUserCurrentCoins()
        VB: WalletController.GetUserCurrentCoins()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins()
        VB: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: GetUserCurrentCoins
        path: ''
        startLine: 33995
      syntax:
        content:
          CSharp: public int GetUserCurrentCoins()
          VB: Public Function GetUserCurrentCoins As Integer
        return:
          type: System.Int32
      overload: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins*
      implements:
      - Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.UpdateUserWallet
      commentId: M:Timba.Games.SacredTails.WalletController.UpdateUserWallet
      language: CSharp
      name:
        CSharp: UpdateUserWallet()
        VB: UpdateUserWallet()
      nameWithType:
        CSharp: WalletController.UpdateUserWallet()
        VB: WalletController.UpdateUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.UpdateUserWallet()
        VB: Timba.Games.SacredTails.WalletController.UpdateUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: UpdateUserWallet
        path: ''
        startLine: 34000
      syntax:
        content:
          CSharp: public void UpdateUserWallet()
          VB: Public Sub UpdateUserWallet
      overload: Timba.Games.SacredTails.WalletController.UpdateUserWallet*
      implements:
      - Timba.Games.SacredTails.IWallet.UpdateUserWallet
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.ShowUserWallet
      commentId: M:Timba.Games.SacredTails.WalletController.ShowUserWallet
      language: CSharp
      name:
        CSharp: ShowUserWallet()
        VB: ShowUserWallet()
      nameWithType:
        CSharp: WalletController.ShowUserWallet()
        VB: WalletController.ShowUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.ShowUserWallet()
        VB: Timba.Games.SacredTails.WalletController.ShowUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: ShowUserWallet
        path: ''
        startLine: 34005
      syntax:
        content:
          CSharp: public void ShowUserWallet()
          VB: Public Sub ShowUserWallet
      overload: Timba.Games.SacredTails.WalletController.ShowUserWallet*
      implements:
      - Timba.Games.SacredTails.IWallet.ShowUserWallet
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.HideUserWallet
      commentId: M:Timba.Games.SacredTails.WalletController.HideUserWallet
      language: CSharp
      name:
        CSharp: HideUserWallet()
        VB: HideUserWallet()
      nameWithType:
        CSharp: WalletController.HideUserWallet()
        VB: WalletController.HideUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.HideUserWallet()
        VB: Timba.Games.SacredTails.WalletController.HideUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: HideUserWallet
        path: ''
        startLine: 34010
      syntax:
        content:
          CSharp: public void HideUserWallet()
          VB: Public Sub HideUserWallet
      overload: Timba.Games.SacredTails.WalletController.HideUserWallet*
      implements:
      - Timba.Games.SacredTails.IWallet.HideUserWallet
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.IsReady
      commentId: M:Timba.Games.SacredTails.WalletController.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: WalletController.IsReady()
        VB: WalletController.IsReady()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.IsReady()
        VB: Timba.Games.SacredTails.WalletController.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: IsReady
        path: ''
        startLine: 34015
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.WalletController.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.Lobby
  commentId: N:Timba.Games.SacredTails.Lobby
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.Lobby
    VB: Timba.Games.SacredTails.Lobby
  nameWithType:
    CSharp: Timba.Games.SacredTails.Lobby
    VB: Timba.Games.SacredTails.Lobby
  qualifiedName:
    CSharp: Timba.Games.SacredTails.Lobby
    VB: Timba.Games.SacredTails.Lobby
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.Lobby.SacredTeleport
    commentId: T:Timba.Games.SacredTails.Lobby.SacredTeleport
    language: CSharp
    name:
      CSharp: SacredTeleport
      VB: SacredTeleport
    nameWithType:
      CSharp: SacredTeleport
      VB: SacredTeleport
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.SacredTeleport
      VB: Timba.Games.SacredTails.Lobby.SacredTeleport
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: SacredTeleport
      path: ''
      startLine: 7373
    summary: "\nTeleport the character from trigger position to targetPosition transform\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SacredTeleport : MonoBehaviour'
        VB: >-
          Public Class SacredTeleport

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManager
    language: CSharp
    name:
      CSharp: PartyManager
      VB: PartyManager
    nameWithType:
      CSharp: PartyManager
      VB: PartyManager
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.PartyManager
      VB: Timba.Games.SacredTails.Lobby.PartyManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: PartyManager
      path: ''
      startLine: 18530
    syntax:
      content:
        CSharp: 'public abstract class PartyManager : MonoBehaviour'
        VB: >-
          Public MustInherit Class PartyManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
      commentId: F:Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
      language: CSharp
      name:
        CSharp: selectorPos
        VB: selectorPos
      nameWithType:
        CSharp: PartyManager.selectorPos
        VB: PartyManager.selectorPos
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
        VB: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: selectorPos
        path: ''
        startLine: 18535
      syntax:
        content:
          CSharp: public int selectorPos
          VB: Public selectorPos As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
      commentId: F:Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
      language: CSharp
      name:
        CSharp: shinseiSpawner
        VB: shinseiSpawner
      nameWithType:
        CSharp: PartyManager.shinseiSpawner
        VB: PartyManager.shinseiSpawner
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
        VB: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: shinseiSpawner
        path: ''
        startLine: 18537
      syntax:
        content:
          CSharp: public ShinseiSpawner shinseiSpawner
          VB: Public shinseiSpawner As ShinseiSpawner
        return:
          type: Global.ShinseiSpawner
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManager.Start
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: PartyManager.Start()
        VB: PartyManager.Start()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.Start()
        VB: Timba.Games.SacredTails.Lobby.PartyManager.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Start
        path: ''
        startLine: 18545
      syntax:
        content:
          CSharp: public virtual void Start()
          VB: Public Overridable Sub Start
      overload: Timba.Games.SacredTails.Lobby.PartyManager.Start*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
      language: CSharp
      name:
        CSharp: UpdateShinseis()
        VB: UpdateShinseis()
      nameWithType:
        CSharp: PartyManager.UpdateShinseis()
        VB: PartyManager.UpdateShinseis()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis()
        VB: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: UpdateShinseis
        path: ''
        startLine: 18550
      syntax:
        content:
          CSharp: public void UpdateShinseis()
          VB: Public Sub UpdateShinseis
      overload: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
      language: CSharp
      name:
        CSharp: Initialize(Action<Int32, ShinseiSlot>)
        VB: Initialize(Action(Of Int32, ShinseiSlot))
      nameWithType:
        CSharp: PartyManager.Initialize(Action<Int32, ShinseiSlot>)
        VB: PartyManager.Initialize(Action(Of Int32, ShinseiSlot))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action<System.Int32, ShinseiSlot>)
        VB: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action(Of System.Int32, ShinseiSlot))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Initialize
        path: ''
        startLine: 18583
      syntax:
        content:
          CSharp: public virtual void Initialize(Action<int, ShinseiSlot> onNewSlotCreated = null)
          VB: Public Overridable Sub Initialize(onNewSlotCreated As Action(Of Integer, ShinseiSlot) = Nothing)
        parameters:
        - id: onNewSlotCreated
          type: Global.Action{System.Int32,ShinseiSlot}
      overload: Timba.Games.SacredTails.Lobby.PartyManager.Initialize*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
      language: CSharp
      name:
        CSharp: ChangeOnClickSlotAction(UnityAction<Int32, ShinseiSlot>)
        VB: ChangeOnClickSlotAction(UnityAction(Of Int32, ShinseiSlot))
      nameWithType:
        CSharp: PartyManager.ChangeOnClickSlotAction(UnityAction<Int32, ShinseiSlot>)
        VB: PartyManager.ChangeOnClickSlotAction(UnityAction(Of Int32, ShinseiSlot))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction<System.Int32, ShinseiSlot>)
        VB: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction(Of System.Int32, ShinseiSlot))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: ChangeOnClickSlotAction
        path: ''
        startLine: 18628
      syntax:
        content:
          CSharp: public virtual void ChangeOnClickSlotAction(UnityAction<int, ShinseiSlot> onClick = null)
          VB: Public Overridable Sub ChangeOnClickSlotAction(onClick As UnityAction(Of Integer, ShinseiSlot) = Nothing)
        parameters:
        - id: onClick
          type: Global.UnityAction{System.Int32,ShinseiSlot}
      overload: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
      language: CSharp
      name:
        CSharp: OnClickSlot(Int32, ShinseiSlot)
        VB: OnClickSlot(Int32, ShinseiSlot)
      nameWithType:
        CSharp: PartyManager.OnClickSlot(Int32, ShinseiSlot)
        VB: PartyManager.OnClickSlot(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32, ShinseiSlot)
        VB: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32, ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: OnClickSlot
        path: ''
        startLine: 18644
      syntax:
        content:
          CSharp: public virtual void OnClickSlot(int listIndex, ShinseiSlot eventShinseiSlot)
          VB: Public Overridable Sub OnClickSlot(listIndex As Integer, eventShinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: eventShinseiSlot
          type: Global.ShinseiSlot
      overload: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
      language: CSharp
      name:
        CSharp: HidePanel()
        VB: HidePanel()
      nameWithType:
        CSharp: PartyManager.HidePanel()
        VB: PartyManager.HidePanel()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel()
        VB: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: HidePanel
        path: ''
        startLine: 18676
      syntax:
        content:
          CSharp: public virtual void HidePanel()
          VB: Public Overridable Sub HidePanel
      overload: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManagerLobby
    language: CSharp
    name:
      CSharp: PartyManagerLobby
      VB: PartyManagerLobby
    nameWithType:
      CSharp: PartyManagerLobby
      VB: PartyManagerLobby
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.PartyManagerLobby
      VB: Timba.Games.SacredTails.Lobby.PartyManagerLobby
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: PartyManagerLobby
      path: ''
      startLine: 18691
    syntax:
      content:
        CSharp: 'public class PartyManagerLobby : PartyManager'
        VB: >-
          Public Class PartyManagerLobby

              Inherits PartyManager
    inheritance:
    - System.Object
    - Timba.Games.SacredTails.Lobby.PartyManager
    inheritedMembers:
    - Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
    - Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
    - Timba.Games.SacredTails.Lobby.PartyManager.Start
    - Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
    - Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
    - Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize(Action{System.Int32,ShinseiSlot})
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize(Action{System.Int32,ShinseiSlot})
      language: CSharp
      name:
        CSharp: Initialize(Action<Int32, ShinseiSlot>)
        VB: Initialize(Action(Of Int32, ShinseiSlot))
      nameWithType:
        CSharp: PartyManagerLobby.Initialize(Action<Int32, ShinseiSlot>)
        VB: PartyManagerLobby.Initialize(Action(Of Int32, ShinseiSlot))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize(Action<System.Int32, ShinseiSlot>)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize(Action(Of System.Int32, ShinseiSlot))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Initialize
        path: ''
        startLine: 18693
      syntax:
        content:
          CSharp: public override void Initialize(Action<int, ShinseiSlot> onNewSlotCreated = null)
          VB: Public Overrides Sub Initialize(onNewSlotCreated As Action(Of Integer, ShinseiSlot) = Nothing)
        parameters:
        - id: onNewSlotCreated
          type: Global.Action{System.Int32,ShinseiSlot}
      overload: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize*
      overridden: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot(System.Int32,ShinseiSlot)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot(System.Int32,ShinseiSlot)
      language: CSharp
      name:
        CSharp: OnClickSlot(Int32, ShinseiSlot)
        VB: OnClickSlot(Int32, ShinseiSlot)
      nameWithType:
        CSharp: PartyManagerLobby.OnClickSlot(Int32, ShinseiSlot)
        VB: PartyManagerLobby.OnClickSlot(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot(System.Int32, ShinseiSlot)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot(System.Int32, ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: OnClickSlot
        path: ''
        startLine: 18706
      syntax:
        content:
          CSharp: public override void OnClickSlot(int listIndex, ShinseiSlot eventShinseiSlot)
          VB: Public Overrides Sub OnClickSlot(listIndex As Integer, eventShinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: eventShinseiSlot
          type: Global.ShinseiSlot
      overload: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot*
      overridden: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn(System.Int32)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn(System.Int32)
      language: CSharp
      name:
        CSharp: SwapShinseiBtn(Int32)
        VB: SwapShinseiBtn(Int32)
      nameWithType:
        CSharp: PartyManagerLobby.SwapShinseiBtn(Int32)
        VB: PartyManagerLobby.SwapShinseiBtn(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn(System.Int32)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: SwapShinseiBtn
        path: ''
        startLine: 18712
      syntax:
        content:
          CSharp: public void SwapShinseiBtn(int dir)
          VB: Public Sub SwapShinseiBtn(dir As Integer)
        parameters:
        - id: dir
          type: System.Int32
      overload: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.Lobby.PartyManagerVault
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManagerVault
    language: CSharp
    name:
      CSharp: PartyManagerVault
      VB: PartyManagerVault
    nameWithType:
      CSharp: PartyManagerVault
      VB: PartyManagerVault
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault
      VB: Timba.Games.SacredTails.Lobby.PartyManagerVault
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: PartyManagerVault
      path: ''
      startLine: 18748
    syntax:
      content:
        CSharp: 'public class PartyManagerVault : PartyManager'
        VB: >-
          Public Class PartyManagerVault

              Inherits PartyManager
    inheritance:
    - System.Object
    - Timba.Games.SacredTails.Lobby.PartyManager
    inheritedMembers:
    - Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
    - Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
    - Timba.Games.SacredTails.Lobby.PartyManager.Start
    - Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
    - Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
    - Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.shinseiPreviewPanel
      commentId: F:Timba.Games.SacredTails.Lobby.PartyManagerVault.shinseiPreviewPanel
      language: CSharp
      name:
        CSharp: shinseiPreviewPanel
        VB: shinseiPreviewPanel
      nameWithType:
        CSharp: PartyManagerVault.shinseiPreviewPanel
        VB: PartyManagerVault.shinseiPreviewPanel
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.shinseiPreviewPanel
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.shinseiPreviewPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: shinseiPreviewPanel
        path: ''
        startLine: 18750
      syntax:
        content:
          CSharp: public ShinseiPreviewPanelManager shinseiPreviewPanel
          VB: Public shinseiPreviewPanel As ShinseiPreviewPanelManager
        return:
          type: Global.ShinseiPreviewPanelManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.selectableUi
      commentId: F:Timba.Games.SacredTails.Lobby.PartyManagerVault.selectableUi
      language: CSharp
      name:
        CSharp: selectableUi
        VB: selectableUi
      nameWithType:
        CSharp: PartyManagerVault.selectableUi
        VB: PartyManagerVault.selectableUi
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.selectableUi
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.selectableUi
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: selectableUi
        path: ''
        startLine: 18751
      syntax:
        content:
          CSharp: public SelectableUi selectableUi
          VB: Public selectableUi As SelectableUi
        return:
          type: Global.SelectableUi
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize(Action{System.Int32,ShinseiSlot})
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize(Action{System.Int32,ShinseiSlot})
      language: CSharp
      name:
        CSharp: Initialize(Action<Int32, ShinseiSlot>)
        VB: Initialize(Action(Of Int32, ShinseiSlot))
      nameWithType:
        CSharp: PartyManagerVault.Initialize(Action<Int32, ShinseiSlot>)
        VB: PartyManagerVault.Initialize(Action(Of Int32, ShinseiSlot))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize(Action<System.Int32, ShinseiSlot>)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize(Action(Of System.Int32, ShinseiSlot))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Initialize
        path: ''
        startLine: 18753
      syntax:
        content:
          CSharp: public override void Initialize(Action<int, ShinseiSlot> onNewSlotCreated = null)
          VB: Public Overrides Sub Initialize(onNewSlotCreated As Action(Of Integer, ShinseiSlot) = Nothing)
        parameters:
        - id: onNewSlotCreated
          type: Global.Action{System.Int32,ShinseiSlot}
      overload: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize*
      overridden: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot(System.Int32,ShinseiSlot)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot(System.Int32,ShinseiSlot)
      language: CSharp
      name:
        CSharp: OnClickSlot(Int32, ShinseiSlot)
        VB: OnClickSlot(Int32, ShinseiSlot)
      nameWithType:
        CSharp: PartyManagerVault.OnClickSlot(Int32, ShinseiSlot)
        VB: PartyManagerVault.OnClickSlot(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot(System.Int32, ShinseiSlot)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot(System.Int32, ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: OnClickSlot
        path: ''
        startLine: 18766
      syntax:
        content:
          CSharp: public override void OnClickSlot(int listIndex, ShinseiSlot eventShinseiSlot)
          VB: Public Overrides Sub OnClickSlot(listIndex As Integer, eventShinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: eventShinseiSlot
          type: Global.ShinseiSlot
      overload: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot*
      overridden: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei(System.Int32)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei(System.Int32)
      language: CSharp
      name:
        CSharp: DisplayPreviewForShisnei(Int32)
        VB: DisplayPreviewForShisnei(Int32)
      nameWithType:
        CSharp: PartyManagerVault.DisplayPreviewForShisnei(Int32)
        VB: PartyManagerVault.DisplayPreviewForShisnei(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei(System.Int32)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: DisplayPreviewForShisnei
        path: ''
        startLine: 18778
      syntax:
        content:
          CSharp: public void DisplayPreviewForShisnei(int shinseIndex)
          VB: Public Sub DisplayPreviewForShisnei(shinseIndex As Integer)
        parameters:
        - id: shinseIndex
          type: System.Int32
      overload: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis(System.Int32,ShinseiSlot,System.Int32,ShinseiSlot)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis(System.Int32,ShinseiSlot,System.Int32,ShinseiSlot)
      language: CSharp
      name:
        CSharp: ChangeShinseis(Int32, ShinseiSlot, Int32, ShinseiSlot)
        VB: ChangeShinseis(Int32, ShinseiSlot, Int32, ShinseiSlot)
      nameWithType:
        CSharp: PartyManagerVault.ChangeShinseis(Int32, ShinseiSlot, Int32, ShinseiSlot)
        VB: PartyManagerVault.ChangeShinseis(Int32, ShinseiSlot, Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis(System.Int32, ShinseiSlot, System.Int32, ShinseiSlot)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis(System.Int32, ShinseiSlot, System.Int32, ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: ChangeShinseis
        path: ''
        startLine: 18784
      syntax:
        content:
          CSharp: public void ChangeShinseis(int listIndexFrom, ShinseiSlot shinseiSlotFrom, int listIndexTarget, ShinseiSlot shinseiSlotTarget)
          VB: Public Sub ChangeShinseis(listIndexFrom As Integer, shinseiSlotFrom As ShinseiSlot, listIndexTarget As Integer, shinseiSlotTarget As ShinseiSlot)
        parameters:
        - id: listIndexFrom
          type: System.Int32
        - id: shinseiSlotFrom
          type: Global.ShinseiSlot
        - id: listIndexTarget
          type: System.Int32
        - id: shinseiSlotTarget
          type: Global.ShinseiSlot
      overload: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController
    commentId: T:Timba.Games.SacredTails.Lobby.ShinseiVaultController
    language: CSharp
    name:
      CSharp: ShinseiVaultController
      VB: ShinseiVaultController
    nameWithType:
      CSharp: ShinseiVaultController
      VB: ShinseiVaultController
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.ShinseiVaultController
      VB: Timba.Games.SacredTails.Lobby.ShinseiVaultController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: ShinseiVaultController
      path: ''
      startLine: 19875
    syntax:
      content:
        CSharp: 'public class ShinseiVaultController : MonoBehaviour'
        VB: >-
          Public Class ShinseiVaultController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start
      commentId: M:Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: ShinseiVaultController.Start()
        VB: ShinseiVaultController.Start()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start()
        VB: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Start
        path: ''
        startLine: 19910
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize
      commentId: M:Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: ShinseiVaultController.Initialize()
        VB: ShinseiVaultController.Initialize()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize()
        VB: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Initialize
        path: ''
        startLine: 19915
      syntax:
        content:
          CSharp: public void Initialize()
          VB: Public Sub Initialize
      overload: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected(System.Int32,ShinseiSlot)
      commentId: M:Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected(System.Int32,ShinseiSlot)
      language: CSharp
      name:
        CSharp: OnVaultShinseiSelected(Int32, ShinseiSlot)
        VB: OnVaultShinseiSelected(Int32, ShinseiSlot)
      nameWithType:
        CSharp: ShinseiVaultController.OnVaultShinseiSelected(Int32, ShinseiSlot)
        VB: ShinseiVaultController.OnVaultShinseiSelected(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected(System.Int32, ShinseiSlot)
        VB: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected(System.Int32, ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: OnVaultShinseiSelected
        path: ''
        startLine: 19968
      syntax:
        content:
          CSharp: public void OnVaultShinseiSelected(int listIndex, ShinseiSlot vaultShinseiSlot)
          VB: Public Sub OnVaultShinseiSelected(listIndex As Integer, vaultShinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: vaultShinseiSlot
          type: Global.ShinseiSlot
      overload: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei(System.Int32)
      commentId: M:Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei(System.Int32)
      language: CSharp
      name:
        CSharp: DisplayPreviewForShisnei(Int32)
        VB: DisplayPreviewForShisnei(Int32)
      nameWithType:
        CSharp: ShinseiVaultController.DisplayPreviewForShisnei(Int32)
        VB: ShinseiVaultController.DisplayPreviewForShisnei(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei(System.Int32)
        VB: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: DisplayPreviewForShisnei
        path: ''
        startLine: 20032
      syntax:
        content:
          CSharp: public void DisplayPreviewForShisnei(int shinseIndex)
          VB: Public Sub DisplayPreviewForShisnei(shinseIndex As Integer)
        parameters:
        - id: shinseIndex
          type: System.Int32
      overload: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.Lobby.ShinseiMovement
    commentId: T:Timba.Games.SacredTails.Lobby.ShinseiMovement
    language: CSharp
    name:
      CSharp: ShinseiMovement
      VB: ShinseiMovement
    nameWithType:
      CSharp: ShinseiMovement
      VB: ShinseiMovement
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.ShinseiMovement
      VB: Timba.Games.SacredTails.Lobby.ShinseiMovement
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: ShinseiMovement
      path: ''
      startLine: 28983
    summary: "\nThis class control the movement of the shinsei companion in the lobby\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ShinseiMovement : NetworkBehaviour'
        VB: >-
          Public Class ShinseiMovement

              Inherits NetworkBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.ShinseiMovement.navmeshAgent
      commentId: F:Timba.Games.SacredTails.Lobby.ShinseiMovement.navmeshAgent
      language: CSharp
      name:
        CSharp: navmeshAgent
        VB: navmeshAgent
      nameWithType:
        CSharp: ShinseiMovement.navmeshAgent
        VB: ShinseiMovement.navmeshAgent
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiMovement.navmeshAgent
        VB: Timba.Games.SacredTails.Lobby.ShinseiMovement.navmeshAgent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: navmeshAgent
        path: ''
        startLine: 28987
      syntax:
        content:
          CSharp: public NavMeshAgent navmeshAgent
          VB: Public navmeshAgent As NavMeshAgent
        return:
          type: Global.NavMeshAgent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner(Transform)
      commentId: M:Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner(Transform)
      language: CSharp
      name:
        CSharp: SetOwner(Transform)
        VB: SetOwner(Transform)
      nameWithType:
        CSharp: ShinseiMovement.SetOwner(Transform)
        VB: ShinseiMovement.SetOwner(Transform)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner(Transform)
        VB: Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: SetOwner
        path: ''
        startLine: 29041
      syntax:
        content:
          CSharp: public void SetOwner(Transform targetOwner)
          VB: Public Sub SetOwner(targetOwner As Transform)
        parameters:
        - id: targetOwner
          type: Global.Transform
      overload: Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt(Vector3)
      commentId: M:Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt(Vector3)
      language: CSharp
      name:
        CSharp: MoveAt(Vector3)
        VB: MoveAt(Vector3)
      nameWithType:
        CSharp: ShinseiMovement.MoveAt(Vector3)
        VB: ShinseiMovement.MoveAt(Vector3)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt(Vector3)
        VB: Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: MoveAt
        path: ''
        startLine: 29046
      syntax:
        content:
          CSharp: public void MoveAt(Vector3 targetPosition)
          VB: Public Sub MoveAt(targetPosition As Vector3)
        parameters:
        - id: targetPosition
          type: Global.Vector3
      overload: Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.Lobby.Chat
  commentId: N:Timba.Games.SacredTails.Lobby.Chat
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.Lobby.Chat
    VB: Timba.Games.SacredTails.Lobby.Chat
  nameWithType:
    CSharp: Timba.Games.SacredTails.Lobby.Chat
    VB: Timba.Games.SacredTails.Lobby.Chat
  qualifiedName:
    CSharp: Timba.Games.SacredTails.Lobby.Chat
    VB: Timba.Games.SacredTails.Lobby.Chat
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.Lobby.Chat.ChatModule
    commentId: T:Timba.Games.SacredTails.Lobby.Chat.ChatModule
    language: CSharp
    name:
      CSharp: ChatModule
      VB: ChatModule
    nameWithType:
      CSharp: ChatModule
      VB: ChatModule
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.Chat.ChatModule
      VB: Timba.Games.SacredTails.Lobby.Chat.ChatModule
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby.Chat
    source:
      id: ChatModule
      path: ''
      startLine: 34651
    syntax:
      content:
        CSharp: 'public class ChatModule : MonoBehaviour'
        VB: >-
          Public Class ChatModule

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init
      commentId: M:Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: ChatModule.Init()
        VB: ChatModule.Init()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init()
        VB: Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby.Chat
      source:
        id: Init
        path: ''
        startLine: 34676
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage
      commentId: M:Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage
      language: CSharp
      name:
        CSharp: SendMessage()
        VB: SendMessage()
      nameWithType:
        CSharp: ChatModule.SendMessage()
        VB: ChatModule.SendMessage()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage()
        VB: Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby.Chat
      source:
        id: SendMessage
        path: ''
        startLine: 34692
      syntax:
        content:
          CSharp: public void SendMessage()
          VB: Public Sub SendMessage
      overload: Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.Lobby.Chat.Message
    commentId: T:Timba.Games.SacredTails.Lobby.Chat.Message
    language: CSharp
    name:
      CSharp: Message
      VB: Message
    nameWithType:
      CSharp: Message
      VB: Message
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.Chat.Message
      VB: Timba.Games.SacredTails.Lobby.Chat.Message
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby.Chat
    source:
      id: Message
      path: ''
      startLine: 34715
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Message
        VB: >-
          <Serializable>

          Public Class Message
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.Chat.Message.text
      commentId: F:Timba.Games.SacredTails.Lobby.Chat.Message.text
      language: CSharp
      name:
        CSharp: text
        VB: text
      nameWithType:
        CSharp: Message.text
        VB: Message.text
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.Chat.Message.text
        VB: Timba.Games.SacredTails.Lobby.Chat.Message.text
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby.Chat
      source:
        id: text
        path: ''
        startLine: 34718
      syntax:
        content:
          CSharp: public string text
          VB: Public text As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.Chat.Message.textObject
      commentId: F:Timba.Games.SacredTails.Lobby.Chat.Message.textObject
      language: CSharp
      name:
        CSharp: textObject
        VB: textObject
      nameWithType:
        CSharp: Message.textObject
        VB: Message.textObject
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.Chat.Message.textObject
        VB: Timba.Games.SacredTails.Lobby.Chat.Message.textObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby.Chat
      source:
        id: textObject
        path: ''
        startLine: 34719
      syntax:
        content:
          CSharp: public TMP_Text textObject
          VB: Public textObject As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.LobbyDatabase
  commentId: N:Timba.Games.SacredTails.LobbyDatabase
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.LobbyDatabase
    VB: Timba.Games.SacredTails.LobbyDatabase
  nameWithType:
    CSharp: Timba.Games.SacredTails.LobbyDatabase
    VB: Timba.Games.SacredTails.LobbyDatabase
  qualifiedName:
    CSharp: Timba.Games.SacredTails.LobbyDatabase
    VB: Timba.Games.SacredTails.LobbyDatabase
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    language: CSharp
    name:
      CSharp: ILobbydatabase
      VB: ILobbydatabase
    nameWithType:
      CSharp: ILobbydatabase
      VB: ILobbydatabase
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
      VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: ILobbydatabase
      path: ''
      startLine: 26670
    syntax:
      content:
        CSharp: public interface ILobbydatabase
        VB: >-
          Public Interface ILobbydatabase

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      commentId: P:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      language: CSharp
      name:
        CSharp: CurrentUserData
        VB: CurrentUserData
      nameWithType:
        CSharp: ILobbydatabase.CurrentUserData
        VB: ILobbydatabase.CurrentUserData
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: CurrentUserData
        path: ''
        startLine: 26672
      syntax:
        content:
          CSharp: LobbyPlayerBasePayload CurrentUserData { get; }
          VB: ReadOnly Property CurrentUserData As LobbyPlayerBasePayload
        parameters: []
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      language: CSharp
      name:
        CSharp: ConnectToLobby(Int32, LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: ConnectToLobby(Int32, LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      nameWithType:
        CSharp: ILobbydatabase.ConnectToLobby(Int32, LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: ILobbydatabase.ConnectToLobby(Int32, LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: ConnectToLobby
        path: ''
        startLine: 26673
      syntax:
        content:
          CSharp: void ConnectToLobby(int lobbyId, LobbyPlayerBasePayload userData, Action<ExecuteFunctionResult> resultCallback)
          VB: Sub ConnectToLobby(lobbyId As Integer, userData As LobbyPlayerBasePayload, resultCallback As Action(Of ExecuteFunctionResult))
        parameters:
        - id: lobbyId
          type: System.Int32
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      language: CSharp
      name:
        CSharp: SetGetPlayersData(LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: SetGetPlayersData(LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      nameWithType:
        CSharp: ILobbydatabase.SetGetPlayersData(LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: ILobbydatabase.SetGetPlayersData(LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: SetGetPlayersData
        path: ''
        startLine: 26674
      syntax:
        content:
          CSharp: void SetGetPlayersData(LobbyPlayerBasePayload userData, Action<ExecuteFunctionResult> resultCallback)
          VB: Sub SetGetPlayersData(userData As LobbyPlayerBasePayload, resultCallback As Action(Of ExecuteFunctionResult))
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
      language: CSharp
      name:
        CSharp: RecievePlayersData(Action<Dictionary<String, LobbyPlayerBasePayload>>)
        VB: RecievePlayersData(Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
      nameWithType:
        CSharp: ILobbydatabase.RecievePlayersData(Action<Dictionary<String, LobbyPlayerBasePayload>>)
        VB: ILobbydatabase.RecievePlayersData(Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action<System.Collections.Generic.Dictionary<System.String, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload>>)
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action(Of System.Collections.Generic.Dictionary(Of System.String, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: RecievePlayersData
        path: ''
        startLine: 26675
      syntax:
        content:
          CSharp: void RecievePlayersData(Action<Dictionary<string, LobbyPlayerBasePayload>> callback)
          VB: Sub RecievePlayersData(callback As Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
        parameters:
        - id: callback
          type: Global.Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}}
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
      language: CSharp
      name:
        CSharp: SendPlayerData(LobbyPlayerBasePayload, Action<Boolean>)
        VB: SendPlayerData(LobbyPlayerBasePayload, Action(Of Boolean))
      nameWithType:
        CSharp: ILobbydatabase.SendPlayerData(LobbyPlayerBasePayload, Action<Boolean>)
        VB: ILobbydatabase.SendPlayerData(LobbyPlayerBasePayload, Action(Of Boolean))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<System.Boolean>)
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of System.Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: SendPlayerData
        path: ''
        startLine: 26676
      syntax:
        content:
          CSharp: void SendPlayerData(LobbyPlayerBasePayload userData, Action<bool> onSendSuccess = null)
          VB: Sub SendPlayerData(userData As LobbyPlayerBasePayload, onSendSuccess As Action(Of Boolean) = Nothing)
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: onSendSuccess
          type: Global.Action{System.Boolean}
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      language: CSharp
      name:
        CSharp: DisconnectFromLobby(LobbyPlayerBasePayload)
        VB: DisconnectFromLobby(LobbyPlayerBasePayload)
      nameWithType:
        CSharp: ILobbydatabase.DisconnectFromLobby(LobbyPlayerBasePayload)
        VB: ILobbydatabase.DisconnectFromLobby(LobbyPlayerBasePayload)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: DisconnectFromLobby
        path: ''
        startLine: 26677
      syntax:
        content:
          CSharp: void DisconnectFromLobby(LobbyPlayerBasePayload userData)
          VB: Sub DisconnectFromLobby(userData As LobbyPlayerBasePayload)
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    language: CSharp
    name:
      CSharp: ITournamentDatabase
      VB: ITournamentDatabase
    nameWithType:
      CSharp: ITournamentDatabase
      VB: ITournamentDatabase
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
      VB: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: ITournamentDatabase
      path: ''
      startLine: 26687
    syntax:
      content:
        CSharp: public interface ITournamentDatabase
        VB: >-
          Public Interface ITournamentDatabase

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
      language: CSharp
      name:
        CSharp: TournamentRequest(String, TypeOfTournamentRequest, Action<ExecuteFunctionResult>, Boolean, Int32)
        VB: TournamentRequest(String, TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), Boolean, Int32)
      nameWithType:
        CSharp: ITournamentDatabase.TournamentRequest(String, TypeOfTournamentRequest, Action<ExecuteFunctionResult>, Boolean, Int32)
        VB: ITournamentDatabase.TournamentRequest(String, TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), Boolean, Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String, Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest, Action<ExecuteFunctionResult>, System.Boolean, System.Int32)
        VB: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String, Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), System.Boolean, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: TournamentRequest
        path: ''
        startLine: 26689
      syntax:
        content:
          CSharp: void TournamentRequest(string tournamentId, TypeOfTournamentRequest typeOfRequest, Action<ExecuteFunctionResult> resultCallback, bool shouldMarkReady = true, int timesTrying = 0)
          VB: Sub TournamentRequest(tournamentId As String, typeOfRequest As TypeOfTournamentRequest, resultCallback As Action(Of ExecuteFunctionResult), shouldMarkReady As Boolean = True, timesTrying As Integer = 0)
        parameters:
        - id: tournamentId
          type: System.String
        - id: typeOfRequest
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
        - id: shouldMarkReady
          type: System.Boolean
        - id: timesTrying
          type: System.Int32
      overload: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
    language: CSharp
    name:
      CSharp: LobbyPlayerBasePayload
      VB: LobbyPlayerBasePayload
    nameWithType:
      CSharp: LobbyPlayerBasePayload
      VB: LobbyPlayerBasePayload
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: LobbyPlayerBasePayload
      path: ''
      startLine: 27253
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class LobbyPlayerBasePayload
        VB: >-
          <Serializable>

          Public Class LobbyPlayerBasePayload
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.connectionId
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.connectionId
      language: CSharp
      name:
        CSharp: connectionId
        VB: connectionId
      nameWithType:
        CSharp: LobbyPlayerBasePayload.connectionId
        VB: LobbyPlayerBasePayload.connectionId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.connectionId
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.connectionId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: connectionId
        path: ''
        startLine: 27256
      syntax:
        content:
          CSharp: public ulong connectionId
          VB: Public connectionId As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.lobby
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.lobby
      language: CSharp
      name:
        CSharp: lobby
        VB: lobby
      nameWithType:
        CSharp: LobbyPlayerBasePayload.lobby
        VB: LobbyPlayerBasePayload.lobby
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.lobby
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.lobby
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: lobby
        path: ''
        startLine: 27257
      syntax:
        content:
          CSharp: public int lobby
          VB: Public lobby As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.displayName
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.displayName
      language: CSharp
      name:
        CSharp: displayName
        VB: displayName
      nameWithType:
        CSharp: LobbyPlayerBasePayload.displayName
        VB: LobbyPlayerBasePayload.displayName
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.displayName
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.displayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: displayName
        path: ''
        startLine: 27258
      syntax:
        content:
          CSharp: public string displayName
          VB: Public displayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.encryptIV
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.encryptIV
      language: CSharp
      name:
        CSharp: encryptIV
        VB: encryptIV
      nameWithType:
        CSharp: LobbyPlayerBasePayload.encryptIV
        VB: LobbyPlayerBasePayload.encryptIV
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.encryptIV
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.encryptIV
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: encryptIV
        path: ''
        startLine: 27259
      syntax:
        content:
          CSharp: public string encryptIV
          VB: Public encryptIV As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.chatMessages
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.chatMessages
      language: CSharp
      name:
        CSharp: chatMessages
        VB: chatMessages
      nameWithType:
        CSharp: LobbyPlayerBasePayload.chatMessages
        VB: LobbyPlayerBasePayload.chatMessages
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.chatMessages
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.chatMessages
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: chatMessages
        path: ''
        startLine: 27260
      syntax:
        content:
          CSharp: public List<ChatMessagePayload> chatMessages
          VB: Public chatMessages As List(Of ChatMessagePayload)
        return:
          type: System.Collections.Generic.List{Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playerPosition
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playerPosition
      language: CSharp
      name:
        CSharp: playerPosition
        VB: playerPosition
      nameWithType:
        CSharp: LobbyPlayerBasePayload.playerPosition
        VB: LobbyPlayerBasePayload.playerPosition
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playerPosition
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playerPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: playerPosition
        path: ''
        startLine: 27261
      syntax:
        content:
          CSharp: public SerializableVector3 playerPosition
          VB: Public playerPosition As SerializableVector3
        return:
          type: Global.SerializableVector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playfabIdEncrypted
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playfabIdEncrypted
      language: CSharp
      name:
        CSharp: playfabIdEncrypted
        VB: playfabIdEncrypted
      nameWithType:
        CSharp: LobbyPlayerBasePayload.playfabIdEncrypted
        VB: LobbyPlayerBasePayload.playfabIdEncrypted
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playfabIdEncrypted
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playfabIdEncrypted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: playfabIdEncrypted
        path: ''
        startLine: 27262
      syntax:
        content:
          CSharp: public string playfabIdEncrypted
          VB: Public playfabIdEncrypted As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.shinseiCompanionDna
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.shinseiCompanionDna
      language: CSharp
      name:
        CSharp: shinseiCompanionDna
        VB: shinseiCompanionDna
      nameWithType:
        CSharp: LobbyPlayerBasePayload.shinseiCompanionDna
        VB: LobbyPlayerBasePayload.shinseiCompanionDna
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.shinseiCompanionDna
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.shinseiCompanionDna
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: shinseiCompanionDna
        path: ''
        startLine: 27263
      syntax:
        content:
          CSharp: public string shinseiCompanionDna
          VB: Public shinseiCompanionDna As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterStyle
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterStyle
      language: CSharp
      name:
        CSharp: characterStyle
        VB: characterStyle
      nameWithType:
        CSharp: LobbyPlayerBasePayload.characterStyle
        VB: LobbyPlayerBasePayload.characterStyle
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterStyle
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterStyle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: characterStyle
        path: ''
        startLine: 27264
      syntax:
        content:
          CSharp: public string characterStyle
          VB: Public characterStyle As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.currentMatchId
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.currentMatchId
      language: CSharp
      name:
        CSharp: currentMatchId
        VB: currentMatchId
      nameWithType:
        CSharp: LobbyPlayerBasePayload.currentMatchId
        VB: LobbyPlayerBasePayload.currentMatchId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.currentMatchId
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.currentMatchId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: currentMatchId
        path: ''
        startLine: 27265
      syntax:
        content:
          CSharp: public string currentMatchId
          VB: Public currentMatchId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterState
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterState
      language: CSharp
      name:
        CSharp: characterState
        VB: characterState
      nameWithType:
        CSharp: LobbyPlayerBasePayload.characterState
        VB: LobbyPlayerBasePayload.characterState
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterState
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: characterState
        path: ''
        startLine: 27266
      syntax:
        content:
          CSharp: public int characterState
          VB: Public characterState As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.challengedPlayer
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.challengedPlayer
      language: CSharp
      name:
        CSharp: challengedPlayer
        VB: challengedPlayer
      nameWithType:
        CSharp: LobbyPlayerBasePayload.challengedPlayer
        VB: LobbyPlayerBasePayload.challengedPlayer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.challengedPlayer
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.challengedPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: challengedPlayer
        path: ''
        startLine: 27267
      syntax:
        content:
          CSharp: public string challengedPlayer
          VB: Public challengedPlayer As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
    language: CSharp
    name:
      CSharp: ChatMessagePayload
      VB: ChatMessagePayload
    nameWithType:
      CSharp: ChatMessagePayload
      VB: ChatMessagePayload
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
      VB: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: ChatMessagePayload
      path: ''
      startLine: 27269
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ChatMessagePayload
        VB: >-
          <Serializable>

          Public Class ChatMessagePayload
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.id
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: ChatMessagePayload.id
        VB: ChatMessagePayload.id
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.id
        VB: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: id
        path: ''
        startLine: 27272
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.message
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.message
      language: CSharp
      name:
        CSharp: message
        VB: message
      nameWithType:
        CSharp: ChatMessagePayload.message
        VB: ChatMessagePayload.message
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.message
        VB: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.message
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: message
        path: ''
        startLine: 27273
      syntax:
        content:
          CSharp: public string message
          VB: Public message As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.timeStamp
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.timeStamp
      language: CSharp
      name:
        CSharp: timeStamp
        VB: timeStamp
      nameWithType:
        CSharp: ChatMessagePayload.timeStamp
        VB: ChatMessagePayload.timeStamp
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.timeStamp
        VB: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.timeStamp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: timeStamp
        path: ''
        startLine: 27274
      syntax:
        content:
          CSharp: public string timeStamp
          VB: Public timeStamp As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
    language: CSharp
    name:
      CSharp: CharacterStateEnum
      VB: CharacterStateEnum
    nameWithType:
      CSharp: CharacterStateEnum
      VB: CharacterStateEnum
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
      VB: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: CharacterStateEnum
      path: ''
      startLine: 27277
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public enum CharacterStateEnum
        VB: >-
          <Serializable>

          Public Enum CharacterStateEnum
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.LOBBY
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.LOBBY
      language: CSharp
      name:
        CSharp: LOBBY
        VB: LOBBY
      nameWithType:
        CSharp: CharacterStateEnum.LOBBY
        VB: CharacterStateEnum.LOBBY
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.LOBBY
        VB: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.LOBBY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: LOBBY
        path: ''
        startLine: 27280
      syntax:
        content:
          CSharp: LOBBY = 0
          VB: LOBBY = 0
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.BACKPACK
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.BACKPACK
      language: CSharp
      name:
        CSharp: BACKPACK
        VB: BACKPACK
      nameWithType:
        CSharp: CharacterStateEnum.BACKPACK
        VB: CharacterStateEnum.BACKPACK
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.BACKPACK
        VB: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.BACKPACK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: BACKPACK
        path: ''
        startLine: 27281
      syntax:
        content:
          CSharp: BACKPACK = 1
          VB: BACKPACK = 1
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.COMBAT
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.COMBAT
      language: CSharp
      name:
        CSharp: COMBAT
        VB: COMBAT
      nameWithType:
        CSharp: CharacterStateEnum.COMBAT
        VB: CharacterStateEnum.COMBAT
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.COMBAT
        VB: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.COMBAT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: COMBAT
        path: ''
        startLine: 27282
      syntax:
        content:
          CSharp: COMBAT = 2
          VB: COMBAT = 2
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
    language: CSharp
    name:
      CSharp: PlayfabLobbyDatabase
      VB: PlayfabLobbyDatabase
    nameWithType:
      CSharp: PlayfabLobbyDatabase
      VB: PlayfabLobbyDatabase
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
      VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: PlayfabLobbyDatabase
      path: ''
      startLine: 27298
    syntax:
      content:
        CSharp: 'public class PlayfabLobbyDatabase : MonoBehaviour, ILobbydatabase'
        VB: >-
          Public Class PlayfabLobbyDatabase

              Inherits MonoBehaviour

              Implements ILobbydatabase
    inheritance:
    - System.Object
    implements:
    - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentUserData
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentUserData
      language: CSharp
      name:
        CSharp: currentUserData
        VB: currentUserData
      nameWithType:
        CSharp: PlayfabLobbyDatabase.currentUserData
        VB: PlayfabLobbyDatabase.currentUserData
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentUserData
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentUserData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: currentUserData
        path: ''
        startLine: 27301
      syntax:
        content:
          CSharp: public LobbyPlayerBasePayload currentUserData
          VB: Public currentUserData As LobbyPlayerBasePayload
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentLobby
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentLobby
      language: CSharp
      name:
        CSharp: currentLobby
        VB: currentLobby
      nameWithType:
        CSharp: PlayfabLobbyDatabase.currentLobby
        VB: PlayfabLobbyDatabase.currentLobby
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentLobby
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentLobby
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: currentLobby
        path: ''
        startLine: 27302
      syntax:
        content:
          CSharp: public int currentLobby
          VB: Public currentLobby As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testPlayfabId
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testPlayfabId
      language: CSharp
      name:
        CSharp: testPlayfabId
        VB: testPlayfabId
      nameWithType:
        CSharp: PlayfabLobbyDatabase.testPlayfabId
        VB: PlayfabLobbyDatabase.testPlayfabId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testPlayfabId
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testPlayfabId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: testPlayfabId
        path: ''
        startLine: 27303
      syntax:
        content:
          CSharp: public string testPlayfabId
          VB: Public testPlayfabId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testUserData
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testUserData
      language: CSharp
      name:
        CSharp: testUserData
        VB: testUserData
      nameWithType:
        CSharp: PlayfabLobbyDatabase.testUserData
        VB: PlayfabLobbyDatabase.testUserData
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testUserData
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testUserData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: testUserData
        path: ''
        startLine: 27304
      syntax:
        content:
          CSharp: public LobbyPlayerBasePayload testUserData
          VB: Public testUserData As LobbyPlayerBasePayload
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
      commentId: P:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
      language: CSharp
      name:
        CSharp: CurrentUserData
        VB: CurrentUserData
      nameWithType:
        CSharp: PlayfabLobbyDatabase.CurrentUserData
        VB: PlayfabLobbyDatabase.CurrentUserData
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: CurrentUserData
        path: ''
        startLine: 27306
      syntax:
        content:
          CSharp: public LobbyPlayerBasePayload CurrentUserData { get; }
          VB: Public ReadOnly Property CurrentUserData As LobbyPlayerBasePayload
        parameters: []
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: PlayfabLobbyDatabase.Awake()
        VB: PlayfabLobbyDatabase.Awake()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake()
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: Awake
        path: ''
        startLine: 27308
      syntax:
        content:
          CSharp: public void Awake()
          VB: Public Sub Awake
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: PlayfabLobbyDatabase.IsReady()
        VB: PlayfabLobbyDatabase.IsReady()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady()
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: IsReady
        path: ''
        startLine: 27318
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      language: CSharp
      name:
        CSharp: ConnectToLobby(Int32, LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: ConnectToLobby(Int32, LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      nameWithType:
        CSharp: PlayfabLobbyDatabase.ConnectToLobby(Int32, LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: PlayfabLobbyDatabase.ConnectToLobby(Int32, LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby(System.Int32, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby(System.Int32, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: ConnectToLobby
        path: ''
        startLine: 27327
      syntax:
        content:
          CSharp: public void ConnectToLobby(int lobbyId, LobbyPlayerBasePayload userData, Action<ExecuteFunctionResult> resultCallback)
          VB: Public Sub ConnectToLobby(lobbyId As Integer, userData As LobbyPlayerBasePayload, resultCallback As Action(Of ExecuteFunctionResult))
        parameters:
        - id: lobbyId
          type: System.Int32
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      language: CSharp
      name:
        CSharp: SetGetPlayersData(LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: SetGetPlayersData(LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      nameWithType:
        CSharp: PlayfabLobbyDatabase.SetGetPlayersData(LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: PlayfabLobbyDatabase.SetGetPlayersData(LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: SetGetPlayersData
        path: ''
        startLine: 27360
      syntax:
        content:
          CSharp: public void SetGetPlayersData(LobbyPlayerBasePayload userData, Action<ExecuteFunctionResult> callback)
          VB: Public Sub SetGetPlayersData(userData As LobbyPlayerBasePayload, callback As Action(Of ExecuteFunctionResult))
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: callback
          type: Global.Action{ExecuteFunctionResult}
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
      language: CSharp
      name:
        CSharp: RecievePlayersData(Action<Dictionary<String, LobbyPlayerBasePayload>>)
        VB: RecievePlayersData(Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
      nameWithType:
        CSharp: PlayfabLobbyDatabase.RecievePlayersData(Action<Dictionary<String, LobbyPlayerBasePayload>>)
        VB: PlayfabLobbyDatabase.RecievePlayersData(Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData(Action<System.Collections.Generic.Dictionary<System.String, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload>>)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData(Action(Of System.Collections.Generic.Dictionary(Of System.String, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: RecievePlayersData
        path: ''
        startLine: 27396
      syntax:
        content:
          CSharp: public void RecievePlayersData(Action<Dictionary<string, LobbyPlayerBasePayload>> callback)
          VB: Public Sub RecievePlayersData(callback As Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
        parameters:
        - id: callback
          type: Global.Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}}
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
      language: CSharp
      name:
        CSharp: SendPlayerData(LobbyPlayerBasePayload, Action<Boolean>)
        VB: SendPlayerData(LobbyPlayerBasePayload, Action(Of Boolean))
      nameWithType:
        CSharp: PlayfabLobbyDatabase.SendPlayerData(LobbyPlayerBasePayload, Action<Boolean>)
        VB: PlayfabLobbyDatabase.SendPlayerData(LobbyPlayerBasePayload, Action(Of Boolean))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<System.Boolean>)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of System.Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: SendPlayerData
        path: ''
        startLine: 27431
      syntax:
        content:
          CSharp: public void SendPlayerData(LobbyPlayerBasePayload userData, Action<bool> onSendSuccess = null)
          VB: Public Sub SendPlayerData(userData As LobbyPlayerBasePayload, onSendSuccess As Action(Of Boolean) = Nothing)
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: onSendSuccess
          type: Global.Action{System.Boolean}
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      language: CSharp
      name:
        CSharp: DisconnectFromLobby(LobbyPlayerBasePayload)
        VB: DisconnectFromLobby(LobbyPlayerBasePayload)
      nameWithType:
        CSharp: PlayfabLobbyDatabase.DisconnectFromLobby(LobbyPlayerBasePayload)
        VB: PlayfabLobbyDatabase.DisconnectFromLobby(LobbyPlayerBasePayload)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: DisconnectFromLobby
        path: ''
        startLine: 27452
      syntax:
        content:
          CSharp: public void DisconnectFromLobby(LobbyPlayerBasePayload userData)
          VB: Public Sub DisconnectFromLobby(userData As LobbyPlayerBasePayload)
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.DeletePayload
    language: CSharp
    name:
      CSharp: DeletePayload
      VB: DeletePayload
    nameWithType:
      CSharp: DeletePayload
      VB: DeletePayload
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
      VB: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: DeletePayload
      path: ''
      startLine: 27492
    syntax:
      content:
        CSharp: public struct DeletePayload
        VB: Public Structure DeletePayload
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.playfabIdEncrypted
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.DeletePayload.playfabIdEncrypted
      language: CSharp
      name:
        CSharp: playfabIdEncrypted
        VB: playfabIdEncrypted
      nameWithType:
        CSharp: DeletePayload.playfabIdEncrypted
        VB: DeletePayload.playfabIdEncrypted
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.playfabIdEncrypted
        VB: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.playfabIdEncrypted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: playfabIdEncrypted
        path: ''
        startLine: 27494
      syntax:
        content:
          CSharp: public string playfabIdEncrypted
          VB: Public playfabIdEncrypted As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.encryptIV
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.DeletePayload.encryptIV
      language: CSharp
      name:
        CSharp: encryptIV
        VB: encryptIV
      nameWithType:
        CSharp: DeletePayload.encryptIV
        VB: DeletePayload.encryptIV
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.encryptIV
        VB: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.encryptIV
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: encryptIV
        path: ''
        startLine: 27495
      syntax:
        content:
          CSharp: public string encryptIV
          VB: Public encryptIV As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
    language: CSharp
    name:
      CSharp: PlayfabTournamentDatabase
      VB: PlayfabTournamentDatabase
    nameWithType:
      CSharp: PlayfabTournamentDatabase
      VB: PlayfabTournamentDatabase
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
      VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: PlayfabTournamentDatabase
      path: ''
      startLine: 27514
    syntax:
      content:
        CSharp: 'public class PlayfabTournamentDatabase : MonoBehaviour, ITournamentDatabase'
        VB: >-
          Public Class PlayfabTournamentDatabase

              Inherits MonoBehaviour

              Implements ITournamentDatabase
    inheritance:
    - System.Object
    implements:
    - Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugRequest
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugRequest
      language: CSharp
      name:
        CSharp: debugRequest
        VB: debugRequest
      nameWithType:
        CSharp: PlayfabTournamentDatabase.debugRequest
        VB: PlayfabTournamentDatabase.debugRequest
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugRequest
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugRequest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: debugRequest
        path: ''
        startLine: 27516
      syntax:
        content:
          CSharp: public bool debugRequest
          VB: Public debugRequest As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugResult
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugResult
      language: CSharp
      name:
        CSharp: debugResult
        VB: debugResult
      nameWithType:
        CSharp: PlayfabTournamentDatabase.debugResult
        VB: PlayfabTournamentDatabase.debugResult
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugResult
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugResult
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: debugResult
        path: ''
        startLine: 27517
      syntax:
        content:
          CSharp: public bool debugResult
          VB: Public debugResult As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugError
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugError
      language: CSharp
      name:
        CSharp: debugError
        VB: debugError
      nameWithType:
        CSharp: PlayfabTournamentDatabase.debugError
        VB: PlayfabTournamentDatabase.debugError
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugError
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugError
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: debugError
        path: ''
        startLine: 27518
      syntax:
        content:
          CSharp: public bool debugError
          VB: Public debugError As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: PlayfabTournamentDatabase.IsReady()
        VB: PlayfabTournamentDatabase.IsReady()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady()
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: IsReady
        path: ''
        startLine: 27519
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
      language: CSharp
      name:
        CSharp: TournamentRequest(String, TypeOfTournamentRequest, Action<ExecuteFunctionResult>, Boolean, Int32)
        VB: TournamentRequest(String, TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), Boolean, Int32)
      nameWithType:
        CSharp: PlayfabTournamentDatabase.TournamentRequest(String, TypeOfTournamentRequest, Action<ExecuteFunctionResult>, Boolean, Int32)
        VB: PlayfabTournamentDatabase.TournamentRequest(String, TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), Boolean, Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest(System.String, Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest, Action<ExecuteFunctionResult>, System.Boolean, System.Int32)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest(System.String, Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), System.Boolean, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: TournamentRequest
        path: ''
        startLine: 27521
      syntax:
        content:
          CSharp: public void TournamentRequest(string tournamentId, TypeOfTournamentRequest typeOfRequest, Action<ExecuteFunctionResult> resultCallback, bool shouldMarkReady = false, int timesTrying = 0)
          VB: Public Sub TournamentRequest(tournamentId As String, typeOfRequest As TypeOfTournamentRequest, resultCallback As Action(Of ExecuteFunctionResult), shouldMarkReady As Boolean = False, timesTrying As Integer = 0)
        parameters:
        - id: tournamentId
          type: System.String
        - id: typeOfRequest
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
        - id: shouldMarkReady
          type: System.Boolean
        - id: timesTrying
          type: System.Int32
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.RequestConstants
    language: CSharp
    name:
      CSharp: RequestConstants
      VB: RequestConstants
    nameWithType:
      CSharp: RequestConstants
      VB: RequestConstants
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
      VB: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: RequestConstants
      path: ''
      startLine: 27584
    syntax:
      content:
        CSharp: public static class RequestConstants
        VB: Public Module RequestConstants
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.baseUrl
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.RequestConstants.baseUrl
      language: CSharp
      name:
        CSharp: baseUrl
        VB: baseUrl
      nameWithType:
        CSharp: RequestConstants.baseUrl
        VB: RequestConstants.baseUrl
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.baseUrl
        VB: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.baseUrl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: baseUrl
        path: ''
        startLine: 27586
      syntax:
        content:
          CSharp: public const string baseUrl = "https://sacredtails.azurewebsites.net/api/"
          VB: Public Const baseUrl As String = "https://sacredtails.azurewebsites.net/api/"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseMessage
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseMessage
      language: CSharp
      name:
        CSharp: firebaseMessage
        VB: firebaseMessage
      nameWithType:
        CSharp: RequestConstants.firebaseMessage
        VB: RequestConstants.firebaseMessage
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseMessage
        VB: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseMessage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: firebaseMessage
        path: ''
        startLine: 27588
      syntax:
        content:
          CSharp: 'public const string firebaseMessage = "<color=blue>Firebase Lobby Database: </color>"'
          VB: 'Public Const firebaseMessage As String = "<color=blue>Firebase Lobby Database: </color>"'
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseError
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseError
      language: CSharp
      name:
        CSharp: firebaseError
        VB: firebaseError
      nameWithType:
        CSharp: RequestConstants.firebaseError
        VB: RequestConstants.firebaseError
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseError
        VB: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseError
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: firebaseError
        path: ''
        startLine: 27589
      syntax:
        content:
          CSharp: 'public const string firebaseError = "<color=red>Firebase Lobby Database: </color>"'
          VB: 'Public Const firebaseError As String = "<color=red>Firebase Lobby Database: </color>"'
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
    language: CSharp
    name:
      CSharp: TypeOfTournamentRequest
      VB: TypeOfTournamentRequest
    nameWithType:
      CSharp: TypeOfTournamentRequest
      VB: TypeOfTournamentRequest
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: TypeOfTournamentRequest
      path: ''
      startLine: 27644
    syntax:
      content:
        CSharp: public enum TypeOfTournamentRequest
        VB: Public Enum TypeOfTournamentRequest
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.JOIN_TOURNAMENT
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.JOIN_TOURNAMENT
      language: CSharp
      name:
        CSharp: JOIN_TOURNAMENT
        VB: JOIN_TOURNAMENT
      nameWithType:
        CSharp: TypeOfTournamentRequest.JOIN_TOURNAMENT
        VB: TypeOfTournamentRequest.JOIN_TOURNAMENT
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.JOIN_TOURNAMENT
        VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.JOIN_TOURNAMENT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: JOIN_TOURNAMENT
        path: ''
        startLine: 27646
      syntax:
        content:
          CSharp: JOIN_TOURNAMENT = 0
          VB: JOIN_TOURNAMENT = 0
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_READY_STATE
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_READY_STATE
      language: CSharp
      name:
        CSharp: CHECK_READY_STATE
        VB: CHECK_READY_STATE
      nameWithType:
        CSharp: TypeOfTournamentRequest.CHECK_READY_STATE
        VB: TypeOfTournamentRequest.CHECK_READY_STATE
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_READY_STATE
        VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_READY_STATE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: CHECK_READY_STATE
        path: ''
        startLine: 27647
      syntax:
        content:
          CSharp: CHECK_READY_STATE = 1
          VB: CHECK_READY_STATE = 1
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
      language: CSharp
      name:
        CSharp: CHECK_TOURNAMENT_STATE
        VB: CHECK_TOURNAMENT_STATE
      nameWithType:
        CSharp: TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
        VB: TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
        VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: CHECK_TOURNAMENT_STATE
        path: ''
        startLine: 27648
      syntax:
        content:
          CSharp: CHECK_TOURNAMENT_STATE = 2
          VB: CHECK_TOURNAMENT_STATE = 2
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
      language: CSharp
      name:
        CSharp: GET_CURRENT_BRACKETS_DATA
        VB: GET_CURRENT_BRACKETS_DATA
      nameWithType:
        CSharp: TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
        VB: TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
        VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: GET_CURRENT_BRACKETS_DATA
        path: ''
        startLine: 27649
      syntax:
        content:
          CSharp: GET_CURRENT_BRACKETS_DATA = 3
          VB: GET_CURRENT_BRACKETS_DATA = 3
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_TOURNAMENT_LIST
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_TOURNAMENT_LIST
      language: CSharp
      name:
        CSharp: GET_TOURNAMENT_LIST
        VB: GET_TOURNAMENT_LIST
      nameWithType:
        CSharp: TypeOfTournamentRequest.GET_TOURNAMENT_LIST
        VB: TypeOfTournamentRequest.GET_TOURNAMENT_LIST
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_TOURNAMENT_LIST
        VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_TOURNAMENT_LIST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: GET_TOURNAMENT_LIST
        path: ''
        startLine: 27650
      syntax:
        content:
          CSharp: GET_TOURNAMENT_LIST = 4
          VB: GET_TOURNAMENT_LIST = 4
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: Timba.Games.SacredTails.LobbyNetworking
  commentId: N:Timba.Games.SacredTails.LobbyNetworking
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.LobbyNetworking
    VB: Timba.Games.SacredTails.LobbyNetworking
  nameWithType:
    CSharp: Timba.Games.SacredTails.LobbyNetworking
    VB: Timba.Games.SacredTails.LobbyNetworking
  qualifiedName:
    CSharp: Timba.Games.SacredTails.LobbyNetworking
    VB: Timba.Games.SacredTails.LobbyNetworking
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    language: CSharp
    name:
      CSharp: ILobbyNetworkManager
      VB: ILobbyNetworkManager
    nameWithType:
      CSharp: ILobbyNetworkManager
      VB: ILobbyNetworkManager
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
      VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: ILobbyNetworkManager
      path: ''
      startLine: 26717
    syntax:
      content:
        CSharp: public interface ILobbyNetworkManager
        VB: >-
          Public Interface ILobbyNetworkManager

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      language: CSharp
      name:
        CSharp: CurrentPlayer
        VB: CurrentPlayer
      nameWithType:
        CSharp: ILobbyNetworkManager.CurrentPlayer
        VB: ILobbyNetworkManager.CurrentPlayer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CurrentPlayer
        path: ''
        startLine: 26719
      syntax:
        content:
          CSharp: ThirdPersonController CurrentPlayer { get; set; }
          VB: Property CurrentPlayer As ThirdPersonController
        parameters: []
        return:
          type: Global.ThirdPersonController
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      language: CSharp
      name:
        CSharp: CurrentSecondsBetweenPetition
        VB: CurrentSecondsBetweenPetition
      nameWithType:
        CSharp: ILobbyNetworkManager.CurrentSecondsBetweenPetition
        VB: ILobbyNetworkManager.CurrentSecondsBetweenPetition
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CurrentSecondsBetweenPetition
        path: ''
        startLine: 26720
      syntax:
        content:
          CSharp: float CurrentSecondsBetweenPetition { get; }
          VB: ReadOnly Property CurrentSecondsBetweenPetition As Single
        parameters: []
        return:
          type: System.Single
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
      language: CSharp
      name:
        CSharp: ConnectToLobby(Int32)
        VB: ConnectToLobby(Int32)
      nameWithType:
        CSharp: ILobbyNetworkManager.ConnectToLobby(Int32)
        VB: ILobbyNetworkManager.ConnectToLobby(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ConnectToLobby
        path: ''
        startLine: 26721
      syntax:
        content:
          CSharp: void ConnectToLobby(int lobbyId)
          VB: Sub ConnectToLobby(lobbyId As Integer)
        parameters:
        - id: lobbyId
          type: System.Int32
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
      language: CSharp
      name:
        CSharp: ManageLobbyPlayers(Dictionary<String, LobbyPlayerBasePayload>)
        VB: ManageLobbyPlayers(Dictionary(Of String, LobbyPlayerBasePayload))
      nameWithType:
        CSharp: ILobbyNetworkManager.ManageLobbyPlayers(Dictionary<String, LobbyPlayerBasePayload>)
        VB: ILobbyNetworkManager.ManageLobbyPlayers(Dictionary(Of String, LobbyPlayerBasePayload))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary<System.String, LobbyPlayerBasePayload>)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary(Of System.String, LobbyPlayerBasePayload))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ManageLobbyPlayers
        path: ''
        startLine: 26722
      syntax:
        content:
          CSharp: void ManageLobbyPlayers(Dictionary<string, LobbyPlayerBasePayload> usersData)
          VB: Sub ManageLobbyPlayers(usersData As Dictionary(Of String, LobbyPlayerBasePayload))
        parameters:
        - id: usersData
          type: System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload}
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleBattleMode(Boolean)
        VB: ToggleBattleMode(Boolean)
      nameWithType:
        CSharp: ILobbyNetworkManager.ToggleBattleMode(Boolean)
        VB: ILobbyNetworkManager.ToggleBattleMode(Boolean)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ToggleBattleMode
        path: ''
        startLine: 26723
      syntax:
        content:
          CSharp: void ToggleBattleMode(bool state)
          VB: Sub ToggleBattleMode(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      language: CSharp
      name:
        CSharp: TickCheckActivates()
        VB: TickCheckActivates()
      nameWithType:
        CSharp: ILobbyNetworkManager.TickCheckActivates()
        VB: ILobbyNetworkManager.TickCheckActivates()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates()
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: TickCheckActivates
        path: ''
        startLine: 26724
      syntax:
        content:
          CSharp: void TickCheckActivates()
          VB: Sub TickCheckActivates
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      language: CSharp
      name:
        CSharp: OnConnected
        VB: OnConnected
      nameWithType:
        CSharp: ILobbyNetworkManager.OnConnected
        VB: ILobbyNetworkManager.OnConnected
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: OnConnected
        path: ''
        startLine: 26725
      syntax:
        content:
          CSharp: Action<ThirdPersonController> OnConnected { get; set; }
          VB: Property OnConnected As Action(Of ThirdPersonController)
        parameters: []
        return:
          type: Global.Action{ThirdPersonController}
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      language: CSharp
      name:
        CSharp: CheckIfPlayerHasChallengeOrIsChallenging(String)
        VB: CheckIfPlayerHasChallengeOrIsChallenging(String)
      nameWithType:
        CSharp: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(String)
        VB: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CheckIfPlayerHasChallengeOrIsChallenging
        path: ''
        startLine: 26726
      syntax:
        content:
          CSharp: bool CheckIfPlayerHasChallengeOrIsChallenging(string playfabId)
          VB: Function CheckIfPlayerHasChallengeOrIsChallenging(playfabId As String) As Boolean
        parameters:
        - id: playfabId
          type: System.String
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      language: CSharp
      name:
        CSharp: CheckIfOtherPlayerHasChallengeForPlayfabId(String)
        VB: CheckIfOtherPlayerHasChallengeForPlayfabId(String)
      nameWithType:
        CSharp: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(String)
        VB: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CheckIfOtherPlayerHasChallengeForPlayfabId
        path: ''
        startLine: 26727
      syntax:
        content:
          CSharp: bool CheckIfOtherPlayerHasChallengeForPlayfabId(string playfabId)
          VB: Function CheckIfOtherPlayerHasChallengeForPlayfabId(playfabId As String) As Boolean
        parameters:
        - id: playfabId
          type: System.String
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowPlayerPersonalUI(Boolean)
        VB: ShowPlayerPersonalUI(Boolean)
      nameWithType:
        CSharp: ILobbyNetworkManager.ShowPlayerPersonalUI(Boolean)
        VB: ILobbyNetworkManager.ShowPlayerPersonalUI(Boolean)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ShowPlayerPersonalUI
        path: ''
        startLine: 26728
      syntax:
        content:
          CSharp: void ShowPlayerPersonalUI(bool show = true)
          VB: Sub ShowPlayerPersonalUI(show As Boolean = True)
        parameters:
        - id: show
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerState(String)
        VB: GetPlayerState(String)
      nameWithType:
        CSharp: ILobbyNetworkManager.GetPlayerState(String)
        VB: ILobbyNetworkManager.GetPlayerState(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: GetPlayerState
        path: ''
        startLine: 26729
      syntax:
        content:
          CSharp: CharacterStateEnum GetPlayerState(string playerId)
          VB: Function GetPlayerState(playerId As String) As CharacterStateEnum
        parameters:
        - id: playerId
          type: System.String
        return:
          type: Global.CharacterStateEnum
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
    language: CSharp
    name:
      CSharp: LobbyNetworkingController
      VB: LobbyNetworkingController
    nameWithType:
      CSharp: LobbyNetworkingController
      VB: LobbyNetworkingController
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
      VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: LobbyNetworkingController
      path: ''
      startLine: 26732
    syntax:
      content:
        CSharp: 'public class LobbyNetworkingController : MonoBehaviour, ILobbyNetworkManager'
        VB: >-
          Public Class LobbyNetworkingController

              Inherits MonoBehaviour

              Implements ILobbyNetworkManager
    inheritance:
    - System.Object
    implements:
    - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playerDataManager
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playerDataManager
      language: CSharp
      name:
        CSharp: playerDataManager
        VB: playerDataManager
      nameWithType:
        CSharp: LobbyNetworkingController.playerDataManager
        VB: LobbyNetworkingController.playerDataManager
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playerDataManager
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playerDataManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: playerDataManager
        path: ''
        startLine: 26735
      syntax:
        content:
          CSharp: public PlayerDataManager playerDataManager
          VB: Public playerDataManager As PlayerDataManager
        return:
          type: Global.PlayerDataManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.loadingScreen
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.loadingScreen
      language: CSharp
      name:
        CSharp: loadingScreen
        VB: loadingScreen
      nameWithType:
        CSharp: LobbyNetworkingController.loadingScreen
        VB: LobbyNetworkingController.loadingScreen
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.loadingScreen
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.loadingScreen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: loadingScreen
        path: ''
        startLine: 26736
      syntax:
        content:
          CSharp: public GameObject loadingScreen
          VB: Public loadingScreen As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.localPlayerPrefab
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.localPlayerPrefab
      language: CSharp
      name:
        CSharp: localPlayerPrefab
        VB: localPlayerPrefab
      nameWithType:
        CSharp: LobbyNetworkingController.localPlayerPrefab
        VB: LobbyNetworkingController.localPlayerPrefab
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.localPlayerPrefab
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.localPlayerPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: localPlayerPrefab
        path: ''
        startLine: 26739
      syntax:
        content:
          CSharp: public ThirdPersonController localPlayerPrefab
          VB: Public localPlayerPrefab As ThirdPersonController
        return:
          type: Global.ThirdPersonController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayerPrefab
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayerPrefab
      language: CSharp
      name:
        CSharp: otherPlayerPrefab
        VB: otherPlayerPrefab
      nameWithType:
        CSharp: LobbyNetworkingController.otherPlayerPrefab
        VB: LobbyNetworkingController.otherPlayerPrefab
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayerPrefab
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayerPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: otherPlayerPrefab
        path: ''
        startLine: 26740
      syntax:
        content:
          CSharp: public ThirdPersonController otherPlayerPrefab
          VB: Public otherPlayerPrefab As ThirdPersonController
        return:
          type: Global.ThirdPersonController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersAvatar
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersAvatar
      language: CSharp
      name:
        CSharp: currentPlayersAvatar
        VB: currentPlayersAvatar
      nameWithType:
        CSharp: LobbyNetworkingController.currentPlayersAvatar
        VB: LobbyNetworkingController.currentPlayersAvatar
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersAvatar
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersAvatar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: currentPlayersAvatar
        path: ''
        startLine: 26741
      syntax:
        content:
          CSharp: public Dictionary<string, ThirdPersonController> currentPlayersAvatar
          VB: Public currentPlayersAvatar As Dictionary(Of String, ThirdPersonController)
        return:
          type: System.Collections.Generic.Dictionary{System.String,ThirdPersonController}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayer
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayer
      language: CSharp
      name:
        CSharp: currentPlayer
        VB: currentPlayer
      nameWithType:
        CSharp: LobbyNetworkingController.currentPlayer
        VB: LobbyNetworkingController.currentPlayer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayer
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: currentPlayer
        path: ''
        startLine: 26742
      syntax:
        content:
          CSharp: public ThirdPersonController currentPlayer
          VB: Public currentPlayer As ThirdPersonController
        return:
          type: Global.ThirdPersonController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
      language: CSharp
      name:
        CSharp: CurrentPlayer
        VB: CurrentPlayer
      nameWithType:
        CSharp: LobbyNetworkingController.CurrentPlayer
        VB: LobbyNetworkingController.CurrentPlayer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CurrentPlayer
        path: ''
        startLine: 26743
      syntax:
        content:
          CSharp: public ThirdPersonController CurrentPlayer { get; set; }
          VB: Public Property CurrentPlayer As ThirdPersonController
        parameters: []
        return:
          type: Global.ThirdPersonController
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersData
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersData
      language: CSharp
      name:
        CSharp: currentPlayersData
        VB: currentPlayersData
      nameWithType:
        CSharp: LobbyNetworkingController.currentPlayersData
        VB: LobbyNetworkingController.currentPlayersData
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersData
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: currentPlayersData
        path: ''
        startLine: 26745
      syntax:
        content:
          CSharp: public Dictionary<string, LobbyPlayerBasePayload> currentPlayersData
          VB: Public currentPlayersData As Dictionary(Of String, LobbyPlayerBasePayload)
        return:
          type: System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playersInstantiated
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playersInstantiated
      language: CSharp
      name:
        CSharp: playersInstantiated
        VB: playersInstantiated
      nameWithType:
        CSharp: LobbyNetworkingController.playersInstantiated
        VB: LobbyNetworkingController.playersInstantiated
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playersInstantiated
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playersInstantiated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: playersInstantiated
        path: ''
        startLine: 26746
      syntax:
        content:
          CSharp: public Dictionary<string, bool> playersInstantiated
          VB: Public playersInstantiated As Dictionary(Of String, Boolean)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lobbyDatabase
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lobbyDatabase
      language: CSharp
      name:
        CSharp: lobbyDatabase
        VB: lobbyDatabase
      nameWithType:
        CSharp: LobbyNetworkingController.lobbyDatabase
        VB: LobbyNetworkingController.lobbyDatabase
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lobbyDatabase
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lobbyDatabase
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: lobbyDatabase
        path: ''
        startLine: 26747
      syntax:
        content:
          CSharp: public ILobbydatabase lobbyDatabase
          VB: Public lobbyDatabase As ILobbydatabase
        return:
          type: Global.ILobbydatabase
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.chatTextBox
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.chatTextBox
      language: CSharp
      name:
        CSharp: chatTextBox
        VB: chatTextBox
      nameWithType:
        CSharp: LobbyNetworkingController.chatTextBox
        VB: LobbyNetworkingController.chatTextBox
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.chatTextBox
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.chatTextBox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: chatTextBox
        path: ''
        startLine: 26748
      syntax:
        content:
          CSharp: public ChatTextBox chatTextBox
          VB: Public chatTextBox As ChatTextBox
        return:
          type: Global.ChatTextBox
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connected
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connected
      language: CSharp
      name:
        CSharp: connected
        VB: connected
      nameWithType:
        CSharp: LobbyNetworkingController.connected
        VB: LobbyNetworkingController.connected
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connected
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: connected
        path: ''
        startLine: 26750
      syntax:
        content:
          CSharp: public bool connected
          VB: Public connected As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayersContainer
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayersContainer
      language: CSharp
      name:
        CSharp: otherPlayersContainer
        VB: otherPlayersContainer
      nameWithType:
        CSharp: LobbyNetworkingController.otherPlayersContainer
        VB: LobbyNetworkingController.otherPlayersContainer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayersContainer
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayersContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: otherPlayersContainer
        path: ''
        startLine: 26751
      syntax:
        content:
          CSharp: public GameObject otherPlayersContainer
          VB: Public otherPlayersContainer As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.onBattle
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.onBattle
      language: CSharp
      name:
        CSharp: onBattle
        VB: onBattle
      nameWithType:
        CSharp: LobbyNetworkingController.onBattle
        VB: LobbyNetworkingController.onBattle
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.onBattle
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.onBattle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: onBattle
        path: ''
        startLine: 26752
      syntax:
        content:
          CSharp: public bool onBattle
          VB: Public onBattle As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.minErrorPosition
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.minErrorPosition
      language: CSharp
      name:
        CSharp: minErrorPosition
        VB: minErrorPosition
      nameWithType:
        CSharp: LobbyNetworkingController.minErrorPosition
        VB: LobbyNetworkingController.minErrorPosition
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.minErrorPosition
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.minErrorPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: minErrorPosition
        path: ''
        startLine: 26754
      syntax:
        content:
          CSharp: public float minErrorPosition
          VB: Public minErrorPosition As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ratePetiton
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ratePetiton
      language: CSharp
      name:
        CSharp: ratePetiton
        VB: ratePetiton
      nameWithType:
        CSharp: LobbyNetworkingController.ratePetiton
        VB: LobbyNetworkingController.ratePetiton
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ratePetiton
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ratePetiton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ratePetiton
        path: ''
        startLine: 26755
      syntax:
        content:
          CSharp: public float ratePetiton
          VB: Public ratePetiton As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
      language: CSharp
      name:
        CSharp: CurrentSecondsBetweenPetition
        VB: CurrentSecondsBetweenPetition
      nameWithType:
        CSharp: LobbyNetworkingController.CurrentSecondsBetweenPetition
        VB: LobbyNetworkingController.CurrentSecondsBetweenPetition
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CurrentSecondsBetweenPetition
        path: ''
        startLine: 26756
      syntax:
        content:
          CSharp: public float CurrentSecondsBetweenPetition { get; }
          VB: Public ReadOnly Property CurrentSecondsBetweenPetition As Single
        parameters: []
        return:
          type: System.Single
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lerpDuration
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lerpDuration
      language: CSharp
      name:
        CSharp: lerpDuration
        VB: lerpDuration
      nameWithType:
        CSharp: LobbyNetworkingController.lerpDuration
        VB: LobbyNetworkingController.lerpDuration
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lerpDuration
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lerpDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: lerpDuration
        path: ''
        startLine: 26757
      syntax:
        content:
          CSharp: public float lerpDuration
          VB: Public lerpDuration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
      language: CSharp
      name:
        CSharp: OnConnected
        VB: OnConnected
      nameWithType:
        CSharp: LobbyNetworkingController.OnConnected
        VB: LobbyNetworkingController.OnConnected
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: OnConnected
        path: ''
        startLine: 26762
      syntax:
        content:
          CSharp: public Action<ThirdPersonController> OnConnected { get; set; }
          VB: Public Property OnConnected As Action(Of ThirdPersonController)
        parameters: []
        return:
          type: Global.Action{ThirdPersonController}
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnectedCallback
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnectedCallback
      language: CSharp
      name:
        CSharp: OnConnectedCallback
        VB: OnConnectedCallback
      nameWithType:
        CSharp: LobbyNetworkingController.OnConnectedCallback
        VB: LobbyNetworkingController.OnConnectedCallback
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnectedCallback
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnectedCallback
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: OnConnectedCallback
        path: ''
        startLine: 26763
      syntax:
        content:
          CSharp: public UnityEvent<ThirdPersonController> OnConnectedCallback
          VB: Public OnConnectedCallback As UnityEvent(Of ThirdPersonController)
        return:
          type: Global.UnityEvent{ThirdPersonController}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connectionId
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connectionId
      language: CSharp
      name:
        CSharp: connectionId
        VB: connectionId
      nameWithType:
        CSharp: LobbyNetworkingController.connectionId
        VB: LobbyNetworkingController.connectionId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connectionId
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connectionId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: connectionId
        path: ''
        startLine: 26764
      syntax:
        content:
          CSharp: public ulong connectionId
          VB: Public connectionId As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: LobbyNetworkingController.Start()
        VB: LobbyNetworkingController.Start()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: Start
        path: ''
        startLine: 26771
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby(System.Int32)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby(System.Int32)
      language: CSharp
      name:
        CSharp: ConnectToLobby(Int32)
        VB: ConnectToLobby(Int32)
      nameWithType:
        CSharp: LobbyNetworkingController.ConnectToLobby(Int32)
        VB: LobbyNetworkingController.ConnectToLobby(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby(System.Int32)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ConnectToLobby
        path: ''
        startLine: 26777
      syntax:
        content:
          CSharp: public void ConnectToLobby(int lobbyId)
          VB: Public Sub ConnectToLobby(lobbyId As Integer)
        parameters:
        - id: lobbyId
          type: System.Int32
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates
      language: CSharp
      name:
        CSharp: TickCheckActivates()
        VB: TickCheckActivates()
      nameWithType:
        CSharp: LobbyNetworkingController.TickCheckActivates()
        VB: LobbyNetworkingController.TickCheckActivates()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: TickCheckActivates
        path: ''
        startLine: 26858
      syntax:
        content:
          CSharp: public void TickCheckActivates()
          VB: Public Sub TickCheckActivates
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck
      language: CSharp
      name:
        CSharp: TickCheck()
        VB: TickCheck()
      nameWithType:
        CSharp: LobbyNetworkingController.TickCheck()
        VB: LobbyNetworkingController.TickCheck()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: TickCheck
        path: ''
        startLine: 26877
      syntax:
        content:
          CSharp: public void TickCheck()
          VB: Public Sub TickCheck
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.timer
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.timer
      language: CSharp
      name:
        CSharp: timer
        VB: timer
      nameWithType:
        CSharp: LobbyNetworkingController.timer
        VB: LobbyNetworkingController.timer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.timer
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.timer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: timer
        path: ''
        startLine: 26955
      syntax:
        content:
          CSharp: public float timer
          VB: Public timer As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload,LobbyPlayerBasePayload)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload,LobbyPlayerBasePayload)
      language: CSharp
      name:
        CSharp: CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
        VB: CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
      nameWithType:
        CSharp: LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
        VB: LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CheckIfIsMoving
        path: ''
        startLine: 26957
      syntax:
        content:
          CSharp: public bool CheckIfIsMoving(LobbyPlayerBasePayload currentData, LobbyPlayerBasePayload dataToSend)
          VB: Public Function CheckIfIsMoving(currentData As LobbyPlayerBasePayload, dataToSend As LobbyPlayerBasePayload) As Boolean
        parameters:
        - id: currentData
          type: Global.LobbyPlayerBasePayload
        - id: dataToSend
          type: Global.LobbyPlayerBasePayload
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
      language: CSharp
      name:
        CSharp: ManageLobbyPlayers(Dictionary<String, LobbyPlayerBasePayload>)
        VB: ManageLobbyPlayers(Dictionary(Of String, LobbyPlayerBasePayload))
      nameWithType:
        CSharp: LobbyNetworkingController.ManageLobbyPlayers(Dictionary<String, LobbyPlayerBasePayload>)
        VB: LobbyNetworkingController.ManageLobbyPlayers(Dictionary(Of String, LobbyPlayerBasePayload))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers(System.Collections.Generic.Dictionary<System.String, LobbyPlayerBasePayload>)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers(System.Collections.Generic.Dictionary(Of System.String, LobbyPlayerBasePayload))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ManageLobbyPlayers
        path: ''
        startLine: 26965
      syntax:
        content:
          CSharp: public void ManageLobbyPlayers(Dictionary<string, LobbyPlayerBasePayload> usersData)
          VB: Public Sub ManageLobbyPlayers(usersData As Dictionary(Of String, LobbyPlayerBasePayload))
        parameters:
        - id: usersData
          type: System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload}
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected(System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload})
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected(System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload})
      language: CSharp
      name:
        CSharp: NewPlayerConnected(KeyValuePair<String, LobbyPlayerBasePayload>)
        VB: NewPlayerConnected(KeyValuePair(Of String, LobbyPlayerBasePayload))
      nameWithType:
        CSharp: LobbyNetworkingController.NewPlayerConnected(KeyValuePair<String, LobbyPlayerBasePayload>)
        VB: LobbyNetworkingController.NewPlayerConnected(KeyValuePair(Of String, LobbyPlayerBasePayload))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected(System.Collections.Generic.KeyValuePair<System.String, LobbyPlayerBasePayload>)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected(System.Collections.Generic.KeyValuePair(Of System.String, LobbyPlayerBasePayload))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: NewPlayerConnected
        path: ''
        startLine: 27035
      syntax:
        content:
          CSharp: public void NewPlayerConnected(KeyValuePair<string, LobbyPlayerBasePayload> item)
          VB: Public Sub NewPlayerConnected(item As KeyValuePair(Of String, LobbyPlayerBasePayload))
        parameters:
        - id: item
          type: System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload}
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerState(String)
        VB: GetPlayerState(String)
      nameWithType:
        CSharp: LobbyNetworkingController.GetPlayerState(String)
        VB: LobbyNetworkingController.GetPlayerState(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: GetPlayerState
        path: ''
        startLine: 27052
      syntax:
        content:
          CSharp: public CharacterStateEnum GetPlayerState(string playerId)
          VB: Public Function GetPlayerState(playerId As String) As CharacterStateEnum
        parameters:
        - id: playerId
          type: System.String
        return:
          type: Global.CharacterStateEnum
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification(System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload})
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification(System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload})
      language: CSharp
      name:
        CSharp: PlayerChallengeVerification(KeyValuePair<String, LobbyPlayerBasePayload>)
        VB: PlayerChallengeVerification(KeyValuePair(Of String, LobbyPlayerBasePayload))
      nameWithType:
        CSharp: LobbyNetworkingController.PlayerChallengeVerification(KeyValuePair<String, LobbyPlayerBasePayload>)
        VB: LobbyNetworkingController.PlayerChallengeVerification(KeyValuePair(Of String, LobbyPlayerBasePayload))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification(System.Collections.Generic.KeyValuePair<System.String, LobbyPlayerBasePayload>)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification(System.Collections.Generic.KeyValuePair(Of System.String, LobbyPlayerBasePayload))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: PlayerChallengeVerification
        path: ''
        startLine: 27057
      syntax:
        content:
          CSharp: public void PlayerChallengeVerification(KeyValuePair<string, LobbyPlayerBasePayload> item)
          VB: Public Sub PlayerChallengeVerification(item As KeyValuePair(Of String, LobbyPlayerBasePayload))
        parameters:
        - id: item
          type: System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload}
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      language: CSharp
      name:
        CSharp: CheckIfOtherPlayerHasChallengeForPlayfabId(String)
        VB: CheckIfOtherPlayerHasChallengeForPlayfabId(String)
      nameWithType:
        CSharp: LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(String)
        VB: LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CheckIfOtherPlayerHasChallengeForPlayfabId
        path: ''
        startLine: 27105
      syntax:
        content:
          CSharp: public bool CheckIfOtherPlayerHasChallengeForPlayfabId(string playfabId)
          VB: Public Function CheckIfOtherPlayerHasChallengeForPlayfabId(playfabId As String) As Boolean
        parameters:
        - id: playfabId
          type: System.String
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      language: CSharp
      name:
        CSharp: CheckIfPlayerHasChallengeOrIsChallenging(String)
        VB: CheckIfPlayerHasChallengeOrIsChallenging(String)
      nameWithType:
        CSharp: LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(String)
        VB: LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CheckIfPlayerHasChallengeOrIsChallenging
        path: ''
        startLine: 27113
      syntax:
        content:
          CSharp: public bool CheckIfPlayerHasChallengeOrIsChallenging(string playfabId)
          VB: Public Function CheckIfPlayerHasChallengeOrIsChallenging(playfabId As String) As Boolean
        parameters:
        - id: playfabId
          type: System.String
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor,System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo})
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor,System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo})
      language: CSharp
      name:
        CSharp: PaintOtherPlayer(CharacterRecolor, Dictionary<PartsOfCharacter, CharacterStyleInfo>)
        VB: PaintOtherPlayer(CharacterRecolor, Dictionary(Of PartsOfCharacter, CharacterStyleInfo))
      nameWithType:
        CSharp: LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor, Dictionary<PartsOfCharacter, CharacterStyleInfo>)
        VB: LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor, Dictionary(Of PartsOfCharacter, CharacterStyleInfo))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor, System.Collections.Generic.Dictionary<PartsOfCharacter, CharacterStyleInfo>)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor, System.Collections.Generic.Dictionary(Of PartsOfCharacter, CharacterStyleInfo))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: PaintOtherPlayer
        path: ''
        startLine: 27123
      syntax:
        content:
          CSharp: public void PaintOtherPlayer(CharacterRecolor playerRecolor, Dictionary<PartsOfCharacter, CharacterStyleInfo> characterStyle)
          VB: Public Sub PaintOtherPlayer(playerRecolor As CharacterRecolor, characterStyle As Dictionary(Of PartsOfCharacter, CharacterStyleInfo))
        parameters:
        - id: playerRecolor
          type: Global.CharacterRecolor
        - id: characterStyle
          type: System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo}
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit
      language: CSharp
      name:
        CSharp: OnApplicationQuit()
        VB: OnApplicationQuit()
      nameWithType:
        CSharp: LobbyNetworkingController.OnApplicationQuit()
        VB: LobbyNetworkingController.OnApplicationQuit()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: OnApplicationQuit
        path: ''
        startLine: 27160
      syntax:
        content:
          CSharp: public void OnApplicationQuit()
          VB: Public Sub OnApplicationQuit
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI(System.Boolean)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowPlayerPersonalUI(Boolean)
        VB: ShowPlayerPersonalUI(Boolean)
      nameWithType:
        CSharp: LobbyNetworkingController.ShowPlayerPersonalUI(Boolean)
        VB: LobbyNetworkingController.ShowPlayerPersonalUI(Boolean)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI(System.Boolean)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ShowPlayerPersonalUI
        path: ''
        startLine: 27175
      syntax:
        content:
          CSharp: public void ShowPlayerPersonalUI(bool show = true)
          VB: Public Sub ShowPlayerPersonalUI(show As Boolean = True)
        parameters:
        - id: show
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode
      language: CSharp
      name:
        CSharp: ToogleChatMode()
        VB: ToogleChatMode()
      nameWithType:
        CSharp: LobbyNetworkingController.ToogleChatMode()
        VB: LobbyNetworkingController.ToogleChatMode()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ToogleChatMode
        path: ''
        startLine: 27181
      syntax:
        content:
          CSharp: public void ToogleChatMode()
          VB: Public Sub ToogleChatMode
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode
      language: CSharp
      name:
        CSharp: UntoogleChatMode()
        VB: UntoogleChatMode()
      nameWithType:
        CSharp: LobbyNetworkingController.UntoogleChatMode()
        VB: LobbyNetworkingController.UntoogleChatMode()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: UntoogleChatMode
        path: ''
        startLine: 27187
      syntax:
        content:
          CSharp: public void UntoogleChatMode()
          VB: Public Sub UntoogleChatMode
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode(System.Boolean)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleBattleMode(Boolean)
        VB: ToggleBattleMode(Boolean)
      nameWithType:
        CSharp: LobbyNetworkingController.ToggleBattleMode(Boolean)
        VB: LobbyNetworkingController.ToggleBattleMode(Boolean)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode(System.Boolean)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ToggleBattleMode
        path: ''
        startLine: 27193
      syntax:
        content:
          CSharp: public void ToggleBattleMode(bool state)
          VB: Public Sub ToggleBattleMode(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash(System.String)
      language: CSharp
      name:
        CSharp: GeneratePlayfabIdHash(String)
        VB: GeneratePlayfabIdHash(String)
      nameWithType:
        CSharp: LobbyNetworkingController.GeneratePlayfabIdHash(String)
        VB: LobbyNetworkingController.GeneratePlayfabIdHash(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: GeneratePlayfabIdHash
        path: ''
        startLine: 27202
      syntax:
        content:
          CSharp: public string GeneratePlayfabIdHash(string text)
          VB: Public Function GeneratePlayfabIdHash(text As String) As String
        parameters:
        - id: text
          type: System.String
        return:
          type: System.String
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: LobbyNetworkingController.IsReady()
        VB: LobbyNetworkingController.IsReady()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: IsReady
        path: ''
        startLine: 27218
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
    language: CSharp
    name:
      CSharp: LobbyNetworkingController.MessageObject
      VB: LobbyNetworkingController.MessageObject
    nameWithType:
      CSharp: LobbyNetworkingController.MessageObject
      VB: LobbyNetworkingController.MessageObject
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
      VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: MessageObject
      path: ''
      startLine: 26867
    syntax:
      content:
        CSharp: public class MessageObject
        VB: Public Class MessageObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject.messages
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject.messages
      language: CSharp
      name:
        CSharp: messages
        VB: messages
      nameWithType:
        CSharp: LobbyNetworkingController.MessageObject.messages
        VB: LobbyNetworkingController.MessageObject.messages
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject.messages
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject.messages
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: messages
        path: ''
        startLine: 26869
      syntax:
        content:
          CSharp: public List<LobbyNetworkingController.DirectMessage> messages
          VB: Public messages As List(Of LobbyNetworkingController.DirectMessage)
        return:
          type: System.Collections.Generic.List{Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
    language: CSharp
    name:
      CSharp: LobbyNetworkingController.DirectMessage
      VB: LobbyNetworkingController.DirectMessage
    nameWithType:
      CSharp: LobbyNetworkingController.DirectMessage
      VB: LobbyNetworkingController.DirectMessage
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
      VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: DirectMessage
      path: ''
      startLine: 26871
    syntax:
      content:
        CSharp: public class DirectMessage
        VB: Public Class DirectMessage
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.from
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.from
      language: CSharp
      name:
        CSharp: from
        VB: from
      nameWithType:
        CSharp: LobbyNetworkingController.DirectMessage.from
        VB: LobbyNetworkingController.DirectMessage.from
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.from
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.from
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: from
        path: ''
        startLine: 26873
      syntax:
        content:
          CSharp: public string from
          VB: Public from As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.msg
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.msg
      language: CSharp
      name:
        CSharp: msg
        VB: msg
      nameWithType:
        CSharp: LobbyNetworkingController.DirectMessage.msg
        VB: LobbyNetworkingController.DirectMessage.msg
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.msg
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.msg
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: msg
        path: ''
        startLine: 26874
      syntax:
        content:
          CSharp: public string msg
          VB: Public msg As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
    language: CSharp
    name:
      CSharp: ConnectionResponse
      VB: ConnectionResponse
    nameWithType:
      CSharp: ConnectionResponse
      VB: ConnectionResponse
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
      VB: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: ConnectionResponse
      path: ''
      startLine: 27226
    syntax:
      content:
        CSharp: public class ConnectionResponse
        VB: Public Class ConnectionResponse
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.connectionId
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.connectionId
      language: CSharp
      name:
        CSharp: connectionId
        VB: connectionId
      nameWithType:
        CSharp: ConnectionResponse.connectionId
        VB: ConnectionResponse.connectionId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.connectionId
        VB: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.connectionId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: connectionId
        path: ''
        startLine: 27229
      syntax:
        content:
          CSharp: public ulong connectionId
          VB: Public connectionId As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.lobbyId
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.lobbyId
      language: CSharp
      name:
        CSharp: lobbyId
        VB: lobbyId
      nameWithType:
        CSharp: ConnectionResponse.lobbyId
        VB: ConnectionResponse.lobbyId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.lobbyId
        VB: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.lobbyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: lobbyId
        path: ''
        startLine: 27230
      syntax:
        content:
          CSharp: public int lobbyId
          VB: Public lobbyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.currentVersion
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.currentVersion
      language: CSharp
      name:
        CSharp: currentVersion
        VB: currentVersion
      nameWithType:
        CSharp: ConnectionResponse.currentVersion
        VB: ConnectionResponse.currentVersion
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.currentVersion
        VB: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.currentVersion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: currentVersion
        path: ''
        startLine: 27231
      syntax:
        content:
          CSharp: public string currentVersion
          VB: Public currentVersion As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
    language: CSharp
    name:
      CSharp: PlayersStreamData
      VB: PlayersStreamData
    nameWithType:
      CSharp: PlayersStreamData
      VB: PlayersStreamData
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
      VB: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: PlayersStreamData
      path: ''
      startLine: 27234
    syntax:
      content:
        CSharp: public class PlayersStreamData
        VB: Public Class PlayersStreamData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Value
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: PlayersStreamData.Value
        VB: PlayersStreamData.Value
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Value
        VB: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: Value
        path: ''
        startLine: 27237
      syntax:
        content:
          CSharp: public string Value
          VB: Public Value As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.LastUpdated
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.LastUpdated
      language: CSharp
      name:
        CSharp: LastUpdated
        VB: LastUpdated
      nameWithType:
        CSharp: PlayersStreamData.LastUpdated
        VB: PlayersStreamData.LastUpdated
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.LastUpdated
        VB: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.LastUpdated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: LastUpdated
        path: ''
        startLine: 27238
      syntax:
        content:
          CSharp: public string LastUpdated
          VB: Public LastUpdated As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Permission
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Permission
      language: CSharp
      name:
        CSharp: Permission
        VB: Permission
      nameWithType:
        CSharp: PlayersStreamData.Permission
        VB: PlayersStreamData.Permission
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Permission
        VB: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Permission
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: Permission
        path: ''
        startLine: 27239
      syntax:
        content:
          CSharp: public string Permission
          VB: Public Permission As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.BattleModule
  commentId: N:Timba.Games.SacredTails.BattleModule
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.BattleModule
    VB: Timba.Games.SacredTails.BattleModule
  nameWithType:
    CSharp: Timba.Games.SacredTails.BattleModule
    VB: Timba.Games.SacredTails.BattleModule
  qualifiedName:
    CSharp: Timba.Games.SacredTails.BattleModule
    VB: Timba.Games.SacredTails.BattleModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.BattleModule.UIHelper
    commentId: T:Timba.Games.SacredTails.BattleModule.UIHelper
    language: CSharp
    name:
      CSharp: UIHelper
      VB: UIHelper
    nameWithType:
      CSharp: UIHelper
      VB: UIHelper
    qualifiedName:
      CSharp: Timba.Games.SacredTails.BattleModule.UIHelper
      VB: Timba.Games.SacredTails.BattleModule.UIHelper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.BattleModule
    source:
      id: UIHelper
      path: ''
      startLine: 31197
    syntax:
      content:
        CSharp: 'public class UIHelper : MonoBehaviour'
        VB: >-
          Public Class UIHelper

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.BattleModule.UIHelper.turnsController
      commentId: F:Timba.Games.SacredTails.BattleModule.UIHelper.turnsController
      language: CSharp
      name:
        CSharp: turnsController
        VB: turnsController
      nameWithType:
        CSharp: UIHelper.turnsController
        VB: UIHelper.turnsController
      qualifiedName:
        CSharp: Timba.Games.SacredTails.BattleModule.UIHelper.turnsController
        VB: Timba.Games.SacredTails.BattleModule.UIHelper.turnsController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.BattleModule
      source:
        id: turnsController
        path: ''
        startLine: 31199
      syntax:
        content:
          CSharp: public TurnsController turnsController
          VB: Public turnsController As TurnsController
        return:
          type: Global.TurnsController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.BattleModule.UIHelper.battleGameMode
      commentId: F:Timba.Games.SacredTails.BattleModule.UIHelper.battleGameMode
      language: CSharp
      name:
        CSharp: battleGameMode
        VB: battleGameMode
      nameWithType:
        CSharp: UIHelper.battleGameMode
        VB: UIHelper.battleGameMode
      qualifiedName:
        CSharp: Timba.Games.SacredTails.BattleModule.UIHelper.battleGameMode
        VB: Timba.Games.SacredTails.BattleModule.UIHelper.battleGameMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.BattleModule
      source:
        id: battleGameMode
        path: ''
        startLine: 31200
      syntax:
        content:
          CSharp: public BattleGameMode battleGameMode
          VB: Public battleGameMode As BattleGameMode
        return:
          type: Global.BattleGameMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup
      commentId: M:Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup
      language: CSharp
      name:
        CSharp: OpenSkipTurnPopup()
        VB: OpenSkipTurnPopup()
      nameWithType:
        CSharp: UIHelper.OpenSkipTurnPopup()
        VB: UIHelper.OpenSkipTurnPopup()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup()
        VB: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.BattleModule
      source:
        id: OpenSkipTurnPopup
        path: ''
        startLine: 31201
      syntax:
        content:
          CSharp: public void OpenSkipTurnPopup()
          VB: Public Sub OpenSkipTurnPopup
      overload: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup
      commentId: M:Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup
      language: CSharp
      name:
        CSharp: OpenSurrenderPopup()
        VB: OpenSurrenderPopup()
      nameWithType:
        CSharp: UIHelper.OpenSurrenderPopup()
        VB: UIHelper.OpenSurrenderPopup()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup()
        VB: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.BattleModule
      source:
        id: OpenSurrenderPopup
        path: ''
        startLine: 31214
      syntax:
        content:
          CSharp: public void OpenSurrenderPopup()
          VB: Public Sub OpenSurrenderPopup
      overload: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.PopupModule
  commentId: N:Timba.Games.SacredTails.PopupModule
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.PopupModule
    VB: Timba.Games.SacredTails.PopupModule
  nameWithType:
    CSharp: Timba.Games.SacredTails.PopupModule
    VB: Timba.Games.SacredTails.PopupModule
  qualifiedName:
    CSharp: Timba.Games.SacredTails.PopupModule
    VB: Timba.Games.SacredTails.PopupModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.PopupModule.IPopupManager
    commentId: T:Timba.Games.SacredTails.PopupModule.IPopupManager
    language: CSharp
    name:
      CSharp: IPopupManager
      VB: IPopupManager
    nameWithType:
      CSharp: IPopupManager
      VB: IPopupManager
    qualifiedName:
      CSharp: Timba.Games.SacredTails.PopupModule.IPopupManager
      VB: Timba.Games.SacredTails.PopupModule.IPopupManager
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.PopupModule
    source:
      id: IPopupManager
      path: ''
      startLine: 32682
    syntax:
      content:
        CSharp: public interface IPopupManager
        VB: >-
          Public Interface IPopupManager

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
      commentId: M:Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
      language: CSharp
      name:
        CSharp: ShowInfoPopup(String, Dictionary<PopupManager.ButtonType, Action>)
        VB: ShowInfoPopup(String, Dictionary(Of PopupManager.ButtonType, Action))
      nameWithType:
        CSharp: IPopupManager.ShowInfoPopup(String, Dictionary<PopupManager.ButtonType, Action>)
        VB: IPopupManager.ShowInfoPopup(String, Dictionary(Of PopupManager.ButtonType, Action))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String, System.Collections.Generic.Dictionary<Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType, Action>)
        VB: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String, System.Collections.Generic.Dictionary(Of Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType, Action))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: ShowInfoPopup
        path: ''
        startLine: 32684
      syntax:
        content:
          CSharp: void ShowInfoPopup(string textInfo, Dictionary<PopupManager.ButtonType, Action> buttonsActionsPair = null)
          VB: Sub ShowInfoPopup(textInfo As String, buttonsActionsPair As Dictionary(Of PopupManager.ButtonType, Action) = Nothing)
        parameters:
        - id: textInfo
          type: System.String
        - id: buttonsActionsPair
          type: System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action}
      overload: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      commentId: M:Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      language: CSharp
      name:
        CSharp: HideInfoPopup()
        VB: HideInfoPopup()
      nameWithType:
        CSharp: IPopupManager.HideInfoPopup()
        VB: IPopupManager.HideInfoPopup()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup()
        VB: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: HideInfoPopup
        path: ''
        startLine: 32686
      syntax:
        content:
          CSharp: void HideInfoPopup()
          VB: Sub HideInfoPopup
      overload: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Games.SacredTails.PopupModule.PopupManager
    commentId: T:Timba.Games.SacredTails.PopupModule.PopupManager
    language: CSharp
    name:
      CSharp: PopupManager
      VB: PopupManager
    nameWithType:
      CSharp: PopupManager
      VB: PopupManager
    qualifiedName:
      CSharp: Timba.Games.SacredTails.PopupModule.PopupManager
      VB: Timba.Games.SacredTails.PopupModule.PopupManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.PopupModule
    source:
      id: PopupManager
      path: ''
      startLine: 32698
    syntax:
      content:
        CSharp: 'public class PopupManager : MonoBehaviour, IPopupManager'
        VB: >-
          Public Class PopupManager

              Inherits MonoBehaviour

              Implements IPopupManager
    inheritance:
    - System.Object
    implements:
    - Timba.Games.SacredTails.PopupModule.IPopupManager
    - Global.IService
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady
      commentId: M:Timba.Games.SacredTails.PopupModule.PopupManager.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: PopupManager.IsReady()
        VB: PopupManager.IsReady()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady()
        VB: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: IsReady
        path: ''
        startLine: 32713
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
      commentId: M:Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
      language: CSharp
      name:
        CSharp: ShowInfoPopup(String, Dictionary<PopupManager.ButtonType, Action>)
        VB: ShowInfoPopup(String, Dictionary(Of PopupManager.ButtonType, Action))
      nameWithType:
        CSharp: PopupManager.ShowInfoPopup(String, Dictionary<PopupManager.ButtonType, Action>)
        VB: PopupManager.ShowInfoPopup(String, Dictionary(Of PopupManager.ButtonType, Action))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup(System.String, System.Collections.Generic.Dictionary<Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType, Action>)
        VB: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup(System.String, System.Collections.Generic.Dictionary(Of Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType, Action))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: ShowInfoPopup
        path: ''
        startLine: 32718
      syntax:
        content:
          CSharp: public void ShowInfoPopup(string textInfo, Dictionary<PopupManager.ButtonType, Action> buttonsActionsPair = null)
          VB: Public Sub ShowInfoPopup(textInfo As String, buttonsActionsPair As Dictionary(Of PopupManager.ButtonType, Action) = Nothing)
        parameters:
        - id: textInfo
          type: System.String
        - id: buttonsActionsPair
          type: System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action}
      overload: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup*
      implements:
      - Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup
      commentId: M:Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup
      language: CSharp
      name:
        CSharp: HideInfoPopup()
        VB: HideInfoPopup()
      nameWithType:
        CSharp: PopupManager.HideInfoPopup()
        VB: PopupManager.HideInfoPopup()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup()
        VB: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: HideInfoPopup
        path: ''
        startLine: 32741
      syntax:
        content:
          CSharp: public void HideInfoPopup()
          VB: Public Sub HideInfoPopup
      overload: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup*
      implements:
      - Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
    commentId: T:Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
    language: CSharp
    name:
      CSharp: PopupManager.ButtonType
      VB: PopupManager.ButtonType
    nameWithType:
      CSharp: PopupManager.ButtonType
      VB: PopupManager.ButtonType
    qualifiedName:
      CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      VB: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.PopupModule
    source:
      id: ButtonType
      path: ''
      startLine: 32705
    syntax:
      content:
        CSharp: public enum ButtonType
        VB: Public Enum ButtonType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.BACK_BUTTON
      commentId: F:Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.BACK_BUTTON
      language: CSharp
      name:
        CSharp: BACK_BUTTON
        VB: BACK_BUTTON
      nameWithType:
        CSharp: PopupManager.ButtonType.BACK_BUTTON
        VB: PopupManager.ButtonType.BACK_BUTTON
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.BACK_BUTTON
        VB: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.BACK_BUTTON
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: BACK_BUTTON
        path: ''
        startLine: 32707
      syntax:
        content:
          CSharp: BACK_BUTTON = 0
          VB: BACK_BUTTON = 0
        return:
          type: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.CONFIRM_BUTTON
      commentId: F:Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.CONFIRM_BUTTON
      language: CSharp
      name:
        CSharp: CONFIRM_BUTTON
        VB: CONFIRM_BUTTON
      nameWithType:
        CSharp: PopupManager.ButtonType.CONFIRM_BUTTON
        VB: PopupManager.ButtonType.CONFIRM_BUTTON
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.CONFIRM_BUTTON
        VB: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.CONFIRM_BUTTON
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: CONFIRM_BUTTON
        path: ''
        startLine: 32708
      syntax:
        content:
          CSharp: CONFIRM_BUTTON = 1
          VB: CONFIRM_BUTTON = 1
        return:
          type: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: Timba.Games.SacredTails.StoreModule
  commentId: N:Timba.Games.SacredTails.StoreModule
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.StoreModule
    VB: Timba.Games.SacredTails.StoreModule
  nameWithType:
    CSharp: Timba.Games.SacredTails.StoreModule
    VB: Timba.Games.SacredTails.StoreModule
  qualifiedName:
    CSharp: Timba.Games.SacredTails.StoreModule
    VB: Timba.Games.SacredTails.StoreModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.StoreModule.StoreController
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreController
    language: CSharp
    name:
      CSharp: StoreController
      VB: StoreController
    nameWithType:
      CSharp: StoreController
      VB: StoreController
    qualifiedName:
      CSharp: Timba.Games.SacredTails.StoreModule.StoreController
      VB: Timba.Games.SacredTails.StoreModule.StoreController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.StoreModule
    source:
      id: StoreController
      path: ''
      startLine: 32761
    syntax:
      content:
        CSharp: 'public class StoreController : MonoBehaviour'
        VB: >-
          Public Class StoreController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.StoreModule.StoreController.Start
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: StoreController.Start()
        VB: StoreController.Start()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.Start()
        VB: Timba.Games.SacredTails.StoreModule.StoreController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: Start
        path: ''
        startLine: 32785
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Timba.Games.SacredTails.StoreModule.StoreController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent
      language: CSharp
      name:
        CSharp: SubscribeToPurchaseEvent()
        VB: SubscribeToPurchaseEvent()
      nameWithType:
        CSharp: StoreController.SubscribeToPurchaseEvent()
        VB: StoreController.SubscribeToPurchaseEvent()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent()
        VB: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: SubscribeToPurchaseEvent
        path: ''
        startLine: 32790
      syntax:
        content:
          CSharp: public void SubscribeToPurchaseEvent()
          VB: Public Sub SubscribeToPurchaseEvent
      overload: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore
      language: CSharp
      name:
        CSharp: RequestCardsStore()
        VB: RequestCardsStore()
      nameWithType:
        CSharp: StoreController.RequestCardsStore()
        VB: StoreController.RequestCardsStore()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore()
        VB: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: RequestCardsStore
        path: ''
        startLine: 32804
      syntax:
        content:
          CSharp: public void RequestCardsStore()
          VB: Public Sub RequestCardsStore
      overload: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore(GetCatalogItemsResult)
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore(GetCatalogItemsResult)
      language: CSharp
      name:
        CSharp: SetCardStore(GetCatalogItemsResult)
        VB: SetCardStore(GetCatalogItemsResult)
      nameWithType:
        CSharp: StoreController.SetCardStore(GetCatalogItemsResult)
        VB: StoreController.SetCardStore(GetCatalogItemsResult)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore(GetCatalogItemsResult)
        VB: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore(GetCatalogItemsResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: SetCardStore
        path: ''
        startLine: 32811
      syntax:
        content:
          CSharp: public void SetCardStore(GetCatalogItemsResult result)
          VB: Public Sub SetCardStore(result As GetCatalogItemsResult)
        parameters:
        - id: result
          type: Global.GetCatalogItemsResult
      overload: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.HideStore
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.HideStore
      language: CSharp
      name:
        CSharp: HideStore()
        VB: HideStore()
      nameWithType:
        CSharp: StoreController.HideStore()
        VB: StoreController.HideStore()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.HideStore()
        VB: Timba.Games.SacredTails.StoreModule.StoreController.HideStore()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: HideStore
        path: ''
        startLine: 32816
      syntax:
        content:
          CSharp: public void HideStore()
          VB: Public Sub HideStore
      overload: Timba.Games.SacredTails.StoreModule.StoreController.HideStore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.CreatePool
      language: CSharp
      name:
        CSharp: CreatePool()
        VB: CreatePool()
      nameWithType:
        CSharp: StoreController.CreatePool()
        VB: StoreController.CreatePool()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool()
        VB: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: CreatePool
        path: ''
        startLine: 32824
      syntax:
        content:
          CSharp: public void CreatePool()
          VB: Public Sub CreatePool
      overload: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.FillPool(System.Collections.Generic.List{CatalogItem})
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.FillPool(System.Collections.Generic.List{CatalogItem})
      language: CSharp
      name:
        CSharp: FillPool(List<CatalogItem>)
        VB: FillPool(List(Of CatalogItem))
      nameWithType:
        CSharp: StoreController.FillPool(List<CatalogItem>)
        VB: StoreController.FillPool(List(Of CatalogItem))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.FillPool(System.Collections.Generic.List<CatalogItem>)
        VB: Timba.Games.SacredTails.StoreModule.StoreController.FillPool(System.Collections.Generic.List(Of CatalogItem))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: FillPool
        path: ''
        startLine: 32837
      syntax:
        content:
          CSharp: public void FillPool(List<CatalogItem> items)
          VB: Public Sub FillPool(items As List(Of CatalogItem))
        parameters:
        - id: items
          type: System.Collections.Generic.List{CatalogItem}
      overload: Timba.Games.SacredTails.StoreModule.StoreController.FillPool*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem(System.Int32,System.UInt32)
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.BuyItem(System.Int32,System.UInt32)
      language: CSharp
      name:
        CSharp: BuyItem(Int32, UInt32)
        VB: BuyItem(Int32, UInt32)
      nameWithType:
        CSharp: StoreController.BuyItem(Int32, UInt32)
        VB: StoreController.BuyItem(Int32, UInt32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem(System.Int32, System.UInt32)
        VB: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem(System.Int32, System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: BuyItem
        path: ''
        startLine: 32867
      syntax:
        content:
          CSharp: public void BuyItem(int itemId, uint itemPrice)
          VB: Public Sub BuyItem(itemId As Integer, itemPrice As UInteger)
        parameters:
        - id: itemId
          type: System.Int32
        - id: itemPrice
          type: System.UInt32
      overload: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.StoreModule.StoreItem
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreItem
    language: CSharp
    name:
      CSharp: StoreItem
      VB: StoreItem
    nameWithType:
      CSharp: StoreItem
      VB: StoreItem
    qualifiedName:
      CSharp: Timba.Games.SacredTails.StoreModule.StoreItem
      VB: Timba.Games.SacredTails.StoreModule.StoreItem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.StoreModule
    source:
      id: StoreItem
      path: ''
      startLine: 32890
    syntax:
      content:
        CSharp: 'public class StoreItem : MonoBehaviour'
        VB: >-
          Public Class StoreItem

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.StoreModule.StoreItem.data
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItem.data
      language: CSharp
      name:
        CSharp: data
        VB: data
      nameWithType:
        CSharp: StoreItem.data
        VB: StoreItem.data
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItem.data
        VB: Timba.Games.SacredTails.StoreModule.StoreItem.data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: data
        path: ''
        startLine: 32893
      syntax:
        content:
          CSharp: public StoreItemData data
          VB: Public data As StoreItemData
        return:
          type: Timba.Games.SacredTails.StoreModule.StoreItemData
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItem.cardButton
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItem.cardButton
      language: CSharp
      name:
        CSharp: cardButton
        VB: cardButton
      nameWithType:
        CSharp: StoreItem.cardButton
        VB: StoreItem.cardButton
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItem.cardButton
        VB: Timba.Games.SacredTails.StoreModule.StoreItem.cardButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: cardButton
        path: ''
        startLine: 32902
      syntax:
        content:
          CSharp: public Button cardButton
          VB: Public cardButton As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItem.Init
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreItem.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: StoreItem.Init()
        VB: StoreItem.Init()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItem.Init()
        VB: Timba.Games.SacredTails.StoreModule.StoreItem.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: Init
        path: ''
        startLine: 32906
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Timba.Games.SacredTails.StoreModule.StoreItem.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction(System.Int32,Action{System.Int32})
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction(System.Int32,Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetCardButtonAction(Int32, Action<Int32>)
        VB: SetCardButtonAction(Int32, Action(Of Int32))
      nameWithType:
        CSharp: StoreItem.SetCardButtonAction(Int32, Action<Int32>)
        VB: StoreItem.SetCardButtonAction(Int32, Action(Of Int32))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction(System.Int32, Action<System.Int32>)
        VB: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction(System.Int32, Action(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: SetCardButtonAction
        path: ''
        startLine: 32918
      syntax:
        content:
          CSharp: public void SetCardButtonAction(int index, Action<int> callback)
          VB: Public Sub SetCardButtonAction(index As Integer, callback As Action(Of Integer))
        parameters:
        - id: index
          type: System.Int32
        - id: callback
          type: Global.Action{System.Int32}
      overload: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.StoreModule.StoreItemData
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreItemData
    language: CSharp
    name:
      CSharp: StoreItemData
      VB: StoreItemData
    nameWithType:
      CSharp: StoreItemData
      VB: StoreItemData
    qualifiedName:
      CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData
      VB: Timba.Games.SacredTails.StoreModule.StoreItemData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.StoreModule
    source:
      id: StoreItemData
      path: ''
      startLine: 32929
    syntax:
      content:
        CSharp: public struct StoreItemData
        VB: Public Structure StoreItemData
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Timba.Games.SacredTails.StoreModule.StoreItemData.itemId
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItemData.itemId
      language: CSharp
      name:
        CSharp: itemId
        VB: itemId
      nameWithType:
        CSharp: StoreItemData.itemId
        VB: StoreItemData.itemId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData.itemId
        VB: Timba.Games.SacredTails.StoreModule.StoreItemData.itemId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: itemId
        path: ''
        startLine: 32931
      syntax:
        content:
          CSharp: public int itemId
          VB: Public itemId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItemData.itemName
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItemData.itemName
      language: CSharp
      name:
        CSharp: itemName
        VB: itemName
      nameWithType:
        CSharp: StoreItemData.itemName
        VB: StoreItemData.itemName
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData.itemName
        VB: Timba.Games.SacredTails.StoreModule.StoreItemData.itemName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: itemName
        path: ''
        startLine: 32932
      syntax:
        content:
          CSharp: public string itemName
          VB: Public itemName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItemData.itemSprite
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItemData.itemSprite
      language: CSharp
      name:
        CSharp: itemSprite
        VB: itemSprite
      nameWithType:
        CSharp: StoreItemData.itemSprite
        VB: StoreItemData.itemSprite
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData.itemSprite
        VB: Timba.Games.SacredTails.StoreModule.StoreItemData.itemSprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: itemSprite
        path: ''
        startLine: 32933
      syntax:
        content:
          CSharp: public Sprite itemSprite
          VB: Public itemSprite As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItemData.itemPrice
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItemData.itemPrice
      language: CSharp
      name:
        CSharp: itemPrice
        VB: itemPrice
      nameWithType:
        CSharp: StoreItemData.itemPrice
        VB: StoreItemData.itemPrice
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData.itemPrice
        VB: Timba.Games.SacredTails.StoreModule.StoreItemData.itemPrice
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: itemPrice
        path: ''
        startLine: 32934
      syntax:
        content:
          CSharp: public uint itemPrice
          VB: Public itemPrice As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItemData.priceCurrency
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItemData.priceCurrency
      language: CSharp
      name:
        CSharp: priceCurrency
        VB: priceCurrency
      nameWithType:
        CSharp: StoreItemData.priceCurrency
        VB: StoreItemData.priceCurrency
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData.priceCurrency
        VB: Timba.Games.SacredTails.StoreModule.StoreItemData.priceCurrency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: priceCurrency
        path: ''
        startLine: 32935
      syntax:
        content:
          CSharp: public string priceCurrency
          VB: Public priceCurrency As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.StoreModule.StoreView
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreView
    language: CSharp
    name:
      CSharp: StoreView
      VB: StoreView
    nameWithType:
      CSharp: StoreView
      VB: StoreView
    qualifiedName:
      CSharp: Timba.Games.SacredTails.StoreModule.StoreView
      VB: Timba.Games.SacredTails.StoreModule.StoreView
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.StoreModule
    source:
      id: StoreView
      path: ''
      startLine: 32950
    syntax:
      content:
        CSharp: 'public class StoreView : MonoBehaviour'
        VB: >-
          Public Class StoreView

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard(System.Int32,System.UInt32,Action{System.Int32,System.UInt32})
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard(System.Int32,System.UInt32,Action{System.Int32,System.UInt32})
      language: CSharp
      name:
        CSharp: ShowPopupPurchaseCard(Int32, UInt32, Action<Int32, UInt32>)
        VB: ShowPopupPurchaseCard(Int32, UInt32, Action(Of Int32, UInt32))
      nameWithType:
        CSharp: StoreView.ShowPopupPurchaseCard(Int32, UInt32, Action<Int32, UInt32>)
        VB: StoreView.ShowPopupPurchaseCard(Int32, UInt32, Action(Of Int32, UInt32))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard(System.Int32, System.UInt32, Action<System.Int32, System.UInt32>)
        VB: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard(System.Int32, System.UInt32, Action(Of System.Int32, System.UInt32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: ShowPopupPurchaseCard
        path: ''
        startLine: 32958
      syntax:
        content:
          CSharp: public void ShowPopupPurchaseCard(int itemId, uint itemPrice, Action<int, uint> onPurchaseCard)
          VB: Public Sub ShowPopupPurchaseCard(itemId As Integer, itemPrice As UInteger, onPurchaseCard As Action(Of Integer, UInteger))
        parameters:
        - id: itemId
          type: System.Int32
        - id: itemPrice
          type: System.UInt32
        - id: onPurchaseCard
          type: Global.Action{System.Int32,System.UInt32}
      overload: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult(System.String)
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult(System.String)
      language: CSharp
      name:
        CSharp: ShowPopupPurchaseResult(String)
        VB: ShowPopupPurchaseResult(String)
      nameWithType:
        CSharp: StoreView.ShowPopupPurchaseResult(String)
        VB: StoreView.ShowPopupPurchaseResult(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult(System.String)
        VB: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: ShowPopupPurchaseResult
        path: ''
        startLine: 32967
      syntax:
        content:
          CSharp: public void ShowPopupPurchaseResult(string message)
          VB: Public Sub ShowPopupPurchaseResult(message As String)
        parameters:
        - id: message
          type: System.String
      overload: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreView.HidePopup
      language: CSharp
      name:
        CSharp: HidePopup()
        VB: HidePopup()
      nameWithType:
        CSharp: StoreView.HidePopup()
        VB: StoreView.HidePopup()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup()
        VB: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: HidePopup
        path: ''
        startLine: 32975
      syntax:
        content:
          CSharp: public void HidePopup()
          VB: Public Sub HidePopup
      overload: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase
      language: CSharp
      name:
        CSharp: HidePanelAfterPurchase()
        VB: HidePanelAfterPurchase()
      nameWithType:
        CSharp: StoreView.HidePanelAfterPurchase()
        VB: StoreView.HidePanelAfterPurchase()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase()
        VB: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: HidePanelAfterPurchase
        path: ''
        startLine: 32982
      syntax:
        content:
          CSharp: public void HidePanelAfterPurchase()
          VB: Public Sub HidePanelAfterPurchase
      overload: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreView.HideStore(System.Collections.Generic.List{Timba.Games.SacredTails.StoreModule.StoreItem})
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreView.HideStore(System.Collections.Generic.List{Timba.Games.SacredTails.StoreModule.StoreItem})
      language: CSharp
      name:
        CSharp: HideStore(List<StoreItem>)
        VB: HideStore(List(Of StoreItem))
      nameWithType:
        CSharp: StoreView.HideStore(List<StoreItem>)
        VB: StoreView.HideStore(List(Of StoreItem))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreView.HideStore(System.Collections.Generic.List<Timba.Games.SacredTails.StoreModule.StoreItem>)
        VB: Timba.Games.SacredTails.StoreModule.StoreView.HideStore(System.Collections.Generic.List(Of Timba.Games.SacredTails.StoreModule.StoreItem))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: HideStore
        path: ''
        startLine: 32988
      syntax:
        content:
          CSharp: public void HideStore(List<StoreItem> storeItems)
          VB: Public Sub HideStore(storeItems As List(Of StoreItem))
        parameters:
        - id: storeItems
          type: System.Collections.Generic.List{Timba.Games.SacredTails.StoreModule.StoreItem}
      overload: Timba.Games.SacredTails.StoreModule.StoreView.HideStore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.WalletModule
  commentId: N:Timba.Games.SacredTails.WalletModule
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.WalletModule
    VB: Timba.Games.SacredTails.WalletModule
  nameWithType:
    CSharp: Timba.Games.SacredTails.WalletModule
    VB: Timba.Games.SacredTails.WalletModule
  qualifiedName:
    CSharp: Timba.Games.SacredTails.WalletModule
    VB: Timba.Games.SacredTails.WalletModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.WalletModule.WalletView
    commentId: T:Timba.Games.SacredTails.WalletModule.WalletView
    language: CSharp
    name:
      CSharp: WalletView
      VB: WalletView
    nameWithType:
      CSharp: WalletView
      VB: WalletView
    qualifiedName:
      CSharp: Timba.Games.SacredTails.WalletModule.WalletView
      VB: Timba.Games.SacredTails.WalletModule.WalletView
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.WalletModule
    source:
      id: WalletView
      path: ''
      startLine: 34033
    syntax:
      content:
        CSharp: 'public class WalletView : MonoBehaviour'
        VB: >-
          Public Class WalletView

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.WalletModule.WalletView.currencyText
      commentId: F:Timba.Games.SacredTails.WalletModule.WalletView.currencyText
      language: CSharp
      name:
        CSharp: currencyText
        VB: currencyText
      nameWithType:
        CSharp: WalletView.currencyText
        VB: WalletView.currencyText
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletModule.WalletView.currencyText
        VB: Timba.Games.SacredTails.WalletModule.WalletView.currencyText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.WalletModule
      source:
        id: currencyText
        path: ''
        startLine: 34035
      syntax:
        content:
          CSharp: public TMP_Text currencyText
          VB: Public currencyText As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletModule.WalletView.walletPanel
      commentId: F:Timba.Games.SacredTails.WalletModule.WalletView.walletPanel
      language: CSharp
      name:
        CSharp: walletPanel
        VB: walletPanel
      nameWithType:
        CSharp: WalletView.walletPanel
        VB: WalletView.walletPanel
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletModule.WalletView.walletPanel
        VB: Timba.Games.SacredTails.WalletModule.WalletView.walletPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.WalletModule
      source:
        id: walletPanel
        path: ''
        startLine: 34036
      syntax:
        content:
          CSharp: public GameObject walletPanel
          VB: Public walletPanel As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency(System.Int32)
      commentId: M:Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency(System.Int32)
      language: CSharp
      name:
        CSharp: ChangeCurrency(Int32)
        VB: ChangeCurrency(Int32)
      nameWithType:
        CSharp: WalletView.ChangeCurrency(Int32)
        VB: WalletView.ChangeCurrency(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency(System.Int32)
        VB: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.WalletModule
      source:
        id: ChangeCurrency
        path: ''
        startLine: 34038
      syntax:
        content:
          CSharp: public void ChangeCurrency(int currentCurrency)
          VB: Public Sub ChangeCurrency(currentCurrency As Integer)
        parameters:
        - id: currentCurrency
          type: System.Int32
      overload: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet
      commentId: M:Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet
      language: CSharp
      name:
        CSharp: ShowUserWallet()
        VB: ShowUserWallet()
      nameWithType:
        CSharp: WalletView.ShowUserWallet()
        VB: WalletView.ShowUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet()
        VB: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.WalletModule
      source:
        id: ShowUserWallet
        path: ''
        startLine: 34043
      syntax:
        content:
          CSharp: public void ShowUserWallet()
          VB: Public Sub ShowUserWallet
      overload: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet
      commentId: M:Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet
      language: CSharp
      name:
        CSharp: HideUserWallet()
        VB: HideUserWallet()
      nameWithType:
        CSharp: WalletView.HideUserWallet()
        VB: WalletView.HideUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet()
        VB: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.WalletModule
      source:
        id: HideUserWallet
        path: ''
        startLine: 34048
      syntax:
        content:
          CSharp: public void HideUserWallet()
          VB: Public Sub HideUserWallet
      overload: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.CharacterFactory
  commentId: N:Timba.Games.CharacterFactory
  language: CSharp
  name:
    CSharp: Timba.Games.CharacterFactory
    VB: Timba.Games.CharacterFactory
  nameWithType:
    CSharp: Timba.Games.CharacterFactory
    VB: Timba.Games.CharacterFactory
  qualifiedName:
    CSharp: Timba.Games.CharacterFactory
    VB: Timba.Games.CharacterFactory
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.CharacterFactory.CharacterUtils
    commentId: T:Timba.Games.CharacterFactory.CharacterUtils
    language: CSharp
    name:
      CSharp: CharacterUtils
      VB: CharacterUtils
    nameWithType:
      CSharp: CharacterUtils
      VB: CharacterUtils
    qualifiedName:
      CSharp: Timba.Games.CharacterFactory.CharacterUtils
      VB: Timba.Games.CharacterFactory.CharacterUtils
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.CharacterFactory
    source:
      id: CharacterUtils
      path: ''
      startLine: 14813
    syntax:
      content:
        CSharp: 'public class CharacterUtils : MonoBehaviour'
        VB: >-
          Public Class CharacterUtils

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA(System.String)
      commentId: M:Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA(System.String)
      language: CSharp
      name:
        CSharp: GeneratePartDNA(String)
        VB: GeneratePartDNA(String)
      nameWithType:
        CSharp: CharacterUtils.GeneratePartDNA(String)
        VB: CharacterUtils.GeneratePartDNA(String)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA(System.String)
        VB: Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: GeneratePartDNA
        path: ''
        startLine: 14821
      syntax:
        content:
          CSharp: public static string GeneratePartDNA(string partEntityName)
          VB: Public Shared Function GeneratePartDNA(partEntityName As String) As String
        parameters:
        - id: partEntityName
          type: System.String
        return:
          type: System.String
      overload: Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues(Enum,System.String)
      commentId: M:Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues(Enum,System.String)
      language: CSharp
      name:
        CSharp: GetTypeValues(Enum, String)
        VB: GetTypeValues(Enum, String)
      nameWithType:
        CSharp: CharacterUtils.GetTypeValues(Enum, String)
        VB: CharacterUtils.GetTypeValues(Enum, String)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues(Enum, System.String)
        VB: Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues(Enum, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: GetTypeValues
        path: ''
        startLine: 14837
      syntax:
        content:
          CSharp: public static string GetTypeValues(Enum genericEnum, string partName)
          VB: Public Shared Function GetTypeValues(genericEnum As  Enum, partName As String) As String
        parameters:
        - id: genericEnum
          type: Global.Enum
        - id: partName
          type: System.String
        return:
          type: System.String
      overload: Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA(System.Int64)
      commentId: M:Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA(System.Int64)
      language: CSharp
      name:
        CSharp: ParsePartDNA(Int64)
        VB: ParsePartDNA(Int64)
      nameWithType:
        CSharp: CharacterUtils.ParsePartDNA(Int64)
        VB: CharacterUtils.ParsePartDNA(Int64)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA(System.Int64)
        VB: Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA(System.Int64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: ParsePartDNA
        path: ''
        startLine: 14853
      syntax:
        content:
          CSharp: public static string ParsePartDNA(long dna)
          VB: Public Shared Function ParsePartDNA(dna As Long) As String
        parameters:
        - id: dna
          type: System.Int64
        return:
          type: System.String
      overload: Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA(System.Int64)
      commentId: M:Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA(System.Int64)
      language: CSharp
      name:
        CSharp: ParseRarityDNA(Int64)
        VB: ParseRarityDNA(Int64)
      nameWithType:
        CSharp: CharacterUtils.ParseRarityDNA(Int64)
        VB: CharacterUtils.ParseRarityDNA(Int64)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA(System.Int64)
        VB: Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA(System.Int64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: ParseRarityDNA
        path: ''
        startLine: 14872
      syntax:
        content:
          CSharp: public static string ParseRarityDNA(long dna)
          VB: Public Shared Function ParseRarityDNA(dna As Long) As String
        parameters:
        - id: dna
          type: System.Int64
        return:
          type: System.String
      overload: Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat(System.String)
      commentId: M:Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat(System.String)
      language: CSharp
      name:
        CSharp: GetRarityStat(String)
        VB: GetRarityStat(String)
      nameWithType:
        CSharp: CharacterUtils.GetRarityStat(String)
        VB: CharacterUtils.GetRarityStat(String)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat(System.String)
        VB: Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: GetRarityStat
        path: ''
        startLine: 14883
      syntax:
        content:
          CSharp: public static int GetRarityStat(string raritydna)
          VB: Public Shared Function GetRarityStat(raritydna As String) As Integer
        parameters:
        - id: raritydna
          type: System.String
        return:
          type: System.Int32
      overload: Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Timba.Games.CharacterFactory.CharacterBuilder
    commentId: T:Timba.Games.CharacterFactory.CharacterBuilder
    language: CSharp
    name:
      CSharp: CharacterBuilder
      VB: CharacterBuilder
    nameWithType:
      CSharp: CharacterBuilder
      VB: CharacterBuilder
    qualifiedName:
      CSharp: Timba.Games.CharacterFactory.CharacterBuilder
      VB: Timba.Games.CharacterFactory.CharacterBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.CharacterFactory
    source:
      id: CharacterBuilder
      path: ''
      startLine: 15476
    summary: "\nRecives a string with the character&apos;s structure and Instantiates the respective mesh \n"
    example: []
    syntax:
      content:
        CSharp: 'public class CharacterBuilder : Singleton<CharacterBuilder>'
        VB: >-
          Public Class CharacterBuilder

              Inherits Singleton(Of CharacterBuilder)
    inheritance:
    - System.Object
    - Utils.Singleton
    - Utils.Singleton{Timba.Games.CharacterFactory.CharacterBuilder}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter(System.Int32,Transform,Vector3)
      commentId: M:Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter(System.Int32,Transform,Vector3)
      language: CSharp
      name:
        CSharp: InstantiateCharacter(Int32, Transform, Vector3)
        VB: InstantiateCharacter(Int32, Transform, Vector3)
      nameWithType:
        CSharp: CharacterBuilder.InstantiateCharacter(Int32, Transform, Vector3)
        VB: CharacterBuilder.InstantiateCharacter(Int32, Transform, Vector3)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter(System.Int32, Transform, Vector3)
        VB: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter(System.Int32, Transform, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: InstantiateCharacter
        path: ''
        startLine: 15482
      syntax:
        content:
          CSharp: public GameObject InstantiateCharacter(int index, Transform parent, Vector3 position)
          VB: Public Function InstantiateCharacter(index As Integer, parent As Transform, position As Vector3) As GameObject
        parameters:
        - id: index
          type: System.Int32
        - id: parent
          type: Global.Transform
        - id: position
          type: Global.Vector3
        return:
          type: Global.GameObject
      overload: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual(System.String,Timba.Games.CharacterFactory.CharacterSlot)
      commentId: M:Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual(System.String,Timba.Games.CharacterFactory.CharacterSlot)
      language: CSharp
      name:
        CSharp: UpdateVisual(String, CharacterSlot)
        VB: UpdateVisual(String, CharacterSlot)
      nameWithType:
        CSharp: CharacterBuilder.UpdateVisual(String, CharacterSlot)
        VB: CharacterBuilder.UpdateVisual(String, CharacterSlot)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual(System.String, Timba.Games.CharacterFactory.CharacterSlot)
        VB: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual(System.String, Timba.Games.CharacterFactory.CharacterSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: UpdateVisual
        path: ''
        startLine: 15495
      syntax:
        content:
          CSharp: public void UpdateVisual(string characterStructure, CharacterSlot targetCharacter)
          VB: Public Sub UpdateVisual(characterStructure As String, targetCharacter As CharacterSlot)
        parameters:
        - id: characterStructure
          type: System.String
        - id: targetCharacter
          type: Timba.Games.CharacterFactory.CharacterSlot
      overload: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.CharacterFactory.CharacterSelector
    commentId: T:Timba.Games.CharacterFactory.CharacterSelector
    language: CSharp
    name:
      CSharp: CharacterSelector
      VB: CharacterSelector
    nameWithType:
      CSharp: CharacterSelector
      VB: CharacterSelector
    qualifiedName:
      CSharp: Timba.Games.CharacterFactory.CharacterSelector
      VB: Timba.Games.CharacterFactory.CharacterSelector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.CharacterFactory
    source:
      id: CharacterSelector
      path: ''
      startLine: 15818
    syntax:
      content:
        CSharp: 'public class CharacterSelector : MonoBehaviour'
        VB: >-
          Public Class CharacterSelector

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.CharacterFactory.CharacterSelector.characterName
      commentId: F:Timba.Games.CharacterFactory.CharacterSelector.characterName
      language: CSharp
      name:
        CSharp: characterName
        VB: characterName
      nameWithType:
        CSharp: CharacterSelector.characterName
        VB: CharacterSelector.characterName
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSelector.characterName
        VB: Timba.Games.CharacterFactory.CharacterSelector.characterName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: characterName
        path: ''
        startLine: 15820
      syntax:
        content:
          CSharp: public TMP_Text characterName
          VB: Public characterName As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterSelector.button
      commentId: F:Timba.Games.CharacterFactory.CharacterSelector.button
      language: CSharp
      name:
        CSharp: button
        VB: button
      nameWithType:
        CSharp: CharacterSelector.button
        VB: CharacterSelector.button
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSelector.button
        VB: Timba.Games.CharacterFactory.CharacterSelector.button
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: button
        path: ''
        startLine: 15821
      syntax:
        content:
          CSharp: public Button button
          VB: Public button As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction(Action,System.Boolean)
      commentId: M:Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction(Action,System.Boolean)
      language: CSharp
      name:
        CSharp: SetButtonAction(Action, Boolean)
        VB: SetButtonAction(Action, Boolean)
      nameWithType:
        CSharp: CharacterSelector.SetButtonAction(Action, Boolean)
        VB: CharacterSelector.SetButtonAction(Action, Boolean)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction(Action, System.Boolean)
        VB: Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction(Action, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: SetButtonAction
        path: ''
        startLine: 15823
      syntax:
        content:
          CSharp: public void SetButtonAction(Action _action, bool _isClearActionsSubscribed = true)
          VB: Public Sub SetButtonAction(_action As Action, _isClearActionsSubscribed As Boolean = True)
        parameters:
        - id: _action
          type: Global.Action
        - id: _isClearActionsSubscribed
          type: System.Boolean
      overload: Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.CharacterFactory.CharacterSlot
    commentId: T:Timba.Games.CharacterFactory.CharacterSlot
    language: CSharp
    name:
      CSharp: CharacterSlot
      VB: CharacterSlot
    nameWithType:
      CSharp: CharacterSlot
      VB: CharacterSlot
    qualifiedName:
      CSharp: Timba.Games.CharacterFactory.CharacterSlot
      VB: Timba.Games.CharacterFactory.CharacterSlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.CharacterFactory
    source:
      id: CharacterSlot
      path: ''
      startLine: 16137
    syntax:
      content:
        CSharp: 'public class CharacterSlot : MonoBehaviour'
        VB: >-
          Public Class CharacterSlot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.CharacterFactory.CharacterSlot.FOLDER_NAME
      commentId: F:Timba.Games.CharacterFactory.CharacterSlot.FOLDER_NAME
      language: CSharp
      name:
        CSharp: FOLDER_NAME
        VB: FOLDER_NAME
      nameWithType:
        CSharp: CharacterSlot.FOLDER_NAME
        VB: CharacterSlot.FOLDER_NAME
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSlot.FOLDER_NAME
        VB: Timba.Games.CharacterFactory.CharacterSlot.FOLDER_NAME
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: FOLDER_NAME
        path: ''
        startLine: 16140
      syntax:
        content:
          CSharp: public static string FOLDER_NAME
          VB: Public Shared FOLDER_NAME As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.Games.CharacterFactory.CharacterSlot.characterCode
      commentId: F:Timba.Games.CharacterFactory.CharacterSlot.characterCode
      language: CSharp
      name:
        CSharp: characterCode
        VB: characterCode
      nameWithType:
        CSharp: CharacterSlot.characterCode
        VB: CharacterSlot.characterCode
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSlot.characterCode
        VB: Timba.Games.CharacterFactory.CharacterSlot.characterCode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: characterCode
        path: ''
        startLine: 16142
      syntax:
        content:
          CSharp: public string characterCode
          VB: Public characterCode As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterSlot.characterID
      commentId: F:Timba.Games.CharacterFactory.CharacterSlot.characterID
      language: CSharp
      name:
        CSharp: characterID
        VB: characterID
      nameWithType:
        CSharp: CharacterSlot.characterID
        VB: CharacterSlot.characterID
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSlot.characterID
        VB: Timba.Games.CharacterFactory.CharacterSlot.characterID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: characterID
        path: ''
        startLine: 16143
      syntax:
        content:
          CSharp: public string characterID
          VB: Public characterID As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterSlot.shinsei
      commentId: F:Timba.Games.CharacterFactory.CharacterSlot.shinsei
      language: CSharp
      name:
        CSharp: shinsei
        VB: shinsei
      nameWithType:
        CSharp: CharacterSlot.shinsei
        VB: CharacterSlot.shinsei
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSlot.shinsei
        VB: Timba.Games.CharacterFactory.CharacterSlot.shinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: shinsei
        path: ''
        startLine: 16145
      syntax:
        content:
          CSharp: public Shinsei shinsei
          VB: Public shinsei As Shinsei
        return:
          type: Global.Shinsei
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterSlot.animator
      commentId: F:Timba.Games.CharacterFactory.CharacterSlot.animator
      language: CSharp
      name:
        CSharp: animator
        VB: animator
      nameWithType:
        CSharp: CharacterSlot.animator
        VB: CharacterSlot.animator
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSlot.animator
        VB: Timba.Games.CharacterFactory.CharacterSlot.animator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: animator
        path: ''
        startLine: 16146
      syntax:
        content:
          CSharp: public Animator animator
          VB: Public animator As Animator
        return:
          type: Global.Animator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterSlot.PartSlots
      commentId: P:Timba.Games.CharacterFactory.CharacterSlot.PartSlots
      language: CSharp
      name:
        CSharp: PartSlots
        VB: PartSlots
      nameWithType:
        CSharp: CharacterSlot.PartSlots
        VB: CharacterSlot.PartSlots
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSlot.PartSlots
        VB: Timba.Games.CharacterFactory.CharacterSlot.PartSlots
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: PartSlots
        path: ''
        startLine: 16150
      syntax:
        content:
          CSharp: public PartSlot[] PartSlots { get; }
          VB: Public ReadOnly Property PartSlots As PartSlot()
        parameters: []
        return:
          type: Global.PartSlot[]
      overload: Timba.Games.CharacterFactory.CharacterSlot.PartSlots*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.Games.CharacterFactory.CharacterSlot.Initialize
      commentId: M:Timba.Games.CharacterFactory.CharacterSlot.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: CharacterSlot.Initialize()
        VB: CharacterSlot.Initialize()
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSlot.Initialize()
        VB: Timba.Games.CharacterFactory.CharacterSlot.Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Initialize
        path: ''
        startLine: 16154
      syntax:
        content:
          CSharp: public void Initialize()
          VB: Public Sub Initialize
      overload: Timba.Games.CharacterFactory.CharacterSlot.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution(System.Boolean)
      commentId: M:Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution(System.Boolean)
      language: CSharp
      name:
        CSharp: SetShinseiEvolution(Boolean)
        VB: SetShinseiEvolution(Boolean)
      nameWithType:
        CSharp: CharacterSlot.SetShinseiEvolution(Boolean)
        VB: CharacterSlot.SetShinseiEvolution(Boolean)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution(System.Boolean)
        VB: Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: SetShinseiEvolution
        path: ''
        startLine: 16179
      syntax:
        content:
          CSharp: public void SetShinseiEvolution(bool isOn)
          VB: Public Sub SetShinseiEvolution(isOn As Boolean)
        parameters:
        - id: isOn
          type: System.Boolean
      overload: Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual
      commentId: M:Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual
      language: CSharp
      name:
        CSharp: UpdateVisual()
        VB: UpdateVisual()
      nameWithType:
        CSharp: CharacterSlot.UpdateVisual()
        VB: CharacterSlot.UpdateVisual()
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual()
        VB: Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: UpdateVisual
        path: ''
        startLine: 16185
      syntax:
        content:
          CSharp: public void UpdateVisual()
          VB: Public Sub UpdateVisual
      overload: Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode(System.String,System.Boolean)
      commentId: M:Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: SetCharacterCode(String, Boolean)
        VB: SetCharacterCode(String, Boolean)
      nameWithType:
        CSharp: CharacterSlot.SetCharacterCode(String, Boolean)
        VB: CharacterSlot.SetCharacterCode(String, Boolean)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode(System.String, System.Boolean)
        VB: Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: SetCharacterCode
        path: ''
        startLine: 16192
      syntax:
        content:
          CSharp: public void SetCharacterCode(string code, bool isGenerator = false)
          VB: Public Sub SetCharacterCode(code As String, isGenerator As Boolean = False)
        parameters:
        - id: code
          type: System.String
        - id: isGenerator
          type: System.Boolean
      overload: Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO
    commentId: T:Timba.Games.CharacterFactory.PartsStatDatabaseSO
    language: CSharp
    name:
      CSharp: PartsStatDatabaseSO
      VB: PartsStatDatabaseSO
    nameWithType:
      CSharp: PartsStatDatabaseSO
      VB: PartsStatDatabaseSO
    qualifiedName:
      CSharp: Timba.Games.CharacterFactory.PartsStatDatabaseSO
      VB: Timba.Games.CharacterFactory.PartsStatDatabaseSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.CharacterFactory
    source:
      id: PartsStatDatabaseSO
      path: ''
      startLine: 16525
    syntax:
      content:
        CSharp: 'public class PartsStatDatabaseSO : ScriptableObject'
        VB: >-
          Public Class PartsStatDatabaseSO

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO.partsStats
      commentId: F:Timba.Games.CharacterFactory.PartsStatDatabaseSO.partsStats
      language: CSharp
      name:
        CSharp: partsStats
        VB: partsStats
      nameWithType:
        CSharp: PartsStatDatabaseSO.partsStats
        VB: PartsStatDatabaseSO.partsStats
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.PartsStatDatabaseSO.partsStats
        VB: Timba.Games.CharacterFactory.PartsStatDatabaseSO.partsStats
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: partsStats
        path: ''
        startLine: 16529
      syntax:
        content:
          CSharp: public List<PartStat> partsStats
          VB: Public partsStats As List(Of PartStat)
        return:
          type: System.Collections.Generic.List{PartStat}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat(PartType,System.String,System.String,Timba.Games.CharacterFactory.CharacterType,StatValueType)
      commentId: M:Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat(PartType,System.String,System.String,Timba.Games.CharacterFactory.CharacterType,StatValueType)
      language: CSharp
      name:
        CSharp: GetStat(PartType, String, String, CharacterType, StatValueType)
        VB: GetStat(PartType, String, String, CharacterType, StatValueType)
      nameWithType:
        CSharp: PartsStatDatabaseSO.GetStat(PartType, String, String, CharacterType, StatValueType)
        VB: PartsStatDatabaseSO.GetStat(PartType, String, String, CharacterType, StatValueType)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat(PartType, System.String, System.String, Timba.Games.CharacterFactory.CharacterType, StatValueType)
        VB: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat(PartType, System.String, System.String, Timba.Games.CharacterFactory.CharacterType, StatValueType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: GetStat
        path: ''
        startLine: 16531
      syntax:
        content:
          CSharp: public int GetStat(PartType part, string sTier, string sType, CharacterType cType, StatValueType statValueType)
          VB: Public Function GetStat(part As PartType, sTier As String, sType As String, cType As CharacterType, statValueType As StatValueType) As Integer
        parameters:
        - id: part
          type: Global.PartType
        - id: sTier
          type: System.String
        - id: sType
          type: System.String
        - id: cType
          type: Timba.Games.CharacterFactory.CharacterType
        - id: statValueType
          type: Global.StatValueType
        return:
          type: System.Int32
      overload: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue(ShinseiStatsEnum,Timba.Games.CharacterFactory.CharacterType,RarityType,System.Int32)
      commentId: M:Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue(ShinseiStatsEnum,Timba.Games.CharacterFactory.CharacterType,RarityType,System.Int32)
      language: CSharp
      name:
        CSharp: GetStatBalanceValue(ShinseiStatsEnum, CharacterType, RarityType, Int32)
        VB: GetStatBalanceValue(ShinseiStatsEnum, CharacterType, RarityType, Int32)
      nameWithType:
        CSharp: PartsStatDatabaseSO.GetStatBalanceValue(ShinseiStatsEnum, CharacterType, RarityType, Int32)
        VB: PartsStatDatabaseSO.GetStatBalanceValue(ShinseiStatsEnum, CharacterType, RarityType, Int32)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue(ShinseiStatsEnum, Timba.Games.CharacterFactory.CharacterType, RarityType, System.Int32)
        VB: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue(ShinseiStatsEnum, Timba.Games.CharacterFactory.CharacterType, RarityType, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: GetStatBalanceValue
        path: ''
        startLine: 16569
      syntax:
        content:
          CSharp: public int GetStatBalanceValue(ShinseiStatsEnum protectedStat, CharacterType shinseiType, RarityType shinseiTier, int partStatValuesSummatory)
          VB: Public Function GetStatBalanceValue(protectedStat As ShinseiStatsEnum, shinseiType As CharacterType, shinseiTier As RarityType, partStatValuesSummatory As Integer) As Integer
        parameters:
        - id: protectedStat
          type: Global.ShinseiStatsEnum
        - id: shinseiType
          type: Timba.Games.CharacterFactory.CharacterType
        - id: shinseiTier
          type: Global.RarityType
        - id: partStatValuesSummatory
          type: System.Int32
        return:
          type: System.Int32
      overload: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat(PartStat,ShinseiStatsEnum,RarityType,System.Boolean)
      commentId: M:Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat(PartStat,ShinseiStatsEnum,RarityType,System.Boolean)
      language: CSharp
      name:
        CSharp: CalculateStat(PartStat, ShinseiStatsEnum, RarityType, Boolean)
        VB: CalculateStat(PartStat, ShinseiStatsEnum, RarityType, Boolean)
      nameWithType:
        CSharp: PartsStatDatabaseSO.CalculateStat(PartStat, ShinseiStatsEnum, RarityType, Boolean)
        VB: PartsStatDatabaseSO.CalculateStat(PartStat, ShinseiStatsEnum, RarityType, Boolean)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat(PartStat, ShinseiStatsEnum, RarityType, System.Boolean)
        VB: Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat(PartStat, ShinseiStatsEnum, RarityType, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: CalculateStat
        path: ''
        startLine: 16583
      syntax:
        content:
          CSharp: public int CalculateStat(PartStat partStat, ShinseiStatsEnum bonus, RarityType tier, bool isMainElementStat = false)
          VB: Public Function CalculateStat(partStat As PartStat, bonus As ShinseiStatsEnum, tier As RarityType, isMainElementStat As Boolean = False) As Integer
        parameters:
        - id: partStat
          type: Global.PartStat
        - id: bonus
          type: Global.ShinseiStatsEnum
        - id: tier
          type: Global.RarityType
        - id: isMainElementStat
          type: System.Boolean
        return:
          type: System.Int32
      overload: Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.CharacterFactory.ShinseiGenerator
    commentId: T:Timba.Games.CharacterFactory.ShinseiGenerator
    language: CSharp
    name:
      CSharp: ShinseiGenerator
      VB: ShinseiGenerator
    nameWithType:
      CSharp: ShinseiGenerator
      VB: ShinseiGenerator
    qualifiedName:
      CSharp: Timba.Games.CharacterFactory.ShinseiGenerator
      VB: Timba.Games.CharacterFactory.ShinseiGenerator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.CharacterFactory
    source:
      id: ShinseiGenerator
      path: ''
      startLine: 16650
    syntax:
      content:
        CSharp: 'public class ShinseiGenerator : MonoBehaviour'
        VB: >-
          Public Class ShinseiGenerator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.CharacterFactory.ShinseiGenerator.shinseisToGenerate
      commentId: F:Timba.Games.CharacterFactory.ShinseiGenerator.shinseisToGenerate
      language: CSharp
      name:
        CSharp: shinseisToGenerate
        VB: shinseisToGenerate
      nameWithType:
        CSharp: ShinseiGenerator.shinseisToGenerate
        VB: ShinseiGenerator.shinseisToGenerate
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ShinseiGenerator.shinseisToGenerate
        VB: Timba.Games.CharacterFactory.ShinseiGenerator.shinseisToGenerate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: shinseisToGenerate
        path: ''
        startLine: 16652
      syntax:
        content:
          CSharp: public int shinseisToGenerate
          VB: Public shinseisToGenerate As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ShinseiGenerator.iconBackground
      commentId: F:Timba.Games.CharacterFactory.ShinseiGenerator.iconBackground
      language: CSharp
      name:
        CSharp: iconBackground
        VB: iconBackground
      nameWithType:
        CSharp: ShinseiGenerator.iconBackground
        VB: ShinseiGenerator.iconBackground
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ShinseiGenerator.iconBackground
        VB: Timba.Games.CharacterFactory.ShinseiGenerator.iconBackground
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: iconBackground
        path: ''
        startLine: 16653
      syntax:
        content:
          CSharp: public SpriteRenderer iconBackground
          VB: Public iconBackground As SpriteRenderer
        return:
          type: Global.SpriteRenderer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ShinseiGenerator.photobooth
      commentId: F:Timba.Games.CharacterFactory.ShinseiGenerator.photobooth
      language: CSharp
      name:
        CSharp: photobooth
        VB: photobooth
      nameWithType:
        CSharp: ShinseiGenerator.photobooth
        VB: ShinseiGenerator.photobooth
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ShinseiGenerator.photobooth
        VB: Timba.Games.CharacterFactory.ShinseiGenerator.photobooth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: photobooth
        path: ''
        startLine: 16654
      syntax:
        content:
          CSharp: public ShinseiWardrobe photobooth
          VB: Public photobooth As ShinseiWardrobe
        return:
          type: Global.ShinseiWardrobe
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ShinseiGenerator.posedShinsei
      commentId: F:Timba.Games.CharacterFactory.ShinseiGenerator.posedShinsei
      language: CSharp
      name:
        CSharp: posedShinsei
        VB: posedShinsei
      nameWithType:
        CSharp: ShinseiGenerator.posedShinsei
        VB: ShinseiGenerator.posedShinsei
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ShinseiGenerator.posedShinsei
        VB: Timba.Games.CharacterFactory.ShinseiGenerator.posedShinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: posedShinsei
        path: ''
        startLine: 16655
      syntax:
        content:
          CSharp: public Animator posedShinsei
          VB: Public posedShinsei As Animator
        return:
          type: Global.Animator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ShinseiGenerator.generatedShinseis
      commentId: F:Timba.Games.CharacterFactory.ShinseiGenerator.generatedShinseis
      language: CSharp
      name:
        CSharp: generatedShinseis
        VB: generatedShinseis
      nameWithType:
        CSharp: ShinseiGenerator.generatedShinseis
        VB: ShinseiGenerator.generatedShinseis
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ShinseiGenerator.generatedShinseis
        VB: Timba.Games.CharacterFactory.ShinseiGenerator.generatedShinseis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: generatedShinseis
        path: ''
        startLine: 16656
      syntax:
        content:
          CSharp: public List<Shinsei> generatedShinseis
          VB: Public generatedShinseis As List(Of Shinsei)
        return:
          type: System.Collections.Generic.List{Shinsei}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ShinseiGenerator.shinseiIcons
      commentId: F:Timba.Games.CharacterFactory.ShinseiGenerator.shinseiIcons
      language: CSharp
      name:
        CSharp: shinseiIcons
        VB: shinseiIcons
      nameWithType:
        CSharp: ShinseiGenerator.shinseiIcons
        VB: ShinseiGenerator.shinseiIcons
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ShinseiGenerator.shinseiIcons
        VB: Timba.Games.CharacterFactory.ShinseiGenerator.shinseiIcons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: shinseiIcons
        path: ''
        startLine: 16658
      syntax:
        content:
          CSharp: public List<Sprite> shinseiIcons
          VB: Public shinseiIcons As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ShinseiGenerator.shinseiJsons
      commentId: F:Timba.Games.CharacterFactory.ShinseiGenerator.shinseiJsons
      language: CSharp
      name:
        CSharp: shinseiJsons
        VB: shinseiJsons
      nameWithType:
        CSharp: ShinseiGenerator.shinseiJsons
        VB: ShinseiGenerator.shinseiJsons
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ShinseiGenerator.shinseiJsons
        VB: Timba.Games.CharacterFactory.ShinseiGenerator.shinseiJsons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: shinseiJsons
        path: ''
        startLine: 16659
      syntax:
        content:
          CSharp: public List<string> shinseiJsons
          VB: Public shinseiJsons As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ShinseiGenerator.lastIndex
      commentId: F:Timba.Games.CharacterFactory.ShinseiGenerator.lastIndex
      language: CSharp
      name:
        CSharp: lastIndex
        VB: lastIndex
      nameWithType:
        CSharp: ShinseiGenerator.lastIndex
        VB: ShinseiGenerator.lastIndex
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ShinseiGenerator.lastIndex
        VB: Timba.Games.CharacterFactory.ShinseiGenerator.lastIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: lastIndex
        path: ''
        startLine: 16661
      syntax:
        content:
          CSharp: public int lastIndex
          VB: Public lastIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData(System.String,System.Int32)
      commentId: M:Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: GetShinseiNFTData(String, Int32)
        VB: GetShinseiNFTData(String, Int32)
      nameWithType:
        CSharp: ShinseiGenerator.GetShinseiNFTData(String, Int32)
        VB: ShinseiGenerator.GetShinseiNFTData(String, Int32)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData(System.String, System.Int32)
        VB: Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: GetShinseiNFTData
        path: ''
        startLine: 16663
      syntax:
        content:
          CSharp: public void GetShinseiNFTData(string shinseiDNA, int shinseiIndex)
          VB: Public Sub GetShinseiNFTData(shinseiDNA As String, shinseiIndex As Integer)
        parameters:
        - id: shinseiDNA
          type: System.String
        - id: shinseiIndex
          type: System.Int32
      overload: Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis(RarityType,Timba.Games.CharacterFactory.CharacterType)
      commentId: M:Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis(RarityType,Timba.Games.CharacterFactory.CharacterType)
      language: CSharp
      name:
        CSharp: GenerateShinseis(RarityType, CharacterType)
        VB: GenerateShinseis(RarityType, CharacterType)
      nameWithType:
        CSharp: ShinseiGenerator.GenerateShinseis(RarityType, CharacterType)
        VB: ShinseiGenerator.GenerateShinseis(RarityType, CharacterType)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis(RarityType, Timba.Games.CharacterFactory.CharacterType)
        VB: Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis(RarityType, Timba.Games.CharacterFactory.CharacterType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: GenerateShinseis
        path: ''
        startLine: 16690
      syntax:
        content:
          CSharp: public void GenerateShinseis(RarityType desiredTier = RarityType.Common, CharacterType desiredType = CharacterType.Sky)
          VB: Public Sub GenerateShinseis(desiredTier As RarityType = RarityType.Common, desiredType As CharacterType = CharacterType.Sky)
        parameters:
        - id: desiredTier
          type: Global.RarityType
        - id: desiredType
          type: Timba.Games.CharacterFactory.CharacterType
      overload: Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.CharacterFactory.ColorSwapper3D
    commentId: T:Timba.Games.CharacterFactory.ColorSwapper3D
    language: CSharp
    name:
      CSharp: ColorSwapper3D
      VB: ColorSwapper3D
    nameWithType:
      CSharp: ColorSwapper3D
      VB: ColorSwapper3D
    qualifiedName:
      CSharp: Timba.Games.CharacterFactory.ColorSwapper3D
      VB: Timba.Games.CharacterFactory.ColorSwapper3D
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.CharacterFactory
    source:
      id: ColorSwapper3D
      path: ''
      startLine: 16843
    syntax:
      content:
        CSharp: 'public class ColorSwapper3D : Singleton<ColorSwapper3D>'
        VB: >-
          Public Class ColorSwapper3D

              Inherits Singleton(Of ColorSwapper3D)
    inheritance:
    - System.Object
    - Utils.Singleton
    - Utils.Singleton{Timba.Games.CharacterFactory.ColorSwapper3D}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.PaletteID
      commentId: F:Timba.Games.CharacterFactory.ColorSwapper3D.PaletteID
      language: CSharp
      name:
        CSharp: PaletteID
        VB: PaletteID
      nameWithType:
        CSharp: ColorSwapper3D.PaletteID
        VB: ColorSwapper3D.PaletteID
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.PaletteID
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.PaletteID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: PaletteID
        path: ''
        startLine: 16845
      syntax:
        content:
          CSharp: public string PaletteID
          VB: Public PaletteID As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D._colorsScriptableObject
      commentId: F:Timba.Games.CharacterFactory.ColorSwapper3D._colorsScriptableObject
      language: CSharp
      name:
        CSharp: _colorsScriptableObject
        VB: _colorsScriptableObject
      nameWithType:
        CSharp: ColorSwapper3D._colorsScriptableObject
        VB: ColorSwapper3D._colorsScriptableObject
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D._colorsScriptableObject
        VB: Timba.Games.CharacterFactory.ColorSwapper3D._colorsScriptableObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: _colorsScriptableObject
        path: ''
        startLine: 16847
      syntax:
        content:
          CSharp: public ColorsSO _colorsScriptableObject
          VB: Public _colorsScriptableObject As ColorsSO
        return:
          type: Global.ColorsSO
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.isCharacterViewScene
      commentId: F:Timba.Games.CharacterFactory.ColorSwapper3D.isCharacterViewScene
      language: CSharp
      name:
        CSharp: isCharacterViewScene
        VB: isCharacterViewScene
      nameWithType:
        CSharp: ColorSwapper3D.isCharacterViewScene
        VB: ColorSwapper3D.isCharacterViewScene
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.isCharacterViewScene
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.isCharacterViewScene
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: isCharacterViewScene
        path: ''
        startLine: 16848
      syntax:
        content:
          CSharp: public bool isCharacterViewScene
          VB: Public isCharacterViewScene As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D._materialColorPropertyName
      commentId: F:Timba.Games.CharacterFactory.ColorSwapper3D._materialColorPropertyName
      language: CSharp
      name:
        CSharp: _materialColorPropertyName
        VB: _materialColorPropertyName
      nameWithType:
        CSharp: ColorSwapper3D._materialColorPropertyName
        VB: ColorSwapper3D._materialColorPropertyName
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D._materialColorPropertyName
        VB: Timba.Games.CharacterFactory.ColorSwapper3D._materialColorPropertyName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: _materialColorPropertyName
        path: ''
        startLine: 16852
      syntax:
        content:
          CSharp: public SwapColorPropertyNameSO _materialColorPropertyName
          VB: Public _materialColorPropertyName As SwapColorPropertyNameSO
        return:
          type: Global.SwapColorPropertyNameSO
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
      commentId: M:Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
      language: CSharp
      name:
        CSharp: AddTo3DPartList(RecolorablePart3D)
        VB: AddTo3DPartList(RecolorablePart3D)
      nameWithType:
        CSharp: ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
        VB: ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: AddTo3DPartList
        path: ''
        startLine: 16858
      syntax:
        content:
          CSharp: public void AddTo3DPartList(RecolorablePart3D part)
          VB: Public Sub AddTo3DPartList(part As RecolorablePart3D)
        parameters:
        - id: part
          type: Global.RecolorablePart3D
      overload: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart(RecolorablePart3D)
      commentId: M:Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart(RecolorablePart3D)
      language: CSharp
      name:
        CSharp: RemovePart(RecolorablePart3D)
        VB: RemovePart(RecolorablePart3D)
      nameWithType:
        CSharp: ColorSwapper3D.RemovePart(RecolorablePart3D)
        VB: ColorSwapper3D.RemovePart(RecolorablePart3D)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart(RecolorablePart3D)
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart(RecolorablePart3D)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: RemovePart
        path: ''
        startLine: 16864
      syntax:
        content:
          CSharp: public void RemovePart(RecolorablePart3D part)
          VB: Public Sub RemovePart(part As RecolorablePart3D)
        parameters:
        - id: part
          type: Global.RecolorablePart3D
      overload: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette
      commentId: M:Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette
      language: CSharp
      name:
        CSharp: SwapPallette()
        VB: SwapPallette()
      nameWithType:
        CSharp: ColorSwapper3D.SwapPallette()
        VB: ColorSwapper3D.SwapPallette()
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette()
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: SwapPallette
        path: ''
        startLine: 16868
      syntax:
        content:
          CSharp: public void SwapPallette()
          VB: Public Sub SwapPallette
      overload: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette
      commentId: M:Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette
      language: CSharp
      name:
        CSharp: UpdatePartPallette()
        VB: UpdatePartPallette()
      nameWithType:
        CSharp: ColorSwapper3D.UpdatePartPallette()
        VB: ColorSwapper3D.UpdatePartPallette()
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette()
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: UpdatePartPallette
        path: ''
        startLine: 16879
      syntax:
        content:
          CSharp: public void UpdatePartPallette()
          VB: Public Sub UpdatePartPallette
      overload: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet(System.Int32)
      commentId: M:Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet(System.Int32)
      language: CSharp
      name:
        CSharp: AssignPallet(Int32)
        VB: AssignPallet(Int32)
      nameWithType:
        CSharp: ColorSwapper3D.AssignPallet(Int32)
        VB: ColorSwapper3D.AssignPallet(Int32)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet(System.Int32)
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: AssignPallet
        path: ''
        startLine: 16887
      syntax:
        content:
          CSharp: public void AssignPallet(int index)
          VB: Public Sub AssignPallet(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.CharacterFactory.CharacterType
    commentId: T:Timba.Games.CharacterFactory.CharacterType
    language: CSharp
    name:
      CSharp: CharacterType
      VB: CharacterType
    nameWithType:
      CSharp: CharacterType
      VB: CharacterType
    qualifiedName:
      CSharp: Timba.Games.CharacterFactory.CharacterType
      VB: Timba.Games.CharacterFactory.CharacterType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.CharacterFactory
    source:
      id: CharacterType
      path: ''
      startLine: 16914
    summary: "\nhere should be listed all the possible character families or types to match the assets naming conventions\n"
    example: []
    syntax:
      content:
        CSharp: public enum CharacterType
        VB: Public Enum CharacterType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Timba.Games.CharacterFactory.CharacterType.Sky
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Sky
      language: CSharp
      name:
        CSharp: Sky
        VB: Sky
      nameWithType:
        CSharp: CharacterType.Sky
        VB: CharacterType.Sky
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Sky
        VB: Timba.Games.CharacterFactory.CharacterType.Sky
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Sky
        path: ''
        startLine: 16916
      syntax:
        content:
          CSharp: Sky = 0
          VB: Sky = 0
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Sun
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Sun
      language: CSharp
      name:
        CSharp: Sun
        VB: Sun
      nameWithType:
        CSharp: CharacterType.Sun
        VB: CharacterType.Sun
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Sun
        VB: Timba.Games.CharacterFactory.CharacterType.Sun
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Sun
        path: ''
        startLine: 16917
      syntax:
        content:
          CSharp: Sun = 1
          VB: Sun = 1
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Dark
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Dark
      language: CSharp
      name:
        CSharp: Dark
        VB: Dark
      nameWithType:
        CSharp: CharacterType.Dark
        VB: CharacterType.Dark
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Dark
        VB: Timba.Games.CharacterFactory.CharacterType.Dark
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Dark
        path: ''
        startLine: 16918
      syntax:
        content:
          CSharp: Dark = 2
          VB: Dark = 2
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Ocean
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Ocean
      language: CSharp
      name:
        CSharp: Ocean
        VB: Ocean
      nameWithType:
        CSharp: CharacterType.Ocean
        VB: CharacterType.Ocean
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Ocean
        VB: Timba.Games.CharacterFactory.CharacterType.Ocean
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Ocean
        path: ''
        startLine: 16919
      syntax:
        content:
          CSharp: Ocean = 3
          VB: Ocean = 3
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Nature
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Nature
      language: CSharp
      name:
        CSharp: Nature
        VB: Nature
      nameWithType:
        CSharp: CharacterType.Nature
        VB: CharacterType.Nature
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Nature
        VB: Timba.Games.CharacterFactory.CharacterType.Nature
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Nature
        path: ''
        startLine: 16920
      syntax:
        content:
          CSharp: Nature = 4
          VB: Nature = 4
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Light
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Light
      language: CSharp
      name:
        CSharp: Light
        VB: Light
      nameWithType:
        CSharp: CharacterType.Light
        VB: CharacterType.Light
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Light
        VB: Timba.Games.CharacterFactory.CharacterType.Light
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Light
        path: ''
        startLine: 16921
      syntax:
        content:
          CSharp: Light = 5
          VB: Light = 5
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Snow
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Snow
      language: CSharp
      name:
        CSharp: Snow
        VB: Snow
      nameWithType:
        CSharp: CharacterType.Snow
        VB: CharacterType.Snow
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Snow
        VB: Timba.Games.CharacterFactory.CharacterType.Snow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Snow
        path: ''
        startLine: 16922
      syntax:
        content:
          CSharp: Snow = 6
          VB: Snow = 6
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Earth
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Earth
      language: CSharp
      name:
        CSharp: Earth
        VB: Earth
      nameWithType:
        CSharp: CharacterType.Earth
        VB: CharacterType.Earth
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Earth
        VB: Timba.Games.CharacterFactory.CharacterType.Earth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Earth
        path: ''
        startLine: 16923
      syntax:
        content:
          CSharp: Earth = 7
          VB: Earth = 7
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Mecha
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Mecha
      language: CSharp
      name:
        CSharp: Mecha
        VB: Mecha
      nameWithType:
        CSharp: CharacterType.Mecha
        VB: CharacterType.Mecha
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Mecha
        VB: Timba.Games.CharacterFactory.CharacterType.Mecha
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Mecha
        path: ''
        startLine: 16924
      syntax:
        content:
          CSharp: Mecha = 8
          VB: Mecha = 8
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Volt
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Volt
      language: CSharp
      name:
        CSharp: Volt
        VB: Volt
      nameWithType:
        CSharp: CharacterType.Volt
        VB: CharacterType.Volt
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Volt
        VB: Timba.Games.CharacterFactory.CharacterType.Volt
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Volt
        path: ''
        startLine: 16925
      syntax:
        content:
          CSharp: Volt = 9
          VB: Volt = 9
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Cursed
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Cursed
      language: CSharp
      name:
        CSharp: Cursed
        VB: Cursed
      nameWithType:
        CSharp: CharacterType.Cursed
        VB: CharacterType.Cursed
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Cursed
        VB: Timba.Games.CharacterFactory.CharacterType.Cursed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Cursed
        path: ''
        startLine: 16926
      syntax:
        content:
          CSharp: Cursed = 10
          VB: Cursed = 10
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Dreamer
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Dreamer
      language: CSharp
      name:
        CSharp: Dreamer
        VB: Dreamer
      nameWithType:
        CSharp: CharacterType.Dreamer
        VB: CharacterType.Dreamer
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Dreamer
        VB: Timba.Games.CharacterFactory.CharacterType.Dreamer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Dreamer
        path: ''
        startLine: 16927
      syntax:
        content:
          CSharp: Dreamer = 11
          VB: Dreamer = 11
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.CharacterFactory.CharacterType.Celestial
      commentId: F:Timba.Games.CharacterFactory.CharacterType.Celestial
      language: CSharp
      name:
        CSharp: Celestial
        VB: Celestial
      nameWithType:
        CSharp: CharacterType.Celestial
        VB: CharacterType.Celestial
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterType.Celestial
        VB: Timba.Games.CharacterFactory.CharacterType.Celestial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: Celestial
        path: ''
        startLine: 16928
      syntax:
        content:
          CSharp: Celestial = 12
          VB: Celestial = 12
        return:
          type: Timba.Games.CharacterFactory.CharacterType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: Timba.Games.DynamicCamera
  commentId: N:Timba.Games.DynamicCamera
  language: CSharp
  name:
    CSharp: Timba.Games.DynamicCamera
    VB: Timba.Games.DynamicCamera
  nameWithType:
    CSharp: Timba.Games.DynamicCamera
    VB: Timba.Games.DynamicCamera
  qualifiedName:
    CSharp: Timba.Games.DynamicCamera
    VB: Timba.Games.DynamicCamera
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.DynamicCamera.CameraPlaneController
    commentId: T:Timba.Games.DynamicCamera.CameraPlaneController
    language: CSharp
    name:
      CSharp: CameraPlaneController
      VB: CameraPlaneController
    nameWithType:
      CSharp: CameraPlaneController
      VB: CameraPlaneController
    qualifiedName:
      CSharp: Timba.Games.DynamicCamera.CameraPlaneController
      VB: Timba.Games.DynamicCamera.CameraPlaneController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.DynamicCamera
    source:
      id: CameraPlaneController
      path: ''
      startLine: 34910
    summary: "\nSwitch between diferent cameras by index\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CameraPlaneController : MonoBehaviour'
        VB: >-
          Public Class CameraPlaneController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.DynamicCamera.CameraPlaneController.testStaticCam
      commentId: F:Timba.Games.DynamicCamera.CameraPlaneController.testStaticCam
      language: CSharp
      name:
        CSharp: testStaticCam
        VB: testStaticCam
      nameWithType:
        CSharp: CameraPlaneController.testStaticCam
        VB: CameraPlaneController.testStaticCam
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.testStaticCam
        VB: Timba.Games.DynamicCamera.CameraPlaneController.testStaticCam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: testStaticCam
        path: ''
        startLine: 34912
      syntax:
        content:
          CSharp: public bool testStaticCam
          VB: Public testStaticCam As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam(CamerasAvailableEnum,System.Single,System.Single,Action)
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam(CamerasAvailableEnum,System.Single,System.Single,Action)
      language: CSharp
      name:
        CSharp: SwitchToCam(CamerasAvailableEnum, Single, Single, Action)
        VB: SwitchToCam(CamerasAvailableEnum, Single, Single, Action)
      nameWithType:
        CSharp: CameraPlaneController.SwitchToCam(CamerasAvailableEnum, Single, Single, Action)
        VB: CameraPlaneController.SwitchToCam(CamerasAvailableEnum, Single, Single, Action)
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam(CamerasAvailableEnum, System.Single, System.Single, Action)
        VB: Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam(CamerasAvailableEnum, System.Single, System.Single, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: SwitchToCam
        path: ''
        startLine: 34934
      syntax:
        content:
          CSharp: public void SwitchToCam(CamerasAvailableEnum camIndex, float time = 5F, float pathPosition = 0F, Action callback = null)
          VB: Public Sub SwitchToCam(camIndex As CamerasAvailableEnum, time As Single = 5F, pathPosition As Single = 0F, callback As Action = Nothing)
        parameters:
        - id: camIndex
          type: Global.CamerasAvailableEnum
        - id: time
          type: System.Single
        - id: pathPosition
          type: System.Single
        - id: callback
          type: Global.Action
      overload: Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback(System.Single,Action)
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback(System.Single,Action)
      language: CSharp
      name:
        CSharp: WaitForSecondsToCallback(Single, Action)
        VB: WaitForSecondsToCallback(Single, Action)
      nameWithType:
        CSharp: CameraPlaneController.WaitForSecondsToCallback(Single, Action)
        VB: CameraPlaneController.WaitForSecondsToCallback(Single, Action)
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback(System.Single, Action)
        VB: Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback(System.Single, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: WaitForSecondsToCallback
        path: ''
        startLine: 34966
      syntax:
        content:
          CSharp: public IEnumerator WaitForSecondsToCallback(float seconds, Action callback)
          VB: Public Function WaitForSecondsToCallback(seconds As Single, callback As Action) As IEnumerator
        parameters:
        - id: seconds
          type: System.Single
        - id: callback
          type: Global.Action
        return:
          type: System.Collections.IEnumerator
      overload: Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest(CameraPointOfInteresEnum,System.Boolean,System.Boolean)
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest(CameraPointOfInteresEnum,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: SwitchPointOfInterest(CameraPointOfInteresEnum, Boolean, Boolean)
        VB: SwitchPointOfInterest(CameraPointOfInteresEnum, Boolean, Boolean)
      nameWithType:
        CSharp: CameraPlaneController.SwitchPointOfInterest(CameraPointOfInteresEnum, Boolean, Boolean)
        VB: CameraPlaneController.SwitchPointOfInterest(CameraPointOfInteresEnum, Boolean, Boolean)
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest(CameraPointOfInteresEnum, System.Boolean, System.Boolean)
        VB: Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest(CameraPointOfInteresEnum, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: SwitchPointOfInterest
        path: ''
        startLine: 34972
      syntax:
        content:
          CSharp: public void SwitchPointOfInterest(CameraPointOfInteresEnum pointIndex, bool doFocusOffset = false, bool focusOffsetRight = false)
          VB: Public Sub SwitchPointOfInterest(pointIndex As CameraPointOfInteresEnum, doFocusOffset As Boolean = False, focusOffsetRight As Boolean = False)
        parameters:
        - id: pointIndex
          type: Global.CameraPointOfInteresEnum
        - id: doFocusOffset
          type: System.Boolean
        - id: focusOffsetRight
          type: System.Boolean
      overload: Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest
      language: CSharp
      name:
        CSharp: ClearPointOfInterest()
        VB: ClearPointOfInterest()
      nameWithType:
        CSharp: CameraPlaneController.ClearPointOfInterest()
        VB: CameraPlaneController.ClearPointOfInterest()
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest()
        VB: Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: ClearPointOfInterest
        path: ''
        startLine: 34987
      syntax:
        content:
          CSharp: public void ClearPointOfInterest()
          VB: Public Sub ClearPointOfInterest
      overload: Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.InitCameras
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.InitCameras
      language: CSharp
      name:
        CSharp: InitCameras()
        VB: InitCameras()
      nameWithType:
        CSharp: CameraPlaneController.InitCameras()
        VB: CameraPlaneController.InitCameras()
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.InitCameras()
        VB: Timba.Games.DynamicCamera.CameraPlaneController.InitCameras()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: InitCameras
        path: ''
        startLine: 34996
      syntax:
        content:
          CSharp: public void InitCameras()
          VB: Public Sub InitCameras
      overload: Timba.Games.DynamicCamera.CameraPlaneController.InitCameras*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras
      language: CSharp
      name:
        CSharp: InitWaitTurnCameras()
        VB: InitWaitTurnCameras()
      nameWithType:
        CSharp: CameraPlaneController.InitWaitTurnCameras()
        VB: CameraPlaneController.InitWaitTurnCameras()
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras()
        VB: Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: InitWaitTurnCameras
        path: ''
        startLine: 35001
      syntax:
        content:
          CSharp: public void InitWaitTurnCameras()
          VB: Public Sub InitWaitTurnCameras
      overload: Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras
      language: CSharp
      name:
        CSharp: StopWaitTurnCameras()
        VB: StopWaitTurnCameras()
      nameWithType:
        CSharp: CameraPlaneController.StopWaitTurnCameras()
        VB: CameraPlaneController.StopWaitTurnCameras()
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras()
        VB: Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: StopWaitTurnCameras
        path: ''
        startLine: 35009
      syntax:
        content:
          CSharp: public void StopWaitTurnCameras()
          VB: Public Sub StopWaitTurnCameras
      overload: Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera(Action)
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera(Action)
      language: CSharp
      name:
        CSharp: OrbitalCamera(Action)
        VB: OrbitalCamera(Action)
      nameWithType:
        CSharp: CameraPlaneController.OrbitalCamera(Action)
        VB: CameraPlaneController.OrbitalCamera(Action)
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera(Action)
        VB: Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera(Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: OrbitalCamera
        path: ''
        startLine: 35035
      syntax:
        content:
          CSharp: public void OrbitalCamera(Action _callback)
          VB: Public Sub OrbitalCamera(_callback As Action)
        parameters:
        - id: _callback
          type: Global.Action
      overload: Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera(System.Boolean,Action)
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera(System.Boolean,Action)
      language: CSharp
      name:
        CSharp: StaticCamera(Boolean, Action)
        VB: StaticCamera(Boolean, Action)
      nameWithType:
        CSharp: CameraPlaneController.StaticCamera(Boolean, Action)
        VB: CameraPlaneController.StaticCamera(Boolean, Action)
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera(System.Boolean, Action)
        VB: Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera(System.Boolean, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: StaticCamera
        path: ''
        startLine: 35043
      syntax:
        content:
          CSharp: public void StaticCamera(bool _playerFocus, Action _callback)
          VB: Public Sub StaticCamera(_playerFocus As Boolean, _callback As Action)
        parameters:
        - id: _playerFocus
          type: System.Boolean
        - id: _callback
          type: Global.Action
      overload: Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame(Action)
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame(Action)
      language: CSharp
      name:
        CSharp: GeneralFrame(Action)
        VB: GeneralFrame(Action)
      nameWithType:
        CSharp: CameraPlaneController.GeneralFrame(Action)
        VB: CameraPlaneController.GeneralFrame(Action)
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame(Action)
        VB: Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame(Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: GeneralFrame
        path: ''
        startLine: 35075
      syntax:
        content:
          CSharp: public void GeneralFrame(Action _callback)
          VB: Public Sub GeneralFrame(_callback As Action)
        parameters:
        - id: _callback
          type: Global.Action
      overload: Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame(System.Boolean,Action)
      commentId: M:Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame(System.Boolean,Action)
      language: CSharp
      name:
        CSharp: CenitalFrame(Boolean, Action)
        VB: CenitalFrame(Boolean, Action)
      nameWithType:
        CSharp: CameraPlaneController.CenitalFrame(Boolean, Action)
        VB: CameraPlaneController.CenitalFrame(Boolean, Action)
      qualifiedName:
        CSharp: Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame(System.Boolean, Action)
        VB: Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame(System.Boolean, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.DynamicCamera
      source:
        id: CenitalFrame
        path: ''
        startLine: 35083
      syntax:
        content:
          CSharp: public void CenitalFrame(bool focusPlayer, Action _callback)
          VB: Public Sub CenitalFrame(focusPlayer As Boolean, _callback As Action)
        parameters:
        - id: focusPlayer
          type: System.Boolean
        - id: _callback
          type: Global.Action
      overload: Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.Recolor
  commentId: N:Timba.Games.Recolor
  language: CSharp
  name:
    CSharp: Timba.Games.Recolor
    VB: Timba.Games.Recolor
  nameWithType:
    CSharp: Timba.Games.Recolor
    VB: Timba.Games.Recolor
  qualifiedName:
    CSharp: Timba.Games.Recolor
    VB: Timba.Games.Recolor
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.Recolor.Recolorable
    commentId: T:Timba.Games.Recolor.Recolorable
    language: CSharp
    name:
      CSharp: Recolorable
      VB: Recolorable
    nameWithType:
      CSharp: Recolorable
      VB: Recolorable
    qualifiedName:
      CSharp: Timba.Games.Recolor.Recolorable
      VB: Timba.Games.Recolor.Recolorable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.Recolor
    source:
      id: Recolorable
      path: ''
      startLine: 35345
    syntax:
      content:
        CSharp: 'public class Recolorable : MonoBehaviour'
        VB: >-
          Public Class Recolorable

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.Recolor.Recolorable.SetColors(Color32[])
      commentId: M:Timba.Games.Recolor.Recolorable.SetColors(Color32[])
      language: CSharp
      name:
        CSharp: SetColors(Color32[])
        VB: SetColors(Color32())
      nameWithType:
        CSharp: Recolorable.SetColors(Color32[])
        VB: Recolorable.SetColors(Color32())
      qualifiedName:
        CSharp: Timba.Games.Recolor.Recolorable.SetColors(Color32[])
        VB: Timba.Games.Recolor.Recolorable.SetColors(Color32())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.Recolor
      source:
        id: SetColors
        path: ''
        startLine: 35352
      syntax:
        content:
          CSharp: public void SetColors(Color32[] newColors)
          VB: Public Sub SetColors(newColors As Color32())
        parameters:
        - id: newColors
          type: Global.Color32[]
      overload: Timba.Games.Recolor.Recolorable.SetColors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.Recolor.Recolorable.SetColors(Color32[],MaterialPropertyBlock)
      commentId: M:Timba.Games.Recolor.Recolorable.SetColors(Color32[],MaterialPropertyBlock)
      language: CSharp
      name:
        CSharp: SetColors(Color32[], MaterialPropertyBlock)
        VB: SetColors(Color32(), MaterialPropertyBlock)
      nameWithType:
        CSharp: Recolorable.SetColors(Color32[], MaterialPropertyBlock)
        VB: Recolorable.SetColors(Color32(), MaterialPropertyBlock)
      qualifiedName:
        CSharp: Timba.Games.Recolor.Recolorable.SetColors(Color32[], MaterialPropertyBlock)
        VB: Timba.Games.Recolor.Recolorable.SetColors(Color32(), MaterialPropertyBlock)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.Recolor
      source:
        id: SetColors
        path: ''
        startLine: 35366
      syntax:
        content:
          CSharp: public void SetColors(Color32[] newColors, MaterialPropertyBlock _materialProperty)
          VB: Public Sub SetColors(newColors As Color32(), _materialProperty As MaterialPropertyBlock)
        parameters:
        - id: newColors
          type: Global.Color32[]
        - id: _materialProperty
          type: Global.MaterialPropertyBlock
      overload: Timba.Games.Recolor.Recolorable.SetColors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.Recolor.Recolorable.SetColors(Color32[],Material)
      commentId: M:Timba.Games.Recolor.Recolorable.SetColors(Color32[],Material)
      language: CSharp
      name:
        CSharp: SetColors(Color32[], Material)
        VB: SetColors(Color32(), Material)
      nameWithType:
        CSharp: Recolorable.SetColors(Color32[], Material)
        VB: Recolorable.SetColors(Color32(), Material)
      qualifiedName:
        CSharp: Timba.Games.Recolor.Recolorable.SetColors(Color32[], Material)
        VB: Timba.Games.Recolor.Recolorable.SetColors(Color32(), Material)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.Recolor
      source:
        id: SetColors
        path: ''
        startLine: 35376
      syntax:
        content:
          CSharp: public void SetColors(Color32[] newColors, Material _materialProperty)
          VB: Public Sub SetColors(newColors As Color32(), _materialProperty As Material)
        parameters:
        - id: newColors
          type: Global.Color32[]
        - id: _materialProperty
          type: Global.Material
      overload: Timba.Games.Recolor.Recolorable.SetColors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Characters
  commentId: N:Timba.Characters
  language: CSharp
  name:
    CSharp: Timba.Characters
    VB: Timba.Characters
  nameWithType:
    CSharp: Timba.Characters
    VB: Timba.Characters
  qualifiedName:
    CSharp: Timba.Characters
    VB: Timba.Characters
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Characters.PartVisual
    commentId: T:Timba.Characters.PartVisual
    language: CSharp
    name:
      CSharp: PartVisual
      VB: PartVisual
    nameWithType:
      CSharp: PartVisual
      VB: PartVisual
    qualifiedName:
      CSharp: Timba.Characters.PartVisual
      VB: Timba.Characters.PartVisual
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Characters
    source:
      id: PartVisual
      path: ''
      startLine: 17248
    syntax:
      content:
        CSharp: 'public class PartVisual : MonoBehaviour'
        VB: >-
          Public Class PartVisual

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Characters.PartVisual.OnPowered
      commentId: E:Timba.Characters.PartVisual.OnPowered
      language: CSharp
      name:
        CSharp: OnPowered
        VB: OnPowered
      nameWithType:
        CSharp: PartVisual.OnPowered
        VB: PartVisual.OnPowered
      qualifiedName:
        CSharp: Timba.Characters.PartVisual.OnPowered
        VB: Timba.Characters.PartVisual.OnPowered
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Timba.Characters
      source:
        id: OnPowered
        path: ''
        startLine: 17251
      syntax:
        content:
          CSharp: public event Action<bool> OnPowered
          VB: Public Event OnPowered As Action(Of Boolean)
        return:
          type: Global.Action{System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Characters.PartVisual.ChangeSpritePalette(Color32[])
      commentId: M:Timba.Characters.PartVisual.ChangeSpritePalette(Color32[])
      language: CSharp
      name:
        CSharp: ChangeSpritePalette(Color32[])
        VB: ChangeSpritePalette(Color32())
      nameWithType:
        CSharp: PartVisual.ChangeSpritePalette(Color32[])
        VB: PartVisual.ChangeSpritePalette(Color32())
      qualifiedName:
        CSharp: Timba.Characters.PartVisual.ChangeSpritePalette(Color32[])
        VB: Timba.Characters.PartVisual.ChangeSpritePalette(Color32())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Characters
      source:
        id: ChangeSpritePalette
        path: ''
        startLine: 17327
      syntax:
        content:
          CSharp: public void ChangeSpritePalette(Color32[] _colors)
          VB: Public Sub ChangeSpritePalette(_colors As Color32())
        parameters:
        - id: _colors
          type: Global.Color32[]
      overload: Timba.Characters.PartVisual.ChangeSpritePalette*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Characters.PartVisual.RecolorPartSprites(Action{MaterialPropertyBlock})
      commentId: M:Timba.Characters.PartVisual.RecolorPartSprites(Action{MaterialPropertyBlock})
      language: CSharp
      name:
        CSharp: RecolorPartSprites(Action<MaterialPropertyBlock>)
        VB: RecolorPartSprites(Action(Of MaterialPropertyBlock))
      nameWithType:
        CSharp: PartVisual.RecolorPartSprites(Action<MaterialPropertyBlock>)
        VB: PartVisual.RecolorPartSprites(Action(Of MaterialPropertyBlock))
      qualifiedName:
        CSharp: Timba.Characters.PartVisual.RecolorPartSprites(Action<MaterialPropertyBlock>)
        VB: Timba.Characters.PartVisual.RecolorPartSprites(Action(Of MaterialPropertyBlock))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Characters
      source:
        id: RecolorPartSprites
        path: ''
        startLine: 17351
      syntax:
        content:
          CSharp: public void RecolorPartSprites(Action<MaterialPropertyBlock> _recolorAction)
          VB: Public Sub RecolorPartSprites(_recolorAction As Action(Of MaterialPropertyBlock))
        parameters:
        - id: _recolorAction
          type: Global.Action{MaterialPropertyBlock}
      overload: Timba.Characters.PartVisual.RecolorPartSprites*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Characters.PartVisual.RecolorPartImages(Action{Material})
      commentId: M:Timba.Characters.PartVisual.RecolorPartImages(Action{Material})
      language: CSharp
      name:
        CSharp: RecolorPartImages(Action<Material>)
        VB: RecolorPartImages(Action(Of Material))
      nameWithType:
        CSharp: PartVisual.RecolorPartImages(Action<Material>)
        VB: PartVisual.RecolorPartImages(Action(Of Material))
      qualifiedName:
        CSharp: Timba.Characters.PartVisual.RecolorPartImages(Action<Material>)
        VB: Timba.Characters.PartVisual.RecolorPartImages(Action(Of Material))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Characters
      source:
        id: RecolorPartImages
        path: ''
        startLine: 17361
      syntax:
        content:
          CSharp: public void RecolorPartImages(Action<Material> _recolorAction)
          VB: Public Sub RecolorPartImages(_recolorAction As Action(Of Material))
        parameters:
        - id: _recolorAction
          type: Global.Action{Material}
      overload: Timba.Characters.PartVisual.RecolorPartImages*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Characters.PartVisual.SetPowered(System.Boolean)
      commentId: M:Timba.Characters.PartVisual.SetPowered(System.Boolean)
      language: CSharp
      name:
        CSharp: SetPowered(Boolean)
        VB: SetPowered(Boolean)
      nameWithType:
        CSharp: PartVisual.SetPowered(Boolean)
        VB: PartVisual.SetPowered(Boolean)
      qualifiedName:
        CSharp: Timba.Characters.PartVisual.SetPowered(System.Boolean)
        VB: Timba.Characters.PartVisual.SetPowered(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Characters
      source:
        id: SetPowered
        path: ''
        startLine: 17382
      summary: "\nTurns on/off a part. Parts are turned off for building and other no-gameplay situations.\nCurrent implementation tries to be generic. Might need to change in the future\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPowered(bool isPowered)
          VB: Public Sub SetPowered(isPowered As Boolean)
        parameters:
        - id: isPowered
          type: System.Boolean
      overload: Timba.Characters.PartVisual.SetPowered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Recolor
  commentId: N:Timba.Recolor
  language: CSharp
  name:
    CSharp: Timba.Recolor
    VB: Timba.Recolor
  nameWithType:
    CSharp: Timba.Recolor
    VB: Timba.Recolor
  qualifiedName:
    CSharp: Timba.Recolor
    VB: Timba.Recolor
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Recolor.RecolorablePart3D
    commentId: T:Timba.Recolor.RecolorablePart3D
    language: CSharp
    name:
      CSharp: RecolorablePart3D
      VB: RecolorablePart3D
    nameWithType:
      CSharp: RecolorablePart3D
      VB: RecolorablePart3D
    qualifiedName:
      CSharp: Timba.Recolor.RecolorablePart3D
      VB: Timba.Recolor.RecolorablePart3D
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Recolor
    source:
      id: RecolorablePart3D
      path: ''
      startLine: 17394
    syntax:
      content:
        CSharp: 'public class RecolorablePart3D : MonoBehaviour'
        VB: >-
          Public Class RecolorablePart3D

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Recolor.RecolorablePart3D.colors
      commentId: F:Timba.Recolor.RecolorablePart3D.colors
      language: CSharp
      name:
        CSharp: colors
        VB: colors
      nameWithType:
        CSharp: RecolorablePart3D.colors
        VB: RecolorablePart3D.colors
      qualifiedName:
        CSharp: Timba.Recolor.RecolorablePart3D.colors
        VB: Timba.Recolor.RecolorablePart3D.colors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Recolor
      source:
        id: colors
        path: ''
        startLine: 17397
      syntax:
        content:
          CSharp: public Color32[] colors
          VB: Public colors As Color32()
        return:
          type: Global.Color32[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Recolor.RecolorablePart3D.SetColors(System.String[],Color32[])
      commentId: M:Timba.Recolor.RecolorablePart3D.SetColors(System.String[],Color32[])
      language: CSharp
      name:
        CSharp: SetColors(String[], Color32[])
        VB: SetColors(String(), Color32())
      nameWithType:
        CSharp: RecolorablePart3D.SetColors(String[], Color32[])
        VB: RecolorablePart3D.SetColors(String(), Color32())
      qualifiedName:
        CSharp: Timba.Recolor.RecolorablePart3D.SetColors(System.String[], Color32[])
        VB: Timba.Recolor.RecolorablePart3D.SetColors(System.String(), Color32())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Recolor
      source:
        id: SetColors
        path: ''
        startLine: 17409
      syntax:
        content:
          CSharp: public void SetColors(string[] materialPropertyName, Color32[] newColors)
          VB: Public Sub SetColors(materialPropertyName As String(), newColors As Color32())
        parameters:
        - id: materialPropertyName
          type: System.String[]
        - id: newColors
          type: Global.Color32[]
      overload: Timba.Recolor.RecolorablePart3D.SetColors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Packages.Games.PlayerControllerModule
  commentId: N:Timba.Packages.Games.PlayerControllerModule
  language: CSharp
  name:
    CSharp: Timba.Packages.Games.PlayerControllerModule
    VB: Timba.Packages.Games.PlayerControllerModule
  nameWithType:
    CSharp: Timba.Packages.Games.PlayerControllerModule
    VB: Timba.Packages.Games.PlayerControllerModule
  qualifiedName:
    CSharp: Timba.Packages.Games.PlayerControllerModule
    VB: Timba.Packages.Games.PlayerControllerModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Packages.Games.PlayerControllerModule.InputSource
    commentId: T:Timba.Packages.Games.PlayerControllerModule.InputSource
    language: CSharp
    name:
      CSharp: InputSource
      VB: InputSource
    nameWithType:
      CSharp: InputSource
      VB: InputSource
    qualifiedName:
      CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource
      VB: Timba.Packages.Games.PlayerControllerModule.InputSource
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.PlayerControllerModule
    source:
      id: InputSource
      path: ''
      startLine: 28780
    syntax:
      content:
        CSharp: 'public class InputSource : ScriptableObject'
        VB: >-
          Public Class InputSource

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.right
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputSource.right
      language: CSharp
      name:
        CSharp: right
        VB: right
      nameWithType:
        CSharp: InputSource.right
        VB: InputSource.right
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.right
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.right
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: right
        path: ''
        startLine: 28783
      syntax:
        content:
          CSharp: public KeyCode[] right
          VB: Public right As KeyCode()
        return:
          type: Global.KeyCode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.left
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputSource.left
      language: CSharp
      name:
        CSharp: left
        VB: left
      nameWithType:
        CSharp: InputSource.left
        VB: InputSource.left
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.left
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.left
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: left
        path: ''
        startLine: 28784
      syntax:
        content:
          CSharp: public KeyCode[] left
          VB: Public left As KeyCode()
        return:
          type: Global.KeyCode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.up
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputSource.up
      language: CSharp
      name:
        CSharp: up
        VB: up
      nameWithType:
        CSharp: InputSource.up
        VB: InputSource.up
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.up
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: up
        path: ''
        startLine: 28785
      syntax:
        content:
          CSharp: public KeyCode[] up
          VB: Public up As KeyCode()
        return:
          type: Global.KeyCode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.down
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputSource.down
      language: CSharp
      name:
        CSharp: down
        VB: down
      nameWithType:
        CSharp: InputSource.down
        VB: InputSource.down
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.down
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: down
        path: ''
        startLine: 28786
      syntax:
        content:
          CSharp: public KeyCode[] down
          VB: Public down As KeyCode()
        return:
          type: Global.KeyCode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.interact
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputSource.interact
      language: CSharp
      name:
        CSharp: interact
        VB: interact
      nameWithType:
        CSharp: InputSource.interact
        VB: InputSource.interact
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.interact
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.interact
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: interact
        path: ''
        startLine: 28787
      syntax:
        content:
          CSharp: public KeyCode[] interact
          VB: Public interact As KeyCode()
        return:
          type: Global.KeyCode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue(KeyCode[],KeyCode[])
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue(KeyCode[],KeyCode[])
      language: CSharp
      name:
        CSharp: SetMoveValue(KeyCode[], KeyCode[])
        VB: SetMoveValue(KeyCode(), KeyCode())
      nameWithType:
        CSharp: InputSource.SetMoveValue(KeyCode[], KeyCode[])
        VB: InputSource.SetMoveValue(KeyCode(), KeyCode())
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue(KeyCode[], KeyCode[])
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue(KeyCode(), KeyCode())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: SetMoveValue
        path: ''
        startLine: 28790
      syntax:
        content:
          CSharp: public float SetMoveValue(KeyCode[] aSet, KeyCode[] bSet)
          VB: Public Function SetMoveValue(aSet As KeyCode(), bSet As KeyCode()) As Single
        parameters:
        - id: aSet
          type: Global.KeyCode[]
        - id: bSet
          type: Global.KeyCode[]
        return:
          type: System.Single
      overload: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue
      language: CSharp
      name:
        CSharp: SetInteractValue()
        VB: SetInteractValue()
      nameWithType:
        CSharp: InputSource.SetInteractValue()
        VB: InputSource.SetInteractValue()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue()
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: SetInteractValue
        path: ''
        startLine: 28810
      syntax:
        content:
          CSharp: public bool SetInteractValue()
          VB: Public Function SetInteractValue As Boolean
        return:
          type: System.Boolean
      overload: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    commentId: T:Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    language: CSharp
    name:
      CSharp: IInputHandleable
      VB: IInputHandleable
    nameWithType:
      CSharp: IInputHandleable
      VB: IInputHandleable
    qualifiedName:
      CSharp: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
      VB: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.PlayerControllerModule
    source:
      id: IInputHandleable
      path: ''
      startLine: 28823
    syntax:
      content:
        CSharp: public interface IInputHandleable
        VB: Public Interface IInputHandleable
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: IInputHandleable.Init()
        VB: IInputHandleable.Init()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init()
        VB: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: Init
        path: ''
        startLine: 28825
      syntax:
        content:
          CSharp: void Init()
          VB: Sub Init
      overload: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      language: CSharp
      name:
        CSharp: GetHorizontalInput()
        VB: GetHorizontalInput()
      nameWithType:
        CSharp: IInputHandleable.GetHorizontalInput()
        VB: IInputHandleable.GetHorizontalInput()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput()
        VB: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: GetHorizontalInput
        path: ''
        startLine: 28827
      syntax:
        content:
          CSharp: float GetHorizontalInput()
          VB: Function GetHorizontalInput As Single
        return:
          type: System.Single
      overload: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      language: CSharp
      name:
        CSharp: GetVerticalInput()
        VB: GetVerticalInput()
      nameWithType:
        CSharp: IInputHandleable.GetVerticalInput()
        VB: IInputHandleable.GetVerticalInput()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput()
        VB: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: GetVerticalInput
        path: ''
        startLine: 28829
      syntax:
        content:
          CSharp: float GetVerticalInput()
          VB: Function GetVerticalInput As Single
        return:
          type: System.Single
      overload: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Packages.Games.PlayerControllerModule.InputHandler
    commentId: T:Timba.Packages.Games.PlayerControllerModule.InputHandler
    language: CSharp
    name:
      CSharp: InputHandler
      VB: InputHandler
    nameWithType:
      CSharp: InputHandler
      VB: InputHandler
    qualifiedName:
      CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler
      VB: Timba.Packages.Games.PlayerControllerModule.InputHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.PlayerControllerModule
    source:
      id: InputHandler
      path: ''
      startLine: 28839
    syntax:
      content:
        CSharp: 'public class InputHandler : MonoBehaviour, IInputHandleable'
        VB: >-
          Public Class InputHandler

              Inherits MonoBehaviour

              Implements IInputHandleable
    inheritance:
    - System.Object
    implements:
    - Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.keyBindings
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputHandler.keyBindings
      language: CSharp
      name:
        CSharp: keyBindings
        VB: keyBindings
      nameWithType:
        CSharp: InputHandler.keyBindings
        VB: InputHandler.keyBindings
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler.keyBindings
        VB: Timba.Packages.Games.PlayerControllerModule.InputHandler.keyBindings
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: keyBindings
        path: ''
        startLine: 28841
      syntax:
        content:
          CSharp: public InputSource keyBindings
          VB: Public keyBindings As InputSource
        return:
          type: Timba.Packages.Games.PlayerControllerModule.InputSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputHandler.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: InputHandler.Init()
        VB: InputHandler.Init()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init()
        VB: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: Init
        path: ''
        startLine: 28843
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init*
      implements:
      - Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput
      language: CSharp
      name:
        CSharp: GetHorizontalInput()
        VB: GetHorizontalInput()
      nameWithType:
        CSharp: InputHandler.GetHorizontalInput()
        VB: InputHandler.GetHorizontalInput()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput()
        VB: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: GetHorizontalInput
        path: ''
        startLine: 28848
      syntax:
        content:
          CSharp: public float GetHorizontalInput()
          VB: Public Function GetHorizontalInput As Single
        return:
          type: System.Single
      overload: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput*
      implements:
      - Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput
      language: CSharp
      name:
        CSharp: GetVerticalInput()
        VB: GetVerticalInput()
      nameWithType:
        CSharp: InputHandler.GetVerticalInput()
        VB: InputHandler.GetVerticalInput()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput()
        VB: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: GetVerticalInput
        path: ''
        startLine: 28853
      syntax:
        content:
          CSharp: public float GetVerticalInput()
          VB: Public Function GetVerticalInput As Single
        return:
          type: System.Single
      overload: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput*
      implements:
      - Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput
      language: CSharp
      name:
        CSharp: GetInteractableInput()
        VB: GetInteractableInput()
      nameWithType:
        CSharp: InputHandler.GetInteractableInput()
        VB: InputHandler.GetInteractableInput()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput()
        VB: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: GetInteractableInput
        path: ''
        startLine: 28859
      syntax:
        content:
          CSharp: public bool GetInteractableInput()
          VB: Public Function GetInteractableInput As Boolean
        return:
          type: System.Boolean
      overload: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Packages.Games.PlayerControllerModule.Core
  commentId: N:Timba.Packages.Games.PlayerControllerModule.Core
  language: CSharp
  name:
    CSharp: Timba.Packages.Games.PlayerControllerModule.Core
    VB: Timba.Packages.Games.PlayerControllerModule.Core
  nameWithType:
    CSharp: Timba.Packages.Games.PlayerControllerModule.Core
    VB: Timba.Packages.Games.PlayerControllerModule.Core
  qualifiedName:
    CSharp: Timba.Packages.Games.PlayerControllerModule.Core
    VB: Timba.Packages.Games.PlayerControllerModule.Core
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
    commentId: T:Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
    language: CSharp
    name:
      CSharp: ThirdPersonCoreController
      VB: ThirdPersonCoreController
    nameWithType:
      CSharp: ThirdPersonCoreController
      VB: ThirdPersonCoreController
    qualifiedName:
      CSharp: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
      VB: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.PlayerControllerModule.Core
    source:
      id: ThirdPersonCoreController
      path: ''
      startLine: 28768
    syntax:
      content:
        CSharp: 'public abstract class ThirdPersonCoreController : MonoBehaviour'
        VB: >-
          Public MustInherit Class ThirdPersonCoreController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.inputHandler
      commentId: F:Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.inputHandler
      language: CSharp
      name:
        CSharp: inputHandler
        VB: inputHandler
      nameWithType:
        CSharp: ThirdPersonCoreController.inputHandler
        VB: ThirdPersonCoreController.inputHandler
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.inputHandler
        VB: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.inputHandler
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule.Core
      source:
        id: inputHandler
        path: ''
        startLine: 28770
      syntax:
        content:
          CSharp: protected IInputHandleable inputHandler
          VB: Protected inputHandler As IInputHandleable
        return:
          type: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init``1(``0)
      commentId: M:Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init``1(``0)
      language: CSharp
      name:
        CSharp: Init<T>(T)
        VB: Init(Of T)(T)
      nameWithType:
        CSharp: ThirdPersonCoreController.Init<T>(T)
        VB: ThirdPersonCoreController.Init(Of T)(T)
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init<T>(T)
        VB: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule.Core
      source:
        id: Init
        path: ''
        startLine: 28772
      syntax:
        content:
          CSharp: public abstract void Init<T>(T data)
          VB: Public MustOverride Sub Init(Of T)(data As T)
        parameters:
        - id: data
          type: '{T}'
        typeParameters:
        - id: T
      overload: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
- id: Timba.Packages.Games.ChatModule.Controller
  commentId: N:Timba.Packages.Games.ChatModule.Controller
  language: CSharp
  name:
    CSharp: Timba.Packages.Games.ChatModule.Controller
    VB: Timba.Packages.Games.ChatModule.Controller
  nameWithType:
    CSharp: Timba.Packages.Games.ChatModule.Controller
    VB: Timba.Packages.Games.ChatModule.Controller
  qualifiedName:
    CSharp: Timba.Packages.Games.ChatModule.Controller
    VB: Timba.Packages.Games.ChatModule.Controller
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Packages.Games.ChatModule.Controller.LobbyChatController
    commentId: T:Timba.Packages.Games.ChatModule.Controller.LobbyChatController
    language: CSharp
    name:
      CSharp: LobbyChatController
      VB: LobbyChatController
    nameWithType:
      CSharp: LobbyChatController
      VB: LobbyChatController
    qualifiedName:
      CSharp: Timba.Packages.Games.ChatModule.Controller.LobbyChatController
      VB: Timba.Packages.Games.ChatModule.Controller.LobbyChatController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.ChatModule.Controller
    source:
      id: LobbyChatController
      path: ''
      startLine: 34732
    syntax:
      content:
        CSharp: 'public class LobbyChatController : LobbyChatCoreController'
        VB: >-
          Public Class LobbyChatController

              Inherits LobbyChatCoreController
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init``1(``0)
      commentId: M:Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init``1(``0)
      language: CSharp
      name:
        CSharp: Init<T>(T)
        VB: Init(Of T)(T)
      nameWithType:
        CSharp: LobbyChatController.Init<T>(T)
        VB: LobbyChatController.Init(Of T)(T)
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init<T>(T)
        VB: Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Controller
      source:
        id: Init
        path: ''
        startLine: 34741
      syntax:
        content:
          CSharp: public override void Init<T>(T data)
          VB: Public Overrides Sub Init(Of T)(data As T)
        parameters:
        - id: data
          type: '{T}'
        typeParameters:
        - id: T
      overload: Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: Timba.Packages.Games.ChatModule.Core
  commentId: N:Timba.Packages.Games.ChatModule.Core
  language: CSharp
  name:
    CSharp: Timba.Packages.Games.ChatModule.Core
    VB: Timba.Packages.Games.ChatModule.Core
  nameWithType:
    CSharp: Timba.Packages.Games.ChatModule.Core
    VB: Timba.Packages.Games.ChatModule.Core
  qualifiedName:
    CSharp: Timba.Packages.Games.ChatModule.Core
    VB: Timba.Packages.Games.ChatModule.Core
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable
    commentId: T:Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable
    language: CSharp
    name:
      CSharp: ILobbyChatViewable
      VB: ILobbyChatViewable
    nameWithType:
      CSharp: ILobbyChatViewable
      VB: ILobbyChatViewable
    qualifiedName:
      CSharp: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable
      VB: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.ChatModule.Core
    source:
      id: ILobbyChatViewable
      path: ''
      startLine: 34791
    syntax:
      content:
        CSharp: public interface ILobbyChatViewable
        VB: Public Interface ILobbyChatViewable
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage
      commentId: P:Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage
      language: CSharp
      name:
        CSharp: OnSendMessage
        VB: OnSendMessage
      nameWithType:
        CSharp: ILobbyChatViewable.OnSendMessage
        VB: ILobbyChatViewable.OnSendMessage
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage
        VB: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Core
      source:
        id: OnSendMessage
        path: ''
        startLine: 34793
      syntax:
        content:
          CSharp: Action<string> OnSendMessage { get; set; }
          VB: Property OnSendMessage As Action(Of String)
        parameters: []
        return:
          type: Global.Action{System.String}
      overload: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init
      commentId: M:Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: ILobbyChatViewable.Init()
        VB: ILobbyChatViewable.Init()
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init()
        VB: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Core
      source:
        id: Init
        path: ''
        startLine: 34794
      syntax:
        content:
          CSharp: void Init()
          VB: Sub Init
      overload: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage(MessageDto)
      commentId: M:Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage(MessageDto)
      language: CSharp
      name:
        CSharp: ShowMessage(MessageDto)
        VB: ShowMessage(MessageDto)
      nameWithType:
        CSharp: ILobbyChatViewable.ShowMessage(MessageDto)
        VB: ILobbyChatViewable.ShowMessage(MessageDto)
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage(MessageDto)
        VB: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage(MessageDto)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Core
      source:
        id: ShowMessage
        path: ''
        startLine: 34795
      syntax:
        content:
          CSharp: void ShowMessage(MessageDto MessageDto)
          VB: Sub ShowMessage(MessageDto As MessageDto)
        parameters:
        - id: MessageDto
          type: Global.MessageDto
      overload: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController
    commentId: T:Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController
    language: CSharp
    name:
      CSharp: LobbyChatCoreController
      VB: LobbyChatCoreController
    nameWithType:
      CSharp: LobbyChatCoreController
      VB: LobbyChatCoreController
    qualifiedName:
      CSharp: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController
      VB: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.ChatModule.Core
    source:
      id: LobbyChatCoreController
      path: ''
      startLine: 34803
    syntax:
      content:
        CSharp: 'public abstract class LobbyChatCoreController : MonoBehaviour'
        VB: >-
          Public MustInherit Class LobbyChatCoreController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.chatView
      commentId: F:Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.chatView
      language: CSharp
      name:
        CSharp: chatView
        VB: chatView
      nameWithType:
        CSharp: LobbyChatCoreController.chatView
        VB: LobbyChatCoreController.chatView
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.chatView
        VB: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.chatView
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Core
      source:
        id: chatView
        path: ''
        startLine: 34805
      syntax:
        content:
          CSharp: protected ILobbyChatViewable chatView
          VB: Protected chatView As ILobbyChatViewable
        return:
          type: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init``1(``0)
      commentId: M:Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init``1(``0)
      language: CSharp
      name:
        CSharp: Init<T>(T)
        VB: Init(Of T)(T)
      nameWithType:
        CSharp: LobbyChatCoreController.Init<T>(T)
        VB: LobbyChatCoreController.Init(Of T)(T)
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init<T>(T)
        VB: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Core
      source:
        id: Init
        path: ''
        startLine: 34807
      syntax:
        content:
          CSharp: public abstract void Init<T>(T data)
          VB: Public MustOverride Sub Init(Of T)(data As T)
        parameters:
        - id: data
          type: '{T}'
        typeParameters:
        - id: T
      overload: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
- id: Timba.Packages.Games.ChatModule.Model
  commentId: N:Timba.Packages.Games.ChatModule.Model
  language: CSharp
  name:
    CSharp: Timba.Packages.Games.ChatModule.Model
    VB: Timba.Packages.Games.ChatModule.Model
  nameWithType:
    CSharp: Timba.Packages.Games.ChatModule.Model
    VB: Timba.Packages.Games.ChatModule.Model
  qualifiedName:
    CSharp: Timba.Packages.Games.ChatModule.Model
    VB: Timba.Packages.Games.ChatModule.Model
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Packages.Games.ChatModule.Model.LobbyChatModel
    commentId: T:Timba.Packages.Games.ChatModule.Model.LobbyChatModel
    language: CSharp
    name:
      CSharp: LobbyChatModel
      VB: LobbyChatModel
    nameWithType:
      CSharp: LobbyChatModel
      VB: LobbyChatModel
    qualifiedName:
      CSharp: Timba.Packages.Games.ChatModule.Model.LobbyChatModel
      VB: Timba.Packages.Games.ChatModule.Model.LobbyChatModel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.ChatModule.Model
    source:
      id: LobbyChatModel
      path: ''
      startLine: 34816
    syntax:
      content:
        CSharp: public static class LobbyChatModel
        VB: Public Module LobbyChatModel
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.OnChatMessage
      commentId: F:Timba.Packages.Games.ChatModule.Model.LobbyChatModel.OnChatMessage
      language: CSharp
      name:
        CSharp: OnChatMessage
        VB: OnChatMessage
      nameWithType:
        CSharp: LobbyChatModel.OnChatMessage
        VB: LobbyChatModel.OnChatMessage
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.OnChatMessage
        VB: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.OnChatMessage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Model
      source:
        id: OnChatMessage
        path: ''
        startLine: 34820
      syntax:
        content:
          CSharp: public static Action<MessageDto> OnChatMessage
          VB: Public Shared OnChatMessage As Action(Of MessageDto)
        return:
          type: Global.Action{MessageDto}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage(MessagePayload,Action{System.Boolean})
      commentId: M:Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage(MessagePayload,Action{System.Boolean})
      language: CSharp
      name:
        CSharp: CMDSendMessage(MessagePayload, Action<Boolean>)
        VB: CMDSendMessage(MessagePayload, Action(Of Boolean))
      nameWithType:
        CSharp: LobbyChatModel.CMDSendMessage(MessagePayload, Action<Boolean>)
        VB: LobbyChatModel.CMDSendMessage(MessagePayload, Action(Of Boolean))
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage(MessagePayload, Action<System.Boolean>)
        VB: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage(MessagePayload, Action(Of System.Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Model
      source:
        id: CMDSendMessage
        path: ''
        startLine: 34821
      syntax:
        content:
          CSharp: public static void CMDSendMessage(MessagePayload message, Action<bool> callback)
          VB: Public Shared Sub CMDSendMessage(message As MessagePayload, callback As Action(Of Boolean))
        parameters:
        - id: message
          type: Global.MessagePayload
        - id: callback
          type: Global.Action{System.Boolean}
      overload: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage(System.String,System.String)
      commentId: M:Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage(System.String,System.String)
      language: CSharp
      name:
        CSharp: TestMessage(String, String)
        VB: TestMessage(String, String)
      nameWithType:
        CSharp: LobbyChatModel.TestMessage(String, String)
        VB: LobbyChatModel.TestMessage(String, String)
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage(System.String, System.String)
        VB: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Model
      source:
        id: TestMessage
        path: ''
        startLine: 34833
      syntax:
        content:
          CSharp: public static void TestMessage(string _message, string _nickname)
          VB: Public Shared Sub TestMessage(_message As String, _nickname As String)
        parameters:
        - id: _message
          type: System.String
        - id: _nickname
          type: System.String
      overload: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Timba.Packages.Games.ChatModule.Structs
  commentId: N:Timba.Packages.Games.ChatModule.Structs
  language: CSharp
  name:
    CSharp: Timba.Packages.Games.ChatModule.Structs
    VB: Timba.Packages.Games.ChatModule.Structs
  nameWithType:
    CSharp: Timba.Packages.Games.ChatModule.Structs
    VB: Timba.Packages.Games.ChatModule.Structs
  qualifiedName:
    CSharp: Timba.Packages.Games.ChatModule.Structs
    VB: Timba.Packages.Games.ChatModule.Structs
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Packages.Games.ChatModule.Structs.MessageDto
    commentId: T:Timba.Packages.Games.ChatModule.Structs.MessageDto
    language: CSharp
    name:
      CSharp: MessageDto
      VB: MessageDto
    nameWithType:
      CSharp: MessageDto
      VB: MessageDto
    qualifiedName:
      CSharp: Timba.Packages.Games.ChatModule.Structs.MessageDto
      VB: Timba.Packages.Games.ChatModule.Structs.MessageDto
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.ChatModule.Structs
    source:
      id: MessageDto
      path: ''
      startLine: 34845
    syntax:
      content:
        CSharp: public struct MessageDto
        VB: Public Structure MessageDto
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Timba.Packages.Games.ChatModule.Structs.MessageDto.nickname
      commentId: F:Timba.Packages.Games.ChatModule.Structs.MessageDto.nickname
      language: CSharp
      name:
        CSharp: nickname
        VB: nickname
      nameWithType:
        CSharp: MessageDto.nickname
        VB: MessageDto.nickname
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Structs.MessageDto.nickname
        VB: Timba.Packages.Games.ChatModule.Structs.MessageDto.nickname
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Structs
      source:
        id: nickname
        path: ''
        startLine: 34847
      syntax:
        content:
          CSharp: public string nickname
          VB: Public nickname As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.ChatModule.Structs.MessageDto.message
      commentId: F:Timba.Packages.Games.ChatModule.Structs.MessageDto.message
      language: CSharp
      name:
        CSharp: message
        VB: message
      nameWithType:
        CSharp: MessageDto.message
        VB: MessageDto.message
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Structs.MessageDto.message
        VB: Timba.Packages.Games.ChatModule.Structs.MessageDto.message
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Structs
      source:
        id: message
        path: ''
        startLine: 34848
      syntax:
        content:
          CSharp: public string message
          VB: Public message As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Packages.Games.ChatModule.Structs.MessagePayload
    commentId: T:Timba.Packages.Games.ChatModule.Structs.MessagePayload
    language: CSharp
    name:
      CSharp: MessagePayload
      VB: MessagePayload
    nameWithType:
      CSharp: MessagePayload
      VB: MessagePayload
    qualifiedName:
      CSharp: Timba.Packages.Games.ChatModule.Structs.MessagePayload
      VB: Timba.Packages.Games.ChatModule.Structs.MessagePayload
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.ChatModule.Structs
    source:
      id: MessagePayload
      path: ''
      startLine: 34855
    syntax:
      content:
        CSharp: public struct MessagePayload
        VB: Public Structure MessagePayload
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Timba.Packages.Games.ChatModule.Structs.MessagePayload.messageString
      commentId: F:Timba.Packages.Games.ChatModule.Structs.MessagePayload.messageString
      language: CSharp
      name:
        CSharp: messageString
        VB: messageString
      nameWithType:
        CSharp: MessagePayload.messageString
        VB: MessagePayload.messageString
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Structs.MessagePayload.messageString
        VB: Timba.Packages.Games.ChatModule.Structs.MessagePayload.messageString
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Structs
      source:
        id: messageString
        path: ''
        startLine: 34857
      syntax:
        content:
          CSharp: public string messageString
          VB: Public messageString As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.ChatModule.Structs.MessagePayload.userId
      commentId: F:Timba.Packages.Games.ChatModule.Structs.MessagePayload.userId
      language: CSharp
      name:
        CSharp: userId
        VB: userId
      nameWithType:
        CSharp: MessagePayload.userId
        VB: MessagePayload.userId
      qualifiedName:
        CSharp: Timba.Packages.Games.ChatModule.Structs.MessagePayload.userId
        VB: Timba.Packages.Games.ChatModule.Structs.MessagePayload.userId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.ChatModule.Structs
      source:
        id: userId
        path: ''
        startLine: 34858
      syntax:
        content:
          CSharp: public string userId
          VB: Public userId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Patterns.ServiceLocator
  commentId: N:Timba.Patterns.ServiceLocator
  language: CSharp
  name:
    CSharp: Timba.Patterns.ServiceLocator
    VB: Timba.Patterns.ServiceLocator
  nameWithType:
    CSharp: Timba.Patterns.ServiceLocator
    VB: Timba.Patterns.ServiceLocator
  qualifiedName:
    CSharp: Timba.Patterns.ServiceLocator
    VB: Timba.Patterns.ServiceLocator
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1
    commentId: T:Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1
    language: CSharp
    name:
      CSharp: SingleInstanceMonoBehaviour<T>
      VB: SingleInstanceMonoBehaviour(Of T)
    nameWithType:
      CSharp: SingleInstanceMonoBehaviour<T>
      VB: SingleInstanceMonoBehaviour(Of T)
    qualifiedName:
      CSharp: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour<T>
      VB: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Patterns.ServiceLocator
    source:
      id: SingleInstanceMonoBehaviour
      path: ''
      startLine: 35157
    syntax:
      content:
        CSharp: 'public class SingleInstanceMonoBehaviour<T> : MonoBehaviour where T : SingleInstanceMonoBehaviour<T>'
        VB: >-
          Public Class SingleInstanceMonoBehaviour(Of T As SingleInstanceMonoBehaviour(Of T))

              Inherits MonoBehaviour
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Awake
      commentId: M:Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: SingleInstanceMonoBehaviour<T>.Awake()
        VB: SingleInstanceMonoBehaviour(Of T).Awake()
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour<T>.Awake()
        VB: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour(Of T).Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: Awake
        path: ''
        startLine: 35161
      syntax:
        content:
          CSharp: public virtual void Awake()
          VB: Public Overridable Sub Awake
      overload: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Awake*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.initialized
      commentId: F:Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.initialized
      language: CSharp
      name:
        CSharp: initialized
        VB: initialized
      nameWithType:
        CSharp: SingleInstanceMonoBehaviour<T>.initialized
        VB: SingleInstanceMonoBehaviour(Of T).initialized
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour<T>.initialized
        VB: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour(Of T).initialized
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: initialized
        path: ''
        startLine: 35174
      syntax:
        content:
          CSharp: protected bool initialized
          VB: Protected initialized As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Initialize
      commentId: M:Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: SingleInstanceMonoBehaviour<T>.Initialize()
        VB: SingleInstanceMonoBehaviour(Of T).Initialize()
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour<T>.Initialize()
        VB: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour(Of T).Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: Initialize
        path: ''
        startLine: 35176
      syntax:
        content:
          CSharp: protected virtual void Initialize()
          VB: Protected Overridable Sub Initialize
      overload: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Initialize*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1
    commentId: T:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1
    language: CSharp
    name:
      CSharp: SingletonMonoBehaviour<T>
      VB: SingletonMonoBehaviour(Of T)
    nameWithType:
      CSharp: SingletonMonoBehaviour<T>
      VB: SingletonMonoBehaviour(Of T)
    qualifiedName:
      CSharp: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>
      VB: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Patterns.ServiceLocator
    source:
      id: SingletonMonoBehaviour
      path: ''
      startLine: 35192
    summary: "\nAvoid using singletons. \nIf you need a class that guarantees a single instance consider using SingleInstanceMonoBehaviour or simmilar\nIf you must have a singleton, consider registering it as a service instead using ServiceLocator\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SingletonMonoBehaviour<T> : MonoBehaviour where T : SingletonMonoBehaviour<T>'
        VB: >-
          Public Class SingletonMonoBehaviour(Of T As SingletonMonoBehaviour(Of T))

              Inherits MonoBehaviour
      typeParameters:
      - id: T
        description: ''
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance
      commentId: P:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: SingletonMonoBehaviour<T>.Instance
        VB: SingletonMonoBehaviour(Of T).Instance
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.Instance
        VB: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: Instance
        path: ''
        startLine: 35196
      syntax:
        content:
          CSharp: public static T Instance { get; }
          VB: Public Shared ReadOnly Property Instance As T
        parameters: []
        return:
          type: '{T}'
      overload: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake
      commentId: M:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: SingletonMonoBehaviour<T>.Awake()
        VB: SingletonMonoBehaviour(Of T).Awake()
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.Awake()
        VB: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: Awake
        path: ''
        startLine: 35226
      syntax:
        content:
          CSharp: public virtual void Awake()
          VB: Public Overridable Sub Awake
      overload: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.initialized
      commentId: F:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.initialized
      language: CSharp
      name:
        CSharp: initialized
        VB: initialized
      nameWithType:
        CSharp: SingletonMonoBehaviour<T>.initialized
        VB: SingletonMonoBehaviour(Of T).initialized
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.initialized
        VB: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).initialized
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: initialized
        path: ''
        startLine: 35240
      syntax:
        content:
          CSharp: protected bool initialized
          VB: Protected initialized As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize
      commentId: M:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: SingletonMonoBehaviour<T>.Initialize()
        VB: SingletonMonoBehaviour(Of T).Initialize()
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.Initialize()
        VB: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: Initialize
        path: ''
        startLine: 35242
      syntax:
        content:
          CSharp: protected virtual void Initialize()
          VB: Protected Overridable Sub Initialize
      overload: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: Timba.Patterns.ServiceLocator.IService
    commentId: T:Timba.Patterns.ServiceLocator.IService
    language: CSharp
    name:
      CSharp: IService
      VB: IService
    nameWithType:
      CSharp: IService
      VB: IService
    qualifiedName:
      CSharp: Timba.Patterns.ServiceLocator.IService
      VB: Timba.Patterns.ServiceLocator.IService
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Patterns.ServiceLocator
    source:
      id: IService
      path: ''
      startLine: 35252
    syntax:
      content:
        CSharp: public interface IService
        VB: Public Interface IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Patterns.ServiceLocator.IService.gameObject
      commentId: P:Timba.Patterns.ServiceLocator.IService.gameObject
      language: CSharp
      name:
        CSharp: gameObject
        VB: gameObject
      nameWithType:
        CSharp: IService.gameObject
        VB: IService.gameObject
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.IService.gameObject
        VB: Timba.Patterns.ServiceLocator.IService.gameObject
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: gameObject
        path: ''
        startLine: 35254
      syntax:
        content:
          CSharp: GameObject gameObject { get; }
          VB: ReadOnly Property gameObject As GameObject
        parameters: []
        return:
          type: Global.GameObject
      overload: Timba.Patterns.ServiceLocator.IService.gameObject*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Timba.Patterns.ServiceLocator.IService.IsReady
      commentId: M:Timba.Patterns.ServiceLocator.IService.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: IService.IsReady()
        VB: IService.IsReady()
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.IService.IsReady()
        VB: Timba.Patterns.ServiceLocator.IService.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: IsReady
        path: ''
        startLine: 35255
      syntax:
        content:
          CSharp: bool IsReady()
          VB: Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Patterns.ServiceLocator.IService.IsReady*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Patterns.ServiceLocator.ServiceLocator
    commentId: T:Timba.Patterns.ServiceLocator.ServiceLocator
    language: CSharp
    name:
      CSharp: ServiceLocator
      VB: ServiceLocator
    nameWithType:
      CSharp: ServiceLocator
      VB: ServiceLocator
    qualifiedName:
      CSharp: Timba.Patterns.ServiceLocator.ServiceLocator
      VB: Timba.Patterns.ServiceLocator.ServiceLocator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Patterns.ServiceLocator
    source:
      id: ServiceLocator
      path: ''
      startLine: 35266
    syntax:
      content:
        CSharp: 'public class ServiceLocator : SingletonMonoBehaviour<ServiceLocator>'
        VB: >-
          Public Class ServiceLocator

              Inherits SingletonMonoBehaviour(Of ServiceLocator)
    inheritance:
    - System.Object
    - Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}
    inheritedMembers:
    - Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.Instance
    - Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.Awake
    - Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.initialized
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Patterns.ServiceLocator.ServiceLocator.config
      commentId: F:Timba.Patterns.ServiceLocator.ServiceLocator.config
      language: CSharp
      name:
        CSharp: config
        VB: config
      nameWithType:
        CSharp: ServiceLocator.config
        VB: ServiceLocator.config
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.ServiceLocator.config
        VB: Timba.Patterns.ServiceLocator.ServiceLocator.config
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: config
        path: ''
        startLine: 35268
      syntax:
        content:
          CSharp: public ServiceLocatorConfig config
          VB: Public config As ServiceLocatorConfig
        return:
          type: Timba.Patterns.ServiceLocator.ServiceLocatorConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Patterns.ServiceLocator.ServiceLocator.Initialize
      commentId: M:Timba.Patterns.ServiceLocator.ServiceLocator.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: ServiceLocator.Initialize()
        VB: ServiceLocator.Initialize()
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.ServiceLocator.Initialize()
        VB: Timba.Patterns.ServiceLocator.ServiceLocator.Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: Initialize
        path: ''
        startLine: 35271
      syntax:
        content:
          CSharp: protected override void Initialize()
          VB: Protected Overrides Sub Initialize
      overload: Timba.Patterns.ServiceLocator.ServiceLocator.Initialize*
      overridden: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.Initialize
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: Timba.Patterns.ServiceLocator.ServiceLocator.GetService``1
      commentId: M:Timba.Patterns.ServiceLocator.ServiceLocator.GetService``1
      language: CSharp
      name:
        CSharp: GetService<T>()
        VB: GetService(Of T)()
      nameWithType:
        CSharp: ServiceLocator.GetService<T>()
        VB: ServiceLocator.GetService(Of T)()
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.ServiceLocator.GetService<T>()
        VB: Timba.Patterns.ServiceLocator.ServiceLocator.GetService(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: GetService
        path: ''
        startLine: 35290
      summary: "\nFinds a service of type T. The search is done in the following order:\n1 - Look for a registered service in the Service Locator\n2 - Find an existing game object of type T in the scene\n3 - Find a default service of type T in ServiceLocatorConfig\nThis call can be slow. Always keep a local reference of the service you find\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public T GetService<T>()

                where T : IService
          VB: Public Function GetService(Of T As IService) As T
        typeParameters:
        - id: T
          description: Type of the service to find
        return:
          type: '{T}'
          description: ''
      overload: Timba.Patterns.ServiceLocator.ServiceLocator.GetService*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Patterns.ServiceLocator.ServiceLocatorConfig
    commentId: T:Timba.Patterns.ServiceLocator.ServiceLocatorConfig
    language: CSharp
    name:
      CSharp: ServiceLocatorConfig
      VB: ServiceLocatorConfig
    nameWithType:
      CSharp: ServiceLocatorConfig
      VB: ServiceLocatorConfig
    qualifiedName:
      CSharp: Timba.Patterns.ServiceLocator.ServiceLocatorConfig
      VB: Timba.Patterns.ServiceLocator.ServiceLocatorConfig
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Patterns.ServiceLocator
    source:
      id: ServiceLocatorConfig
      path: ''
      startLine: 35333
    syntax:
      content:
        CSharp: 'public class ServiceLocatorConfig : ScriptableObject'
        VB: >-
          Public Class ServiceLocatorConfig

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Patterns.ServiceLocator.ServiceLocatorConfig.defaultServicesPrefabs
      commentId: F:Timba.Patterns.ServiceLocator.ServiceLocatorConfig.defaultServicesPrefabs
      language: CSharp
      name:
        CSharp: defaultServicesPrefabs
        VB: defaultServicesPrefabs
      nameWithType:
        CSharp: ServiceLocatorConfig.defaultServicesPrefabs
        VB: ServiceLocatorConfig.defaultServicesPrefabs
      qualifiedName:
        CSharp: Timba.Patterns.ServiceLocator.ServiceLocatorConfig.defaultServicesPrefabs
        VB: Timba.Patterns.ServiceLocator.ServiceLocatorConfig.defaultServicesPrefabs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Patterns.ServiceLocator
      source:
        id: defaultServicesPrefabs
        path: ''
        startLine: 35336
      syntax:
        content:
          CSharp: public GameObject[] defaultServicesPrefabs
          VB: Public defaultServicesPrefabs As GameObject()
        return:
          type: Global.GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  Global.Texture2D:
    name:
      CSharp:
      - id: Global.Texture2D
        name: Texture2D
        nameWithType: Texture2D
        qualifiedName: Texture2D
        isExternal: true
      VB:
      - id: Global.Texture2D
        name: Texture2D
        nameWithType: Texture2D
        qualifiedName: Texture2D
        isExternal: true
    isDefinition: true
  Global.AtlasTextures:
    name:
      CSharp:
      - id: Global.AtlasTextures
        name: AtlasTextures
        nameWithType: AtlasTextures
        qualifiedName: AtlasTextures
      VB:
      - id: Global.AtlasTextures
        name: AtlasTextures
        nameWithType: AtlasTextures
        qualifiedName: AtlasTextures
    isDefinition: true
    commentId: T:Global.AtlasTextures
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{BodyStyle.BodyPartDressable}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BodyStyle.BodyPartDressable
        name: BodyStyle.BodyPartDressable
        nameWithType: BodyStyle.BodyPartDressable
        qualifiedName: BodyStyle.BodyPartDressable
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BodyStyle.BodyPartDressable
        name: BodyStyle.BodyPartDressable
        nameWithType: BodyStyle.BodyPartDressable
        qualifiedName: BodyStyle.BodyPartDressable
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BodyStyle.BodyPartDressable}
  Global.BodyStyle:
    name:
      CSharp:
      - id: Global.BodyStyle
        name: BodyStyle
        nameWithType: BodyStyle
        qualifiedName: BodyStyle
      VB:
      - id: Global.BodyStyle
        name: BodyStyle
        nameWithType: BodyStyle
        qualifiedName: BodyStyle
    isDefinition: true
    commentId: T:Global.BodyStyle
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Global.BodyStyle.BodyPartDressable.SelectObject*:
    name:
      CSharp:
      - id: Global.BodyStyle.BodyPartDressable.SelectObject*
        name: SelectObject
        nameWithType: BodyStyle.BodyPartDressable.SelectObject
        qualifiedName: BodyStyle.BodyPartDressable.SelectObject
      VB:
      - id: Global.BodyStyle.BodyPartDressable.SelectObject*
        name: SelectObject
        nameWithType: BodyStyle.BodyPartDressable.SelectObject
        qualifiedName: BodyStyle.BodyPartDressable.SelectObject
    isDefinition: true
    commentId: Overload:Global.BodyStyle.BodyPartDressable.SelectObject
  Global.BodyStyle.BodyPartDressable:
    name:
      CSharp:
      - id: Global.BodyStyle.BodyPartDressable
        name: BodyStyle.BodyPartDressable
        nameWithType: BodyStyle.BodyPartDressable
        qualifiedName: BodyStyle.BodyPartDressable
      VB:
      - id: Global.BodyStyle.BodyPartDressable
        name: BodyStyle.BodyPartDressable
        nameWithType: BodyStyle.BodyPartDressable
        qualifiedName: BodyStyle.BodyPartDressable
    isDefinition: true
    commentId: T:Global.BodyStyle.BodyPartDressable
  System.Collections.Generic.List{AtlasTextures}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.AtlasTextures
        name: AtlasTextures
        nameWithType: AtlasTextures
        qualifiedName: AtlasTextures
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.AtlasTextures
        name: AtlasTextures
        nameWithType: AtlasTextures
        qualifiedName: AtlasTextures
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{AtlasTextures}
  Global.MaterialReskin.InitReskin*:
    name:
      CSharp:
      - id: Global.MaterialReskin.InitReskin*
        name: InitReskin
        nameWithType: MaterialReskin.InitReskin
        qualifiedName: MaterialReskin.InitReskin
      VB:
      - id: Global.MaterialReskin.InitReskin*
        name: InitReskin
        nameWithType: MaterialReskin.InitReskin
        qualifiedName: MaterialReskin.InitReskin
    isDefinition: true
    commentId: Overload:Global.MaterialReskin.InitReskin
  Global.MaterialReskin.Init*:
    name:
      CSharp:
      - id: Global.MaterialReskin.Init*
        name: Init
        nameWithType: MaterialReskin.Init
        qualifiedName: MaterialReskin.Init
      VB:
      - id: Global.MaterialReskin.Init*
        name: Init
        nameWithType: MaterialReskin.Init
        qualifiedName: MaterialReskin.Init
    isDefinition: true
    commentId: Overload:Global.MaterialReskin.Init
  Global.MaterialReskin.ChangePart*:
    name:
      CSharp:
      - id: Global.MaterialReskin.ChangePart*
        name: ChangePart
        nameWithType: MaterialReskin.ChangePart
        qualifiedName: MaterialReskin.ChangePart
      VB:
      - id: Global.MaterialReskin.ChangePart*
        name: ChangePart
        nameWithType: MaterialReskin.ChangePart
        qualifiedName: MaterialReskin.ChangePart
    isDefinition: true
    commentId: Overload:Global.MaterialReskin.ChangePart
  Global.MaterialReskin.NormalMapToUnityFormat*:
    name:
      CSharp:
      - id: Global.MaterialReskin.NormalMapToUnityFormat*
        name: NormalMapToUnityFormat
        nameWithType: MaterialReskin.NormalMapToUnityFormat
        qualifiedName: MaterialReskin.NormalMapToUnityFormat
      VB:
      - id: Global.MaterialReskin.NormalMapToUnityFormat*
        name: NormalMapToUnityFormat
        nameWithType: MaterialReskin.NormalMapToUnityFormat
        qualifiedName: MaterialReskin.NormalMapToUnityFormat
    isDefinition: true
    commentId: Overload:Global.MaterialReskin.NormalMapToUnityFormat
  Global.MaterialReskin:
    name:
      CSharp:
      - id: Global.MaterialReskin
        name: MaterialReskin
        nameWithType: MaterialReskin
        qualifiedName: MaterialReskin
      VB:
      - id: Global.MaterialReskin
        name: MaterialReskin
        nameWithType: MaterialReskin
        qualifiedName: MaterialReskin
    isDefinition: true
    commentId: T:Global.MaterialReskin
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  System.Collections.Generic.List{MatAnimation}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MatAnimation
        name: MatAnimation
        nameWithType: MatAnimation
        qualifiedName: MatAnimation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MatAnimation
        name: MatAnimation
        nameWithType: MatAnimation
        qualifiedName: MatAnimation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{MatAnimation}
  System.Collections.Generic.List{Material}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Material}
  Global.BoneAnimationTracker.Update*:
    name:
      CSharp:
      - id: Global.BoneAnimationTracker.Update*
        name: Update
        nameWithType: BoneAnimationTracker.Update
        qualifiedName: BoneAnimationTracker.Update
      VB:
      - id: Global.BoneAnimationTracker.Update*
        name: Update
        nameWithType: BoneAnimationTracker.Update
        qualifiedName: BoneAnimationTracker.Update
    isDefinition: true
    commentId: Overload:Global.BoneAnimationTracker.Update
  Global.MatAnimation.AttachedEdge:
    name:
      CSharp:
      - id: Global.MatAnimation.AttachedEdge
        name: MatAnimation.AttachedEdge
        nameWithType: MatAnimation.AttachedEdge
        qualifiedName: MatAnimation.AttachedEdge
      VB:
      - id: Global.MatAnimation.AttachedEdge
        name: MatAnimation.AttachedEdge
        nameWithType: MatAnimation.AttachedEdge
        qualifiedName: MatAnimation.AttachedEdge
    isDefinition: true
    commentId: T:Global.MatAnimation.AttachedEdge
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Global.BoneAnimationTracker.VerifyAllMatAnimations*:
    name:
      CSharp:
      - id: Global.BoneAnimationTracker.VerifyAllMatAnimations*
        name: VerifyAllMatAnimations
        nameWithType: BoneAnimationTracker.VerifyAllMatAnimations
        qualifiedName: BoneAnimationTracker.VerifyAllMatAnimations
      VB:
      - id: Global.BoneAnimationTracker.VerifyAllMatAnimations*
        name: VerifyAllMatAnimations
        nameWithType: BoneAnimationTracker.VerifyAllMatAnimations
        qualifiedName: BoneAnimationTracker.VerifyAllMatAnimations
    isDefinition: true
    commentId: Overload:Global.BoneAnimationTracker.VerifyAllMatAnimations
  Global.BoneAnimationTracker:
    name:
      CSharp:
      - id: Global.BoneAnimationTracker
        name: BoneAnimationTracker
        nameWithType: BoneAnimationTracker
        qualifiedName: BoneAnimationTracker
      VB:
      - id: Global.BoneAnimationTracker
        name: BoneAnimationTracker
        nameWithType: BoneAnimationTracker
        qualifiedName: BoneAnimationTracker
    isDefinition: true
    commentId: T:Global.BoneAnimationTracker
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  Global.MatAnimation:
    name:
      CSharp:
      - id: Global.MatAnimation
        name: MatAnimation
        nameWithType: MatAnimation
        qualifiedName: MatAnimation
      VB:
      - id: Global.MatAnimation
        name: MatAnimation
        nameWithType: MatAnimation
        qualifiedName: MatAnimation
    isDefinition: true
    commentId: T:Global.MatAnimation
  Global.ComputeShader:
    name:
      CSharp:
      - id: Global.ComputeShader
        name: ComputeShader
        nameWithType: ComputeShader
        qualifiedName: ComputeShader
        isExternal: true
      VB:
      - id: Global.ComputeShader
        name: ComputeShader
        nameWithType: ComputeShader
        qualifiedName: ComputeShader
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ComputeShader'
  System.Collections.Generic.List{Image}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Image}
  System.Collections.Generic.List{Texture}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Texture
        name: Texture
        nameWithType: Texture
        qualifiedName: Texture
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Texture
        name: Texture
        nameWithType: Texture
        qualifiedName: Texture
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Texture}
  Global.Decolorator.Init*:
    name:
      CSharp:
      - id: Global.Decolorator.Init*
        name: Init
        nameWithType: Decolorator.Init
        qualifiedName: Decolorator.Init
      VB:
      - id: Global.Decolorator.Init*
        name: Init
        nameWithType: Decolorator.Init
        qualifiedName: Decolorator.Init
    isDefinition: true
    commentId: Overload:Global.Decolorator.Init
  Global.Decolorator.BlackAndWhite*:
    name:
      CSharp:
      - id: Global.Decolorator.BlackAndWhite*
        name: BlackAndWhite
        nameWithType: Decolorator.BlackAndWhite
        qualifiedName: Decolorator.BlackAndWhite
      VB:
      - id: Global.Decolorator.BlackAndWhite*
        name: BlackAndWhite
        nameWithType: Decolorator.BlackAndWhite
        qualifiedName: Decolorator.BlackAndWhite
    isDefinition: true
    commentId: Overload:Global.Decolorator.BlackAndWhite
  Global.Decolorator.Color*:
    name:
      CSharp:
      - id: Global.Decolorator.Color*
        name: Color
        nameWithType: Decolorator.Color
        qualifiedName: Decolorator.Color
      VB:
      - id: Global.Decolorator.Color*
        name: Color
        nameWithType: Decolorator.Color
        qualifiedName: Decolorator.Color
    isDefinition: true
    commentId: Overload:Global.Decolorator.Color
  Global.Decolorator:
    name:
      CSharp:
      - id: Global.Decolorator
        name: Decolorator
        nameWithType: Decolorator
        qualifiedName: Decolorator
      VB:
      - id: Global.Decolorator
        name: Decolorator
        nameWithType: Decolorator
        qualifiedName: Decolorator
    isDefinition: true
    commentId: T:Global.Decolorator
  System.Collections.Generic.List{SelectableUiButton}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.SelectableUiButton
        name: SelectableUiButton
        nameWithType: SelectableUiButton
        qualifiedName: SelectableUiButton
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.SelectableUiButton
        name: SelectableUiButton
        nameWithType: SelectableUiButton
        qualifiedName: SelectableUiButton
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{SelectableUiButton}
  Global.SelectableUi.Awake*:
    name:
      CSharp:
      - id: Global.SelectableUi.Awake*
        name: Awake
        nameWithType: SelectableUi.Awake
        qualifiedName: SelectableUi.Awake
      VB:
      - id: Global.SelectableUi.Awake*
        name: Awake
        nameWithType: SelectableUi.Awake
        qualifiedName: SelectableUi.Awake
    isDefinition: true
    commentId: Overload:Global.SelectableUi.Awake
  Global.SelectableUi.InitButtons*:
    name:
      CSharp:
      - id: Global.SelectableUi.InitButtons*
        name: InitButtons
        nameWithType: SelectableUi.InitButtons
        qualifiedName: SelectableUi.InitButtons
      VB:
      - id: Global.SelectableUi.InitButtons*
        name: InitButtons
        nameWithType: SelectableUi.InitButtons
        qualifiedName: SelectableUi.InitButtons
    isDefinition: true
    commentId: Overload:Global.SelectableUi.InitButtons
  Global.SelectableUiButton:
    name:
      CSharp:
      - id: Global.SelectableUiButton
        name: SelectableUiButton
        nameWithType: SelectableUiButton
        qualifiedName: SelectableUiButton
      VB:
      - id: Global.SelectableUiButton
        name: SelectableUiButton
        nameWithType: SelectableUiButton
        qualifiedName: SelectableUiButton
    isDefinition: true
    commentId: T:Global.SelectableUiButton
  Global.SelectableUi.OnClick*:
    name:
      CSharp:
      - id: Global.SelectableUi.OnClick*
        name: OnClick
        nameWithType: SelectableUi.OnClick
        qualifiedName: SelectableUi.OnClick
      VB:
      - id: Global.SelectableUi.OnClick*
        name: OnClick
        nameWithType: SelectableUi.OnClick
        qualifiedName: SelectableUi.OnClick
    isDefinition: true
    commentId: Overload:Global.SelectableUi.OnClick
  Global.SelectableUi.TryChangeStateToSelectable*:
    name:
      CSharp:
      - id: Global.SelectableUi.TryChangeStateToSelectable*
        name: TryChangeStateToSelectable
        nameWithType: SelectableUi.TryChangeStateToSelectable
        qualifiedName: SelectableUi.TryChangeStateToSelectable
      VB:
      - id: Global.SelectableUi.TryChangeStateToSelectable*
        name: TryChangeStateToSelectable
        nameWithType: SelectableUi.TryChangeStateToSelectable
        qualifiedName: SelectableUi.TryChangeStateToSelectable
    isDefinition: true
    commentId: Overload:Global.SelectableUi.TryChangeStateToSelectable
  Global.SelectableUi:
    name:
      CSharp:
      - id: Global.SelectableUi
        name: SelectableUi
        nameWithType: SelectableUi
        qualifiedName: SelectableUi
      VB:
      - id: Global.SelectableUi
        name: SelectableUi
        nameWithType: SelectableUi
        qualifiedName: SelectableUi
    isDefinition: true
    commentId: T:Global.SelectableUi
  Global.Button:
    name:
      CSharp:
      - id: Global.Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
      VB:
      - id: Global.Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
    isDefinition: true
  Global.SelectableUiButton.SetSelected*:
    name:
      CSharp:
      - id: Global.SelectableUiButton.SetSelected*
        name: SetSelected
        nameWithType: SelectableUiButton.SetSelected
        qualifiedName: SelectableUiButton.SetSelected
      VB:
      - id: Global.SelectableUiButton.SetSelected*
        name: SetSelected
        nameWithType: SelectableUiButton.SetSelected
        qualifiedName: SelectableUiButton.SetSelected
    isDefinition: true
    commentId: Overload:Global.SelectableUiButton.SetSelected
  Global.SelectableUiButton.SetUnselected*:
    name:
      CSharp:
      - id: Global.SelectableUiButton.SetUnselected*
        name: SetUnselected
        nameWithType: SelectableUiButton.SetUnselected
        qualifiedName: SelectableUiButton.SetUnselected
      VB:
      - id: Global.SelectableUiButton.SetUnselected*
        name: SetUnselected
        nameWithType: SelectableUiButton.SetUnselected
        qualifiedName: SelectableUiButton.SetUnselected
    isDefinition: true
    commentId: Overload:Global.SelectableUiButton.SetUnselected
  Global.SelectableUiButton.SetEnable*:
    name:
      CSharp:
      - id: Global.SelectableUiButton.SetEnable*
        name: SetEnable
        nameWithType: SelectableUiButton.SetEnable
        qualifiedName: SelectableUiButton.SetEnable
      VB:
      - id: Global.SelectableUiButton.SetEnable*
        name: SetEnable
        nameWithType: SelectableUiButton.SetEnable
        qualifiedName: SelectableUiButton.SetEnable
    isDefinition: true
    commentId: Overload:Global.SelectableUiButton.SetEnable
  Global.SelectableUiButton.SetDisable*:
    name:
      CSharp:
      - id: Global.SelectableUiButton.SetDisable*
        name: SetDisable
        nameWithType: SelectableUiButton.SetDisable
        qualifiedName: SelectableUiButton.SetDisable
      VB:
      - id: Global.SelectableUiButton.SetDisable*
        name: SetDisable
        nameWithType: SelectableUiButton.SetDisable
        qualifiedName: SelectableUiButton.SetDisable
    isDefinition: true
    commentId: Overload:Global.SelectableUiButton.SetDisable
  Global.ForwardMovement:
    name:
      CSharp:
      - id: Global.ForwardMovement
        name: ForwardMovement
        nameWithType: ForwardMovement
        qualifiedName: ForwardMovement
      VB:
      - id: Global.ForwardMovement
        name: ForwardMovement
        nameWithType: ForwardMovement
        qualifiedName: ForwardMovement
    isDefinition: true
    commentId: T:Global.ForwardMovement
  Global.RotatorPillow:
    name:
      CSharp:
      - id: Global.RotatorPillow
        name: RotatorPillow
        nameWithType: RotatorPillow
        qualifiedName: RotatorPillow
      VB:
      - id: Global.RotatorPillow
        name: RotatorPillow
        nameWithType: RotatorPillow
        qualifiedName: RotatorPillow
    isDefinition: true
    commentId: T:Global.RotatorPillow
  Global.Transform:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  Global.Vector3:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  Global.LayerMask:
    name:
      CSharp:
      - id: Global.LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
      VB:
      - id: Global.LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
    isDefinition: true
  Global.HS_CameraController:
    name:
      CSharp:
      - id: Global.HS_CameraController
        name: HS_CameraController
        nameWithType: HS_CameraController
        qualifiedName: HS_CameraController
      VB:
      - id: Global.HS_CameraController
        name: HS_CameraController
        nameWithType: HS_CameraController
        qualifiedName: HS_CameraController
    isDefinition: true
    commentId: T:Global.HS_CameraController
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
        isExternal: true
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerator
  Global.HS_CameraShaker.Shake*:
    name:
      CSharp:
      - id: Global.HS_CameraShaker.Shake*
        name: Shake
        nameWithType: HS_CameraShaker.Shake
        qualifiedName: HS_CameraShaker.Shake
      VB:
      - id: Global.HS_CameraShaker.Shake*
        name: Shake
        nameWithType: HS_CameraShaker.Shake
        qualifiedName: HS_CameraShaker.Shake
    isDefinition: true
    commentId: Overload:Global.HS_CameraShaker.Shake
  Global.HS_CameraShaker:
    name:
      CSharp:
      - id: Global.HS_CameraShaker
        name: HS_CameraShaker
        nameWithType: HS_CameraShaker
        qualifiedName: HS_CameraShaker
      VB:
      - id: Global.HS_CameraShaker
        name: HS_CameraShaker
        nameWithType: HS_CameraShaker
        qualifiedName: HS_CameraShaker
    isDefinition: true
    commentId: T:Global.HS_CameraShaker
  Global.Animator:
    name:
      CSharp:
      - id: Global.Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
      VB:
      - id: Global.Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
    isDefinition: true
  Global.Camera:
    name:
      CSharp:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
  Global.CharacterController:
    name:
      CSharp:
      - id: Global.CharacterController
        name: CharacterController
        nameWithType: CharacterController
        qualifiedName: CharacterController
        isExternal: true
      VB:
      - id: Global.CharacterController
        name: CharacterController
        nameWithType: CharacterController
        qualifiedName: CharacterController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CharacterController'
  Global.GameObject[]:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.Image:
    name:
      CSharp:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
    isDefinition: true
  Global.Vector2:
    name:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
  System.Collections.Generic.List{Transform}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Transform}
  Global.WhiteMageController.FastPlayTimer*:
    name:
      CSharp:
      - id: Global.WhiteMageController.FastPlayTimer*
        name: FastPlayTimer
        nameWithType: WhiteMageController.FastPlayTimer
        qualifiedName: WhiteMageController.FastPlayTimer
      VB:
      - id: Global.WhiteMageController.FastPlayTimer*
        name: FastPlayTimer
        nameWithType: WhiteMageController.FastPlayTimer
        qualifiedName: WhiteMageController.FastPlayTimer
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.FastPlayTimer
  Global.WhiteMageController.FastPlay*:
    name:
      CSharp:
      - id: Global.WhiteMageController.FastPlay*
        name: FastPlay
        nameWithType: WhiteMageController.FastPlay
        qualifiedName: WhiteMageController.FastPlay
      VB:
      - id: Global.WhiteMageController.FastPlay*
        name: FastPlay
        nameWithType: WhiteMageController.FastPlay
        qualifiedName: WhiteMageController.FastPlay
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.FastPlay
  Global.Quaternion:
    name:
      CSharp:
      - id: Global.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      VB:
      - id: Global.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
    isDefinition: true
  Global.WhiteMageController.Ult*:
    name:
      CSharp:
      - id: Global.WhiteMageController.Ult*
        name: Ult
        nameWithType: WhiteMageController.Ult
        qualifiedName: WhiteMageController.Ult
      VB:
      - id: Global.WhiteMageController.Ult*
        name: Ult
        nameWithType: WhiteMageController.Ult
        qualifiedName: WhiteMageController.Ult
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.Ult
  Global.WhiteMageController.MainSoundPlay*:
    name:
      CSharp:
      - id: Global.WhiteMageController.MainSoundPlay*
        name: MainSoundPlay
        nameWithType: WhiteMageController.MainSoundPlay
        qualifiedName: WhiteMageController.MainSoundPlay
      VB:
      - id: Global.WhiteMageController.MainSoundPlay*
        name: MainSoundPlay
        nameWithType: WhiteMageController.MainSoundPlay
        qualifiedName: WhiteMageController.MainSoundPlay
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.MainSoundPlay
  Global.WhiteMageController.CastSoundPlay*:
    name:
      CSharp:
      - id: Global.WhiteMageController.CastSoundPlay*
        name: CastSoundPlay
        nameWithType: WhiteMageController.CastSoundPlay
        qualifiedName: WhiteMageController.CastSoundPlay
      VB:
      - id: Global.WhiteMageController.CastSoundPlay*
        name: CastSoundPlay
        nameWithType: WhiteMageController.CastSoundPlay
        qualifiedName: WhiteMageController.CastSoundPlay
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.CastSoundPlay
  Global.WhiteMageController.RotateToTarget*:
    name:
      CSharp:
      - id: Global.WhiteMageController.RotateToTarget*
        name: RotateToTarget
        nameWithType: WhiteMageController.RotateToTarget
        qualifiedName: WhiteMageController.RotateToTarget
      VB:
      - id: Global.WhiteMageController.RotateToTarget*
        name: RotateToTarget
        nameWithType: WhiteMageController.RotateToTarget
        qualifiedName: WhiteMageController.RotateToTarget
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.RotateToTarget
  Global.WhiteMageController.FrontAttack*:
    name:
      CSharp:
      - id: Global.WhiteMageController.FrontAttack*
        name: FrontAttack
        nameWithType: WhiteMageController.FrontAttack
        qualifiedName: WhiteMageController.FrontAttack
      VB:
      - id: Global.WhiteMageController.FrontAttack*
        name: FrontAttack
        nameWithType: WhiteMageController.FrontAttack
        qualifiedName: WhiteMageController.FrontAttack
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.FrontAttack
  Global.WhiteMageController.PreCast*:
    name:
      CSharp:
      - id: Global.WhiteMageController.PreCast*
        name: PreCast
        nameWithType: WhiteMageController.PreCast
        qualifiedName: WhiteMageController.PreCast
      VB:
      - id: Global.WhiteMageController.PreCast*
        name: PreCast
        nameWithType: WhiteMageController.PreCast
        qualifiedName: WhiteMageController.PreCast
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.PreCast
  Global.WhiteMageController.Attack*:
    name:
      CSharp:
      - id: Global.WhiteMageController.Attack*
        name: Attack
        nameWithType: WhiteMageController.Attack
        qualifiedName: WhiteMageController.Attack
      VB:
      - id: Global.WhiteMageController.Attack*
        name: Attack
        nameWithType: WhiteMageController.Attack
        qualifiedName: WhiteMageController.Attack
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.Attack
  Global.WhiteMageController.StopCasting*:
    name:
      CSharp:
      - id: Global.WhiteMageController.StopCasting*
        name: StopCasting
        nameWithType: WhiteMageController.StopCasting
        qualifiedName: WhiteMageController.StopCasting
      VB:
      - id: Global.WhiteMageController.StopCasting*
        name: StopCasting
        nameWithType: WhiteMageController.StopCasting
        qualifiedName: WhiteMageController.StopCasting
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.StopCasting
  Global.WhiteMageController.targetIndex*:
    name:
      CSharp:
      - id: Global.WhiteMageController.targetIndex*
        name: targetIndex
        nameWithType: WhiteMageController.targetIndex
        qualifiedName: WhiteMageController.targetIndex
      VB:
      - id: Global.WhiteMageController.targetIndex*
        name: targetIndex
        nameWithType: WhiteMageController.targetIndex
        qualifiedName: WhiteMageController.targetIndex
    isDefinition: true
    commentId: Overload:Global.WhiteMageController.targetIndex
  Global.WhiteMageController:
    name:
      CSharp:
      - id: Global.WhiteMageController
        name: WhiteMageController
        nameWithType: WhiteMageController
        qualifiedName: WhiteMageController
      VB:
      - id: Global.WhiteMageController
        name: WhiteMageController
        nameWithType: WhiteMageController
        qualifiedName: WhiteMageController
    isDefinition: true
    commentId: T:Global.WhiteMageController
  Global.AutoDestroyPS:
    name:
      CSharp:
      - id: Global.AutoDestroyPS
        name: AutoDestroyPS
        nameWithType: AutoDestroyPS
        qualifiedName: AutoDestroyPS
      VB:
      - id: Global.AutoDestroyPS
        name: AutoDestroyPS
        nameWithType: AutoDestroyPS
        qualifiedName: AutoDestroyPS
    isDefinition: true
    commentId: T:Global.AutoDestroyPS
  Global.ParticleSystem:
    name:
      CSharp:
      - id: Global.ParticleSystem
        name: ParticleSystem
        nameWithType: ParticleSystem
        qualifiedName: ParticleSystem
        isExternal: true
      VB:
      - id: Global.ParticleSystem
        name: ParticleSystem
        nameWithType: ParticleSystem
        qualifiedName: ParticleSystem
        isExternal: true
    isDefinition: true
  Global.Animator[]:
    name:
      CSharp:
      - id: Global.Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.FrontAttack.PrepeareAttack*:
    name:
      CSharp:
      - id: Global.FrontAttack.PrepeareAttack*
        name: PrepeareAttack
        nameWithType: FrontAttack.PrepeareAttack
        qualifiedName: FrontAttack.PrepeareAttack
      VB:
      - id: Global.FrontAttack.PrepeareAttack*
        name: PrepeareAttack
        nameWithType: FrontAttack.PrepeareAttack
        qualifiedName: FrontAttack.PrepeareAttack
    isDefinition: true
    commentId: Overload:Global.FrontAttack.PrepeareAttack
  Global.FrontAttack.MeshEffect*:
    name:
      CSharp:
      - id: Global.FrontAttack.MeshEffect*
        name: MeshEffect
        nameWithType: FrontAttack.MeshEffect
        qualifiedName: FrontAttack.MeshEffect
      VB:
      - id: Global.FrontAttack.MeshEffect*
        name: MeshEffect
        nameWithType: FrontAttack.MeshEffect
        qualifiedName: FrontAttack.MeshEffect
    isDefinition: true
    commentId: Overload:Global.FrontAttack.MeshEffect
  Global.FrontAttack.StartMove*:
    name:
      CSharp:
      - id: Global.FrontAttack.StartMove*
        name: StartMove
        nameWithType: FrontAttack.StartMove
        qualifiedName: FrontAttack.StartMove
      VB:
      - id: Global.FrontAttack.StartMove*
        name: StartMove
        nameWithType: FrontAttack.StartMove
        qualifiedName: FrontAttack.StartMove
    isDefinition: true
    commentId: Overload:Global.FrontAttack.StartMove
  Global.FrontAttack:
    name:
      CSharp:
      - id: Global.FrontAttack
        name: FrontAttack
        nameWithType: FrontAttack
        qualifiedName: FrontAttack
      VB:
      - id: Global.FrontAttack
        name: FrontAttack
        nameWithType: FrontAttack
        qualifiedName: FrontAttack
    isDefinition: true
    commentId: T:Global.FrontAttack
  Global.TargetProjectile.UpdateTarget*:
    name:
      CSharp:
      - id: Global.TargetProjectile.UpdateTarget*
        name: UpdateTarget
        nameWithType: TargetProjectile.UpdateTarget
        qualifiedName: TargetProjectile.UpdateTarget
      VB:
      - id: Global.TargetProjectile.UpdateTarget*
        name: UpdateTarget
        nameWithType: TargetProjectile.UpdateTarget
        qualifiedName: TargetProjectile.UpdateTarget
    isDefinition: true
    commentId: Overload:Global.TargetProjectile.UpdateTarget
  Global.TargetProjectile:
    name:
      CSharp:
      - id: Global.TargetProjectile
        name: TargetProjectile
        nameWithType: TargetProjectile
        qualifiedName: TargetProjectile
      VB:
      - id: Global.TargetProjectile
        name: TargetProjectile
        nameWithType: TargetProjectile
        qualifiedName: TargetProjectile
    isDefinition: true
    commentId: T:Global.TargetProjectile
  Global.ZoneTrigger:
    name:
      CSharp:
      - id: Global.ZoneTrigger
        name: ZoneTrigger
        nameWithType: ZoneTrigger
        qualifiedName: ZoneTrigger
      VB:
      - id: Global.ZoneTrigger
        name: ZoneTrigger
        nameWithType: ZoneTrigger
        qualifiedName: ZoneTrigger
    isDefinition: true
    commentId: T:Global.ZoneTrigger
  Global.Gradient:
    name:
      CSharp:
      - id: Global.Gradient
        name: Gradient
        nameWithType: Gradient
        qualifiedName: Gradient
        isExternal: true
      VB:
      - id: Global.Gradient
        name: Gradient
        nameWithType: Gradient
        qualifiedName: Gradient
        isExternal: true
    isDefinition: true
  Global.Color:
    name:
      CSharp:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  Global.ChangeColor.ChangeEffectColor*:
    name:
      CSharp:
      - id: Global.ChangeColor.ChangeEffectColor*
        name: ChangeEffectColor
        nameWithType: ChangeColor.ChangeEffectColor
        qualifiedName: ChangeColor.ChangeEffectColor
      VB:
      - id: Global.ChangeColor.ChangeEffectColor*
        name: ChangeEffectColor
        nameWithType: ChangeColor.ChangeEffectColor
        qualifiedName: ChangeColor.ChangeEffectColor
    isDefinition: true
    commentId: Overload:Global.ChangeColor.ChangeEffectColor
  Global.ChangeColor.CheckIsColorChange*:
    name:
      CSharp:
      - id: Global.ChangeColor.CheckIsColorChange*
        name: CheckIsColorChange
        nameWithType: ChangeColor.CheckIsColorChange
        qualifiedName: ChangeColor.CheckIsColorChange
      VB:
      - id: Global.ChangeColor.CheckIsColorChange*
        name: CheckIsColorChange
        nameWithType: ChangeColor.CheckIsColorChange
        qualifiedName: ChangeColor.CheckIsColorChange
    isDefinition: true
    commentId: Overload:Global.ChangeColor.CheckIsColorChange
  Global.ChangeColor.CheckColorState*:
    name:
      CSharp:
      - id: Global.ChangeColor.CheckColorState*
        name: CheckColorState
        nameWithType: ChangeColor.CheckColorState
        qualifiedName: ChangeColor.CheckColorState
      VB:
      - id: Global.ChangeColor.CheckColorState*
        name: CheckColorState
        nameWithType: ChangeColor.CheckColorState
        qualifiedName: ChangeColor.CheckColorState
    isDefinition: true
    commentId: Overload:Global.ChangeColor.CheckColorState
  Global.ChangeColor:
    name:
      CSharp:
      - id: Global.ChangeColor
        name: ChangeColor
        nameWithType: ChangeColor
        qualifiedName: ChangeColor
      VB:
      - id: Global.ChangeColor
        name: ChangeColor
        nameWithType: ChangeColor
        qualifiedName: ChangeColor
    isDefinition: true
    commentId: T:Global.ChangeColor
  Global.Transform[]:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.Text:
    name:
      CSharp:
      - id: Global.Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
      VB:
      - id: Global.Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
    isDefinition: true
  Global.EffectsScene:
    name:
      CSharp:
      - id: Global.EffectsScene
        name: EffectsScene
        nameWithType: EffectsScene
        qualifiedName: EffectsScene
      VB:
      - id: Global.EffectsScene
        name: EffectsScene
        nameWithType: EffectsScene
        qualifiedName: EffectsScene
    isDefinition: true
    commentId: T:Global.EffectsScene
  Global.MouseOrbit:
    name:
      CSharp:
      - id: Global.MouseOrbit
        name: MouseOrbit
        nameWithType: MouseOrbit
        qualifiedName: MouseOrbit
      VB:
      - id: Global.MouseOrbit
        name: MouseOrbit
        nameWithType: MouseOrbit
        qualifiedName: MouseOrbit
    isDefinition: true
    commentId: T:Global.MouseOrbit
  Global.MoveToObject:
    name:
      CSharp:
      - id: Global.MoveToObject
        name: MoveToObject
        nameWithType: MoveToObject
        qualifiedName: MoveToObject
      VB:
      - id: Global.MoveToObject
        name: MoveToObject
        nameWithType: MoveToObject
        qualifiedName: MoveToObject
    isDefinition: true
    commentId: T:Global.MoveToObject
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Global.MoveToTag:
    name:
      CSharp:
      - id: Global.MoveToTag
        name: MoveToTag
        nameWithType: MoveToTag
        qualifiedName: MoveToTag
      VB:
      - id: Global.MoveToTag
        name: MoveToTag
        nameWithType: MoveToTag
        qualifiedName: MoveToTag
    isDefinition: true
    commentId: T:Global.MoveToTag
  Global.TranslateMove:
    name:
      CSharp:
      - id: Global.TranslateMove
        name: TranslateMove
        nameWithType: TranslateMove
        qualifiedName: TranslateMove
      VB:
      - id: Global.TranslateMove
        name: TranslateMove
        nameWithType: TranslateMove
        qualifiedName: TranslateMove
    isDefinition: true
    commentId: T:Global.TranslateMove
  Global._ObjectMakeBase:
    name:
      CSharp:
      - id: Global._ObjectMakeBase
        name: _ObjectMakeBase
        nameWithType: _ObjectMakeBase
        qualifiedName: _ObjectMakeBase
      VB:
      - id: Global._ObjectMakeBase
        name: _ObjectMakeBase
        nameWithType: _ObjectMakeBase
        qualifiedName: _ObjectMakeBase
    isDefinition: true
    commentId: T:Global._ObjectMakeBase
  Global._ObjectMakeBase.m_makeObjs:
    name:
      CSharp:
      - id: Global._ObjectMakeBase.m_makeObjs
        name: m_makeObjs
        nameWithType: _ObjectMakeBase.m_makeObjs
        qualifiedName: _ObjectMakeBase.m_makeObjs
      VB:
      - id: Global._ObjectMakeBase.m_makeObjs
        name: m_makeObjs
        nameWithType: _ObjectMakeBase.m_makeObjs
        qualifiedName: _ObjectMakeBase.m_makeObjs
    isDefinition: true
    parent: Global._ObjectMakeBase
    commentId: F:Global._ObjectMakeBase.m_makeObjs
  Global._ObjectMakeBase.m_movePos:
    name:
      CSharp:
      - id: Global._ObjectMakeBase.m_movePos
        name: m_movePos
        nameWithType: _ObjectMakeBase.m_movePos
        qualifiedName: _ObjectMakeBase.m_movePos
      VB:
      - id: Global._ObjectMakeBase.m_movePos
        name: m_movePos
        nameWithType: _ObjectMakeBase.m_movePos
        qualifiedName: _ObjectMakeBase.m_movePos
    isDefinition: true
    parent: Global._ObjectMakeBase
    commentId: F:Global._ObjectMakeBase.m_movePos
  Global._ObjectMakeBase.GetRandomValue(System.Single):
    name:
      CSharp:
      - id: Global._ObjectMakeBase.GetRandomValue(System.Single)
        name: GetRandomValue
        nameWithType: _ObjectMakeBase.GetRandomValue
        qualifiedName: _ObjectMakeBase.GetRandomValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global._ObjectMakeBase.GetRandomValue(System.Single)
        name: GetRandomValue
        nameWithType: _ObjectMakeBase.GetRandomValue
        qualifiedName: _ObjectMakeBase.GetRandomValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global._ObjectMakeBase
    commentId: M:Global._ObjectMakeBase.GetRandomValue(System.Single)
  Global._ObjectMakeBase.GetRandomVector(Vector3):
    name:
      CSharp:
      - id: Global._ObjectMakeBase.GetRandomVector(Vector3)
        name: GetRandomVector
        nameWithType: _ObjectMakeBase.GetRandomVector
        qualifiedName: _ObjectMakeBase.GetRandomVector
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global._ObjectMakeBase.GetRandomVector(Vector3)
        name: GetRandomVector
        nameWithType: _ObjectMakeBase.GetRandomVector
        qualifiedName: _ObjectMakeBase.GetRandomVector
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global._ObjectMakeBase
    commentId: M:Global._ObjectMakeBase.GetRandomVector(Vector3)
  Global.DelayObjectMake:
    name:
      CSharp:
      - id: Global.DelayObjectMake
        name: DelayObjectMake
        nameWithType: DelayObjectMake
        qualifiedName: DelayObjectMake
      VB:
      - id: Global.DelayObjectMake
        name: DelayObjectMake
        nameWithType: DelayObjectMake
        qualifiedName: DelayObjectMake
    isDefinition: true
    commentId: T:Global.DelayObjectMake
  Global.FowardObjectMake:
    name:
      CSharp:
      - id: Global.FowardObjectMake
        name: FowardObjectMake
        nameWithType: FowardObjectMake
        qualifiedName: FowardObjectMake
      VB:
      - id: Global.FowardObjectMake
        name: FowardObjectMake
        nameWithType: FowardObjectMake
        qualifiedName: FowardObjectMake
    isDefinition: true
    commentId: T:Global.FowardObjectMake
  Global.Material:
    name:
      CSharp:
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      VB:
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
    isDefinition: true
  Global.Material_Change:
    name:
      CSharp:
      - id: Global.Material_Change
        name: Material_Change
        nameWithType: Material_Change
        qualifiedName: Material_Change
      VB:
      - id: Global.Material_Change
        name: Material_Change
        nameWithType: Material_Change
        qualifiedName: Material_Change
    isDefinition: true
    commentId: T:Global.Material_Change
  Global.MultiCircleObjectMake:
    name:
      CSharp:
      - id: Global.MultiCircleObjectMake
        name: MultiCircleObjectMake
        nameWithType: MultiCircleObjectMake
        qualifiedName: MultiCircleObjectMake
      VB:
      - id: Global.MultiCircleObjectMake
        name: MultiCircleObjectMake
        nameWithType: MultiCircleObjectMake
        qualifiedName: MultiCircleObjectMake
    isDefinition: true
    commentId: T:Global.MultiCircleObjectMake
  Global.MultiObjectMake:
    name:
      CSharp:
      - id: Global.MultiObjectMake
        name: MultiObjectMake
        nameWithType: MultiObjectMake
        qualifiedName: MultiObjectMake
      VB:
      - id: Global.MultiObjectMake
        name: MultiObjectMake
        nameWithType: MultiObjectMake
        qualifiedName: MultiObjectMake
    isDefinition: true
    commentId: T:Global.MultiObjectMake
  Global.RotateObject:
    name:
      CSharp:
      - id: Global.RotateObject
        name: RotateObject
        nameWithType: RotateObject
        qualifiedName: RotateObject
      VB:
      - id: Global.RotateObject
        name: RotateObject
        nameWithType: RotateObject
        qualifiedName: RotateObject
    isDefinition: true
    commentId: T:Global.RotateObject
  Global.ScaleChange:
    name:
      CSharp:
      - id: Global.ScaleChange
        name: ScaleChange
        nameWithType: ScaleChange
        qualifiedName: ScaleChange
      VB:
      - id: Global.ScaleChange
        name: ScaleChange
        nameWithType: ScaleChange
        qualifiedName: ScaleChange
    isDefinition: true
    commentId: T:Global.ScaleChange
  Global.SimpleObjectMake:
    name:
      CSharp:
      - id: Global.SimpleObjectMake
        name: SimpleObjectMake
        nameWithType: SimpleObjectMake
        qualifiedName: SimpleObjectMake
      VB:
      - id: Global.SimpleObjectMake
        name: SimpleObjectMake
        nameWithType: SimpleObjectMake
        qualifiedName: SimpleObjectMake
    isDefinition: true
    commentId: T:Global.SimpleObjectMake
  Global._ObjectMakeBase.GetRandomValue*:
    name:
      CSharp:
      - id: Global._ObjectMakeBase.GetRandomValue*
        name: GetRandomValue
        nameWithType: _ObjectMakeBase.GetRandomValue
        qualifiedName: _ObjectMakeBase.GetRandomValue
      VB:
      - id: Global._ObjectMakeBase.GetRandomValue*
        name: GetRandomValue
        nameWithType: _ObjectMakeBase.GetRandomValue
        qualifiedName: _ObjectMakeBase.GetRandomValue
    isDefinition: true
    commentId: Overload:Global._ObjectMakeBase.GetRandomValue
  Global._ObjectMakeBase.GetRandomVector*:
    name:
      CSharp:
      - id: Global._ObjectMakeBase.GetRandomVector*
        name: GetRandomVector
        nameWithType: _ObjectMakeBase.GetRandomVector
        qualifiedName: _ObjectMakeBase.GetRandomVector
      VB:
      - id: Global._ObjectMakeBase.GetRandomVector*
        name: GetRandomVector
        nameWithType: _ObjectMakeBase.GetRandomVector
        qualifiedName: _ObjectMakeBase.GetRandomVector
    isDefinition: true
    commentId: Overload:Global._ObjectMakeBase.GetRandomVector
  Global.Texture:
    name:
      CSharp:
      - id: Global.Texture
        name: Texture
        nameWithType: Texture
        qualifiedName: Texture
        isExternal: true
      VB:
      - id: Global.Texture
        name: Texture
        nameWithType: Texture
        qualifiedName: Texture
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Texture'
  Global.DemoToonVFX:
    name:
      CSharp:
      - id: Global.DemoToonVFX
        name: DemoToonVFX
        nameWithType: DemoToonVFX
        qualifiedName: DemoToonVFX
      VB:
      - id: Global.DemoToonVFX
        name: DemoToonVFX
        nameWithType: DemoToonVFX
        qualifiedName: DemoToonVFX
    isDefinition: true
    commentId: T:Global.DemoToonVFX
  Global.DemoToonVFX.SVA:
    name:
      CSharp:
      - id: Global.DemoToonVFX.SVA
        name: DemoToonVFX.SVA
        nameWithType: DemoToonVFX.SVA
        qualifiedName: DemoToonVFX.SVA
      VB:
      - id: Global.DemoToonVFX.SVA
        name: DemoToonVFX.SVA
        nameWithType: DemoToonVFX.SVA
        qualifiedName: DemoToonVFX.SVA
    isDefinition: true
    commentId: T:Global.DemoToonVFX.SVA
  Global.FrontMover:
    name:
      CSharp:
      - id: Global.FrontMover
        name: FrontMover
        nameWithType: FrontMover
        qualifiedName: FrontMover
      VB:
      - id: Global.FrontMover
        name: FrontMover
        nameWithType: FrontMover
        qualifiedName: FrontMover
    isDefinition: true
    commentId: T:Global.FrontMover
  Global.EGA_EffectSound:
    name:
      CSharp:
      - id: Global.EGA_EffectSound
        name: EGA_EffectSound
        nameWithType: EGA_EffectSound
        qualifiedName: EGA_EffectSound
      VB:
      - id: Global.EGA_EffectSound
        name: EGA_EffectSound
        nameWithType: EGA_EffectSound
        qualifiedName: EGA_EffectSound
    isDefinition: true
    commentId: T:Global.EGA_EffectSound
  Global.ParticleCollisionInstance:
    name:
      CSharp:
      - id: Global.ParticleCollisionInstance
        name: ParticleCollisionInstance
        nameWithType: ParticleCollisionInstance
        qualifiedName: ParticleCollisionInstance
      VB:
      - id: Global.ParticleCollisionInstance
        name: ParticleCollisionInstance
        nameWithType: ParticleCollisionInstance
        qualifiedName: ParticleCollisionInstance
    isDefinition: true
    commentId: T:Global.ParticleCollisionInstance
  Global.csEffectScene:
    name:
      CSharp:
      - id: Global.csEffectScene
        name: csEffectScene
        nameWithType: csEffectScene
        qualifiedName: csEffectScene
      VB:
      - id: Global.csEffectScene
        name: csEffectScene
        nameWithType: csEffectScene
        qualifiedName: csEffectScene
    isDefinition: true
    commentId: T:Global.csEffectScene
  Global.csLookAt:
    name:
      CSharp:
      - id: Global.csLookAt
        name: csLookAt
        nameWithType: csLookAt
        qualifiedName: csLookAt
      VB:
      - id: Global.csLookAt
        name: csLookAt
        nameWithType: csLookAt
        qualifiedName: csLookAt
    isDefinition: true
    commentId: T:Global.csLookAt
  Global.csMouseOrbit:
    name:
      CSharp:
      - id: Global.csMouseOrbit
        name: csMouseOrbit
        nameWithType: csMouseOrbit
        qualifiedName: csMouseOrbit
      VB:
      - id: Global.csMouseOrbit
        name: csMouseOrbit
        nameWithType: csMouseOrbit
        qualifiedName: csMouseOrbit
    isDefinition: true
    commentId: T:Global.csMouseOrbit
  Global.csLaser:
    name:
      CSharp:
      - id: Global.csLaser
        name: csLaser
        nameWithType: csLaser
        qualifiedName: csLaser
      VB:
      - id: Global.csLaser
        name: csLaser
        nameWithType: csLaser
        qualifiedName: csLaser
    isDefinition: true
    commentId: T:Global.csLaser
  Global.csMaterial_Change.SetTime*:
    name:
      CSharp:
      - id: Global.csMaterial_Change.SetTime*
        name: SetTime
        nameWithType: csMaterial_Change.SetTime
        qualifiedName: csMaterial_Change.SetTime
      VB:
      - id: Global.csMaterial_Change.SetTime*
        name: SetTime
        nameWithType: csMaterial_Change.SetTime
        qualifiedName: csMaterial_Change.SetTime
    isDefinition: true
    commentId: Overload:Global.csMaterial_Change.SetTime
  Global.csMaterial_Change:
    name:
      CSharp:
      - id: Global.csMaterial_Change
        name: csMaterial_Change
        nameWithType: csMaterial_Change
        qualifiedName: csMaterial_Change
      VB:
      - id: Global.csMaterial_Change
        name: csMaterial_Change
        nameWithType: csMaterial_Change
        qualifiedName: csMaterial_Change
    isDefinition: true
    commentId: T:Global.csMaterial_Change
  Global.csMove:
    name:
      CSharp:
      - id: Global.csMove
        name: csMove
        nameWithType: csMove
        qualifiedName: csMove
      VB:
      - id: Global.csMove
        name: csMove
        nameWithType: csMove
        qualifiedName: csMove
    isDefinition: true
    commentId: T:Global.csMove
  Global.csObjectMoveDestroy:
    name:
      CSharp:
      - id: Global.csObjectMoveDestroy
        name: csObjectMoveDestroy
        nameWithType: csObjectMoveDestroy
        qualifiedName: csObjectMoveDestroy
      VB:
      - id: Global.csObjectMoveDestroy
        name: csObjectMoveDestroy
        nameWithType: csObjectMoveDestroy
        qualifiedName: csObjectMoveDestroy
    isDefinition: true
    commentId: T:Global.csObjectMoveDestroy
  Global.csObjectMoveDestroy2:
    name:
      CSharp:
      - id: Global.csObjectMoveDestroy2
        name: csObjectMoveDestroy2
        nameWithType: csObjectMoveDestroy2
        qualifiedName: csObjectMoveDestroy2
      VB:
      - id: Global.csObjectMoveDestroy2
        name: csObjectMoveDestroy2
        nameWithType: csObjectMoveDestroy2
        qualifiedName: csObjectMoveDestroy2
    isDefinition: true
    commentId: T:Global.csObjectMoveDestroy2
  Global.ParticleSystem[]:
    name:
      CSharp:
      - id: Global.ParticleSystem
        name: ParticleSystem
        nameWithType: ParticleSystem
        qualifiedName: ParticleSystem
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.ParticleSystem
        name: ParticleSystem
        nameWithType: ParticleSystem
        qualifiedName: ParticleSystem
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.csParticleStop:
    name:
      CSharp:
      - id: Global.csParticleStop
        name: csParticleStop
        nameWithType: csParticleStop
        qualifiedName: csParticleStop
      VB:
      - id: Global.csParticleStop
        name: csParticleStop
        nameWithType: csParticleStop
        qualifiedName: csParticleStop
    isDefinition: true
    commentId: T:Global.csParticleStop
  Global.csRiseDown:
    name:
      CSharp:
      - id: Global.csRiseDown
        name: csRiseDown
        nameWithType: csRiseDown
        qualifiedName: csRiseDown
      VB:
      - id: Global.csRiseDown
        name: csRiseDown
        nameWithType: csRiseDown
        qualifiedName: csRiseDown
    isDefinition: true
    commentId: T:Global.csRiseDown
  Global.csRotate:
    name:
      CSharp:
      - id: Global.csRotate
        name: csRotate
        nameWithType: csRotate
        qualifiedName: csRotate
      VB:
      - id: Global.csRotate
        name: csRotate
        nameWithType: csRotate
        qualifiedName: csRotate
    isDefinition: true
    commentId: T:Global.csRotate
  Global.csScaleChange:
    name:
      CSharp:
      - id: Global.csScaleChange
        name: csScaleChange
        nameWithType: csScaleChange
        qualifiedName: csScaleChange
      VB:
      - id: Global.csScaleChange
        name: csScaleChange
        nameWithType: csScaleChange
        qualifiedName: csScaleChange
    isDefinition: true
    commentId: T:Global.csScaleChange
  Global.csEffect_76_Animation:
    name:
      CSharp:
      - id: Global.csEffect_76_Animation
        name: csEffect_76_Animation
        nameWithType: csEffect_76_Animation
        qualifiedName: csEffect_76_Animation
      VB:
      - id: Global.csEffect_76_Animation
        name: csEffect_76_Animation
        nameWithType: csEffect_76_Animation
        qualifiedName: csEffect_76_Animation
    isDefinition: true
    commentId: T:Global.csEffect_76_Animation
  Global.csEffect_76_CircleSwordMake:
    name:
      CSharp:
      - id: Global.csEffect_76_CircleSwordMake
        name: csEffect_76_CircleSwordMake
        nameWithType: csEffect_76_CircleSwordMake
        qualifiedName: csEffect_76_CircleSwordMake
      VB:
      - id: Global.csEffect_76_CircleSwordMake
        name: csEffect_76_CircleSwordMake
        nameWithType: csEffect_76_CircleSwordMake
        qualifiedName: csEffect_76_CircleSwordMake
    isDefinition: true
    commentId: T:Global.csEffect_76_CircleSwordMake
  Global.csEffect_76_FloatingSwordMake:
    name:
      CSharp:
      - id: Global.csEffect_76_FloatingSwordMake
        name: csEffect_76_FloatingSwordMake
        nameWithType: csEffect_76_FloatingSwordMake
        qualifiedName: csEffect_76_FloatingSwordMake
      VB:
      - id: Global.csEffect_76_FloatingSwordMake
        name: csEffect_76_FloatingSwordMake
        nameWithType: csEffect_76_FloatingSwordMake
        qualifiedName: csEffect_76_FloatingSwordMake
    isDefinition: true
    commentId: T:Global.csEffect_76_FloatingSwordMake
  Global.csEffect_77_HandMove:
    name:
      CSharp:
      - id: Global.csEffect_77_HandMove
        name: csEffect_77_HandMove
        nameWithType: csEffect_77_HandMove
        qualifiedName: csEffect_77_HandMove
      VB:
      - id: Global.csEffect_77_HandMove
        name: csEffect_77_HandMove
        nameWithType: csEffect_77_HandMove
        qualifiedName: csEffect_77_HandMove
    isDefinition: true
    commentId: T:Global.csEffect_77_HandMove
  Global.csEffect_77_ObjectMake:
    name:
      CSharp:
      - id: Global.csEffect_77_ObjectMake
        name: csEffect_77_ObjectMake
        nameWithType: csEffect_77_ObjectMake
        qualifiedName: csEffect_77_ObjectMake
      VB:
      - id: Global.csEffect_77_ObjectMake
        name: csEffect_77_ObjectMake
        nameWithType: csEffect_77_ObjectMake
        qualifiedName: csEffect_77_ObjectMake
    isDefinition: true
    commentId: T:Global.csEffect_77_ObjectMake
  Global.csEffect_77_ObjectMake2:
    name:
      CSharp:
      - id: Global.csEffect_77_ObjectMake2
        name: csEffect_77_ObjectMake2
        nameWithType: csEffect_77_ObjectMake2
        qualifiedName: csEffect_77_ObjectMake2
      VB:
      - id: Global.csEffect_77_ObjectMake2
        name: csEffect_77_ObjectMake2
        nameWithType: csEffect_77_ObjectMake2
        qualifiedName: csEffect_77_ObjectMake2
    isDefinition: true
    commentId: T:Global.csEffect_77_ObjectMake2
  Global.csEffect_03_ArrowFunction:
    name:
      CSharp:
      - id: Global.csEffect_03_ArrowFunction
        name: csEffect_03_ArrowFunction
        nameWithType: csEffect_03_ArrowFunction
        qualifiedName: csEffect_03_ArrowFunction
      VB:
      - id: Global.csEffect_03_ArrowFunction
        name: csEffect_03_ArrowFunction
        nameWithType: csEffect_03_ArrowFunction
        qualifiedName: csEffect_03_ArrowFunction
    isDefinition: true
    commentId: T:Global.csEffect_03_ArrowFunction
  Global.csEffect_03_ObjectMake:
    name:
      CSharp:
      - id: Global.csEffect_03_ObjectMake
        name: csEffect_03_ObjectMake
        nameWithType: csEffect_03_ObjectMake
        qualifiedName: csEffect_03_ObjectMake
      VB:
      - id: Global.csEffect_03_ObjectMake
        name: csEffect_03_ObjectMake
        nameWithType: csEffect_03_ObjectMake
        qualifiedName: csEffect_03_ObjectMake
    isDefinition: true
    commentId: T:Global.csEffect_03_ObjectMake
  Global.csEffect_79_CircleMake:
    name:
      CSharp:
      - id: Global.csEffect_79_CircleMake
        name: csEffect_79_CircleMake
        nameWithType: csEffect_79_CircleMake
        qualifiedName: csEffect_79_CircleMake
      VB:
      - id: Global.csEffect_79_CircleMake
        name: csEffect_79_CircleMake
        nameWithType: csEffect_79_CircleMake
        qualifiedName: csEffect_79_CircleMake
    isDefinition: true
    commentId: T:Global.csEffect_79_CircleMake
  Global.csEffect_79_WallRiseDown:
    name:
      CSharp:
      - id: Global.csEffect_79_WallRiseDown
        name: csEffect_79_WallRiseDown
        nameWithType: csEffect_79_WallRiseDown
        qualifiedName: csEffect_79_WallRiseDown
      VB:
      - id: Global.csEffect_79_WallRiseDown
        name: csEffect_79_WallRiseDown
        nameWithType: csEffect_79_WallRiseDown
        qualifiedName: csEffect_79_WallRiseDown
    isDefinition: true
    commentId: T:Global.csEffect_79_WallRiseDown
  Global.csEffect_80_SunMove:
    name:
      CSharp:
      - id: Global.csEffect_80_SunMove
        name: csEffect_80_SunMove
        nameWithType: csEffect_80_SunMove
        qualifiedName: csEffect_80_SunMove
      VB:
      - id: Global.csEffect_80_SunMove
        name: csEffect_80_SunMove
        nameWithType: csEffect_80_SunMove
        qualifiedName: csEffect_80_SunMove
    isDefinition: true
    commentId: T:Global.csEffect_80_SunMove
  Global.csObjectMake:
    name:
      CSharp:
      - id: Global.csObjectMake
        name: csObjectMake
        nameWithType: csObjectMake
        qualifiedName: csObjectMake
      VB:
      - id: Global.csObjectMake
        name: csObjectMake
        nameWithType: csObjectMake
        qualifiedName: csObjectMake
    isDefinition: true
    commentId: T:Global.csObjectMake
  Global.csObjectMake2:
    name:
      CSharp:
      - id: Global.csObjectMake2
        name: csObjectMake2
        nameWithType: csObjectMake2
        qualifiedName: csObjectMake2
      VB:
      - id: Global.csObjectMake2
        name: csObjectMake2
        nameWithType: csObjectMake2
        qualifiedName: csObjectMake2
    isDefinition: true
    commentId: T:Global.csObjectMake2
  Global.csObjectMake3:
    name:
      CSharp:
      - id: Global.csObjectMake3
        name: csObjectMake3
        nameWithType: csObjectMake3
        qualifiedName: csObjectMake3
      VB:
      - id: Global.csObjectMake3
        name: csObjectMake3
        nameWithType: csObjectMake3
        qualifiedName: csObjectMake3
    isDefinition: true
    commentId: T:Global.csObjectMake3
  Global.csObjectMake4:
    name:
      CSharp:
      - id: Global.csObjectMake4
        name: csObjectMake4
        nameWithType: csObjectMake4
        qualifiedName: csObjectMake4
      VB:
      - id: Global.csObjectMake4
        name: csObjectMake4
        nameWithType: csObjectMake4
        qualifiedName: csObjectMake4
    isDefinition: true
    commentId: T:Global.csObjectMake4
  Global.csObjectMake5:
    name:
      CSharp:
      - id: Global.csObjectMake5
        name: csObjectMake5
        nameWithType: csObjectMake5
        qualifiedName: csObjectMake5
      VB:
      - id: Global.csObjectMake5
        name: csObjectMake5
        nameWithType: csObjectMake5
        qualifiedName: csObjectMake5
    isDefinition: true
    commentId: T:Global.csObjectMake5
  Global.csObjectMake6:
    name:
      CSharp:
      - id: Global.csObjectMake6
        name: csObjectMake6
        nameWithType: csObjectMake6
        qualifiedName: csObjectMake6
      VB:
      - id: Global.csObjectMake6
        name: csObjectMake6
        nameWithType: csObjectMake6
        qualifiedName: csObjectMake6
    isDefinition: true
    commentId: T:Global.csObjectMake6
  Global.PrefabSpawner.SpawnPrefab*:
    name:
      CSharp:
      - id: Global.PrefabSpawner.SpawnPrefab*
        name: SpawnPrefab
        nameWithType: PrefabSpawner.SpawnPrefab
        qualifiedName: PrefabSpawner.SpawnPrefab
      VB:
      - id: Global.PrefabSpawner.SpawnPrefab*
        name: SpawnPrefab
        nameWithType: PrefabSpawner.SpawnPrefab
        qualifiedName: PrefabSpawner.SpawnPrefab
    isDefinition: true
    commentId: Overload:Global.PrefabSpawner.SpawnPrefab
  Global.PrefabSpawner.ChangePrefabIntex*:
    name:
      CSharp:
      - id: Global.PrefabSpawner.ChangePrefabIntex*
        name: ChangePrefabIntex
        nameWithType: PrefabSpawner.ChangePrefabIntex
        qualifiedName: PrefabSpawner.ChangePrefabIntex
      VB:
      - id: Global.PrefabSpawner.ChangePrefabIntex*
        name: ChangePrefabIntex
        nameWithType: PrefabSpawner.ChangePrefabIntex
        qualifiedName: PrefabSpawner.ChangePrefabIntex
    isDefinition: true
    commentId: Overload:Global.PrefabSpawner.ChangePrefabIntex
  Global.PrefabSpawner:
    name:
      CSharp:
      - id: Global.PrefabSpawner
        name: PrefabSpawner
        nameWithType: PrefabSpawner
        qualifiedName: PrefabSpawner
      VB:
      - id: Global.PrefabSpawner
        name: PrefabSpawner
        nameWithType: PrefabSpawner
        qualifiedName: PrefabSpawner
    isDefinition: true
    commentId: T:Global.PrefabSpawner
  Global.Renderer[]:
    name:
      CSharp:
      - id: Global.Renderer
        name: Renderer
        nameWithType: Renderer
        qualifiedName: Renderer
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Renderer
        name: Renderer
        nameWithType: Renderer
        qualifiedName: Renderer
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.RampGeneratorTDE.Mode:
    name:
      CSharp:
      - id: Global.RampGeneratorTDE.Mode
        name: RampGeneratorTDE.Mode
        nameWithType: RampGeneratorTDE.Mode
        qualifiedName: RampGeneratorTDE.Mode
      VB:
      - id: Global.RampGeneratorTDE.Mode
        name: RampGeneratorTDE.Mode
        nameWithType: RampGeneratorTDE.Mode
        qualifiedName: RampGeneratorTDE.Mode
    isDefinition: true
    commentId: T:Global.RampGeneratorTDE.Mode
  Global.RampGeneratorTDE.UpdateRampTexture*:
    name:
      CSharp:
      - id: Global.RampGeneratorTDE.UpdateRampTexture*
        name: UpdateRampTexture
        nameWithType: RampGeneratorTDE.UpdateRampTexture
        qualifiedName: RampGeneratorTDE.UpdateRampTexture
      VB:
      - id: Global.RampGeneratorTDE.UpdateRampTexture*
        name: UpdateRampTexture
        nameWithType: RampGeneratorTDE.UpdateRampTexture
        qualifiedName: RampGeneratorTDE.UpdateRampTexture
    isDefinition: true
    commentId: Overload:Global.RampGeneratorTDE.UpdateRampTexture
  Global.RampGeneratorTDE.BakeGradient*:
    name:
      CSharp:
      - id: Global.RampGeneratorTDE.BakeGradient*
        name: BakeGradient
        nameWithType: RampGeneratorTDE.BakeGradient
        qualifiedName: RampGeneratorTDE.BakeGradient
      VB:
      - id: Global.RampGeneratorTDE.BakeGradient*
        name: BakeGradient
        nameWithType: RampGeneratorTDE.BakeGradient
        qualifiedName: RampGeneratorTDE.BakeGradient
    isDefinition: true
    commentId: Overload:Global.RampGeneratorTDE.BakeGradient
  Global.RampGeneratorTDE:
    name:
      CSharp:
      - id: Global.RampGeneratorTDE
        name: RampGeneratorTDE
        nameWithType: RampGeneratorTDE
        qualifiedName: RampGeneratorTDE
      VB:
      - id: Global.RampGeneratorTDE
        name: RampGeneratorTDE
        nameWithType: RampGeneratorTDE
        qualifiedName: RampGeneratorTDE
    isDefinition: true
    commentId: T:Global.RampGeneratorTDE
  Global.SineCameraControllerTopDownEffects:
    name:
      CSharp:
      - id: Global.SineCameraControllerTopDownEffects
        name: SineCameraControllerTopDownEffects
        nameWithType: SineCameraControllerTopDownEffects
        qualifiedName: SineCameraControllerTopDownEffects
      VB:
      - id: Global.SineCameraControllerTopDownEffects
        name: SineCameraControllerTopDownEffects
        nameWithType: SineCameraControllerTopDownEffects
        qualifiedName: SineCameraControllerTopDownEffects
    isDefinition: true
    commentId: T:Global.SineCameraControllerTopDownEffects
  Global.CanvasGroup:
    name:
      CSharp:
      - id: Global.CanvasGroup
        name: CanvasGroup
        nameWithType: CanvasGroup
        qualifiedName: CanvasGroup
        isExternal: true
      VB:
      - id: Global.CanvasGroup
        name: CanvasGroup
        nameWithType: CanvasGroup
        qualifiedName: CanvasGroup
        isExternal: true
    isDefinition: true
  Global.SineUIControllerTopDownEffects.ChangeEffect*:
    name:
      CSharp:
      - id: Global.SineUIControllerTopDownEffects.ChangeEffect*
        name: ChangeEffect
        nameWithType: SineUIControllerTopDownEffects.ChangeEffect
        qualifiedName: SineUIControllerTopDownEffects.ChangeEffect
      VB:
      - id: Global.SineUIControllerTopDownEffects.ChangeEffect*
        name: ChangeEffect
        nameWithType: SineUIControllerTopDownEffects.ChangeEffect
        qualifiedName: SineUIControllerTopDownEffects.ChangeEffect
    isDefinition: true
    commentId: Overload:Global.SineUIControllerTopDownEffects.ChangeEffect
  Global.SineUIControllerTopDownEffects:
    name:
      CSharp:
      - id: Global.SineUIControllerTopDownEffects
        name: SineUIControllerTopDownEffects
        nameWithType: SineUIControllerTopDownEffects
        qualifiedName: SineUIControllerTopDownEffects
      VB:
      - id: Global.SineUIControllerTopDownEffects
        name: SineUIControllerTopDownEffects
        nameWithType: SineUIControllerTopDownEffects
        qualifiedName: SineUIControllerTopDownEffects
    isDefinition: true
    commentId: T:Global.SineUIControllerTopDownEffects
  Global.CustomRampGeneratorEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Global.CustomRampGeneratorEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: CustomRampGeneratorEditor.OnInspectorGUI
        qualifiedName: CustomRampGeneratorEditor.OnInspectorGUI
      VB:
      - id: Global.CustomRampGeneratorEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: CustomRampGeneratorEditor.OnInspectorGUI
        qualifiedName: CustomRampGeneratorEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:Global.CustomRampGeneratorEditor.OnInspectorGUI
  Global.CustomRampGeneratorEditor:
    name:
      CSharp:
      - id: Global.CustomRampGeneratorEditor
        name: CustomRampGeneratorEditor
        nameWithType: CustomRampGeneratorEditor
        qualifiedName: CustomRampGeneratorEditor
      VB:
      - id: Global.CustomRampGeneratorEditor
        name: CustomRampGeneratorEditor
        nameWithType: CustomRampGeneratorEditor
        qualifiedName: CustomRampGeneratorEditor
    isDefinition: true
    commentId: T:Global.CustomRampGeneratorEditor
  Global.Sprite:
    name:
      CSharp:
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      VB:
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
    isDefinition: true
  Global.AlteredView.Test*:
    name:
      CSharp:
      - id: Global.AlteredView.Test*
        name: Test
        nameWithType: AlteredView.Test
        qualifiedName: AlteredView.Test
      VB:
      - id: Global.AlteredView.Test*
        name: Test
        nameWithType: AlteredView.Test
        qualifiedName: AlteredView.Test
    isDefinition: true
    commentId: Overload:Global.AlteredView.Test
  Global.AlteredView.ShowAlteredByTime*:
    name:
      CSharp:
      - id: Global.AlteredView.ShowAlteredByTime*
        name: ShowAlteredByTime
        nameWithType: AlteredView.ShowAlteredByTime
        qualifiedName: AlteredView.ShowAlteredByTime
      VB:
      - id: Global.AlteredView.ShowAlteredByTime*
        name: ShowAlteredByTime
        nameWithType: AlteredView.ShowAlteredByTime
        qualifiedName: AlteredView.ShowAlteredByTime
    isDefinition: true
    commentId: Overload:Global.AlteredView.ShowAlteredByTime
  Global.AlteredView.UpdateAlteredVisual*:
    name:
      CSharp:
      - id: Global.AlteredView.UpdateAlteredVisual*
        name: UpdateAlteredVisual
        nameWithType: AlteredView.UpdateAlteredVisual
        qualifiedName: AlteredView.UpdateAlteredVisual
      VB:
      - id: Global.AlteredView.UpdateAlteredVisual*
        name: UpdateAlteredVisual
        nameWithType: AlteredView.UpdateAlteredVisual
        qualifiedName: AlteredView.UpdateAlteredVisual
    isDefinition: true
    commentId: Overload:Global.AlteredView.UpdateAlteredVisual
  Global.AlteredView.PassTurn*:
    name:
      CSharp:
      - id: Global.AlteredView.PassTurn*
        name: PassTurn
        nameWithType: AlteredView.PassTurn
        qualifiedName: AlteredView.PassTurn
      VB:
      - id: Global.AlteredView.PassTurn*
        name: PassTurn
        nameWithType: AlteredView.PassTurn
        qualifiedName: AlteredView.PassTurn
    isDefinition: true
    commentId: Overload:Global.AlteredView.PassTurn
  Global.AlteredView:
    name:
      CSharp:
      - id: Global.AlteredView
        name: AlteredView
        nameWithType: AlteredView
        qualifiedName: AlteredView
      VB:
      - id: Global.AlteredView
        name: AlteredView
        nameWithType: AlteredView
        qualifiedName: AlteredView
    isDefinition: true
    commentId: T:Global.AlteredView
  Global.AlteredView.AlteredByTurns:
    name:
      CSharp:
      - id: Global.AlteredView.AlteredByTurns
        name: AlteredView.AlteredByTurns
        nameWithType: AlteredView.AlteredByTurns
        qualifiedName: AlteredView.AlteredByTurns
      VB:
      - id: Global.AlteredView.AlteredByTurns
        name: AlteredView.AlteredByTurns
        nameWithType: AlteredView.AlteredByTurns
        qualifiedName: AlteredView.AlteredByTurns
    isDefinition: true
    commentId: T:Global.AlteredView.AlteredByTurns
  Global.Action:
    name:
      CSharp:
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      VB:
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
    isDefinition: true
  Global.ThirdPersonController:
    name:
      CSharp:
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      VB:
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
    isDefinition: true
    commentId: T:Global.ThirdPersonController
  Global.ChallengePlayerController.RecieveChallenge*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.RecieveChallenge*
        name: RecieveChallenge
        nameWithType: ChallengePlayerController.RecieveChallenge
        qualifiedName: ChallengePlayerController.RecieveChallenge
      VB:
      - id: Global.ChallengePlayerController.RecieveChallenge*
        name: RecieveChallenge
        nameWithType: ChallengePlayerController.RecieveChallenge
        qualifiedName: ChallengePlayerController.RecieveChallenge
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.RecieveChallenge
  Global.ChallengePlayerController.CheckChallenge*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.CheckChallenge*
        name: CheckChallenge
        nameWithType: ChallengePlayerController.CheckChallenge
        qualifiedName: ChallengePlayerController.CheckChallenge
      VB:
      - id: Global.ChallengePlayerController.CheckChallenge*
        name: CheckChallenge
        nameWithType: ChallengePlayerController.CheckChallenge
        qualifiedName: ChallengePlayerController.CheckChallenge
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.CheckChallenge
  Global.ChallengePlayerController.ConfirmMatch*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.ConfirmMatch*
        name: ConfirmMatch
        nameWithType: ChallengePlayerController.ConfirmMatch
        qualifiedName: ChallengePlayerController.ConfirmMatch
      VB:
      - id: Global.ChallengePlayerController.ConfirmMatch*
        name: ConfirmMatch
        nameWithType: ChallengePlayerController.ConfirmMatch
        qualifiedName: ChallengePlayerController.ConfirmMatch
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.ConfirmMatch
  Global.ChallengePlayerController.GenerateRandomMatchId*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.GenerateRandomMatchId*
        name: GenerateRandomMatchId
        nameWithType: ChallengePlayerController.GenerateRandomMatchId
        qualifiedName: ChallengePlayerController.GenerateRandomMatchId
      VB:
      - id: Global.ChallengePlayerController.GenerateRandomMatchId*
        name: GenerateRandomMatchId
        nameWithType: ChallengePlayerController.GenerateRandomMatchId
        qualifiedName: ChallengePlayerController.GenerateRandomMatchId
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.GenerateRandomMatchId
  Global.ChallengePlayerController.SetMatchIdAndChallengeInPlayerData*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.SetMatchIdAndChallengeInPlayerData*
        name: SetMatchIdAndChallengeInPlayerData
        nameWithType: ChallengePlayerController.SetMatchIdAndChallengeInPlayerData
        qualifiedName: ChallengePlayerController.SetMatchIdAndChallengeInPlayerData
      VB:
      - id: Global.ChallengePlayerController.SetMatchIdAndChallengeInPlayerData*
        name: SetMatchIdAndChallengeInPlayerData
        nameWithType: ChallengePlayerController.SetMatchIdAndChallengeInPlayerData
        qualifiedName: ChallengePlayerController.SetMatchIdAndChallengeInPlayerData
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.SetMatchIdAndChallengeInPlayerData
  Global.ChallengePlayerController.BackButtonLogic*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.BackButtonLogic*
        name: BackButtonLogic
        nameWithType: ChallengePlayerController.BackButtonLogic
        qualifiedName: ChallengePlayerController.BackButtonLogic
      VB:
      - id: Global.ChallengePlayerController.BackButtonLogic*
        name: BackButtonLogic
        nameWithType: ChallengePlayerController.BackButtonLogic
        qualifiedName: ChallengePlayerController.BackButtonLogic
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.BackButtonLogic
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{PopupManager.ButtonType,Action}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: PopupManager.ButtonType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: PopupManager.ButtonType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{PopupManager.ButtonType,Action}
  Global.ChallengePlayerController.TimingAcceptChallenge*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.TimingAcceptChallenge*
        name: TimingAcceptChallenge
        nameWithType: ChallengePlayerController.TimingAcceptChallenge
        qualifiedName: ChallengePlayerController.TimingAcceptChallenge
      VB:
      - id: Global.ChallengePlayerController.TimingAcceptChallenge*
        name: TimingAcceptChallenge
        nameWithType: ChallengePlayerController.TimingAcceptChallenge
        qualifiedName: ChallengePlayerController.TimingAcceptChallenge
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.TimingAcceptChallenge
  Global.GetMatchResult:
    name:
      CSharp:
      - id: Global.GetMatchResult
        name: GetMatchResult
        nameWithType: GetMatchResult
        qualifiedName: GetMatchResult
        isExternal: true
      VB:
      - id: Global.GetMatchResult
        name: GetMatchResult
        nameWithType: GetMatchResult
        qualifiedName: GetMatchResult
        isExternal: true
    isDefinition: true
  Global.ChallengePlayerController.WaitforOpponentToConfirm*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.WaitforOpponentToConfirm*
        name: WaitforOpponentToConfirm
        nameWithType: ChallengePlayerController.WaitforOpponentToConfirm
        qualifiedName: ChallengePlayerController.WaitforOpponentToConfirm
      VB:
      - id: Global.ChallengePlayerController.WaitforOpponentToConfirm*
        name: WaitforOpponentToConfirm
        nameWithType: ChallengePlayerController.WaitforOpponentToConfirm
        qualifiedName: ChallengePlayerController.WaitforOpponentToConfirm
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.WaitforOpponentToConfirm
  Global.ChallengePlayerController.MatchCanceledWait*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.MatchCanceledWait*
        name: MatchCanceledWait
        nameWithType: ChallengePlayerController.MatchCanceledWait
        qualifiedName: ChallengePlayerController.MatchCanceledWait
      VB:
      - id: Global.ChallengePlayerController.MatchCanceledWait*
        name: MatchCanceledWait
        nameWithType: ChallengePlayerController.MatchCanceledWait
        qualifiedName: ChallengePlayerController.MatchCanceledWait
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.MatchCanceledWait
  Global.ChallengePlayerController.GetMatchId*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.GetMatchId*
        name: GetMatchId
        nameWithType: ChallengePlayerController.GetMatchId
        qualifiedName: ChallengePlayerController.GetMatchId
      VB:
      - id: Global.ChallengePlayerController.GetMatchId*
        name: GetMatchId
        nameWithType: ChallengePlayerController.GetMatchId
        qualifiedName: ChallengePlayerController.GetMatchId
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.GetMatchId
  Global.ChallengePlayerController.GetMatchResultPayload*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.GetMatchResultPayload*
        name: GetMatchResultPayload
        nameWithType: ChallengePlayerController.GetMatchResultPayload
        qualifiedName: ChallengePlayerController.GetMatchResultPayload
      VB:
      - id: Global.ChallengePlayerController.GetMatchResultPayload*
        name: GetMatchResultPayload
        nameWithType: ChallengePlayerController.GetMatchResultPayload
        qualifiedName: ChallengePlayerController.GetMatchResultPayload
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.GetMatchResultPayload
  Global.ChallengePlayerController.SetOtherPlayerInfo*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.SetOtherPlayerInfo*
        name: SetOtherPlayerInfo
        nameWithType: ChallengePlayerController.SetOtherPlayerInfo
        qualifiedName: ChallengePlayerController.SetOtherPlayerInfo
      VB:
      - id: Global.ChallengePlayerController.SetOtherPlayerInfo*
        name: SetOtherPlayerInfo
        nameWithType: ChallengePlayerController.SetOtherPlayerInfo
        qualifiedName: ChallengePlayerController.SetOtherPlayerInfo
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.SetOtherPlayerInfo
  Global.ChallengePlayerController.ResetAlreadyHasChallenge*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.ResetAlreadyHasChallenge*
        name: ResetAlreadyHasChallenge
        nameWithType: ChallengePlayerController.ResetAlreadyHasChallenge
        qualifiedName: ChallengePlayerController.ResetAlreadyHasChallenge
      VB:
      - id: Global.ChallengePlayerController.ResetAlreadyHasChallenge*
        name: ResetAlreadyHasChallenge
        nameWithType: ChallengePlayerController.ResetAlreadyHasChallenge
        qualifiedName: ChallengePlayerController.ResetAlreadyHasChallenge
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.ResetAlreadyHasChallenge
  Global.ChallengePlayerController.MatchCanceledByChallenged*:
    name:
      CSharp:
      - id: Global.ChallengePlayerController.MatchCanceledByChallenged*
        name: MatchCanceledByChallenged
        nameWithType: ChallengePlayerController.MatchCanceledByChallenged
        qualifiedName: ChallengePlayerController.MatchCanceledByChallenged
      VB:
      - id: Global.ChallengePlayerController.MatchCanceledByChallenged*
        name: MatchCanceledByChallenged
        nameWithType: ChallengePlayerController.MatchCanceledByChallenged
        qualifiedName: ChallengePlayerController.MatchCanceledByChallenged
    isDefinition: true
    commentId: Overload:Global.ChallengePlayerController.MatchCanceledByChallenged
  Global.ChallengePlayerController:
    name:
      CSharp:
      - id: Global.ChallengePlayerController
        name: ChallengePlayerController
        nameWithType: ChallengePlayerController
        qualifiedName: ChallengePlayerController
      VB:
      - id: Global.ChallengePlayerController
        name: ChallengePlayerController
        nameWithType: ChallengePlayerController
        qualifiedName: ChallengePlayerController
    isDefinition: true
    commentId: T:Global.ChallengePlayerController
  Global.MatchConfirmedDto:
    name:
      CSharp:
      - id: Global.MatchConfirmedDto
        name: MatchConfirmedDto
        nameWithType: MatchConfirmedDto
        qualifiedName: MatchConfirmedDto
      VB:
      - id: Global.MatchConfirmedDto
        name: MatchConfirmedDto
        nameWithType: MatchConfirmedDto
        qualifiedName: MatchConfirmedDto
    isDefinition: true
    commentId: T:Global.MatchConfirmedDto
  Global.HeadMessages.ShowMessage*:
    name:
      CSharp:
      - id: Global.HeadMessages.ShowMessage*
        name: ShowMessage
        nameWithType: HeadMessages.ShowMessage
        qualifiedName: HeadMessages.ShowMessage
      VB:
      - id: Global.HeadMessages.ShowMessage*
        name: ShowMessage
        nameWithType: HeadMessages.ShowMessage
        qualifiedName: HeadMessages.ShowMessage
    isDefinition: true
    commentId: Overload:Global.HeadMessages.ShowMessage
  Global.HeadMessages:
    name:
      CSharp:
      - id: Global.HeadMessages
        name: HeadMessages
        nameWithType: HeadMessages
        qualifiedName: HeadMessages
      VB:
      - id: Global.HeadMessages
        name: HeadMessages
        nameWithType: HeadMessages
        qualifiedName: HeadMessages
    isDefinition: true
    commentId: T:Global.HeadMessages
  Global.LookPlayer:
    name:
      CSharp:
      - id: Global.LookPlayer
        name: LookPlayer
        nameWithType: LookPlayer
        qualifiedName: LookPlayer
      VB:
      - id: Global.LookPlayer
        name: LookPlayer
        nameWithType: LookPlayer
        qualifiedName: LookPlayer
    isDefinition: true
    commentId: T:Global.LookPlayer
  System.Collections.Generic.List{Sprite}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Sprite}
  Global.MessageView.ShowMessage*:
    name:
      CSharp:
      - id: Global.MessageView.ShowMessage*
        name: ShowMessage
        nameWithType: MessageView.ShowMessage
        qualifiedName: MessageView.ShowMessage
      VB:
      - id: Global.MessageView.ShowMessage*
        name: ShowMessage
        nameWithType: MessageView.ShowMessage
        qualifiedName: MessageView.ShowMessage
    isDefinition: true
    commentId: Overload:Global.MessageView.ShowMessage
  Global.MessageView:
    name:
      CSharp:
      - id: Global.MessageView
        name: MessageView
        nameWithType: MessageView
        qualifiedName: MessageView
      VB:
      - id: Global.MessageView
        name: MessageView
        nameWithType: MessageView
        qualifiedName: MessageView
    isDefinition: true
    commentId: T:Global.MessageView
  Global.MessageView.Message:
    name:
      CSharp:
      - id: Global.MessageView.Message
        name: MessageView.Message
        nameWithType: MessageView.Message
        qualifiedName: MessageView.Message
      VB:
      - id: Global.MessageView.Message
        name: MessageView.Message
        nameWithType: MessageView.Message
        qualifiedName: MessageView.Message
    isDefinition: true
    commentId: T:Global.MessageView.Message
  Global.PutNightModeForVfx:
    name:
      CSharp:
      - id: Global.PutNightModeForVfx
        name: PutNightModeForVfx
        nameWithType: PutNightModeForVfx
        qualifiedName: PutNightModeForVfx
      VB:
      - id: Global.PutNightModeForVfx
        name: PutNightModeForVfx
        nameWithType: PutNightModeForVfx
        qualifiedName: PutNightModeForVfx
    isDefinition: true
    commentId: T:Global.PutNightModeForVfx
  Global.ShowHideDebug:
    name:
      CSharp:
      - id: Global.ShowHideDebug
        name: ShowHideDebug
        nameWithType: ShowHideDebug
        qualifiedName: ShowHideDebug
      VB:
      - id: Global.ShowHideDebug
        name: ShowHideDebug
        nameWithType: ShowHideDebug
        qualifiedName: ShowHideDebug
    isDefinition: true
    commentId: T:Global.ShowHideDebug
  Global.SkyChanger.TestChangeSky*:
    name:
      CSharp:
      - id: Global.SkyChanger.TestChangeSky*
        name: TestChangeSky
        nameWithType: SkyChanger.TestChangeSky
        qualifiedName: SkyChanger.TestChangeSky
      VB:
      - id: Global.SkyChanger.TestChangeSky*
        name: TestChangeSky
        nameWithType: SkyChanger.TestChangeSky
        qualifiedName: SkyChanger.TestChangeSky
    isDefinition: true
    commentId: Overload:Global.SkyChanger.TestChangeSky
  Global.SkyChanger.ChangeSky*:
    name:
      CSharp:
      - id: Global.SkyChanger.ChangeSky*
        name: ChangeSky
        nameWithType: SkyChanger.ChangeSky
        qualifiedName: SkyChanger.ChangeSky
      VB:
      - id: Global.SkyChanger.ChangeSky*
        name: ChangeSky
        nameWithType: SkyChanger.ChangeSky
        qualifiedName: SkyChanger.ChangeSky
    isDefinition: true
    commentId: Overload:Global.SkyChanger.ChangeSky
  Global.SkyChanger:
    name:
      CSharp:
      - id: Global.SkyChanger
        name: SkyChanger
        nameWithType: SkyChanger
        qualifiedName: SkyChanger
      VB:
      - id: Global.SkyChanger
        name: SkyChanger
        nameWithType: SkyChanger
        qualifiedName: SkyChanger
    isDefinition: true
    commentId: T:Global.SkyChanger
  Global.StopMovementWhenEnable.DisableMovement*:
    name:
      CSharp:
      - id: Global.StopMovementWhenEnable.DisableMovement*
        name: DisableMovement
        nameWithType: StopMovementWhenEnable.DisableMovement
        qualifiedName: StopMovementWhenEnable.DisableMovement
      VB:
      - id: Global.StopMovementWhenEnable.DisableMovement*
        name: DisableMovement
        nameWithType: StopMovementWhenEnable.DisableMovement
        qualifiedName: StopMovementWhenEnable.DisableMovement
    isDefinition: true
    commentId: Overload:Global.StopMovementWhenEnable.DisableMovement
  Global.StopMovementWhenEnable:
    name:
      CSharp:
      - id: Global.StopMovementWhenEnable
        name: StopMovementWhenEnable
        nameWithType: StopMovementWhenEnable
        qualifiedName: StopMovementWhenEnable
      VB:
      - id: Global.StopMovementWhenEnable
        name: StopMovementWhenEnable
        nameWithType: StopMovementWhenEnable
        qualifiedName: StopMovementWhenEnable
    isDefinition: true
    commentId: T:Global.StopMovementWhenEnable
  Global.TMPChangeColor.ChangeColor*:
    name:
      CSharp:
      - id: Global.TMPChangeColor.ChangeColor*
        name: ChangeColor
        nameWithType: TMPChangeColor.ChangeColor
        qualifiedName: TMPChangeColor.ChangeColor
      VB:
      - id: Global.TMPChangeColor.ChangeColor*
        name: ChangeColor
        nameWithType: TMPChangeColor.ChangeColor
        qualifiedName: TMPChangeColor.ChangeColor
    isDefinition: true
    commentId: Overload:Global.TMPChangeColor.ChangeColor
  Global.TMPChangeColor:
    name:
      CSharp:
      - id: Global.TMPChangeColor
        name: TMPChangeColor
        nameWithType: TMPChangeColor
        qualifiedName: TMPChangeColor
      VB:
      - id: Global.TMPChangeColor
        name: TMPChangeColor
        nameWithType: TMPChangeColor
        qualifiedName: TMPChangeColor
    isDefinition: true
    commentId: T:Global.TMPChangeColor
  Global.UIDisolver.ToggleMaximumValius*:
    name:
      CSharp:
      - id: Global.UIDisolver.ToggleMaximumValius*
        name: ToggleMaximumValius
        nameWithType: UIDisolver.ToggleMaximumValius
        qualifiedName: UIDisolver.ToggleMaximumValius
      VB:
      - id: Global.UIDisolver.ToggleMaximumValius*
        name: ToggleMaximumValius
        nameWithType: UIDisolver.ToggleMaximumValius
        qualifiedName: UIDisolver.ToggleMaximumValius
    isDefinition: true
    commentId: Overload:Global.UIDisolver.ToggleMaximumValius
  Global.UIDisolver.SetTargetValue*:
    name:
      CSharp:
      - id: Global.UIDisolver.SetTargetValue*
        name: SetTargetValue
        nameWithType: UIDisolver.SetTargetValue
        qualifiedName: UIDisolver.SetTargetValue
      VB:
      - id: Global.UIDisolver.SetTargetValue*
        name: SetTargetValue
        nameWithType: UIDisolver.SetTargetValue
        qualifiedName: UIDisolver.SetTargetValue
    isDefinition: true
    commentId: Overload:Global.UIDisolver.SetTargetValue
  Global.UIDisolver:
    name:
      CSharp:
      - id: Global.UIDisolver
        name: UIDisolver
        nameWithType: UIDisolver
        qualifiedName: UIDisolver
      VB:
      - id: Global.UIDisolver
        name: UIDisolver
        nameWithType: UIDisolver
        qualifiedName: UIDisolver
    isDefinition: true
    commentId: T:Global.UIDisolver
  Global.VersusPanelController.Show*:
    name:
      CSharp:
      - id: Global.VersusPanelController.Show*
        name: Show
        nameWithType: VersusPanelController.Show
        qualifiedName: VersusPanelController.Show
      VB:
      - id: Global.VersusPanelController.Show*
        name: Show
        nameWithType: VersusPanelController.Show
        qualifiedName: VersusPanelController.Show
    isDefinition: true
    commentId: Overload:Global.VersusPanelController.Show
  System.Collections.Generic.List{CharacterType}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CharacterType}
  Global.VersusPanelController.Init*:
    name:
      CSharp:
      - id: Global.VersusPanelController.Init*
        name: Init
        nameWithType: VersusPanelController.Init
        qualifiedName: VersusPanelController.Init
      VB:
      - id: Global.VersusPanelController.Init*
        name: Init
        nameWithType: VersusPanelController.Init
        qualifiedName: VersusPanelController.Init
    isDefinition: true
    commentId: Overload:Global.VersusPanelController.Init
  Global.VersusPanelController.Hide*:
    name:
      CSharp:
      - id: Global.VersusPanelController.Hide*
        name: Hide
        nameWithType: VersusPanelController.Hide
        qualifiedName: VersusPanelController.Hide
      VB:
      - id: Global.VersusPanelController.Hide*
        name: Hide
        nameWithType: VersusPanelController.Hide
        qualifiedName: VersusPanelController.Hide
    isDefinition: true
    commentId: Overload:Global.VersusPanelController.Hide
  Global.VersusPanelController:
    name:
      CSharp:
      - id: Global.VersusPanelController
        name: VersusPanelController
        nameWithType: VersusPanelController
        qualifiedName: VersusPanelController
      VB:
      - id: Global.VersusPanelController
        name: VersusPanelController
        nameWithType: VersusPanelController
        qualifiedName: VersusPanelController
    isDefinition: true
    commentId: T:Global.VersusPanelController
  Global.VFXPositionEnum:
    name:
      CSharp:
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      VB:
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
    isDefinition: true
    commentId: T:Global.VFXPositionEnum
  Global.TurnsController:
    name:
      CSharp:
      - id: Global.TurnsController
        name: TurnsController
        nameWithType: TurnsController
        qualifiedName: TurnsController
        isExternal: true
      VB:
      - id: Global.TurnsController
        name: TurnsController
        nameWithType: TurnsController
        qualifiedName: TurnsController
        isExternal: true
    isDefinition: true
  Global.VFXInstancer:
    name:
      CSharp:
      - id: Global.VFXInstancer
        name: VFXInstancer
        nameWithType: VFXInstancer
        qualifiedName: VFXInstancer
        isExternal: true
      VB:
      - id: Global.VFXInstancer
        name: VFXInstancer
        nameWithType: VFXInstancer
        qualifiedName: VFXInstancer
        isExternal: true
    isDefinition: true
  Global.VFXtester.CallVFX*:
    name:
      CSharp:
      - id: Global.VFXtester.CallVFX*
        name: CallVFX
        nameWithType: VFXtester.CallVFX
        qualifiedName: VFXtester.CallVFX
      VB:
      - id: Global.VFXtester.CallVFX*
        name: CallVFX
        nameWithType: VFXtester.CallVFX
        qualifiedName: VFXtester.CallVFX
    isDefinition: true
    commentId: Overload:Global.VFXtester.CallVFX
  Global.VFXtester:
    name:
      CSharp:
      - id: Global.VFXtester
        name: VFXtester
        nameWithType: VFXtester
        qualifiedName: VFXtester
      VB:
      - id: Global.VFXtester
        name: VFXtester
        nameWithType: VFXtester
        qualifiedName: VFXtester
    isDefinition: true
    commentId: T:Global.VFXtester
  Global.AK.Wwise.Bank:
    name:
      CSharp:
      - id: Global.AK.Wwise.Bank
        name: AK.Wwise.Bank
        nameWithType: AK.Wwise.Bank
        qualifiedName: AK.Wwise.Bank
        isExternal: true
      VB:
      - id: Global.AK.Wwise.Bank
        name: AK.Wwise.Bank
        nameWithType: AK.Wwise.Bank
        qualifiedName: AK.Wwise.Bank
        isExternal: true
    isDefinition: true
    commentId: '!:Global.AK.Wwise.Bank'
  Global.AK.Wwise.Event:
    name:
      CSharp:
      - id: Global.AK.Wwise.Event
        name: AK.Wwise.Event
        nameWithType: AK.Wwise.Event
        qualifiedName: AK.Wwise.Event
        isExternal: true
      VB:
      - id: Global.AK.Wwise.Event
        name: AK.Wwise.Event
        nameWithType: AK.Wwise.Event
        qualifiedName: AK.Wwise.Event
        isExternal: true
    isDefinition: true
  Global.Footsteps.Start*:
    name:
      CSharp:
      - id: Global.Footsteps.Start*
        name: Start
        nameWithType: Footsteps.Start
        qualifiedName: Footsteps.Start
      VB:
      - id: Global.Footsteps.Start*
        name: Start
        nameWithType: Footsteps.Start
        qualifiedName: Footsteps.Start
    isDefinition: true
    commentId: Overload:Global.Footsteps.Start
  Global.Footsteps.PlayFootSound*:
    name:
      CSharp:
      - id: Global.Footsteps.PlayFootSound*
        name: PlayFootSound
        nameWithType: Footsteps.PlayFootSound
        qualifiedName: Footsteps.PlayFootSound
      VB:
      - id: Global.Footsteps.PlayFootSound*
        name: PlayFootSound
        nameWithType: Footsteps.PlayFootSound
        qualifiedName: Footsteps.PlayFootSound
    isDefinition: true
    commentId: Overload:Global.Footsteps.PlayFootSound
  Global.Footsteps.DetectSurface*:
    name:
      CSharp:
      - id: Global.Footsteps.DetectSurface*
        name: DetectSurface
        nameWithType: Footsteps.DetectSurface
        qualifiedName: Footsteps.DetectSurface
      VB:
      - id: Global.Footsteps.DetectSurface*
        name: DetectSurface
        nameWithType: Footsteps.DetectSurface
        qualifiedName: Footsteps.DetectSurface
    isDefinition: true
    commentId: Overload:Global.Footsteps.DetectSurface
  Global.Footsteps.SetSwitchUsingNames*:
    name:
      CSharp:
      - id: Global.Footsteps.SetSwitchUsingNames*
        name: SetSwitchUsingNames
        nameWithType: Footsteps.SetSwitchUsingNames
        qualifiedName: Footsteps.SetSwitchUsingNames
      VB:
      - id: Global.Footsteps.SetSwitchUsingNames*
        name: SetSwitchUsingNames
        nameWithType: Footsteps.SetSwitchUsingNames
        qualifiedName: Footsteps.SetSwitchUsingNames
    isDefinition: true
    commentId: Overload:Global.Footsteps.SetSwitchUsingNames
  Global.Footsteps:
    name:
      CSharp:
      - id: Global.Footsteps
        name: Footsteps
        nameWithType: Footsteps
        qualifiedName: Footsteps
      VB:
      - id: Global.Footsteps
        name: Footsteps
        nameWithType: Footsteps
        qualifiedName: Footsteps
    isDefinition: true
    commentId: T:Global.Footsteps
  Global.IBracketsTournament.ShowPanelBracketsView*:
    name:
      CSharp:
      - id: Global.IBracketsTournament.ShowPanelBracketsView*
        name: ShowPanelBracketsView
        nameWithType: IBracketsTournament.ShowPanelBracketsView
        qualifiedName: IBracketsTournament.ShowPanelBracketsView
      VB:
      - id: Global.IBracketsTournament.ShowPanelBracketsView*
        name: ShowPanelBracketsView
        nameWithType: IBracketsTournament.ShowPanelBracketsView
        qualifiedName: IBracketsTournament.ShowPanelBracketsView
    isDefinition: true
    commentId: Overload:Global.IBracketsTournament.ShowPanelBracketsView
  Global.IBracketsTournament.SetAlreadyConnection*:
    name:
      CSharp:
      - id: Global.IBracketsTournament.SetAlreadyConnection*
        name: SetAlreadyConnection
        nameWithType: IBracketsTournament.SetAlreadyConnection
        qualifiedName: IBracketsTournament.SetAlreadyConnection
      VB:
      - id: Global.IBracketsTournament.SetAlreadyConnection*
        name: SetAlreadyConnection
        nameWithType: IBracketsTournament.SetAlreadyConnection
        qualifiedName: IBracketsTournament.SetAlreadyConnection
    isDefinition: true
    commentId: Overload:Global.IBracketsTournament.SetAlreadyConnection
  Global.CheckTournamentInscription:
    name:
      CSharp:
      - id: Global.CheckTournamentInscription
        name: CheckTournamentInscription
        nameWithType: CheckTournamentInscription
        qualifiedName: CheckTournamentInscription
      VB:
      - id: Global.CheckTournamentInscription
        name: CheckTournamentInscription
        nameWithType: CheckTournamentInscription
        qualifiedName: CheckTournamentInscription
    isDefinition: true
    commentId: T:Global.CheckTournamentInscription
  Global.IBracketsTournament.CheckTournamentInscription*:
    name:
      CSharp:
      - id: Global.IBracketsTournament.CheckTournamentInscription*
        name: CheckTournamentInscription
        nameWithType: IBracketsTournament.CheckTournamentInscription
        qualifiedName: IBracketsTournament.CheckTournamentInscription
      VB:
      - id: Global.IBracketsTournament.CheckTournamentInscription*
        name: CheckTournamentInscription
        nameWithType: IBracketsTournament.CheckTournamentInscription
        qualifiedName: IBracketsTournament.CheckTournamentInscription
    isDefinition: true
    commentId: Overload:Global.IBracketsTournament.CheckTournamentInscription
  Global.CheckTournamentStateController:
    name:
      CSharp:
      - id: Global.CheckTournamentStateController
        name: CheckTournamentStateController
        nameWithType: CheckTournamentStateController
        qualifiedName: CheckTournamentStateController
      VB:
      - id: Global.CheckTournamentStateController
        name: CheckTournamentStateController
        nameWithType: CheckTournamentStateController
        qualifiedName: CheckTournamentStateController
    isDefinition: true
    commentId: T:Global.CheckTournamentStateController
  Global.IBracketsTournament.CheckTournamentStateController*:
    name:
      CSharp:
      - id: Global.IBracketsTournament.CheckTournamentStateController*
        name: CheckTournamentStateController
        nameWithType: IBracketsTournament.CheckTournamentStateController
        qualifiedName: IBracketsTournament.CheckTournamentStateController
      VB:
      - id: Global.IBracketsTournament.CheckTournamentStateController*
        name: CheckTournamentStateController
        nameWithType: IBracketsTournament.CheckTournamentStateController
        qualifiedName: IBracketsTournament.CheckTournamentStateController
    isDefinition: true
    commentId: Overload:Global.IBracketsTournament.CheckTournamentStateController
  Global.IBracketsTournament.OnTournamentEnded*:
    name:
      CSharp:
      - id: Global.IBracketsTournament.OnTournamentEnded*
        name: OnTournamentEnded
        nameWithType: IBracketsTournament.OnTournamentEnded
        qualifiedName: IBracketsTournament.OnTournamentEnded
      VB:
      - id: Global.IBracketsTournament.OnTournamentEnded*
        name: OnTournamentEnded
        nameWithType: IBracketsTournament.OnTournamentEnded
        qualifiedName: IBracketsTournament.OnTournamentEnded
    isDefinition: true
    commentId: Overload:Global.IBracketsTournament.OnTournamentEnded
  Global.IBracketsTournament:
    name:
      CSharp:
      - id: Global.IBracketsTournament
        name: IBracketsTournament
        nameWithType: IBracketsTournament
        qualifiedName: IBracketsTournament
      VB:
      - id: Global.IBracketsTournament
        name: IBracketsTournament
        nameWithType: IBracketsTournament
        qualifiedName: IBracketsTournament
    isDefinition: true
    commentId: T:Global.IBracketsTournament
  Global.IService:
    name:
      CSharp:
      - id: Global.IService
        name: IService
        nameWithType: IService
        qualifiedName: IService
        isExternal: true
      VB:
      - id: Global.IService
        name: IService
        nameWithType: IService
        qualifiedName: IService
        isExternal: true
    isDefinition: true
  Global.TournamentBracketsShowController:
    name:
      CSharp:
      - id: Global.TournamentBracketsShowController
        name: TournamentBracketsShowController
        nameWithType: TournamentBracketsShowController
        qualifiedName: TournamentBracketsShowController
        isExternal: true
      VB:
      - id: Global.TournamentBracketsShowController
        name: TournamentBracketsShowController
        nameWithType: TournamentBracketsShowController
        qualifiedName: TournamentBracketsShowController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.TournamentBracketsShowController'
  Global.BracketsTournamentManager.CheckTournamentInscription*:
    name:
      CSharp:
      - id: Global.BracketsTournamentManager.CheckTournamentInscription*
        name: CheckTournamentInscription
        nameWithType: BracketsTournamentManager.CheckTournamentInscription
        qualifiedName: BracketsTournamentManager.CheckTournamentInscription
      VB:
      - id: Global.BracketsTournamentManager.CheckTournamentInscription*
        name: CheckTournamentInscription
        nameWithType: BracketsTournamentManager.CheckTournamentInscription
        qualifiedName: BracketsTournamentManager.CheckTournamentInscription
    isDefinition: true
    commentId: Overload:Global.BracketsTournamentManager.CheckTournamentInscription
  Global.IBracketsTournament.CheckTournamentInscription:
    name:
      CSharp:
      - id: Global.IBracketsTournament.CheckTournamentInscription
        name: CheckTournamentInscription
        nameWithType: IBracketsTournament.CheckTournamentInscription
        qualifiedName: IBracketsTournament.CheckTournamentInscription
      VB:
      - id: Global.IBracketsTournament.CheckTournamentInscription
        name: CheckTournamentInscription
        nameWithType: IBracketsTournament.CheckTournamentInscription
        qualifiedName: IBracketsTournament.CheckTournamentInscription
    isDefinition: true
    parent: Global.IBracketsTournament
    commentId: P:Global.IBracketsTournament.CheckTournamentInscription
  Global.BracketsTournamentManager.CheckTournamentStateController*:
    name:
      CSharp:
      - id: Global.BracketsTournamentManager.CheckTournamentStateController*
        name: CheckTournamentStateController
        nameWithType: BracketsTournamentManager.CheckTournamentStateController
        qualifiedName: BracketsTournamentManager.CheckTournamentStateController
      VB:
      - id: Global.BracketsTournamentManager.CheckTournamentStateController*
        name: CheckTournamentStateController
        nameWithType: BracketsTournamentManager.CheckTournamentStateController
        qualifiedName: BracketsTournamentManager.CheckTournamentStateController
    isDefinition: true
    commentId: Overload:Global.BracketsTournamentManager.CheckTournamentStateController
  Global.IBracketsTournament.CheckTournamentStateController:
    name:
      CSharp:
      - id: Global.IBracketsTournament.CheckTournamentStateController
        name: CheckTournamentStateController
        nameWithType: IBracketsTournament.CheckTournamentStateController
        qualifiedName: IBracketsTournament.CheckTournamentStateController
      VB:
      - id: Global.IBracketsTournament.CheckTournamentStateController
        name: CheckTournamentStateController
        nameWithType: IBracketsTournament.CheckTournamentStateController
        qualifiedName: IBracketsTournament.CheckTournamentStateController
    isDefinition: true
    parent: Global.IBracketsTournament
    commentId: P:Global.IBracketsTournament.CheckTournamentStateController
  Global.BracketsTournamentManager.OnTournamentEnded*:
    name:
      CSharp:
      - id: Global.BracketsTournamentManager.OnTournamentEnded*
        name: OnTournamentEnded
        nameWithType: BracketsTournamentManager.OnTournamentEnded
        qualifiedName: BracketsTournamentManager.OnTournamentEnded
      VB:
      - id: Global.BracketsTournamentManager.OnTournamentEnded*
        name: OnTournamentEnded
        nameWithType: BracketsTournamentManager.OnTournamentEnded
        qualifiedName: BracketsTournamentManager.OnTournamentEnded
    isDefinition: true
    commentId: Overload:Global.BracketsTournamentManager.OnTournamentEnded
  Global.IBracketsTournament.OnTournamentEnded:
    name:
      CSharp:
      - id: Global.IBracketsTournament.OnTournamentEnded
        name: OnTournamentEnded
        nameWithType: IBracketsTournament.OnTournamentEnded
        qualifiedName: IBracketsTournament.OnTournamentEnded
      VB:
      - id: Global.IBracketsTournament.OnTournamentEnded
        name: OnTournamentEnded
        nameWithType: IBracketsTournament.OnTournamentEnded
        qualifiedName: IBracketsTournament.OnTournamentEnded
    isDefinition: true
    parent: Global.IBracketsTournament
    commentId: P:Global.IBracketsTournament.OnTournamentEnded
  Global.BracketsTournamentManager.IsReady*:
    name:
      CSharp:
      - id: Global.BracketsTournamentManager.IsReady*
        name: IsReady
        nameWithType: BracketsTournamentManager.IsReady
        qualifiedName: BracketsTournamentManager.IsReady
      VB:
      - id: Global.BracketsTournamentManager.IsReady*
        name: IsReady
        nameWithType: BracketsTournamentManager.IsReady
        qualifiedName: BracketsTournamentManager.IsReady
    isDefinition: true
    commentId: Overload:Global.BracketsTournamentManager.IsReady
  Global.BracketsTournamentManager.Awake*:
    name:
      CSharp:
      - id: Global.BracketsTournamentManager.Awake*
        name: Awake
        nameWithType: BracketsTournamentManager.Awake
        qualifiedName: BracketsTournamentManager.Awake
      VB:
      - id: Global.BracketsTournamentManager.Awake*
        name: Awake
        nameWithType: BracketsTournamentManager.Awake
        qualifiedName: BracketsTournamentManager.Awake
    isDefinition: true
    commentId: Overload:Global.BracketsTournamentManager.Awake
  Global.BracketsTournamentManager.SetAlreadyConnection*:
    name:
      CSharp:
      - id: Global.BracketsTournamentManager.SetAlreadyConnection*
        name: SetAlreadyConnection
        nameWithType: BracketsTournamentManager.SetAlreadyConnection
        qualifiedName: BracketsTournamentManager.SetAlreadyConnection
      VB:
      - id: Global.BracketsTournamentManager.SetAlreadyConnection*
        name: SetAlreadyConnection
        nameWithType: BracketsTournamentManager.SetAlreadyConnection
        qualifiedName: BracketsTournamentManager.SetAlreadyConnection
    isDefinition: true
    commentId: Overload:Global.BracketsTournamentManager.SetAlreadyConnection
  Global.IBracketsTournament.SetAlreadyConnection(System.Boolean):
    name:
      CSharp:
      - id: Global.IBracketsTournament.SetAlreadyConnection(System.Boolean)
        name: SetAlreadyConnection
        nameWithType: IBracketsTournament.SetAlreadyConnection
        qualifiedName: IBracketsTournament.SetAlreadyConnection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.IBracketsTournament.SetAlreadyConnection(System.Boolean)
        name: SetAlreadyConnection
        nameWithType: IBracketsTournament.SetAlreadyConnection
        qualifiedName: IBracketsTournament.SetAlreadyConnection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.IBracketsTournament
    commentId: M:Global.IBracketsTournament.SetAlreadyConnection(System.Boolean)
  Global.BracketsTournamentManager.RecheckConection*:
    name:
      CSharp:
      - id: Global.BracketsTournamentManager.RecheckConection*
        name: RecheckConection
        nameWithType: BracketsTournamentManager.RecheckConection
        qualifiedName: BracketsTournamentManager.RecheckConection
      VB:
      - id: Global.BracketsTournamentManager.RecheckConection*
        name: RecheckConection
        nameWithType: BracketsTournamentManager.RecheckConection
        qualifiedName: BracketsTournamentManager.RecheckConection
    isDefinition: true
    commentId: Overload:Global.BracketsTournamentManager.RecheckConection
  Global.BracketsTournamentManager.ShowPanelBracketsView*:
    name:
      CSharp:
      - id: Global.BracketsTournamentManager.ShowPanelBracketsView*
        name: ShowPanelBracketsView
        nameWithType: BracketsTournamentManager.ShowPanelBracketsView
        qualifiedName: BracketsTournamentManager.ShowPanelBracketsView
      VB:
      - id: Global.BracketsTournamentManager.ShowPanelBracketsView*
        name: ShowPanelBracketsView
        nameWithType: BracketsTournamentManager.ShowPanelBracketsView
        qualifiedName: BracketsTournamentManager.ShowPanelBracketsView
    isDefinition: true
    commentId: Overload:Global.BracketsTournamentManager.ShowPanelBracketsView
  Global.IBracketsTournament.ShowPanelBracketsView(System.Boolean):
    name:
      CSharp:
      - id: Global.IBracketsTournament.ShowPanelBracketsView(System.Boolean)
        name: ShowPanelBracketsView
        nameWithType: IBracketsTournament.ShowPanelBracketsView
        qualifiedName: IBracketsTournament.ShowPanelBracketsView
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.IBracketsTournament.ShowPanelBracketsView(System.Boolean)
        name: ShowPanelBracketsView
        nameWithType: IBracketsTournament.ShowPanelBracketsView
        qualifiedName: IBracketsTournament.ShowPanelBracketsView
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.IBracketsTournament
    commentId: M:Global.IBracketsTournament.ShowPanelBracketsView(System.Boolean)
  Global.BracketsTournamentManager:
    name:
      CSharp:
      - id: Global.BracketsTournamentManager
        name: BracketsTournamentManager
        nameWithType: BracketsTournamentManager
        qualifiedName: BracketsTournamentManager
      VB:
      - id: Global.BracketsTournamentManager
        name: BracketsTournamentManager
        nameWithType: BracketsTournamentManager
        qualifiedName: BracketsTournamentManager
    isDefinition: true
    commentId: T:Global.BracketsTournamentManager
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{System.Boolean}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Boolean}
  Global.CheckTournamentStateController.CheckTournamentState*:
    name:
      CSharp:
      - id: Global.CheckTournamentStateController.CheckTournamentState*
        name: CheckTournamentState
        nameWithType: CheckTournamentStateController.CheckTournamentState
        qualifiedName: CheckTournamentStateController.CheckTournamentState
      VB:
      - id: Global.CheckTournamentStateController.CheckTournamentState*
        name: CheckTournamentState
        nameWithType: CheckTournamentStateController.CheckTournamentState
        qualifiedName: CheckTournamentStateController.CheckTournamentState
    isDefinition: true
    commentId: Overload:Global.CheckTournamentStateController.CheckTournamentState
  Global.CheckTournamentStateController.WaitForSeconds*:
    name:
      CSharp:
      - id: Global.CheckTournamentStateController.WaitForSeconds*
        name: WaitForSeconds
        nameWithType: CheckTournamentStateController.WaitForSeconds
        qualifiedName: CheckTournamentStateController.WaitForSeconds
      VB:
      - id: Global.CheckTournamentStateController.WaitForSeconds*
        name: WaitForSeconds
        nameWithType: CheckTournamentStateController.WaitForSeconds
        qualifiedName: CheckTournamentStateController.WaitForSeconds
    isDefinition: true
    commentId: Overload:Global.CheckTournamentStateController.WaitForSeconds
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  Global.CheckStateOfTournamentDto:
    name:
      CSharp:
      - id: Global.CheckStateOfTournamentDto
        name: CheckStateOfTournamentDto
        nameWithType: CheckStateOfTournamentDto
        qualifiedName: CheckStateOfTournamentDto
      VB:
      - id: Global.CheckStateOfTournamentDto
        name: CheckStateOfTournamentDto
        nameWithType: CheckStateOfTournamentDto
        qualifiedName: CheckStateOfTournamentDto
    isDefinition: true
    commentId: T:Global.CheckStateOfTournamentDto
  Global.BracketsData:
    name:
      CSharp:
      - id: Global.BracketsData
        name: BracketsData
        nameWithType: BracketsData
        qualifiedName: BracketsData
      VB:
      - id: Global.BracketsData
        name: BracketsData
        nameWithType: BracketsData
        qualifiedName: BracketsData
    isDefinition: true
    commentId: T:Global.BracketsData
  System.Collections.Generic.Dictionary{System.String,BracketsData}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BracketsData
        name: BracketsData
        nameWithType: BracketsData
        qualifiedName: BracketsData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BracketsData
        name: BracketsData
        nameWithType: BracketsData
        qualifiedName: BracketsData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,BracketsData}
  Global.StageBracketData:
    name:
      CSharp:
      - id: Global.StageBracketData
        name: StageBracketData
        nameWithType: StageBracketData
        qualifiedName: StageBracketData
      VB:
      - id: Global.StageBracketData
        name: StageBracketData
        nameWithType: StageBracketData
        qualifiedName: StageBracketData
    isDefinition: true
    commentId: T:Global.StageBracketData
  System.Collections.Generic.Dictionary{System.String,StageBracketData}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.StageBracketData
        name: StageBracketData
        nameWithType: StageBracketData
        qualifiedName: StageBracketData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.StageBracketData
        name: StageBracketData
        nameWithType: StageBracketData
        qualifiedName: StageBracketData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,StageBracketData}
  Global.TournamentBracketsData:
    name:
      CSharp:
      - id: Global.TournamentBracketsData
        name: TournamentBracketsData
        nameWithType: TournamentBracketsData
        qualifiedName: TournamentBracketsData
      VB:
      - id: Global.TournamentBracketsData
        name: TournamentBracketsData
        nameWithType: TournamentBracketsData
        qualifiedName: TournamentBracketsData
    isDefinition: true
    commentId: T:Global.TournamentBracketsData
  Global.ActionTypeEnum:
    name:
      CSharp:
      - id: Global.ActionTypeEnum
        name: ActionTypeEnum
        nameWithType: ActionTypeEnum
        qualifiedName: ActionTypeEnum
      VB:
      - id: Global.ActionTypeEnum
        name: ActionTypeEnum
        nameWithType: ActionTypeEnum
        qualifiedName: ActionTypeEnum
    isDefinition: true
    commentId: T:Global.ActionTypeEnum
  Global.ShinseiStatsEnum:
    name:
      CSharp:
      - id: Global.ShinseiStatsEnum
        name: ShinseiStatsEnum
        nameWithType: ShinseiStatsEnum
        qualifiedName: ShinseiStatsEnum
      VB:
      - id: Global.ShinseiStatsEnum
        name: ShinseiStatsEnum
        nameWithType: ShinseiStatsEnum
        qualifiedName: ShinseiStatsEnum
    isDefinition: true
    commentId: T:Global.ShinseiStatsEnum
  Global.TypesOfTerrainEnum:
    name:
      CSharp:
      - id: Global.TypesOfTerrainEnum
        name: TypesOfTerrainEnum
        nameWithType: TypesOfTerrainEnum
        qualifiedName: TypesOfTerrainEnum
      VB:
      - id: Global.TypesOfTerrainEnum
        name: TypesOfTerrainEnum
        nameWithType: TypesOfTerrainEnum
        qualifiedName: TypesOfTerrainEnum
    isDefinition: true
    commentId: T:Global.TypesOfTerrainEnum
  Global.AlteredStateEnum:
    name:
      CSharp:
      - id: Global.AlteredStateEnum
        name: AlteredStateEnum
        nameWithType: AlteredStateEnum
        qualifiedName: AlteredStateEnum
      VB:
      - id: Global.AlteredStateEnum
        name: AlteredStateEnum
        nameWithType: AlteredStateEnum
        qualifiedName: AlteredStateEnum
    isDefinition: true
    commentId: T:Global.AlteredStateEnum
  Global.CriticsCheck:
    name:
      CSharp:
      - id: Global.CriticsCheck
        name: CriticsCheck
        nameWithType: CriticsCheck
        qualifiedName: CriticsCheck
      VB:
      - id: Global.CriticsCheck
        name: CriticsCheck
        nameWithType: CriticsCheck
        qualifiedName: CriticsCheck
    isDefinition: true
    commentId: T:Global.CriticsCheck
  Global.BattleNotificationSystem:
    name:
      CSharp:
      - id: Global.BattleNotificationSystem
        name: BattleNotificationSystem
        nameWithType: BattleNotificationSystem
        qualifiedName: BattleNotificationSystem
      VB:
      - id: Global.BattleNotificationSystem
        name: BattleNotificationSystem
        nameWithType: BattleNotificationSystem
        qualifiedName: BattleNotificationSystem
    isDefinition: true
    commentId: T:Global.BattleNotificationSystem
  Global.EventSystem:
    name:
      CSharp:
      - id: Global.EventSystem
        name: EventSystem
        nameWithType: EventSystem
        qualifiedName: EventSystem
        isExternal: true
      VB:
      - id: Global.EventSystem
        name: EventSystem
        nameWithType: EventSystem
        qualifiedName: EventSystem
        isExternal: true
    isDefinition: true
    commentId: '!:Global.EventSystem'
  Global.ChatBadWordsDB:
    name:
      CSharp:
      - id: Global.ChatBadWordsDB
        name: ChatBadWordsDB
        nameWithType: ChatBadWordsDB
        qualifiedName: ChatBadWordsDB
      VB:
      - id: Global.ChatBadWordsDB
        name: ChatBadWordsDB
        nameWithType: ChatBadWordsDB
        qualifiedName: ChatBadWordsDB
    isDefinition: true
    commentId: T:Global.ChatBadWordsDB
  Global.ChatTextBox.CallStartEditing*:
    name:
      CSharp:
      - id: Global.ChatTextBox.CallStartEditing*
        name: CallStartEditing
        nameWithType: ChatTextBox.CallStartEditing
        qualifiedName: ChatTextBox.CallStartEditing
      VB:
      - id: Global.ChatTextBox.CallStartEditing*
        name: CallStartEditing
        nameWithType: ChatTextBox.CallStartEditing
        qualifiedName: ChatTextBox.CallStartEditing
    isDefinition: true
    commentId: Overload:Global.ChatTextBox.CallStartEditing
  Global.ChatTextBox.CallEndEditing*:
    name:
      CSharp:
      - id: Global.ChatTextBox.CallEndEditing*
        name: CallEndEditing
        nameWithType: ChatTextBox.CallEndEditing
        qualifiedName: ChatTextBox.CallEndEditing
      VB:
      - id: Global.ChatTextBox.CallEndEditing*
        name: CallEndEditing
        nameWithType: ChatTextBox.CallEndEditing
        qualifiedName: ChatTextBox.CallEndEditing
    isDefinition: true
    commentId: Overload:Global.ChatTextBox.CallEndEditing
  Global.ChatTextBox.ToggleShowFilter*:
    name:
      CSharp:
      - id: Global.ChatTextBox.ToggleShowFilter*
        name: ToggleShowFilter
        nameWithType: ChatTextBox.ToggleShowFilter
        qualifiedName: ChatTextBox.ToggleShowFilter
      VB:
      - id: Global.ChatTextBox.ToggleShowFilter*
        name: ToggleShowFilter
        nameWithType: ChatTextBox.ToggleShowFilter
        qualifiedName: ChatTextBox.ToggleShowFilter
    isDefinition: true
    commentId: Overload:Global.ChatTextBox.ToggleShowFilter
  Global.ChatTextBox.Update*:
    name:
      CSharp:
      - id: Global.ChatTextBox.Update*
        name: Update
        nameWithType: ChatTextBox.Update
        qualifiedName: ChatTextBox.Update
      VB:
      - id: Global.ChatTextBox.Update*
        name: Update
        nameWithType: ChatTextBox.Update
        qualifiedName: ChatTextBox.Update
    isDefinition: true
    commentId: Overload:Global.ChatTextBox.Update
  Global.ChatTextBox.DisableMovement*:
    name:
      CSharp:
      - id: Global.ChatTextBox.DisableMovement*
        name: DisableMovement
        nameWithType: ChatTextBox.DisableMovement
        qualifiedName: ChatTextBox.DisableMovement
      VB:
      - id: Global.ChatTextBox.DisableMovement*
        name: DisableMovement
        nameWithType: ChatTextBox.DisableMovement
        qualifiedName: ChatTextBox.DisableMovement
    isDefinition: true
    commentId: Overload:Global.ChatTextBox.DisableMovement
  Global.ChatTextBox.ShowHide*:
    name:
      CSharp:
      - id: Global.ChatTextBox.ShowHide*
        name: ShowHide
        nameWithType: ChatTextBox.ShowHide
        qualifiedName: ChatTextBox.ShowHide
      VB:
      - id: Global.ChatTextBox.ShowHide*
        name: ShowHide
        nameWithType: ChatTextBox.ShowHide
        qualifiedName: ChatTextBox.ShowHide
    isDefinition: true
    commentId: Overload:Global.ChatTextBox.ShowHide
  Global.ChatTextBox.SendLocalMessage*:
    name:
      CSharp:
      - id: Global.ChatTextBox.SendLocalMessage*
        name: SendLocalMessage
        nameWithType: ChatTextBox.SendLocalMessage
        qualifiedName: ChatTextBox.SendLocalMessage
      VB:
      - id: Global.ChatTextBox.SendLocalMessage*
        name: SendLocalMessage
        nameWithType: ChatTextBox.SendLocalMessage
        qualifiedName: ChatTextBox.SendLocalMessage
    isDefinition: true
    commentId: Overload:Global.ChatTextBox.SendLocalMessage
  Global.ChatMessagePayload:
    name:
      CSharp:
      - id: Global.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: ChatMessagePayload
        isExternal: true
      VB:
      - id: Global.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: ChatMessagePayload
        isExternal: true
    isDefinition: true
  Global.ChatTextBox.SendMessage*:
    name:
      CSharp:
      - id: Global.ChatTextBox.SendMessage*
        name: SendMessage
        nameWithType: ChatTextBox.SendMessage
        qualifiedName: ChatTextBox.SendMessage
      VB:
      - id: Global.ChatTextBox.SendMessage*
        name: SendMessage
        nameWithType: ChatTextBox.SendMessage
        qualifiedName: ChatTextBox.SendMessage
    isDefinition: true
    commentId: Overload:Global.ChatTextBox.SendMessage
  Global.ChatTextBox.CheckForBadWords*:
    name:
      CSharp:
      - id: Global.ChatTextBox.CheckForBadWords*
        name: CheckForBadWords
        nameWithType: ChatTextBox.CheckForBadWords
        qualifiedName: ChatTextBox.CheckForBadWords
      VB:
      - id: Global.ChatTextBox.CheckForBadWords*
        name: CheckForBadWords
        nameWithType: ChatTextBox.CheckForBadWords
        qualifiedName: ChatTextBox.CheckForBadWords
    isDefinition: true
    commentId: Overload:Global.ChatTextBox.CheckForBadWords
  Global.ChatTextBox:
    name:
      CSharp:
      - id: Global.ChatTextBox
        name: ChatTextBox
        nameWithType: ChatTextBox
        qualifiedName: ChatTextBox
      VB:
      - id: Global.ChatTextBox
        name: ChatTextBox
        nameWithType: ChatTextBox
        qualifiedName: ChatTextBox
    isDefinition: true
    commentId: T:Global.ChatTextBox
  System.Collections.Generic.List{System.Collections.Generic.List{System.String}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{System.String}}
  Global.CombatFirebasePetitions.SetMatchId*:
    name:
      CSharp:
      - id: Global.CombatFirebasePetitions.SetMatchId*
        name: SetMatchId
        nameWithType: CombatFirebasePetitions.SetMatchId
        qualifiedName: CombatFirebasePetitions.SetMatchId
      VB:
      - id: Global.CombatFirebasePetitions.SetMatchId*
        name: SetMatchId
        nameWithType: CombatFirebasePetitions.SetMatchId
        qualifiedName: CombatFirebasePetitions.SetMatchId
    isDefinition: true
    commentId: Overload:Global.CombatFirebasePetitions.SetMatchId
  Global.OrderMessage:
    name:
      CSharp:
      - id: Global.OrderMessage
        name: OrderMessage
        nameWithType: OrderMessage
        qualifiedName: OrderMessage
      VB:
      - id: Global.OrderMessage
        name: OrderMessage
        nameWithType: OrderMessage
        qualifiedName: OrderMessage
    isDefinition: true
    commentId: T:Global.OrderMessage
  Global.Action`1:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.Action{System.Boolean}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.Boolean}'
  Global.CombatFirebasePetitions.UpdateDataPetition*:
    name:
      CSharp:
      - id: Global.CombatFirebasePetitions.UpdateDataPetition*
        name: UpdateDataPetition
        nameWithType: CombatFirebasePetitions.UpdateDataPetition
        qualifiedName: CombatFirebasePetitions.UpdateDataPetition
      VB:
      - id: Global.CombatFirebasePetitions.UpdateDataPetition*
        name: UpdateDataPetition
        nameWithType: CombatFirebasePetitions.UpdateDataPetition
        qualifiedName: CombatFirebasePetitions.UpdateDataPetition
    isDefinition: true
    commentId: Overload:Global.CombatFirebasePetitions.UpdateDataPetition
  Global.CombatFirebasePetitions.DeleteDataPetition*:
    name:
      CSharp:
      - id: Global.CombatFirebasePetitions.DeleteDataPetition*
        name: DeleteDataPetition
        nameWithType: CombatFirebasePetitions.DeleteDataPetition
        qualifiedName: CombatFirebasePetitions.DeleteDataPetition
      VB:
      - id: Global.CombatFirebasePetitions.DeleteDataPetition*
        name: DeleteDataPetition
        nameWithType: CombatFirebasePetitions.DeleteDataPetition
        qualifiedName: CombatFirebasePetitions.DeleteDataPetition
    isDefinition: true
    commentId: Overload:Global.CombatFirebasePetitions.DeleteDataPetition
  Global.Action{System.Collections.Generic.Dictionary{System.String,OrderMessage}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.OrderMessage
        name: OrderMessage
        nameWithType: OrderMessage
        qualifiedName: OrderMessage
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.OrderMessage
        name: OrderMessage
        nameWithType: OrderMessage
        qualifiedName: OrderMessage
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.Collections.Generic.Dictionary{System.String,OrderMessage}}'
  Global.CombatFirebasePetitions.GetDataPetition*:
    name:
      CSharp:
      - id: Global.CombatFirebasePetitions.GetDataPetition*
        name: GetDataPetition
        nameWithType: CombatFirebasePetitions.GetDataPetition
        qualifiedName: CombatFirebasePetitions.GetDataPetition
      VB:
      - id: Global.CombatFirebasePetitions.GetDataPetition*
        name: GetDataPetition
        nameWithType: CombatFirebasePetitions.GetDataPetition
        qualifiedName: CombatFirebasePetitions.GetDataPetition
    isDefinition: true
    commentId: Overload:Global.CombatFirebasePetitions.GetDataPetition
  Global.CombatFirebasePetitions:
    name:
      CSharp:
      - id: Global.CombatFirebasePetitions
        name: CombatFirebasePetitions
        nameWithType: CombatFirebasePetitions
        qualifiedName: CombatFirebasePetitions
      VB:
      - id: Global.CombatFirebasePetitions
        name: CombatFirebasePetitions
        nameWithType: CombatFirebasePetitions
        qualifiedName: CombatFirebasePetitions
    isDefinition: true
    commentId: T:Global.CombatFirebasePetitions
  Global.FirebasePetitionType:
    name:
      CSharp:
      - id: Global.FirebasePetitionType
        name: FirebasePetitionType
        nameWithType: FirebasePetitionType
        qualifiedName: FirebasePetitionType
      VB:
      - id: Global.FirebasePetitionType
        name: FirebasePetitionType
        nameWithType: FirebasePetitionType
        qualifiedName: FirebasePetitionType
    isDefinition: true
    commentId: T:Global.FirebasePetitionType
  System.Collections.Generic.List{CombatPlayer}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CombatPlayer
        name: CombatPlayer
        nameWithType: CombatPlayer
        qualifiedName: CombatPlayer
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CombatPlayer
        name: CombatPlayer
        nameWithType: CombatPlayer
        qualifiedName: CombatPlayer
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CombatPlayer}
  Global.MatchData:
    name:
      CSharp:
      - id: Global.MatchData
        name: MatchData
        nameWithType: MatchData
        qualifiedName: MatchData
      VB:
      - id: Global.MatchData
        name: MatchData
        nameWithType: MatchData
        qualifiedName: MatchData
    isDefinition: true
    commentId: T:Global.MatchData
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  Global.CharacterType:
    name:
      CSharp:
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      VB:
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
    isDefinition: true
  System.Collections.Generic.Dictionary{AlteredStateEnum,AlteredStateData}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.AlteredStateEnum
        name: AlteredStateEnum
        nameWithType: AlteredStateEnum
        qualifiedName: AlteredStateEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.AlteredStateData
        name: AlteredStateData
        nameWithType: AlteredStateData
        qualifiedName: AlteredStateData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.AlteredStateEnum
        name: AlteredStateEnum
        nameWithType: AlteredStateEnum
        qualifiedName: AlteredStateEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.AlteredStateData
        name: AlteredStateData
        nameWithType: AlteredStateData
        qualifiedName: AlteredStateData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{AlteredStateEnum,AlteredStateData}
  Global.RarityType:
    name:
      CSharp:
      - id: Global.RarityType
        name: RarityType
        nameWithType: RarityType
        qualifiedName: RarityType
      VB:
      - id: Global.RarityType
        name: RarityType
        nameWithType: RarityType
        qualifiedName: RarityType
    isDefinition: true
    commentId: T:Global.RarityType
  Global.ShinseiStats:
    name:
      CSharp:
      - id: Global.ShinseiStats
        name: ShinseiStats
        nameWithType: ShinseiStats
        qualifiedName: ShinseiStats
        isExternal: true
      VB:
      - id: Global.ShinseiStats
        name: ShinseiStats
        nameWithType: ShinseiStats
        qualifiedName: ShinseiStats
        isExternal: true
    isDefinition: true
  Global.Shinsei:
    name:
      CSharp:
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      VB:
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
    isDefinition: true
    commentId: T:Global.Shinsei
  Global.AlteredStateData.HasPassedATurn*:
    name:
      CSharp:
      - id: Global.AlteredStateData.HasPassedATurn*
        name: HasPassedATurn
        nameWithType: AlteredStateData.HasPassedATurn
        qualifiedName: AlteredStateData.HasPassedATurn
      VB:
      - id: Global.AlteredStateData.HasPassedATurn*
        name: HasPassedATurn
        nameWithType: AlteredStateData.HasPassedATurn
        qualifiedName: AlteredStateData.HasPassedATurn
    isDefinition: true
    commentId: Overload:Global.AlteredStateData.HasPassedATurn
  Global.AlteredStateData:
    name:
      CSharp:
      - id: Global.AlteredStateData
        name: AlteredStateData
        nameWithType: AlteredStateData
        qualifiedName: AlteredStateData
      VB:
      - id: Global.AlteredStateData
        name: AlteredStateData
        nameWithType: AlteredStateData
        qualifiedName: AlteredStateData
    isDefinition: true
    commentId: T:Global.AlteredStateData
  System.Collections.Generic.List{Shinsei}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Shinsei}
  Global.ShinseiVault:
    name:
      CSharp:
      - id: Global.ShinseiVault
        name: ShinseiVault
        nameWithType: ShinseiVault
        qualifiedName: ShinseiVault
      VB:
      - id: Global.ShinseiVault
        name: ShinseiVault
        nameWithType: ShinseiVault
        qualifiedName: ShinseiVault
    isDefinition: true
    commentId: T:Global.ShinseiVault
  System.NonSerializedAttribute:
    name:
      CSharp:
      - id: System.NonSerializedAttribute
        name: NonSerializedAttribute
        nameWithType: NonSerializedAttribute
        qualifiedName: System.NonSerializedAttribute
        isExternal: true
      VB:
      - id: System.NonSerializedAttribute
        name: NonSerializedAttribute
        nameWithType: NonSerializedAttribute
        qualifiedName: System.NonSerializedAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.NonSerializedAttribute
  System.NonSerializedAttribute.#ctor:
    name:
      CSharp:
      - id: System.NonSerializedAttribute.#ctor
        name: NonSerializedAttribute
        nameWithType: NonSerializedAttribute.NonSerializedAttribute
        qualifiedName: System.NonSerializedAttribute.NonSerializedAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.NonSerializedAttribute.#ctor
        name: NonSerializedAttribute
        nameWithType: NonSerializedAttribute.NonSerializedAttribute
        qualifiedName: System.NonSerializedAttribute.NonSerializedAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.NonSerializedAttribute
    commentId: M:System.NonSerializedAttribute.#ctor
  Global.AttacksAnimation:
    name:
      CSharp:
      - id: Global.AttacksAnimation
        name: AttacksAnimation
        nameWithType: AttacksAnimation
        qualifiedName: AttacksAnimation
        isExternal: true
      VB:
      - id: Global.AttacksAnimation
        name: AttacksAnimation
        nameWithType: AttacksAnimation
        qualifiedName: AttacksAnimation
        isExternal: true
    isDefinition: true
  Global.ActionCardDto:
    name:
      CSharp:
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
      VB:
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
    isDefinition: true
    commentId: T:Global.ActionCardDto
  System.Collections.Generic.Dictionary{VFXPositionEnum,Transform}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{VFXPositionEnum,Transform}
  Global.BattleActionData.Clone*:
    name:
      CSharp:
      - id: Global.BattleActionData.Clone*
        name: Clone
        nameWithType: BattleActionData.Clone
        qualifiedName: BattleActionData.Clone
      VB:
      - id: Global.BattleActionData.Clone*
        name: Clone
        nameWithType: BattleActionData.Clone
        qualifiedName: BattleActionData.Clone
    isDefinition: true
    commentId: Overload:Global.BattleActionData.Clone
  Global.BattleActionData:
    name:
      CSharp:
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      VB:
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
    isDefinition: true
    commentId: T:Global.BattleActionData
  Global.ShouldSerializeContractResolver:
    name:
      CSharp:
      - id: Global.ShouldSerializeContractResolver
        name: ShouldSerializeContractResolver
        nameWithType: ShouldSerializeContractResolver
        qualifiedName: ShouldSerializeContractResolver
      VB:
      - id: Global.ShouldSerializeContractResolver
        name: ShouldSerializeContractResolver
        nameWithType: ShouldSerializeContractResolver
        qualifiedName: ShouldSerializeContractResolver
    isDefinition: true
    commentId: T:Global.ShouldSerializeContractResolver
  Global.JsonProperty:
    name:
      CSharp:
      - id: Global.JsonProperty
        name: JsonProperty
        nameWithType: JsonProperty
        qualifiedName: JsonProperty
        isExternal: true
      VB:
      - id: Global.JsonProperty
        name: JsonProperty
        nameWithType: JsonProperty
        qualifiedName: JsonProperty
        isExternal: true
    isDefinition: true
    commentId: '!:Global.JsonProperty'
  Global.MemberInfo:
    name:
      CSharp:
      - id: Global.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: MemberInfo
        isExternal: true
      VB:
      - id: Global.MemberInfo
        name: MemberInfo
        nameWithType: MemberInfo
        qualifiedName: MemberInfo
        isExternal: true
    isDefinition: true
    commentId: '!:Global.MemberInfo'
  Global.MemberSerialization:
    name:
      CSharp:
      - id: Global.MemberSerialization
        name: MemberSerialization
        nameWithType: MemberSerialization
        qualifiedName: MemberSerialization
        isExternal: true
      VB:
      - id: Global.MemberSerialization
        name: MemberSerialization
        nameWithType: MemberSerialization
        qualifiedName: MemberSerialization
        isExternal: true
    isDefinition: true
    commentId: '!:Global.MemberSerialization'
  Global.ShouldSerializeContractResolver.CreateProperty*:
    name:
      CSharp:
      - id: Global.ShouldSerializeContractResolver.CreateProperty*
        name: CreateProperty
        nameWithType: ShouldSerializeContractResolver.CreateProperty
        qualifiedName: ShouldSerializeContractResolver.CreateProperty
      VB:
      - id: Global.ShouldSerializeContractResolver.CreateProperty*
        name: CreateProperty
        nameWithType: ShouldSerializeContractResolver.CreateProperty
        qualifiedName: ShouldSerializeContractResolver.CreateProperty
    isDefinition: true
    commentId: Overload:Global.ShouldSerializeContractResolver.CreateProperty
  Global.CameraPlaneController:
    name:
      CSharp:
      - id: Global.CameraPlaneController
        name: CameraPlaneController
        nameWithType: CameraPlaneController
        qualifiedName: CameraPlaneController
        isExternal: true
      VB:
      - id: Global.CameraPlaneController
        name: CameraPlaneController
        nameWithType: CameraPlaneController
        qualifiedName: CameraPlaneController
        isExternal: true
    isDefinition: true
  Global.BattleGameMode:
    name:
      CSharp:
      - id: Global.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: BattleGameMode
        isExternal: true
      VB:
      - id: Global.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: BattleGameMode
        isExternal: true
    isDefinition: true
  Global.BattleUIController:
    name:
      CSharp:
      - id: Global.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: BattleUIController
        isExternal: true
      VB:
      - id: Global.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: BattleUIController
        isExternal: true
    isDefinition: true
  Global.ShinseiTypeScriptable:
    name:
      CSharp:
      - id: Global.ShinseiTypeScriptable
        name: ShinseiTypeScriptable
        nameWithType: ShinseiTypeScriptable
        qualifiedName: ShinseiTypeScriptable
        isExternal: true
      VB:
      - id: Global.ShinseiTypeScriptable
        name: ShinseiTypeScriptable
        nameWithType: ShinseiTypeScriptable
        qualifiedName: ShinseiTypeScriptable
        isExternal: true
    isDefinition: true
  Global.BattleActionsBase.Init*:
    name:
      CSharp:
      - id: Global.BattleActionsBase.Init*
        name: Init
        nameWithType: BattleActionsBase.Init
        qualifiedName: BattleActionsBase.Init
      VB:
      - id: Global.BattleActionsBase.Init*
        name: Init
        nameWithType: BattleActionsBase.Init
        qualifiedName: BattleActionsBase.Init
    isDefinition: true
    commentId: Overload:Global.BattleActionsBase.Init
  Global.UserInfo:
    name:
      CSharp:
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      VB:
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
    isDefinition: true
  Global.BattleActionsBase.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionsBase.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionsBase.ExecuteAction
        qualifiedName: BattleActionsBase.ExecuteAction
      VB:
      - id: Global.BattleActionsBase.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionsBase.ExecuteAction
        qualifiedName: BattleActionsBase.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionsBase.ExecuteAction
  Global.BattleActionsBase.CheckAction*:
    name:
      CSharp:
      - id: Global.BattleActionsBase.CheckAction*
        name: CheckAction
        nameWithType: BattleActionsBase.CheckAction
        qualifiedName: BattleActionsBase.CheckAction
      VB:
      - id: Global.BattleActionsBase.CheckAction*
        name: CheckAction
        nameWithType: BattleActionsBase.CheckAction
        qualifiedName: BattleActionsBase.CheckAction
    isDefinition: true
    commentId: Overload:Global.BattleActionsBase.CheckAction
  Global.CamerasAvailableEnum:
    name:
      CSharp:
      - id: Global.CamerasAvailableEnum
        name: CamerasAvailableEnum
        nameWithType: CamerasAvailableEnum
        qualifiedName: CamerasAvailableEnum
      VB:
      - id: Global.CamerasAvailableEnum
        name: CamerasAvailableEnum
        nameWithType: CamerasAvailableEnum
        qualifiedName: CamerasAvailableEnum
    isDefinition: true
    commentId: T:Global.CamerasAvailableEnum
  Global.BattleActionsBase.DecideIndexes*:
    name:
      CSharp:
      - id: Global.BattleActionsBase.DecideIndexes*
        name: DecideIndexes
        nameWithType: BattleActionsBase.DecideIndexes
        qualifiedName: BattleActionsBase.DecideIndexes
      VB:
      - id: Global.BattleActionsBase.DecideIndexes*
        name: DecideIndexes
        nameWithType: BattleActionsBase.DecideIndexes
        qualifiedName: BattleActionsBase.DecideIndexes
    isDefinition: true
    commentId: Overload:Global.BattleActionsBase.DecideIndexes
  Global.BattleActionsBase.ShowBothShinseisFar*:
    name:
      CSharp:
      - id: Global.BattleActionsBase.ShowBothShinseisFar*
        name: ShowBothShinseisFar
        nameWithType: BattleActionsBase.ShowBothShinseisFar
        qualifiedName: BattleActionsBase.ShowBothShinseisFar
      VB:
      - id: Global.BattleActionsBase.ShowBothShinseisFar*
        name: ShowBothShinseisFar
        nameWithType: BattleActionsBase.ShowBothShinseisFar
        qualifiedName: BattleActionsBase.ShowBothShinseisFar
    isDefinition: true
    commentId: Overload:Global.BattleActionsBase.ShowBothShinseisFar
  Global.BattleActionsBase.PlayAnimation*:
    name:
      CSharp:
      - id: Global.BattleActionsBase.PlayAnimation*
        name: PlayAnimation
        nameWithType: BattleActionsBase.PlayAnimation
        qualifiedName: BattleActionsBase.PlayAnimation
      VB:
      - id: Global.BattleActionsBase.PlayAnimation*
        name: PlayAnimation
        nameWithType: BattleActionsBase.PlayAnimation
        qualifiedName: BattleActionsBase.PlayAnimation
    isDefinition: true
    commentId: Overload:Global.BattleActionsBase.PlayAnimation
  Global.BattleActionsBase.ActionTime*:
    name:
      CSharp:
      - id: Global.BattleActionsBase.ActionTime*
        name: ActionTime
        nameWithType: BattleActionsBase.ActionTime
        qualifiedName: BattleActionsBase.ActionTime
      VB:
      - id: Global.BattleActionsBase.ActionTime*
        name: ActionTime
        nameWithType: BattleActionsBase.ActionTime
        qualifiedName: BattleActionsBase.ActionTime
    isDefinition: true
    commentId: Overload:Global.BattleActionsBase.ActionTime
  Global.BattleActionsBase.EndAction*:
    name:
      CSharp:
      - id: Global.BattleActionsBase.EndAction*
        name: EndAction
        nameWithType: BattleActionsBase.EndAction
        qualifiedName: BattleActionsBase.EndAction
      VB:
      - id: Global.BattleActionsBase.EndAction*
        name: EndAction
        nameWithType: BattleActionsBase.EndAction
        qualifiedName: BattleActionsBase.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleActionsBase.EndAction
  Global.BattleActionsBase:
    name:
      CSharp:
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      VB:
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
    isDefinition: true
    commentId: T:Global.BattleActionsBase
  Global.BattleActionsBase.actionType:
    name:
      CSharp:
      - id: Global.BattleActionsBase.actionType
        name: actionType
        nameWithType: BattleActionsBase.actionType
        qualifiedName: BattleActionsBase.actionType
      VB:
      - id: Global.BattleActionsBase.actionType
        name: actionType
        nameWithType: BattleActionsBase.actionType
        qualifiedName: BattleActionsBase.actionType
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: F:Global.BattleActionsBase.actionType
  Global.BattleActionsBase.camManager:
    name:
      CSharp:
      - id: Global.BattleActionsBase.camManager
        name: camManager
        nameWithType: BattleActionsBase.camManager
        qualifiedName: BattleActionsBase.camManager
      VB:
      - id: Global.BattleActionsBase.camManager
        name: camManager
        nameWithType: BattleActionsBase.camManager
        qualifiedName: BattleActionsBase.camManager
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: F:Global.BattleActionsBase.camManager
  Global.BattleActionsBase.vFXInstancer:
    name:
      CSharp:
      - id: Global.BattleActionsBase.vFXInstancer
        name: vFXInstancer
        nameWithType: BattleActionsBase.vFXInstancer
        qualifiedName: BattleActionsBase.vFXInstancer
      VB:
      - id: Global.BattleActionsBase.vFXInstancer
        name: vFXInstancer
        nameWithType: BattleActionsBase.vFXInstancer
        qualifiedName: BattleActionsBase.vFXInstancer
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: F:Global.BattleActionsBase.vFXInstancer
  Global.BattleActionsBase.battleGameMode:
    name:
      CSharp:
      - id: Global.BattleActionsBase.battleGameMode
        name: battleGameMode
        nameWithType: BattleActionsBase.battleGameMode
        qualifiedName: BattleActionsBase.battleGameMode
      VB:
      - id: Global.BattleActionsBase.battleGameMode
        name: battleGameMode
        nameWithType: BattleActionsBase.battleGameMode
        qualifiedName: BattleActionsBase.battleGameMode
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: F:Global.BattleActionsBase.battleGameMode
  Global.BattleActionsBase.battleUIController:
    name:
      CSharp:
      - id: Global.BattleActionsBase.battleUIController
        name: battleUIController
        nameWithType: BattleActionsBase.battleUIController
        qualifiedName: BattleActionsBase.battleUIController
      VB:
      - id: Global.BattleActionsBase.battleUIController
        name: battleUIController
        nameWithType: BattleActionsBase.battleUIController
        qualifiedName: BattleActionsBase.battleUIController
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: F:Global.BattleActionsBase.battleUIController
  Global.BattleActionsBase.shinseiTypeScriptable:
    name:
      CSharp:
      - id: Global.BattleActionsBase.shinseiTypeScriptable
        name: shinseiTypeScriptable
        nameWithType: BattleActionsBase.shinseiTypeScriptable
        qualifiedName: BattleActionsBase.shinseiTypeScriptable
      VB:
      - id: Global.BattleActionsBase.shinseiTypeScriptable
        name: shinseiTypeScriptable
        nameWithType: BattleActionsBase.shinseiTypeScriptable
        qualifiedName: BattleActionsBase.shinseiTypeScriptable
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: F:Global.BattleActionsBase.shinseiTypeScriptable
  Global.BattleActionsBase.launchVfx:
    name:
      CSharp:
      - id: Global.BattleActionsBase.launchVfx
        name: launchVfx
        nameWithType: BattleActionsBase.launchVfx
        qualifiedName: BattleActionsBase.launchVfx
      VB:
      - id: Global.BattleActionsBase.launchVfx
        name: launchVfx
        nameWithType: BattleActionsBase.launchVfx
        qualifiedName: BattleActionsBase.launchVfx
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: F:Global.BattleActionsBase.launchVfx
  Global.BattleActionsBase.vfxTime:
    name:
      CSharp:
      - id: Global.BattleActionsBase.vfxTime
        name: vfxTime
        nameWithType: BattleActionsBase.vfxTime
        qualifiedName: BattleActionsBase.vfxTime
      VB:
      - id: Global.BattleActionsBase.vfxTime
        name: vfxTime
        nameWithType: BattleActionsBase.vfxTime
        qualifiedName: BattleActionsBase.vfxTime
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: F:Global.BattleActionsBase.vfxTime
  Global.BattleActionsBase.actionTime:
    name:
      CSharp:
      - id: Global.BattleActionsBase.actionTime
        name: actionTime
        nameWithType: BattleActionsBase.actionTime
        qualifiedName: BattleActionsBase.actionTime
      VB:
      - id: Global.BattleActionsBase.actionTime
        name: actionTime
        nameWithType: BattleActionsBase.actionTime
        qualifiedName: BattleActionsBase.actionTime
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: F:Global.BattleActionsBase.actionTime
  Global.BattleActionsBase.targetName:
    name:
      CSharp:
      - id: Global.BattleActionsBase.targetName
        name: targetName
        nameWithType: BattleActionsBase.targetName
        qualifiedName: BattleActionsBase.targetName
      VB:
      - id: Global.BattleActionsBase.targetName
        name: targetName
        nameWithType: BattleActionsBase.targetName
        qualifiedName: BattleActionsBase.targetName
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: F:Global.BattleActionsBase.targetName
  Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable):
    name:
      CSharp:
      - id: Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
        name: Init
        nameWithType: BattleActionsBase.Init
        qualifiedName: BattleActionsBase.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.CameraPlaneController
        name: CameraPlaneController
        nameWithType: CameraPlaneController
        qualifiedName: CameraPlaneController
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.VFXInstancer
        name: VFXInstancer
        nameWithType: VFXInstancer
        qualifiedName: VFXInstancer
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: BattleGameMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: BattleUIController
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiTypeScriptable
        name: ShinseiTypeScriptable
        nameWithType: ShinseiTypeScriptable
        qualifiedName: ShinseiTypeScriptable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
        name: Init
        nameWithType: BattleActionsBase.Init
        qualifiedName: BattleActionsBase.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.CameraPlaneController
        name: CameraPlaneController
        nameWithType: CameraPlaneController
        qualifiedName: CameraPlaneController
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.VFXInstancer
        name: VFXInstancer
        nameWithType: VFXInstancer
        qualifiedName: VFXInstancer
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: BattleGameMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: BattleUIController
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiTypeScriptable
        name: ShinseiTypeScriptable
        nameWithType: ShinseiTypeScriptable
        qualifiedName: ShinseiTypeScriptable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: M:Global.BattleActionsBase.Init(CameraPlaneController,VFXInstancer,BattleGameMode,BattleUIController,ShinseiTypeScriptable)
  Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action):
    name:
      CSharp:
      - id: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
        name: ExecuteAction
        nameWithType: BattleActionsBase.ExecuteAction
        qualifiedName: BattleActionsBase.ExecuteAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
        name: ExecuteAction
        nameWithType: BattleActionsBase.ExecuteAction
        qualifiedName: BattleActionsBase.ExecuteAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: M:Global.BattleActionsBase.ExecuteAction(System.Boolean,UserInfo,UserInfo,BattleActionData,Action)
  Global.BattleActionsBase.CheckAction(System.Single,Action):
    name:
      CSharp:
      - id: Global.BattleActionsBase.CheckAction(System.Single,Action)
        name: CheckAction
        nameWithType: BattleActionsBase.CheckAction
        qualifiedName: BattleActionsBase.CheckAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleActionsBase.CheckAction(System.Single,Action)
        name: CheckAction
        nameWithType: BattleActionsBase.CheckAction
        qualifiedName: BattleActionsBase.CheckAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: M:Global.BattleActionsBase.CheckAction(System.Single,Action)
  ? Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
  : name:
      CSharp:
      - id: Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
        name: DecideIndexes
        nameWithType: BattleActionsBase.DecideIndexes
        qualifiedName: BattleActionsBase.DecideIndexes
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.CamerasAvailableEnum
        name: CamerasAvailableEnum
        nameWithType: CamerasAvailableEnum
        qualifiedName: CamerasAvailableEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.CamerasAvailableEnum
        name: CamerasAvailableEnum
        nameWithType: CamerasAvailableEnum
        qualifiedName: CamerasAvailableEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
        name: DecideIndexes
        nameWithType: BattleActionsBase.DecideIndexes
        qualifiedName: BattleActionsBase.DecideIndexes
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.CamerasAvailableEnum
        name: CamerasAvailableEnum
        nameWithType: CamerasAvailableEnum
        qualifiedName: CamerasAvailableEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.CamerasAvailableEnum
        name: CamerasAvailableEnum
        nameWithType: CamerasAvailableEnum
        qualifiedName: CamerasAvailableEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: M:Global.BattleActionsBase.DecideIndexes(VFXPositionEnum@,VFXPositionEnum@,CamerasAvailableEnum@,CamerasAvailableEnum@,System.Boolean,BattleActionData)
  Global.BattleActionsBase.ShowBothShinseisFar:
    name:
      CSharp:
      - id: Global.BattleActionsBase.ShowBothShinseisFar
        name: ShowBothShinseisFar
        nameWithType: BattleActionsBase.ShowBothShinseisFar
        qualifiedName: BattleActionsBase.ShowBothShinseisFar
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleActionsBase.ShowBothShinseisFar
        name: ShowBothShinseisFar
        nameWithType: BattleActionsBase.ShowBothShinseisFar
        qualifiedName: BattleActionsBase.ShowBothShinseisFar
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: M:Global.BattleActionsBase.ShowBothShinseisFar
  Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData):
    name:
      CSharp:
      - id: Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
        name: PlayAnimation
        nameWithType: BattleActionsBase.PlayAnimation
        qualifiedName: BattleActionsBase.PlayAnimation
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.AttacksAnimation
        name: AttacksAnimation
        nameWithType: AttacksAnimation
        qualifiedName: AttacksAnimation
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
        name: PlayAnimation
        nameWithType: BattleActionsBase.PlayAnimation
        qualifiedName: BattleActionsBase.PlayAnimation
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.AttacksAnimation
        name: AttacksAnimation
        nameWithType: AttacksAnimation
        qualifiedName: AttacksAnimation
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: M:Global.BattleActionsBase.PlayAnimation(UserInfo,AttacksAnimation,System.Boolean,BattleActionData)
  Global.BattleActionsBase.ActionTime:
    name:
      CSharp:
      - id: Global.BattleActionsBase.ActionTime
        name: ActionTime
        nameWithType: BattleActionsBase.ActionTime
        qualifiedName: BattleActionsBase.ActionTime
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleActionsBase.ActionTime
        name: ActionTime
        nameWithType: BattleActionsBase.ActionTime
        qualifiedName: BattleActionsBase.ActionTime
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: M:Global.BattleActionsBase.ActionTime
  Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData):
    name:
      CSharp:
      - id: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
        name: EndAction
        nameWithType: BattleActionsBase.EndAction
        qualifiedName: BattleActionsBase.EndAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
        name: EndAction
        nameWithType: BattleActionsBase.EndAction
        qualifiedName: BattleActionsBase.EndAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleActionsBase
    commentId: M:Global.BattleActionsBase.EndAction(System.Boolean,UserInfo,UserInfo,BattleActionData)
  Global.BattleActionsBaseTemplate:
    name:
      CSharp:
      - id: Global.BattleActionsBaseTemplate
        name: BattleActionsBaseTemplate
        nameWithType: BattleActionsBaseTemplate
        qualifiedName: BattleActionsBaseTemplate
      VB:
      - id: Global.BattleActionsBaseTemplate
        name: BattleActionsBaseTemplate
        nameWithType: BattleActionsBaseTemplate
        qualifiedName: BattleActionsBaseTemplate
    isDefinition: true
    commentId: T:Global.BattleActionsBaseTemplate
  Global.BattleActionBlockCard.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionBlockCard.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionBlockCard.ExecuteAction
        qualifiedName: BattleActionBlockCard.ExecuteAction
      VB:
      - id: Global.BattleActionBlockCard.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionBlockCard.ExecuteAction
        qualifiedName: BattleActionBlockCard.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionBlockCard.ExecuteAction
  Global.BattleActionBlockCard.EndAction*:
    name:
      CSharp:
      - id: Global.BattleActionBlockCard.EndAction*
        name: EndAction
        nameWithType: BattleActionBlockCard.EndAction
        qualifiedName: BattleActionBlockCard.EndAction
      VB:
      - id: Global.BattleActionBlockCard.EndAction*
        name: EndAction
        nameWithType: BattleActionBlockCard.EndAction
        qualifiedName: BattleActionBlockCard.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleActionBlockCard.EndAction
  Global.BattleActionBlockCard:
    name:
      CSharp:
      - id: Global.BattleActionBlockCard
        name: BattleActionBlockCard
        nameWithType: BattleActionBlockCard
        qualifiedName: BattleActionBlockCard
      VB:
      - id: Global.BattleActionBlockCard
        name: BattleActionBlockCard
        nameWithType: BattleActionBlockCard
        qualifiedName: BattleActionBlockCard
    isDefinition: true
    commentId: T:Global.BattleActionBlockCard
  Global.BattleActionBuffDebuff.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionBuffDebuff.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionBuffDebuff.ExecuteAction
        qualifiedName: BattleActionBuffDebuff.ExecuteAction
      VB:
      - id: Global.BattleActionBuffDebuff.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionBuffDebuff.ExecuteAction
        qualifiedName: BattleActionBuffDebuff.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionBuffDebuff.ExecuteAction
  Global.BattleActionBuffDebuff.EndAction*:
    name:
      CSharp:
      - id: Global.BattleActionBuffDebuff.EndAction*
        name: EndAction
        nameWithType: BattleActionBuffDebuff.EndAction
        qualifiedName: BattleActionBuffDebuff.EndAction
      VB:
      - id: Global.BattleActionBuffDebuff.EndAction*
        name: EndAction
        nameWithType: BattleActionBuffDebuff.EndAction
        qualifiedName: BattleActionBuffDebuff.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleActionBuffDebuff.EndAction
  Global.BattleActionBuffDebuff:
    name:
      CSharp:
      - id: Global.BattleActionBuffDebuff
        name: BattleActionBuffDebuff
        nameWithType: BattleActionBuffDebuff
        qualifiedName: BattleActionBuffDebuff
      VB:
      - id: Global.BattleActionBuffDebuff
        name: BattleActionBuffDebuff
        nameWithType: BattleActionBuffDebuff
        qualifiedName: BattleActionBuffDebuff
    isDefinition: true
    commentId: T:Global.BattleActionBuffDebuff
  Global.BattleActionChangeShinsei.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionChangeShinsei.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionChangeShinsei.ExecuteAction
        qualifiedName: BattleActionChangeShinsei.ExecuteAction
      VB:
      - id: Global.BattleActionChangeShinsei.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionChangeShinsei.ExecuteAction
        qualifiedName: BattleActionChangeShinsei.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionChangeShinsei.ExecuteAction
  Global.BattleActionChangeShinsei.ActionTime*:
    name:
      CSharp:
      - id: Global.BattleActionChangeShinsei.ActionTime*
        name: ActionTime
        nameWithType: BattleActionChangeShinsei.ActionTime
        qualifiedName: BattleActionChangeShinsei.ActionTime
      VB:
      - id: Global.BattleActionChangeShinsei.ActionTime*
        name: ActionTime
        nameWithType: BattleActionChangeShinsei.ActionTime
        qualifiedName: BattleActionChangeShinsei.ActionTime
    isDefinition: true
    commentId: Overload:Global.BattleActionChangeShinsei.ActionTime
  Global.BattleActionChangeShinsei.EndAction*:
    name:
      CSharp:
      - id: Global.BattleActionChangeShinsei.EndAction*
        name: EndAction
        nameWithType: BattleActionChangeShinsei.EndAction
        qualifiedName: BattleActionChangeShinsei.EndAction
      VB:
      - id: Global.BattleActionChangeShinsei.EndAction*
        name: EndAction
        nameWithType: BattleActionChangeShinsei.EndAction
        qualifiedName: BattleActionChangeShinsei.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleActionChangeShinsei.EndAction
  Global.BattleActionChangeShinsei:
    name:
      CSharp:
      - id: Global.BattleActionChangeShinsei
        name: BattleActionChangeShinsei
        nameWithType: BattleActionChangeShinsei
        qualifiedName: BattleActionChangeShinsei
      VB:
      - id: Global.BattleActionChangeShinsei
        name: BattleActionChangeShinsei
        nameWithType: BattleActionChangeShinsei
        qualifiedName: BattleActionChangeShinsei
    isDefinition: true
    commentId: T:Global.BattleActionChangeShinsei
  Global.BattleActionDamage.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionDamage.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionDamage.ExecuteAction
        qualifiedName: BattleActionDamage.ExecuteAction
      VB:
      - id: Global.BattleActionDamage.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionDamage.ExecuteAction
        qualifiedName: BattleActionDamage.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionDamage.ExecuteAction
  Global.BattleActionDamage.EndAction*:
    name:
      CSharp:
      - id: Global.BattleActionDamage.EndAction*
        name: EndAction
        nameWithType: BattleActionDamage.EndAction
        qualifiedName: BattleActionDamage.EndAction
      VB:
      - id: Global.BattleActionDamage.EndAction*
        name: EndAction
        nameWithType: BattleActionDamage.EndAction
        qualifiedName: BattleActionDamage.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleActionDamage.EndAction
  Global.BattleActionDamage:
    name:
      CSharp:
      - id: Global.BattleActionDamage
        name: BattleActionDamage
        nameWithType: BattleActionDamage
        qualifiedName: BattleActionDamage
      VB:
      - id: Global.BattleActionDamage
        name: BattleActionDamage
        nameWithType: BattleActionDamage
        qualifiedName: BattleActionDamage
    isDefinition: true
    commentId: T:Global.BattleActionDamage
  Global.BattleActionHeal.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionHeal.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionHeal.ExecuteAction
        qualifiedName: BattleActionHeal.ExecuteAction
      VB:
      - id: Global.BattleActionHeal.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionHeal.ExecuteAction
        qualifiedName: BattleActionHeal.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionHeal.ExecuteAction
  Global.BattleActionHeal.EndAction*:
    name:
      CSharp:
      - id: Global.BattleActionHeal.EndAction*
        name: EndAction
        nameWithType: BattleActionHeal.EndAction
        qualifiedName: BattleActionHeal.EndAction
      VB:
      - id: Global.BattleActionHeal.EndAction*
        name: EndAction
        nameWithType: BattleActionHeal.EndAction
        qualifiedName: BattleActionHeal.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleActionHeal.EndAction
  Global.BattleActionHeal:
    name:
      CSharp:
      - id: Global.BattleActionHeal
        name: BattleActionHeal
        nameWithType: BattleActionHeal
        qualifiedName: BattleActionHeal
      VB:
      - id: Global.BattleActionHeal
        name: BattleActionHeal
        nameWithType: BattleActionHeal
        qualifiedName: BattleActionHeal
    isDefinition: true
    commentId: T:Global.BattleActionHeal
  Global.BattleActionReflect.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionReflect.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionReflect.ExecuteAction
        qualifiedName: BattleActionReflect.ExecuteAction
      VB:
      - id: Global.BattleActionReflect.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionReflect.ExecuteAction
        qualifiedName: BattleActionReflect.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionReflect.ExecuteAction
  Global.BattleActionReflect:
    name:
      CSharp:
      - id: Global.BattleActionReflect
        name: BattleActionReflect
        nameWithType: BattleActionReflect
        qualifiedName: BattleActionReflect
      VB:
      - id: Global.BattleActionReflect
        name: BattleActionReflect
        nameWithType: BattleActionReflect
        qualifiedName: BattleActionReflect
    isDefinition: true
    commentId: T:Global.BattleActionReflect
  Global.BattleActionStatSwap.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionStatSwap.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionStatSwap.ExecuteAction
        qualifiedName: BattleActionStatSwap.ExecuteAction
      VB:
      - id: Global.BattleActionStatSwap.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionStatSwap.ExecuteAction
        qualifiedName: BattleActionStatSwap.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionStatSwap.ExecuteAction
  System.Collections.Generic.List{BattleActionData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleActionData}
  Global.BattleActionStatSwap.CheckBuffDebuffTargets*:
    name:
      CSharp:
      - id: Global.BattleActionStatSwap.CheckBuffDebuffTargets*
        name: CheckBuffDebuffTargets
        nameWithType: BattleActionStatSwap.CheckBuffDebuffTargets
        qualifiedName: BattleActionStatSwap.CheckBuffDebuffTargets
      VB:
      - id: Global.BattleActionStatSwap.CheckBuffDebuffTargets*
        name: CheckBuffDebuffTargets
        nameWithType: BattleActionStatSwap.CheckBuffDebuffTargets
        qualifiedName: BattleActionStatSwap.CheckBuffDebuffTargets
    isDefinition: true
    commentId: Overload:Global.BattleActionStatSwap.CheckBuffDebuffTargets
  Global.BattleActionStatSwap.EndAction*:
    name:
      CSharp:
      - id: Global.BattleActionStatSwap.EndAction*
        name: EndAction
        nameWithType: BattleActionStatSwap.EndAction
        qualifiedName: BattleActionStatSwap.EndAction
      VB:
      - id: Global.BattleActionStatSwap.EndAction*
        name: EndAction
        nameWithType: BattleActionStatSwap.EndAction
        qualifiedName: BattleActionStatSwap.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleActionStatSwap.EndAction
  Global.BattleActionStatSwap:
    name:
      CSharp:
      - id: Global.BattleActionStatSwap
        name: BattleActionStatSwap
        nameWithType: BattleActionStatSwap
        qualifiedName: BattleActionStatSwap
      VB:
      - id: Global.BattleActionStatSwap
        name: BattleActionStatSwap
        nameWithType: BattleActionStatSwap
        qualifiedName: BattleActionStatSwap
    isDefinition: true
    commentId: T:Global.BattleActionStatSwap
  Global.BattleActionPutAlteredState.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionPutAlteredState.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionPutAlteredState.ExecuteAction
        qualifiedName: BattleActionPutAlteredState.ExecuteAction
      VB:
      - id: Global.BattleActionPutAlteredState.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionPutAlteredState.ExecuteAction
        qualifiedName: BattleActionPutAlteredState.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionPutAlteredState.ExecuteAction
  Global.BattleActionPutAlteredState.EndAction*:
    name:
      CSharp:
      - id: Global.BattleActionPutAlteredState.EndAction*
        name: EndAction
        nameWithType: BattleActionPutAlteredState.EndAction
        qualifiedName: BattleActionPutAlteredState.EndAction
      VB:
      - id: Global.BattleActionPutAlteredState.EndAction*
        name: EndAction
        nameWithType: BattleActionPutAlteredState.EndAction
        qualifiedName: BattleActionPutAlteredState.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleActionPutAlteredState.EndAction
  Global.BattleActionPutAlteredState:
    name:
      CSharp:
      - id: Global.BattleActionPutAlteredState
        name: BattleActionPutAlteredState
        nameWithType: BattleActionPutAlteredState
        qualifiedName: BattleActionPutAlteredState
      VB:
      - id: Global.BattleActionPutAlteredState
        name: BattleActionPutAlteredState
        nameWithType: BattleActionPutAlteredState
        qualifiedName: BattleActionPutAlteredState
    isDefinition: true
    commentId: T:Global.BattleActionPutAlteredState
  Global.BattleActionSkipTurn.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionSkipTurn.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionSkipTurn.ExecuteAction
        qualifiedName: BattleActionSkipTurn.ExecuteAction
      VB:
      - id: Global.BattleActionSkipTurn.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionSkipTurn.ExecuteAction
        qualifiedName: BattleActionSkipTurn.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionSkipTurn.ExecuteAction
  Global.BattleActionSkipTurn.EndAction*:
    name:
      CSharp:
      - id: Global.BattleActionSkipTurn.EndAction*
        name: EndAction
        nameWithType: BattleActionSkipTurn.EndAction
        qualifiedName: BattleActionSkipTurn.EndAction
      VB:
      - id: Global.BattleActionSkipTurn.EndAction*
        name: EndAction
        nameWithType: BattleActionSkipTurn.EndAction
        qualifiedName: BattleActionSkipTurn.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleActionSkipTurn.EndAction
  Global.BattleActionSkipTurn:
    name:
      CSharp:
      - id: Global.BattleActionSkipTurn
        name: BattleActionSkipTurn
        nameWithType: BattleActionSkipTurn
        qualifiedName: BattleActionSkipTurn
      VB:
      - id: Global.BattleActionSkipTurn
        name: BattleActionSkipTurn
        nameWithType: BattleActionSkipTurn
        qualifiedName: BattleActionSkipTurn
    isDefinition: true
    commentId: T:Global.BattleActionSkipTurn
  Global.BattleAlteredStateDataSO:
    name:
      CSharp:
      - id: Global.BattleAlteredStateDataSO
        name: BattleAlteredStateDataSO
        nameWithType: BattleAlteredStateDataSO
        qualifiedName: BattleAlteredStateDataSO
      VB:
      - id: Global.BattleAlteredStateDataSO
        name: BattleAlteredStateDataSO
        nameWithType: BattleAlteredStateDataSO
        qualifiedName: BattleAlteredStateDataSO
    isDefinition: true
    commentId: T:Global.BattleAlteredStateDataSO
  Global.BattleAlteredStateBase.InitAlteredState*:
    name:
      CSharp:
      - id: Global.BattleAlteredStateBase.InitAlteredState*
        name: InitAlteredState
        nameWithType: BattleAlteredStateBase.InitAlteredState
        qualifiedName: BattleAlteredStateBase.InitAlteredState
      VB:
      - id: Global.BattleAlteredStateBase.InitAlteredState*
        name: InitAlteredState
        nameWithType: BattleAlteredStateBase.InitAlteredState
        qualifiedName: BattleAlteredStateBase.InitAlteredState
    isDefinition: true
    commentId: Overload:Global.BattleAlteredStateBase.InitAlteredState
  Global.BattleAlteredStateBase.ExecuteAlteredState*:
    name:
      CSharp:
      - id: Global.BattleAlteredStateBase.ExecuteAlteredState*
        name: ExecuteAlteredState
        nameWithType: BattleAlteredStateBase.ExecuteAlteredState
        qualifiedName: BattleAlteredStateBase.ExecuteAlteredState
      VB:
      - id: Global.BattleAlteredStateBase.ExecuteAlteredState*
        name: ExecuteAlteredState
        nameWithType: BattleAlteredStateBase.ExecuteAlteredState
        qualifiedName: BattleAlteredStateBase.ExecuteAlteredState
    isDefinition: true
    commentId: Overload:Global.BattleAlteredStateBase.ExecuteAlteredState
  Global.BattleAlteredStateBase.EndAlteredState*:
    name:
      CSharp:
      - id: Global.BattleAlteredStateBase.EndAlteredState*
        name: EndAlteredState
        nameWithType: BattleAlteredStateBase.EndAlteredState
        qualifiedName: BattleAlteredStateBase.EndAlteredState
      VB:
      - id: Global.BattleAlteredStateBase.EndAlteredState*
        name: EndAlteredState
        nameWithType: BattleAlteredStateBase.EndAlteredState
        qualifiedName: BattleAlteredStateBase.EndAlteredState
    isDefinition: true
    commentId: Overload:Global.BattleAlteredStateBase.EndAlteredState
  Global.BattleAlteredStateBase:
    name:
      CSharp:
      - id: Global.BattleAlteredStateBase
        name: BattleAlteredStateBase
        nameWithType: BattleAlteredStateBase
        qualifiedName: BattleAlteredStateBase
      VB:
      - id: Global.BattleAlteredStateBase
        name: BattleAlteredStateBase
        nameWithType: BattleAlteredStateBase
        qualifiedName: BattleAlteredStateBase
    isDefinition: true
    commentId: T:Global.BattleAlteredStateBase
  Global.BattleAlteredStateBase.alteredStateData:
    name:
      CSharp:
      - id: Global.BattleAlteredStateBase.alteredStateData
        name: alteredStateData
        nameWithType: BattleAlteredStateBase.alteredStateData
        qualifiedName: BattleAlteredStateBase.alteredStateData
      VB:
      - id: Global.BattleAlteredStateBase.alteredStateData
        name: alteredStateData
        nameWithType: BattleAlteredStateBase.alteredStateData
        qualifiedName: BattleAlteredStateBase.alteredStateData
    isDefinition: true
    parent: Global.BattleAlteredStateBase
    commentId: F:Global.BattleAlteredStateBase.alteredStateData
  Global.BattleAlteredStateBase.muzzleAnimation:
    name:
      CSharp:
      - id: Global.BattleAlteredStateBase.muzzleAnimation
        name: muzzleAnimation
        nameWithType: BattleAlteredStateBase.muzzleAnimation
        qualifiedName: BattleAlteredStateBase.muzzleAnimation
      VB:
      - id: Global.BattleAlteredStateBase.muzzleAnimation
        name: muzzleAnimation
        nameWithType: BattleAlteredStateBase.muzzleAnimation
        qualifiedName: BattleAlteredStateBase.muzzleAnimation
    isDefinition: true
    parent: Global.BattleAlteredStateBase
    commentId: F:Global.BattleAlteredStateBase.muzzleAnimation
  Global.BattleAlteredStateBase.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean):
    name:
      CSharp:
      - id: Global.BattleAlteredStateBase.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
        name: InitAlteredState
        nameWithType: BattleAlteredStateBase.InitAlteredState
        qualifiedName: BattleAlteredStateBase.InitAlteredState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: BattleGameMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: BattleUIController
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleAlteredStateBase.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
        name: InitAlteredState
        nameWithType: BattleAlteredStateBase.InitAlteredState
        qualifiedName: BattleAlteredStateBase.InitAlteredState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: BattleGameMode
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: BattleUIController
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleAlteredStateBase
    commentId: M:Global.BattleAlteredStateBase.InitAlteredState(System.Boolean,UserInfo,BattleGameMode,BattleUIController,System.Boolean)
  Global.BattleAlteredStateBase.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean):
    name:
      CSharp:
      - id: Global.BattleAlteredStateBase.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
        name: ExecuteAlteredState
        nameWithType: BattleAlteredStateBase.ExecuteAlteredState
        qualifiedName: BattleAlteredStateBase.ExecuteAlteredState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleAlteredStateBase.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
        name: ExecuteAlteredState
        nameWithType: BattleAlteredStateBase.ExecuteAlteredState
        qualifiedName: BattleAlteredStateBase.ExecuteAlteredState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleAlteredStateBase
    commentId: M:Global.BattleAlteredStateBase.ExecuteAlteredState(UserInfo,System.Collections.Generic.List{BattleActionData},System.Boolean)
  Global.BattleAlteredStateBase.EndAlteredState(UserInfo,System.Boolean):
    name:
      CSharp:
      - id: Global.BattleAlteredStateBase.EndAlteredState(UserInfo,System.Boolean)
        name: EndAlteredState
        nameWithType: BattleAlteredStateBase.EndAlteredState
        qualifiedName: BattleAlteredStateBase.EndAlteredState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleAlteredStateBase.EndAlteredState(UserInfo,System.Boolean)
        name: EndAlteredState
        nameWithType: BattleAlteredStateBase.EndAlteredState
        qualifiedName: BattleAlteredStateBase.EndAlteredState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: UserInfo
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleAlteredStateBase
    commentId: M:Global.BattleAlteredStateBase.EndAlteredState(UserInfo,System.Boolean)
  Global.BattleAlteredStateBleeding:
    name:
      CSharp:
      - id: Global.BattleAlteredStateBleeding
        name: BattleAlteredStateBleeding
        nameWithType: BattleAlteredStateBleeding
        qualifiedName: BattleAlteredStateBleeding
      VB:
      - id: Global.BattleAlteredStateBleeding
        name: BattleAlteredStateBleeding
        nameWithType: BattleAlteredStateBleeding
        qualifiedName: BattleAlteredStateBleeding
    isDefinition: true
    commentId: T:Global.BattleAlteredStateBleeding
  Global.BattleAlteredStateEvasionChange.InitAlteredState*:
    name:
      CSharp:
      - id: Global.BattleAlteredStateEvasionChange.InitAlteredState*
        name: InitAlteredState
        nameWithType: BattleAlteredStateEvasionChange.InitAlteredState
        qualifiedName: BattleAlteredStateEvasionChange.InitAlteredState
      VB:
      - id: Global.BattleAlteredStateEvasionChange.InitAlteredState*
        name: InitAlteredState
        nameWithType: BattleAlteredStateEvasionChange.InitAlteredState
        qualifiedName: BattleAlteredStateEvasionChange.InitAlteredState
    isDefinition: true
    commentId: Overload:Global.BattleAlteredStateEvasionChange.InitAlteredState
  Global.BattleAlteredStateEvasionChange.ExecuteAlteredState*:
    name:
      CSharp:
      - id: Global.BattleAlteredStateEvasionChange.ExecuteAlteredState*
        name: ExecuteAlteredState
        nameWithType: BattleAlteredStateEvasionChange.ExecuteAlteredState
        qualifiedName: BattleAlteredStateEvasionChange.ExecuteAlteredState
      VB:
      - id: Global.BattleAlteredStateEvasionChange.ExecuteAlteredState*
        name: ExecuteAlteredState
        nameWithType: BattleAlteredStateEvasionChange.ExecuteAlteredState
        qualifiedName: BattleAlteredStateEvasionChange.ExecuteAlteredState
    isDefinition: true
    commentId: Overload:Global.BattleAlteredStateEvasionChange.ExecuteAlteredState
  Global.BattleAlteredStateEvasionChange.EndAlteredState*:
    name:
      CSharp:
      - id: Global.BattleAlteredStateEvasionChange.EndAlteredState*
        name: EndAlteredState
        nameWithType: BattleAlteredStateEvasionChange.EndAlteredState
        qualifiedName: BattleAlteredStateEvasionChange.EndAlteredState
      VB:
      - id: Global.BattleAlteredStateEvasionChange.EndAlteredState*
        name: EndAlteredState
        nameWithType: BattleAlteredStateEvasionChange.EndAlteredState
        qualifiedName: BattleAlteredStateEvasionChange.EndAlteredState
    isDefinition: true
    commentId: Overload:Global.BattleAlteredStateEvasionChange.EndAlteredState
  Global.BattleAlteredStateEvasionChange:
    name:
      CSharp:
      - id: Global.BattleAlteredStateEvasionChange
        name: BattleAlteredStateEvasionChange
        nameWithType: BattleAlteredStateEvasionChange
        qualifiedName: BattleAlteredStateEvasionChange
      VB:
      - id: Global.BattleAlteredStateEvasionChange
        name: BattleAlteredStateEvasionChange
        nameWithType: BattleAlteredStateEvasionChange
        qualifiedName: BattleAlteredStateEvasionChange
    isDefinition: true
    commentId: T:Global.BattleAlteredStateEvasionChange
  Global.BattleAlteredStateIgnited.ExecuteAlteredState*:
    name:
      CSharp:
      - id: Global.BattleAlteredStateIgnited.ExecuteAlteredState*
        name: ExecuteAlteredState
        nameWithType: BattleAlteredStateIgnited.ExecuteAlteredState
        qualifiedName: BattleAlteredStateIgnited.ExecuteAlteredState
      VB:
      - id: Global.BattleAlteredStateIgnited.ExecuteAlteredState*
        name: ExecuteAlteredState
        nameWithType: BattleAlteredStateIgnited.ExecuteAlteredState
        qualifiedName: BattleAlteredStateIgnited.ExecuteAlteredState
    isDefinition: true
    commentId: Overload:Global.BattleAlteredStateIgnited.ExecuteAlteredState
  Global.BattleAlteredStateIgnited:
    name:
      CSharp:
      - id: Global.BattleAlteredStateIgnited
        name: BattleAlteredStateIgnited
        nameWithType: BattleAlteredStateIgnited
        qualifiedName: BattleAlteredStateIgnited
      VB:
      - id: Global.BattleAlteredStateIgnited
        name: BattleAlteredStateIgnited
        nameWithType: BattleAlteredStateIgnited
        qualifiedName: BattleAlteredStateIgnited
    isDefinition: true
    commentId: T:Global.BattleAlteredStateIgnited
  Global.BattleAlteredStateRoot.ExecuteAlteredState*:
    name:
      CSharp:
      - id: Global.BattleAlteredStateRoot.ExecuteAlteredState*
        name: ExecuteAlteredState
        nameWithType: BattleAlteredStateRoot.ExecuteAlteredState
        qualifiedName: BattleAlteredStateRoot.ExecuteAlteredState
      VB:
      - id: Global.BattleAlteredStateRoot.ExecuteAlteredState*
        name: ExecuteAlteredState
        nameWithType: BattleAlteredStateRoot.ExecuteAlteredState
        qualifiedName: BattleAlteredStateRoot.ExecuteAlteredState
    isDefinition: true
    commentId: Overload:Global.BattleAlteredStateRoot.ExecuteAlteredState
  Global.BattleAlteredStateRoot:
    name:
      CSharp:
      - id: Global.BattleAlteredStateRoot
        name: BattleAlteredStateRoot
        nameWithType: BattleAlteredStateRoot
        qualifiedName: BattleAlteredStateRoot
      VB:
      - id: Global.BattleAlteredStateRoot
        name: BattleAlteredStateRoot
        nameWithType: BattleAlteredStateRoot
        qualifiedName: BattleAlteredStateRoot
    isDefinition: true
    commentId: T:Global.BattleAlteredStateRoot
  System.Collections.Generic.List{BattleAlteredStateDataSO}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleAlteredStateDataSO
        name: BattleAlteredStateDataSO
        nameWithType: BattleAlteredStateDataSO
        qualifiedName: BattleAlteredStateDataSO
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleAlteredStateDataSO
        name: BattleAlteredStateDataSO
        nameWithType: BattleAlteredStateDataSO
        qualifiedName: BattleAlteredStateDataSO
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleAlteredStateDataSO}
  Global.AlteredStatesDataSO.GetJsonAlteredStates*:
    name:
      CSharp:
      - id: Global.AlteredStatesDataSO.GetJsonAlteredStates*
        name: GetJsonAlteredStates
        nameWithType: AlteredStatesDataSO.GetJsonAlteredStates
        qualifiedName: AlteredStatesDataSO.GetJsonAlteredStates
      VB:
      - id: Global.AlteredStatesDataSO.GetJsonAlteredStates*
        name: GetJsonAlteredStates
        nameWithType: AlteredStatesDataSO.GetJsonAlteredStates
        qualifiedName: AlteredStatesDataSO.GetJsonAlteredStates
    isDefinition: true
    commentId: Overload:Global.AlteredStatesDataSO.GetJsonAlteredStates
  Global.AlteredStatesDataSO:
    name:
      CSharp:
      - id: Global.AlteredStatesDataSO
        name: AlteredStatesDataSO
        nameWithType: AlteredStatesDataSO
        qualifiedName: AlteredStatesDataSO
      VB:
      - id: Global.AlteredStatesDataSO
        name: AlteredStatesDataSO
        nameWithType: AlteredStatesDataSO
        qualifiedName: AlteredStatesDataSO
    isDefinition: true
    commentId: T:Global.AlteredStatesDataSO
  Global.ActionDataList:
    name:
      CSharp:
      - id: Global.ActionDataList
        name: ActionDataList
        nameWithType: ActionDataList
        qualifiedName: ActionDataList
      VB:
      - id: Global.ActionDataList
        name: ActionDataList
        nameWithType: ActionDataList
        qualifiedName: ActionDataList
    isDefinition: true
    commentId: T:Global.ActionDataList
  System.Collections.Generic.List{BattleTerrainDataSO}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleTerrainDataSO
        name: BattleTerrainDataSO
        nameWithType: BattleTerrainDataSO
        qualifiedName: BattleTerrainDataSO
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleTerrainDataSO
        name: BattleTerrainDataSO
        nameWithType: BattleTerrainDataSO
        qualifiedName: BattleTerrainDataSO
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleTerrainDataSO}
  Global.TerrainChangesDataSO.GetJsonAlteredStates*:
    name:
      CSharp:
      - id: Global.TerrainChangesDataSO.GetJsonAlteredStates*
        name: GetJsonAlteredStates
        nameWithType: TerrainChangesDataSO.GetJsonAlteredStates
        qualifiedName: TerrainChangesDataSO.GetJsonAlteredStates
      VB:
      - id: Global.TerrainChangesDataSO.GetJsonAlteredStates*
        name: GetJsonAlteredStates
        nameWithType: TerrainChangesDataSO.GetJsonAlteredStates
        qualifiedName: TerrainChangesDataSO.GetJsonAlteredStates
    isDefinition: true
    commentId: Overload:Global.TerrainChangesDataSO.GetJsonAlteredStates
  Global.TerrainChangesDataSO:
    name:
      CSharp:
      - id: Global.TerrainChangesDataSO
        name: TerrainChangesDataSO
        nameWithType: TerrainChangesDataSO
        qualifiedName: TerrainChangesDataSO
      VB:
      - id: Global.TerrainChangesDataSO
        name: TerrainChangesDataSO
        nameWithType: TerrainChangesDataSO
        qualifiedName: TerrainChangesDataSO
    isDefinition: true
    commentId: T:Global.TerrainChangesDataSO
  System.Collections.Generic.List{BattleTerrainBehavioursBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleTerrainBehavioursBase
        name: BattleTerrainBehavioursBase
        nameWithType: BattleTerrainBehavioursBase
        qualifiedName: BattleTerrainBehavioursBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleTerrainBehavioursBase
        name: BattleTerrainBehavioursBase
        nameWithType: BattleTerrainBehavioursBase
        qualifiedName: BattleTerrainBehavioursBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleTerrainBehavioursBase}
  Global.BattleActionChangeTerrain.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleActionChangeTerrain.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionChangeTerrain.ExecuteAction
        qualifiedName: BattleActionChangeTerrain.ExecuteAction
      VB:
      - id: Global.BattleActionChangeTerrain.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleActionChangeTerrain.ExecuteAction
        qualifiedName: BattleActionChangeTerrain.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleActionChangeTerrain.ExecuteAction
  Global.BattleActionChangeTerrain.EndAction*:
    name:
      CSharp:
      - id: Global.BattleActionChangeTerrain.EndAction*
        name: EndAction
        nameWithType: BattleActionChangeTerrain.EndAction
        qualifiedName: BattleActionChangeTerrain.EndAction
      VB:
      - id: Global.BattleActionChangeTerrain.EndAction*
        name: EndAction
        nameWithType: BattleActionChangeTerrain.EndAction
        qualifiedName: BattleActionChangeTerrain.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleActionChangeTerrain.EndAction
  Global.BattleActionChangeTerrain:
    name:
      CSharp:
      - id: Global.BattleActionChangeTerrain
        name: BattleActionChangeTerrain
        nameWithType: BattleActionChangeTerrain
        qualifiedName: BattleActionChangeTerrain
      VB:
      - id: Global.BattleActionChangeTerrain
        name: BattleActionChangeTerrain
        nameWithType: BattleActionChangeTerrain
        qualifiedName: BattleActionChangeTerrain
    isDefinition: true
    commentId: T:Global.BattleActionChangeTerrain
  Global.BattleTerrainDataSO:
    name:
      CSharp:
      - id: Global.BattleTerrainDataSO
        name: BattleTerrainDataSO
        nameWithType: BattleTerrainDataSO
        qualifiedName: BattleTerrainDataSO
      VB:
      - id: Global.BattleTerrainDataSO
        name: BattleTerrainDataSO
        nameWithType: BattleTerrainDataSO
        qualifiedName: BattleTerrainDataSO
    isDefinition: true
    commentId: T:Global.BattleTerrainDataSO
  Global.BattleTerrainBehavioursBase.InitTerrainBehaviour*:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.InitTerrainBehaviour*
        name: InitTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.InitTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.InitTerrainBehaviour
      VB:
      - id: Global.BattleTerrainBehavioursBase.InitTerrainBehaviour*
        name: InitTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.InitTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.InitTerrainBehaviour
    isDefinition: true
    commentId: Overload:Global.BattleTerrainBehavioursBase.InitTerrainBehaviour
  Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour*:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour*
        name: ExecuteTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
      VB:
      - id: Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour*
        name: ExecuteTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
    isDefinition: true
    commentId: Overload:Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
  Global.BattleTerrainBehavioursBase.EndTerrainBehaviour*:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.EndTerrainBehaviour*
        name: EndTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.EndTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.EndTerrainBehaviour
      VB:
      - id: Global.BattleTerrainBehavioursBase.EndTerrainBehaviour*
        name: EndTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.EndTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.EndTerrainBehaviour
    isDefinition: true
    commentId: Overload:Global.BattleTerrainBehavioursBase.EndTerrainBehaviour
  Global.Func`3:
    name:
      CSharp:
      - id: Global.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.Func`3'
  Global.Func{CharacterType,System.Boolean,System.Single}:
    name:
      CSharp:
      - id: Global.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Func`3
    commentId: '!:Global.Func{CharacterType,System.Boolean,System.Single}'
  Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain*:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain*
        name: ExecuteActionsOfTerrain
        nameWithType: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain
        qualifiedName: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain
      VB:
      - id: Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain*
        name: ExecuteActionsOfTerrain
        nameWithType: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain
        qualifiedName: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain
    isDefinition: true
    commentId: Overload:Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain
  Global.BattleTerrainBehavioursBase.ExecuteAction*:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleTerrainBehavioursBase.ExecuteAction
        qualifiedName: BattleTerrainBehavioursBase.ExecuteAction
      VB:
      - id: Global.BattleTerrainBehavioursBase.ExecuteAction*
        name: ExecuteAction
        nameWithType: BattleTerrainBehavioursBase.ExecuteAction
        qualifiedName: BattleTerrainBehavioursBase.ExecuteAction
    isDefinition: true
    commentId: Overload:Global.BattleTerrainBehavioursBase.ExecuteAction
  Global.BattleTerrainBehavioursBase.EndAction*:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.EndAction*
        name: EndAction
        nameWithType: BattleTerrainBehavioursBase.EndAction
        qualifiedName: BattleTerrainBehavioursBase.EndAction
      VB:
      - id: Global.BattleTerrainBehavioursBase.EndAction*
        name: EndAction
        nameWithType: BattleTerrainBehavioursBase.EndAction
        qualifiedName: BattleTerrainBehavioursBase.EndAction
    isDefinition: true
    commentId: Overload:Global.BattleTerrainBehavioursBase.EndAction
  Global.BattleTerrainBehavioursBase:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase
        name: BattleTerrainBehavioursBase
        nameWithType: BattleTerrainBehavioursBase
        qualifiedName: BattleTerrainBehavioursBase
      VB:
      - id: Global.BattleTerrainBehavioursBase
        name: BattleTerrainBehavioursBase
        nameWithType: BattleTerrainBehavioursBase
        qualifiedName: BattleTerrainBehavioursBase
    isDefinition: true
    commentId: T:Global.BattleTerrainBehavioursBase
  Global.BattleTerrainBehavioursBase.allShinseis:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.allShinseis
        name: allShinseis
        nameWithType: BattleTerrainBehavioursBase.allShinseis
        qualifiedName: BattleTerrainBehavioursBase.allShinseis
      VB:
      - id: Global.BattleTerrainBehavioursBase.allShinseis
        name: allShinseis
        nameWithType: BattleTerrainBehavioursBase.allShinseis
        qualifiedName: BattleTerrainBehavioursBase.allShinseis
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: F:Global.BattleTerrainBehavioursBase.allShinseis
  Global.BattleTerrainBehavioursBase.turnsLeft:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.turnsLeft
        name: turnsLeft
        nameWithType: BattleTerrainBehavioursBase.turnsLeft
        qualifiedName: BattleTerrainBehavioursBase.turnsLeft
      VB:
      - id: Global.BattleTerrainBehavioursBase.turnsLeft
        name: turnsLeft
        nameWithType: BattleTerrainBehavioursBase.turnsLeft
        qualifiedName: BattleTerrainBehavioursBase.turnsLeft
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: F:Global.BattleTerrainBehavioursBase.turnsLeft
  Global.BattleTerrainBehavioursBase.turnsDuration:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.turnsDuration
        name: turnsDuration
        nameWithType: BattleTerrainBehavioursBase.turnsDuration
        qualifiedName: BattleTerrainBehavioursBase.turnsDuration
      VB:
      - id: Global.BattleTerrainBehavioursBase.turnsDuration
        name: turnsDuration
        nameWithType: BattleTerrainBehavioursBase.turnsDuration
        qualifiedName: BattleTerrainBehavioursBase.turnsDuration
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: F:Global.BattleTerrainBehavioursBase.turnsDuration
  Global.BattleTerrainBehavioursBase.battleGameMode:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.battleGameMode
        name: battleGameMode
        nameWithType: BattleTerrainBehavioursBase.battleGameMode
        qualifiedName: BattleTerrainBehavioursBase.battleGameMode
      VB:
      - id: Global.BattleTerrainBehavioursBase.battleGameMode
        name: battleGameMode
        nameWithType: BattleTerrainBehavioursBase.battleGameMode
        qualifiedName: BattleTerrainBehavioursBase.battleGameMode
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: F:Global.BattleTerrainBehavioursBase.battleGameMode
  Global.BattleTerrainBehavioursBase.terrainData:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.terrainData
        name: terrainData
        nameWithType: BattleTerrainBehavioursBase.terrainData
        qualifiedName: BattleTerrainBehavioursBase.terrainData
      VB:
      - id: Global.BattleTerrainBehavioursBase.terrainData
        name: terrainData
        nameWithType: BattleTerrainBehavioursBase.terrainData
        qualifiedName: BattleTerrainBehavioursBase.terrainData
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: F:Global.BattleTerrainBehavioursBase.terrainData
  Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func{CharacterType,System.Boolean,System.Single},System.Boolean):
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func{CharacterType,System.Boolean,System.Single},System.Boolean)
        name: ExecuteActionsOfTerrain
        nameWithType: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain
        qualifiedName: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func{CharacterType,System.Boolean,System.Single},System.Boolean)
        name: ExecuteActionsOfTerrain
        nameWithType: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain
        qualifiedName: BattleTerrainBehavioursBase.ExecuteActionsOfTerrain
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: M:Global.BattleTerrainBehavioursBase.ExecuteActionsOfTerrain(Func{CharacterType,System.Boolean,System.Single},System.Boolean)
  Global.BattleTerrainBehavioursBase.ExecuteAction(CharacterType,System.Boolean):
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.ExecuteAction(CharacterType,System.Boolean)
        name: ExecuteAction
        nameWithType: BattleTerrainBehavioursBase.ExecuteAction
        qualifiedName: BattleTerrainBehavioursBase.ExecuteAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleTerrainBehavioursBase.ExecuteAction(CharacterType,System.Boolean)
        name: ExecuteAction
        nameWithType: BattleTerrainBehavioursBase.ExecuteAction
        qualifiedName: BattleTerrainBehavioursBase.ExecuteAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: M:Global.BattleTerrainBehavioursBase.ExecuteAction(CharacterType,System.Boolean)
  Global.BattleTerrainBehavioursBase.EndAction(CharacterType,System.Boolean):
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.EndAction(CharacterType,System.Boolean)
        name: EndAction
        nameWithType: BattleTerrainBehavioursBase.EndAction
        qualifiedName: BattleTerrainBehavioursBase.EndAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleTerrainBehavioursBase.EndAction(CharacterType,System.Boolean)
        name: EndAction
        nameWithType: BattleTerrainBehavioursBase.EndAction
        qualifiedName: BattleTerrainBehavioursBase.EndAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: M:Global.BattleTerrainBehavioursBase.EndAction(CharacterType,System.Boolean)
  Global.BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode):
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode)
        name: InitTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.InitTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.InitTerrainBehaviour
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: BattleGameMode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode)
        name: InitTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.InitTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.InitTerrainBehaviour
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: BattleGameMode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: M:Global.BattleTerrainBehavioursBase.InitTerrainBehaviour(BattleGameMode)
  Global.BattleTerrainBehaviourSnow.InitTerrainBehaviour*:
    name:
      CSharp:
      - id: Global.BattleTerrainBehaviourSnow.InitTerrainBehaviour*
        name: InitTerrainBehaviour
        nameWithType: BattleTerrainBehaviourSnow.InitTerrainBehaviour
        qualifiedName: BattleTerrainBehaviourSnow.InitTerrainBehaviour
      VB:
      - id: Global.BattleTerrainBehaviourSnow.InitTerrainBehaviour*
        name: InitTerrainBehaviour
        nameWithType: BattleTerrainBehaviourSnow.InitTerrainBehaviour
        qualifiedName: BattleTerrainBehaviourSnow.InitTerrainBehaviour
    isDefinition: true
    commentId: Overload:Global.BattleTerrainBehaviourSnow.InitTerrainBehaviour
  Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
        name: ExecuteTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
        name: ExecuteTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: M:Global.BattleTerrainBehavioursBase.ExecuteTerrainBehaviour
  Global.BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour*:
    name:
      CSharp:
      - id: Global.BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour*
        name: ExecuteTerrainBehaviour
        nameWithType: BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour
        qualifiedName: BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour
      VB:
      - id: Global.BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour*
        name: ExecuteTerrainBehaviour
        nameWithType: BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour
        qualifiedName: BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour
    isDefinition: true
    commentId: Overload:Global.BattleTerrainBehaviourSnow.ExecuteTerrainBehaviour
  Global.BattleTerrainBehavioursBase.EndTerrainBehaviour:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase.EndTerrainBehaviour
        name: EndTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.EndTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.EndTerrainBehaviour
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.BattleTerrainBehavioursBase.EndTerrainBehaviour
        name: EndTerrainBehaviour
        nameWithType: BattleTerrainBehavioursBase.EndTerrainBehaviour
        qualifiedName: BattleTerrainBehavioursBase.EndTerrainBehaviour
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.BattleTerrainBehavioursBase
    commentId: M:Global.BattleTerrainBehavioursBase.EndTerrainBehaviour
  Global.BattleTerrainBehaviourSnow.EndTerrainBehaviour*:
    name:
      CSharp:
      - id: Global.BattleTerrainBehaviourSnow.EndTerrainBehaviour*
        name: EndTerrainBehaviour
        nameWithType: BattleTerrainBehaviourSnow.EndTerrainBehaviour
        qualifiedName: BattleTerrainBehaviourSnow.EndTerrainBehaviour
      VB:
      - id: Global.BattleTerrainBehaviourSnow.EndTerrainBehaviour*
        name: EndTerrainBehaviour
        nameWithType: BattleTerrainBehaviourSnow.EndTerrainBehaviour
        qualifiedName: BattleTerrainBehaviourSnow.EndTerrainBehaviour
    isDefinition: true
    commentId: Overload:Global.BattleTerrainBehaviourSnow.EndTerrainBehaviour
  Global.BattleTerrainBehaviourSnow:
    name:
      CSharp:
      - id: Global.BattleTerrainBehaviourSnow
        name: BattleTerrainBehaviourSnow
        nameWithType: BattleTerrainBehaviourSnow
        qualifiedName: BattleTerrainBehaviourSnow
      VB:
      - id: Global.BattleTerrainBehaviourSnow
        name: BattleTerrainBehaviourSnow
        nameWithType: BattleTerrainBehaviourSnow
        qualifiedName: BattleTerrainBehaviourSnow
    isDefinition: true
    commentId: T:Global.BattleTerrainBehaviourSnow
  System.Collections.Generic.List{TypesActions}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.TypesActions
        name: TypesActions
        nameWithType: TypesActions
        qualifiedName: TypesActions
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.TypesActions
        name: TypesActions
        nameWithType: TypesActions
        qualifiedName: TypesActions
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{TypesActions}
  Global.BattleTerrainDataSO.GetJsonActionCards*:
    name:
      CSharp:
      - id: Global.BattleTerrainDataSO.GetJsonActionCards*
        name: GetJsonActionCards
        nameWithType: BattleTerrainDataSO.GetJsonActionCards
        qualifiedName: BattleTerrainDataSO.GetJsonActionCards
      VB:
      - id: Global.BattleTerrainDataSO.GetJsonActionCards*
        name: GetJsonActionCards
        nameWithType: BattleTerrainDataSO.GetJsonActionCards
        qualifiedName: BattleTerrainDataSO.GetJsonActionCards
    isDefinition: true
    commentId: Overload:Global.BattleTerrainDataSO.GetJsonActionCards
  Global.TypesActions:
    name:
      CSharp:
      - id: Global.TypesActions
        name: TypesActions
        nameWithType: TypesActions
        qualifiedName: TypesActions
      VB:
      - id: Global.TypesActions
        name: TypesActions
        nameWithType: TypesActions
        qualifiedName: TypesActions
    isDefinition: true
    commentId: T:Global.TypesActions
  System.Collections.Generic.List{BattleAlteredStateBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleAlteredStateBase
        name: BattleAlteredStateBase
        nameWithType: BattleAlteredStateBase
        qualifiedName: BattleAlteredStateBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleAlteredStateBase
        name: BattleAlteredStateBase
        nameWithType: BattleAlteredStateBase
        qualifiedName: BattleAlteredStateBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleAlteredStateBase}
  Global.AlteredStateController.InitAlteredStateController*:
    name:
      CSharp:
      - id: Global.AlteredStateController.InitAlteredStateController*
        name: InitAlteredStateController
        nameWithType: AlteredStateController.InitAlteredStateController
        qualifiedName: AlteredStateController.InitAlteredStateController
      VB:
      - id: Global.AlteredStateController.InitAlteredStateController*
        name: InitAlteredStateController
        nameWithType: AlteredStateController.InitAlteredStateController
        qualifiedName: AlteredStateController.InitAlteredStateController
    isDefinition: true
    commentId: Overload:Global.AlteredStateController.InitAlteredStateController
  Global.AlteredStateController.CheckAlteredStates*:
    name:
      CSharp:
      - id: Global.AlteredStateController.CheckAlteredStates*
        name: CheckAlteredStates
        nameWithType: AlteredStateController.CheckAlteredStates
        qualifiedName: AlteredStateController.CheckAlteredStates
      VB:
      - id: Global.AlteredStateController.CheckAlteredStates*
        name: CheckAlteredStates
        nameWithType: AlteredStateController.CheckAlteredStates
        qualifiedName: AlteredStateController.CheckAlteredStates
    isDefinition: true
    commentId: Overload:Global.AlteredStateController.CheckAlteredStates
  Global.AlteredStateController.InitNewAlteredStates*:
    name:
      CSharp:
      - id: Global.AlteredStateController.InitNewAlteredStates*
        name: InitNewAlteredStates
        nameWithType: AlteredStateController.InitNewAlteredStates
        qualifiedName: AlteredStateController.InitNewAlteredStates
      VB:
      - id: Global.AlteredStateController.InitNewAlteredStates*
        name: InitNewAlteredStates
        nameWithType: AlteredStateController.InitNewAlteredStates
        qualifiedName: AlteredStateController.InitNewAlteredStates
    isDefinition: true
    commentId: Overload:Global.AlteredStateController.InitNewAlteredStates
  Global.AlteredStateController:
    name:
      CSharp:
      - id: Global.AlteredStateController
        name: AlteredStateController
        nameWithType: AlteredStateController
        qualifiedName: AlteredStateController
      VB:
      - id: Global.AlteredStateController
        name: AlteredStateController
        nameWithType: AlteredStateController
        qualifiedName: AlteredStateController
    isDefinition: true
    commentId: T:Global.AlteredStateController
  System.Collections.Generic.List{ActionCardDto}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{ActionCardDto}
  System.Collections.Generic.Dictionary{System.String,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  Global.MatchState:
    name:
      CSharp:
      - id: Global.MatchState
        name: MatchState
        nameWithType: MatchState
        qualifiedName: MatchState
      VB:
      - id: Global.MatchState
        name: MatchState
        nameWithType: MatchState
        qualifiedName: MatchState
    isDefinition: true
    commentId: T:Global.MatchState
  Global.VFXPositionData:
    name:
      CSharp:
      - id: Global.VFXPositionData
        name: VFXPositionData
        nameWithType: VFXPositionData
        qualifiedName: VFXPositionData
      VB:
      - id: Global.VFXPositionData
        name: VFXPositionData
        nameWithType: VFXPositionData
        qualifiedName: VFXPositionData
    isDefinition: true
    commentId: T:Global.VFXPositionData
  Global.VFXTypeData:
    name:
      CSharp:
      - id: Global.VFXTypeData
        name: VFXTypeData
        nameWithType: VFXTypeData
        qualifiedName: VFXTypeData
      VB:
      - id: Global.VFXTypeData
        name: VFXTypeData
        nameWithType: VFXTypeData
        qualifiedName: VFXTypeData
    isDefinition: true
    commentId: T:Global.VFXTypeData
  Global.OrderListener.UpdateOrdersFromNet*:
    name:
      CSharp:
      - id: Global.OrderListener.UpdateOrdersFromNet*
        name: UpdateOrdersFromNet
        nameWithType: OrderListener.UpdateOrdersFromNet
        qualifiedName: OrderListener.UpdateOrdersFromNet
      VB:
      - id: Global.OrderListener.UpdateOrdersFromNet*
        name: UpdateOrdersFromNet
        nameWithType: OrderListener.UpdateOrdersFromNet
        qualifiedName: OrderListener.UpdateOrdersFromNet
    isDefinition: true
    commentId: Overload:Global.OrderListener.UpdateOrdersFromNet
  Global.Action{System.Int32}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.Int32}'
  Global.Combat:
    name:
      CSharp:
      - id: Global.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Combat
        isExternal: true
      VB:
      - id: Global.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Combat
        isExternal: true
    isDefinition: true
  Global.OrderListener.KnowPlayerIndex*:
    name:
      CSharp:
      - id: Global.OrderListener.KnowPlayerIndex*
        name: KnowPlayerIndex
        nameWithType: OrderListener.KnowPlayerIndex
        qualifiedName: OrderListener.KnowPlayerIndex
      VB:
      - id: Global.OrderListener.KnowPlayerIndex*
        name: KnowPlayerIndex
        nameWithType: OrderListener.KnowPlayerIndex
        qualifiedName: OrderListener.KnowPlayerIndex
    isDefinition: true
    commentId: Overload:Global.OrderListener.KnowPlayerIndex
  Global.OrderListener.ChangeShinsei*:
    name:
      CSharp:
      - id: Global.OrderListener.ChangeShinsei*
        name: ChangeShinsei
        nameWithType: OrderListener.ChangeShinsei
        qualifiedName: OrderListener.ChangeShinsei
      VB:
      - id: Global.OrderListener.ChangeShinsei*
        name: ChangeShinsei
        nameWithType: OrderListener.ChangeShinsei
        qualifiedName: OrderListener.ChangeShinsei
    isDefinition: true
    commentId: Overload:Global.OrderListener.ChangeShinsei
  Global.OrderListener.UpdateTurn*:
    name:
      CSharp:
      - id: Global.OrderListener.UpdateTurn*
        name: UpdateTurn
        nameWithType: OrderListener.UpdateTurn
        qualifiedName: OrderListener.UpdateTurn
      VB:
      - id: Global.OrderListener.UpdateTurn*
        name: UpdateTurn
        nameWithType: OrderListener.UpdateTurn
        qualifiedName: OrderListener.UpdateTurn
    isDefinition: true
    commentId: Overload:Global.OrderListener.UpdateTurn
  Global.OrderListener:
    name:
      CSharp:
      - id: Global.OrderListener
        name: OrderListener
        nameWithType: OrderListener
        qualifiedName: OrderListener
      VB:
      - id: Global.OrderListener
        name: OrderListener
        nameWithType: OrderListener
        qualifiedName: OrderListener
    isDefinition: true
    commentId: T:Global.OrderListener
  Global.OrderMessageType:
    name:
      CSharp:
      - id: Global.OrderMessageType
        name: OrderMessageType
        nameWithType: OrderMessageType
        qualifiedName: OrderMessageType
      VB:
      - id: Global.OrderMessageType
        name: OrderMessageType
        nameWithType: OrderMessageType
        qualifiedName: OrderMessageType
    isDefinition: true
    commentId: T:Global.OrderMessageType
  Global.UpdateTurnData:
    name:
      CSharp:
      - id: Global.UpdateTurnData
        name: UpdateTurnData
        nameWithType: UpdateTurnData
        qualifiedName: UpdateTurnData
      VB:
      - id: Global.UpdateTurnData
        name: UpdateTurnData
        nameWithType: UpdateTurnData
        qualifiedName: UpdateTurnData
    isDefinition: true
    commentId: T:Global.UpdateTurnData
  Global.MMConditionAttribute.#ctor*:
    name:
      CSharp:
      - id: Global.MMConditionAttribute.#ctor*
        name: MMConditionAttribute
        nameWithType: MMConditionAttribute.MMConditionAttribute
        qualifiedName: MMConditionAttribute.MMConditionAttribute
      VB:
      - id: Global.MMConditionAttribute.#ctor*
        name: MMConditionAttribute
        nameWithType: MMConditionAttribute.MMConditionAttribute
        qualifiedName: MMConditionAttribute.MMConditionAttribute
    isDefinition: true
    commentId: Overload:Global.MMConditionAttribute.#ctor
  Global.MMConditionAttribute:
    name:
      CSharp:
      - id: Global.MMConditionAttribute
        name: MMConditionAttribute
        nameWithType: MMConditionAttribute
        qualifiedName: MMConditionAttribute
      VB:
      - id: Global.MMConditionAttribute
        name: MMConditionAttribute
        nameWithType: MMConditionAttribute
        qualifiedName: MMConditionAttribute
    isDefinition: true
    commentId: T:Global.MMConditionAttribute
  Global.MMEnumConditionAttribute.ContainsBitFlag*:
    name:
      CSharp:
      - id: Global.MMEnumConditionAttribute.ContainsBitFlag*
        name: ContainsBitFlag
        nameWithType: MMEnumConditionAttribute.ContainsBitFlag
        qualifiedName: MMEnumConditionAttribute.ContainsBitFlag
      VB:
      - id: Global.MMEnumConditionAttribute.ContainsBitFlag*
        name: ContainsBitFlag
        nameWithType: MMEnumConditionAttribute.ContainsBitFlag
        qualifiedName: MMEnumConditionAttribute.ContainsBitFlag
    isDefinition: true
    commentId: Overload:Global.MMEnumConditionAttribute.ContainsBitFlag
  System.Int32[]:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.MMEnumConditionAttribute.#ctor*:
    name:
      CSharp:
      - id: Global.MMEnumConditionAttribute.#ctor*
        name: MMEnumConditionAttribute
        nameWithType: MMEnumConditionAttribute.MMEnumConditionAttribute
        qualifiedName: MMEnumConditionAttribute.MMEnumConditionAttribute
      VB:
      - id: Global.MMEnumConditionAttribute.#ctor*
        name: MMEnumConditionAttribute
        nameWithType: MMEnumConditionAttribute.MMEnumConditionAttribute
        qualifiedName: MMEnumConditionAttribute.MMEnumConditionAttribute
    isDefinition: true
    commentId: Overload:Global.MMEnumConditionAttribute.#ctor
  Global.MMEnumConditionAttribute:
    name:
      CSharp:
      - id: Global.MMEnumConditionAttribute
        name: MMEnumConditionAttribute
        nameWithType: MMEnumConditionAttribute
        qualifiedName: MMEnumConditionAttribute
      VB:
      - id: Global.MMEnumConditionAttribute
        name: MMEnumConditionAttribute
        nameWithType: MMEnumConditionAttribute
        qualifiedName: MMEnumConditionAttribute
    isDefinition: true
    commentId: T:Global.MMEnumConditionAttribute
  Global.MMReadOnlyAttribute:
    name:
      CSharp:
      - id: Global.MMReadOnlyAttribute
        name: MMReadOnlyAttribute
        nameWithType: MMReadOnlyAttribute
        qualifiedName: MMReadOnlyAttribute
      VB:
      - id: Global.MMReadOnlyAttribute
        name: MMReadOnlyAttribute
        nameWithType: MMReadOnlyAttribute
        qualifiedName: MMReadOnlyAttribute
    isDefinition: true
    commentId: T:Global.MMReadOnlyAttribute
  Global.CharacterDatabase:
    name:
      CSharp:
      - id: Global.CharacterDatabase
        name: CharacterDatabase
        nameWithType: CharacterDatabase
        qualifiedName: CharacterDatabase
      VB:
      - id: Global.CharacterDatabase
        name: CharacterDatabase
        nameWithType: CharacterDatabase
        qualifiedName: CharacterDatabase
    isDefinition: true
    commentId: T:Global.CharacterDatabase
  Global.JPGGenerator.GenerateRandomJPG*:
    name:
      CSharp:
      - id: Global.JPGGenerator.GenerateRandomJPG*
        name: GenerateRandomJPG
        nameWithType: JPGGenerator.GenerateRandomJPG
        qualifiedName: JPGGenerator.GenerateRandomJPG
      VB:
      - id: Global.JPGGenerator.GenerateRandomJPG*
        name: GenerateRandomJPG
        nameWithType: JPGGenerator.GenerateRandomJPG
        qualifiedName: JPGGenerator.GenerateRandomJPG
    isDefinition: true
    commentId: Overload:Global.JPGGenerator.GenerateRandomJPG
  Global.JPGGenerator.GenerateRandomPNG*:
    name:
      CSharp:
      - id: Global.JPGGenerator.GenerateRandomPNG*
        name: GenerateRandomPNG
        nameWithType: JPGGenerator.GenerateRandomPNG
        qualifiedName: JPGGenerator.GenerateRandomPNG
      VB:
      - id: Global.JPGGenerator.GenerateRandomPNG*
        name: GenerateRandomPNG
        nameWithType: JPGGenerator.GenerateRandomPNG
        qualifiedName: JPGGenerator.GenerateRandomPNG
    isDefinition: true
    commentId: Overload:Global.JPGGenerator.GenerateRandomPNG
  Global.JPGGenerator.Capture*:
    name:
      CSharp:
      - id: Global.JPGGenerator.Capture*
        name: Capture
        nameWithType: JPGGenerator.Capture
        qualifiedName: JPGGenerator.Capture
      VB:
      - id: Global.JPGGenerator.Capture*
        name: Capture
        nameWithType: JPGGenerator.Capture
        qualifiedName: JPGGenerator.Capture
    isDefinition: true
    commentId: Overload:Global.JPGGenerator.Capture
  Global.JPGGenerator:
    name:
      CSharp:
      - id: Global.JPGGenerator
        name: JPGGenerator
        nameWithType: JPGGenerator
        qualifiedName: JPGGenerator
      VB:
      - id: Global.JPGGenerator
        name: JPGGenerator
        nameWithType: JPGGenerator
        qualifiedName: JPGGenerator
    isDefinition: true
    commentId: T:Global.JPGGenerator
  Global.NFTGenerator.CreateNFTs*:
    name:
      CSharp:
      - id: Global.NFTGenerator.CreateNFTs*
        name: CreateNFTs
        nameWithType: NFTGenerator.CreateNFTs
        qualifiedName: NFTGenerator.CreateNFTs
      VB:
      - id: Global.NFTGenerator.CreateNFTs*
        name: CreateNFTs
        nameWithType: NFTGenerator.CreateNFTs
        qualifiedName: NFTGenerator.CreateNFTs
    isDefinition: true
    commentId: Overload:Global.NFTGenerator.CreateNFTs
  Global.NFTGenerator:
    name:
      CSharp:
      - id: Global.NFTGenerator
        name: NFTGenerator
        nameWithType: NFTGenerator
        qualifiedName: NFTGenerator
      VB:
      - id: Global.NFTGenerator
        name: NFTGenerator
        nameWithType: NFTGenerator
        qualifiedName: NFTGenerator
    isDefinition: true
    commentId: T:Global.NFTGenerator
  Global.NFTsModel.NFTsID*:
    name:
      CSharp:
      - id: Global.NFTsModel.NFTsID*
        name: NFTsID
        nameWithType: NFTsModel.NFTsID
        qualifiedName: NFTsModel.NFTsID
      VB:
      - id: Global.NFTsModel.NFTsID*
        name: NFTsID
        nameWithType: NFTsModel.NFTsID
        qualifiedName: NFTsModel.NFTsID
    isDefinition: true
    commentId: Overload:Global.NFTsModel.NFTsID
  Global.NFTsModel:
    name:
      CSharp:
      - id: Global.NFTsModel
        name: NFTsModel
        nameWithType: NFTsModel
        qualifiedName: NFTsModel
      VB:
      - id: Global.NFTsModel
        name: NFTsModel
        nameWithType: NFTsModel
        qualifiedName: NFTsModel
    isDefinition: true
    commentId: T:Global.NFTsModel
  Global.RotateWithDrag:
    name:
      CSharp:
      - id: Global.RotateWithDrag
        name: RotateWithDrag
        nameWithType: RotateWithDrag
        qualifiedName: RotateWithDrag
      VB:
      - id: Global.RotateWithDrag
        name: RotateWithDrag
        nameWithType: RotateWithDrag
        qualifiedName: RotateWithDrag
    isDefinition: true
    commentId: T:Global.RotateWithDrag
  Global.GameController:
    name:
      CSharp:
      - id: Global.GameController
        name: GameController
        nameWithType: GameController
        qualifiedName: GameController
      VB:
      - id: Global.GameController
        name: GameController
        nameWithType: GameController
        qualifiedName: GameController
    isDefinition: true
    commentId: T:Global.GameController
  System.Action:
    name:
      CSharp:
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      VB:
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Action
  Global.TransparentBackgroundScreenshotRecorder:
    name:
      CSharp:
      - id: Global.TransparentBackgroundScreenshotRecorder
        name: TransparentBackgroundScreenshotRecorder
        nameWithType: TransparentBackgroundScreenshotRecorder
        qualifiedName: TransparentBackgroundScreenshotRecorder
      VB:
      - id: Global.TransparentBackgroundScreenshotRecorder
        name: TransparentBackgroundScreenshotRecorder
        nameWithType: TransparentBackgroundScreenshotRecorder
        qualifiedName: TransparentBackgroundScreenshotRecorder
    isDefinition: true
    commentId: T:Global.TransparentBackgroundScreenshotRecorder
  System.Collections.Generic.List{CharacterSlot}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CharacterSlot
        name: CharacterSlot
        nameWithType: CharacterSlot
        qualifiedName: CharacterSlot
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CharacterSlot
        name: CharacterSlot
        nameWithType: CharacterSlot
        qualifiedName: CharacterSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CharacterSlot}
  Global.CharacterDatabase.CharacterSlotPrefabsList*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.CharacterSlotPrefabsList*
        name: CharacterSlotPrefabsList
        nameWithType: CharacterDatabase.CharacterSlotPrefabsList
        qualifiedName: CharacterDatabase.CharacterSlotPrefabsList
      VB:
      - id: Global.CharacterDatabase.CharacterSlotPrefabsList*
        name: CharacterSlotPrefabsList
        nameWithType: CharacterDatabase.CharacterSlotPrefabsList
        qualifiedName: CharacterDatabase.CharacterSlotPrefabsList
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.CharacterSlotPrefabsList
  Global.CharacterDatabase.RemoveEmptyCharacterPrefabs*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.RemoveEmptyCharacterPrefabs*
        name: RemoveEmptyCharacterPrefabs
        nameWithType: CharacterDatabase.RemoveEmptyCharacterPrefabs
        qualifiedName: CharacterDatabase.RemoveEmptyCharacterPrefabs
      VB:
      - id: Global.CharacterDatabase.RemoveEmptyCharacterPrefabs*
        name: RemoveEmptyCharacterPrefabs
        nameWithType: CharacterDatabase.RemoveEmptyCharacterPrefabs
        qualifiedName: CharacterDatabase.RemoveEmptyCharacterPrefabs
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.RemoveEmptyCharacterPrefabs
  Global.CharacterSlot:
    name:
      CSharp:
      - id: Global.CharacterSlot
        name: CharacterSlot
        nameWithType: CharacterSlot
        qualifiedName: CharacterSlot
        isExternal: true
      VB:
      - id: Global.CharacterSlot
        name: CharacterSlot
        nameWithType: CharacterSlot
        qualifiedName: CharacterSlot
        isExternal: true
    isDefinition: true
  Global.CharacterDatabase.AddCharacterSlotToArray*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.AddCharacterSlotToArray*
        name: AddCharacterSlotToArray
        nameWithType: CharacterDatabase.AddCharacterSlotToArray
        qualifiedName: CharacterDatabase.AddCharacterSlotToArray
      VB:
      - id: Global.CharacterDatabase.AddCharacterSlotToArray*
        name: AddCharacterSlotToArray
        nameWithType: CharacterDatabase.AddCharacterSlotToArray
        qualifiedName: CharacterDatabase.AddCharacterSlotToArray
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.AddCharacterSlotToArray
  Global.PartType:
    name:
      CSharp:
      - id: Global.PartType
        name: PartType
        nameWithType: PartType
        qualifiedName: PartType
      VB:
      - id: Global.PartType
        name: PartType
        nameWithType: PartType
        qualifiedName: PartType
    isDefinition: true
    commentId: T:Global.PartType
  Global.CharacterDatabase.FindPartTypeInName*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.FindPartTypeInName*
        name: FindPartTypeInName
        nameWithType: CharacterDatabase.FindPartTypeInName
        qualifiedName: CharacterDatabase.FindPartTypeInName
      VB:
      - id: Global.CharacterDatabase.FindPartTypeInName*
        name: FindPartTypeInName
        nameWithType: CharacterDatabase.FindPartTypeInName
        qualifiedName: CharacterDatabase.FindPartTypeInName
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.FindPartTypeInName
  Global.Action{GameObject}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{GameObject}'
  Global.CharacterDatabase.FindPartSlots*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.FindPartSlots*
        name: FindPartSlots
        nameWithType: CharacterDatabase.FindPartSlots
        qualifiedName: CharacterDatabase.FindPartSlots
      VB:
      - id: Global.CharacterDatabase.FindPartSlots*
        name: FindPartSlots
        nameWithType: CharacterDatabase.FindPartSlots
        qualifiedName: CharacterDatabase.FindPartSlots
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.FindPartSlots
  Global.CharacterDatabase.FindPartEntities*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.FindPartEntities*
        name: FindPartEntities
        nameWithType: CharacterDatabase.FindPartEntities
        qualifiedName: CharacterDatabase.FindPartEntities
      VB:
      - id: Global.CharacterDatabase.FindPartEntities*
        name: FindPartEntities
        nameWithType: CharacterDatabase.FindPartEntities
        qualifiedName: CharacterDatabase.FindPartEntities
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.FindPartEntities
  Global.CharacterDatabase.CaptureImagePath*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.CaptureImagePath*
        name: CaptureImagePath
        nameWithType: CharacterDatabase.CaptureImagePath
        qualifiedName: CharacterDatabase.CaptureImagePath
      VB:
      - id: Global.CharacterDatabase.CaptureImagePath*
        name: CaptureImagePath
        nameWithType: CharacterDatabase.CaptureImagePath
        qualifiedName: CharacterDatabase.CaptureImagePath
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.CaptureImagePath
  System.Collections.Generic.List{PartEntityModel}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PartEntityModel
        name: PartEntityModel
        nameWithType: PartEntityModel
        qualifiedName: PartEntityModel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PartEntityModel
        name: PartEntityModel
        nameWithType: PartEntityModel
        qualifiedName: PartEntityModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PartEntityModel}
  Global.CharacterDatabase.PartEntityModel*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.PartEntityModel*
        name: PartEntityModel
        nameWithType: CharacterDatabase.PartEntityModel
        qualifiedName: CharacterDatabase.PartEntityModel
      VB:
      - id: Global.CharacterDatabase.PartEntityModel*
        name: PartEntityModel
        nameWithType: CharacterDatabase.PartEntityModel
        qualifiedName: CharacterDatabase.PartEntityModel
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.PartEntityModel
  Global.NFTsModel[]:
    name:
      CSharp:
      - id: Global.NFTsModel
        name: NFTsModel
        nameWithType: NFTsModel
        qualifiedName: NFTsModel
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.NFTsModel
        name: NFTsModel
        nameWithType: NFTsModel
        qualifiedName: NFTsModel
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.CharacterDatabase.NFTsModels*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.NFTsModels*
        name: NFTsModels
        nameWithType: CharacterDatabase.NFTsModels
        qualifiedName: CharacterDatabase.NFTsModels
      VB:
      - id: Global.CharacterDatabase.NFTsModels*
        name: NFTsModels
        nameWithType: CharacterDatabase.NFTsModels
        qualifiedName: CharacterDatabase.NFTsModels
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.NFTsModels
  Global.CharacterDatabase.AddElement*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.AddElement*
        name: AddElement
        nameWithType: CharacterDatabase.AddElement
        qualifiedName: CharacterDatabase.AddElement
      VB:
      - id: Global.CharacterDatabase.AddElement*
        name: AddElement
        nameWithType: CharacterDatabase.AddElement
        qualifiedName: CharacterDatabase.AddElement
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.AddElement
  Global.PartEntity:
    name:
      CSharp:
      - id: Global.PartEntity
        name: PartEntity
        nameWithType: PartEntity
        qualifiedName: PartEntity
      VB:
      - id: Global.PartEntity
        name: PartEntity
        nameWithType: PartEntity
        qualifiedName: PartEntity
    isDefinition: true
    commentId: T:Global.PartEntity
  Global.CharacterDatabase.AddPartEntityToArray*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.AddPartEntityToArray*
        name: AddPartEntityToArray
        nameWithType: CharacterDatabase.AddPartEntityToArray
        qualifiedName: CharacterDatabase.AddPartEntityToArray
      VB:
      - id: Global.CharacterDatabase.AddPartEntityToArray*
        name: AddPartEntityToArray
        nameWithType: CharacterDatabase.AddPartEntityToArray
        qualifiedName: CharacterDatabase.AddPartEntityToArray
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.AddPartEntityToArray
  Global.CharacterDatabase.DetermineEntityRarity*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.DetermineEntityRarity*
        name: DetermineEntityRarity
        nameWithType: CharacterDatabase.DetermineEntityRarity
        qualifiedName: CharacterDatabase.DetermineEntityRarity
      VB:
      - id: Global.CharacterDatabase.DetermineEntityRarity*
        name: DetermineEntityRarity
        nameWithType: CharacterDatabase.DetermineEntityRarity
        qualifiedName: CharacterDatabase.DetermineEntityRarity
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.DetermineEntityRarity
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.CharacterDatabase.GetNFT*:
    name:
      CSharp:
      - id: Global.CharacterDatabase.GetNFT*
        name: GetNFT
        nameWithType: CharacterDatabase.GetNFT
        qualifiedName: CharacterDatabase.GetNFT
      VB:
      - id: Global.CharacterDatabase.GetNFT*
        name: GetNFT
        nameWithType: CharacterDatabase.GetNFT
        qualifiedName: CharacterDatabase.GetNFT
    isDefinition: true
    commentId: Overload:Global.CharacterDatabase.GetNFT
  Global.PartEntityModel.PartType*:
    name:
      CSharp:
      - id: Global.PartEntityModel.PartType*
        name: PartType
        nameWithType: PartEntityModel.PartType
        qualifiedName: PartEntityModel.PartType
      VB:
      - id: Global.PartEntityModel.PartType*
        name: PartType
        nameWithType: PartEntityModel.PartType
        qualifiedName: PartEntityModel.PartType
    isDefinition: true
    commentId: Overload:Global.PartEntityModel.PartType
  System.Collections.Generic.List{PartRarityModel}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PartRarityModel
        name: PartRarityModel
        nameWithType: PartRarityModel
        qualifiedName: PartRarityModel
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PartRarityModel
        name: PartRarityModel
        nameWithType: PartRarityModel
        qualifiedName: PartRarityModel
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PartRarityModel}
  Global.PartEntityModel.PartRarityModels*:
    name:
      CSharp:
      - id: Global.PartEntityModel.PartRarityModels*
        name: PartRarityModels
        nameWithType: PartEntityModel.PartRarityModels
        qualifiedName: PartEntityModel.PartRarityModels
      VB:
      - id: Global.PartEntityModel.PartRarityModels*
        name: PartRarityModels
        nameWithType: PartEntityModel.PartRarityModels
        qualifiedName: PartEntityModel.PartRarityModels
    isDefinition: true
    commentId: Overload:Global.PartEntityModel.PartRarityModels
  Global.PartEntityModel.AddEntity*:
    name:
      CSharp:
      - id: Global.PartEntityModel.AddEntity*
        name: AddEntity
        nameWithType: PartEntityModel.AddEntity
        qualifiedName: PartEntityModel.AddEntity
      VB:
      - id: Global.PartEntityModel.AddEntity*
        name: AddEntity
        nameWithType: PartEntityModel.AddEntity
        qualifiedName: PartEntityModel.AddEntity
    isDefinition: true
    commentId: Overload:Global.PartEntityModel.AddEntity
  Global.PartEntityModel:
    name:
      CSharp:
      - id: Global.PartEntityModel
        name: PartEntityModel
        nameWithType: PartEntityModel
        qualifiedName: PartEntityModel
      VB:
      - id: Global.PartEntityModel
        name: PartEntityModel
        nameWithType: PartEntityModel
        qualifiedName: PartEntityModel
    isDefinition: true
    commentId: T:Global.PartEntityModel
  Global.PartRarityModel.PartRarityType*:
    name:
      CSharp:
      - id: Global.PartRarityModel.PartRarityType*
        name: PartRarityType
        nameWithType: PartRarityModel.PartRarityType
        qualifiedName: PartRarityModel.PartRarityType
      VB:
      - id: Global.PartRarityModel.PartRarityType*
        name: PartRarityType
        nameWithType: PartRarityModel.PartRarityType
        qualifiedName: PartRarityModel.PartRarityType
    isDefinition: true
    commentId: Overload:Global.PartRarityModel.PartRarityType
  System.Collections.Generic.List{PartEntity}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PartEntity
        name: PartEntity
        nameWithType: PartEntity
        qualifiedName: PartEntity
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PartEntity
        name: PartEntity
        nameWithType: PartEntity
        qualifiedName: PartEntity
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PartEntity}
  Global.PartRarityModel.PartEntities*:
    name:
      CSharp:
      - id: Global.PartRarityModel.PartEntities*
        name: PartEntities
        nameWithType: PartRarityModel.PartEntities
        qualifiedName: PartRarityModel.PartEntities
      VB:
      - id: Global.PartRarityModel.PartEntities*
        name: PartEntities
        nameWithType: PartRarityModel.PartEntities
        qualifiedName: PartRarityModel.PartEntities
    isDefinition: true
    commentId: Overload:Global.PartRarityModel.PartEntities
  Global.PartRarityModel.#ctor*:
    name:
      CSharp:
      - id: Global.PartRarityModel.#ctor*
        name: PartRarityModel
        nameWithType: PartRarityModel.PartRarityModel
        qualifiedName: PartRarityModel.PartRarityModel
      VB:
      - id: Global.PartRarityModel.#ctor*
        name: PartRarityModel
        nameWithType: PartRarityModel.PartRarityModel
        qualifiedName: PartRarityModel.PartRarityModel
    isDefinition: true
    commentId: Overload:Global.PartRarityModel.#ctor
  Global.PartRarityModel.AddEntity*:
    name:
      CSharp:
      - id: Global.PartRarityModel.AddEntity*
        name: AddEntity
        nameWithType: PartRarityModel.AddEntity
        qualifiedName: PartRarityModel.AddEntity
      VB:
      - id: Global.PartRarityModel.AddEntity*
        name: AddEntity
        nameWithType: PartRarityModel.AddEntity
        qualifiedName: PartRarityModel.AddEntity
    isDefinition: true
    commentId: Overload:Global.PartRarityModel.AddEntity
  Global.PartRarityModel.RemoveEntity*:
    name:
      CSharp:
      - id: Global.PartRarityModel.RemoveEntity*
        name: RemoveEntity
        nameWithType: PartRarityModel.RemoveEntity
        qualifiedName: PartRarityModel.RemoveEntity
      VB:
      - id: Global.PartRarityModel.RemoveEntity*
        name: RemoveEntity
        nameWithType: PartRarityModel.RemoveEntity
        qualifiedName: PartRarityModel.RemoveEntity
    isDefinition: true
    commentId: Overload:Global.PartRarityModel.RemoveEntity
  Global.PartRarityModel:
    name:
      CSharp:
      - id: Global.PartRarityModel
        name: PartRarityModel
        nameWithType: PartRarityModel
        qualifiedName: PartRarityModel
      VB:
      - id: Global.PartRarityModel
        name: PartRarityModel
        nameWithType: PartRarityModel
        qualifiedName: PartRarityModel
    isDefinition: true
    commentId: T:Global.PartRarityModel
  Global.CharacterSelector:
    name:
      CSharp:
      - id: Global.CharacterSelector
        name: CharacterSelector
        nameWithType: CharacterSelector
        qualifiedName: CharacterSelector
        isExternal: true
      VB:
      - id: Global.CharacterSelector
        name: CharacterSelector
        nameWithType: CharacterSelector
        qualifiedName: CharacterSelector
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CharacterSelector'
  Global.PartSelector:
    name:
      CSharp:
      - id: Global.PartSelector
        name: PartSelector
        nameWithType: PartSelector
        qualifiedName: PartSelector
      VB:
      - id: Global.PartSelector
        name: PartSelector
        nameWithType: PartSelector
        qualifiedName: PartSelector
    isDefinition: true
    commentId: T:Global.PartSelector
  Global.CharacterSelectorController.SelectCharacter*:
    name:
      CSharp:
      - id: Global.CharacterSelectorController.SelectCharacter*
        name: SelectCharacter
        nameWithType: CharacterSelectorController.SelectCharacter
        qualifiedName: CharacterSelectorController.SelectCharacter
      VB:
      - id: Global.CharacterSelectorController.SelectCharacter*
        name: SelectCharacter
        nameWithType: CharacterSelectorController.SelectCharacter
        qualifiedName: CharacterSelectorController.SelectCharacter
    isDefinition: true
    commentId: Overload:Global.CharacterSelectorController.SelectCharacter
  Global.PartSlot:
    name:
      CSharp:
      - id: Global.PartSlot
        name: PartSlot
        nameWithType: PartSlot
        qualifiedName: PartSlot
      VB:
      - id: Global.PartSlot
        name: PartSlot
        nameWithType: PartSlot
        qualifiedName: PartSlot
    isDefinition: true
    commentId: T:Global.PartSlot
  Global.CharacterSelectorController.OnButtonPress*:
    name:
      CSharp:
      - id: Global.CharacterSelectorController.OnButtonPress*
        name: OnButtonPress
        nameWithType: CharacterSelectorController.OnButtonPress
        qualifiedName: CharacterSelectorController.OnButtonPress
      VB:
      - id: Global.CharacterSelectorController.OnButtonPress*
        name: OnButtonPress
        nameWithType: CharacterSelectorController.OnButtonPress
        qualifiedName: CharacterSelectorController.OnButtonPress
    isDefinition: true
    commentId: Overload:Global.CharacterSelectorController.OnButtonPress
  Global.CharacterSelectorController.GetCharacterUniqueID*:
    name:
      CSharp:
      - id: Global.CharacterSelectorController.GetCharacterUniqueID*
        name: GetCharacterUniqueID
        nameWithType: CharacterSelectorController.GetCharacterUniqueID
        qualifiedName: CharacterSelectorController.GetCharacterUniqueID
      VB:
      - id: Global.CharacterSelectorController.GetCharacterUniqueID*
        name: GetCharacterUniqueID
        nameWithType: CharacterSelectorController.GetCharacterUniqueID
        qualifiedName: CharacterSelectorController.GetCharacterUniqueID
    isDefinition: true
    commentId: Overload:Global.CharacterSelectorController.GetCharacterUniqueID
  Global.CharacterSelectorController.OnRandomSelect*:
    name:
      CSharp:
      - id: Global.CharacterSelectorController.OnRandomSelect*
        name: OnRandomSelect
        nameWithType: CharacterSelectorController.OnRandomSelect
        qualifiedName: CharacterSelectorController.OnRandomSelect
      VB:
      - id: Global.CharacterSelectorController.OnRandomSelect*
        name: OnRandomSelect
        nameWithType: CharacterSelectorController.OnRandomSelect
        qualifiedName: CharacterSelectorController.OnRandomSelect
    isDefinition: true
    commentId: Overload:Global.CharacterSelectorController.OnRandomSelect
  Global.CharacterSelectorController:
    name:
      CSharp:
      - id: Global.CharacterSelectorController
        name: CharacterSelectorController
        nameWithType: CharacterSelectorController
        qualifiedName: CharacterSelectorController
      VB:
      - id: Global.CharacterSelectorController
        name: CharacterSelectorController
        nameWithType: CharacterSelectorController
        qualifiedName: CharacterSelectorController
    isDefinition: true
    commentId: T:Global.CharacterSelectorController
  System.Int64:
    name:
      CSharp:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      VB:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int64
  Global.CharacterAPI:
    name:
      CSharp:
      - id: Global.CharacterAPI
        name: CharacterAPI
        nameWithType: CharacterAPI
        qualifiedName: CharacterAPI
      VB:
      - id: Global.CharacterAPI
        name: CharacterAPI
        nameWithType: CharacterAPI
        qualifiedName: CharacterAPI
    isDefinition: true
    commentId: T:Global.CharacterAPI
  Global.PartIndex.GenerateRandomShinsei*:
    name:
      CSharp:
      - id: Global.PartIndex.GenerateRandomShinsei*
        name: GenerateRandomShinsei
        nameWithType: PartIndex.GenerateRandomShinsei
        qualifiedName: PartIndex.GenerateRandomShinsei
      VB:
      - id: Global.PartIndex.GenerateRandomShinsei*
        name: GenerateRandomShinsei
        nameWithType: PartIndex.GenerateRandomShinsei
        qualifiedName: PartIndex.GenerateRandomShinsei
    isDefinition: true
    commentId: Overload:Global.PartIndex.GenerateRandomShinsei
  Global.PartIndex.SetShinseiColor*:
    name:
      CSharp:
      - id: Global.PartIndex.SetShinseiColor*
        name: SetShinseiColor
        nameWithType: PartIndex.SetShinseiColor
        qualifiedName: PartIndex.SetShinseiColor
      VB:
      - id: Global.PartIndex.SetShinseiColor*
        name: SetShinseiColor
        nameWithType: PartIndex.SetShinseiColor
        qualifiedName: PartIndex.SetShinseiColor
    isDefinition: true
    commentId: Overload:Global.PartIndex.SetShinseiColor
  Global.PartIndex.GetShinseiType*:
    name:
      CSharp:
      - id: Global.PartIndex.GetShinseiType*
        name: GetShinseiType
        nameWithType: PartIndex.GetShinseiType
        qualifiedName: PartIndex.GetShinseiType
      VB:
      - id: Global.PartIndex.GetShinseiType*
        name: GetShinseiType
        nameWithType: PartIndex.GetShinseiType
        qualifiedName: PartIndex.GetShinseiType
    isDefinition: true
    commentId: Overload:Global.PartIndex.GetShinseiType
  Global.PartIndex.GetShinseiRarity*:
    name:
      CSharp:
      - id: Global.PartIndex.GetShinseiRarity*
        name: GetShinseiRarity
        nameWithType: PartIndex.GetShinseiRarity
        qualifiedName: PartIndex.GetShinseiRarity
      VB:
      - id: Global.PartIndex.GetShinseiRarity*
        name: GetShinseiRarity
        nameWithType: PartIndex.GetShinseiRarity
        qualifiedName: PartIndex.GetShinseiRarity
    isDefinition: true
    commentId: Overload:Global.PartIndex.GetShinseiRarity
  Global.Enum:
    name:
      CSharp:
      - id: Global.Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
      VB:
      - id: Global.Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
    isDefinition: true
  Global.PartIndex.GetShinseiPartTypes*:
    name:
      CSharp:
      - id: Global.PartIndex.GetShinseiPartTypes*
        name: GetShinseiPartTypes
        nameWithType: PartIndex.GetShinseiPartTypes
        qualifiedName: PartIndex.GetShinseiPartTypes
      VB:
      - id: Global.PartIndex.GetShinseiPartTypes*
        name: GetShinseiPartTypes
        nameWithType: PartIndex.GetShinseiPartTypes
        qualifiedName: PartIndex.GetShinseiPartTypes
    isDefinition: true
    commentId: Overload:Global.PartIndex.GetShinseiPartTypes
  Global.PartIndex.ClearAllLists*:
    name:
      CSharp:
      - id: Global.PartIndex.ClearAllLists*
        name: ClearAllLists
        nameWithType: PartIndex.ClearAllLists
        qualifiedName: PartIndex.ClearAllLists
      VB:
      - id: Global.PartIndex.ClearAllLists*
        name: ClearAllLists
        nameWithType: PartIndex.ClearAllLists
        qualifiedName: PartIndex.ClearAllLists
    isDefinition: true
    commentId: Overload:Global.PartIndex.ClearAllLists
  Global.PartIndex.ParseShinseiDNA*:
    name:
      CSharp:
      - id: Global.PartIndex.ParseShinseiDNA*
        name: ParseShinseiDNA
        nameWithType: PartIndex.ParseShinseiDNA
        qualifiedName: PartIndex.ParseShinseiDNA
      VB:
      - id: Global.PartIndex.ParseShinseiDNA*
        name: ParseShinseiDNA
        nameWithType: PartIndex.ParseShinseiDNA
        qualifiedName: PartIndex.ParseShinseiDNA
    isDefinition: true
    commentId: Overload:Global.PartIndex.ParseShinseiDNA
  System.Collections.Generic.Dictionary{System.String,System.Int64}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int64}
  Global.PartIndex.GetPartsDna*:
    name:
      CSharp:
      - id: Global.PartIndex.GetPartsDna*
        name: GetPartsDna
        nameWithType: PartIndex.GetPartsDna
        qualifiedName: PartIndex.GetPartsDna
      VB:
      - id: Global.PartIndex.GetPartsDna*
        name: GetPartsDna
        nameWithType: PartIndex.GetPartsDna
        qualifiedName: PartIndex.GetPartsDna
    isDefinition: true
    commentId: Overload:Global.PartIndex.GetPartsDna
  Global.PartIndex.SeparateShinseiParts*:
    name:
      CSharp:
      - id: Global.PartIndex.SeparateShinseiParts*
        name: SeparateShinseiParts
        nameWithType: PartIndex.SeparateShinseiParts
        qualifiedName: PartIndex.SeparateShinseiParts
      VB:
      - id: Global.PartIndex.SeparateShinseiParts*
        name: SeparateShinseiParts
        nameWithType: PartIndex.SeparateShinseiParts
        qualifiedName: PartIndex.SeparateShinseiParts
    isDefinition: true
    commentId: Overload:Global.PartIndex.SeparateShinseiParts
  Global.PartIndex.ParsePartDNA*:
    name:
      CSharp:
      - id: Global.PartIndex.ParsePartDNA*
        name: ParsePartDNA
        nameWithType: PartIndex.ParsePartDNA
        qualifiedName: PartIndex.ParsePartDNA
      VB:
      - id: Global.PartIndex.ParsePartDNA*
        name: ParsePartDNA
        nameWithType: PartIndex.ParsePartDNA
        qualifiedName: PartIndex.ParsePartDNA
    isDefinition: true
    commentId: Overload:Global.PartIndex.ParsePartDNA
  Global.PartIndex.PopulateLists*:
    name:
      CSharp:
      - id: Global.PartIndex.PopulateLists*
        name: PopulateLists
        nameWithType: PartIndex.PopulateLists
        qualifiedName: PartIndex.PopulateLists
      VB:
      - id: Global.PartIndex.PopulateLists*
        name: PopulateLists
        nameWithType: PartIndex.PopulateLists
        qualifiedName: PartIndex.PopulateLists
    isDefinition: true
    commentId: Overload:Global.PartIndex.PopulateLists
  Global.PartIndex:
    name:
      CSharp:
      - id: Global.PartIndex
        name: PartIndex
        nameWithType: PartIndex
        qualifiedName: PartIndex
      VB:
      - id: Global.PartIndex
        name: PartIndex
        nameWithType: PartIndex
        qualifiedName: PartIndex
    isDefinition: true
    commentId: T:Global.PartIndex
  Global.TypeStatsAndMultipliers:
    name:
      CSharp:
      - id: Global.TypeStatsAndMultipliers
        name: TypeStatsAndMultipliers
        nameWithType: TypeStatsAndMultipliers
        qualifiedName: TypeStatsAndMultipliers
      VB:
      - id: Global.TypeStatsAndMultipliers
        name: TypeStatsAndMultipliers
        nameWithType: TypeStatsAndMultipliers
        qualifiedName: TypeStatsAndMultipliers
    isDefinition: true
    commentId: T:Global.TypeStatsAndMultipliers
  Global.BaseMultipliers:
    name:
      CSharp:
      - id: Global.BaseMultipliers
        name: BaseMultipliers
        nameWithType: BaseMultipliers
        qualifiedName: BaseMultipliers
      VB:
      - id: Global.BaseMultipliers
        name: BaseMultipliers
        nameWithType: BaseMultipliers
        qualifiedName: BaseMultipliers
    isDefinition: true
    commentId: T:Global.BaseMultipliers
  Global.PartMultipliers:
    name:
      CSharp:
      - id: Global.PartMultipliers
        name: PartMultipliers
        nameWithType: PartMultipliers
        qualifiedName: PartMultipliers
      VB:
      - id: Global.PartMultipliers
        name: PartMultipliers
        nameWithType: PartMultipliers
        qualifiedName: PartMultipliers
    isDefinition: true
    commentId: T:Global.PartMultipliers
  Global.PartStat:
    name:
      CSharp:
      - id: Global.PartStat
        name: PartStat
        nameWithType: PartStat
        qualifiedName: PartStat
      VB:
      - id: Global.PartStat
        name: PartStat
        nameWithType: PartStat
        qualifiedName: PartStat
    isDefinition: true
    commentId: T:Global.PartStat
  Global.Color32[]:
    name:
      CSharp:
      - id: Global.Color32
        name: Color32
        nameWithType: Color32
        qualifiedName: Color32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Color32
        name: Color32
        nameWithType: Color32
        qualifiedName: Color32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.ColorSO:
    name:
      CSharp:
      - id: Global.ColorSO
        name: ColorSO
        nameWithType: ColorSO
        qualifiedName: ColorSO
      VB:
      - id: Global.ColorSO
        name: ColorSO
        nameWithType: ColorSO
        qualifiedName: ColorSO
    isDefinition: true
    commentId: T:Global.ColorSO
  Global.PalleteColors:
    name:
      CSharp:
      - id: Global.PalleteColors
        name: PalleteColors
        nameWithType: PalleteColors
        qualifiedName: PalleteColors
      VB:
      - id: Global.PalleteColors
        name: PalleteColors
        nameWithType: PalleteColors
        qualifiedName: PalleteColors
    isDefinition: true
    commentId: T:Global.PalleteColors
  Global.ColorSO[]:
    name:
      CSharp:
      - id: Global.ColorSO
        name: ColorSO
        nameWithType: ColorSO
        qualifiedName: ColorSO
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.ColorSO
        name: ColorSO
        nameWithType: ColorSO
        qualifiedName: ColorSO
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.ColorsSO:
    name:
      CSharp:
      - id: Global.ColorsSO
        name: ColorsSO
        nameWithType: ColorsSO
        qualifiedName: ColorsSO
      VB:
      - id: Global.ColorsSO
        name: ColorsSO
        nameWithType: ColorsSO
        qualifiedName: ColorsSO
    isDefinition: true
    commentId: T:Global.ColorsSO
  Utils.Singleton`1:
    name:
      CSharp:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Utils.Singleton`1
  Utils:
    name:
      CSharp:
      - name: Utils
        nameWithType: Utils
        qualifiedName: Utils
      VB:
      - name: Utils
        nameWithType: Utils
        qualifiedName: Utils
    isDefinition: true
    commentId: N:Utils
  Utils.Singleton{ColorSwapper}:
    name:
      CSharp:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ColorSwapper
        name: ColorSwapper
        nameWithType: ColorSwapper
        qualifiedName: ColorSwapper
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ColorSwapper
        name: ColorSwapper
        nameWithType: ColorSwapper
        qualifiedName: ColorSwapper
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Utils.Singleton`1
    parent: Utils
    commentId: T:Utils.Singleton{ColorSwapper}
  Utils.Singleton:
    name:
      CSharp:
      - id: Utils.Singleton
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      VB:
      - id: Utils.Singleton
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
    isDefinition: true
    parent: Utils
    commentId: T:Utils.Singleton
  System.Collections.Generic.List{Timba.Characters.PartVisual}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Characters.PartVisual
        name: PartVisual
        nameWithType: PartVisual
        qualifiedName: Timba.Characters.PartVisual
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Characters.PartVisual
        name: PartVisual
        nameWithType: PartVisual
        qualifiedName: Timba.Characters.PartVisual
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.Characters.PartVisual}
  Timba.Characters:
    name:
      CSharp:
      - name: Timba.Characters
        nameWithType: Timba.Characters
        qualifiedName: Timba.Characters
      VB:
      - name: Timba.Characters
        nameWithType: Timba.Characters
        qualifiedName: Timba.Characters
    isDefinition: true
    commentId: N:Timba.Characters
  Timba.Characters.PartVisual:
    name:
      CSharp:
      - id: Timba.Characters.PartVisual
        name: PartVisual
        nameWithType: PartVisual
        qualifiedName: Timba.Characters.PartVisual
      VB:
      - id: Timba.Characters.PartVisual
        name: PartVisual
        nameWithType: PartVisual
        qualifiedName: Timba.Characters.PartVisual
    isDefinition: true
    parent: Timba.Characters
    commentId: T:Timba.Characters.PartVisual
  Global.ColorSwapper.AddItemToPVL*:
    name:
      CSharp:
      - id: Global.ColorSwapper.AddItemToPVL*
        name: AddItemToPVL
        nameWithType: ColorSwapper.AddItemToPVL
        qualifiedName: ColorSwapper.AddItemToPVL
      VB:
      - id: Global.ColorSwapper.AddItemToPVL*
        name: AddItemToPVL
        nameWithType: ColorSwapper.AddItemToPVL
        qualifiedName: ColorSwapper.AddItemToPVL
    isDefinition: true
    commentId: Overload:Global.ColorSwapper.AddItemToPVL
  Global.ColorSwapper.ChangeMaterial*:
    name:
      CSharp:
      - id: Global.ColorSwapper.ChangeMaterial*
        name: ChangeMaterial
        nameWithType: ColorSwapper.ChangeMaterial
        qualifiedName: ColorSwapper.ChangeMaterial
      VB:
      - id: Global.ColorSwapper.ChangeMaterial*
        name: ChangeMaterial
        nameWithType: ColorSwapper.ChangeMaterial
        qualifiedName: ColorSwapper.ChangeMaterial
    isDefinition: true
    commentId: Overload:Global.ColorSwapper.ChangeMaterial
  Global.ColorSwapper:
    name:
      CSharp:
      - id: Global.ColorSwapper
        name: ColorSwapper
        nameWithType: ColorSwapper
        qualifiedName: ColorSwapper
      VB:
      - id: Global.ColorSwapper
        name: ColorSwapper
        nameWithType: ColorSwapper
        qualifiedName: ColorSwapper
    isDefinition: true
    commentId: T:Global.ColorSwapper
  Global.SwapColorPropertyNameSO:
    name:
      CSharp:
      - id: Global.SwapColorPropertyNameSO
        name: SwapColorPropertyNameSO
        nameWithType: SwapColorPropertyNameSO
        qualifiedName: SwapColorPropertyNameSO
      VB:
      - id: Global.SwapColorPropertyNameSO
        name: SwapColorPropertyNameSO
        nameWithType: SwapColorPropertyNameSO
        qualifiedName: SwapColorPropertyNameSO
    isDefinition: true
    commentId: T:Global.SwapColorPropertyNameSO
  Global.DragonPartType:
    name:
      CSharp:
      - id: Global.DragonPartType
        name: DragonPartType
        nameWithType: DragonPartType
        qualifiedName: DragonPartType
      VB:
      - id: Global.DragonPartType
        name: DragonPartType
        nameWithType: DragonPartType
        qualifiedName: DragonPartType
    isDefinition: true
    commentId: T:Global.DragonPartType
  Global.StatValueType:
    name:
      CSharp:
      - id: Global.StatValueType
        name: StatValueType
        nameWithType: StatValueType
        qualifiedName: StatValueType
      VB:
      - id: Global.StatValueType
        name: StatValueType
        nameWithType: StatValueType
        qualifiedName: StatValueType
    isDefinition: true
    commentId: T:Global.StatValueType
  Global.PartEntity.PutEvolution*:
    name:
      CSharp:
      - id: Global.PartEntity.PutEvolution*
        name: PutEvolution
        nameWithType: PartEntity.PutEvolution
        qualifiedName: PartEntity.PutEvolution
      VB:
      - id: Global.PartEntity.PutEvolution*
        name: PutEvolution
        nameWithType: PartEntity.PutEvolution
        qualifiedName: PartEntity.PutEvolution
    isDefinition: true
    commentId: Overload:Global.PartEntity.PutEvolution
  Global.PartEntity.BodyPartID*:
    name:
      CSharp:
      - id: Global.PartEntity.BodyPartID*
        name: BodyPartID
        nameWithType: PartEntity.BodyPartID
        qualifiedName: PartEntity.BodyPartID
      VB:
      - id: Global.PartEntity.BodyPartID*
        name: BodyPartID
        nameWithType: PartEntity.BodyPartID
        qualifiedName: PartEntity.BodyPartID
    isDefinition: true
    commentId: Overload:Global.PartEntity.BodyPartID
  Global.TMP_Text:
    name:
      CSharp:
      - id: Global.TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
      VB:
      - id: Global.TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
    isDefinition: true
  Global.PartSelector.BodyPart*:
    name:
      CSharp:
      - id: Global.PartSelector.BodyPart*
        name: BodyPart
        nameWithType: PartSelector.BodyPart
        qualifiedName: PartSelector.BodyPart
      VB:
      - id: Global.PartSelector.BodyPart*
        name: BodyPart
        nameWithType: PartSelector.BodyPart
        qualifiedName: PartSelector.BodyPart
    isDefinition: true
    commentId: Overload:Global.PartSelector.BodyPart
  Global.PartSelector.SetBodyPart*:
    name:
      CSharp:
      - id: Global.PartSelector.SetBodyPart*
        name: SetBodyPart
        nameWithType: PartSelector.SetBodyPart
        qualifiedName: PartSelector.SetBodyPart
      VB:
      - id: Global.PartSelector.SetBodyPart*
        name: SetBodyPart
        nameWithType: PartSelector.SetBodyPart
        qualifiedName: PartSelector.SetBodyPart
    isDefinition: true
    commentId: Overload:Global.PartSelector.SetBodyPart
  Global.PartSlot.SelectedChildName*:
    name:
      CSharp:
      - id: Global.PartSlot.SelectedChildName*
        name: SelectedChildName
        nameWithType: PartSlot.SelectedChildName
        qualifiedName: PartSlot.SelectedChildName
      VB:
      - id: Global.PartSlot.SelectedChildName*
        name: SelectedChildName
        nameWithType: PartSlot.SelectedChildName
        qualifiedName: PartSlot.SelectedChildName
    isDefinition: true
    commentId: Overload:Global.PartSlot.SelectedChildName
  Global.PartSlot.ChildrenLength*:
    name:
      CSharp:
      - id: Global.PartSlot.ChildrenLength*
        name: ChildrenLength
        nameWithType: PartSlot.ChildrenLength
        qualifiedName: PartSlot.ChildrenLength
      VB:
      - id: Global.PartSlot.ChildrenLength*
        name: ChildrenLength
        nameWithType: PartSlot.ChildrenLength
        qualifiedName: PartSlot.ChildrenLength
    isDefinition: true
    commentId: Overload:Global.PartSlot.ChildrenLength
  Global.PartEntity[]:
    name:
      CSharp:
      - id: Global.PartEntity
        name: PartEntity
        nameWithType: PartEntity
        qualifiedName: PartEntity
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.PartEntity
        name: PartEntity
        nameWithType: PartEntity
        qualifiedName: PartEntity
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.PartSlot.Childrens*:
    name:
      CSharp:
      - id: Global.PartSlot.Childrens*
        name: Childrens
        nameWithType: PartSlot.Childrens
        qualifiedName: PartSlot.Childrens
      VB:
      - id: Global.PartSlot.Childrens*
        name: Childrens
        nameWithType: PartSlot.Childrens
        qualifiedName: PartSlot.Childrens
    isDefinition: true
    commentId: Overload:Global.PartSlot.Childrens
  Global.PartSlot.Initialize*:
    name:
      CSharp:
      - id: Global.PartSlot.Initialize*
        name: Initialize
        nameWithType: PartSlot.Initialize
        qualifiedName: PartSlot.Initialize
      VB:
      - id: Global.PartSlot.Initialize*
        name: Initialize
        nameWithType: PartSlot.Initialize
        qualifiedName: PartSlot.Initialize
    isDefinition: true
    commentId: Overload:Global.PartSlot.Initialize
  Global.PartSlot.ActiveBodyPart*:
    name:
      CSharp:
      - id: Global.PartSlot.ActiveBodyPart*
        name: ActiveBodyPart
        nameWithType: PartSlot.ActiveBodyPart
        qualifiedName: PartSlot.ActiveBodyPart
      VB:
      - id: Global.PartSlot.ActiveBodyPart*
        name: ActiveBodyPart
        nameWithType: PartSlot.ActiveBodyPart
        qualifiedName: PartSlot.ActiveBodyPart
    isDefinition: true
    commentId: Overload:Global.PartSlot.ActiveBodyPart
  Global.PartSlot.ActiveBodyPartByName*:
    name:
      CSharp:
      - id: Global.PartSlot.ActiveBodyPartByName*
        name: ActiveBodyPartByName
        nameWithType: PartSlot.ActiveBodyPartByName
        qualifiedName: PartSlot.ActiveBodyPartByName
      VB:
      - id: Global.PartSlot.ActiveBodyPartByName*
        name: ActiveBodyPartByName
        nameWithType: PartSlot.ActiveBodyPartByName
        qualifiedName: PartSlot.ActiveBodyPartByName
    isDefinition: true
    commentId: Overload:Global.PartSlot.ActiveBodyPartByName
  Global.PartSlot.GetIndex*:
    name:
      CSharp:
      - id: Global.PartSlot.GetIndex*
        name: GetIndex
        nameWithType: PartSlot.GetIndex
        qualifiedName: PartSlot.GetIndex
      VB:
      - id: Global.PartSlot.GetIndex*
        name: GetIndex
        nameWithType: PartSlot.GetIndex
        qualifiedName: PartSlot.GetIndex
    isDefinition: true
    commentId: Overload:Global.PartSlot.GetIndex
  Global.Followpoints:
    name:
      CSharp:
      - id: Global.Followpoints
        name: Followpoints
        nameWithType: Followpoints
        qualifiedName: Followpoints
      VB:
      - id: Global.Followpoints
        name: Followpoints
        nameWithType: Followpoints
        qualifiedName: Followpoints
    isDefinition: true
    commentId: T:Global.Followpoints
  Global.LeaderboardEntry.SetEntyValues*:
    name:
      CSharp:
      - id: Global.LeaderboardEntry.SetEntyValues*
        name: SetEntyValues
        nameWithType: LeaderboardEntry.SetEntyValues
        qualifiedName: LeaderboardEntry.SetEntyValues
      VB:
      - id: Global.LeaderboardEntry.SetEntyValues*
        name: SetEntyValues
        nameWithType: LeaderboardEntry.SetEntyValues
        qualifiedName: LeaderboardEntry.SetEntyValues
    isDefinition: true
    commentId: Overload:Global.LeaderboardEntry.SetEntyValues
  Global.LeaderboardEntry:
    name:
      CSharp:
      - id: Global.LeaderboardEntry
        name: LeaderboardEntry
        nameWithType: LeaderboardEntry
        qualifiedName: LeaderboardEntry
      VB:
      - id: Global.LeaderboardEntry
        name: LeaderboardEntry
        nameWithType: LeaderboardEntry
        qualifiedName: LeaderboardEntry
    isDefinition: true
    commentId: T:Global.LeaderboardEntry
  Global.LeaderboardEntryResult:
    name:
      CSharp:
      - id: Global.LeaderboardEntryResult
        name: LeaderboardEntryResult
        nameWithType: LeaderboardEntryResult
        qualifiedName: LeaderboardEntryResult
      VB:
      - id: Global.LeaderboardEntryResult
        name: LeaderboardEntryResult
        nameWithType: LeaderboardEntryResult
        qualifiedName: LeaderboardEntryResult
    isDefinition: true
    commentId: T:Global.LeaderboardEntryResult
  Global.LeaderBoardManager.Start*:
    name:
      CSharp:
      - id: Global.LeaderBoardManager.Start*
        name: Start
        nameWithType: LeaderBoardManager.Start
        qualifiedName: LeaderBoardManager.Start
      VB:
      - id: Global.LeaderBoardManager.Start*
        name: Start
        nameWithType: LeaderBoardManager.Start
        qualifiedName: LeaderBoardManager.Start
    isDefinition: true
    commentId: Overload:Global.LeaderBoardManager.Start
  Global.LeaderBoardManager:
    name:
      CSharp:
      - id: Global.LeaderBoardManager
        name: LeaderBoardManager
        nameWithType: LeaderBoardManager
        qualifiedName: LeaderBoardManager
      VB:
      - id: Global.LeaderBoardManager
        name: LeaderBoardManager
        nameWithType: LeaderBoardManager
        qualifiedName: LeaderBoardManager
    isDefinition: true
    commentId: T:Global.LeaderBoardManager
  Global.Action{System.String}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.String}'
  Global.PlayFabGetLeaderboard.GetLeaderboardEntries*:
    name:
      CSharp:
      - id: Global.PlayFabGetLeaderboard.GetLeaderboardEntries*
        name: GetLeaderboardEntries
        nameWithType: PlayFabGetLeaderboard.GetLeaderboardEntries
        qualifiedName: PlayFabGetLeaderboard.GetLeaderboardEntries
      VB:
      - id: Global.PlayFabGetLeaderboard.GetLeaderboardEntries*
        name: GetLeaderboardEntries
        nameWithType: PlayFabGetLeaderboard.GetLeaderboardEntries
        qualifiedName: PlayFabGetLeaderboard.GetLeaderboardEntries
    isDefinition: true
    commentId: Overload:Global.PlayFabGetLeaderboard.GetLeaderboardEntries
  Global.PlayFabGetLeaderboard:
    name:
      CSharp:
      - id: Global.PlayFabGetLeaderboard
        name: PlayFabGetLeaderboard
        nameWithType: PlayFabGetLeaderboard
        qualifiedName: PlayFabGetLeaderboard
      VB:
      - id: Global.PlayFabGetLeaderboard
        name: PlayFabGetLeaderboard
        nameWithType: PlayFabGetLeaderboard
        qualifiedName: PlayFabGetLeaderboard
    isDefinition: true
    commentId: T:Global.PlayFabGetLeaderboard
  Global.PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer*:
    name:
      CSharp:
      - id: Global.PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer*
        name: GetLeaderboardAroundPlayer
        nameWithType: PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer
        qualifiedName: PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer
      VB:
      - id: Global.PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer*
        name: GetLeaderboardAroundPlayer
        nameWithType: PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer
        qualifiedName: PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer
    isDefinition: true
    commentId: Overload:Global.PlayFabGetLeaderboardAroundPlayer.GetLeaderboardAroundPlayer
  Global.PlayFabGetLeaderboardAroundPlayer:
    name:
      CSharp:
      - id: Global.PlayFabGetLeaderboardAroundPlayer
        name: PlayFabGetLeaderboardAroundPlayer
        nameWithType: PlayFabGetLeaderboardAroundPlayer
        qualifiedName: PlayFabGetLeaderboardAroundPlayer
      VB:
      - id: Global.PlayFabGetLeaderboardAroundPlayer
        name: PlayFabGetLeaderboardAroundPlayer
        nameWithType: PlayFabGetLeaderboardAroundPlayer
        qualifiedName: PlayFabGetLeaderboardAroundPlayer
    isDefinition: true
    commentId: T:Global.PlayFabGetLeaderboardAroundPlayer
  Global.PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics*:
    name:
      CSharp:
      - id: Global.PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics*
        name: UpdatePlayerStatistics
        nameWithType: PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics
        qualifiedName: PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics
      VB:
      - id: Global.PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics*
        name: UpdatePlayerStatistics
        nameWithType: PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics
        qualifiedName: PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics
    isDefinition: true
    commentId: Overload:Global.PlayFabUpdatePlayerStatistics.UpdatePlayerStatistics
  Global.PlayFabUpdatePlayerStatistics:
    name:
      CSharp:
      - id: Global.PlayFabUpdatePlayerStatistics
        name: PlayFabUpdatePlayerStatistics
        nameWithType: PlayFabUpdatePlayerStatistics
        qualifiedName: PlayFabUpdatePlayerStatistics
      VB:
      - id: Global.PlayFabUpdatePlayerStatistics
        name: PlayFabUpdatePlayerStatistics
        nameWithType: PlayFabUpdatePlayerStatistics
        qualifiedName: PlayFabUpdatePlayerStatistics
    isDefinition: true
    commentId: T:Global.PlayFabUpdatePlayerStatistics
  Global.TaskManager:
    name:
      CSharp:
      - id: Global.TaskManager
        name: TaskManager
        nameWithType: TaskManager
        qualifiedName: TaskManager
      VB:
      - id: Global.TaskManager
        name: TaskManager
        nameWithType: TaskManager
        qualifiedName: TaskManager
    isDefinition: true
    commentId: T:Global.TaskManager
  System.Collections.Generic.List{tasks.task}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.tasks.task
        name: tasks.task
        nameWithType: tasks.task
        qualifiedName: tasks.task
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.tasks.task
        name: tasks.task
        nameWithType: tasks.task
        qualifiedName: tasks.task
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{tasks.task}
  Global.tasks.New*:
    name:
      CSharp:
      - id: Global.tasks.New*
        name: New
        nameWithType: tasks.New
        qualifiedName: tasks.New
      VB:
      - id: Global.tasks.New*
        name: New
        nameWithType: tasks.New
        qualifiedName: tasks.New
    isDefinition: true
    commentId: Overload:Global.tasks.New
  Global.tasks:
    name:
      CSharp:
      - id: Global.tasks
        name: tasks
        nameWithType: tasks
        qualifiedName: tasks
      VB:
      - id: Global.tasks
        name: tasks
        nameWithType: tasks
        qualifiedName: tasks
    isDefinition: true
    commentId: T:Global.tasks
  Global.tasks.task:
    name:
      CSharp:
      - id: Global.tasks.task
        name: tasks.task
        nameWithType: tasks.task
        qualifiedName: tasks.task
      VB:
      - id: Global.tasks.task
        name: tasks.task
        nameWithType: tasks.task
        qualifiedName: tasks.task
    isDefinition: true
    commentId: T:Global.tasks.task
  Global.CinemachinePath:
    name:
      CSharp:
      - id: Global.CinemachinePath
        name: CinemachinePath
        nameWithType: CinemachinePath
        qualifiedName: CinemachinePath
        isExternal: true
      VB:
      - id: Global.CinemachinePath
        name: CinemachinePath
        nameWithType: CinemachinePath
        qualifiedName: CinemachinePath
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CinemachinePath'
  Global.CinemachinePath[]:
    name:
      CSharp:
      - id: Global.CinemachinePath
        name: CinemachinePath
        nameWithType: CinemachinePath
        qualifiedName: CinemachinePath
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.CinemachinePath
        name: CinemachinePath
        nameWithType: CinemachinePath
        qualifiedName: CinemachinePath
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.TrackSwitcher:
    name:
      CSharp:
      - id: Global.TrackSwitcher
        name: TrackSwitcher
        nameWithType: TrackSwitcher
        qualifiedName: TrackSwitcher
      VB:
      - id: Global.TrackSwitcher
        name: TrackSwitcher
        nameWithType: TrackSwitcher
        qualifiedName: TrackSwitcher
    isDefinition: true
    commentId: T:Global.TrackSwitcher
  Global.Extensions.SetActiveToggle*:
    name:
      CSharp:
      - id: Global.Extensions.SetActiveToggle*
        name: SetActiveToggle
        nameWithType: Extensions.SetActiveToggle
        qualifiedName: Extensions.SetActiveToggle
      VB:
      - id: Global.Extensions.SetActiveToggle*
        name: SetActiveToggle
        nameWithType: Extensions.SetActiveToggle
        qualifiedName: Extensions.SetActiveToggle
    isDefinition: true
    commentId: Overload:Global.Extensions.SetActiveToggle
  Global.Extensions:
    name:
      CSharp:
      - id: Global.Extensions
        name: Extensions
        nameWithType: Extensions
        qualifiedName: Extensions
      VB:
      - id: Global.Extensions
        name: Extensions
        nameWithType: Extensions
        qualifiedName: Extensions
    isDefinition: true
    commentId: T:Global.Extensions
  Global.Analytics.UpdateAnalitycCounter*:
    name:
      CSharp:
      - id: Global.Analytics.UpdateAnalitycCounter*
        name: UpdateAnalitycCounter
        nameWithType: Analytics.UpdateAnalitycCounter
        qualifiedName: Analytics.UpdateAnalitycCounter
      VB:
      - id: Global.Analytics.UpdateAnalitycCounter*
        name: UpdateAnalitycCounter
        nameWithType: Analytics.UpdateAnalitycCounter
        qualifiedName: Analytics.UpdateAnalitycCounter
    isDefinition: true
    commentId: Overload:Global.Analytics.UpdateAnalitycCounter
  Global.Analytics.UpdateAnalityc*:
    name:
      CSharp:
      - id: Global.Analytics.UpdateAnalityc*
        name: UpdateAnalityc
        nameWithType: Analytics.UpdateAnalityc
        qualifiedName: Analytics.UpdateAnalityc
      VB:
      - id: Global.Analytics.UpdateAnalityc*
        name: UpdateAnalityc
        nameWithType: Analytics.UpdateAnalityc
        qualifiedName: Analytics.UpdateAnalityc
    isDefinition: true
    commentId: Overload:Global.Analytics.UpdateAnalityc
  Global.Analytics:
    name:
      CSharp:
      - id: Global.Analytics
        name: Analytics
        nameWithType: Analytics
        qualifiedName: Analytics
      VB:
      - id: Global.Analytics
        name: Analytics
        nameWithType: Analytics
        qualifiedName: Analytics
    isDefinition: true
    commentId: T:Global.Analytics
  Global.AnimatorListener:
    name:
      CSharp:
      - id: Global.AnimatorListener
        name: AnimatorListener
        nameWithType: AnimatorListener
        qualifiedName: AnimatorListener
      VB:
      - id: Global.AnimatorListener
        name: AnimatorListener
        nameWithType: AnimatorListener
        qualifiedName: AnimatorListener
    isDefinition: true
    commentId: T:Global.AnimatorListener
  Global.BackpackController.OpenBackPack*:
    name:
      CSharp:
      - id: Global.BackpackController.OpenBackPack*
        name: OpenBackPack
        nameWithType: BackpackController.OpenBackPack
        qualifiedName: BackpackController.OpenBackPack
      VB:
      - id: Global.BackpackController.OpenBackPack*
        name: OpenBackPack
        nameWithType: BackpackController.OpenBackPack
        qualifiedName: BackpackController.OpenBackPack
    isDefinition: true
    commentId: Overload:Global.BackpackController.OpenBackPack
  Global.BackpackController.CloseBackPack*:
    name:
      CSharp:
      - id: Global.BackpackController.CloseBackPack*
        name: CloseBackPack
        nameWithType: BackpackController.CloseBackPack
        qualifiedName: BackpackController.CloseBackPack
      VB:
      - id: Global.BackpackController.CloseBackPack*
        name: CloseBackPack
        nameWithType: BackpackController.CloseBackPack
        qualifiedName: BackpackController.CloseBackPack
    isDefinition: true
    commentId: Overload:Global.BackpackController.CloseBackPack
  Global.BackpackController:
    name:
      CSharp:
      - id: Global.BackpackController
        name: BackpackController
        nameWithType: BackpackController
        qualifiedName: BackpackController
      VB:
      - id: Global.BackpackController
        name: BackpackController
        nameWithType: BackpackController
        qualifiedName: BackpackController
    isDefinition: true
    commentId: T:Global.BackpackController
  Global.CameraSpawner:
    name:
      CSharp:
      - id: Global.CameraSpawner
        name: CameraSpawner
        nameWithType: CameraSpawner
        qualifiedName: CameraSpawner
      VB:
      - id: Global.CameraSpawner
        name: CameraSpawner
        nameWithType: CameraSpawner
        qualifiedName: CameraSpawner
    isDefinition: true
    commentId: T:Global.CameraSpawner
  Global.CharacterAnimBehaviour.OnStateMachineEnter*:
    name:
      CSharp:
      - id: Global.CharacterAnimBehaviour.OnStateMachineEnter*
        name: OnStateMachineEnter
        nameWithType: CharacterAnimBehaviour.OnStateMachineEnter
        qualifiedName: CharacterAnimBehaviour.OnStateMachineEnter
      VB:
      - id: Global.CharacterAnimBehaviour.OnStateMachineEnter*
        name: OnStateMachineEnter
        nameWithType: CharacterAnimBehaviour.OnStateMachineEnter
        qualifiedName: CharacterAnimBehaviour.OnStateMachineEnter
    isDefinition: true
    commentId: Overload:Global.CharacterAnimBehaviour.OnStateMachineEnter
  Global.CharacterAnimBehaviour:
    name:
      CSharp:
      - id: Global.CharacterAnimBehaviour
        name: CharacterAnimBehaviour
        nameWithType: CharacterAnimBehaviour
        qualifiedName: CharacterAnimBehaviour
      VB:
      - id: Global.CharacterAnimBehaviour
        name: CharacterAnimBehaviour
        nameWithType: CharacterAnimBehaviour
        qualifiedName: CharacterAnimBehaviour
    isDefinition: true
    commentId: T:Global.CharacterAnimBehaviour
  Global.DisableOtherShinsei:
    name:
      CSharp:
      - id: Global.DisableOtherShinsei
        name: DisableOtherShinsei
        nameWithType: DisableOtherShinsei
        qualifiedName: DisableOtherShinsei
      VB:
      - id: Global.DisableOtherShinsei
        name: DisableOtherShinsei
        nameWithType: DisableOtherShinsei
        qualifiedName: DisableOtherShinsei
    isDefinition: true
    commentId: T:Global.DisableOtherShinsei
  Global.EnableDrink.Drink*:
    name:
      CSharp:
      - id: Global.EnableDrink.Drink*
        name: Drink
        nameWithType: EnableDrink.Drink
        qualifiedName: EnableDrink.Drink
      VB:
      - id: Global.EnableDrink.Drink*
        name: Drink
        nameWithType: EnableDrink.Drink
        qualifiedName: EnableDrink.Drink
    isDefinition: true
    commentId: Overload:Global.EnableDrink.Drink
  Global.EnableDrink.DrinkOff*:
    name:
      CSharp:
      - id: Global.EnableDrink.DrinkOff*
        name: DrinkOff
        nameWithType: EnableDrink.DrinkOff
        qualifiedName: EnableDrink.DrinkOff
      VB:
      - id: Global.EnableDrink.DrinkOff*
        name: DrinkOff
        nameWithType: EnableDrink.DrinkOff
        qualifiedName: EnableDrink.DrinkOff
    isDefinition: true
    commentId: Overload:Global.EnableDrink.DrinkOff
  Global.EnableDrink:
    name:
      CSharp:
      - id: Global.EnableDrink
        name: EnableDrink
        nameWithType: EnableDrink
        qualifiedName: EnableDrink
      VB:
      - id: Global.EnableDrink
        name: EnableDrink
        nameWithType: EnableDrink
        qualifiedName: EnableDrink
    isDefinition: true
    commentId: T:Global.EnableDrink
  Global.IPointerClickHandler:
    name:
      CSharp:
      - id: Global.IPointerClickHandler
        name: IPointerClickHandler
        nameWithType: IPointerClickHandler
        qualifiedName: IPointerClickHandler
        isExternal: true
      VB:
      - id: Global.IPointerClickHandler
        name: IPointerClickHandler
        nameWithType: IPointerClickHandler
        qualifiedName: IPointerClickHandler
        isExternal: true
    isDefinition: true
  Global.PointerEventData:
    name:
      CSharp:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      VB:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
    isDefinition: true
  Global.InteractWithShinsei.OnPointerClick*:
    name:
      CSharp:
      - id: Global.InteractWithShinsei.OnPointerClick*
        name: OnPointerClick
        nameWithType: InteractWithShinsei.OnPointerClick
        qualifiedName: InteractWithShinsei.OnPointerClick
      VB:
      - id: Global.InteractWithShinsei.OnPointerClick*
        name: OnPointerClick
        nameWithType: InteractWithShinsei.OnPointerClick
        qualifiedName: InteractWithShinsei.OnPointerClick
    isDefinition: true
    commentId: Overload:Global.InteractWithShinsei.OnPointerClick
  Global.InteractWithShinsei:
    name:
      CSharp:
      - id: Global.InteractWithShinsei
        name: InteractWithShinsei
        nameWithType: InteractWithShinsei
        qualifiedName: InteractWithShinsei
      VB:
      - id: Global.InteractWithShinsei
        name: InteractWithShinsei
        nameWithType: InteractWithShinsei
        qualifiedName: InteractWithShinsei
    isDefinition: true
    commentId: T:Global.InteractWithShinsei
  Global.Action{Collider}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{Collider}'
  Global.IUiTrigger.Update*:
    name:
      CSharp:
      - id: Global.IUiTrigger.Update*
        name: Update
        nameWithType: IUiTrigger.Update
        qualifiedName: IUiTrigger.Update
      VB:
      - id: Global.IUiTrigger.Update*
        name: Update
        nameWithType: IUiTrigger.Update
        qualifiedName: IUiTrigger.Update
    isDefinition: true
    commentId: Overload:Global.IUiTrigger.Update
  Global.IUiTrigger:
    name:
      CSharp:
      - id: Global.IUiTrigger
        name: IUiTrigger
        nameWithType: IUiTrigger
        qualifiedName: IUiTrigger
      VB:
      - id: Global.IUiTrigger
        name: IUiTrigger
        nameWithType: IUiTrigger
        qualifiedName: IUiTrigger
    isDefinition: true
    commentId: T:Global.IUiTrigger
  Global.LobbyCompanionPanel:
    name:
      CSharp:
      - id: Global.LobbyCompanionPanel
        name: LobbyCompanionPanel
        nameWithType: LobbyCompanionPanel
        qualifiedName: LobbyCompanionPanel
      VB:
      - id: Global.LobbyCompanionPanel
        name: LobbyCompanionPanel
        nameWithType: LobbyCompanionPanel
        qualifiedName: LobbyCompanionPanel
    isDefinition: true
    commentId: T:Global.LobbyCompanionPanel
  Global.Logout.CallLogout*:
    name:
      CSharp:
      - id: Global.Logout.CallLogout*
        name: CallLogout
        nameWithType: Logout.CallLogout
        qualifiedName: Logout.CallLogout
      VB:
      - id: Global.Logout.CallLogout*
        name: CallLogout
        nameWithType: Logout.CallLogout
        qualifiedName: Logout.CallLogout
    isDefinition: true
    commentId: Overload:Global.Logout.CallLogout
  Global.Logout:
    name:
      CSharp:
      - id: Global.Logout
        name: Logout
        nameWithType: Logout
        qualifiedName: Logout
      VB:
      - id: Global.Logout
        name: Logout
        nameWithType: Logout
        qualifiedName: Logout
    isDefinition: true
    commentId: T:Global.Logout
  Global.MatchmakingTrigger:
    name:
      CSharp:
      - id: Global.MatchmakingTrigger
        name: MatchmakingTrigger
        nameWithType: MatchmakingTrigger
        qualifiedName: MatchmakingTrigger
      VB:
      - id: Global.MatchmakingTrigger
        name: MatchmakingTrigger
        nameWithType: MatchmakingTrigger
        qualifiedName: MatchmakingTrigger
    isDefinition: true
    commentId: T:Global.MatchmakingTrigger
  Global.OpenUrl.OpenUrlMethod*:
    name:
      CSharp:
      - id: Global.OpenUrl.OpenUrlMethod*
        name: OpenUrlMethod
        nameWithType: OpenUrl.OpenUrlMethod
        qualifiedName: OpenUrl.OpenUrlMethod
      VB:
      - id: Global.OpenUrl.OpenUrlMethod*
        name: OpenUrlMethod
        nameWithType: OpenUrl.OpenUrlMethod
        qualifiedName: OpenUrl.OpenUrlMethod
    isDefinition: true
    commentId: Overload:Global.OpenUrl.OpenUrlMethod
  Global.OpenUrl:
    name:
      CSharp:
      - id: Global.OpenUrl
        name: OpenUrl
        nameWithType: OpenUrl
        qualifiedName: OpenUrl
      VB:
      - id: Global.OpenUrl
        name: OpenUrl
        nameWithType: OpenUrl
        qualifiedName: OpenUrl
    isDefinition: true
    commentId: T:Global.OpenUrl
  Global.OwnBattleTracker.TotalTurns*:
    name:
      CSharp:
      - id: Global.OwnBattleTracker.TotalTurns*
        name: TotalTurns
        nameWithType: OwnBattleTracker.TotalTurns
        qualifiedName: OwnBattleTracker.TotalTurns
      VB:
      - id: Global.OwnBattleTracker.TotalTurns*
        name: TotalTurns
        nameWithType: OwnBattleTracker.TotalTurns
        qualifiedName: OwnBattleTracker.TotalTurns
    isDefinition: true
    commentId: Overload:Global.OwnBattleTracker.TotalTurns
  Global.OwnBattleTracker.NotifyAttack*:
    name:
      CSharp:
      - id: Global.OwnBattleTracker.NotifyAttack*
        name: NotifyAttack
        nameWithType: OwnBattleTracker.NotifyAttack
        qualifiedName: OwnBattleTracker.NotifyAttack
      VB:
      - id: Global.OwnBattleTracker.NotifyAttack*
        name: NotifyAttack
        nameWithType: OwnBattleTracker.NotifyAttack
        qualifiedName: OwnBattleTracker.NotifyAttack
    isDefinition: true
    commentId: Overload:Global.OwnBattleTracker.NotifyAttack
  Global.OwnBattleTracker:
    name:
      CSharp:
      - id: Global.OwnBattleTracker
        name: OwnBattleTracker
        nameWithType: OwnBattleTracker
        qualifiedName: OwnBattleTracker
      VB:
      - id: Global.OwnBattleTracker
        name: OwnBattleTracker
        nameWithType: OwnBattleTracker
        qualifiedName: OwnBattleTracker
    isDefinition: true
    commentId: T:Global.OwnBattleTracker
  Global.OwnBattleTracker.PromediumObject.AddAtLast*:
    name:
      CSharp:
      - id: Global.OwnBattleTracker.PromediumObject.AddAtLast*
        name: AddAtLast
        nameWithType: OwnBattleTracker.PromediumObject.AddAtLast
        qualifiedName: OwnBattleTracker.PromediumObject.AddAtLast
      VB:
      - id: Global.OwnBattleTracker.PromediumObject.AddAtLast*
        name: AddAtLast
        nameWithType: OwnBattleTracker.PromediumObject.AddAtLast
        qualifiedName: OwnBattleTracker.PromediumObject.AddAtLast
    isDefinition: true
    commentId: Overload:Global.OwnBattleTracker.PromediumObject.AddAtLast
  Global.OwnBattleTracker.PromediumObject:
    name:
      CSharp:
      - id: Global.OwnBattleTracker.PromediumObject
        name: OwnBattleTracker.PromediumObject
        nameWithType: OwnBattleTracker.PromediumObject
        qualifiedName: OwnBattleTracker.PromediumObject
      VB:
      - id: Global.OwnBattleTracker.PromediumObject
        name: OwnBattleTracker.PromediumObject
        nameWithType: OwnBattleTracker.PromediumObject
        qualifiedName: OwnBattleTracker.PromediumObject
    isDefinition: true
    commentId: T:Global.OwnBattleTracker.PromediumObject
  Global.PetInteraction.Init*:
    name:
      CSharp:
      - id: Global.PetInteraction.Init*
        name: Init
        nameWithType: PetInteraction.Init
        qualifiedName: PetInteraction.Init
      VB:
      - id: Global.PetInteraction.Init*
        name: Init
        nameWithType: PetInteraction.Init
        qualifiedName: PetInteraction.Init
    isDefinition: true
    commentId: Overload:Global.PetInteraction.Init
  Global.PetInteraction.Show*:
    name:
      CSharp:
      - id: Global.PetInteraction.Show*
        name: Show
        nameWithType: PetInteraction.Show
        qualifiedName: PetInteraction.Show
      VB:
      - id: Global.PetInteraction.Show*
        name: Show
        nameWithType: PetInteraction.Show
        qualifiedName: PetInteraction.Show
    isDefinition: true
    commentId: Overload:Global.PetInteraction.Show
  Global.PetInteraction.PetRotation*:
    name:
      CSharp:
      - id: Global.PetInteraction.PetRotation*
        name: PetRotation
        nameWithType: PetInteraction.PetRotation
        qualifiedName: PetInteraction.PetRotation
      VB:
      - id: Global.PetInteraction.PetRotation*
        name: PetRotation
        nameWithType: PetInteraction.PetRotation
        qualifiedName: PetInteraction.PetRotation
    isDefinition: true
    commentId: Overload:Global.PetInteraction.PetRotation
  Global.PetInteraction.PlayAnimation*:
    name:
      CSharp:
      - id: Global.PetInteraction.PlayAnimation*
        name: PlayAnimation
        nameWithType: PetInteraction.PlayAnimation
        qualifiedName: PetInteraction.PlayAnimation
      VB:
      - id: Global.PetInteraction.PlayAnimation*
        name: PlayAnimation
        nameWithType: PetInteraction.PlayAnimation
        qualifiedName: PetInteraction.PlayAnimation
    isDefinition: true
    commentId: Overload:Global.PetInteraction.PlayAnimation
  Global.PetInteraction.Hide*:
    name:
      CSharp:
      - id: Global.PetInteraction.Hide*
        name: Hide
        nameWithType: PetInteraction.Hide
        qualifiedName: PetInteraction.Hide
      VB:
      - id: Global.PetInteraction.Hide*
        name: Hide
        nameWithType: PetInteraction.Hide
        qualifiedName: PetInteraction.Hide
    isDefinition: true
    commentId: Overload:Global.PetInteraction.Hide
  Global.PetInteraction:
    name:
      CSharp:
      - id: Global.PetInteraction
        name: PetInteraction
        nameWithType: PetInteraction
        qualifiedName: PetInteraction
      VB:
      - id: Global.PetInteraction
        name: PetInteraction
        nameWithType: PetInteraction
        qualifiedName: PetInteraction
    isDefinition: true
    commentId: T:Global.PetInteraction
  Global.PlayerUI.HideNameTag*:
    name:
      CSharp:
      - id: Global.PlayerUI.HideNameTag*
        name: HideNameTag
        nameWithType: PlayerUI.HideNameTag
        qualifiedName: PlayerUI.HideNameTag
      VB:
      - id: Global.PlayerUI.HideNameTag*
        name: HideNameTag
        nameWithType: PlayerUI.HideNameTag
        qualifiedName: PlayerUI.HideNameTag
    isDefinition: true
    commentId: Overload:Global.PlayerUI.HideNameTag
  Global.PlayerUI.SearchMatch*:
    name:
      CSharp:
      - id: Global.PlayerUI.SearchMatch*
        name: SearchMatch
        nameWithType: PlayerUI.SearchMatch
        qualifiedName: PlayerUI.SearchMatch
      VB:
      - id: Global.PlayerUI.SearchMatch*
        name: SearchMatch
        nameWithType: PlayerUI.SearchMatch
        qualifiedName: PlayerUI.SearchMatch
    isDefinition: true
    commentId: Overload:Global.PlayerUI.SearchMatch
  Global.PlayerUI.CancelMatch*:
    name:
      CSharp:
      - id: Global.PlayerUI.CancelMatch*
        name: CancelMatch
        nameWithType: PlayerUI.CancelMatch
        qualifiedName: PlayerUI.CancelMatch
      VB:
      - id: Global.PlayerUI.CancelMatch*
        name: CancelMatch
        nameWithType: PlayerUI.CancelMatch
        qualifiedName: PlayerUI.CancelMatch
    isDefinition: true
    commentId: Overload:Global.PlayerUI.CancelMatch
  Global.PlayerUI.OnSpawn*:
    name:
      CSharp:
      - id: Global.PlayerUI.OnSpawn*
        name: OnSpawn
        nameWithType: PlayerUI.OnSpawn
        qualifiedName: PlayerUI.OnSpawn
      VB:
      - id: Global.PlayerUI.OnSpawn*
        name: OnSpawn
        nameWithType: PlayerUI.OnSpawn
        qualifiedName: PlayerUI.OnSpawn
    isDefinition: true
    commentId: Overload:Global.PlayerUI.OnSpawn
  Global.PlayerUI.SetPlayerNameLabel*:
    name:
      CSharp:
      - id: Global.PlayerUI.SetPlayerNameLabel*
        name: SetPlayerNameLabel
        nameWithType: PlayerUI.SetPlayerNameLabel
        qualifiedName: PlayerUI.SetPlayerNameLabel
      VB:
      - id: Global.PlayerUI.SetPlayerNameLabel*
        name: SetPlayerNameLabel
        nameWithType: PlayerUI.SetPlayerNameLabel
        qualifiedName: PlayerUI.SetPlayerNameLabel
    isDefinition: true
    commentId: Overload:Global.PlayerUI.SetPlayerNameLabel
  Global.PlayerUI.OnOffDisplayName*:
    name:
      CSharp:
      - id: Global.PlayerUI.OnOffDisplayName*
        name: OnOffDisplayName
        nameWithType: PlayerUI.OnOffDisplayName
        qualifiedName: PlayerUI.OnOffDisplayName
      VB:
      - id: Global.PlayerUI.OnOffDisplayName*
        name: OnOffDisplayName
        nameWithType: PlayerUI.OnOffDisplayName
        qualifiedName: PlayerUI.OnOffDisplayName
    isDefinition: true
    commentId: Overload:Global.PlayerUI.OnOffDisplayName
  Global.PlayerUI.ViewMatch*:
    name:
      CSharp:
      - id: Global.PlayerUI.ViewMatch*
        name: ViewMatch
        nameWithType: PlayerUI.ViewMatch
        qualifiedName: PlayerUI.ViewMatch
      VB:
      - id: Global.PlayerUI.ViewMatch*
        name: ViewMatch
        nameWithType: PlayerUI.ViewMatch
        qualifiedName: PlayerUI.ViewMatch
    isDefinition: true
    commentId: Overload:Global.PlayerUI.ViewMatch
  Global.PlayerUI.WaitforOpponentToConfirm*:
    name:
      CSharp:
      - id: Global.PlayerUI.WaitforOpponentToConfirm*
        name: WaitforOpponentToConfirm
        nameWithType: PlayerUI.WaitforOpponentToConfirm
        qualifiedName: PlayerUI.WaitforOpponentToConfirm
      VB:
      - id: Global.PlayerUI.WaitforOpponentToConfirm*
        name: WaitforOpponentToConfirm
        nameWithType: PlayerUI.WaitforOpponentToConfirm
        qualifiedName: PlayerUI.WaitforOpponentToConfirm
    isDefinition: true
    commentId: Overload:Global.PlayerUI.WaitforOpponentToConfirm
  Global.PlayerUI.DisplayMatchmakingOptions*:
    name:
      CSharp:
      - id: Global.PlayerUI.DisplayMatchmakingOptions*
        name: DisplayMatchmakingOptions
        nameWithType: PlayerUI.DisplayMatchmakingOptions
        qualifiedName: PlayerUI.DisplayMatchmakingOptions
      VB:
      - id: Global.PlayerUI.DisplayMatchmakingOptions*
        name: DisplayMatchmakingOptions
        nameWithType: PlayerUI.DisplayMatchmakingOptions
        qualifiedName: PlayerUI.DisplayMatchmakingOptions
    isDefinition: true
    commentId: Overload:Global.PlayerUI.DisplayMatchmakingOptions
  Global.PlayerUI.SearchMatchInitTimer*:
    name:
      CSharp:
      - id: Global.PlayerUI.SearchMatchInitTimer*
        name: SearchMatchInitTimer
        nameWithType: PlayerUI.SearchMatchInitTimer
        qualifiedName: PlayerUI.SearchMatchInitTimer
      VB:
      - id: Global.PlayerUI.SearchMatchInitTimer*
        name: SearchMatchInitTimer
        nameWithType: PlayerUI.SearchMatchInitTimer
        qualifiedName: PlayerUI.SearchMatchInitTimer
    isDefinition: true
    commentId: Overload:Global.PlayerUI.SearchMatchInitTimer
  Global.PlayerUI.TestMatchInit*:
    name:
      CSharp:
      - id: Global.PlayerUI.TestMatchInit*
        name: TestMatchInit
        nameWithType: PlayerUI.TestMatchInit
        qualifiedName: PlayerUI.TestMatchInit
      VB:
      - id: Global.PlayerUI.TestMatchInit*
        name: TestMatchInit
        nameWithType: PlayerUI.TestMatchInit
        qualifiedName: PlayerUI.TestMatchInit
    isDefinition: true
    commentId: Overload:Global.PlayerUI.TestMatchInit
  Global.PlayerUI.CleanPreviousMatch*:
    name:
      CSharp:
      - id: Global.PlayerUI.CleanPreviousMatch*
        name: CleanPreviousMatch
        nameWithType: PlayerUI.CleanPreviousMatch
        qualifiedName: PlayerUI.CleanPreviousMatch
      VB:
      - id: Global.PlayerUI.CleanPreviousMatch*
        name: CleanPreviousMatch
        nameWithType: PlayerUI.CleanPreviousMatch
        qualifiedName: PlayerUI.CleanPreviousMatch
    isDefinition: true
    commentId: Overload:Global.PlayerUI.CleanPreviousMatch
  Global.PlayerUI:
    name:
      CSharp:
      - id: Global.PlayerUI
        name: PlayerUI
        nameWithType: PlayerUI
        qualifiedName: PlayerUI
      VB:
      - id: Global.PlayerUI
        name: PlayerUI
        nameWithType: PlayerUI
        qualifiedName: PlayerUI
    isDefinition: true
    commentId: T:Global.PlayerUI
  Global.RandomAnim:
    name:
      CSharp:
      - id: Global.RandomAnim
        name: RandomAnim
        nameWithType: RandomAnim
        qualifiedName: RandomAnim
      VB:
      - id: Global.RandomAnim
        name: RandomAnim
        nameWithType: RandomAnim
        qualifiedName: RandomAnim
    isDefinition: true
    commentId: T:Global.RandomAnim
  System.Collections.Generic.List{Color}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Color}
  Global.RecolorBehavior.Init*:
    name:
      CSharp:
      - id: Global.RecolorBehavior.Init*
        name: Init
        nameWithType: RecolorBehavior.Init
        qualifiedName: RecolorBehavior.Init
      VB:
      - id: Global.RecolorBehavior.Init*
        name: Init
        nameWithType: RecolorBehavior.Init
        qualifiedName: RecolorBehavior.Init
    isDefinition: true
    commentId: Overload:Global.RecolorBehavior.Init
  Global.RecolorBehavior:
    name:
      CSharp:
      - id: Global.RecolorBehavior
        name: RecolorBehavior
        nameWithType: RecolorBehavior
        qualifiedName: RecolorBehavior
      VB:
      - id: Global.RecolorBehavior
        name: RecolorBehavior
        nameWithType: RecolorBehavior
        qualifiedName: RecolorBehavior
    isDefinition: true
    commentId: T:Global.RecolorBehavior
  Global.RecolorBtn:
    name:
      CSharp:
      - id: Global.RecolorBtn
        name: RecolorBtn
        nameWithType: RecolorBtn
        qualifiedName: RecolorBtn
      VB:
      - id: Global.RecolorBtn
        name: RecolorBtn
        nameWithType: RecolorBtn
        qualifiedName: RecolorBtn
    isDefinition: true
    commentId: T:Global.RecolorBtn
  Global.ReportBug.SendBug*:
    name:
      CSharp:
      - id: Global.ReportBug.SendBug*
        name: SendBug
        nameWithType: ReportBug.SendBug
        qualifiedName: ReportBug.SendBug
      VB:
      - id: Global.ReportBug.SendBug*
        name: SendBug
        nameWithType: ReportBug.SendBug
        qualifiedName: ReportBug.SendBug
    isDefinition: true
    commentId: Overload:Global.ReportBug.SendBug
  Global.ReportBug.TournamentRequest*:
    name:
      CSharp:
      - id: Global.ReportBug.TournamentRequest*
        name: TournamentRequest
        nameWithType: ReportBug.TournamentRequest
        qualifiedName: ReportBug.TournamentRequest
      VB:
      - id: Global.ReportBug.TournamentRequest*
        name: TournamentRequest
        nameWithType: ReportBug.TournamentRequest
        qualifiedName: ReportBug.TournamentRequest
    isDefinition: true
    commentId: Overload:Global.ReportBug.TournamentRequest
  Global.ReportBug:
    name:
      CSharp:
      - id: Global.ReportBug
        name: ReportBug
        nameWithType: ReportBug
        qualifiedName: ReportBug
      VB:
      - id: Global.ReportBug
        name: ReportBug
        nameWithType: ReportBug
        qualifiedName: ReportBug
    isDefinition: true
    commentId: T:Global.ReportBug
  Global.DtoDetailBugData:
    name:
      CSharp:
      - id: Global.DtoDetailBugData
        name: DtoDetailBugData
        nameWithType: DtoDetailBugData
        qualifiedName: DtoDetailBugData
      VB:
      - id: Global.DtoDetailBugData
        name: DtoDetailBugData
        nameWithType: DtoDetailBugData
        qualifiedName: DtoDetailBugData
    isDefinition: true
    commentId: T:Global.DtoDetailBugData
  Global.DtoBugData:
    name:
      CSharp:
      - id: Global.DtoBugData
        name: DtoBugData
        nameWithType: DtoBugData
        qualifiedName: DtoBugData
      VB:
      - id: Global.DtoBugData
        name: DtoBugData
        nameWithType: DtoBugData
        qualifiedName: DtoBugData
    isDefinition: true
    commentId: T:Global.DtoBugData
  Global.SettingsController.ToggleSettingsPopUp*:
    name:
      CSharp:
      - id: Global.SettingsController.ToggleSettingsPopUp*
        name: ToggleSettingsPopUp
        nameWithType: SettingsController.ToggleSettingsPopUp
        qualifiedName: SettingsController.ToggleSettingsPopUp
      VB:
      - id: Global.SettingsController.ToggleSettingsPopUp*
        name: ToggleSettingsPopUp
        nameWithType: SettingsController.ToggleSettingsPopUp
        qualifiedName: SettingsController.ToggleSettingsPopUp
    isDefinition: true
    commentId: Overload:Global.SettingsController.ToggleSettingsPopUp
  Global.SettingsController:
    name:
      CSharp:
      - id: Global.SettingsController
        name: SettingsController
        nameWithType: SettingsController
        qualifiedName: SettingsController
      VB:
      - id: Global.SettingsController
        name: SettingsController
        nameWithType: SettingsController
        qualifiedName: SettingsController
    isDefinition: true
    commentId: T:Global.SettingsController
  Global.AnimatorStateInfo:
    name:
      CSharp:
      - id: Global.AnimatorStateInfo
        name: AnimatorStateInfo
        nameWithType: AnimatorStateInfo
        qualifiedName: AnimatorStateInfo
        isExternal: true
      VB:
      - id: Global.AnimatorStateInfo
        name: AnimatorStateInfo
        nameWithType: AnimatorStateInfo
        qualifiedName: AnimatorStateInfo
        isExternal: true
    isDefinition: true
    commentId: '!:Global.AnimatorStateInfo'
  Global.ShinseiAnimBehaviour.OnStateExit*:
    name:
      CSharp:
      - id: Global.ShinseiAnimBehaviour.OnStateExit*
        name: OnStateExit
        nameWithType: ShinseiAnimBehaviour.OnStateExit
        qualifiedName: ShinseiAnimBehaviour.OnStateExit
      VB:
      - id: Global.ShinseiAnimBehaviour.OnStateExit*
        name: OnStateExit
        nameWithType: ShinseiAnimBehaviour.OnStateExit
        qualifiedName: ShinseiAnimBehaviour.OnStateExit
    isDefinition: true
    commentId: Overload:Global.ShinseiAnimBehaviour.OnStateExit
  Global.ShinseiAnimBehaviour:
    name:
      CSharp:
      - id: Global.ShinseiAnimBehaviour
        name: ShinseiAnimBehaviour
        nameWithType: ShinseiAnimBehaviour
        qualifiedName: ShinseiAnimBehaviour
      VB:
      - id: Global.ShinseiAnimBehaviour
        name: ShinseiAnimBehaviour
        nameWithType: ShinseiAnimBehaviour
        qualifiedName: ShinseiAnimBehaviour
    isDefinition: true
    commentId: T:Global.ShinseiAnimBehaviour
  Global.TestExplorer.OPEN*:
    name:
      CSharp:
      - id: Global.TestExplorer.OPEN*
        name: OPEN
        nameWithType: TestExplorer.OPEN
        qualifiedName: TestExplorer.OPEN
      VB:
      - id: Global.TestExplorer.OPEN*
        name: OPEN
        nameWithType: TestExplorer.OPEN
        qualifiedName: TestExplorer.OPEN
    isDefinition: true
    commentId: Overload:Global.TestExplorer.OPEN
  Global.TestExplorer:
    name:
      CSharp:
      - id: Global.TestExplorer
        name: TestExplorer
        nameWithType: TestExplorer
        qualifiedName: TestExplorer
      VB:
      - id: Global.TestExplorer
        name: TestExplorer
        nameWithType: TestExplorer
        qualifiedName: TestExplorer
    isDefinition: true
    commentId: T:Global.TestExplorer
  Global.TournamentCamera.Show*:
    name:
      CSharp:
      - id: Global.TournamentCamera.Show*
        name: Show
        nameWithType: TournamentCamera.Show
        qualifiedName: TournamentCamera.Show
      VB:
      - id: Global.TournamentCamera.Show*
        name: Show
        nameWithType: TournamentCamera.Show
        qualifiedName: TournamentCamera.Show
    isDefinition: true
    commentId: Overload:Global.TournamentCamera.Show
  Global.TournamentCamera.Hide*:
    name:
      CSharp:
      - id: Global.TournamentCamera.Hide*
        name: Hide
        nameWithType: TournamentCamera.Hide
        qualifiedName: TournamentCamera.Hide
      VB:
      - id: Global.TournamentCamera.Hide*
        name: Hide
        nameWithType: TournamentCamera.Hide
        qualifiedName: TournamentCamera.Hide
    isDefinition: true
    commentId: Overload:Global.TournamentCamera.Hide
  Global.TournamentCamera:
    name:
      CSharp:
      - id: Global.TournamentCamera
        name: TournamentCamera
        nameWithType: TournamentCamera
        qualifiedName: TournamentCamera
      VB:
      - id: Global.TournamentCamera
        name: TournamentCamera
        nameWithType: TournamentCamera
        qualifiedName: TournamentCamera
    isDefinition: true
    commentId: T:Global.TournamentCamera
  Global.TriggerNotificator.Notify*:
    name:
      CSharp:
      - id: Global.TriggerNotificator.Notify*
        name: Notify
        nameWithType: TriggerNotificator.Notify
        qualifiedName: TriggerNotificator.Notify
      VB:
      - id: Global.TriggerNotificator.Notify*
        name: Notify
        nameWithType: TriggerNotificator.Notify
        qualifiedName: TriggerNotificator.Notify
    isDefinition: true
    commentId: Overload:Global.TriggerNotificator.Notify
  Global.TriggerNotificator:
    name:
      CSharp:
      - id: Global.TriggerNotificator
        name: TriggerNotificator
        nameWithType: TriggerNotificator
        qualifiedName: TriggerNotificator
      VB:
      - id: Global.TriggerNotificator
        name: TriggerNotificator
        nameWithType: TriggerNotificator
        qualifiedName: TriggerNotificator
    isDefinition: true
    commentId: T:Global.TriggerNotificator
  Global.UiEmoji.Start*:
    name:
      CSharp:
      - id: Global.UiEmoji.Start*
        name: Start
        nameWithType: UiEmoji.Start
        qualifiedName: UiEmoji.Start
      VB:
      - id: Global.UiEmoji.Start*
        name: Start
        nameWithType: UiEmoji.Start
        qualifiedName: UiEmoji.Start
    isDefinition: true
    commentId: Overload:Global.UiEmoji.Start
  Global.UiEmoji.Init*:
    name:
      CSharp:
      - id: Global.UiEmoji.Init*
        name: Init
        nameWithType: UiEmoji.Init
        qualifiedName: UiEmoji.Init
      VB:
      - id: Global.UiEmoji.Init*
        name: Init
        nameWithType: UiEmoji.Init
        qualifiedName: UiEmoji.Init
    isDefinition: true
    commentId: Overload:Global.UiEmoji.Init
  Global.UiEmoji.ResetLastEmoji*:
    name:
      CSharp:
      - id: Global.UiEmoji.ResetLastEmoji*
        name: ResetLastEmoji
        nameWithType: UiEmoji.ResetLastEmoji
        qualifiedName: UiEmoji.ResetLastEmoji
      VB:
      - id: Global.UiEmoji.ResetLastEmoji*
        name: ResetLastEmoji
        nameWithType: UiEmoji.ResetLastEmoji
        qualifiedName: UiEmoji.ResetLastEmoji
    isDefinition: true
    commentId: Overload:Global.UiEmoji.ResetLastEmoji
  Global.UiEmoji.ToggleShow*:
    name:
      CSharp:
      - id: Global.UiEmoji.ToggleShow*
        name: ToggleShow
        nameWithType: UiEmoji.ToggleShow
        qualifiedName: UiEmoji.ToggleShow
      VB:
      - id: Global.UiEmoji.ToggleShow*
        name: ToggleShow
        nameWithType: UiEmoji.ToggleShow
        qualifiedName: UiEmoji.ToggleShow
    isDefinition: true
    commentId: Overload:Global.UiEmoji.ToggleShow
  Global.UiEmoji.Show*:
    name:
      CSharp:
      - id: Global.UiEmoji.Show*
        name: Show
        nameWithType: UiEmoji.Show
        qualifiedName: UiEmoji.Show
      VB:
      - id: Global.UiEmoji.Show*
        name: Show
        nameWithType: UiEmoji.Show
        qualifiedName: UiEmoji.Show
    isDefinition: true
    commentId: Overload:Global.UiEmoji.Show
  Global.UiEmoji:
    name:
      CSharp:
      - id: Global.UiEmoji
        name: UiEmoji
        nameWithType: UiEmoji
        qualifiedName: UiEmoji
      VB:
      - id: Global.UiEmoji
        name: UiEmoji
        nameWithType: UiEmoji
        qualifiedName: UiEmoji
    isDefinition: true
    commentId: T:Global.UiEmoji
  Global.IUiTrigger.OnTriggerEnterEvent:
    name:
      CSharp:
      - id: Global.IUiTrigger.OnTriggerEnterEvent
        name: OnTriggerEnterEvent
        nameWithType: IUiTrigger.OnTriggerEnterEvent
        qualifiedName: IUiTrigger.OnTriggerEnterEvent
      VB:
      - id: Global.IUiTrigger.OnTriggerEnterEvent
        name: OnTriggerEnterEvent
        nameWithType: IUiTrigger.OnTriggerEnterEvent
        qualifiedName: IUiTrigger.OnTriggerEnterEvent
    isDefinition: true
    parent: Global.IUiTrigger
    commentId: F:Global.IUiTrigger.OnTriggerEnterEvent
  Global.IUiTrigger.OnTriggerExitEvent:
    name:
      CSharp:
      - id: Global.IUiTrigger.OnTriggerExitEvent
        name: OnTriggerExitEvent
        nameWithType: IUiTrigger.OnTriggerExitEvent
        qualifiedName: IUiTrigger.OnTriggerExitEvent
      VB:
      - id: Global.IUiTrigger.OnTriggerExitEvent
        name: OnTriggerExitEvent
        nameWithType: IUiTrigger.OnTriggerExitEvent
        qualifiedName: IUiTrigger.OnTriggerExitEvent
    isDefinition: true
    parent: Global.IUiTrigger
    commentId: F:Global.IUiTrigger.OnTriggerExitEvent
  Global.IUiTrigger.Update:
    name:
      CSharp:
      - id: Global.IUiTrigger.Update
        name: Update
        nameWithType: IUiTrigger.Update
        qualifiedName: IUiTrigger.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.IUiTrigger.Update
        name: Update
        nameWithType: IUiTrigger.Update
        qualifiedName: IUiTrigger.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.IUiTrigger
    commentId: M:Global.IUiTrigger.Update
  Global.UiTrigger.ShowVendorUi*:
    name:
      CSharp:
      - id: Global.UiTrigger.ShowVendorUi*
        name: ShowVendorUi
        nameWithType: UiTrigger.ShowVendorUi
        qualifiedName: UiTrigger.ShowVendorUi
      VB:
      - id: Global.UiTrigger.ShowVendorUi*
        name: ShowVendorUi
        nameWithType: UiTrigger.ShowVendorUi
        qualifiedName: UiTrigger.ShowVendorUi
    isDefinition: true
    commentId: Overload:Global.UiTrigger.ShowVendorUi
  Global.UiTrigger.HideVendor*:
    name:
      CSharp:
      - id: Global.UiTrigger.HideVendor*
        name: HideVendor
        nameWithType: UiTrigger.HideVendor
        qualifiedName: UiTrigger.HideVendor
      VB:
      - id: Global.UiTrigger.HideVendor*
        name: HideVendor
        nameWithType: UiTrigger.HideVendor
        qualifiedName: UiTrigger.HideVendor
    isDefinition: true
    commentId: Overload:Global.UiTrigger.HideVendor
  Global.UiTrigger:
    name:
      CSharp:
      - id: Global.UiTrigger
        name: UiTrigger
        nameWithType: UiTrigger
        qualifiedName: UiTrigger
      VB:
      - id: Global.UiTrigger
        name: UiTrigger
        nameWithType: UiTrigger
        qualifiedName: UiTrigger
    isDefinition: true
    commentId: T:Global.UiTrigger
  Global.CinemachineVirtualCamera:
    name:
      CSharp:
      - id: Global.CinemachineVirtualCamera
        name: CinemachineVirtualCamera
        nameWithType: CinemachineVirtualCamera
        qualifiedName: CinemachineVirtualCamera
        isExternal: true
      VB:
      - id: Global.CinemachineVirtualCamera
        name: CinemachineVirtualCamera
        nameWithType: CinemachineVirtualCamera
        qualifiedName: CinemachineVirtualCamera
        isExternal: true
    isDefinition: true
  Global.UIViewerTrigger.ChangeCamera*:
    name:
      CSharp:
      - id: Global.UIViewerTrigger.ChangeCamera*
        name: ChangeCamera
        nameWithType: UIViewerTrigger.ChangeCamera
        qualifiedName: UIViewerTrigger.ChangeCamera
      VB:
      - id: Global.UIViewerTrigger.ChangeCamera*
        name: ChangeCamera
        nameWithType: UIViewerTrigger.ChangeCamera
        qualifiedName: UIViewerTrigger.ChangeCamera
    isDefinition: true
    commentId: Overload:Global.UIViewerTrigger.ChangeCamera
  Global.UIViewerTrigger:
    name:
      CSharp:
      - id: Global.UIViewerTrigger
        name: UIViewerTrigger
        nameWithType: UIViewerTrigger
        qualifiedName: UIViewerTrigger
      VB:
      - id: Global.UIViewerTrigger
        name: UIViewerTrigger
        nameWithType: UIViewerTrigger
        qualifiedName: UIViewerTrigger
    isDefinition: true
    commentId: T:Global.UIViewerTrigger
  Global.VendorHeadTracking.SetSeeTarget*:
    name:
      CSharp:
      - id: Global.VendorHeadTracking.SetSeeTarget*
        name: SetSeeTarget
        nameWithType: VendorHeadTracking.SetSeeTarget
        qualifiedName: VendorHeadTracking.SetSeeTarget
      VB:
      - id: Global.VendorHeadTracking.SetSeeTarget*
        name: SetSeeTarget
        nameWithType: VendorHeadTracking.SetSeeTarget
        qualifiedName: VendorHeadTracking.SetSeeTarget
    isDefinition: true
    commentId: Overload:Global.VendorHeadTracking.SetSeeTarget
  Global.VendorHeadTracking.SetOriginal*:
    name:
      CSharp:
      - id: Global.VendorHeadTracking.SetOriginal*
        name: SetOriginal
        nameWithType: VendorHeadTracking.SetOriginal
        qualifiedName: VendorHeadTracking.SetOriginal
      VB:
      - id: Global.VendorHeadTracking.SetOriginal*
        name: SetOriginal
        nameWithType: VendorHeadTracking.SetOriginal
        qualifiedName: VendorHeadTracking.SetOriginal
    isDefinition: true
    commentId: Overload:Global.VendorHeadTracking.SetOriginal
  Global.VendorHeadTracking:
    name:
      CSharp:
      - id: Global.VendorHeadTracking
        name: VendorHeadTracking
        nameWithType: VendorHeadTracking
        qualifiedName: VendorHeadTracking
      VB:
      - id: Global.VendorHeadTracking
        name: VendorHeadTracking
        nameWithType: VendorHeadTracking
        qualifiedName: VendorHeadTracking
    isDefinition: true
    commentId: T:Global.VendorHeadTracking
  Global.VendorSeeArea:
    name:
      CSharp:
      - id: Global.VendorSeeArea
        name: VendorSeeArea
        nameWithType: VendorSeeArea
        qualifiedName: VendorSeeArea
      VB:
      - id: Global.VendorSeeArea
        name: VendorSeeArea
        nameWithType: VendorSeeArea
        qualifiedName: VendorSeeArea
    isDefinition: true
    commentId: T:Global.VendorSeeArea
  Global.WorldPositionateElement:
    name:
      CSharp:
      - id: Global.WorldPositionateElement
        name: WorldPositionateElement
        nameWithType: WorldPositionateElement
        qualifiedName: WorldPositionateElement
      VB:
      - id: Global.WorldPositionateElement
        name: WorldPositionateElement
        nameWithType: WorldPositionateElement
        qualifiedName: WorldPositionateElement
    isDefinition: true
    commentId: T:Global.WorldPositionateElement
  Global.CheckTournamentInscription.EnableNPCs*:
    name:
      CSharp:
      - id: Global.CheckTournamentInscription.EnableNPCs*
        name: EnableNPCs
        nameWithType: CheckTournamentInscription.EnableNPCs
        qualifiedName: CheckTournamentInscription.EnableNPCs
      VB:
      - id: Global.CheckTournamentInscription.EnableNPCs*
        name: EnableNPCs
        nameWithType: CheckTournamentInscription.EnableNPCs
        qualifiedName: CheckTournamentInscription.EnableNPCs
    isDefinition: true
    commentId: Overload:Global.CheckTournamentInscription.EnableNPCs
  Global.CheckTournamentInscription.DisableObjectsInTournament*:
    name:
      CSharp:
      - id: Global.CheckTournamentInscription.DisableObjectsInTournament*
        name: DisableObjectsInTournament
        nameWithType: CheckTournamentInscription.DisableObjectsInTournament
        qualifiedName: CheckTournamentInscription.DisableObjectsInTournament
      VB:
      - id: Global.CheckTournamentInscription.DisableObjectsInTournament*
        name: DisableObjectsInTournament
        nameWithType: CheckTournamentInscription.DisableObjectsInTournament
        qualifiedName: CheckTournamentInscription.DisableObjectsInTournament
    isDefinition: true
    commentId: Overload:Global.CheckTournamentInscription.DisableObjectsInTournament
  Global.PendingVariableNPC.ShowVendor*:
    name:
      CSharp:
      - id: Global.PendingVariableNPC.ShowVendor*
        name: ShowVendor
        nameWithType: PendingVariableNPC.ShowVendor
        qualifiedName: PendingVariableNPC.ShowVendor
      VB:
      - id: Global.PendingVariableNPC.ShowVendor*
        name: ShowVendor
        nameWithType: PendingVariableNPC.ShowVendor
        qualifiedName: PendingVariableNPC.ShowVendor
    isDefinition: true
    commentId: Overload:Global.PendingVariableNPC.ShowVendor
  Global.PendingVariableNPC.LeaveTournament*:
    name:
      CSharp:
      - id: Global.PendingVariableNPC.LeaveTournament*
        name: LeaveTournament
        nameWithType: PendingVariableNPC.LeaveTournament
        qualifiedName: PendingVariableNPC.LeaveTournament
      VB:
      - id: Global.PendingVariableNPC.LeaveTournament*
        name: LeaveTournament
        nameWithType: PendingVariableNPC.LeaveTournament
        qualifiedName: PendingVariableNPC.LeaveTournament
    isDefinition: true
    commentId: Overload:Global.PendingVariableNPC.LeaveTournament
  Global.PendingVariableNPC:
    name:
      CSharp:
      - id: Global.PendingVariableNPC
        name: PendingVariableNPC
        nameWithType: PendingVariableNPC
        qualifiedName: PendingVariableNPC
      VB:
      - id: Global.PendingVariableNPC
        name: PendingVariableNPC
        nameWithType: PendingVariableNPC
        qualifiedName: PendingVariableNPC
    isDefinition: true
    commentId: T:Global.PendingVariableNPC
  Global.NodeEnumAttribute:
    name:
      CSharp:
      - id: Global.NodeEnumAttribute
        name: NodeEnumAttribute
        nameWithType: NodeEnumAttribute
        qualifiedName: NodeEnumAttribute
      VB:
      - id: Global.NodeEnumAttribute
        name: NodeEnumAttribute
        nameWithType: NodeEnumAttribute
        qualifiedName: NodeEnumAttribute
    isDefinition: true
    commentId: T:Global.NodeEnumAttribute
  Global.AESEncryption.Encrypt*:
    name:
      CSharp:
      - id: Global.AESEncryption.Encrypt*
        name: Encrypt
        nameWithType: AESEncryption.Encrypt
        qualifiedName: AESEncryption.Encrypt
      VB:
      - id: Global.AESEncryption.Encrypt*
        name: Encrypt
        nameWithType: AESEncryption.Encrypt
        qualifiedName: AESEncryption.Encrypt
    isDefinition: true
    commentId: Overload:Global.AESEncryption.Encrypt
  Global.AESEncryption.Decrypt*:
    name:
      CSharp:
      - id: Global.AESEncryption.Decrypt*
        name: Decrypt
        nameWithType: AESEncryption.Decrypt
        qualifiedName: AESEncryption.Decrypt
      VB:
      - id: Global.AESEncryption.Decrypt*
        name: Decrypt
        nameWithType: AESEncryption.Decrypt
        qualifiedName: AESEncryption.Decrypt
    isDefinition: true
    commentId: Overload:Global.AESEncryption.Decrypt
  Global.AESEncryption:
    name:
      CSharp:
      - id: Global.AESEncryption
        name: AESEncryption
        nameWithType: AESEncryption
        qualifiedName: AESEncryption
      VB:
      - id: Global.AESEncryption
        name: AESEncryption
        nameWithType: AESEncryption
        qualifiedName: AESEncryption
    isDefinition: true
    commentId: T:Global.AESEncryption
  Global.UnityNewtonsoftJsonSerializer.Serialize*:
    name:
      CSharp:
      - id: Global.UnityNewtonsoftJsonSerializer.Serialize*
        name: Serialize
        nameWithType: UnityNewtonsoftJsonSerializer.Serialize
        qualifiedName: UnityNewtonsoftJsonSerializer.Serialize
      VB:
      - id: Global.UnityNewtonsoftJsonSerializer.Serialize*
        name: Serialize
        nameWithType: UnityNewtonsoftJsonSerializer.Serialize
        qualifiedName: UnityNewtonsoftJsonSerializer.Serialize
    isDefinition: true
    commentId: Overload:Global.UnityNewtonsoftJsonSerializer.Serialize
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Global.UnityNewtonsoftJsonSerializer.Deserialize*:
    name:
      CSharp:
      - id: Global.UnityNewtonsoftJsonSerializer.Deserialize*
        name: Deserialize
        nameWithType: UnityNewtonsoftJsonSerializer.Deserialize
        qualifiedName: UnityNewtonsoftJsonSerializer.Deserialize
      VB:
      - id: Global.UnityNewtonsoftJsonSerializer.Deserialize*
        name: Deserialize
        nameWithType: UnityNewtonsoftJsonSerializer.Deserialize
        qualifiedName: UnityNewtonsoftJsonSerializer.Deserialize
    isDefinition: true
    commentId: Overload:Global.UnityNewtonsoftJsonSerializer.Deserialize
  Global.UnityNewtonsoftJsonSerializer:
    name:
      CSharp:
      - id: Global.UnityNewtonsoftJsonSerializer
        name: UnityNewtonsoftJsonSerializer
        nameWithType: UnityNewtonsoftJsonSerializer
        qualifiedName: UnityNewtonsoftJsonSerializer
      VB:
      - id: Global.UnityNewtonsoftJsonSerializer
        name: UnityNewtonsoftJsonSerializer
        nameWithType: UnityNewtonsoftJsonSerializer
        qualifiedName: UnityNewtonsoftJsonSerializer
    isDefinition: true
    commentId: T:Global.UnityNewtonsoftJsonSerializer
  Global.Cooker.GetFood*:
    name:
      CSharp:
      - id: Global.Cooker.GetFood*
        name: GetFood
        nameWithType: Cooker.GetFood
        qualifiedName: Cooker.GetFood
      VB:
      - id: Global.Cooker.GetFood*
        name: GetFood
        nameWithType: Cooker.GetFood
        qualifiedName: Cooker.GetFood
    isDefinition: true
    commentId: Overload:Global.Cooker.GetFood
  Global.Cooker.Show*:
    name:
      CSharp:
      - id: Global.Cooker.Show*
        name: Show
        nameWithType: Cooker.Show
        qualifiedName: Cooker.Show
      VB:
      - id: Global.Cooker.Show*
        name: Show
        nameWithType: Cooker.Show
        qualifiedName: Cooker.Show
    isDefinition: true
    commentId: Overload:Global.Cooker.Show
  Global.Cooker.Hide*:
    name:
      CSharp:
      - id: Global.Cooker.Hide*
        name: Hide
        nameWithType: Cooker.Hide
        qualifiedName: Cooker.Hide
      VB:
      - id: Global.Cooker.Hide*
        name: Hide
        nameWithType: Cooker.Hide
        qualifiedName: Cooker.Hide
    isDefinition: true
    commentId: Overload:Global.Cooker.Hide
  Global.Cooker:
    name:
      CSharp:
      - id: Global.Cooker
        name: Cooker
        nameWithType: Cooker
        qualifiedName: Cooker
      VB:
      - id: Global.Cooker
        name: Cooker
        nameWithType: Cooker
        qualifiedName: Cooker
    isDefinition: true
    commentId: T:Global.Cooker
  Global.CharacterStateEnum:
    name:
      CSharp:
      - id: Global.CharacterStateEnum
        name: CharacterStateEnum
        nameWithType: CharacterStateEnum
        qualifiedName: CharacterStateEnum
        isExternal: true
      VB:
      - id: Global.CharacterStateEnum
        name: CharacterStateEnum
        nameWithType: CharacterStateEnum
        qualifiedName: CharacterStateEnum
        isExternal: true
    isDefinition: true
  Global.PlayerIconController.ChangeIcon*:
    name:
      CSharp:
      - id: Global.PlayerIconController.ChangeIcon*
        name: ChangeIcon
        nameWithType: PlayerIconController.ChangeIcon
        qualifiedName: PlayerIconController.ChangeIcon
      VB:
      - id: Global.PlayerIconController.ChangeIcon*
        name: ChangeIcon
        nameWithType: PlayerIconController.ChangeIcon
        qualifiedName: PlayerIconController.ChangeIcon
    isDefinition: true
    commentId: Overload:Global.PlayerIconController.ChangeIcon
  Global.PlayerIconController:
    name:
      CSharp:
      - id: Global.PlayerIconController
        name: PlayerIconController
        nameWithType: PlayerIconController
        qualifiedName: PlayerIconController
      VB:
      - id: Global.PlayerIconController
        name: PlayerIconController
        nameWithType: PlayerIconController
        qualifiedName: PlayerIconController
    isDefinition: true
    commentId: T:Global.PlayerIconController
  System.Collections.Generic.List{Animator}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Animator}
  Global.NavMeshAgent:
    name:
      CSharp:
      - id: Global.NavMeshAgent
        name: NavMeshAgent
        nameWithType: NavMeshAgent
        qualifiedName: NavMeshAgent
        isExternal: true
      VB:
      - id: Global.NavMeshAgent
        name: NavMeshAgent
        nameWithType: NavMeshAgent
        qualifiedName: NavMeshAgent
        isExternal: true
    isDefinition: true
  Global.ThirdPersonController.IsMovementBloqued*:
    name:
      CSharp:
      - id: Global.ThirdPersonController.IsMovementBloqued*
        name: IsMovementBloqued
        nameWithType: ThirdPersonController.IsMovementBloqued
        qualifiedName: ThirdPersonController.IsMovementBloqued
      VB:
      - id: Global.ThirdPersonController.IsMovementBloqued*
        name: IsMovementBloqued
        nameWithType: ThirdPersonController.IsMovementBloqued
        qualifiedName: ThirdPersonController.IsMovementBloqued
    isDefinition: true
    commentId: Overload:Global.ThirdPersonController.IsMovementBloqued
  Global.TournamentReadyController:
    name:
      CSharp:
      - id: Global.TournamentReadyController
        name: TournamentReadyController
        nameWithType: TournamentReadyController
        qualifiedName: TournamentReadyController
        isExternal: true
      VB:
      - id: Global.TournamentReadyController
        name: TournamentReadyController
        nameWithType: TournamentReadyController
        qualifiedName: TournamentReadyController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.TournamentReadyController'
  Global.ThirdPersonController.Init*:
    name:
      CSharp:
      - id: Global.ThirdPersonController.Init*
        name: Init
        nameWithType: ThirdPersonController.Init
        qualifiedName: ThirdPersonController.Init
      VB:
      - id: Global.ThirdPersonController.Init*
        name: Init
        nameWithType: ThirdPersonController.Init
        qualifiedName: ThirdPersonController.Init
    isDefinition: true
    commentId: Overload:Global.ThirdPersonController.Init
  Global.ThirdPersonController.PutPlayerInFacingCamera*:
    name:
      CSharp:
      - id: Global.ThirdPersonController.PutPlayerInFacingCamera*
        name: PutPlayerInFacingCamera
        nameWithType: ThirdPersonController.PutPlayerInFacingCamera
        qualifiedName: ThirdPersonController.PutPlayerInFacingCamera
      VB:
      - id: Global.ThirdPersonController.PutPlayerInFacingCamera*
        name: PutPlayerInFacingCamera
        nameWithType: ThirdPersonController.PutPlayerInFacingCamera
        qualifiedName: ThirdPersonController.PutPlayerInFacingCamera
    isDefinition: true
    commentId: Overload:Global.ThirdPersonController.PutPlayerInFacingCamera
  System.Nullable{Vector3}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{Vector3}
  Global.ThirdPersonController.MoveObject*:
    name:
      CSharp:
      - id: Global.ThirdPersonController.MoveObject*
        name: MoveObject
        nameWithType: ThirdPersonController.MoveObject
        qualifiedName: ThirdPersonController.MoveObject
      VB:
      - id: Global.ThirdPersonController.MoveObject*
        name: MoveObject
        nameWithType: ThirdPersonController.MoveObject
        qualifiedName: ThirdPersonController.MoveObject
    isDefinition: true
    commentId: Overload:Global.ThirdPersonController.MoveObject
  Global.ThirdPersonController.SetStateIcon*:
    name:
      CSharp:
      - id: Global.ThirdPersonController.SetStateIcon*
        name: SetStateIcon
        nameWithType: ThirdPersonController.SetStateIcon
        qualifiedName: ThirdPersonController.SetStateIcon
      VB:
      - id: Global.ThirdPersonController.SetStateIcon*
        name: SetStateIcon
        nameWithType: ThirdPersonController.SetStateIcon
        qualifiedName: ThirdPersonController.SetStateIcon
    isDefinition: true
    commentId: Overload:Global.ThirdPersonController.SetStateIcon
  Global.SimpleVideoPlayer:
    name:
      CSharp:
      - id: Global.SimpleVideoPlayer
        name: SimpleVideoPlayer
        nameWithType: SimpleVideoPlayer
        qualifiedName: SimpleVideoPlayer
      VB:
      - id: Global.SimpleVideoPlayer
        name: SimpleVideoPlayer
        nameWithType: SimpleVideoPlayer
        qualifiedName: SimpleVideoPlayer
    isDefinition: true
    commentId: T:Global.SimpleVideoPlayer
  Global.FreeCam.StartLooking*:
    name:
      CSharp:
      - id: Global.FreeCam.StartLooking*
        name: StartLooking
        nameWithType: FreeCam.StartLooking
        qualifiedName: FreeCam.StartLooking
      VB:
      - id: Global.FreeCam.StartLooking*
        name: StartLooking
        nameWithType: FreeCam.StartLooking
        qualifiedName: FreeCam.StartLooking
    isDefinition: true
    commentId: Overload:Global.FreeCam.StartLooking
  Global.FreeCam.StopLooking*:
    name:
      CSharp:
      - id: Global.FreeCam.StopLooking*
        name: StopLooking
        nameWithType: FreeCam.StopLooking
        qualifiedName: FreeCam.StopLooking
      VB:
      - id: Global.FreeCam.StopLooking*
        name: StopLooking
        nameWithType: FreeCam.StopLooking
        qualifiedName: FreeCam.StopLooking
    isDefinition: true
    commentId: Overload:Global.FreeCam.StopLooking
  Global.FreeCam:
    name:
      CSharp:
      - id: Global.FreeCam
        name: FreeCam
        nameWithType: FreeCam
        qualifiedName: FreeCam
      VB:
      - id: Global.FreeCam
        name: FreeCam
        nameWithType: FreeCam
        qualifiedName: FreeCam
    isDefinition: true
    commentId: T:Global.FreeCam
  Global.ChangeGender.SelectGender*:
    name:
      CSharp:
      - id: Global.ChangeGender.SelectGender*
        name: SelectGender
        nameWithType: ChangeGender.SelectGender
        qualifiedName: ChangeGender.SelectGender
      VB:
      - id: Global.ChangeGender.SelectGender*
        name: SelectGender
        nameWithType: ChangeGender.SelectGender
        qualifiedName: ChangeGender.SelectGender
    isDefinition: true
    commentId: Overload:Global.ChangeGender.SelectGender
  Global.ChangeGender:
    name:
      CSharp:
      - id: Global.ChangeGender
        name: ChangeGender
        nameWithType: ChangeGender
        qualifiedName: ChangeGender
      VB:
      - id: Global.ChangeGender
        name: ChangeGender
        nameWithType: ChangeGender
        qualifiedName: ChangeGender
    isDefinition: true
    commentId: T:Global.ChangeGender
  Global.Constants:
    name:
      CSharp:
      - id: Global.Constants
        name: Constants
        nameWithType: Constants
        qualifiedName: Constants
      VB:
      - id: Global.Constants
        name: Constants
        nameWithType: Constants
        qualifiedName: Constants
    isDefinition: true
    commentId: T:Global.Constants
  Global.Courtain.StartFade*:
    name:
      CSharp:
      - id: Global.Courtain.StartFade*
        name: StartFade
        nameWithType: Courtain.StartFade
        qualifiedName: Courtain.StartFade
      VB:
      - id: Global.Courtain.StartFade*
        name: StartFade
        nameWithType: Courtain.StartFade
        qualifiedName: Courtain.StartFade
    isDefinition: true
    commentId: Overload:Global.Courtain.StartFade
  Global.Courtain:
    name:
      CSharp:
      - id: Global.Courtain
        name: Courtain
        nameWithType: Courtain
        qualifiedName: Courtain
      VB:
      - id: Global.Courtain
        name: Courtain
        nameWithType: Courtain
        qualifiedName: Courtain
    isDefinition: true
    commentId: T:Global.Courtain
  Global.EnableWhenEnable:
    name:
      CSharp:
      - id: Global.EnableWhenEnable
        name: EnableWhenEnable
        nameWithType: EnableWhenEnable
        qualifiedName: EnableWhenEnable
      VB:
      - id: Global.EnableWhenEnable
        name: EnableWhenEnable
        nameWithType: EnableWhenEnable
        qualifiedName: EnableWhenEnable
    isDefinition: true
    commentId: T:Global.EnableWhenEnable
  Global.FreeFlyCamera:
    name:
      CSharp:
      - id: Global.FreeFlyCamera
        name: FreeFlyCamera
        nameWithType: FreeFlyCamera
        qualifiedName: FreeFlyCamera
      VB:
      - id: Global.FreeFlyCamera
        name: FreeFlyCamera
        nameWithType: FreeFlyCamera
        qualifiedName: FreeFlyCamera
    isDefinition: true
    commentId: T:Global.FreeFlyCamera
  Global.FreeLookCam.Update*:
    name:
      CSharp:
      - id: Global.FreeLookCam.Update*
        name: Update
        nameWithType: FreeLookCam.Update
        qualifiedName: FreeLookCam.Update
      VB:
      - id: Global.FreeLookCam.Update*
        name: Update
        nameWithType: FreeLookCam.Update
        qualifiedName: FreeLookCam.Update
    isDefinition: true
    commentId: Overload:Global.FreeLookCam.Update
  Global.FreeLookCam.ActivateCamera*:
    name:
      CSharp:
      - id: Global.FreeLookCam.ActivateCamera*
        name: ActivateCamera
        nameWithType: FreeLookCam.ActivateCamera
        qualifiedName: FreeLookCam.ActivateCamera
      VB:
      - id: Global.FreeLookCam.ActivateCamera*
        name: ActivateCamera
        nameWithType: FreeLookCam.ActivateCamera
        qualifiedName: FreeLookCam.ActivateCamera
    isDefinition: true
    commentId: Overload:Global.FreeLookCam.ActivateCamera
  Global.FreeLookCam:
    name:
      CSharp:
      - id: Global.FreeLookCam
        name: FreeLookCam
        nameWithType: FreeLookCam
        qualifiedName: FreeLookCam
      VB:
      - id: Global.FreeLookCam
        name: FreeLookCam
        nameWithType: FreeLookCam
        qualifiedName: FreeLookCam
    isDefinition: true
    commentId: T:Global.FreeLookCam
  Global.HideAfterSeconds.StartHideCountdown*:
    name:
      CSharp:
      - id: Global.HideAfterSeconds.StartHideCountdown*
        name: StartHideCountdown
        nameWithType: HideAfterSeconds.StartHideCountdown
        qualifiedName: HideAfterSeconds.StartHideCountdown
      VB:
      - id: Global.HideAfterSeconds.StartHideCountdown*
        name: StartHideCountdown
        nameWithType: HideAfterSeconds.StartHideCountdown
        qualifiedName: HideAfterSeconds.StartHideCountdown
    isDefinition: true
    commentId: Overload:Global.HideAfterSeconds.StartHideCountdown
  Global.HideAfterSeconds:
    name:
      CSharp:
      - id: Global.HideAfterSeconds
        name: HideAfterSeconds
        nameWithType: HideAfterSeconds
        qualifiedName: HideAfterSeconds
      VB:
      - id: Global.HideAfterSeconds
        name: HideAfterSeconds
        nameWithType: HideAfterSeconds
        qualifiedName: HideAfterSeconds
    isDefinition: true
    commentId: T:Global.HideAfterSeconds
  Global.InteractWithPlayerController.ActivatePieMenu*:
    name:
      CSharp:
      - id: Global.InteractWithPlayerController.ActivatePieMenu*
        name: ActivatePieMenu
        nameWithType: InteractWithPlayerController.ActivatePieMenu
        qualifiedName: InteractWithPlayerController.ActivatePieMenu
      VB:
      - id: Global.InteractWithPlayerController.ActivatePieMenu*
        name: ActivatePieMenu
        nameWithType: InteractWithPlayerController.ActivatePieMenu
        qualifiedName: InteractWithPlayerController.ActivatePieMenu
    isDefinition: true
    commentId: Overload:Global.InteractWithPlayerController.ActivatePieMenu
  Global.InteractWithPlayerController:
    name:
      CSharp:
      - id: Global.InteractWithPlayerController
        name: InteractWithPlayerController
        nameWithType: InteractWithPlayerController
        qualifiedName: InteractWithPlayerController
      VB:
      - id: Global.InteractWithPlayerController
        name: InteractWithPlayerController
        nameWithType: InteractWithPlayerController
        qualifiedName: InteractWithPlayerController
    isDefinition: true
    commentId: T:Global.InteractWithPlayerController
  Global.ITimer.UpdateTimer*:
    name:
      CSharp:
      - id: Global.ITimer.UpdateTimer*
        name: UpdateTimer
        nameWithType: ITimer.UpdateTimer
        qualifiedName: ITimer.UpdateTimer
      VB:
      - id: Global.ITimer.UpdateTimer*
        name: UpdateTimer
        nameWithType: ITimer.UpdateTimer
        qualifiedName: ITimer.UpdateTimer
    isDefinition: true
    commentId: Overload:Global.ITimer.UpdateTimer
  Global.ITimer:
    name:
      CSharp:
      - id: Global.ITimer
        name: ITimer
        nameWithType: ITimer
        qualifiedName: ITimer
      VB:
      - id: Global.ITimer
        name: ITimer
        nameWithType: ITimer
        qualifiedName: ITimer
    isDefinition: true
    commentId: T:Global.ITimer
  Global.Light:
    name:
      CSharp:
      - id: Global.Light
        name: Light
        nameWithType: Light
        qualifiedName: Light
        isExternal: true
      VB:
      - id: Global.Light
        name: Light
        nameWithType: Light
        qualifiedName: Light
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Light'
  Global.LightFlickerEffect.Reset*:
    name:
      CSharp:
      - id: Global.LightFlickerEffect.Reset*
        name: Reset
        nameWithType: LightFlickerEffect.Reset
        qualifiedName: LightFlickerEffect.Reset
      VB:
      - id: Global.LightFlickerEffect.Reset*
        name: Reset
        nameWithType: LightFlickerEffect.Reset
        qualifiedName: LightFlickerEffect.Reset
    isDefinition: true
    commentId: Overload:Global.LightFlickerEffect.Reset
  Global.LightFlickerEffect:
    name:
      CSharp:
      - id: Global.LightFlickerEffect
        name: LightFlickerEffect
        nameWithType: LightFlickerEffect
        qualifiedName: LightFlickerEffect
      VB:
      - id: Global.LightFlickerEffect
        name: LightFlickerEffect
        nameWithType: LightFlickerEffect
        qualifiedName: LightFlickerEffect
    isDefinition: true
    commentId: T:Global.LightFlickerEffect
  System.UInt64:
    name:
      CSharp:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      VB:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt64
  Global.Deck:
    name:
      CSharp:
      - id: Global.Deck
        name: Deck
        nameWithType: Deck
        qualifiedName: Deck
        isExternal: true
      VB:
      - id: Global.Deck
        name: Deck
        nameWithType: Deck
        qualifiedName: Deck
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Deck'
  System.Collections.Generic.List{ChatMessagePayload}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: ChatMessagePayload
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: ChatMessagePayload
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{ChatMessagePayload}
  System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: PartsOfCharacter
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.CharacterStyleInfo
        name: CharacterStyleInfo
        nameWithType: CharacterStyleInfo
        qualifiedName: CharacterStyleInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: PartsOfCharacter
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.CharacterStyleInfo
        name: CharacterStyleInfo
        nameWithType: CharacterStyleInfo
        qualifiedName: CharacterStyleInfo
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo}
  System.Collections.Generic.Dictionary{PartsOfCharacter,UnlockedCharacterStyleInfo}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: PartsOfCharacter
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UnlockedCharacterStyleInfo
        name: UnlockedCharacterStyleInfo
        nameWithType: UnlockedCharacterStyleInfo
        qualifiedName: UnlockedCharacterStyleInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: PartsOfCharacter
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.UnlockedCharacterStyleInfo
        name: UnlockedCharacterStyleInfo
        nameWithType: UnlockedCharacterStyleInfo
        qualifiedName: UnlockedCharacterStyleInfo
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{PartsOfCharacter,UnlockedCharacterStyleInfo}
  Global.LocalPlayerData.CastCompressedStyleToDictionary*:
    name:
      CSharp:
      - id: Global.LocalPlayerData.CastCompressedStyleToDictionary*
        name: CastCompressedStyleToDictionary
        nameWithType: LocalPlayerData.CastCompressedStyleToDictionary
        qualifiedName: LocalPlayerData.CastCompressedStyleToDictionary
      VB:
      - id: Global.LocalPlayerData.CastCompressedStyleToDictionary*
        name: CastCompressedStyleToDictionary
        nameWithType: LocalPlayerData.CastCompressedStyleToDictionary
        qualifiedName: LocalPlayerData.CastCompressedStyleToDictionary
    isDefinition: true
    commentId: Overload:Global.LocalPlayerData.CastCompressedStyleToDictionary
  Global.LocalPlayerData.CastDictionaryToCompressedStyle*:
    name:
      CSharp:
      - id: Global.LocalPlayerData.CastDictionaryToCompressedStyle*
        name: CastDictionaryToCompressedStyle
        nameWithType: LocalPlayerData.CastDictionaryToCompressedStyle
        qualifiedName: LocalPlayerData.CastDictionaryToCompressedStyle
      VB:
      - id: Global.LocalPlayerData.CastDictionaryToCompressedStyle*
        name: CastDictionaryToCompressedStyle
        nameWithType: LocalPlayerData.CastDictionaryToCompressedStyle
        qualifiedName: LocalPlayerData.CastDictionaryToCompressedStyle
    isDefinition: true
    commentId: Overload:Global.LocalPlayerData.CastDictionaryToCompressedStyle
  Global.LocalPlayerData:
    name:
      CSharp:
      - id: Global.LocalPlayerData
        name: LocalPlayerData
        nameWithType: LocalPlayerData
        qualifiedName: LocalPlayerData
      VB:
      - id: Global.LocalPlayerData
        name: LocalPlayerData
        nameWithType: LocalPlayerData
        qualifiedName: LocalPlayerData
    isDefinition: true
    commentId: T:Global.LocalPlayerData
  Global.UnlockedCharacterStyleInfo:
    name:
      CSharp:
      - id: Global.UnlockedCharacterStyleInfo
        name: UnlockedCharacterStyleInfo
        nameWithType: UnlockedCharacterStyleInfo
        qualifiedName: UnlockedCharacterStyleInfo
      VB:
      - id: Global.UnlockedCharacterStyleInfo
        name: UnlockedCharacterStyleInfo
        nameWithType: UnlockedCharacterStyleInfo
        qualifiedName: UnlockedCharacterStyleInfo
    isDefinition: true
    commentId: T:Global.UnlockedCharacterStyleInfo
  Global.LookAtAxis:
    name:
      CSharp:
      - id: Global.LookAtAxis
        name: LookAtAxis
        nameWithType: LookAtAxis
        qualifiedName: LookAtAxis
      VB:
      - id: Global.LookAtAxis
        name: LookAtAxis
        nameWithType: LookAtAxis
        qualifiedName: LookAtAxis
    isDefinition: true
    commentId: T:Global.LookAtAxis
  Global.MaterialOffset:
    name:
      CSharp:
      - id: Global.MaterialOffset
        name: MaterialOffset
        nameWithType: MaterialOffset
        qualifiedName: MaterialOffset
      VB:
      - id: Global.MaterialOffset
        name: MaterialOffset
        nameWithType: MaterialOffset
        qualifiedName: MaterialOffset
    isDefinition: true
    commentId: T:Global.MaterialOffset
  Global.PlayerDataManager:
    name:
      CSharp:
      - id: Global.PlayerDataManager
        name: PlayerDataManager
        nameWithType: PlayerDataManager
        qualifiedName: PlayerDataManager
      VB:
      - id: Global.PlayerDataManager
        name: PlayerDataManager
        nameWithType: PlayerDataManager
        qualifiedName: PlayerDataManager
    isDefinition: true
    commentId: T:Global.PlayerDataManager
  Global.CharacterStyleController:
    name:
      CSharp:
      - id: Global.CharacterStyleController
        name: CharacterStyleController
        nameWithType: CharacterStyleController
        qualifiedName: CharacterStyleController
        isExternal: true
      VB:
      - id: Global.CharacterStyleController
        name: CharacterStyleController
        nameWithType: CharacterStyleController
        qualifiedName: CharacterStyleController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CharacterStyleController'
  Global.LoginResult:
    name:
      CSharp:
      - id: Global.LoginResult
        name: LoginResult
        nameWithType: LoginResult
        qualifiedName: LoginResult
        isExternal: true
      VB:
      - id: Global.LoginResult
        name: LoginResult
        nameWithType: LoginResult
        qualifiedName: LoginResult
        isExternal: true
    isDefinition: true
  Global.PlayerDataManager.InitPlayerData*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.InitPlayerData*
        name: InitPlayerData
        nameWithType: PlayerDataManager.InitPlayerData
        qualifiedName: PlayerDataManager.InitPlayerData
      VB:
      - id: Global.PlayerDataManager.InitPlayerData*
        name: InitPlayerData
        nameWithType: PlayerDataManager.InitPlayerData
        qualifiedName: PlayerDataManager.InitPlayerData
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.InitPlayerData
  Global.GetUserDataResult:
    name:
      CSharp:
      - id: Global.GetUserDataResult
        name: GetUserDataResult
        nameWithType: GetUserDataResult
        qualifiedName: GetUserDataResult
        isExternal: true
      VB:
      - id: Global.GetUserDataResult
        name: GetUserDataResult
        nameWithType: GetUserDataResult
        qualifiedName: GetUserDataResult
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GetUserDataResult'
  Global.PlayerDataManager.GetShinseis*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.GetShinseis*
        name: GetShinseis
        nameWithType: PlayerDataManager.GetShinseis
        qualifiedName: PlayerDataManager.GetShinseis
      VB:
      - id: Global.PlayerDataManager.GetShinseis*
        name: GetShinseis
        nameWithType: PlayerDataManager.GetShinseis
        qualifiedName: PlayerDataManager.GetShinseis
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.GetShinseis
  Global.PlayerDataManager.FillPlayerData*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.FillPlayerData*
        name: FillPlayerData
        nameWithType: PlayerDataManager.FillPlayerData
        qualifiedName: PlayerDataManager.FillPlayerData
      VB:
      - id: Global.PlayerDataManager.FillPlayerData*
        name: FillPlayerData
        nameWithType: PlayerDataManager.FillPlayerData
        qualifiedName: PlayerDataManager.FillPlayerData
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.FillPlayerData
  Global.PlayerDataManager.ButtonChangeShinseis*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.ButtonChangeShinseis*
        name: ButtonChangeShinseis
        nameWithType: PlayerDataManager.ButtonChangeShinseis
        qualifiedName: PlayerDataManager.ButtonChangeShinseis
      VB:
      - id: Global.PlayerDataManager.ButtonChangeShinseis*
        name: ButtonChangeShinseis
        nameWithType: PlayerDataManager.ButtonChangeShinseis
        qualifiedName: PlayerDataManager.ButtonChangeShinseis
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.ButtonChangeShinseis
  Global.PlayerDataManager.FillShinseiData*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.FillShinseiData*
        name: FillShinseiData
        nameWithType: PlayerDataManager.FillShinseiData
        qualifiedName: PlayerDataManager.FillShinseiData
      VB:
      - id: Global.PlayerDataManager.FillShinseiData*
        name: FillShinseiData
        nameWithType: PlayerDataManager.FillShinseiData
        qualifiedName: PlayerDataManager.FillShinseiData
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.FillShinseiData
  Global.PlayerDataManager.UpdateCharacterStyleForAnyReason*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.UpdateCharacterStyleForAnyReason*
        name: UpdateCharacterStyleForAnyReason
        nameWithType: PlayerDataManager.UpdateCharacterStyleForAnyReason
        qualifiedName: PlayerDataManager.UpdateCharacterStyleForAnyReason
      VB:
      - id: Global.PlayerDataManager.UpdateCharacterStyleForAnyReason*
        name: UpdateCharacterStyleForAnyReason
        nameWithType: PlayerDataManager.UpdateCharacterStyleForAnyReason
        qualifiedName: PlayerDataManager.UpdateCharacterStyleForAnyReason
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.UpdateCharacterStyleForAnyReason
  Global.PlayerDataManager.CharacterStyleFill*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.CharacterStyleFill*
        name: CharacterStyleFill
        nameWithType: PlayerDataManager.CharacterStyleFill
        qualifiedName: PlayerDataManager.CharacterStyleFill
      VB:
      - id: Global.PlayerDataManager.CharacterStyleFill*
        name: CharacterStyleFill
        nameWithType: PlayerDataManager.CharacterStyleFill
        qualifiedName: PlayerDataManager.CharacterStyleFill
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.CharacterStyleFill
  Global.PlayerDataManager.CardManagerFill*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.CardManagerFill*
        name: CardManagerFill
        nameWithType: PlayerDataManager.CardManagerFill
        qualifiedName: PlayerDataManager.CardManagerFill
      VB:
      - id: Global.PlayerDataManager.CardManagerFill*
        name: CardManagerFill
        nameWithType: PlayerDataManager.CardManagerFill
        qualifiedName: PlayerDataManager.CardManagerFill
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.CardManagerFill
  Global.PlayerDataManager.PlayerShinseisFill*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.PlayerShinseisFill*
        name: PlayerShinseisFill
        nameWithType: PlayerDataManager.PlayerShinseisFill
        qualifiedName: PlayerDataManager.PlayerShinseisFill
      VB:
      - id: Global.PlayerDataManager.PlayerShinseisFill*
        name: PlayerShinseisFill
        nameWithType: PlayerDataManager.PlayerShinseisFill
        qualifiedName: PlayerDataManager.PlayerShinseisFill
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.PlayerShinseisFill
  Global.PlayerDataManager.SetLocalPlayerId*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.SetLocalPlayerId*
        name: SetLocalPlayerId
        nameWithType: PlayerDataManager.SetLocalPlayerId
        qualifiedName: PlayerDataManager.SetLocalPlayerId
      VB:
      - id: Global.PlayerDataManager.SetLocalPlayerId*
        name: SetLocalPlayerId
        nameWithType: PlayerDataManager.SetLocalPlayerId
        qualifiedName: PlayerDataManager.SetLocalPlayerId
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.SetLocalPlayerId
  Global.PlayerDataManager.UpdatePlayerData*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.UpdatePlayerData*
        name: UpdatePlayerData
        nameWithType: PlayerDataManager.UpdatePlayerData
        qualifiedName: PlayerDataManager.UpdatePlayerData
      VB:
      - id: Global.PlayerDataManager.UpdatePlayerData*
        name: UpdatePlayerData
        nameWithType: PlayerDataManager.UpdatePlayerData
        qualifiedName: PlayerDataManager.UpdatePlayerData
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.UpdatePlayerData
  Global.UpdateUserTitleDisplayNameResult:
    name:
      CSharp:
      - id: Global.UpdateUserTitleDisplayNameResult
        name: UpdateUserTitleDisplayNameResult
        nameWithType: UpdateUserTitleDisplayNameResult
        qualifiedName: UpdateUserTitleDisplayNameResult
        isExternal: true
      VB:
      - id: Global.UpdateUserTitleDisplayNameResult
        name: UpdateUserTitleDisplayNameResult
        nameWithType: UpdateUserTitleDisplayNameResult
        qualifiedName: UpdateUserTitleDisplayNameResult
        isExternal: true
    isDefinition: true
    commentId: '!:Global.UpdateUserTitleDisplayNameResult'
  Global.PlayerDataManager.UpdatePlayerName*:
    name:
      CSharp:
      - id: Global.PlayerDataManager.UpdatePlayerName*
        name: UpdatePlayerName
        nameWithType: PlayerDataManager.UpdatePlayerName
        qualifiedName: PlayerDataManager.UpdatePlayerName
      VB:
      - id: Global.PlayerDataManager.UpdatePlayerName*
        name: UpdatePlayerName
        nameWithType: PlayerDataManager.UpdatePlayerName
        qualifiedName: PlayerDataManager.UpdatePlayerName
    isDefinition: true
    commentId: Overload:Global.PlayerDataManager.UpdatePlayerName
  Global.PlayfabManager:
    name:
      CSharp:
      - id: Global.PlayfabManager
        name: PlayfabManager
        nameWithType: PlayfabManager
        qualifiedName: PlayfabManager
      VB:
      - id: Global.PlayfabManager
        name: PlayfabManager
        nameWithType: PlayfabManager
        qualifiedName: PlayfabManager
    isDefinition: true
    commentId: T:Global.PlayfabManager
  Global.UnityEvent`1:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.UnityEvent{LoginResult}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.LoginResult
        name: LoginResult
        nameWithType: LoginResult
        qualifiedName: LoginResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.LoginResult
        name: LoginResult
        nameWithType: LoginResult
        qualifiedName: LoginResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{LoginResult}'
  Global.UnityEvent{RegisterPlayFabUserResult}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.RegisterPlayFabUserResult
        name: RegisterPlayFabUserResult
        nameWithType: RegisterPlayFabUserResult
        qualifiedName: RegisterPlayFabUserResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.RegisterPlayFabUserResult
        name: RegisterPlayFabUserResult
        nameWithType: RegisterPlayFabUserResult
        qualifiedName: RegisterPlayFabUserResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{RegisterPlayFabUserResult}'
  Global.UnityEvent:
    name:
      CSharp:
      - id: Global.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      VB:
      - id: Global.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
    isDefinition: true
  Global.UnityEvent{UpdateUserTitleDisplayNameResult}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.UpdateUserTitleDisplayNameResult
        name: UpdateUserTitleDisplayNameResult
        nameWithType: UpdateUserTitleDisplayNameResult
        qualifiedName: UpdateUserTitleDisplayNameResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.UpdateUserTitleDisplayNameResult
        name: UpdateUserTitleDisplayNameResult
        nameWithType: UpdateUserTitleDisplayNameResult
        qualifiedName: UpdateUserTitleDisplayNameResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{UpdateUserTitleDisplayNameResult}'
  Global.UnityEvent{MultiplayerModels.CreateMatchmakingTicketResult}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MultiplayerModels.CreateMatchmakingTicketResult
        name: MultiplayerModels.CreateMatchmakingTicketResult
        nameWithType: MultiplayerModels.CreateMatchmakingTicketResult
        qualifiedName: MultiplayerModels.CreateMatchmakingTicketResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MultiplayerModels.CreateMatchmakingTicketResult
        name: MultiplayerModels.CreateMatchmakingTicketResult
        nameWithType: MultiplayerModels.CreateMatchmakingTicketResult
        qualifiedName: MultiplayerModels.CreateMatchmakingTicketResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{MultiplayerModels.CreateMatchmakingTicketResult}'
  Global.UnityEvent{MultiplayerModels.GetMatchmakingTicketResult}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MultiplayerModels.GetMatchmakingTicketResult
        name: MultiplayerModels.GetMatchmakingTicketResult
        nameWithType: MultiplayerModels.GetMatchmakingTicketResult
        qualifiedName: MultiplayerModels.GetMatchmakingTicketResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MultiplayerModels.GetMatchmakingTicketResult
        name: MultiplayerModels.GetMatchmakingTicketResult
        nameWithType: MultiplayerModels.GetMatchmakingTicketResult
        qualifiedName: MultiplayerModels.GetMatchmakingTicketResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{MultiplayerModels.GetMatchmakingTicketResult}'
  Global.UnityEvent{MultiplayerModels.GetMatchResult}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MultiplayerModels.GetMatchResult
        name: MultiplayerModels.GetMatchResult
        nameWithType: MultiplayerModels.GetMatchResult
        qualifiedName: MultiplayerModels.GetMatchResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MultiplayerModels.GetMatchResult
        name: MultiplayerModels.GetMatchResult
        nameWithType: MultiplayerModels.GetMatchResult
        qualifiedName: MultiplayerModels.GetMatchResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{MultiplayerModels.GetMatchResult}'
  Global.UnityEvent{PlayFab.ClientModels.GetUserInventoryResult}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PlayFab.ClientModels.GetUserInventoryResult
        name: PlayFab.ClientModels.GetUserInventoryResult
        nameWithType: PlayFab.ClientModels.GetUserInventoryResult
        qualifiedName: PlayFab.ClientModels.GetUserInventoryResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PlayFab.ClientModels.GetUserInventoryResult
        name: PlayFab.ClientModels.GetUserInventoryResult
        nameWithType: PlayFab.ClientModels.GetUserInventoryResult
        qualifiedName: PlayFab.ClientModels.GetUserInventoryResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{PlayFab.ClientModels.GetUserInventoryResult}'
  Global.UnityEvent{PlayFab.ClientModels.GetCatalogItemsResult}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PlayFab.ClientModels.GetCatalogItemsResult
        name: PlayFab.ClientModels.GetCatalogItemsResult
        nameWithType: PlayFab.ClientModels.GetCatalogItemsResult
        qualifiedName: PlayFab.ClientModels.GetCatalogItemsResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PlayFab.ClientModels.GetCatalogItemsResult
        name: PlayFab.ClientModels.GetCatalogItemsResult
        nameWithType: PlayFab.ClientModels.GetCatalogItemsResult
        qualifiedName: PlayFab.ClientModels.GetCatalogItemsResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{PlayFab.ClientModels.GetCatalogItemsResult}'
  Global.UnityEvent{PurchaseItemResult}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PurchaseItemResult
        name: PurchaseItemResult
        nameWithType: PurchaseItemResult
        qualifiedName: PurchaseItemResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PurchaseItemResult
        name: PurchaseItemResult
        nameWithType: PurchaseItemResult
        qualifiedName: PurchaseItemResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{PurchaseItemResult}'
  Global.UnityEvent{PlayFabError}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PlayFabError
        name: PlayFabError
        nameWithType: PlayFabError
        qualifiedName: PlayFabError
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PlayFabError
        name: PlayFabError
        nameWithType: PlayFabError
        qualifiedName: PlayFabError
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{PlayFabError}'
  Global.Action{PlayFabError}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PlayFabError
        name: PlayFabError
        nameWithType: PlayFabError
        qualifiedName: PlayFabError
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PlayFabError
        name: PlayFabError
        nameWithType: PlayFabError
        qualifiedName: PlayFabError
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{PlayFabError}'
  Global.PlayfabManager.SignUp*:
    name:
      CSharp:
      - id: Global.PlayfabManager.SignUp*
        name: SignUp
        nameWithType: PlayfabManager.SignUp
        qualifiedName: PlayfabManager.SignUp
      VB:
      - id: Global.PlayfabManager.SignUp*
        name: SignUp
        nameWithType: PlayfabManager.SignUp
        qualifiedName: PlayfabManager.SignUp
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.SignUp
  Global.PlayfabManager.Login*:
    name:
      CSharp:
      - id: Global.PlayfabManager.Login*
        name: Login
        nameWithType: PlayfabManager.Login
        qualifiedName: PlayfabManager.Login
      VB:
      - id: Global.PlayfabManager.Login*
        name: Login
        nameWithType: PlayfabManager.Login
        qualifiedName: PlayfabManager.Login
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.Login
  Global.PlayfabManager.RequestPasswordRecovery*:
    name:
      CSharp:
      - id: Global.PlayfabManager.RequestPasswordRecovery*
        name: RequestPasswordRecovery
        nameWithType: PlayfabManager.RequestPasswordRecovery
        qualifiedName: PlayfabManager.RequestPasswordRecovery
      VB:
      - id: Global.PlayfabManager.RequestPasswordRecovery*
        name: RequestPasswordRecovery
        nameWithType: PlayfabManager.RequestPasswordRecovery
        qualifiedName: PlayfabManager.RequestPasswordRecovery
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.RequestPasswordRecovery
  Global.PlayfabManager.UpdateDisplayName*:
    name:
      CSharp:
      - id: Global.PlayfabManager.UpdateDisplayName*
        name: UpdateDisplayName
        nameWithType: PlayfabManager.UpdateDisplayName
        qualifiedName: PlayfabManager.UpdateDisplayName
      VB:
      - id: Global.PlayfabManager.UpdateDisplayName*
        name: UpdateDisplayName
        nameWithType: PlayfabManager.UpdateDisplayName
        qualifiedName: PlayfabManager.UpdateDisplayName
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.UpdateDisplayName
  Global.PlayfabManager.UpdateStatistic*:
    name:
      CSharp:
      - id: Global.PlayfabManager.UpdateStatistic*
        name: UpdateStatistic
        nameWithType: PlayfabManager.UpdateStatistic
        qualifiedName: PlayfabManager.UpdateStatistic
      VB:
      - id: Global.PlayfabManager.UpdateStatistic*
        name: UpdateStatistic
        nameWithType: PlayfabManager.UpdateStatistic
        qualifiedName: PlayfabManager.UpdateStatistic
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.UpdateStatistic
  Global.Action{System.Collections.Generic.List{StatisticValue}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.StatisticValue
        name: StatisticValue
        nameWithType: StatisticValue
        qualifiedName: StatisticValue
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.StatisticValue
        name: StatisticValue
        nameWithType: StatisticValue
        qualifiedName: StatisticValue
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.Collections.Generic.List{StatisticValue}}'
  Global.PlayfabManager.GetStatistics*:
    name:
      CSharp:
      - id: Global.PlayfabManager.GetStatistics*
        name: GetStatistics
        nameWithType: PlayfabManager.GetStatistics
        qualifiedName: PlayfabManager.GetStatistics
      VB:
      - id: Global.PlayfabManager.GetStatistics*
        name: GetStatistics
        nameWithType: PlayfabManager.GetStatistics
        qualifiedName: PlayfabManager.GetStatistics
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.GetStatistics
  Global.Action{UpdateUserDataResult}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.UpdateUserDataResult
        name: UpdateUserDataResult
        nameWithType: UpdateUserDataResult
        qualifiedName: UpdateUserDataResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.UpdateUserDataResult
        name: UpdateUserDataResult
        nameWithType: UpdateUserDataResult
        qualifiedName: UpdateUserDataResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{UpdateUserDataResult}'
  Global.PlayFab.ClientModels.UserDataPermission:
    name:
      CSharp:
      - id: Global.PlayFab.ClientModels.UserDataPermission
        name: PlayFab.ClientModels.UserDataPermission
        nameWithType: PlayFab.ClientModels.UserDataPermission
        qualifiedName: PlayFab.ClientModels.UserDataPermission
        isExternal: true
      VB:
      - id: Global.PlayFab.ClientModels.UserDataPermission
        name: PlayFab.ClientModels.UserDataPermission
        nameWithType: PlayFab.ClientModels.UserDataPermission
        qualifiedName: PlayFab.ClientModels.UserDataPermission
        isExternal: true
    isDefinition: true
  Global.PlayfabManager.RemoveUserData*:
    name:
      CSharp:
      - id: Global.PlayfabManager.RemoveUserData*
        name: RemoveUserData
        nameWithType: PlayfabManager.RemoveUserData
        qualifiedName: PlayfabManager.RemoveUserData
      VB:
      - id: Global.PlayfabManager.RemoveUserData*
        name: RemoveUserData
        nameWithType: PlayfabManager.RemoveUserData
        qualifiedName: PlayfabManager.RemoveUserData
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.RemoveUserData
  Global.PlayfabManager.SetUserData*:
    name:
      CSharp:
      - id: Global.PlayfabManager.SetUserData*
        name: SetUserData
        nameWithType: PlayfabManager.SetUserData
        qualifiedName: PlayfabManager.SetUserData
      VB:
      - id: Global.PlayfabManager.SetUserData*
        name: SetUserData
        nameWithType: PlayfabManager.SetUserData
        qualifiedName: PlayfabManager.SetUserData
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.SetUserData
  Global.Action{PlayFab.ClientModels.GetUserDataResult}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PlayFab.ClientModels.GetUserDataResult
        name: PlayFab.ClientModels.GetUserDataResult
        nameWithType: PlayFab.ClientModels.GetUserDataResult
        qualifiedName: PlayFab.ClientModels.GetUserDataResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PlayFab.ClientModels.GetUserDataResult
        name: PlayFab.ClientModels.GetUserDataResult
        nameWithType: PlayFab.ClientModels.GetUserDataResult
        qualifiedName: PlayFab.ClientModels.GetUserDataResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{PlayFab.ClientModels.GetUserDataResult}'
  Global.PlayfabManager.GetUserData*:
    name:
      CSharp:
      - id: Global.PlayfabManager.GetUserData*
        name: GetUserData
        nameWithType: PlayfabManager.GetUserData
        qualifiedName: PlayfabManager.GetUserData
      VB:
      - id: Global.PlayfabManager.GetUserData*
        name: GetUserData
        nameWithType: PlayfabManager.GetUserData
        qualifiedName: PlayfabManager.GetUserData
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.GetUserData
  Global.PlayfabManager.CreateMatchTicket*:
    name:
      CSharp:
      - id: Global.PlayfabManager.CreateMatchTicket*
        name: CreateMatchTicket
        nameWithType: PlayfabManager.CreateMatchTicket
        qualifiedName: PlayfabManager.CreateMatchTicket
      VB:
      - id: Global.PlayfabManager.CreateMatchTicket*
        name: CreateMatchTicket
        nameWithType: PlayfabManager.CreateMatchTicket
        qualifiedName: PlayfabManager.CreateMatchTicket
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.CreateMatchTicket
  Global.Action{MultiplayerModels.GetMatchmakingTicketResult}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MultiplayerModels.GetMatchmakingTicketResult
        name: MultiplayerModels.GetMatchmakingTicketResult
        nameWithType: MultiplayerModels.GetMatchmakingTicketResult
        qualifiedName: MultiplayerModels.GetMatchmakingTicketResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MultiplayerModels.GetMatchmakingTicketResult
        name: MultiplayerModels.GetMatchmakingTicketResult
        nameWithType: MultiplayerModels.GetMatchmakingTicketResult
        qualifiedName: MultiplayerModels.GetMatchmakingTicketResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{MultiplayerModels.GetMatchmakingTicketResult}'
  Global.PlayfabManager.GetTicketState*:
    name:
      CSharp:
      - id: Global.PlayfabManager.GetTicketState*
        name: GetTicketState
        nameWithType: PlayfabManager.GetTicketState
        qualifiedName: PlayfabManager.GetTicketState
      VB:
      - id: Global.PlayfabManager.GetTicketState*
        name: GetTicketState
        nameWithType: PlayfabManager.GetTicketState
        qualifiedName: PlayfabManager.GetTicketState
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.GetTicketState
  Global.PlayfabManager.GetMatch*:
    name:
      CSharp:
      - id: Global.PlayfabManager.GetMatch*
        name: GetMatch
        nameWithType: PlayfabManager.GetMatch
        qualifiedName: PlayfabManager.GetMatch
      VB:
      - id: Global.PlayfabManager.GetMatch*
        name: GetMatch
        nameWithType: PlayfabManager.GetMatch
        qualifiedName: PlayfabManager.GetMatch
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.GetMatch
  Global.PlayfabManager.CancelMatchmaking*:
    name:
      CSharp:
      - id: Global.PlayfabManager.CancelMatchmaking*
        name: CancelMatchmaking
        nameWithType: PlayfabManager.CancelMatchmaking
        qualifiedName: PlayfabManager.CancelMatchmaking
      VB:
      - id: Global.PlayfabManager.CancelMatchmaking*
        name: CancelMatchmaking
        nameWithType: PlayfabManager.CancelMatchmaking
        qualifiedName: PlayfabManager.CancelMatchmaking
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.CancelMatchmaking
  Global.PlayfabManager.GetPlayerCurrency*:
    name:
      CSharp:
      - id: Global.PlayfabManager.GetPlayerCurrency*
        name: GetPlayerCurrency
        nameWithType: PlayfabManager.GetPlayerCurrency
        qualifiedName: PlayfabManager.GetPlayerCurrency
      VB:
      - id: Global.PlayfabManager.GetPlayerCurrency*
        name: GetPlayerCurrency
        nameWithType: PlayfabManager.GetPlayerCurrency
        qualifiedName: PlayfabManager.GetPlayerCurrency
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.GetPlayerCurrency
  Global.PlayfabManager.GetStoreCards*:
    name:
      CSharp:
      - id: Global.PlayfabManager.GetStoreCards*
        name: GetStoreCards
        nameWithType: PlayfabManager.GetStoreCards
        qualifiedName: PlayfabManager.GetStoreCards
      VB:
      - id: Global.PlayfabManager.GetStoreCards*
        name: GetStoreCards
        nameWithType: PlayfabManager.GetStoreCards
        qualifiedName: PlayfabManager.GetStoreCards
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.GetStoreCards
  System.UInt32:
    name:
      CSharp:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      VB:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt32
  Global.PlayfabManager.PurchaseCard*:
    name:
      CSharp:
      - id: Global.PlayfabManager.PurchaseCard*
        name: PurchaseCard
        nameWithType: PlayfabManager.PurchaseCard
        qualifiedName: PlayfabManager.PurchaseCard
      VB:
      - id: Global.PlayfabManager.PurchaseCard*
        name: PurchaseCard
        nameWithType: PlayfabManager.PurchaseCard
        qualifiedName: PlayfabManager.PurchaseCard
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.PurchaseCard
  Global.PlayfabManager.AddPlayerCurrency*:
    name:
      CSharp:
      - id: Global.PlayfabManager.AddPlayerCurrency*
        name: AddPlayerCurrency
        nameWithType: PlayfabManager.AddPlayerCurrency
        qualifiedName: PlayfabManager.AddPlayerCurrency
      VB:
      - id: Global.PlayfabManager.AddPlayerCurrency*
        name: AddPlayerCurrency
        nameWithType: PlayfabManager.AddPlayerCurrency
        qualifiedName: PlayfabManager.AddPlayerCurrency
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.AddPlayerCurrency
  Global.PlayfabManager.SubtractPlayerCurrency*:
    name:
      CSharp:
      - id: Global.PlayfabManager.SubtractPlayerCurrency*
        name: SubtractPlayerCurrency
        nameWithType: PlayfabManager.SubtractPlayerCurrency
        qualifiedName: PlayfabManager.SubtractPlayerCurrency
      VB:
      - id: Global.PlayfabManager.SubtractPlayerCurrency*
        name: SubtractPlayerCurrency
        nameWithType: PlayfabManager.SubtractPlayerCurrency
        qualifiedName: PlayfabManager.SubtractPlayerCurrency
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.SubtractPlayerCurrency
  Global.PlayfabManager.UpdatePlayerStatistics*:
    name:
      CSharp:
      - id: Global.PlayfabManager.UpdatePlayerStatistics*
        name: UpdatePlayerStatistics
        nameWithType: PlayfabManager.UpdatePlayerStatistics
        qualifiedName: PlayfabManager.UpdatePlayerStatistics
      VB:
      - id: Global.PlayfabManager.UpdatePlayerStatistics*
        name: UpdatePlayerStatistics
        nameWithType: PlayfabManager.UpdatePlayerStatistics
        qualifiedName: PlayfabManager.UpdatePlayerStatistics
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.UpdatePlayerStatistics
  Global.PlayfabManager.GetLeaderboardAroundPlayer*:
    name:
      CSharp:
      - id: Global.PlayfabManager.GetLeaderboardAroundPlayer*
        name: GetLeaderboardAroundPlayer
        nameWithType: PlayfabManager.GetLeaderboardAroundPlayer
        qualifiedName: PlayfabManager.GetLeaderboardAroundPlayer
      VB:
      - id: Global.PlayfabManager.GetLeaderboardAroundPlayer*
        name: GetLeaderboardAroundPlayer
        nameWithType: PlayfabManager.GetLeaderboardAroundPlayer
        qualifiedName: PlayfabManager.GetLeaderboardAroundPlayer
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.GetLeaderboardAroundPlayer
  Global.PlayfabManager.GetLeaderboardEntries*:
    name:
      CSharp:
      - id: Global.PlayfabManager.GetLeaderboardEntries*
        name: GetLeaderboardEntries
        nameWithType: PlayfabManager.GetLeaderboardEntries
        qualifiedName: PlayfabManager.GetLeaderboardEntries
      VB:
      - id: Global.PlayfabManager.GetLeaderboardEntries*
        name: GetLeaderboardEntries
        nameWithType: PlayfabManager.GetLeaderboardEntries
        qualifiedName: PlayfabManager.GetLeaderboardEntries
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.GetLeaderboardEntries
  Global.Action{GetLeaderboardResult}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GetLeaderboardResult
        name: GetLeaderboardResult
        nameWithType: GetLeaderboardResult
        qualifiedName: GetLeaderboardResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GetLeaderboardResult
        name: GetLeaderboardResult
        nameWithType: GetLeaderboardResult
        qualifiedName: GetLeaderboardResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{GetLeaderboardResult}'
  Global.Action{ExecuteFunctionResult}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{ExecuteFunctionResult}'
  Global.PlayfabManager.BattleServerCreateMatch*:
    name:
      CSharp:
      - id: Global.PlayfabManager.BattleServerCreateMatch*
        name: BattleServerCreateMatch
        nameWithType: PlayfabManager.BattleServerCreateMatch
        qualifiedName: PlayfabManager.BattleServerCreateMatch
      VB:
      - id: Global.PlayfabManager.BattleServerCreateMatch*
        name: BattleServerCreateMatch
        nameWithType: PlayfabManager.BattleServerCreateMatch
        qualifiedName: PlayfabManager.BattleServerCreateMatch
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.BattleServerCreateMatch
  Global.PlayfabManager.BattleServerCheckMatchConfirm*:
    name:
      CSharp:
      - id: Global.PlayfabManager.BattleServerCheckMatchConfirm*
        name: BattleServerCheckMatchConfirm
        nameWithType: PlayfabManager.BattleServerCheckMatchConfirm
        qualifiedName: PlayfabManager.BattleServerCheckMatchConfirm
      VB:
      - id: Global.PlayfabManager.BattleServerCheckMatchConfirm*
        name: BattleServerCheckMatchConfirm
        nameWithType: PlayfabManager.BattleServerCheckMatchConfirm
        qualifiedName: PlayfabManager.BattleServerCheckMatchConfirm
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.BattleServerCheckMatchConfirm
  Global.CombatPlayer:
    name:
      CSharp:
      - id: Global.CombatPlayer
        name: CombatPlayer
        nameWithType: CombatPlayer
        qualifiedName: CombatPlayer
        isExternal: true
      VB:
      - id: Global.CombatPlayer
        name: CombatPlayer
        nameWithType: CombatPlayer
        qualifiedName: CombatPlayer
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CombatPlayer'
  Global.PlayfabManager.BattleServerSelectShinseis*:
    name:
      CSharp:
      - id: Global.PlayfabManager.BattleServerSelectShinseis*
        name: BattleServerSelectShinseis
        nameWithType: PlayfabManager.BattleServerSelectShinseis
        qualifiedName: PlayfabManager.BattleServerSelectShinseis
      VB:
      - id: Global.PlayfabManager.BattleServerSelectShinseis*
        name: BattleServerSelectShinseis
        nameWithType: PlayfabManager.BattleServerSelectShinseis
        qualifiedName: PlayfabManager.BattleServerSelectShinseis
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.BattleServerSelectShinseis
  Global.PlayfabManager.BattleServerCheckShinseisChoosed*:
    name:
      CSharp:
      - id: Global.PlayfabManager.BattleServerCheckShinseisChoosed*
        name: BattleServerCheckShinseisChoosed
        nameWithType: PlayfabManager.BattleServerCheckShinseisChoosed
        qualifiedName: PlayfabManager.BattleServerCheckShinseisChoosed
      VB:
      - id: Global.PlayfabManager.BattleServerCheckShinseisChoosed*
        name: BattleServerCheckShinseisChoosed
        nameWithType: PlayfabManager.BattleServerCheckShinseisChoosed
        qualifiedName: PlayfabManager.BattleServerCheckShinseisChoosed
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.BattleServerCheckShinseisChoosed
  Global.PlayfabManager.BattleServerSendTurn*:
    name:
      CSharp:
      - id: Global.PlayfabManager.BattleServerSendTurn*
        name: BattleServerSendTurn
        nameWithType: PlayfabManager.BattleServerSendTurn
        qualifiedName: PlayfabManager.BattleServerSendTurn
      VB:
      - id: Global.PlayfabManager.BattleServerSendTurn*
        name: BattleServerSendTurn
        nameWithType: PlayfabManager.BattleServerSendTurn
        qualifiedName: PlayfabManager.BattleServerSendTurn
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.BattleServerSendTurn
  Global.PlayfabManager.BattleServerGetMatchState*:
    name:
      CSharp:
      - id: Global.PlayfabManager.BattleServerGetMatchState*
        name: BattleServerGetMatchState
        nameWithType: PlayfabManager.BattleServerGetMatchState
        qualifiedName: PlayfabManager.BattleServerGetMatchState
      VB:
      - id: Global.PlayfabManager.BattleServerGetMatchState*
        name: BattleServerGetMatchState
        nameWithType: PlayfabManager.BattleServerGetMatchState
        qualifiedName: PlayfabManager.BattleServerGetMatchState
    isDefinition: true
    commentId: Overload:Global.PlayfabManager.BattleServerGetMatchState
  Global.PutBackgroundMusic:
    name:
      CSharp:
      - id: Global.PutBackgroundMusic
        name: PutBackgroundMusic
        nameWithType: PutBackgroundMusic
        qualifiedName: PutBackgroundMusic
      VB:
      - id: Global.PutBackgroundMusic
        name: PutBackgroundMusic
        nameWithType: PutBackgroundMusic
        qualifiedName: PutBackgroundMusic
    isDefinition: true
    commentId: T:Global.PutBackgroundMusic
  Global.RareThing.PlaySound*:
    name:
      CSharp:
      - id: Global.RareThing.PlaySound*
        name: PlaySound
        nameWithType: RareThing.PlaySound
        qualifiedName: RareThing.PlaySound
      VB:
      - id: Global.RareThing.PlaySound*
        name: PlaySound
        nameWithType: RareThing.PlaySound
        qualifiedName: RareThing.PlaySound
    isDefinition: true
    commentId: Overload:Global.RareThing.PlaySound
  Global.RareThing:
    name:
      CSharp:
      - id: Global.RareThing
        name: RareThing
        nameWithType: RareThing
        qualifiedName: RareThing
      VB:
      - id: Global.RareThing
        name: RareThing
        nameWithType: RareThing
        qualifiedName: RareThing
    isDefinition: true
    commentId: T:Global.RareThing
  Global.ScrollArrows:
    name:
      CSharp:
      - id: Global.ScrollArrows
        name: ScrollArrows
        nameWithType: ScrollArrows
        qualifiedName: ScrollArrows
      VB:
      - id: Global.ScrollArrows
        name: ScrollArrows
        nameWithType: ScrollArrows
        qualifiedName: ScrollArrows
    isDefinition: true
    commentId: T:Global.ScrollArrows
  Global.SerializableVector3.#ctor*:
    name:
      CSharp:
      - id: Global.SerializableVector3.#ctor*
        name: SerializableVector3
        nameWithType: SerializableVector3.SerializableVector3
        qualifiedName: SerializableVector3.SerializableVector3
      VB:
      - id: Global.SerializableVector3.#ctor*
        name: SerializableVector3
        nameWithType: SerializableVector3.SerializableVector3
        qualifiedName: SerializableVector3.SerializableVector3
    isDefinition: true
    commentId: Overload:Global.SerializableVector3.#ctor
  Global.SerializableVector3:
    name:
      CSharp:
      - id: Global.SerializableVector3
        name: SerializableVector3
        nameWithType: SerializableVector3
        qualifiedName: SerializableVector3
      VB:
      - id: Global.SerializableVector3
        name: SerializableVector3
        nameWithType: SerializableVector3
        qualifiedName: SerializableVector3
    isDefinition: true
    commentId: T:Global.SerializableVector3
  Global.Vector3Extensions.ToVector3*:
    name:
      CSharp:
      - id: Global.Vector3Extensions.ToVector3*
        name: ToVector3
        nameWithType: Vector3Extensions.ToVector3
        qualifiedName: Vector3Extensions.ToVector3
      VB:
      - id: Global.Vector3Extensions.ToVector3*
        name: ToVector3
        nameWithType: Vector3Extensions.ToVector3
        qualifiedName: Vector3Extensions.ToVector3
    isDefinition: true
    commentId: Overload:Global.Vector3Extensions.ToVector3
  Global.Vector3Extensions.FromVector3*:
    name:
      CSharp:
      - id: Global.Vector3Extensions.FromVector3*
        name: FromVector3
        nameWithType: Vector3Extensions.FromVector3
        qualifiedName: Vector3Extensions.FromVector3
      VB:
      - id: Global.Vector3Extensions.FromVector3*
        name: FromVector3
        nameWithType: Vector3Extensions.FromVector3
        qualifiedName: Vector3Extensions.FromVector3
    isDefinition: true
    commentId: Overload:Global.Vector3Extensions.FromVector3
  Global.Vector3Extensions:
    name:
      CSharp:
      - id: Global.Vector3Extensions
        name: Vector3Extensions
        nameWithType: Vector3Extensions
        qualifiedName: Vector3Extensions
      VB:
      - id: Global.Vector3Extensions
        name: Vector3Extensions
        nameWithType: Vector3Extensions
        qualifiedName: Vector3Extensions
    isDefinition: true
    commentId: T:Global.Vector3Extensions
  Global.IPointerEnterHandler:
    name:
      CSharp:
      - id: Global.IPointerEnterHandler
        name: IPointerEnterHandler
        nameWithType: IPointerEnterHandler
        qualifiedName: IPointerEnterHandler
        isExternal: true
      VB:
      - id: Global.IPointerEnterHandler
        name: IPointerEnterHandler
        nameWithType: IPointerEnterHandler
        qualifiedName: IPointerEnterHandler
        isExternal: true
    isDefinition: true
  Global.IPointerExitHandler:
    name:
      CSharp:
      - id: Global.IPointerExitHandler
        name: IPointerExitHandler
        nameWithType: IPointerExitHandler
        qualifiedName: IPointerExitHandler
        isExternal: true
      VB:
      - id: Global.IPointerExitHandler
        name: IPointerExitHandler
        nameWithType: IPointerExitHandler
        qualifiedName: IPointerExitHandler
        isExternal: true
    isDefinition: true
  Global.ShinseiPreviewPanelManager:
    name:
      CSharp:
      - id: Global.ShinseiPreviewPanelManager
        name: ShinseiPreviewPanelManager
        nameWithType: ShinseiPreviewPanelManager
        qualifiedName: ShinseiPreviewPanelManager
        isExternal: true
      VB:
      - id: Global.ShinseiPreviewPanelManager
        name: ShinseiPreviewPanelManager
        nameWithType: ShinseiPreviewPanelManager
        qualifiedName: ShinseiPreviewPanelManager
        isExternal: true
    isDefinition: true
  Global.ShowPreviewOfSlot.OnPointerEnter*:
    name:
      CSharp:
      - id: Global.ShowPreviewOfSlot.OnPointerEnter*
        name: OnPointerEnter
        nameWithType: ShowPreviewOfSlot.OnPointerEnter
        qualifiedName: ShowPreviewOfSlot.OnPointerEnter
      VB:
      - id: Global.ShowPreviewOfSlot.OnPointerEnter*
        name: OnPointerEnter
        nameWithType: ShowPreviewOfSlot.OnPointerEnter
        qualifiedName: ShowPreviewOfSlot.OnPointerEnter
    isDefinition: true
    commentId: Overload:Global.ShowPreviewOfSlot.OnPointerEnter
  Global.ShowPreviewOfSlot.OnPointerExit*:
    name:
      CSharp:
      - id: Global.ShowPreviewOfSlot.OnPointerExit*
        name: OnPointerExit
        nameWithType: ShowPreviewOfSlot.OnPointerExit
        qualifiedName: ShowPreviewOfSlot.OnPointerExit
      VB:
      - id: Global.ShowPreviewOfSlot.OnPointerExit*
        name: OnPointerExit
        nameWithType: ShowPreviewOfSlot.OnPointerExit
        qualifiedName: ShowPreviewOfSlot.OnPointerExit
    isDefinition: true
    commentId: Overload:Global.ShowPreviewOfSlot.OnPointerExit
  Global.ShowPreviewOfSlot:
    name:
      CSharp:
      - id: Global.ShowPreviewOfSlot
        name: ShowPreviewOfSlot
        nameWithType: ShowPreviewOfSlot
        qualifiedName: ShowPreviewOfSlot
      VB:
      - id: Global.ShowPreviewOfSlot
        name: ShowPreviewOfSlot
        nameWithType: ShowPreviewOfSlot
        qualifiedName: ShowPreviewOfSlot
    isDefinition: true
    commentId: T:Global.ShowPreviewOfSlot
  Global.TimerService.UpdateTimer*:
    name:
      CSharp:
      - id: Global.TimerService.UpdateTimer*
        name: UpdateTimer
        nameWithType: TimerService.UpdateTimer
        qualifiedName: TimerService.UpdateTimer
      VB:
      - id: Global.TimerService.UpdateTimer*
        name: UpdateTimer
        nameWithType: TimerService.UpdateTimer
        qualifiedName: TimerService.UpdateTimer
    isDefinition: true
    commentId: Overload:Global.TimerService.UpdateTimer
  Global.ITimer.UpdateTimer(System.Single,System.String,System.Boolean):
    name:
      CSharp:
      - id: Global.ITimer.UpdateTimer(System.Single,System.String,System.Boolean)
        name: UpdateTimer
        nameWithType: ITimer.UpdateTimer
        qualifiedName: ITimer.UpdateTimer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.ITimer.UpdateTimer(System.Single,System.String,System.Boolean)
        name: UpdateTimer
        nameWithType: ITimer.UpdateTimer
        qualifiedName: ITimer.UpdateTimer
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Global.ITimer
    commentId: M:Global.ITimer.UpdateTimer(System.Single,System.String,System.Boolean)
  Global.TimerService.IsReady*:
    name:
      CSharp:
      - id: Global.TimerService.IsReady*
        name: IsReady
        nameWithType: TimerService.IsReady
        qualifiedName: TimerService.IsReady
      VB:
      - id: Global.TimerService.IsReady*
        name: IsReady
        nameWithType: TimerService.IsReady
        qualifiedName: TimerService.IsReady
    isDefinition: true
    commentId: Overload:Global.TimerService.IsReady
  Global.TimerService:
    name:
      CSharp:
      - id: Global.TimerService
        name: TimerService
        nameWithType: TimerService
        qualifiedName: TimerService
      VB:
      - id: Global.TimerService
        name: TimerService
        nameWithType: TimerService
        qualifiedName: TimerService
    isDefinition: true
    commentId: T:Global.TimerService
  Global.BotPlayfabIdsList:
    name:
      CSharp:
      - id: Global.BotPlayfabIdsList
        name: BotPlayfabIdsList
        nameWithType: BotPlayfabIdsList
        qualifiedName: BotPlayfabIdsList
      VB:
      - id: Global.BotPlayfabIdsList
        name: BotPlayfabIdsList
        nameWithType: BotPlayfabIdsList
        qualifiedName: BotPlayfabIdsList
    isDefinition: true
    commentId: T:Global.BotPlayfabIdsList
  Global.EndpointsForBots:
    name:
      CSharp:
      - id: Global.EndpointsForBots
        name: EndpointsForBots
        nameWithType: EndpointsForBots
        qualifiedName: EndpointsForBots
      VB:
      - id: Global.EndpointsForBots
        name: EndpointsForBots
        nameWithType: EndpointsForBots
        qualifiedName: EndpointsForBots
    isDefinition: true
    commentId: T:Global.EndpointsForBots
  Global.AuthController:
    name:
      CSharp:
      - id: Global.AuthController
        name: AuthController
        nameWithType: AuthController
        qualifiedName: AuthController
        isExternal: true
      VB:
      - id: Global.AuthController
        name: AuthController
        nameWithType: AuthController
        qualifiedName: AuthController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.AuthController'
  Global.SearchAndShow:
    name:
      CSharp:
      - id: Global.SearchAndShow
        name: SearchAndShow
        nameWithType: SearchAndShow
        qualifiedName: SearchAndShow
        isExternal: true
      VB:
      - id: Global.SearchAndShow
        name: SearchAndShow
        nameWithType: SearchAndShow
        qualifiedName: SearchAndShow
        isExternal: true
    isDefinition: true
    commentId: '!:Global.SearchAndShow'
  Global.TournamentCreationController:
    name:
      CSharp:
      - id: Global.TournamentCreationController
        name: TournamentCreationController
        nameWithType: TournamentCreationController
        qualifiedName: TournamentCreationController
        isExternal: true
      VB:
      - id: Global.TournamentCreationController
        name: TournamentCreationController
        nameWithType: TournamentCreationController
        qualifiedName: TournamentCreationController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.TournamentCreationController'
  Global.TestBotController.Start*:
    name:
      CSharp:
      - id: Global.TestBotController.Start*
        name: Start
        nameWithType: TestBotController.Start
        qualifiedName: TestBotController.Start
      VB:
      - id: Global.TestBotController.Start*
        name: Start
        nameWithType: TestBotController.Start
        qualifiedName: TestBotController.Start
    isDefinition: true
    commentId: Overload:Global.TestBotController.Start
  Global.TestBotController.CreateNewTournament*:
    name:
      CSharp:
      - id: Global.TestBotController.CreateNewTournament*
        name: CreateNewTournament
        nameWithType: TestBotController.CreateNewTournament
        qualifiedName: TestBotController.CreateNewTournament
      VB:
      - id: Global.TestBotController.CreateNewTournament*
        name: CreateNewTournament
        nameWithType: TestBotController.CreateNewTournament
        qualifiedName: TestBotController.CreateNewTournament
    isDefinition: true
    commentId: Overload:Global.TestBotController.CreateNewTournament
  Global.TestBotController.StartNewMatch*:
    name:
      CSharp:
      - id: Global.TestBotController.StartNewMatch*
        name: StartNewMatch
        nameWithType: TestBotController.StartNewMatch
        qualifiedName: TestBotController.StartNewMatch
      VB:
      - id: Global.TestBotController.StartNewMatch*
        name: StartNewMatch
        nameWithType: TestBotController.StartNewMatch
        qualifiedName: TestBotController.StartNewMatch
    isDefinition: true
    commentId: Overload:Global.TestBotController.StartNewMatch
  Global.TestBotController:
    name:
      CSharp:
      - id: Global.TestBotController
        name: TestBotController
        nameWithType: TestBotController
        qualifiedName: TestBotController
      VB:
      - id: Global.TestBotController
        name: TestBotController
        nameWithType: TestBotController
        qualifiedName: TestBotController
    isDefinition: true
    commentId: T:Global.TestBotController
  Global.CharacterStyleSlot:
    name:
      CSharp:
      - id: Global.CharacterStyleSlot
        name: CharacterStyleSlot
        nameWithType: CharacterStyleSlot
        qualifiedName: CharacterStyleSlot
      VB:
      - id: Global.CharacterStyleSlot
        name: CharacterStyleSlot
        nameWithType: CharacterStyleSlot
        qualifiedName: CharacterStyleSlot
    isDefinition: true
    commentId: T:Global.CharacterStyleSlot
  Global.CharacterStyleSlot.OnColorSelected:
    name:
      CSharp:
      - id: Global.CharacterStyleSlot.OnColorSelected
        name: OnColorSelected
        nameWithType: CharacterStyleSlot.OnColorSelected
        qualifiedName: CharacterStyleSlot.OnColorSelected
      VB:
      - id: Global.CharacterStyleSlot.OnColorSelected
        name: OnColorSelected
        nameWithType: CharacterStyleSlot.OnColorSelected
        qualifiedName: CharacterStyleSlot.OnColorSelected
    isDefinition: true
    parent: Global.CharacterStyleSlot
    commentId: F:Global.CharacterStyleSlot.OnColorSelected
  Global.CharacterStyleSlot.InitSlot``1(``0):
    name:
      CSharp:
      - id: Global.CharacterStyleSlot.InitSlot``1(``0)
        name: InitSlot<T>
        nameWithType: CharacterStyleSlot.InitSlot<T>
        qualifiedName: CharacterStyleSlot.InitSlot<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.CharacterStyleSlot.InitSlot``1(``0)
        name: InitSlot(Of T)
        nameWithType: CharacterStyleSlot.InitSlot(Of T)
        qualifiedName: CharacterStyleSlot.InitSlot(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Global.CharacterStyleSlot.InitSlot``1(``0)
  Global.CharacterStyleSlot.InitSlot``1({T}):
    name:
      CSharp:
      - id: Global.CharacterStyleSlot.InitSlot``1(``0)
        name: InitSlot<T>
        nameWithType: CharacterStyleSlot.InitSlot<T>
        qualifiedName: CharacterStyleSlot.InitSlot<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Global.CharacterStyleSlot.InitSlot``1(``0)
        name: InitSlot(Of T)
        nameWithType: CharacterStyleSlot.InitSlot(Of T)
        qualifiedName: CharacterStyleSlot.InitSlot(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.CharacterStyleSlot.InitSlot``1(``0)
    parent: Global.CharacterStyleSlot
    commentId: M:Global.CharacterStyleSlot.InitSlot``1(``0)
  Global.CharacterColorSlot.InitSlot*:
    name:
      CSharp:
      - id: Global.CharacterColorSlot.InitSlot*
        name: InitSlot
        nameWithType: CharacterColorSlot.InitSlot
        qualifiedName: CharacterColorSlot.InitSlot
      VB:
      - id: Global.CharacterColorSlot.InitSlot*
        name: InitSlot
        nameWithType: CharacterColorSlot.InitSlot
        qualifiedName: CharacterColorSlot.InitSlot
    isDefinition: true
    commentId: Overload:Global.CharacterColorSlot.InitSlot
  Global.CharacterColorSlot.SelectSlot*:
    name:
      CSharp:
      - id: Global.CharacterColorSlot.SelectSlot*
        name: SelectSlot
        nameWithType: CharacterColorSlot.SelectSlot
        qualifiedName: CharacterColorSlot.SelectSlot
      VB:
      - id: Global.CharacterColorSlot.SelectSlot*
        name: SelectSlot
        nameWithType: CharacterColorSlot.SelectSlot
        qualifiedName: CharacterColorSlot.SelectSlot
    isDefinition: true
    commentId: Overload:Global.CharacterColorSlot.SelectSlot
  Global.CharacterColorSlot.SelectLockedSlot*:
    name:
      CSharp:
      - id: Global.CharacterColorSlot.SelectLockedSlot*
        name: SelectLockedSlot
        nameWithType: CharacterColorSlot.SelectLockedSlot
        qualifiedName: CharacterColorSlot.SelectLockedSlot
      VB:
      - id: Global.CharacterColorSlot.SelectLockedSlot*
        name: SelectLockedSlot
        nameWithType: CharacterColorSlot.SelectLockedSlot
        qualifiedName: CharacterColorSlot.SelectLockedSlot
    isDefinition: true
    commentId: Overload:Global.CharacterColorSlot.SelectLockedSlot
  Global.CharacterColorSlot:
    name:
      CSharp:
      - id: Global.CharacterColorSlot
        name: CharacterColorSlot
        nameWithType: CharacterColorSlot
        qualifiedName: CharacterColorSlot
      VB:
      - id: Global.CharacterColorSlot
        name: CharacterColorSlot
        nameWithType: CharacterColorSlot
        qualifiedName: CharacterColorSlot
    isDefinition: true
    commentId: T:Global.CharacterColorSlot
  Global.Action{CharacterStyleRelation}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CharacterStyleRelation
        name: CharacterStyleRelation
        nameWithType: CharacterStyleRelation
        qualifiedName: CharacterStyleRelation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CharacterStyleRelation
        name: CharacterStyleRelation
        nameWithType: CharacterStyleRelation
        qualifiedName: CharacterStyleRelation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{CharacterStyleRelation}'
  Global.CharacterStyleSlot.InitSlot*:
    name:
      CSharp:
      - id: Global.CharacterStyleSlot.InitSlot*
        name: InitSlot
        nameWithType: CharacterStyleSlot.InitSlot
        qualifiedName: CharacterStyleSlot.InitSlot
      VB:
      - id: Global.CharacterStyleSlot.InitSlot*
        name: InitSlot
        nameWithType: CharacterStyleSlot.InitSlot
        qualifiedName: CharacterStyleSlot.InitSlot
    isDefinition: true
    commentId: Overload:Global.CharacterStyleSlot.InitSlot
  Global.CharacterStyleInfo:
    name:
      CSharp:
      - id: Global.CharacterStyleInfo
        name: CharacterStyleInfo
        nameWithType: CharacterStyleInfo
        qualifiedName: CharacterStyleInfo
      VB:
      - id: Global.CharacterStyleInfo
        name: CharacterStyleInfo
        nameWithType: CharacterStyleInfo
        qualifiedName: CharacterStyleInfo
    isDefinition: true
    commentId: T:Global.CharacterStyleInfo
  Global.CharacterStyleRelation:
    name:
      CSharp:
      - id: Global.CharacterStyleRelation
        name: CharacterStyleRelation
        nameWithType: CharacterStyleRelation
        qualifiedName: CharacterStyleRelation
      VB:
      - id: Global.CharacterStyleRelation
        name: CharacterStyleRelation
        nameWithType: CharacterStyleRelation
        qualifiedName: CharacterStyleRelation
    isDefinition: true
    commentId: T:Global.CharacterStyleRelation
  Global.CharacterStyleRelation.id:
    name:
      CSharp:
      - id: Global.CharacterStyleRelation.id
        name: id
        nameWithType: CharacterStyleRelation.id
        qualifiedName: CharacterStyleRelation.id
      VB:
      - id: Global.CharacterStyleRelation.id
        name: id
        nameWithType: CharacterStyleRelation.id
        qualifiedName: CharacterStyleRelation.id
    isDefinition: true
    parent: Global.CharacterStyleRelation
    commentId: F:Global.CharacterStyleRelation.id
  System.Collections.Generic.List{PartsOfCharacter}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: PartsOfCharacter
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: PartsOfCharacter
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PartsOfCharacter}
  Global.ColorIdRelation:
    name:
      CSharp:
      - id: Global.ColorIdRelation
        name: ColorIdRelation
        nameWithType: ColorIdRelation
        qualifiedName: ColorIdRelation
      VB:
      - id: Global.ColorIdRelation
        name: ColorIdRelation
        nameWithType: ColorIdRelation
        qualifiedName: ColorIdRelation
    isDefinition: true
    commentId: T:Global.ColorIdRelation
  Global.PartsOfCharacter:
    name:
      CSharp:
      - id: Global.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: PartsOfCharacter
        isExternal: true
      VB:
      - id: Global.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: PartsOfCharacter
        isExternal: true
    isDefinition: true
    commentId: '!:Global.PartsOfCharacter'
  Global.PartIdRelation:
    name:
      CSharp:
      - id: Global.PartIdRelation
        name: PartIdRelation
        nameWithType: PartIdRelation
        qualifiedName: PartIdRelation
      VB:
      - id: Global.PartIdRelation
        name: PartIdRelation
        nameWithType: PartIdRelation
        qualifiedName: PartIdRelation
    isDefinition: true
    commentId: T:Global.PartIdRelation
  Global.SacredTailsLog.Init*:
    name:
      CSharp:
      - id: Global.SacredTailsLog.Init*
        name: Init
        nameWithType: SacredTailsLog.Init
        qualifiedName: SacredTailsLog.Init
      VB:
      - id: Global.SacredTailsLog.Init*
        name: Init
        nameWithType: SacredTailsLog.Init
        qualifiedName: SacredTailsLog.Init
    isDefinition: true
    commentId: Overload:Global.SacredTailsLog.Init
  Global.SacredTailsLog.LogMessageForBot*:
    name:
      CSharp:
      - id: Global.SacredTailsLog.LogMessageForBot*
        name: LogMessageForBot
        nameWithType: SacredTailsLog.LogMessageForBot
        qualifiedName: SacredTailsLog.LogMessageForBot
      VB:
      - id: Global.SacredTailsLog.LogMessageForBot*
        name: LogMessageForBot
        nameWithType: SacredTailsLog.LogMessageForBot
        qualifiedName: SacredTailsLog.LogMessageForBot
    isDefinition: true
    commentId: Overload:Global.SacredTailsLog.LogMessageForBot
  Global.SacredTailsLog.LogErrorMessageForBot*:
    name:
      CSharp:
      - id: Global.SacredTailsLog.LogErrorMessageForBot*
        name: LogErrorMessageForBot
        nameWithType: SacredTailsLog.LogErrorMessageForBot
        qualifiedName: SacredTailsLog.LogErrorMessageForBot
      VB:
      - id: Global.SacredTailsLog.LogErrorMessageForBot*
        name: LogErrorMessageForBot
        nameWithType: SacredTailsLog.LogErrorMessageForBot
        qualifiedName: SacredTailsLog.LogErrorMessageForBot
    isDefinition: true
    commentId: Overload:Global.SacredTailsLog.LogErrorMessageForBot
  Global.SacredTailsLog.LogMessage*:
    name:
      CSharp:
      - id: Global.SacredTailsLog.LogMessage*
        name: LogMessage
        nameWithType: SacredTailsLog.LogMessage
        qualifiedName: SacredTailsLog.LogMessage
      VB:
      - id: Global.SacredTailsLog.LogMessage*
        name: LogMessage
        nameWithType: SacredTailsLog.LogMessage
        qualifiedName: SacredTailsLog.LogMessage
    isDefinition: true
    commentId: Overload:Global.SacredTailsLog.LogMessage
  Global.SacredTailsLog.LogErrorMessage*:
    name:
      CSharp:
      - id: Global.SacredTailsLog.LogErrorMessage*
        name: LogErrorMessage
        nameWithType: SacredTailsLog.LogErrorMessage
        qualifiedName: SacredTailsLog.LogErrorMessage
      VB:
      - id: Global.SacredTailsLog.LogErrorMessage*
        name: LogErrorMessage
        nameWithType: SacredTailsLog.LogErrorMessage
        qualifiedName: SacredTailsLog.LogErrorMessage
    isDefinition: true
    commentId: Overload:Global.SacredTailsLog.LogErrorMessage
  Global.SacredTailsLog.OnEnd*:
    name:
      CSharp:
      - id: Global.SacredTailsLog.OnEnd*
        name: OnEnd
        nameWithType: SacredTailsLog.OnEnd
        qualifiedName: SacredTailsLog.OnEnd
      VB:
      - id: Global.SacredTailsLog.OnEnd*
        name: OnEnd
        nameWithType: SacredTailsLog.OnEnd
        qualifiedName: SacredTailsLog.OnEnd
    isDefinition: true
    commentId: Overload:Global.SacredTailsLog.OnEnd
  Global.SacredTailsLog:
    name:
      CSharp:
      - id: Global.SacredTailsLog
        name: SacredTailsLog
        nameWithType: SacredTailsLog
        qualifiedName: SacredTailsLog
      VB:
      - id: Global.SacredTailsLog
        name: SacredTailsLog
        nameWithType: SacredTailsLog
        qualifiedName: SacredTailsLog
    isDefinition: true
    commentId: T:Global.SacredTailsLog
  Global.ChangeIconLeague.ChangeIconUsingIndex*:
    name:
      CSharp:
      - id: Global.ChangeIconLeague.ChangeIconUsingIndex*
        name: ChangeIconUsingIndex
        nameWithType: ChangeIconLeague.ChangeIconUsingIndex
        qualifiedName: ChangeIconLeague.ChangeIconUsingIndex
      VB:
      - id: Global.ChangeIconLeague.ChangeIconUsingIndex*
        name: ChangeIconUsingIndex
        nameWithType: ChangeIconLeague.ChangeIconUsingIndex
        qualifiedName: ChangeIconLeague.ChangeIconUsingIndex
    isDefinition: true
    commentId: Overload:Global.ChangeIconLeague.ChangeIconUsingIndex
  Global.ChangeIconLeague:
    name:
      CSharp:
      - id: Global.ChangeIconLeague
        name: ChangeIconLeague
        nameWithType: ChangeIconLeague
        qualifiedName: ChangeIconLeague
      VB:
      - id: Global.ChangeIconLeague
        name: ChangeIconLeague
        nameWithType: ChangeIconLeague
        qualifiedName: ChangeIconLeague
    isDefinition: true
    commentId: T:Global.ChangeIconLeague
  Global.NewLeaderBoard.ChangeIsRewardWindow*:
    name:
      CSharp:
      - id: Global.NewLeaderBoard.ChangeIsRewardWindow*
        name: ChangeIsRewardWindow
        nameWithType: NewLeaderBoard.ChangeIsRewardWindow
        qualifiedName: NewLeaderBoard.ChangeIsRewardWindow
      VB:
      - id: Global.NewLeaderBoard.ChangeIsRewardWindow*
        name: ChangeIsRewardWindow
        nameWithType: NewLeaderBoard.ChangeIsRewardWindow
        qualifiedName: NewLeaderBoard.ChangeIsRewardWindow
    isDefinition: true
    commentId: Overload:Global.NewLeaderBoard.ChangeIsRewardWindow
  System.Collections.Generic.List{LeaderboardElement.ElementData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.LeaderboardElement.ElementData
        name: LeaderboardElement.ElementData
        nameWithType: LeaderboardElement.ElementData
        qualifiedName: LeaderboardElement.ElementData
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.LeaderboardElement.ElementData
        name: LeaderboardElement.ElementData
        nameWithType: LeaderboardElement.ElementData
        qualifiedName: LeaderboardElement.ElementData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{LeaderboardElement.ElementData}
  Global.NewLeaderBoard.DrawList*:
    name:
      CSharp:
      - id: Global.NewLeaderBoard.DrawList*
        name: DrawList
        nameWithType: NewLeaderBoard.DrawList
        qualifiedName: NewLeaderBoard.DrawList
      VB:
      - id: Global.NewLeaderBoard.DrawList*
        name: DrawList
        nameWithType: NewLeaderBoard.DrawList
        qualifiedName: NewLeaderBoard.DrawList
    isDefinition: true
    commentId: Overload:Global.NewLeaderBoard.DrawList
  Global.NewLeaderBoard.GetListOfDivision*:
    name:
      CSharp:
      - id: Global.NewLeaderBoard.GetListOfDivision*
        name: GetListOfDivision
        nameWithType: NewLeaderBoard.GetListOfDivision
        qualifiedName: NewLeaderBoard.GetListOfDivision
      VB:
      - id: Global.NewLeaderBoard.GetListOfDivision*
        name: GetListOfDivision
        nameWithType: NewLeaderBoard.GetListOfDivision
        qualifiedName: NewLeaderBoard.GetListOfDivision
    isDefinition: true
    commentId: Overload:Global.NewLeaderBoard.GetListOfDivision
  Global.PlayFab.ClientModels.GetLeaderboardResult:
    name:
      CSharp:
      - id: Global.PlayFab.ClientModels.GetLeaderboardResult
        name: PlayFab.ClientModels.GetLeaderboardResult
        nameWithType: PlayFab.ClientModels.GetLeaderboardResult
        qualifiedName: PlayFab.ClientModels.GetLeaderboardResult
        isExternal: true
      VB:
      - id: Global.PlayFab.ClientModels.GetLeaderboardResult
        name: PlayFab.ClientModels.GetLeaderboardResult
        nameWithType: PlayFab.ClientModels.GetLeaderboardResult
        qualifiedName: PlayFab.ClientModels.GetLeaderboardResult
        isExternal: true
    isDefinition: true
  Global.Action{PlayFab.ClientModels.GetLeaderboardResult}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PlayFab.ClientModels.GetLeaderboardResult
        name: PlayFab.ClientModels.GetLeaderboardResult
        nameWithType: PlayFab.ClientModels.GetLeaderboardResult
        qualifiedName: PlayFab.ClientModels.GetLeaderboardResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PlayFab.ClientModels.GetLeaderboardResult
        name: PlayFab.ClientModels.GetLeaderboardResult
        nameWithType: PlayFab.ClientModels.GetLeaderboardResult
        qualifiedName: PlayFab.ClientModels.GetLeaderboardResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{PlayFab.ClientModels.GetLeaderboardResult}'
  Global.NewLeaderBoard.StatisticRecursiveSearch*:
    name:
      CSharp:
      - id: Global.NewLeaderBoard.StatisticRecursiveSearch*
        name: StatisticRecursiveSearch
        nameWithType: NewLeaderBoard.StatisticRecursiveSearch
        qualifiedName: NewLeaderBoard.StatisticRecursiveSearch
      VB:
      - id: Global.NewLeaderBoard.StatisticRecursiveSearch*
        name: StatisticRecursiveSearch
        nameWithType: NewLeaderBoard.StatisticRecursiveSearch
        qualifiedName: NewLeaderBoard.StatisticRecursiveSearch
    isDefinition: true
    commentId: Overload:Global.NewLeaderBoard.StatisticRecursiveSearch
  Global.NewLeaderBoard.ProcessDivisionList*:
    name:
      CSharp:
      - id: Global.NewLeaderBoard.ProcessDivisionList*
        name: ProcessDivisionList
        nameWithType: NewLeaderBoard.ProcessDivisionList
        qualifiedName: NewLeaderBoard.ProcessDivisionList
      VB:
      - id: Global.NewLeaderBoard.ProcessDivisionList*
        name: ProcessDivisionList
        nameWithType: NewLeaderBoard.ProcessDivisionList
        qualifiedName: NewLeaderBoard.ProcessDivisionList
    isDefinition: true
    commentId: Overload:Global.NewLeaderBoard.ProcessDivisionList
  Global.NewLeaderBoard.ProcessVictorieList*:
    name:
      CSharp:
      - id: Global.NewLeaderBoard.ProcessVictorieList*
        name: ProcessVictorieList
        nameWithType: NewLeaderBoard.ProcessVictorieList
        qualifiedName: NewLeaderBoard.ProcessVictorieList
      VB:
      - id: Global.NewLeaderBoard.ProcessVictorieList*
        name: ProcessVictorieList
        nameWithType: NewLeaderBoard.ProcessVictorieList
        qualifiedName: NewLeaderBoard.ProcessVictorieList
    isDefinition: true
    commentId: Overload:Global.NewLeaderBoard.ProcessVictorieList
  Global.NewLeaderBoard:
    name:
      CSharp:
      - id: Global.NewLeaderBoard
        name: NewLeaderBoard
        nameWithType: NewLeaderBoard
        qualifiedName: NewLeaderBoard
      VB:
      - id: Global.NewLeaderBoard
        name: NewLeaderBoard
        nameWithType: NewLeaderBoard
        qualifiedName: NewLeaderBoard
    isDefinition: true
    commentId: T:Global.NewLeaderBoard
  Global.NewLeaderBoard.Division:
    name:
      CSharp:
      - id: Global.NewLeaderBoard.Division
        name: NewLeaderBoard.Division
        nameWithType: NewLeaderBoard.Division
        qualifiedName: NewLeaderBoard.Division
      VB:
      - id: Global.NewLeaderBoard.Division
        name: NewLeaderBoard.Division
        nameWithType: NewLeaderBoard.Division
        qualifiedName: NewLeaderBoard.Division
    isDefinition: true
    commentId: T:Global.NewLeaderBoard.Division
  Global.EntryController:
    name:
      CSharp:
      - id: Global.EntryController
        name: EntryController
        nameWithType: EntryController
        qualifiedName: EntryController
        isExternal: true
      VB:
      - id: Global.EntryController
        name: EntryController
        nameWithType: EntryController
        qualifiedName: EntryController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.EntryController'
  Global.Division:
    name:
      CSharp:
      - id: Global.Division
        name: Division
        nameWithType: Division
        qualifiedName: Division
        isExternal: true
      VB:
      - id: Global.Division
        name: Division
        nameWithType: Division
        qualifiedName: Division
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Division'
  Global.RewardsRankingSystemController.InitRewardSystem*:
    name:
      CSharp:
      - id: Global.RewardsRankingSystemController.InitRewardSystem*
        name: InitRewardSystem
        nameWithType: RewardsRankingSystemController.InitRewardSystem
        qualifiedName: RewardsRankingSystemController.InitRewardSystem
      VB:
      - id: Global.RewardsRankingSystemController.InitRewardSystem*
        name: InitRewardSystem
        nameWithType: RewardsRankingSystemController.InitRewardSystem
        qualifiedName: RewardsRankingSystemController.InitRewardSystem
    isDefinition: true
    commentId: Overload:Global.RewardsRankingSystemController.InitRewardSystem
  Global.RewardsRankingSystemController:
    name:
      CSharp:
      - id: Global.RewardsRankingSystemController
        name: RewardsRankingSystemController
        nameWithType: RewardsRankingSystemController
        qualifiedName: RewardsRankingSystemController
      VB:
      - id: Global.RewardsRankingSystemController
        name: RewardsRankingSystemController
        nameWithType: RewardsRankingSystemController
        qualifiedName: RewardsRankingSystemController
    isDefinition: true
    commentId: T:Global.RewardsRankingSystemController
  System.Collections.Generic.List{RankRewardEntry}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.RankRewardEntry
        name: RankRewardEntry
        nameWithType: RankRewardEntry
        qualifiedName: RankRewardEntry
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.RankRewardEntry
        name: RankRewardEntry
        nameWithType: RankRewardEntry
        qualifiedName: RankRewardEntry
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{RankRewardEntry}
  Global.RankRewardDto:
    name:
      CSharp:
      - id: Global.RankRewardDto
        name: RankRewardDto
        nameWithType: RankRewardDto
        qualifiedName: RankRewardDto
      VB:
      - id: Global.RankRewardDto
        name: RankRewardDto
        nameWithType: RankRewardDto
        qualifiedName: RankRewardDto
    isDefinition: true
    commentId: T:Global.RankRewardDto
  System.Nullable{System.Int32}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Int32}
  System.Collections.Generic.List{RewardEntry}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.RewardEntry
        name: RewardEntry
        nameWithType: RewardEntry
        qualifiedName: RewardEntry
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.RewardEntry
        name: RewardEntry
        nameWithType: RewardEntry
        qualifiedName: RewardEntry
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{RewardEntry}
  Global.RankRewardEntry:
    name:
      CSharp:
      - id: Global.RankRewardEntry
        name: RankRewardEntry
        nameWithType: RankRewardEntry
        qualifiedName: RankRewardEntry
      VB:
      - id: Global.RankRewardEntry
        name: RankRewardEntry
        nameWithType: RankRewardEntry
        qualifiedName: RankRewardEntry
    isDefinition: true
    commentId: T:Global.RankRewardEntry
  Global.RewardEntry:
    name:
      CSharp:
      - id: Global.RewardEntry
        name: RewardEntry
        nameWithType: RewardEntry
        qualifiedName: RewardEntry
      VB:
      - id: Global.RewardEntry
        name: RewardEntry
        nameWithType: RewardEntry
        qualifiedName: RewardEntry
    isDefinition: true
    commentId: T:Global.RewardEntry
  Global.DemoScenesNavigation:
    name:
      CSharp:
      - id: Global.DemoScenesNavigation
        name: DemoScenesNavigation
        nameWithType: DemoScenesNavigation
        qualifiedName: DemoScenesNavigation
      VB:
      - id: Global.DemoScenesNavigation
        name: DemoScenesNavigation
        nameWithType: DemoScenesNavigation
        qualifiedName: DemoScenesNavigation
    isDefinition: true
    commentId: T:Global.DemoScenesNavigation
  Global.DummyMainMenuNavigation:
    name:
      CSharp:
      - id: Global.DummyMainMenuNavigation
        name: DummyMainMenuNavigation
        nameWithType: DummyMainMenuNavigation
        qualifiedName: DummyMainMenuNavigation
      VB:
      - id: Global.DummyMainMenuNavigation
        name: DummyMainMenuNavigation
        nameWithType: DummyMainMenuNavigation
        qualifiedName: DummyMainMenuNavigation
    isDefinition: true
    commentId: T:Global.DummyMainMenuNavigation
  System.Collections.Generic.List{AuthPanelType}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.AuthPanelType
        name: AuthPanelType
        nameWithType: AuthPanelType
        qualifiedName: AuthPanelType
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.AuthPanelType
        name: AuthPanelType
        nameWithType: AuthPanelType
        qualifiedName: AuthPanelType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{AuthPanelType}
  Global.AuthPanel:
    name:
      CSharp:
      - id: Global.AuthPanel
        name: AuthPanel
        nameWithType: AuthPanel
        qualifiedName: AuthPanel
      VB:
      - id: Global.AuthPanel
        name: AuthPanel
        nameWithType: AuthPanel
        qualifiedName: AuthPanel
    isDefinition: true
    commentId: T:Global.AuthPanel
  Global.AuthPanelType:
    name:
      CSharp:
      - id: Global.AuthPanelType
        name: AuthPanelType
        nameWithType: AuthPanelType
        qualifiedName: AuthPanelType
      VB:
      - id: Global.AuthPanelType
        name: AuthPanelType
        nameWithType: AuthPanelType
        qualifiedName: AuthPanelType
    isDefinition: true
    commentId: T:Global.AuthPanelType
  Global.CreateBotsController.Start*:
    name:
      CSharp:
      - id: Global.CreateBotsController.Start*
        name: Start
        nameWithType: CreateBotsController.Start
        qualifiedName: CreateBotsController.Start
      VB:
      - id: Global.CreateBotsController.Start*
        name: Start
        nameWithType: CreateBotsController.Start
        qualifiedName: CreateBotsController.Start
    isDefinition: true
    commentId: Overload:Global.CreateBotsController.Start
  Global.CreateBotsController.SetInitNumber*:
    name:
      CSharp:
      - id: Global.CreateBotsController.SetInitNumber*
        name: SetInitNumber
        nameWithType: CreateBotsController.SetInitNumber
        qualifiedName: CreateBotsController.SetInitNumber
      VB:
      - id: Global.CreateBotsController.SetInitNumber*
        name: SetInitNumber
        nameWithType: CreateBotsController.SetInitNumber
        qualifiedName: CreateBotsController.SetInitNumber
    isDefinition: true
    commentId: Overload:Global.CreateBotsController.SetInitNumber
  Global.CreateBotsController.CreateBots*:
    name:
      CSharp:
      - id: Global.CreateBotsController.CreateBots*
        name: CreateBots
        nameWithType: CreateBotsController.CreateBots
        qualifiedName: CreateBotsController.CreateBots
      VB:
      - id: Global.CreateBotsController.CreateBots*
        name: CreateBots
        nameWithType: CreateBotsController.CreateBots
        qualifiedName: CreateBotsController.CreateBots
    isDefinition: true
    commentId: Overload:Global.CreateBotsController.CreateBots
  Global.CreateBotsController.SignUp*:
    name:
      CSharp:
      - id: Global.CreateBotsController.SignUp*
        name: SignUp
        nameWithType: CreateBotsController.SignUp
        qualifiedName: CreateBotsController.SignUp
      VB:
      - id: Global.CreateBotsController.SignUp*
        name: SignUp
        nameWithType: CreateBotsController.SignUp
        qualifiedName: CreateBotsController.SignUp
    isDefinition: true
    commentId: Overload:Global.CreateBotsController.SignUp
  Global.CreateBotsController:
    name:
      CSharp:
      - id: Global.CreateBotsController
        name: CreateBotsController
        nameWithType: CreateBotsController
        qualifiedName: CreateBotsController
      VB:
      - id: Global.CreateBotsController
        name: CreateBotsController
        nameWithType: CreateBotsController
        qualifiedName: CreateBotsController
    isDefinition: true
    commentId: T:Global.CreateBotsController
  Global.UIColorSwapper:
    name:
      CSharp:
      - id: Global.UIColorSwapper
        name: UIColorSwapper
        nameWithType: UIColorSwapper
        qualifiedName: UIColorSwapper
      VB:
      - id: Global.UIColorSwapper
        name: UIColorSwapper
        nameWithType: UIColorSwapper
        qualifiedName: UIColorSwapper
    isDefinition: true
    commentId: T:Global.UIColorSwapper
  Global.ILobbyChatViewable:
    name:
      CSharp:
      - id: Global.ILobbyChatViewable
        name: ILobbyChatViewable
        nameWithType: ILobbyChatViewable
        qualifiedName: ILobbyChatViewable
        isExternal: true
      VB:
      - id: Global.ILobbyChatViewable
        name: ILobbyChatViewable
        nameWithType: ILobbyChatViewable
        qualifiedName: ILobbyChatViewable
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ILobbyChatViewable'
  Global.LobbyChatView.OnSendMessage*:
    name:
      CSharp:
      - id: Global.LobbyChatView.OnSendMessage*
        name: OnSendMessage
        nameWithType: LobbyChatView.OnSendMessage
        qualifiedName: LobbyChatView.OnSendMessage
      VB:
      - id: Global.LobbyChatView.OnSendMessage*
        name: OnSendMessage
        nameWithType: LobbyChatView.OnSendMessage
        qualifiedName: LobbyChatView.OnSendMessage
    isDefinition: true
    commentId: Overload:Global.LobbyChatView.OnSendMessage
  Global.LobbyChatView.Init*:
    name:
      CSharp:
      - id: Global.LobbyChatView.Init*
        name: Init
        nameWithType: LobbyChatView.Init
        qualifiedName: LobbyChatView.Init
      VB:
      - id: Global.LobbyChatView.Init*
        name: Init
        nameWithType: LobbyChatView.Init
        qualifiedName: LobbyChatView.Init
    isDefinition: true
    commentId: Overload:Global.LobbyChatView.Init
  Global.MessageDto:
    name:
      CSharp:
      - id: Global.MessageDto
        name: MessageDto
        nameWithType: MessageDto
        qualifiedName: MessageDto
        isExternal: true
      VB:
      - id: Global.MessageDto
        name: MessageDto
        nameWithType: MessageDto
        qualifiedName: MessageDto
        isExternal: true
    isDefinition: true
  Global.LobbyChatView.ShowMessage*:
    name:
      CSharp:
      - id: Global.LobbyChatView.ShowMessage*
        name: ShowMessage
        nameWithType: LobbyChatView.ShowMessage
        qualifiedName: LobbyChatView.ShowMessage
      VB:
      - id: Global.LobbyChatView.ShowMessage*
        name: ShowMessage
        nameWithType: LobbyChatView.ShowMessage
        qualifiedName: LobbyChatView.ShowMessage
    isDefinition: true
    commentId: Overload:Global.LobbyChatView.ShowMessage
  Global.LobbyChatView:
    name:
      CSharp:
      - id: Global.LobbyChatView
        name: LobbyChatView
        nameWithType: LobbyChatView
        qualifiedName: LobbyChatView
      VB:
      - id: Global.LobbyChatView
        name: LobbyChatView
        nameWithType: LobbyChatView
        qualifiedName: LobbyChatView
    isDefinition: true
    commentId: T:Global.LobbyChatView
  Global.CameraPointOfInteresEnum:
    name:
      CSharp:
      - id: Global.CameraPointOfInteresEnum
        name: CameraPointOfInteresEnum
        nameWithType: CameraPointOfInteresEnum
        qualifiedName: CameraPointOfInteresEnum
      VB:
      - id: Global.CameraPointOfInteresEnum
        name: CameraPointOfInteresEnum
        nameWithType: CameraPointOfInteresEnum
        qualifiedName: CameraPointOfInteresEnum
    isDefinition: true
    commentId: T:Global.CameraPointOfInteresEnum
  Global.CameraPhasesEnum:
    name:
      CSharp:
      - id: Global.CameraPhasesEnum
        name: CameraPhasesEnum
        nameWithType: CameraPhasesEnum
        qualifiedName: CameraPhasesEnum
      VB:
      - id: Global.CameraPhasesEnum
        name: CameraPhasesEnum
        nameWithType: CameraPhasesEnum
        qualifiedName: CameraPhasesEnum
    isDefinition: true
    commentId: T:Global.CameraPhasesEnum
  Global:
    name:
      CSharp:
      - name: Global
        nameWithType: Global
        qualifiedName: Global
      VB:
      - name: ''
        nameWithType: ''
        qualifiedName: ''
    isDefinition: true
  Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*
        name: SpawnPlayerShinseis
        nameWithType: BattleShinseiSpawner.SpawnPlayerShinseis
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis
      VB:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*
        name: SpawnPlayerShinseis
        nameWithType: BattleShinseiSpawner.SpawnPlayerShinseis
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis
  Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*
        name: SpawnShinseiEndGame
        nameWithType: BattleShinseiSpawner.SpawnShinseiEndGame
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame
      VB:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*
        name: SpawnShinseiEndGame
        nameWithType: BattleShinseiSpawner.SpawnShinseiEndGame
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame
  Timba.SacredTails.Arena.BattleShinseiSpawner:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner
        name: BattleShinseiSpawner
        nameWithType: BattleShinseiSpawner
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner
      VB:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner
        name: BattleShinseiSpawner
        nameWithType: BattleShinseiSpawner
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleShinseiSpawner
  System.Collections.Generic.List{Timba.SacredTails.Arena.CardUI}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Arena.CardUI
        name: CardUI
        nameWithType: CardUI
        qualifiedName: Timba.SacredTails.Arena.CardUI
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Arena.CardUI
        name: CardUI
        nameWithType: CardUI
        qualifiedName: Timba.SacredTails.Arena.CardUI
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.Arena.CardUI}
  Timba.SacredTails.Arena:
    name:
      CSharp:
      - name: Timba.SacredTails.Arena
        nameWithType: Timba.SacredTails.Arena
        qualifiedName: Timba.SacredTails.Arena
      VB:
      - name: Timba.SacredTails.Arena
        nameWithType: Timba.SacredTails.Arena
        qualifiedName: Timba.SacredTails.Arena
    isDefinition: true
    commentId: N:Timba.SacredTails.Arena
  Timba.SacredTails.Arena.ResourceBarValues:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
      VB:
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.ResourceBarValues
  Timba.SacredTails.Arena.BattleUIController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.Init*
        name: Init
        nameWithType: BattleUIController.Init
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.Init
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.Init*
        name: Init
        nameWithType: BattleUIController.Init
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.Init
  Timba.SacredTails.Arena.BattleUIController.AddPing*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.AddPing*
        name: AddPing
        nameWithType: BattleUIController.AddPing
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.AddPing
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.AddPing*
        name: AddPing
        nameWithType: BattleUIController.AddPing
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.AddPing
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.AddPing
  Timba.SacredTails.Arena.BattleUIController.UpdatePing*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdatePing*
        name: UpdatePing
        nameWithType: BattleUIController.UpdatePing
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdatePing
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdatePing*
        name: UpdatePing
        nameWithType: BattleUIController.UpdatePing
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdatePing
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.UpdatePing
  Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*
        name: UpdateShinseiPicture
        nameWithType: BattleUIController.UpdateShinseiPicture
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*
        name: UpdateShinseiPicture
        nameWithType: BattleUIController.UpdateShinseiPicture
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture
  Timba.SacredTails.Arena.BattleUIController.UpdateTimer*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateTimer*
        name: UpdateTimer
        nameWithType: BattleUIController.UpdateTimer
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateTimer
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateTimer*
        name: UpdateTimer
        nameWithType: BattleUIController.UpdateTimer
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateTimer
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.UpdateTimer
  Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*
        name: ChangeHealthColorBar
        nameWithType: BattleUIController.ChangeHealthColorBar
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*
        name: ChangeHealthColorBar
        nameWithType: BattleUIController.ChangeHealthColorBar
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar
  Timba.SacredTails.Arena.BattleUIController.InitializeBars*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.InitializeBars*
        name: InitializeBars
        nameWithType: BattleUIController.InitializeBars
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.InitializeBars
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.InitializeBars*
        name: InitializeBars
        nameWithType: BattleUIController.InitializeBars
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.InitializeBars
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.InitializeBars
  Timba.SacredTails.Arena.BattleUIController.ShowFaster*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowFaster*
        name: ShowFaster
        nameWithType: BattleUIController.ShowFaster
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowFaster
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowFaster*
        name: ShowFaster
        nameWithType: BattleUIController.ShowFaster
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowFaster
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ShowFaster
  Timba.SacredTails.Arena.BattleUIController.EndMatchCheck*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.EndMatchCheck*
        name: EndMatchCheck
        nameWithType: BattleUIController.EndMatchCheck
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.EndMatchCheck
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.EndMatchCheck*
        name: EndMatchCheck
        nameWithType: BattleUIController.EndMatchCheck
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.EndMatchCheck
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.EndMatchCheck
  Global.Func`1:
    name:
      CSharp:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.Func`1'
  Global.Func{System.Collections.Generic.List{System.Int32}}:
    name:
      CSharp:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Func`1
    commentId: '!:Global.Func{System.Collections.Generic.List{System.Int32}}'
  Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*
        name: ChangeHealthbarView
        nameWithType: BattleUIController.ChangeHealthbarView
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*
        name: ChangeHealthbarView
        nameWithType: BattleUIController.ChangeHealthbarView
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
  Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*
        name: ApplyEnergyChange
        nameWithType: BattleUIController.ApplyEnergyChange
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*
        name: ApplyEnergyChange
        nameWithType: BattleUIController.ApplyEnergyChange
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange
  Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*
        name: HideEverythingForWatchMatch
        nameWithType: BattleUIController.HideEverythingForWatchMatch
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*
        name: HideEverythingForWatchMatch
        nameWithType: BattleUIController.HideEverythingForWatchMatch
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch
  Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*
        name: ToggleWaitingPrompt
        nameWithType: BattleUIController.ToggleWaitingPrompt
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*
        name: ToggleWaitingPrompt
        nameWithType: BattleUIController.ToggleWaitingPrompt
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt
  Timba.SacredTails.Arena.BattleUIController.ShowCards*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowCards*
        name: ShowCards
        nameWithType: BattleUIController.ShowCards
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowCards
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowCards*
        name: ShowCards
        nameWithType: BattleUIController.ShowCards
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowCards
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ShowCards
  Timba.SacredTails.Arena.BattleUIController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: Timba.SacredTails.Arena.BattleUIController
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: Timba.SacredTails.Arena.BattleUIController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleUIController
  Timba.SacredTails.Arena.VfxInfo:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.VfxInfo
        name: VfxInfo
        nameWithType: VfxInfo
        qualifiedName: Timba.SacredTails.Arena.VfxInfo
      VB:
      - id: Timba.SacredTails.Arena.VfxInfo
        name: VfxInfo
        nameWithType: VfxInfo
        qualifiedName: Timba.SacredTails.Arena.VfxInfo
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.VfxInfo
  Global.Action`2:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.Action{System.Boolean,System.Collections.Generic.List{System.Int32}}:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`2
    commentId: '!:Global.Action{System.Boolean,System.Collections.Generic.List{System.Int32}}'
  Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init
  Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*
        name: OnShinseiSelectionCompleted
        nameWithType: ArenaShinseiSelectionController.OnShinseiSelectionCompleted
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*
        name: OnShinseiSelectionCompleted
        nameWithType: ArenaShinseiSelectionController.OnShinseiSelectionCompleted
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
  Timba.SacredTails.Arena.ArenaShinseiSelectionController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController
        name: ArenaShinseiSelectionController
        nameWithType: ArenaShinseiSelectionController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController
        name: ArenaShinseiSelectionController
        nameWithType: ArenaShinseiSelectionController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionController
  Timba.SacredTails.Arena.ShinseiSlot:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.ShinseiSlot
  Global.TextMeshProUGUI:
    name:
      CSharp:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      VB:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
    isDefinition: true
  Timba.SacredTails.Arena.ShinseiPreviewPanelManager:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager
        name: ShinseiPreviewPanelManager
        nameWithType: ShinseiPreviewPanelManager
        qualifiedName: Timba.SacredTails.Arena.ShinseiPreviewPanelManager
      VB:
      - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager
        name: ShinseiPreviewPanelManager
        nameWithType: ShinseiPreviewPanelManager
        qualifiedName: Timba.SacredTails.Arena.ShinseiPreviewPanelManager
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.ShinseiPreviewPanelManager
  Timba.SacredTails.Arena.CombatPlayer:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CombatPlayer
        name: CombatPlayer
        nameWithType: CombatPlayer
        qualifiedName: Timba.SacredTails.Arena.CombatPlayer
      VB:
      - id: Timba.SacredTails.Arena.CombatPlayer
        name: CombatPlayer
        nameWithType: CombatPlayer
        qualifiedName: Timba.SacredTails.Arena.CombatPlayer
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.CombatPlayer
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionUserPanelController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionUserPanelController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*
        name: ShowNext
        nameWithType: ArenaShinseiSelectionUserPanelController.ShowNext
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*
        name: ShowNext
        nameWithType: ArenaShinseiSelectionUserPanelController.ShowNext
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*
        name: Show
        nameWithType: ArenaShinseiSelectionUserPanelController.Show
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*
        name: Show
        nameWithType: ArenaShinseiSelectionUserPanelController.Show
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*
        name: SelectShinseiForBattle
        nameWithType: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*
        name: SelectShinseiForBattle
        nameWithType: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*
        name: MakeSlotsUnclickeable
        nameWithType: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*
        name: MakeSlotsUnclickeable
        nameWithType: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*
        name: GetShinseisSelected
        nameWithType: ArenaShinseiSelectionUserPanelController.GetShinseisSelected
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*
        name: GetShinseisSelected
        nameWithType: ArenaShinseiSelectionUserPanelController.GetShinseisSelected
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
        name: ArenaShinseiSelectionUserPanelController
        nameWithType: ArenaShinseiSelectionUserPanelController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
        name: ArenaShinseiSelectionUserPanelController
        nameWithType: ArenaShinseiSelectionUserPanelController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
  Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth*
        name: CalculateHealth
        nameWithType: BattleStatisticsCalculator.CalculateHealth
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth*
        name: CalculateHealth
        nameWithType: BattleStatisticsCalculator.CalculateHealth
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleStatisticsCalculator.CalculateHealth
  Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage*
        name: GetRawDamage
        nameWithType: BattleStatisticsCalculator.GetRawDamage
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage*
        name: GetRawDamage
        nameWithType: BattleStatisticsCalculator.GetRawDamage
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleStatisticsCalculator.GetRawDamage
  Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget*
        name: GetDamageReceiveByTarget
        nameWithType: BattleStatisticsCalculator.GetDamageReceiveByTarget
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget*
        name: GetDamageReceiveByTarget
        nameWithType: BattleStatisticsCalculator.GetDamageReceiveByTarget
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleStatisticsCalculator.GetDamageReceiveByTarget
  Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics*
        name: ApplyEvationCritics
        nameWithType: BattleStatisticsCalculator.ApplyEvationCritics
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics*
        name: ApplyEvationCritics
        nameWithType: BattleStatisticsCalculator.ApplyEvationCritics
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleStatisticsCalculator.ApplyEvationCritics
  Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade*
        name: CheckIfEvade
        nameWithType: BattleStatisticsCalculator.CheckIfEvade
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade*
        name: CheckIfEvade
        nameWithType: BattleStatisticsCalculator.CheckIfEvade
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleStatisticsCalculator.CheckIfEvade
  Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat*
        name: GetBonusStat
        nameWithType: BattleStatisticsCalculator.GetBonusStat
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat*
        name: GetBonusStat
        nameWithType: BattleStatisticsCalculator.GetBonusStat
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleStatisticsCalculator.GetBonusStat
  System.ValueTuple`2:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.ValueTuple`2
  System.ValueTuple{System.String,System.Boolean}:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.ValueTuple`2
    parent: System
    commentId: T:System.ValueTuple{System.String,System.Boolean}
  Timba.SacredTails.Arena.ShinseiStats:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiStats
        name: ShinseiStats
        nameWithType: ShinseiStats
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats
      VB:
      - id: Timba.SacredTails.Arena.ShinseiStats
        name: ShinseiStats
        nameWithType: ShinseiStats
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.ShinseiStats
  Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName*
        name: SetStatByName
        nameWithType: BattleStatisticsCalculator.SetStatByName
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName*
        name: SetStatByName
        nameWithType: BattleStatisticsCalculator.SetStatByName
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleStatisticsCalculator.SetStatByName
  Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName*
        name: GetStatByName
        nameWithType: BattleStatisticsCalculator.GetStatByName
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName*
        name: GetStatByName
        nameWithType: BattleStatisticsCalculator.GetStatByName
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleStatisticsCalculator.GetStatByName
  Timba.SacredTails.Arena.BattleStatisticsCalculator:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator
        name: BattleStatisticsCalculator
        nameWithType: BattleStatisticsCalculator
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculator
        name: BattleStatisticsCalculator
        nameWithType: BattleStatisticsCalculator
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculator
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleStatisticsCalculator
  Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges*
        name: SaveChanges
        nameWithType: BattleStatisticsCalculatorSO.SaveChanges
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges*
        name: SaveChanges
        nameWithType: BattleStatisticsCalculatorSO.SaveChanges
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.SaveChanges
  Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards*
        name: GetJsonActionCards
        nameWithType: BattleStatisticsCalculatorSO.GetJsonActionCards
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards*
        name: GetJsonActionCards
        nameWithType: BattleStatisticsCalculatorSO.GetJsonActionCards
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO.GetJsonActionCards
  Timba.SacredTails.Arena.BattleStatisticsCalculatorSO:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO
        name: BattleStatisticsCalculatorSO
        nameWithType: BattleStatisticsCalculatorSO
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO
      VB:
      - id: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO
        name: BattleStatisticsCalculatorSO
        nameWithType: BattleStatisticsCalculatorSO
        qualifiedName: Timba.SacredTails.Arena.BattleStatisticsCalculatorSO
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleStatisticsCalculatorSO
  Timba.SacredTails.Arena.BattleGameMode:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.BattleGameMode
  Timba.SacredTails.Arena.CardUI.OnTurnChange*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardUI.OnTurnChange*
        name: OnTurnChange
        nameWithType: CardUI.OnTurnChange
        qualifiedName: Timba.SacredTails.Arena.CardUI.OnTurnChange
      VB:
      - id: Timba.SacredTails.Arena.CardUI.OnTurnChange*
        name: OnTurnChange
        nameWithType: CardUI.OnTurnChange
        qualifiedName: Timba.SacredTails.Arena.CardUI.OnTurnChange
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardUI.OnTurnChange
  Timba.SacredTails.Arena.CardUI.SetCardEmpty*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardUI.SetCardEmpty*
        name: SetCardEmpty
        nameWithType: CardUI.SetCardEmpty
        qualifiedName: Timba.SacredTails.Arena.CardUI.SetCardEmpty
      VB:
      - id: Timba.SacredTails.Arena.CardUI.SetCardEmpty*
        name: SetCardEmpty
        nameWithType: CardUI.SetCardEmpty
        qualifiedName: Timba.SacredTails.Arena.CardUI.SetCardEmpty
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardUI.SetCardEmpty
  Timba.SacredTails.Arena.CardUI.DisplayTooltip*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardUI.DisplayTooltip*
        name: DisplayTooltip
        nameWithType: CardUI.DisplayTooltip
        qualifiedName: Timba.SacredTails.Arena.CardUI.DisplayTooltip
      VB:
      - id: Timba.SacredTails.Arena.CardUI.DisplayTooltip*
        name: DisplayTooltip
        nameWithType: CardUI.DisplayTooltip
        qualifiedName: Timba.SacredTails.Arena.CardUI.DisplayTooltip
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardUI.DisplayTooltip
  Timba.SacredTails.Arena.CardUI.SetDataCard*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardUI.SetDataCard*
        name: SetDataCard
        nameWithType: CardUI.SetDataCard
        qualifiedName: Timba.SacredTails.Arena.CardUI.SetDataCard
      VB:
      - id: Timba.SacredTails.Arena.CardUI.SetDataCard*
        name: SetDataCard
        nameWithType: CardUI.SetDataCard
        qualifiedName: Timba.SacredTails.Arena.CardUI.SetDataCard
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardUI.SetDataCard
  Timba.SacredTails.Arena.CardUI:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardUI
        name: CardUI
        nameWithType: CardUI
        qualifiedName: Timba.SacredTails.Arena.CardUI
      VB:
      - id: Timba.SacredTails.Arena.CardUI
        name: CardUI
        nameWithType: CardUI
        qualifiedName: Timba.SacredTails.Arena.CardUI
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.CardUI
  System.Collections.Generic.List{Timba.SacredTails.Arena.ActionCard}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Arena.ActionCard
        name: ActionCard
        nameWithType: ActionCard
        qualifiedName: Timba.SacredTails.Arena.ActionCard
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Arena.ActionCard
        name: ActionCard
        nameWithType: ActionCard
        qualifiedName: Timba.SacredTails.Arena.ActionCard
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.Arena.ActionCard}
  Timba.SacredTails.Arena.Combat:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Timba.SacredTails.Arena.Combat
      VB:
      - id: Timba.SacredTails.Arena.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Timba.SacredTails.Arena.Combat
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.Combat
  System.Collections.Generic.Dictionary{System.Int32,System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.Int32,System.Int32}
  Timba.SacredTails.Arena.CustomAtributes:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CustomAtributes
        name: CustomAtributes
        nameWithType: CustomAtributes
        qualifiedName: Timba.SacredTails.Arena.CustomAtributes
      VB:
      - id: Timba.SacredTails.Arena.CustomAtributes
        name: CustomAtributes
        nameWithType: CustomAtributes
        qualifiedName: Timba.SacredTails.Arena.CustomAtributes
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.CustomAtributes
  Timba.SacredTails.Arena.ShinseiStats.attack*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiStats.attack*
        name: attack
        nameWithType: ShinseiStats.attack
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.attack
      VB:
      - id: Timba.SacredTails.Arena.ShinseiStats.attack*
        name: attack
        nameWithType: ShinseiStats.attack
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.attack
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiStats.attack
  Timba.SacredTails.Arena.ShinseiStats.defence*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiStats.defence*
        name: defence
        nameWithType: ShinseiStats.defence
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.defence
      VB:
      - id: Timba.SacredTails.Arena.ShinseiStats.defence*
        name: defence
        nameWithType: ShinseiStats.defence
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.defence
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiStats.defence
  Timba.SacredTails.Arena.ShinseiStats.speed*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiStats.speed*
        name: speed
        nameWithType: ShinseiStats.speed
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.speed
      VB:
      - id: Timba.SacredTails.Arena.ShinseiStats.speed*
        name: speed
        nameWithType: ShinseiStats.speed
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.speed
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiStats.speed
  Timba.SacredTails.Arena.ShinseiStats.stamina*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiStats.stamina*
        name: stamina
        nameWithType: ShinseiStats.stamina
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.stamina
      VB:
      - id: Timba.SacredTails.Arena.ShinseiStats.stamina*
        name: stamina
        nameWithType: ShinseiStats.stamina
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.stamina
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiStats.stamina
  Timba.SacredTails.Arena.ShinseiStats.vigor*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiStats.vigor*
        name: vigor
        nameWithType: ShinseiStats.vigor
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.vigor
      VB:
      - id: Timba.SacredTails.Arena.ShinseiStats.vigor*
        name: vigor
        nameWithType: ShinseiStats.vigor
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.vigor
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiStats.vigor
  Timba.SacredTails.Arena.ShinseiStats.GetRealStat*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiStats.GetRealStat*
        name: GetRealStat
        nameWithType: ShinseiStats.GetRealStat
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.GetRealStat
      VB:
      - id: Timba.SacredTails.Arena.ShinseiStats.GetRealStat*
        name: GetRealStat
        nameWithType: ShinseiStats.GetRealStat
        qualifiedName: Timba.SacredTails.Arena.ShinseiStats.GetRealStat
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiStats.GetRealStat
  Timba.SacredTails.Arena.TextboxBase.AddText*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TextboxBase.AddText*
        name: AddText
        nameWithType: TextboxBase.AddText
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.AddText
      VB:
      - id: Timba.SacredTails.Arena.TextboxBase.AddText*
        name: AddText
        nameWithType: TextboxBase.AddText
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.AddText
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TextboxBase.AddText
  Timba.SacredTails.Arena.TextboxBase.CheckAlteredState*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TextboxBase.CheckAlteredState*
        name: CheckAlteredState
        nameWithType: TextboxBase.CheckAlteredState
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.CheckAlteredState
      VB:
      - id: Timba.SacredTails.Arena.TextboxBase.CheckAlteredState*
        name: CheckAlteredState
        nameWithType: TextboxBase.CheckAlteredState
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.CheckAlteredState
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TextboxBase.CheckAlteredState
  Timba.SacredTails.Arena.TextboxBase.State*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TextboxBase.State*
        name: State
        nameWithType: TextboxBase.State
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.State
      VB:
      - id: Timba.SacredTails.Arena.TextboxBase.State*
        name: State
        nameWithType: TextboxBase.State
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.State
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TextboxBase.State
  Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter*
        name: AddRemoveFilter
        nameWithType: TextboxBase.AddRemoveFilter
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter
      VB:
      - id: Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter*
        name: AddRemoveFilter
        nameWithType: TextboxBase.AddRemoveFilter
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TextboxBase.AddRemoveFilter
  Timba.SacredTails.Arena.TextboxBase.ApplyFilters*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TextboxBase.ApplyFilters*
        name: ApplyFilters
        nameWithType: TextboxBase.ApplyFilters
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.ApplyFilters
      VB:
      - id: Timba.SacredTails.Arena.TextboxBase.ApplyFilters*
        name: ApplyFilters
        nameWithType: TextboxBase.ApplyFilters
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.ApplyFilters
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TextboxBase.ApplyFilters
  Timba.SacredTails.Arena.TextboxBase.CheckIndividual*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TextboxBase.CheckIndividual*
        name: CheckIndividual
        nameWithType: TextboxBase.CheckIndividual
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.CheckIndividual
      VB:
      - id: Timba.SacredTails.Arena.TextboxBase.CheckIndividual*
        name: CheckIndividual
        nameWithType: TextboxBase.CheckIndividual
        qualifiedName: Timba.SacredTails.Arena.TextboxBase.CheckIndividual
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TextboxBase.CheckIndividual
  Timba.SacredTails.Arena.TextboxBase:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TextboxBase
        name: TextboxBase
        nameWithType: TextboxBase
        qualifiedName: Timba.SacredTails.Arena.TextboxBase
      VB:
      - id: Timba.SacredTails.Arena.TextboxBase
        name: TextboxBase
        nameWithType: TextboxBase
        qualifiedName: Timba.SacredTails.Arena.TextboxBase
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.TextboxBase
  Timba.SacredTails.Arena.Turn:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.Turn
        name: Turn
        nameWithType: Turn
        qualifiedName: Timba.SacredTails.Arena.Turn
      VB:
      - id: Timba.SacredTails.Arena.Turn
        name: Turn
        nameWithType: Turn
        qualifiedName: Timba.SacredTails.Arena.Turn
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.Turn
  System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
  System.Collections.Generic.List{BattleActionsBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleActionsBase}
  Timba.SacredTails.Arena.UserInfo:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: Timba.SacredTails.Arena.UserInfo
      VB:
      - id: Timba.SacredTails.Arena.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: Timba.SacredTails.Arena.UserInfo
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.UserInfo
  Timba.SacredTails.Arena.AttacksAnimation:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.AttacksAnimation
        name: AttacksAnimation
        nameWithType: AttacksAnimation
        qualifiedName: Timba.SacredTails.Arena.AttacksAnimation
      VB:
      - id: Timba.SacredTails.Arena.AttacksAnimation
        name: AttacksAnimation
        nameWithType: AttacksAnimation
        qualifiedName: Timba.SacredTails.Arena.AttacksAnimation
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.AttacksAnimation
  Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions*
        name: ShouldSerializeBattleActions
        nameWithType: ActionCard.ShouldSerializeBattleActions
        qualifiedName: Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions
      VB:
      - id: Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions*
        name: ShouldSerializeBattleActions
        nameWithType: ActionCard.ShouldSerializeBattleActions
        qualifiedName: Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ActionCard.ShouldSerializeBattleActions
  Timba.SacredTails.Arena.ActionCard.OnValidate*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ActionCard.OnValidate*
        name: OnValidate
        nameWithType: ActionCard.OnValidate
        qualifiedName: Timba.SacredTails.Arena.ActionCard.OnValidate
      VB:
      - id: Timba.SacredTails.Arena.ActionCard.OnValidate*
        name: OnValidate
        nameWithType: ActionCard.OnValidate
        qualifiedName: Timba.SacredTails.Arena.ActionCard.OnValidate
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ActionCard.OnValidate
  Timba.SacredTails.Arena.ActionCard:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ActionCard
        name: ActionCard
        nameWithType: ActionCard
        qualifiedName: Timba.SacredTails.Arena.ActionCard
      VB:
      - id: Timba.SacredTails.Arena.ActionCard
        name: ActionCard
        nameWithType: ActionCard
        qualifiedName: Timba.SacredTails.Arena.ActionCard
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.ActionCard
  Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards*
        name: GetJsonActionCards
        nameWithType: CardDatabase.GetJsonActionCards
        qualifiedName: Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards
      VB:
      - id: Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards*
        name: GetJsonActionCards
        nameWithType: CardDatabase.GetJsonActionCards
        qualifiedName: Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardDatabase.GetJsonActionCards
  Timba.SacredTails.Arena.CardDatabase.SetVfxIndex*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardDatabase.SetVfxIndex*
        name: SetVfxIndex
        nameWithType: CardDatabase.SetVfxIndex
        qualifiedName: Timba.SacredTails.Arena.CardDatabase.SetVfxIndex
      VB:
      - id: Timba.SacredTails.Arena.CardDatabase.SetVfxIndex*
        name: SetVfxIndex
        nameWithType: CardDatabase.SetVfxIndex
        qualifiedName: Timba.SacredTails.Arena.CardDatabase.SetVfxIndex
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardDatabase.SetVfxIndex
  Timba.SacredTails.Arena.CardDatabase.OnValidate*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardDatabase.OnValidate*
        name: OnValidate
        nameWithType: CardDatabase.OnValidate
        qualifiedName: Timba.SacredTails.Arena.CardDatabase.OnValidate
      VB:
      - id: Timba.SacredTails.Arena.CardDatabase.OnValidate*
        name: OnValidate
        nameWithType: CardDatabase.OnValidate
        qualifiedName: Timba.SacredTails.Arena.CardDatabase.OnValidate
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardDatabase.OnValidate
  Timba.SacredTails.Arena.CardDatabase:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardDatabase
        name: CardDatabase
        nameWithType: CardDatabase
        qualifiedName: Timba.SacredTails.Arena.CardDatabase
      VB:
      - id: Timba.SacredTails.Arena.CardDatabase
        name: CardDatabase
        nameWithType: CardDatabase
        qualifiedName: Timba.SacredTails.Arena.CardDatabase
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.CardDatabase
  Timba.SacredTails.Arena.GameSceneManager:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager
        name: GameSceneManager
        nameWithType: GameSceneManager
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager
        name: GameSceneManager
        nameWithType: GameSceneManager
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.GameSceneManager
  Timba.SacredTails.Arena.TurnsController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController
        name: TurnsController
        nameWithType: TurnsController
        qualifiedName: Timba.SacredTails.Arena.TurnsController
      VB:
      - id: Timba.SacredTails.Arena.TurnsController
        name: TurnsController
        nameWithType: TurnsController
        qualifiedName: Timba.SacredTails.Arena.TurnsController
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.TurnsController
  System.Collections.Generic.List{TextMeshProUGUI}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{TextMeshProUGUI}
  Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*
        name: OnStartMatch
        nameWithType: BattleGameMode.OnStartMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*
        name: OnStartMatch
        nameWithType: BattleGameMode.OnStartMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnStartMatch
  Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*
        name: OnStartMatchRoutine
        nameWithType: BattleGameMode.OnStartMatchRoutine
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*
        name: OnStartMatchRoutine
        nameWithType: BattleGameMode.OnStartMatchRoutine
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine
  Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*
        name: MakeShinseiPartyUsingPlayfabId
        nameWithType: BattleGameMode.MakeShinseiPartyUsingPlayfabId
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*
        name: MakeShinseiPartyUsingPlayfabId
        nameWithType: BattleGameMode.MakeShinseiPartyUsingPlayfabId
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId
  Timba.SacredTails.Arena.BattleGameMode.Initialize*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.Initialize*
        name: Initialize
        nameWithType: BattleGameMode.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.Initialize
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.Initialize*
        name: Initialize
        nameWithType: BattleGameMode.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.Initialize
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.Initialize
  Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*
        name: ShinseiSelected
        nameWithType: BattleGameMode.ShinseiSelected
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*
        name: ShinseiSelected
        nameWithType: BattleGameMode.ShinseiSelected
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected
  Timba.SacredTails.Arena.BattleGameMode.OnDisable*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnDisable*
        name: OnDisable
        nameWithType: BattleGameMode.OnDisable
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnDisable
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnDisable*
        name: OnDisable
        nameWithType: BattleGameMode.OnDisable
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnDisable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnDisable
  Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: BattleGameMode.OnApplicationQuit
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: BattleGameMode.OnApplicationQuit
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
  Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*
        name: CancelSelectShinsei
        nameWithType: BattleGameMode.CancelSelectShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*
        name: CancelSelectShinsei
        nameWithType: BattleGameMode.CancelSelectShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
  Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*
        name: WaitForOpponentToSelectViewMatch
        nameWithType: BattleGameMode.WaitForOpponentToSelectViewMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*
        name: WaitForOpponentToSelectViewMatch
        nameWithType: BattleGameMode.WaitForOpponentToSelectViewMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
  Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*
        name: WaitForOpponentToSelect
        nameWithType: BattleGameMode.WaitForOpponentToSelect
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*
        name: WaitForOpponentToSelect
        nameWithType: BattleGameMode.WaitForOpponentToSelect
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
  Timba.SacredTails.Arena.BattleGameMode.InitBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.InitBattle*
        name: InitBattle
        nameWithType: BattleGameMode.InitBattle
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.InitBattle
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.InitBattle*
        name: InitBattle
        nameWithType: BattleGameMode.InitBattle
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.InitBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.InitBattle
  Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*
        name: OpenChangeShinseiPanel
        nameWithType: BattleGameMode.OpenChangeShinseiPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*
        name: OpenChangeShinseiPanel
        nameWithType: BattleGameMode.OpenChangeShinseiPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
  Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*
        name: UpdateCurrentShinsei
        nameWithType: BattleGameMode.UpdateCurrentShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*
        name: UpdateCurrentShinsei
        nameWithType: BattleGameMode.UpdateCurrentShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei
  Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*
        name: ShowPopupEndMatch
        nameWithType: BattleGameMode.ShowPopupEndMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*
        name: ShowPopupEndMatch
        nameWithType: BattleGameMode.ShowPopupEndMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch
  Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*
        name: ShowEndResultPanel
        nameWithType: BattleGameMode.ShowEndResultPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*
        name: ShowEndResultPanel
        nameWithType: BattleGameMode.ShowEndResultPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel
  Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*
        name: SpawnWinnerShisneis
        nameWithType: BattleGameMode.SpawnWinnerShisneis
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*
        name: SpawnWinnerShisneis
        nameWithType: BattleGameMode.SpawnWinnerShisneis
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis
  Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*
        name: GoBackToLobbyPopup
        nameWithType: BattleGameMode.GoBackToLobbyPopup
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*
        name: GoBackToLobbyPopup
        nameWithType: BattleGameMode.GoBackToLobbyPopup
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
  Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*
        name: GoBackToLobby
        nameWithType: BattleGameMode.GoBackToLobby
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*
        name: GoBackToLobby
        nameWithType: BattleGameMode.GoBackToLobby
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
  Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*
        name: EndMatchCheck
        nameWithType: BattleGameMode.EndMatchCheck
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*
        name: EndMatchCheck
        nameWithType: BattleGameMode.EndMatchCheck
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck
  Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*
        name: AddTextToLog
        nameWithType: BattleGameMode.AddTextToLog
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*
        name: AddTextToLog
        nameWithType: BattleGameMode.AddTextToLog
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.AddTextToLog
  Global.Action{Timba.SacredTails.Arena.Combat}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Arena.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Timba.SacredTails.Arena.Combat
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Arena.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Timba.SacredTails.Arena.Combat
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{Timba.SacredTails.Arena.Combat}'
  Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*
        name: GetOwnCombatData
        nameWithType: BattleGameMode.GetOwnCombatData
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*
        name: GetOwnCombatData
        nameWithType: BattleGameMode.GetOwnCombatData
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData
  Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*
        name: GetCurrentShinseiEnergy
        nameWithType: BattleGameMode.GetCurrentShinseiEnergy
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*
        name: GetCurrentShinseiEnergy
        nameWithType: BattleGameMode.GetCurrentShinseiEnergy
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
  Timba.SacredTails.Arena.BattleViewerController.Initialize*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleViewerController.Initialize*
        name: Initialize
        nameWithType: BattleViewerController.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController.Initialize
      VB:
      - id: Timba.SacredTails.Arena.BattleViewerController.Initialize*
        name: Initialize
        nameWithType: BattleViewerController.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController.Initialize
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleViewerController.Initialize
  Timba.SacredTails.Arena.BattleViewerController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleViewerController
        name: BattleViewerController
        nameWithType: BattleViewerController
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController
      VB:
      - id: Timba.SacredTails.Arena.BattleViewerController
        name: BattleViewerController
        nameWithType: BattleViewerController
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleViewerController
  System.Collections.Generic.Dictionary{ActionTypeEnum,BattleActionsBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ActionTypeEnum
        name: ActionTypeEnum
        nameWithType: ActionTypeEnum
        qualifiedName: ActionTypeEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ActionTypeEnum
        name: ActionTypeEnum
        nameWithType: ActionTypeEnum
        qualifiedName: ActionTypeEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{ActionTypeEnum,BattleActionsBase}
  System.Collections.Generic.List{VFXTypeData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.VFXTypeData
        name: VFXTypeData
        nameWithType: VFXTypeData
        qualifiedName: VFXTypeData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.VFXTypeData
        name: VFXTypeData
        nameWithType: VFXTypeData
        qualifiedName: VFXTypeData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{VFXTypeData}
  System.Collections.Generic.List{VFXPositionData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.VFXPositionData
        name: VFXPositionData
        nameWithType: VFXPositionData
        qualifiedName: VFXPositionData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.VFXPositionData
        name: VFXPositionData
        nameWithType: VFXPositionData
        qualifiedName: VFXPositionData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{VFXPositionData}
  Timba.SacredTails.Arena.TurnsController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.Init*
        name: Init
        nameWithType: TurnsController.Init
        qualifiedName: Timba.SacredTails.Arena.TurnsController.Init
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.Init*
        name: Init
        nameWithType: TurnsController.Init
        qualifiedName: Timba.SacredTails.Arena.TurnsController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.Init
  Timba.SacredTails.Arena.TurnsController.InitNewTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.InitNewTurn*
        name: InitNewTurn
        nameWithType: TurnsController.InitNewTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitNewTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.InitNewTurn*
        name: InitNewTurn
        nameWithType: TurnsController.InitNewTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitNewTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.InitNewTurn
  Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*
        name: CurrentActionsHasSkipTurnForLocalPlayer
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*
        name: CurrentActionsHasSkipTurnForLocalPlayer
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
  Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*
        name: CurrentActionsHasSkipTurnForEnemy
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForEnemy
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*
        name: CurrentActionsHasSkipTurnForEnemy
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForEnemy
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
  Timba.SacredTails.Arena.TurnsController.BtnSendTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.BtnSendTurn*
        name: BtnSendTurn
        nameWithType: TurnsController.BtnSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.BtnSendTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.BtnSendTurn*
        name: BtnSendTurn
        nameWithType: TurnsController.BtnSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.BtnSendTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.BtnSendTurn
  Timba.SacredTails.Arena.TurnsController.SendMyTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.SendMyTurn*
        name: SendMyTurn
        nameWithType: TurnsController.SendMyTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendMyTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.SendMyTurn*
        name: SendMyTurn
        nameWithType: TurnsController.SendMyTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendMyTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.SendMyTurn
  Timba.SacredTails.Arena.TurnsController.TestSendTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.TestSendTurn*
        name: TestSendTurn
        nameWithType: TurnsController.TestSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.TestSendTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.TestSendTurn*
        name: TestSendTurn
        nameWithType: TurnsController.TestSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.TestSendTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.TestSendTurn
  Timba.SacredTails.Arena.TurnsController.SendTurnRequest*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.SendTurnRequest*
        name: SendTurnRequest
        nameWithType: TurnsController.SendTurnRequest
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendTurnRequest
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.SendTurnRequest*
        name: SendTurnRequest
        nameWithType: TurnsController.SendTurnRequest
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendTurnRequest
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.SendTurnRequest
  Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*
        name: ForbiddenActionCheck
        nameWithType: TurnsController.ForbiddenActionCheck
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*
        name: ForbiddenActionCheck
        nameWithType: TurnsController.ForbiddenActionCheck
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck
  Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*
        name: SetForbiddenActions
        nameWithType: TurnsController.SetForbiddenActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*
        name: SetForbiddenActions
        nameWithType: TurnsController.SetForbiddenActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.SetForbiddenActions
  Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*
        name: ReduceForbiddenActionsDuration
        nameWithType: TurnsController.ReduceForbiddenActionsDuration
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*
        name: ReduceForbiddenActionsDuration
        nameWithType: TurnsController.ReduceForbiddenActionsDuration
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
  Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*
        name: CalculateIncomingActions
        nameWithType: TurnsController.CalculateIncomingActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*
        name: CalculateIncomingActions
        nameWithType: TurnsController.CalculateIncomingActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions
  Timba.SacredTails.Arena.TurnsController.CheckEndMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEndMatch*
        name: CheckEndMatch
        nameWithType: TurnsController.CheckEndMatch
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEndMatch
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEndMatch*
        name: CheckEndMatch
        nameWithType: TurnsController.CheckEndMatch
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEndMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckEndMatch
  Timba.SacredTails.Arena.TurnsController.CheckDeadTime*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckDeadTime*
        name: CheckDeadTime
        nameWithType: TurnsController.CheckDeadTime
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckDeadTime
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckDeadTime*
        name: CheckDeadTime
        nameWithType: TurnsController.CheckDeadTime
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckDeadTime
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckDeadTime
  Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*
        name: WaitOponentTurn
        nameWithType: TurnsController.WaitOponentTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*
        name: WaitOponentTurn
        nameWithType: TurnsController.WaitOponentTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
  Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData*
        name: ReplaceUserLocalDataWithServerData
        nameWithType: TurnsController.ReplaceUserLocalDataWithServerData
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData*
        name: ReplaceUserLocalDataWithServerData
        nameWithType: TurnsController.ReplaceUserLocalDataWithServerData
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ReplaceUserLocalDataWithServerData
  Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer*
        name: ChangeShinseiFromServer
        nameWithType: TurnsController.ChangeShinseiFromServer
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer*
        name: ChangeShinseiFromServer
        nameWithType: TurnsController.ChangeShinseiFromServer
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ChangeShinseiFromServer
  Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*
        name: CheckIfAnyoneSurrendered
        nameWithType: TurnsController.CheckIfAnyoneSurrendered
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*
        name: CheckIfAnyoneSurrendered
        nameWithType: TurnsController.CheckIfAnyoneSurrendered
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered
  Timba.SacredTails.Arena.TurnsController.InitTurnFlow*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.InitTurnFlow*
        name: InitTurnFlow
        nameWithType: TurnsController.InitTurnFlow
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitTurnFlow
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.InitTurnFlow*
        name: InitTurnFlow
        nameWithType: TurnsController.InitTurnFlow
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitTurnFlow
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.InitTurnFlow
  Timba.SacredTails.Arena.TurnsController.DoDeathVerification*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.DoDeathVerification*
        name: DoDeathVerification
        nameWithType: TurnsController.DoDeathVerification
        qualifiedName: Timba.SacredTails.Arena.TurnsController.DoDeathVerification
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.DoDeathVerification*
        name: DoDeathVerification
        nameWithType: TurnsController.DoDeathVerification
        qualifiedName: Timba.SacredTails.Arena.TurnsController.DoDeathVerification
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.DoDeathVerification
  Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond*
        name: WaitForSecondsAndDoActionEachSecond
        nameWithType: TurnsController.WaitForSecondsAndDoActionEachSecond
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond*
        name: WaitForSecondsAndDoActionEachSecond
        nameWithType: TurnsController.WaitForSecondsAndDoActionEachSecond
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.WaitForSecondsAndDoActionEachSecond
  Timba.SacredTails.Arena.TurnsController.WaitForSeconds*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.WaitForSeconds*
        name: WaitForSeconds
        nameWithType: TurnsController.WaitForSeconds
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitForSeconds
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.WaitForSeconds*
        name: WaitForSeconds
        nameWithType: TurnsController.WaitForSeconds
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitForSeconds
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.WaitForSeconds
  Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*
        name: CheckEnergyBarsAndInitNextTurn
        nameWithType: TurnsController.CheckEnergyBarsAndInitNextTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*
        name: CheckEnergyBarsAndInitNextTurn
        nameWithType: TurnsController.CheckEnergyBarsAndInitNextTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
  Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*
        name: CalculateEnergyRegen
        nameWithType: TurnsController.CalculateEnergyRegen
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*
        name: CalculateEnergyRegen
        nameWithType: TurnsController.CalculateEnergyRegen
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen
  Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*
        name: ExecuteServerAction
        nameWithType: TurnsController.ExecuteServerAction
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*
        name: ExecuteServerAction
        nameWithType: TurnsController.ExecuteServerAction
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ExecuteServerAction
  Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*
        name: GetTrueIndexCard
        nameWithType: TurnsController.GetTrueIndexCard
        qualifiedName: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*
        name: GetTrueIndexCard
        nameWithType: TurnsController.GetTrueIndexCard
        qualifiedName: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard
  Global.IPointerDownHandler:
    name:
      CSharp:
      - id: Global.IPointerDownHandler
        name: IPointerDownHandler
        nameWithType: IPointerDownHandler
        qualifiedName: IPointerDownHandler
        isExternal: true
      VB:
      - id: Global.IPointerDownHandler
        name: IPointerDownHandler
        nameWithType: IPointerDownHandler
        qualifiedName: IPointerDownHandler
        isExternal: true
    isDefinition: true
  Timba.SacredTails.Arena.CardPreview.SetToggable*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardPreview.SetToggable*
        name: SetToggable
        nameWithType: CardPreview.SetToggable
        qualifiedName: Timba.SacredTails.Arena.CardPreview.SetToggable
      VB:
      - id: Timba.SacredTails.Arena.CardPreview.SetToggable*
        name: SetToggable
        nameWithType: CardPreview.SetToggable
        qualifiedName: Timba.SacredTails.Arena.CardPreview.SetToggable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardPreview.SetToggable
  Timba.SacredTails.Arena.CardPreview.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardPreview.Init*
        name: Init
        nameWithType: CardPreview.Init
        qualifiedName: Timba.SacredTails.Arena.CardPreview.Init
      VB:
      - id: Timba.SacredTails.Arena.CardPreview.Init*
        name: Init
        nameWithType: CardPreview.Init
        qualifiedName: Timba.SacredTails.Arena.CardPreview.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardPreview.Init
  Timba.SacredTails.Arena.CardPreview:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardPreview
        name: CardPreview
        nameWithType: CardPreview
        qualifiedName: Timba.SacredTails.Arena.CardPreview
      VB:
      - id: Timba.SacredTails.Arena.CardPreview
        name: CardPreview
        nameWithType: CardPreview
        qualifiedName: Timba.SacredTails.Arena.CardPreview
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.CardPreview
  Timba.SacredTails.Arena.CardPreview.CopyCardIndex*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardPreview.CopyCardIndex*
        name: CopyCardIndex
        nameWithType: CardPreview.CopyCardIndex
        qualifiedName: Timba.SacredTails.Arena.CardPreview.CopyCardIndex
      VB:
      - id: Timba.SacredTails.Arena.CardPreview.CopyCardIndex*
        name: CopyCardIndex
        nameWithType: CardPreview.CopyCardIndex
        qualifiedName: Timba.SacredTails.Arena.CardPreview.CopyCardIndex
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardPreview.CopyCardIndex
  Timba.SacredTails.Arena.CardPreview.UpdateVisual*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardPreview.UpdateVisual*
        name: UpdateVisual
        nameWithType: CardPreview.UpdateVisual
        qualifiedName: Timba.SacredTails.Arena.CardPreview.UpdateVisual
      VB:
      - id: Timba.SacredTails.Arena.CardPreview.UpdateVisual*
        name: UpdateVisual
        nameWithType: CardPreview.UpdateVisual
        qualifiedName: Timba.SacredTails.Arena.CardPreview.UpdateVisual
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardPreview.UpdateVisual
  Timba.SacredTails.Arena.CardPreview.OnPointerClick*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardPreview.OnPointerClick*
        name: OnPointerClick
        nameWithType: CardPreview.OnPointerClick
        qualifiedName: Timba.SacredTails.Arena.CardPreview.OnPointerClick
      VB:
      - id: Timba.SacredTails.Arena.CardPreview.OnPointerClick*
        name: OnPointerClick
        nameWithType: CardPreview.OnPointerClick
        qualifiedName: Timba.SacredTails.Arena.CardPreview.OnPointerClick
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardPreview.OnPointerClick
  Timba.SacredTails.Arena.CardPreview.OnPointerDown*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardPreview.OnPointerDown*
        name: OnPointerDown
        nameWithType: CardPreview.OnPointerDown
        qualifiedName: Timba.SacredTails.Arena.CardPreview.OnPointerDown
      VB:
      - id: Timba.SacredTails.Arena.CardPreview.OnPointerDown*
        name: OnPointerDown
        nameWithType: CardPreview.OnPointerDown
        qualifiedName: Timba.SacredTails.Arena.CardPreview.OnPointerDown
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardPreview.OnPointerDown
  Timba.SacredTails.Arena.CardPreview.OnPointerEnter*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardPreview.OnPointerEnter*
        name: OnPointerEnter
        nameWithType: CardPreview.OnPointerEnter
        qualifiedName: Timba.SacredTails.Arena.CardPreview.OnPointerEnter
      VB:
      - id: Timba.SacredTails.Arena.CardPreview.OnPointerEnter*
        name: OnPointerEnter
        nameWithType: CardPreview.OnPointerEnter
        qualifiedName: Timba.SacredTails.Arena.CardPreview.OnPointerEnter
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardPreview.OnPointerEnter
  Timba.SacredTails.Arena.CardPreview.OnPointerExit*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.CardPreview.OnPointerExit*
        name: OnPointerExit
        nameWithType: CardPreview.OnPointerExit
        qualifiedName: Timba.SacredTails.Arena.CardPreview.OnPointerExit
      VB:
      - id: Timba.SacredTails.Arena.CardPreview.OnPointerExit*
        name: OnPointerExit
        nameWithType: CardPreview.OnPointerExit
        qualifiedName: Timba.SacredTails.Arena.CardPreview.OnPointerExit
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.CardPreview.OnPointerExit
  Global.BackgroundTypeSwapper:
    name:
      CSharp:
      - id: Global.BackgroundTypeSwapper
        name: BackgroundTypeSwapper
        nameWithType: BackgroundTypeSwapper
        qualifiedName: BackgroundTypeSwapper
        isExternal: true
      VB:
      - id: Global.BackgroundTypeSwapper
        name: BackgroundTypeSwapper
        nameWithType: BackgroundTypeSwapper
        qualifiedName: BackgroundTypeSwapper
        isExternal: true
    isDefinition: true
  Global.Slider:
    name:
      CSharp:
      - id: Global.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
      VB:
      - id: Global.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
    isDefinition: true
  Global.PositionCounter:
    name:
      CSharp:
      - id: Global.PositionCounter
        name: PositionCounter
        nameWithType: PositionCounter
        qualifiedName: PositionCounter
        isExternal: true
      VB:
      - id: Global.PositionCounter
        name: PositionCounter
        nameWithType: PositionCounter
        qualifiedName: PositionCounter
        isExternal: true
    isDefinition: true
    commentId: '!:Global.PositionCounter'
  System.Collections.Generic.List{TMP_Text}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{TMP_Text}
  System.Collections.Generic.List{Timba.SacredTails.Arena.CardPreview}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Arena.CardPreview
        name: CardPreview
        nameWithType: CardPreview
        qualifiedName: Timba.SacredTails.Arena.CardPreview
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Arena.CardPreview
        name: CardPreview
        nameWithType: CardPreview
        qualifiedName: Timba.SacredTails.Arena.CardPreview
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.Arena.CardPreview}
  Global.IUIHelpable:
    name:
      CSharp:
      - id: Global.IUIHelpable
        name: IUIHelpable
        nameWithType: IUIHelpable
        qualifiedName: IUIHelpable
        isExternal: true
      VB:
      - id: Global.IUIHelpable
        name: IUIHelpable
        nameWithType: IUIHelpable
        qualifiedName: IUIHelpable
        isExternal: true
    isDefinition: true
    commentId: '!:Global.IUIHelpable'
  Global.IDatabase:
    name:
      CSharp:
      - id: Global.IDatabase
        name: IDatabase
        nameWithType: IDatabase
        qualifiedName: IDatabase
        isExternal: true
      VB:
      - id: Global.IDatabase
        name: IDatabase
        nameWithType: IDatabase
        qualifiedName: IDatabase
        isExternal: true
    isDefinition: true
    commentId: '!:Global.IDatabase'
  Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview*
        name: DisplayPreview
        nameWithType: ShinseiPreviewPanelManager.DisplayPreview
        qualifiedName: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview
      VB:
      - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview*
        name: DisplayPreview
        nameWithType: ShinseiPreviewPanelManager.DisplayPreview
        qualifiedName: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.DisplayPreview
  Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel*
        name: SetCardsPanel
        nameWithType: ShinseiPreviewPanelManager.SetCardsPanel
        qualifiedName: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel
      VB:
      - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel*
        name: SetCardsPanel
        nameWithType: ShinseiPreviewPanelManager.SetCardsPanel
        qualifiedName: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetCardsPanel
  System.Collections.Generic.List{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Single}
  Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel*
        name: SetStatPanel
        nameWithType: ShinseiPreviewPanelManager.SetStatPanel
        qualifiedName: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel
      VB:
      - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel*
        name: SetStatPanel
        nameWithType: ShinseiPreviewPanelManager.SetStatPanel
        qualifiedName: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetStatPanel
  Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider*
        name: SetSlider
        nameWithType: ShinseiPreviewPanelManager.SetSlider
        qualifiedName: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider
      VB:
      - id: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider*
        name: SetSlider
        nameWithType: ShinseiPreviewPanelManager.SetSlider
        qualifiedName: Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiPreviewPanelManager.SetSlider
  Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*
        name: IsCompanion
        nameWithType: ShinseiSlot.IsCompanion
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*
        name: IsCompanion
        nameWithType: ShinseiSlot.IsCompanion
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
  Global.UnityEvent`2:
    name:
      CSharp:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityEvent`2'
  Global.UnityEvent{System.Int32,Timba.SacredTails.Arena.ShinseiSlot}:
    name:
      CSharp:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`2
    commentId: '!:Global.UnityEvent{System.Int32,Timba.SacredTails.Arena.ShinseiSlot}'
  Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*
        name: OnPointerClick
        nameWithType: ShinseiSlot.OnPointerClick
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*
        name: OnPointerClick
        nameWithType: ShinseiSlot.OnPointerClick
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick
  Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*
        name: UpdateVisual
        nameWithType: ShinseiSlot.UpdateVisual
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*
        name: UpdateVisual
        nameWithType: ShinseiSlot.UpdateVisual
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual
  Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*
        name: ChangeShinseiSlotValues
        nameWithType: ShinseiSlot.ChangeShinseiSlotValues
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*
        name: ChangeShinseiSlotValues
        nameWithType: ShinseiSlot.ChangeShinseiSlotValues
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues
  Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*
        name: ChangeInteractuable
        nameWithType: ShinseiSlot.ChangeInteractuable
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*
        name: ChangeInteractuable
        nameWithType: ShinseiSlot.ChangeInteractuable
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable
  Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*
        name: SetDataColor
        nameWithType: ShinseiSlot.SetDataColor
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*
        name: SetDataColor
        nameWithType: ShinseiSlot.SetDataColor
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
  Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*
        name: PopulateShinseiTypesSprites
        nameWithType: ShinseiSlot.PopulateShinseiTypesSprites
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*
        name: PopulateShinseiTypesSprites
        nameWithType: ShinseiSlot.PopulateShinseiTypesSprites
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites
  Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*
        name: GetClosestBattleSpawn
        nameWithType: GameSceneManager.GetClosestBattleSpawn
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*
        name: GetClosestBattleSpawn
        nameWithType: GameSceneManager.GetClosestBattleSpawn
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
  Timba.SacredTails.Arena.GameSceneManager.SendBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager.SendBattle*
        name: SendBattle
        nameWithType: GameSceneManager.SendBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.SendBattle
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager.SendBattle*
        name: SendBattle
        nameWithType: GameSceneManager.SendBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.SendBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.GameSceneManager.SendBattle
  Timba.SacredTails.Arena.GameSceneManager.EndBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager.EndBattle*
        name: EndBattle
        nameWithType: GameSceneManager.EndBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.EndBattle
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager.EndBattle*
        name: EndBattle
        nameWithType: GameSceneManager.EndBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.EndBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.GameSceneManager.EndBattle
  System.Collections.Generic.List{Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass}
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*
        name: GetShinseiTypes
        nameWithType: ShinseiTypeScriptable.GetShinseiTypes
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*
        name: GetShinseiTypes
        nameWithType: ShinseiTypeScriptable.GetShinseiTypes
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*
        name: CompareTypesAndGetDamage
        nameWithType: ShinseiTypeScriptable.CompareTypesAndGetDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*
        name: CompareTypesAndGetDamage
        nameWithType: ShinseiTypeScriptable.CompareTypesAndGetDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*
        name: GetMessageForTypeDamage
        nameWithType: ShinseiTypeScriptable.GetMessageForTypeDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*
        name: GetMessageForTypeDamage
        nameWithType: ShinseiTypeScriptable.GetMessageForTypeDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*
        name: SerializeShinseiTypeMatrix
        nameWithType: ShinseiTypeScriptable.SerializeShinseiTypeMatrix
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*
        name: SerializeShinseiTypeMatrix
        nameWithType: ShinseiTypeScriptable.SerializeShinseiTypeMatrix
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
        name: ShinseiTypeScriptable
        nameWithType: ShinseiTypeScriptable
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
        name: ShinseiTypeScriptable
        nameWithType: ShinseiTypeScriptable
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
  Timba.SacredTails.Arena.ShinseiType:
    name:
      CSharp:
      - name: Timba.SacredTails.Arena.ShinseiType
        nameWithType: Timba.SacredTails.Arena.ShinseiType
        qualifiedName: Timba.SacredTails.Arena.ShinseiType
      VB:
      - name: Timba.SacredTails.Arena.ShinseiType
        nameWithType: Timba.SacredTails.Arena.ShinseiType
        qualifiedName: Timba.SacredTails.Arena.ShinseiType
    isDefinition: true
    commentId: N:Timba.SacredTails.Arena.ShinseiType
  Global.AK.Wwise.RTPC:
    name:
      CSharp:
      - id: Global.AK.Wwise.RTPC
        name: AK.Wwise.RTPC
        nameWithType: AK.Wwise.RTPC
        qualifiedName: AK.Wwise.RTPC
        isExternal: true
      VB:
      - id: Global.AK.Wwise.RTPC
        name: AK.Wwise.RTPC
        nameWithType: AK.Wwise.RTPC
        qualifiedName: AK.Wwise.RTPC
        isExternal: true
    isDefinition: true
  Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart*:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart*
        name: CustomStart
        nameWithType: AudioSettings.CustomStart
        qualifiedName: Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart
      VB:
      - id: Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart*
        name: CustomStart
        nameWithType: AudioSettings.CustomStart
        qualifiedName: Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart
    isDefinition: true
    commentId: Overload:Timba.SacredTails.AudioIntegration.AudioSettings.CustomStart
  Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue*:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue*
        name: SetMasterValue
        nameWithType: AudioSettings.SetMasterValue
        qualifiedName: Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue
      VB:
      - id: Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue*
        name: SetMasterValue
        nameWithType: AudioSettings.SetMasterValue
        qualifiedName: Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue
    isDefinition: true
    commentId: Overload:Timba.SacredTails.AudioIntegration.AudioSettings.SetMasterValue
  Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue*:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue*
        name: SetMusicValue
        nameWithType: AudioSettings.SetMusicValue
        qualifiedName: Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue
      VB:
      - id: Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue*
        name: SetMusicValue
        nameWithType: AudioSettings.SetMusicValue
        qualifiedName: Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue
    isDefinition: true
    commentId: Overload:Timba.SacredTails.AudioIntegration.AudioSettings.SetMusicValue
  Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue*:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue*
        name: SetSFXValue
        nameWithType: AudioSettings.SetSFXValue
        qualifiedName: Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue
      VB:
      - id: Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue*
        name: SetSFXValue
        nameWithType: AudioSettings.SetSFXValue
        qualifiedName: Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue
    isDefinition: true
    commentId: Overload:Timba.SacredTails.AudioIntegration.AudioSettings.SetSFXValue
  Timba.SacredTails.AudioIntegration.AudioSettings:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.AudioSettings
        name: AudioSettings
        nameWithType: AudioSettings
        qualifiedName: Timba.SacredTails.AudioIntegration.AudioSettings
      VB:
      - id: Timba.SacredTails.AudioIntegration.AudioSettings
        name: AudioSettings
        nameWithType: AudioSettings
        qualifiedName: Timba.SacredTails.AudioIntegration.AudioSettings
    isDefinition: true
    commentId: T:Timba.SacredTails.AudioIntegration.AudioSettings
  Timba.SacredTails.AudioIntegration.CallStart:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.CallStart
        name: CallStart
        nameWithType: CallStart
        qualifiedName: Timba.SacredTails.AudioIntegration.CallStart
      VB:
      - id: Timba.SacredTails.AudioIntegration.CallStart
        name: CallStart
        nameWithType: CallStart
        qualifiedName: Timba.SacredTails.AudioIntegration.CallStart
    isDefinition: true
    commentId: T:Timba.SacredTails.AudioIntegration.CallStart
  Timba.SacredTails.AudioIntegration.SimpleAudioBtn:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.SimpleAudioBtn
        name: SimpleAudioBtn
        nameWithType: SimpleAudioBtn
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleAudioBtn
      VB:
      - id: Timba.SacredTails.AudioIntegration.SimpleAudioBtn
        name: SimpleAudioBtn
        nameWithType: SimpleAudioBtn
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleAudioBtn
    isDefinition: true
    commentId: T:Timba.SacredTails.AudioIntegration.SimpleAudioBtn
  Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio*:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio*
        name: PlayAudio
        nameWithType: SimpleAudioCallback.PlayAudio
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio
      VB:
      - id: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio*
        name: PlayAudio
        nameWithType: SimpleAudioCallback.PlayAudio
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio
    isDefinition: true
    commentId: Overload:Timba.SacredTails.AudioIntegration.SimpleAudioCallback.PlayAudio
  Timba.SacredTails.AudioIntegration.SimpleAudioCallback:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.SimpleAudioCallback
        name: SimpleAudioCallback
        nameWithType: SimpleAudioCallback
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleAudioCallback
      VB:
      - id: Timba.SacredTails.AudioIntegration.SimpleAudioCallback
        name: SimpleAudioCallback
        nameWithType: SimpleAudioCallback
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleAudioCallback
    isDefinition: true
    commentId: T:Timba.SacredTails.AudioIntegration.SimpleAudioCallback
  Timba.SacredTails.AudioIntegration.SimpleAudioToggle:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.SimpleAudioToggle
        name: SimpleAudioToggle
        nameWithType: SimpleAudioToggle
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleAudioToggle
      VB:
      - id: Timba.SacredTails.AudioIntegration.SimpleAudioToggle
        name: SimpleAudioToggle
        nameWithType: SimpleAudioToggle
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleAudioToggle
    isDefinition: true
    commentId: T:Timba.SacredTails.AudioIntegration.SimpleAudioToggle
  Timba.SacredTails.AudioIntegration.SimpleButtonSound:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.SimpleButtonSound
        name: SimpleButtonSound
        nameWithType: SimpleButtonSound
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleButtonSound
      VB:
      - id: Timba.SacredTails.AudioIntegration.SimpleButtonSound
        name: SimpleButtonSound
        nameWithType: SimpleButtonSound
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleButtonSound
    isDefinition: true
    commentId: T:Timba.SacredTails.AudioIntegration.SimpleButtonSound
  Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play*:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play*
        name: Play
        nameWithType: SimpleCustomAudio.Play
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play
      VB:
      - id: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play*
        name: Play
        nameWithType: SimpleCustomAudio.Play
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play
    isDefinition: true
    commentId: Overload:Timba.SacredTails.AudioIntegration.SimpleCustomAudio.Play
  Timba.SacredTails.AudioIntegration.SimpleCustomAudio:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.SimpleCustomAudio
        name: SimpleCustomAudio
        nameWithType: SimpleCustomAudio
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleCustomAudio
      VB:
      - id: Timba.SacredTails.AudioIntegration.SimpleCustomAudio
        name: SimpleCustomAudio
        nameWithType: SimpleCustomAudio
        qualifiedName: Timba.SacredTails.AudioIntegration.SimpleCustomAudio
    isDefinition: true
    commentId: T:Timba.SacredTails.AudioIntegration.SimpleCustomAudio
  Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent*:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent*
        name: PTEvent
        nameWithType: WWiseSacred.PTEvent
        qualifiedName: Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent
      VB:
      - id: Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent*
        name: PTEvent
        nameWithType: WWiseSacred.PTEvent
        qualifiedName: Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent
    isDefinition: true
    commentId: Overload:Timba.SacredTails.AudioIntegration.WWiseSacred.PTEvent
  Timba.SacredTails.AudioIntegration.WWiseSacred:
    name:
      CSharp:
      - id: Timba.SacredTails.AudioIntegration.WWiseSacred
        name: WWiseSacred
        nameWithType: WWiseSacred
        qualifiedName: Timba.SacredTails.AudioIntegration.WWiseSacred
      VB:
      - id: Timba.SacredTails.AudioIntegration.WWiseSacred
        name: WWiseSacred
        nameWithType: WWiseSacred
        qualifiedName: Timba.SacredTails.AudioIntegration.WWiseSacred
    isDefinition: true
    commentId: T:Timba.SacredTails.AudioIntegration.WWiseSacred
  Timba.SacredTails.AudioIntegration:
    name:
      CSharp:
      - name: Timba.SacredTails.AudioIntegration
        nameWithType: Timba.SacredTails.AudioIntegration
        qualifiedName: Timba.SacredTails.AudioIntegration
      VB:
      - name: Timba.SacredTails.AudioIntegration
        nameWithType: Timba.SacredTails.AudioIntegration
        qualifiedName: Timba.SacredTails.AudioIntegration
    isDefinition: true
    commentId: N:Timba.SacredTails.AudioIntegration
  Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues*:
    name:
      CSharp:
      - id: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues*
        name: ShowValues
        nameWithType: DebugShinseiSlot.ShowValues
        qualifiedName: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues
      VB:
      - id: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues*
        name: ShowValues
        nameWithType: DebugShinseiSlot.ShowValues
        qualifiedName: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues
    isDefinition: true
    commentId: Overload:Timba.SacredTails.BattleDebugTool.DebugShinseiSlot.ShowValues
  Timba.SacredTails.BattleDebugTool.DebugShinseiSlot:
    name:
      CSharp:
      - id: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot
        name: DebugShinseiSlot
        nameWithType: DebugShinseiSlot
        qualifiedName: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot
      VB:
      - id: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot
        name: DebugShinseiSlot
        nameWithType: DebugShinseiSlot
        qualifiedName: Timba.SacredTails.BattleDebugTool.DebugShinseiSlot
    isDefinition: true
    commentId: T:Timba.SacredTails.BattleDebugTool.DebugShinseiSlot
  Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData*:
    name:
      CSharp:
      - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData*
        name: GetServerMatchData
        nameWithType: GetShareGroupData.GetServerMatchData
        qualifiedName: Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData
      VB:
      - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData*
        name: GetServerMatchData
        nameWithType: GetShareGroupData.GetServerMatchData
        qualifiedName: Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData
    isDefinition: true
    commentId: Overload:Timba.SacredTails.BattleDebugTool.GetShareGroupData.GetServerMatchData
  Timba.SacredTails.BattleDebugTool.GetShareGroupData:
    name:
      CSharp:
      - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData
        name: GetShareGroupData
        nameWithType: GetShareGroupData
        qualifiedName: Timba.SacredTails.BattleDebugTool.GetShareGroupData
      VB:
      - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData
        name: GetShareGroupData
        nameWithType: GetShareGroupData
        qualifiedName: Timba.SacredTails.BattleDebugTool.GetShareGroupData
    isDefinition: true
    commentId: T:Timba.SacredTails.BattleDebugTool.GetShareGroupData
  Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer:
    name:
      CSharp:
      - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer
        name: GetShareGroupData.CombatPlayerServer
        nameWithType: GetShareGroupData.CombatPlayerServer
        qualifiedName: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer
      VB:
      - id: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer
        name: GetShareGroupData.CombatPlayerServer
        nameWithType: GetShareGroupData.CombatPlayerServer
        qualifiedName: Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer
    isDefinition: true
    commentId: T:Timba.SacredTails.BattleDebugTool.GetShareGroupData.CombatPlayerServer
  Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0*:
    name:
      CSharp:
      - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0*
        name: ChangeTestCard0
        nameWithType: ChangeCardsTest.ChangeTestCard0
        qualifiedName: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0
      VB:
      - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0*
        name: ChangeTestCard0
        nameWithType: ChangeCardsTest.ChangeTestCard0
        qualifiedName: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0
    isDefinition: true
    commentId: Overload:Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard0
  Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1*:
    name:
      CSharp:
      - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1*
        name: ChangeTestCard1
        nameWithType: ChangeCardsTest.ChangeTestCard1
        qualifiedName: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1
      VB:
      - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1*
        name: ChangeTestCard1
        nameWithType: ChangeCardsTest.ChangeTestCard1
        qualifiedName: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1
    isDefinition: true
    commentId: Overload:Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard1
  Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2*:
    name:
      CSharp:
      - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2*
        name: ChangeTestCard2
        nameWithType: ChangeCardsTest.ChangeTestCard2
        qualifiedName: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2
      VB:
      - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2*
        name: ChangeTestCard2
        nameWithType: ChangeCardsTest.ChangeTestCard2
        qualifiedName: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2
    isDefinition: true
    commentId: Overload:Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard2
  Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3*:
    name:
      CSharp:
      - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3*
        name: ChangeTestCard3
        nameWithType: ChangeCardsTest.ChangeTestCard3
        qualifiedName: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3
      VB:
      - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3*
        name: ChangeTestCard3
        nameWithType: ChangeCardsTest.ChangeTestCard3
        qualifiedName: Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3
    isDefinition: true
    commentId: Overload:Timba.SacredTails.BattleDebugTool.ChangeCardsTest.ChangeTestCard3
  Timba.SacredTails.BattleDebugTool.ChangeCardsTest:
    name:
      CSharp:
      - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest
        name: ChangeCardsTest
        nameWithType: ChangeCardsTest
        qualifiedName: Timba.SacredTails.BattleDebugTool.ChangeCardsTest
      VB:
      - id: Timba.SacredTails.BattleDebugTool.ChangeCardsTest
        name: ChangeCardsTest
        nameWithType: ChangeCardsTest
        qualifiedName: Timba.SacredTails.BattleDebugTool.ChangeCardsTest
    isDefinition: true
    commentId: T:Timba.SacredTails.BattleDebugTool.ChangeCardsTest
  Timba.SacredTails.BattleDebugTool:
    name:
      CSharp:
      - name: Timba.SacredTails.BattleDebugTool
        nameWithType: Timba.SacredTails.BattleDebugTool
        qualifiedName: Timba.SacredTails.BattleDebugTool
      VB:
      - name: Timba.SacredTails.BattleDebugTool
        nameWithType: Timba.SacredTails.BattleDebugTool
        qualifiedName: Timba.SacredTails.BattleDebugTool
    isDefinition: true
    commentId: N:Timba.SacredTails.BattleDebugTool
  Timba.SacredTails.VFXController.VFXDestroyer:
    name:
      CSharp:
      - id: Timba.SacredTails.VFXController.VFXDestroyer
        name: VFXDestroyer
        nameWithType: VFXDestroyer
        qualifiedName: Timba.SacredTails.VFXController.VFXDestroyer
      VB:
      - id: Timba.SacredTails.VFXController.VFXDestroyer
        name: VFXDestroyer
        nameWithType: VFXDestroyer
        qualifiedName: Timba.SacredTails.VFXController.VFXDestroyer
    isDefinition: true
    commentId: T:Timba.SacredTails.VFXController.VFXDestroyer
  Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX*:
    name:
      CSharp:
      - id: Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX*
        name: SpawnVFX
        nameWithType: VFXInstancer.SpawnVFX
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX
      VB:
      - id: Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX*
        name: SpawnVFX
        nameWithType: VFXInstancer.SpawnVFX
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX
    isDefinition: true
    commentId: Overload:Timba.SacredTails.VFXController.VFXInstancer.SpawnVFX
  Timba.SacredTails.VFXController.VFXInstancer.Test*:
    name:
      CSharp:
      - id: Timba.SacredTails.VFXController.VFXInstancer.Test*
        name: Test
        nameWithType: VFXInstancer.Test
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.Test
      VB:
      - id: Timba.SacredTails.VFXController.VFXInstancer.Test*
        name: Test
        nameWithType: VFXInstancer.Test
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.Test
    isDefinition: true
    commentId: Overload:Timba.SacredTails.VFXController.VFXInstancer.Test
  Timba.SacredTails.VFXController.VFXInstancer.Test2*:
    name:
      CSharp:
      - id: Timba.SacredTails.VFXController.VFXInstancer.Test2*
        name: Test2
        nameWithType: VFXInstancer.Test2
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.Test2
      VB:
      - id: Timba.SacredTails.VFXController.VFXInstancer.Test2*
        name: Test2
        nameWithType: VFXInstancer.Test2
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.Test2
    isDefinition: true
    commentId: Overload:Timba.SacredTails.VFXController.VFXInstancer.Test2
  Global.VfxInfo:
    name:
      CSharp:
      - id: Global.VfxInfo
        name: VfxInfo
        nameWithType: VfxInfo
        qualifiedName: VfxInfo
        isExternal: true
      VB:
      - id: Global.VfxInfo
        name: VfxInfo
        nameWithType: VfxInfo
        qualifiedName: VfxInfo
        isExternal: true
    isDefinition: true
  Timba.SacredTails.VFXController.VFXInstancer.GetVfx*:
    name:
      CSharp:
      - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfx*
        name: GetVfx
        nameWithType: VFXInstancer.GetVfx
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.GetVfx
      VB:
      - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfx*
        name: GetVfx
        nameWithType: VFXInstancer.GetVfx
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.GetVfx
    isDefinition: true
    commentId: Overload:Timba.SacredTails.VFXController.VFXInstancer.GetVfx
  Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime*:
    name:
      CSharp:
      - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime*
        name: GetVfxTime
        nameWithType: VFXInstancer.GetVfxTime
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime
      VB:
      - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime*
        name: GetVfxTime
        nameWithType: VFXInstancer.GetVfxTime
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime
    isDefinition: true
    commentId: Overload:Timba.SacredTails.VFXController.VFXInstancer.GetVfxTime
  Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay*:
    name:
      CSharp:
      - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay*
        name: GetVfxHitDelay
        nameWithType: VFXInstancer.GetVfxHitDelay
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay
      VB:
      - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay*
        name: GetVfxHitDelay
        nameWithType: VFXInstancer.GetVfxHitDelay
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay
    isDefinition: true
    commentId: Overload:Timba.SacredTails.VFXController.VFXInstancer.GetVfxHitDelay
  Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed*:
    name:
      CSharp:
      - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed*
        name: GetVfxIsReversed
        nameWithType: VFXInstancer.GetVfxIsReversed
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed
      VB:
      - id: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed*
        name: GetVfxIsReversed
        nameWithType: VFXInstancer.GetVfxIsReversed
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed
    isDefinition: true
    commentId: Overload:Timba.SacredTails.VFXController.VFXInstancer.GetVfxIsReversed
  Timba.SacredTails.VFXController.VFXInstancer:
    name:
      CSharp:
      - id: Timba.SacredTails.VFXController.VFXInstancer
        name: VFXInstancer
        nameWithType: VFXInstancer
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer
      VB:
      - id: Timba.SacredTails.VFXController.VFXInstancer
        name: VFXInstancer
        nameWithType: VFXInstancer
        qualifiedName: Timba.SacredTails.VFXController.VFXInstancer
    isDefinition: true
    commentId: T:Timba.SacredTails.VFXController.VFXInstancer
  Timba.SacredTails.VFXController:
    name:
      CSharp:
      - name: Timba.SacredTails.VFXController
        nameWithType: Timba.SacredTails.VFXController
        qualifiedName: Timba.SacredTails.VFXController
      VB:
      - name: Timba.SacredTails.VFXController
        nameWithType: Timba.SacredTails.VFXController
        qualifiedName: Timba.SacredTails.VFXController
    isDefinition: true
    commentId: N:Timba.SacredTails.VFXController
  Global.CalendarController:
    name:
      CSharp:
      - id: Global.CalendarController
        name: CalendarController
        nameWithType: CalendarController
        qualifiedName: CalendarController
        isExternal: true
      VB:
      - id: Global.CalendarController
        name: CalendarController
        nameWithType: CalendarController
        qualifiedName: CalendarController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CalendarController'
  Global.TMP_InputField:
    name:
      CSharp:
      - id: Global.TMP_InputField
        name: TMP_InputField
        nameWithType: TMP_InputField
        qualifiedName: TMP_InputField
        isExternal: true
      VB:
      - id: Global.TMP_InputField
        name: TMP_InputField
        nameWithType: TMP_InputField
        qualifiedName: TMP_InputField
        isExternal: true
    isDefinition: true
  Global.TMP_Dropdown:
    name:
      CSharp:
      - id: Global.TMP_Dropdown
        name: TMP_Dropdown
        nameWithType: TMP_Dropdown
        qualifiedName: TMP_Dropdown
        isExternal: true
      VB:
      - id: Global.TMP_Dropdown
        name: TMP_Dropdown
        nameWithType: TMP_Dropdown
        qualifiedName: TMP_Dropdown
        isExternal: true
    isDefinition: true
  Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed*
        name: CheckIfUserIsAllowed
        nameWithType: TournamentCreationController.CheckIfUserIsAllowed
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed*
        name: CheckIfUserIsAllowed
        nameWithType: TournamentCreationController.CheckIfUserIsAllowed
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentCreationController.CheckIfUserIsAllowed
  Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament*
        name: CreateTournament
        nameWithType: TournamentCreationController.CreateTournament
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament*
        name: CreateTournament
        nameWithType: TournamentCreationController.CreateTournament
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentCreationController.CreateTournament
  System.ValueTuple{System.String,ExecuteFunctionRequest}:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ExecuteFunctionRequest
        name: ExecuteFunctionRequest
        nameWithType: ExecuteFunctionRequest
        qualifiedName: ExecuteFunctionRequest
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ExecuteFunctionRequest
        name: ExecuteFunctionRequest
        nameWithType: ExecuteFunctionRequest
        qualifiedName: ExecuteFunctionRequest
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.ValueTuple`2
    parent: System
    commentId: T:System.ValueTuple{System.String,ExecuteFunctionRequest}
  Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData*
        name: FillBotData
        nameWithType: TournamentCreationController.FillBotData
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData*
        name: FillBotData
        nameWithType: TournamentCreationController.FillBotData
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentCreationController.FillBotData
  Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId*
        name: GenerateTournamentId
        nameWithType: TournamentCreationController.GenerateTournamentId
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId*
        name: GenerateTournamentId
        nameWithType: TournamentCreationController.GenerateTournamentId
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentCreationController.GenerateTournamentId
  Timba.SacredTails.TournamentBehavior.TournamentCreationController:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController
        name: TournamentCreationController
        nameWithType: TournamentCreationController
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentCreationController
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentCreationController
        name: TournamentCreationController
        nameWithType: TournamentCreationController
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentCreationController
    isDefinition: true
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentCreationController
  Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel*
        name: InitPlayerLabel
        nameWithType: SingleBracketPlayerLabelController.InitPlayerLabel
        qualifiedName: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel
      VB:
      - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel*
        name: InitPlayerLabel
        nameWithType: SingleBracketPlayerLabelController.InitPlayerLabel
        qualifiedName: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController.InitPlayerLabel
  Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController
        name: SingleBracketPlayerLabelController
        nameWithType: SingleBracketPlayerLabelController
        qualifiedName: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController
      VB:
      - id: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController
        name: SingleBracketPlayerLabelController
        nameWithType: SingleBracketPlayerLabelController
        qualifiedName: Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController
    isDefinition: true
    parent: Timba.SacredTails.TournamentBehavior
    commentId: T:Timba.SacredTails.TournamentBehavior.SingleBracketPlayerLabelController
  Timba.SacredTails.TournamentBehavior:
    name:
      CSharp:
      - name: Timba.SacredTails.TournamentBehavior
        nameWithType: Timba.SacredTails.TournamentBehavior
        qualifiedName: Timba.SacredTails.TournamentBehavior
      VB:
      - name: Timba.SacredTails.TournamentBehavior
        nameWithType: Timba.SacredTails.TournamentBehavior
        qualifiedName: Timba.SacredTails.TournamentBehavior
    isDefinition: true
    commentId: N:Timba.SacredTails.TournamentBehavior
  System.ValueTuple{System.Int32,System.Int32}:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.ValueTuple`2
    parent: System
    commentId: T:System.ValueTuple{System.Int32,System.Int32}
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets*
        name: GetTotalNumberOfStagesAndBrackets
        nameWithType: TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets*
        name: GetTotalNumberOfStagesAndBrackets
        nameWithType: TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetTotalNumberOfStagesAndBrackets
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable*
        name: OnEnable
        nameWithType: TournamentBracketsShowController.OnEnable
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable*
        name: OnEnable
        nameWithType: TournamentBracketsShowController.OnEnable
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.OnEnable
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament*
        name: ShowTestTournament
        nameWithType: TournamentBracketsShowController.ShowTestTournament
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament*
        name: ShowTestTournament
        nameWithType: TournamentBracketsShowController.ShowTestTournament
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.ShowTestTournament
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket*
        name: InitBracket
        nameWithType: TournamentBracketsShowController.InitBracket
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket*
        name: InitBracket
        nameWithType: TournamentBracketsShowController.InitBracket
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.InitBracket
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage*
        name: GetWinnersOfThisStage
        nameWithType: TournamentBracketsShowController.GetWinnersOfThisStage
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage*
        name: GetWinnersOfThisStage
        nameWithType: TournamentBracketsShowController.GetWinnersOfThisStage
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.GetWinnersOfThisStage
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets*
        name: SetCurrentBrackets
        nameWithType: TournamentBracketsShowController.SetCurrentBrackets
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets*
        name: SetCurrentBrackets
        nameWithType: TournamentBracketsShowController.SetCurrentBrackets
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetCurrentBrackets
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets*
        name: FillFutureBrackets
        nameWithType: TournamentBracketsShowController.FillFutureBrackets
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets*
        name: FillFutureBrackets
        nameWithType: TournamentBracketsShowController.FillFutureBrackets
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFutureBrackets
  Global.VerticalLayoutGroup:
    name:
      CSharp:
      - id: Global.VerticalLayoutGroup
        name: VerticalLayoutGroup
        nameWithType: VerticalLayoutGroup
        qualifiedName: VerticalLayoutGroup
        isExternal: true
      VB:
      - id: Global.VerticalLayoutGroup
        name: VerticalLayoutGroup
        nameWithType: VerticalLayoutGroup
        qualifiedName: VerticalLayoutGroup
        isExternal: true
    isDefinition: true
    commentId: '!:Global.VerticalLayoutGroup'
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets*
        name: SetSpacingBetweenBrackets
        nameWithType: TournamentBracketsShowController.SetSpacingBetweenBrackets
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets*
        name: SetSpacingBetweenBrackets
        nameWithType: TournamentBracketsShowController.SetSpacingBetweenBrackets
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.SetSpacingBetweenBrackets
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket*
        name: FillFinalBracket
        nameWithType: TournamentBracketsShowController.FillFinalBracket
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket*
        name: FillFinalBracket
        nameWithType: TournamentBracketsShowController.FillFinalBracket
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.FillFinalBracket
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel*
        name: CreateBracketLabel
        nameWithType: TournamentBracketsShowController.CreateBracketLabel
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel*
        name: CreateBracketLabel
        nameWithType: TournamentBracketsShowController.CreateBracketLabel
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController.CreateBracketLabel
  Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController
        name: TournamentBracketsShowController
        nameWithType: TournamentBracketsShowController
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController
        name: TournamentBracketsShowController
        nameWithType: TournamentBracketsShowController
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController
    isDefinition: true
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentBracketsShowController
  Global.DateTime:
    name:
      CSharp:
      - id: Global.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
      VB:
      - id: Global.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
    isDefinition: true
  System.Nullable{DateTime}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{DateTime}
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter*
        name: Enter
        nameWithType: TournamentReadyController.Enter
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter*
        name: Enter
        nameWithType: TournamentReadyController.Enter
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.Enter
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament*
        name: ShowTimerInitTournament
        nameWithType: TournamentReadyController.ShowTimerInitTournament
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament*
        name: ShowTimerInitTournament
        nameWithType: TournamentReadyController.ShowTimerInitTournament
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerInitTournament
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton*
        name: StartReadyButton
        nameWithType: TournamentReadyController.StartReadyButton
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton*
        name: StartReadyButton
        nameWithType: TournamentReadyController.StartReadyButton
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.StartReadyButton
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady*
        name: MarkAsReady
        nameWithType: TournamentReadyController.MarkAsReady
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady*
        name: MarkAsReady
        nameWithType: TournamentReadyController.MarkAsReady
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.MarkAsReady
  Global.SacredTailsPSDto`1:
    name:
      CSharp:
      - id: Global.SacredTailsPSDto`1
        name: SacredTailsPSDto
        nameWithType: SacredTailsPSDto
        qualifiedName: SacredTailsPSDto
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.SacredTailsPSDto`1
        name: SacredTailsPSDto
        nameWithType: SacredTailsPSDto
        qualifiedName: SacredTailsPSDto
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.SacredTailsPSDto`1'
  Global.SacredTailsPSDto{BracketsData}:
    name:
      CSharp:
      - id: Global.SacredTailsPSDto`1
        name: SacredTailsPSDto
        nameWithType: SacredTailsPSDto
        qualifiedName: SacredTailsPSDto
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BracketsData
        name: BracketsData
        nameWithType: BracketsData
        qualifiedName: BracketsData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.SacredTailsPSDto`1
        name: SacredTailsPSDto
        nameWithType: SacredTailsPSDto
        qualifiedName: SacredTailsPSDto
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BracketsData
        name: BracketsData
        nameWithType: BracketsData
        qualifiedName: BracketsData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.SacredTailsPSDto`1
    commentId: '!:Global.SacredTailsPSDto{BracketsData}'
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault*
        name: CheckIfWinByDefault
        nameWithType: TournamentReadyController.CheckIfWinByDefault
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault*
        name: CheckIfWinByDefault
        nameWithType: TournamentReadyController.CheckIfWinByDefault
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.CheckIfWinByDefault
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch*
        name: ShowPendingTimeAfterMatch
        nameWithType: TournamentReadyController.ShowPendingTimeAfterMatch
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch*
        name: ShowPendingTimeAfterMatch
        nameWithType: TournamentReadyController.ShowPendingTimeAfterMatch
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowPendingTimeAfterMatch
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage*
        name: GetTimerLeftForNextStage
        nameWithType: TournamentReadyController.GetTimerLeftForNextStage
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage*
        name: GetTimerLeftForNextStage
        nameWithType: TournamentReadyController.GetTimerLeftForNextStage
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.GetTimerLeftForNextStage
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable*
        name: OnEnable
        nameWithType: TournamentReadyController.OnEnable
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable*
        name: OnEnable
        nameWithType: TournamentReadyController.OnEnable
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnEnable
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable*
        name: OnDisable
        nameWithType: TournamentReadyController.OnDisable
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable*
        name: OnDisable
        nameWithType: TournamentReadyController.OnDisable
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.OnDisable
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch*
        name: CreateMatch
        nameWithType: TournamentReadyController.CreateMatch
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch*
        name: CreateMatch
        nameWithType: TournamentReadyController.CreateMatch
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.CreateMatch
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament*
        name: ExitTournament
        nameWithType: TournamentReadyController.ExitTournament
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament*
        name: ExitTournament
        nameWithType: TournamentReadyController.ExitTournament
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ExitTournament
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton*
        name: EnableReadyButton
        nameWithType: TournamentReadyController.EnableReadyButton
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton*
        name: EnableReadyButton
        nameWithType: TournamentReadyController.EnableReadyButton
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.EnableReadyButton
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer*
        name: ShowTimer
        nameWithType: TournamentReadyController.ShowTimer
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer*
        name: ShowTimer
        nameWithType: TournamentReadyController.ShowTimer
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimer
  Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine*
        name: ShowTimerCoroutine
        nameWithType: TournamentReadyController.ShowTimerCoroutine
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine*
        name: ShowTimerCoroutine
        nameWithType: TournamentReadyController.ShowTimerCoroutine
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentReadyController.ShowTimerCoroutine
  Timba.SacredTails.TournamentBehavior.TournamentReadyController:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController
        name: TournamentReadyController
        nameWithType: TournamentReadyController
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentReadyController
        name: TournamentReadyController
        nameWithType: TournamentReadyController
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentReadyController
    isDefinition: true
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentReadyController
  System.Collections.Generic.List{Timba.SacredTails.TournamentBehavior.TournamentSlot}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot
        name: TournamentSlot
        nameWithType: TournamentSlot
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot
        name: TournamentSlot
        nameWithType: TournamentSlot
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.TournamentBehavior.TournamentSlot}
  Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments*
        name: SearchAndShowTournaments
        nameWithType: SearchAndShow.SearchAndShowTournaments
        qualifiedName: Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments
      VB:
      - id: Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments*
        name: SearchAndShowTournaments
        nameWithType: SearchAndShow.SearchAndShowTournaments
        qualifiedName: Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.SearchAndShow.SearchAndShowTournaments
  Timba.SacredTails.TournamentBehavior.SearchAndShow:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.SearchAndShow
        name: SearchAndShow
        nameWithType: SearchAndShow
        qualifiedName: Timba.SacredTails.TournamentBehavior.SearchAndShow
      VB:
      - id: Timba.SacredTails.TournamentBehavior.SearchAndShow
        name: SearchAndShow
        nameWithType: SearchAndShow
        qualifiedName: Timba.SacredTails.TournamentBehavior.SearchAndShow
    isDefinition: true
    commentId: T:Timba.SacredTails.TournamentBehavior.SearchAndShow
  Timba.SacredTails.TournamentBehavior.TournamentEntry:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentEntry
        name: TournamentEntry
        nameWithType: TournamentEntry
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentEntry
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentEntry
        name: TournamentEntry
        nameWithType: TournamentEntry
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentEntry
    isDefinition: true
    parent: Timba.SacredTails.TournamentBehavior
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentEntry
  Global.Action{Timba.SacredTails.TournamentBehavior.TournamentSlot,System.String}:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot
        name: TournamentSlot
        nameWithType: TournamentSlot
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot
        name: TournamentSlot
        nameWithType: TournamentSlot
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`2
    commentId: '!:Global.Action{Timba.SacredTails.TournamentBehavior.TournamentSlot,System.String}'
  Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry*
        name: DrawEntry
        nameWithType: TournamentSlot.DrawEntry
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry*
        name: DrawEntry
        nameWithType: TournamentSlot.DrawEntry
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentSlot.DrawEntry
  Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected*
        name: ShowSelected
        nameWithType: TournamentSlot.ShowSelected
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected*
        name: ShowSelected
        nameWithType: TournamentSlot.ShowSelected
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowSelected
  Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected*
        name: ShowUnselected
        nameWithType: TournamentSlot.ShowUnselected
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected*
        name: ShowUnselected
        nameWithType: TournamentSlot.ShowUnselected
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentSlot.ShowUnselected
  Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament*
        name: JoinTournament
        nameWithType: TournamentSlot.JoinTournament
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament*
        name: JoinTournament
        nameWithType: TournamentSlot.JoinTournament
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournament
  Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick*:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick*
        name: OnPointerClick
        nameWithType: TournamentSlot.OnPointerClick
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick*
        name: OnPointerClick
        nameWithType: TournamentSlot.OnPointerClick
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick
    isDefinition: true
    commentId: Overload:Timba.SacredTails.TournamentBehavior.TournamentSlot.OnPointerClick
  Timba.SacredTails.TournamentBehavior.TournamentSlot:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot
        name: TournamentSlot
        nameWithType: TournamentSlot
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot
        name: TournamentSlot
        nameWithType: TournamentSlot
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot
    isDefinition: true
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentSlot
  Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto
        name: TournamentSlot.TournamentPlayerDataDto
        nameWithType: TournamentSlot.TournamentPlayerDataDto
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto
        name: TournamentSlot.TournamentPlayerDataDto
        nameWithType: TournamentSlot.TournamentPlayerDataDto
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto
    isDefinition: true
    parent: Timba.SacredTails.TournamentBehavior
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentSlot.TournamentPlayerDataDto
  Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto:
    name:
      CSharp:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto
        name: TournamentSlot.JoinTournamentDto
        nameWithType: TournamentSlot.JoinTournamentDto
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto
      VB:
      - id: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto
        name: TournamentSlot.JoinTournamentDto
        nameWithType: TournamentSlot.JoinTournamentDto
        qualifiedName: Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto
    isDefinition: true
    commentId: T:Timba.SacredTails.TournamentBehavior.TournamentSlot.JoinTournamentDto
  Timba.SacredTails.UiHelpers:
    name:
      CSharp:
      - name: Timba.SacredTails.UiHelpers
        nameWithType: Timba.SacredTails.UiHelpers
        qualifiedName: Timba.SacredTails.UiHelpers
      VB:
      - name: Timba.SacredTails.UiHelpers
        nameWithType: Timba.SacredTails.UiHelpers
        qualifiedName: Timba.SacredTails.UiHelpers
    isDefinition: true
    commentId: N:Timba.SacredTails.UiHelpers
  Timba.SacredTails.UiHelpers.CalendarDateItem:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarDateItem
        name: CalendarDateItem
        nameWithType: CalendarDateItem
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarDateItem
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarDateItem
        name: CalendarDateItem
        nameWithType: CalendarDateItem
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarDateItem
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.CalendarDateItem
  System.Collections.Generic.List{Timba.SacredTails.UiHelpers.CalendarDateItem}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.UiHelpers.CalendarDateItem
        name: CalendarDateItem
        nameWithType: CalendarDateItem
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarDateItem
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.UiHelpers.CalendarDateItem
        name: CalendarDateItem
        nameWithType: CalendarDateItem
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarDateItem
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.UiHelpers.CalendarDateItem}
  Timba.SacredTails.UiHelpers.CalendarController.YearPrev*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarController.YearPrev*
        name: YearPrev
        nameWithType: CalendarController.YearPrev
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.YearPrev
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarController.YearPrev*
        name: YearPrev
        nameWithType: CalendarController.YearPrev
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.YearPrev
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.CalendarController.YearPrev
  Timba.SacredTails.UiHelpers.CalendarController.YearNext*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarController.YearNext*
        name: YearNext
        nameWithType: CalendarController.YearNext
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.YearNext
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarController.YearNext*
        name: YearNext
        nameWithType: CalendarController.YearNext
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.YearNext
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.CalendarController.YearNext
  Timba.SacredTails.UiHelpers.CalendarController.MonthPrev*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarController.MonthPrev*
        name: MonthPrev
        nameWithType: CalendarController.MonthPrev
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.MonthPrev
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarController.MonthPrev*
        name: MonthPrev
        nameWithType: CalendarController.MonthPrev
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.MonthPrev
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.CalendarController.MonthPrev
  Timba.SacredTails.UiHelpers.CalendarController.MonthNext*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarController.MonthNext*
        name: MonthNext
        nameWithType: CalendarController.MonthNext
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.MonthNext
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarController.MonthNext*
        name: MonthNext
        nameWithType: CalendarController.MonthNext
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.MonthNext
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.CalendarController.MonthNext
  Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick*
        name: OnDateItemClick
        nameWithType: CalendarController.OnDateItemClick
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick*
        name: OnDateItemClick
        nameWithType: CalendarController.OnDateItemClick
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.CalendarController.OnDateItemClick
  Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate*
        name: CalendarHasDate
        nameWithType: CalendarController.CalendarHasDate
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate*
        name: CalendarHasDate
        nameWithType: CalendarController.CalendarHasDate
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.CalendarController.CalendarHasDate
  Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament*
        name: CreateDateForTournament
        nameWithType: CalendarController.CreateDateForTournament
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament*
        name: CreateDateForTournament
        nameWithType: CalendarController.CreateDateForTournament
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.CalendarController.CreateDateForTournament
  Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat*
        name: ParseDateNumberToCorrectFormat
        nameWithType: CalendarController.ParseDateNumberToCorrectFormat
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat*
        name: ParseDateNumberToCorrectFormat
        nameWithType: CalendarController.ParseDateNumberToCorrectFormat
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.CalendarController.ParseDateNumberToCorrectFormat
  Timba.SacredTails.UiHelpers.CalendarController:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarController
        name: CalendarController
        nameWithType: CalendarController
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarController
        name: CalendarController
        nameWithType: CalendarController
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarController
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.CalendarController
  Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick*
        name: OnDateItemClick
        nameWithType: CalendarDateItem.OnDateItemClick
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick
      VB:
      - id: Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick*
        name: OnDateItemClick
        nameWithType: CalendarDateItem.OnDateItemClick
        qualifiedName: Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.CalendarDateItem.OnDateItemClick
  Timba.SacredTails.UiHelpers.WoldPositionateUiElement:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
        name: WoldPositionateUiElement
        nameWithType: WoldPositionateUiElement
        qualifiedName: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
      VB:
      - id: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
        name: WoldPositionateUiElement
        nameWithType: WoldPositionateUiElement
        qualifiedName: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.WoldPositionateUiElement
  System.Collections.Generic.List{Timba.SacredTails.UiHelpers.WoldPositionateUiElement}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
        name: WoldPositionateUiElement
        nameWithType: WoldPositionateUiElement
        qualifiedName: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
        name: WoldPositionateUiElement
        nameWithType: WoldPositionateUiElement
        qualifiedName: Timba.SacredTails.UiHelpers.WoldPositionateUiElement
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.UiHelpers.WoldPositionateUiElement}
  Timba.SacredTails.UiHelpers.WoldPositionUIHandler:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler
        name: WoldPositionUIHandler
        nameWithType: WoldPositionUIHandler
        qualifiedName: Timba.SacredTails.UiHelpers.WoldPositionUIHandler
      VB:
      - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler
        name: WoldPositionUIHandler
        nameWithType: WoldPositionUIHandler
        qualifiedName: Timba.SacredTails.UiHelpers.WoldPositionUIHandler
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.WoldPositionUIHandler
  Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement*
        name: RegisterUiElement
        nameWithType: WoldPositionUIHandler.RegisterUiElement
        qualifiedName: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement
      VB:
      - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement*
        name: RegisterUiElement
        nameWithType: WoldPositionUIHandler.RegisterUiElement
        qualifiedName: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.WoldPositionUIHandler.RegisterUiElement
  Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement*
        name: UnregisterUiElement
        nameWithType: WoldPositionUIHandler.UnregisterUiElement
        qualifiedName: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement
      VB:
      - id: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement*
        name: UnregisterUiElement
        nameWithType: WoldPositionUIHandler.UnregisterUiElement
        qualifiedName: Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.WoldPositionUIHandler.UnregisterUiElement
  Timba.SacredTails.UiHelpers.ChangeSelectedWithTab:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.ChangeSelectedWithTab
        name: ChangeSelectedWithTab
        nameWithType: ChangeSelectedWithTab
        qualifiedName: Timba.SacredTails.UiHelpers.ChangeSelectedWithTab
      VB:
      - id: Timba.SacredTails.UiHelpers.ChangeSelectedWithTab
        name: ChangeSelectedWithTab
        nameWithType: ChangeSelectedWithTab
        qualifiedName: Timba.SacredTails.UiHelpers.ChangeSelectedWithTab
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.ChangeSelectedWithTab
  Timba.SacredTails.UiHelpers.EntryController.FillData*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.EntryController.FillData*
        name: FillData
        nameWithType: EntryController.FillData
        qualifiedName: Timba.SacredTails.UiHelpers.EntryController.FillData
      VB:
      - id: Timba.SacredTails.UiHelpers.EntryController.FillData*
        name: FillData
        nameWithType: EntryController.FillData
        qualifiedName: Timba.SacredTails.UiHelpers.EntryController.FillData
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.EntryController.FillData
  Timba.SacredTails.UiHelpers.EntryController:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.EntryController
        name: EntryController
        nameWithType: EntryController
        qualifiedName: Timba.SacredTails.UiHelpers.EntryController
      VB:
      - id: Timba.SacredTails.UiHelpers.EntryController
        name: EntryController
        nameWithType: EntryController
        qualifiedName: Timba.SacredTails.UiHelpers.EntryController
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.EntryController
  Timba.SacredTails.UiHelpers.IconSet:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IconSet
        name: IconSet
        nameWithType: IconSet
        qualifiedName: Timba.SacredTails.UiHelpers.IconSet
      VB:
      - id: Timba.SacredTails.UiHelpers.IconSet
        name: IconSet
        nameWithType: IconSet
        qualifiedName: Timba.SacredTails.UiHelpers.IconSet
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.IconSet
  System.Collections.Generic.List{Timba.SacredTails.UiHelpers.IconSet}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.UiHelpers.IconSet
        name: IconSet
        nameWithType: IconSet
        qualifiedName: Timba.SacredTails.UiHelpers.IconSet
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.UiHelpers.IconSet
        name: IconSet
        nameWithType: IconSet
        qualifiedName: Timba.SacredTails.UiHelpers.IconSet
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.UiHelpers.IconSet}
  System.Nullable{CharacterType}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{CharacterType}
  Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon*
        name: AssignIcon
        nameWithType: IconContainerSO.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon
      VB:
      - id: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon*
        name: AssignIcon
        nameWithType: IconContainerSO.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon
  Timba.SacredTails.UiHelpers.IconContainerSO:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IconContainerSO
        name: IconContainerSO
        nameWithType: IconContainerSO
        qualifiedName: Timba.SacredTails.UiHelpers.IconContainerSO
      VB:
      - id: Timba.SacredTails.UiHelpers.IconContainerSO
        name: IconContainerSO
        nameWithType: IconContainerSO
        qualifiedName: Timba.SacredTails.UiHelpers.IconContainerSO
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.IconContainerSO
  Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon*
        name: AssignIcon
        nameWithType: IUIHelpable.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon
      VB:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon*
        name: AssignIcon
        nameWithType: IUIHelpable.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon
  Timba.SacredTails.UiHelpers.IUIHelpable:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable
        name: IUIHelpable
        nameWithType: IUIHelpable
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable
      VB:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable
        name: IUIHelpable
        nameWithType: IUIHelpable
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.IUIHelpable
  Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize*
        name: setFixedHandleSize
        nameWithType: KeepScrollBar.setFixedHandleSize
        qualifiedName: Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize
      VB:
      - id: Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize*
        name: setFixedHandleSize
        nameWithType: KeepScrollBar.setFixedHandleSize
        qualifiedName: Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.KeepScrollBar.setFixedHandleSize
  Timba.SacredTails.UiHelpers.KeepScrollBar:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.KeepScrollBar
        name: KeepScrollBar
        nameWithType: KeepScrollBar
        qualifiedName: Timba.SacredTails.UiHelpers.KeepScrollBar
      VB:
      - id: Timba.SacredTails.UiHelpers.KeepScrollBar
        name: KeepScrollBar
        nameWithType: KeepScrollBar
        qualifiedName: Timba.SacredTails.UiHelpers.KeepScrollBar
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.KeepScrollBar
  Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
        name: LeaderboardElement.ElementData
        nameWithType: LeaderboardElement.ElementData
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
      VB:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
        name: LeaderboardElement.ElementData
        nameWithType: LeaderboardElement.ElementData
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.LeaderboardElement.ElementData
  Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject*
        name: ElementDataObject
        nameWithType: LeaderboardElement.ElementDataObject
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject
      VB:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject*
        name: ElementDataObject
        nameWithType: LeaderboardElement.ElementDataObject
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.LeaderboardElement.ElementDataObject
  Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement*
        name: DrawElement
        nameWithType: LeaderboardElement.DrawElement
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement
      VB:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement*
        name: DrawElement
        nameWithType: LeaderboardElement.DrawElement
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.LeaderboardElement.DrawElement
  Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition*
        name: ChangePosition
        nameWithType: LeaderboardElement.ChangePosition
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition
      VB:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition*
        name: ChangePosition
        nameWithType: LeaderboardElement.ChangePosition
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.LeaderboardElement.ChangePosition
  Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories*
        name: ChangeVictories
        nameWithType: LeaderboardElement.ChangeVictories
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories
      VB:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories*
        name: ChangeVictories
        nameWithType: LeaderboardElement.ChangeVictories
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.LeaderboardElement.ChangeVictories
  Timba.SacredTails.UiHelpers.LeaderboardElement:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement
        name: LeaderboardElement
        nameWithType: LeaderboardElement
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement
      VB:
      - id: Timba.SacredTails.UiHelpers.LeaderboardElement
        name: LeaderboardElement
        nameWithType: LeaderboardElement
        qualifiedName: Timba.SacredTails.UiHelpers.LeaderboardElement
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.LeaderboardElement
  Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton*
        name: SelectButton
        nameWithType: SelectableButtonGroup.SelectButton
        qualifiedName: Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton
      VB:
      - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton*
        name: SelectButton
        nameWithType: SelectableButtonGroup.SelectButton
        qualifiedName: Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.SelectableButtonGroup.SelectButton
  Timba.SacredTails.UiHelpers.SelectableButtonGroup:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup
        name: SelectableButtonGroup
        nameWithType: SelectableButtonGroup
        qualifiedName: Timba.SacredTails.UiHelpers.SelectableButtonGroup
      VB:
      - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup
        name: SelectableButtonGroup
        nameWithType: SelectableButtonGroup
        qualifiedName: Timba.SacredTails.UiHelpers.SelectableButtonGroup
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.SelectableButtonGroup
  Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList
        name: SelectableButtonGroup.ButtonList
        nameWithType: SelectableButtonGroup.ButtonList
        qualifiedName: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList
      VB:
      - id: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList
        name: SelectableButtonGroup.ButtonList
        nameWithType: SelectableButtonGroup.ButtonList
        qualifiedName: Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.SelectableButtonGroup.ButtonList
  Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon*
        name: AssignIcon
        nameWithType: TypeIconAsigner.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon
      VB:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon*
        name: AssignIcon
        nameWithType: TypeIconAsigner.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon
  Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType}):
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
        name: AssignIcon
        nameWithType: IUIHelpable.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
        name: AssignIcon
        nameWithType: IUIHelpable.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers.IUIHelpable
    commentId: M:Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
  Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady*
        name: IsReady
        nameWithType: TypeIconAsigner.IsReady
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady
      VB:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady*
        name: IsReady
        nameWithType: TypeIconAsigner.IsReady
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady
  Timba.SacredTails.UiHelpers.TypeIconAsigner:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner
        name: TypeIconAsigner
        nameWithType: TypeIconAsigner
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner
      VB:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner
        name: TypeIconAsigner
        nameWithType: TypeIconAsigner
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.TypeIconAsigner
  System.Collections.Generic.List{Timba.SacredTails.UiHelpers.UIGroups.UiGroup}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
        name: UIGroups.UiGroup
        nameWithType: UIGroups.UiGroup
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
        name: UIGroups.UiGroup
        nameWithType: UIGroups.UiGroup
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.UiHelpers.UIGroups.UiGroup}
  Timba.SacredTails.UiHelpers.UIGroups:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.UIGroups
        name: UIGroups
        nameWithType: UIGroups
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups
      VB:
      - id: Timba.SacredTails.UiHelpers.UIGroups
        name: UIGroups
        nameWithType: UIGroups
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.UIGroups
  Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup*
        name: ShowOnlyThisGroup
        nameWithType: UIGroups.ShowOnlyThisGroup
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup
      VB:
      - id: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup*
        name: ShowOnlyThisGroup
        nameWithType: UIGroups.ShowOnlyThisGroup
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroup
  Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating*
        name: ShowOnlyThisGroupWithDeactivating
        nameWithType: UIGroups.ShowOnlyThisGroupWithDeactivating
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating
      VB:
      - id: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating*
        name: ShowOnlyThisGroupWithDeactivating
        nameWithType: UIGroups.ShowOnlyThisGroupWithDeactivating
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.UIGroups.ShowOnlyThisGroupWithDeactivating
  Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel*
        name: NotifyDynamicPanel
        nameWithType: UIGroups.NotifyDynamicPanel
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel
      VB:
      - id: Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel*
        name: NotifyDynamicPanel
        nameWithType: UIGroups.NotifyDynamicPanel
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.UIGroups.NotifyDynamicPanel
  System.Collections.Generic.List{CanvasGroup}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CanvasGroup
        name: CanvasGroup
        nameWithType: CanvasGroup
        qualifiedName: CanvasGroup
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CanvasGroup
        name: CanvasGroup
        nameWithType: CanvasGroup
        qualifiedName: CanvasGroup
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CanvasGroup}
  Timba.SacredTails.UiHelpers.UIGroups.UiGroup:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
        name: UIGroups.UiGroup
        nameWithType: UIGroups.UiGroup
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
      VB:
      - id: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
        name: UIGroups.UiGroup
        nameWithType: UIGroups.UiGroup
        qualifiedName: Timba.SacredTails.UiHelpers.UIGroups.UiGroup
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.UIGroups.UiGroup
  Global.IPointerUpHandler:
    name:
      CSharp:
      - id: Global.IPointerUpHandler
        name: IPointerUpHandler
        nameWithType: IPointerUpHandler
        qualifiedName: IPointerUpHandler
        isExternal: true
      VB:
      - id: Global.IPointerUpHandler
        name: IPointerUpHandler
        nameWithType: IPointerUpHandler
        qualifiedName: IPointerUpHandler
        isExternal: true
    isDefinition: true
    commentId: '!:Global.IPointerUpHandler'
  Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown*
        name: OnPointerDown
        nameWithType: ScrollButton.OnPointerDown
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown
      VB:
      - id: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown*
        name: OnPointerDown
        nameWithType: ScrollButton.OnPointerDown
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.ScrollButton.OnPointerDown
  Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp*
        name: OnPointerUp
        nameWithType: ScrollButton.OnPointerUp
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp
      VB:
      - id: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp*
        name: OnPointerUp
        nameWithType: ScrollButton.OnPointerUp
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.ScrollButton.OnPointerUp
  Timba.SacredTails.UiHelpers.ScrollButton:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.ScrollButton
        name: ScrollButton
        nameWithType: ScrollButton
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollButton
      VB:
      - id: Timba.SacredTails.UiHelpers.ScrollButton
        name: ScrollButton
        nameWithType: ScrollButton
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollButton
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.ScrollButton
  Timba.SacredTails.UiHelpers.ScrollViewSystem.Start*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.ScrollViewSystem.Start*
        name: Start
        nameWithType: ScrollViewSystem.Start
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollViewSystem.Start
      VB:
      - id: Timba.SacredTails.UiHelpers.ScrollViewSystem.Start*
        name: Start
        nameWithType: ScrollViewSystem.Start
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollViewSystem.Start
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.ScrollViewSystem.Start
  Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll*
        name: LeftScroll
        nameWithType: ScrollViewSystem.LeftScroll
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll
      VB:
      - id: Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll*
        name: LeftScroll
        nameWithType: ScrollViewSystem.LeftScroll
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.ScrollViewSystem.LeftScroll
  Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll*
        name: RightScroll
        nameWithType: ScrollViewSystem.RightScroll
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll
      VB:
      - id: Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll*
        name: RightScroll
        nameWithType: ScrollViewSystem.RightScroll
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.ScrollViewSystem.RightScroll
  Timba.SacredTails.UiHelpers.ScrollViewSystem:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.ScrollViewSystem
        name: ScrollViewSystem
        nameWithType: ScrollViewSystem
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollViewSystem
      VB:
      - id: Timba.SacredTails.UiHelpers.ScrollViewSystem
        name: ScrollViewSystem
        nameWithType: ScrollViewSystem
        qualifiedName: Timba.SacredTails.UiHelpers.ScrollViewSystem
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.ScrollViewSystem
  Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType*
        name: CallByShinseiType
        nameWithType: BackgroundTypeSwapper.CallByShinseiType
        qualifiedName: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType
      VB:
      - id: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType*
        name: CallByShinseiType
        nameWithType: BackgroundTypeSwapper.CallByShinseiType
        qualifiedName: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.CallByShinseiType
  Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType*
        name: SetImageSpriteByType
        nameWithType: BackgroundTypeSwapper.SetImageSpriteByType
        qualifiedName: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType
      VB:
      - id: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType*
        name: SetImageSpriteByType
        nameWithType: BackgroundTypeSwapper.SetImageSpriteByType
        qualifiedName: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.BackgroundTypeSwapper.SetImageSpriteByType
  Timba.SacredTails.UiHelpers.BackgroundTypeSwapper:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper
        name: BackgroundTypeSwapper
        nameWithType: BackgroundTypeSwapper
        qualifiedName: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper
      VB:
      - id: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper
        name: BackgroundTypeSwapper
        nameWithType: BackgroundTypeSwapper
        qualifiedName: Timba.SacredTails.UiHelpers.BackgroundTypeSwapper
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.BackgroundTypeSwapper
  Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition*
        name: EnablePosition
        nameWithType: PositionCounter.EnablePosition
        qualifiedName: Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition
      VB:
      - id: Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition*
        name: EnablePosition
        nameWithType: PositionCounter.EnablePosition
        qualifiedName: Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.PositionCounter.EnablePosition
  Timba.SacredTails.UiHelpers.PositionCounter:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.PositionCounter
        name: PositionCounter
        nameWithType: PositionCounter
        qualifiedName: Timba.SacredTails.UiHelpers.PositionCounter
      VB:
      - id: Timba.SacredTails.UiHelpers.PositionCounter
        name: PositionCounter
        nameWithType: PositionCounter
        qualifiedName: Timba.SacredTails.UiHelpers.PositionCounter
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.PositionCounter
  Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable*
        name: Enable
        nameWithType: SeekMouseIntoScreen.Enable
        qualifiedName: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable
      VB:
      - id: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable*
        name: Enable
        nameWithType: SeekMouseIntoScreen.Enable
        qualifiedName: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.SeekMouseIntoScreen.Enable
  Timba.SacredTails.UiHelpers.SeekMouseIntoScreen:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen
        name: SeekMouseIntoScreen
        nameWithType: SeekMouseIntoScreen
        qualifiedName: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen
      VB:
      - id: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen
        name: SeekMouseIntoScreen
        nameWithType: SeekMouseIntoScreen
        qualifiedName: Timba.SacredTails.UiHelpers.SeekMouseIntoScreen
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.SeekMouseIntoScreen
  Global.Collider:
    name:
      CSharp:
      - id: Global.Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
      VB:
      - id: Global.Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
    isDefinition: true
  Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter*:
    name:
      CSharp:
      - id: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter*
        name: OnTriggerEnter
        nameWithType: CameraTriggerChange.OnTriggerEnter
        qualifiedName: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter
      VB:
      - id: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter*
        name: OnTriggerEnter
        nameWithType: CameraTriggerChange.OnTriggerEnter
        qualifiedName: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerEnter
  Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit*:
    name:
      CSharp:
      - id: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit*
        name: OnTriggerExit
        nameWithType: CameraTriggerChange.OnTriggerExit
        qualifiedName: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit
      VB:
      - id: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit*
        name: OnTriggerExit
        nameWithType: CameraTriggerChange.OnTriggerExit
        qualifiedName: Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CameraModule.CameraTriggerChange.OnTriggerExit
  Timba.SacredTails.CameraModule.CameraTriggerChange:
    name:
      CSharp:
      - id: Timba.SacredTails.CameraModule.CameraTriggerChange
        name: CameraTriggerChange
        nameWithType: CameraTriggerChange
        qualifiedName: Timba.SacredTails.CameraModule.CameraTriggerChange
      VB:
      - id: Timba.SacredTails.CameraModule.CameraTriggerChange
        name: CameraTriggerChange
        nameWithType: CameraTriggerChange
        qualifiedName: Timba.SacredTails.CameraModule.CameraTriggerChange
    isDefinition: true
    commentId: T:Timba.SacredTails.CameraModule.CameraTriggerChange
  Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera*:
    name:
      CSharp:
      - id: Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera*
        name: ChangeCamera
        nameWithType: ViewerCameraChange.ChangeCamera
        qualifiedName: Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera
      VB:
      - id: Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera*
        name: ChangeCamera
        nameWithType: ViewerCameraChange.ChangeCamera
        qualifiedName: Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CameraModule.ViewerCameraChange.ChangeCamera
  Timba.SacredTails.CameraModule.ViewerCameraChange:
    name:
      CSharp:
      - id: Timba.SacredTails.CameraModule.ViewerCameraChange
        name: ViewerCameraChange
        nameWithType: ViewerCameraChange
        qualifiedName: Timba.SacredTails.CameraModule.ViewerCameraChange
      VB:
      - id: Timba.SacredTails.CameraModule.ViewerCameraChange
        name: ViewerCameraChange
        nameWithType: ViewerCameraChange
        qualifiedName: Timba.SacredTails.CameraModule.ViewerCameraChange
    isDefinition: true
    commentId: T:Timba.SacredTails.CameraModule.ViewerCameraChange
  Timba.SacredTails.CameraModule:
    name:
      CSharp:
      - name: Timba.SacredTails.CameraModule
        nameWithType: Timba.SacredTails.CameraModule
        qualifiedName: Timba.SacredTails.CameraModule
      VB:
      - name: Timba.SacredTails.CameraModule
        nameWithType: Timba.SacredTails.CameraModule
        qualifiedName: Timba.SacredTails.CameraModule
    isDefinition: true
    commentId: N:Timba.SacredTails.CameraModule
  Global.RenderPipelineAsset[]:
    name:
      CSharp:
      - id: Global.RenderPipelineAsset
        name: RenderPipelineAsset
        nameWithType: RenderPipelineAsset
        qualifiedName: RenderPipelineAsset
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.RenderPipelineAsset
        name: RenderPipelineAsset
        nameWithType: RenderPipelineAsset
        qualifiedName: RenderPipelineAsset
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.Terrain:
    name:
      CSharp:
      - id: Global.Terrain
        name: Terrain
        nameWithType: Terrain
        qualifiedName: Terrain
        isExternal: true
      VB:
      - id: Global.Terrain
        name: Terrain
        nameWithType: Terrain
        qualifiedName: Terrain
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Terrain'
  Global.Toggle:
    name:
      CSharp:
      - id: Global.Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: Toggle
        isExternal: true
      VB:
      - id: Global.Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: Toggle
        isExternal: true
    isDefinition: true
  Timba.SacredTails.OptionsModule.GameSettingsController.Start*:
    name:
      CSharp:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.Start*
        name: Start
        nameWithType: GameSettingsController.Start
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.Start
      VB:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.Start*
        name: Start
        nameWithType: GameSettingsController.Start
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.Start
    isDefinition: true
    commentId: Overload:Timba.SacredTails.OptionsModule.GameSettingsController.Start
  Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract*:
    name:
      CSharp:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract*
        name: SettingsButtonInteract
        nameWithType: GameSettingsController.SettingsButtonInteract
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract
      VB:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract*
        name: SettingsButtonInteract
        nameWithType: GameSettingsController.SettingsButtonInteract
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract
    isDefinition: true
    commentId: Overload:Timba.SacredTails.OptionsModule.GameSettingsController.SettingsButtonInteract
  Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen*:
    name:
      CSharp:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen*
        name: ChangeFullScreen
        nameWithType: GameSettingsController.ChangeFullScreen
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen
      VB:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen*
        name: ChangeFullScreen
        nameWithType: GameSettingsController.ChangeFullScreen
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen
    isDefinition: true
    commentId: Overload:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeFullScreen
  Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution*:
    name:
      CSharp:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution*
        name: ChangeResolution
        nameWithType: GameSettingsController.ChangeResolution
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution
      VB:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution*
        name: ChangeResolution
        nameWithType: GameSettingsController.ChangeResolution
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution
    isDefinition: true
    commentId: Overload:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeResolution
  Global.Vector2Int:
    name:
      CSharp:
      - id: Global.Vector2Int
        name: Vector2Int
        nameWithType: Vector2Int
        qualifiedName: Vector2Int
        isExternal: true
      VB:
      - id: Global.Vector2Int
        name: Vector2Int
        nameWithType: Vector2Int
        qualifiedName: Vector2Int
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Vector2Int'
  Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution*:
    name:
      CSharp:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution*
        name: GetResolution
        nameWithType: GameSettingsController.GetResolution
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution
      VB:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution*
        name: GetResolution
        nameWithType: GameSettingsController.GetResolution
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution
    isDefinition: true
    commentId: Overload:Timba.SacredTails.OptionsModule.GameSettingsController.GetResolution
  Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings*:
    name:
      CSharp:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings*
        name: ChangeGraphicSettings
        nameWithType: GameSettingsController.ChangeGraphicSettings
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings
      VB:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings*
        name: ChangeGraphicSettings
        nameWithType: GameSettingsController.ChangeGraphicSettings
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings
    isDefinition: true
    commentId: Overload:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeGraphicSettings
  Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter*:
    name:
      CSharp:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter*
        name: ChangeBadWordFilter
        nameWithType: GameSettingsController.ChangeBadWordFilter
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter
      VB:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter*
        name: ChangeBadWordFilter
        nameWithType: GameSettingsController.ChangeBadWordFilter
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter
    isDefinition: true
    commentId: Overload:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeBadWordFilter
  Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout*:
    name:
      CSharp:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout*
        name: ChangeKeyboardLayout
        nameWithType: GameSettingsController.ChangeKeyboardLayout
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout
      VB:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout*
        name: ChangeKeyboardLayout
        nameWithType: GameSettingsController.ChangeKeyboardLayout
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout
    isDefinition: true
    commentId: Overload:Timba.SacredTails.OptionsModule.GameSettingsController.ChangeKeyboardLayout
  Timba.SacredTails.OptionsModule.GameSettingsController:
    name:
      CSharp:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController
        name: GameSettingsController
        nameWithType: GameSettingsController
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController
      VB:
      - id: Timba.SacredTails.OptionsModule.GameSettingsController
        name: GameSettingsController
        nameWithType: GameSettingsController
        qualifiedName: Timba.SacredTails.OptionsModule.GameSettingsController
    isDefinition: true
    commentId: T:Timba.SacredTails.OptionsModule.GameSettingsController
  Timba.SacredTails.OptionsModule:
    name:
      CSharp:
      - name: Timba.SacredTails.OptionsModule
        nameWithType: Timba.SacredTails.OptionsModule
        qualifiedName: Timba.SacredTails.OptionsModule
      VB:
      - name: Timba.SacredTails.OptionsModule
        nameWithType: Timba.SacredTails.OptionsModule
        qualifiedName: Timba.SacredTails.OptionsModule
    isDefinition: true
    commentId: N:Timba.SacredTails.OptionsModule
  System.Collections.Generic.List{Toggle}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: Toggle
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Toggle
        name: Toggle
        nameWithType: Toggle
        qualifiedName: Toggle
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Toggle}
  Timba.SacredTails.ChatModule.FilterController.CallApplyFilters*:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.FilterController.CallApplyFilters*
        name: CallApplyFilters
        nameWithType: FilterController.CallApplyFilters
        qualifiedName: Timba.SacredTails.ChatModule.FilterController.CallApplyFilters
      VB:
      - id: Timba.SacredTails.ChatModule.FilterController.CallApplyFilters*
        name: CallApplyFilters
        nameWithType: FilterController.CallApplyFilters
        qualifiedName: Timba.SacredTails.ChatModule.FilterController.CallApplyFilters
    isDefinition: true
    commentId: Overload:Timba.SacredTails.ChatModule.FilterController.CallApplyFilters
  Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast*:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast*
        name: ChangeAllMinusLast
        nameWithType: FilterController.ChangeAllMinusLast
        qualifiedName: Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast
      VB:
      - id: Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast*
        name: ChangeAllMinusLast
        nameWithType: FilterController.ChangeAllMinusLast
        qualifiedName: Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast
    isDefinition: true
    commentId: Overload:Timba.SacredTails.ChatModule.FilterController.ChangeAllMinusLast
  Timba.SacredTails.ChatModule.FilterController.IfAnyDisable*:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.FilterController.IfAnyDisable*
        name: IfAnyDisable
        nameWithType: FilterController.IfAnyDisable
        qualifiedName: Timba.SacredTails.ChatModule.FilterController.IfAnyDisable
      VB:
      - id: Timba.SacredTails.ChatModule.FilterController.IfAnyDisable*
        name: IfAnyDisable
        nameWithType: FilterController.IfAnyDisable
        qualifiedName: Timba.SacredTails.ChatModule.FilterController.IfAnyDisable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.ChatModule.FilterController.IfAnyDisable
  Timba.SacredTails.ChatModule.FilterController.IfAllEnable*:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.FilterController.IfAllEnable*
        name: IfAllEnable
        nameWithType: FilterController.IfAllEnable
        qualifiedName: Timba.SacredTails.ChatModule.FilterController.IfAllEnable
      VB:
      - id: Timba.SacredTails.ChatModule.FilterController.IfAllEnable*
        name: IfAllEnable
        nameWithType: FilterController.IfAllEnable
        qualifiedName: Timba.SacredTails.ChatModule.FilterController.IfAllEnable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.ChatModule.FilterController.IfAllEnable
  Timba.SacredTails.ChatModule.FilterController:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.FilterController
        name: FilterController
        nameWithType: FilterController
        qualifiedName: Timba.SacredTails.ChatModule.FilterController
      VB:
      - id: Timba.SacredTails.ChatModule.FilterController
        name: FilterController
        nameWithType: FilterController
        qualifiedName: Timba.SacredTails.ChatModule.FilterController
    isDefinition: true
    commentId: T:Timba.SacredTails.ChatModule.FilterController
  Timba.SacredTails.ChatModule:
    name:
      CSharp:
      - name: Timba.SacredTails.ChatModule
        nameWithType: Timba.SacredTails.ChatModule
        qualifiedName: Timba.SacredTails.ChatModule
      VB:
      - name: Timba.SacredTails.ChatModule
        nameWithType: Timba.SacredTails.ChatModule
        qualifiedName: Timba.SacredTails.ChatModule
    isDefinition: true
    commentId: N:Timba.SacredTails.ChatModule
  Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis
        name: ChatEmojis.DiccionaryOfEmojis
        nameWithType: ChatEmojis.DiccionaryOfEmojis
        qualifiedName: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis
      VB:
      - id: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis
        name: ChatEmojis.DiccionaryOfEmojis
        nameWithType: ChatEmojis.DiccionaryOfEmojis
        qualifiedName: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis
    isDefinition: true
    parent: Timba.SacredTails.ChatModule
    commentId: T:Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis
  Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue*:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue*
        name: OnChangeValue
        nameWithType: ChatEmojis.OnChangeValue
        qualifiedName: Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue
      VB:
      - id: Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue*
        name: OnChangeValue
        nameWithType: ChatEmojis.OnChangeValue
        qualifiedName: Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue
    isDefinition: true
    commentId: Overload:Timba.SacredTails.ChatModule.ChatEmojis.OnChangeValue
  Timba.SacredTails.ChatModule.ChatEmojis.Update*:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.ChatEmojis.Update*
        name: Update
        nameWithType: ChatEmojis.Update
        qualifiedName: Timba.SacredTails.ChatModule.ChatEmojis.Update
      VB:
      - id: Timba.SacredTails.ChatModule.ChatEmojis.Update*
        name: Update
        nameWithType: ChatEmojis.Update
        qualifiedName: Timba.SacredTails.ChatModule.ChatEmojis.Update
    isDefinition: true
    commentId: Overload:Timba.SacredTails.ChatModule.ChatEmojis.Update
  Timba.SacredTails.ChatModule.ChatEmojis:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.ChatEmojis
        name: ChatEmojis
        nameWithType: ChatEmojis
        qualifiedName: Timba.SacredTails.ChatModule.ChatEmojis
      VB:
      - id: Timba.SacredTails.ChatModule.ChatEmojis
        name: ChatEmojis
        nameWithType: ChatEmojis
        qualifiedName: Timba.SacredTails.ChatModule.ChatEmojis
    isDefinition: true
    commentId: T:Timba.SacredTails.ChatModule.ChatEmojis
  Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey*:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey*
        name: GetByKey
        nameWithType: ChatEmojis.DiccionaryOfEmojis.GetByKey
        qualifiedName: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey
      VB:
      - id: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey*
        name: GetByKey
        nameWithType: ChatEmojis.DiccionaryOfEmojis.GetByKey
        qualifiedName: Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey
    isDefinition: true
    commentId: Overload:Timba.SacredTails.ChatModule.ChatEmojis.DiccionaryOfEmojis.GetByKey
  Timba.SacredTails.ChatModule.EmojiButton:
    name:
      CSharp:
      - id: Timba.SacredTails.ChatModule.EmojiButton
        name: EmojiButton
        nameWithType: EmojiButton
        qualifiedName: Timba.SacredTails.ChatModule.EmojiButton
      VB:
      - id: Timba.SacredTails.ChatModule.EmojiButton
        name: EmojiButton
        nameWithType: EmojiButton
        qualifiedName: Timba.SacredTails.ChatModule.EmojiButton
    isDefinition: true
    commentId: T:Timba.SacredTails.ChatModule.EmojiButton
  Utils.Singleton{Timba.SacredTails.Lobby.PlayerCameraFollow}:
    name:
      CSharp:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow
        name: PlayerCameraFollow
        nameWithType: PlayerCameraFollow
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow
        name: PlayerCameraFollow
        nameWithType: PlayerCameraFollow
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Utils.Singleton`1
    parent: Utils
    commentId: T:Utils.Singleton{Timba.SacredTails.Lobby.PlayerCameraFollow}
  System.Collections.Generic.List{CinemachineVirtualCamera}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CinemachineVirtualCamera
        name: CinemachineVirtualCamera
        nameWithType: CinemachineVirtualCamera
        qualifiedName: CinemachineVirtualCamera
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CinemachineVirtualCamera
        name: CinemachineVirtualCamera
        nameWithType: CinemachineVirtualCamera
        qualifiedName: CinemachineVirtualCamera
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CinemachineVirtualCamera}
  Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer*:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer*
        name: FollowPlayer
        nameWithType: PlayerCameraFollow.FollowPlayer
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer
      VB:
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer*
        name: FollowPlayer
        nameWithType: PlayerCameraFollow.FollowPlayer
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer
  Timba.SacredTails.Lobby.PlayerCameraFollow:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow
        name: PlayerCameraFollow
        nameWithType: PlayerCameraFollow
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow
      VB:
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow
        name: PlayerCameraFollow
        nameWithType: PlayerCameraFollow
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow
    isDefinition: true
    commentId: T:Timba.SacredTails.Lobby.PlayerCameraFollow
  Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei*
        name: SpawnOtherShinsei
        nameWithType: ShinseiSpawner.SpawnOtherShinsei
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei
      VB:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei*
        name: SpawnOtherShinsei
        nameWithType: ShinseiSpawner.SpawnOtherShinsei
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei
  Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn*
        name: OnSpawn
        nameWithType: ShinseiSpawner.OnSpawn
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn
      VB:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn*
        name: OnSpawn
        nameWithType: ShinseiSpawner.OnSpawn
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn
  Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei*
        name: ChangeCurrentShinsei
        nameWithType: ShinseiSpawner.ChangeCurrentShinsei
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei
      VB:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei*
        name: ChangeCurrentShinsei
        nameWithType: ShinseiSpawner.ChangeCurrentShinsei
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei
  Timba.SacredTails.Lobby.ShinseiSpawner:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner
        name: ShinseiSpawner
        nameWithType: ShinseiSpawner
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner
      VB:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner
        name: ShinseiSpawner
        nameWithType: ShinseiSpawner
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner
    isDefinition: true
    commentId: T:Timba.SacredTails.Lobby.ShinseiSpawner
  Timba.SacredTails.Lobby:
    name:
      CSharp:
      - name: Timba.SacredTails.Lobby
        nameWithType: Timba.SacredTails.Lobby
        qualifiedName: Timba.SacredTails.Lobby
      VB:
      - name: Timba.SacredTails.Lobby
        nameWithType: Timba.SacredTails.Lobby
        qualifiedName: Timba.SacredTails.Lobby
    isDefinition: true
    commentId: N:Timba.SacredTails.Lobby
  Timba.SacredTails.Interaction.SittableMechanic:
    name:
      CSharp:
      - id: Timba.SacredTails.Interaction.SittableMechanic
        name: SittableMechanic
        nameWithType: SittableMechanic
        qualifiedName: Timba.SacredTails.Interaction.SittableMechanic
      VB:
      - id: Timba.SacredTails.Interaction.SittableMechanic
        name: SittableMechanic
        nameWithType: SittableMechanic
        qualifiedName: Timba.SacredTails.Interaction.SittableMechanic
    isDefinition: true
    commentId: T:Timba.SacredTails.Interaction.SittableMechanic
  Timba.SacredTails.Interaction:
    name:
      CSharp:
      - name: Timba.SacredTails.Interaction
        nameWithType: Timba.SacredTails.Interaction
        qualifiedName: Timba.SacredTails.Interaction
      VB:
      - name: Timba.SacredTails.Interaction
        nameWithType: Timba.SacredTails.Interaction
        qualifiedName: Timba.SacredTails.Interaction
    isDefinition: true
    commentId: N:Timba.SacredTails.Interaction
  Timba.SacredTails.CardStoreModule.Card:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.Card
        name: Card
        nameWithType: Card
        qualifiedName: Timba.SacredTails.CardStoreModule.Card
      VB:
      - id: Timba.SacredTails.CardStoreModule.Card
        name: Card
        nameWithType: Card
        qualifiedName: Timba.SacredTails.CardStoreModule.Card
    isDefinition: true
    commentId: T:Timba.SacredTails.CardStoreModule.Card
  Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager*
        name: InitCardManager
        nameWithType: CardManagementController.InitCardManager
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager*
        name: InitCardManager
        nameWithType: CardManagementController.InitCardManager
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardManagementController.InitCardManager
  Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard*
        name: AddSelectedCard
        nameWithType: CardManagementController.AddSelectedCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard*
        name: AddSelectedCard
        nameWithType: CardManagementController.AddSelectedCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardManagementController.AddSelectedCard
  Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard*
        name: RemoveSelectedCard
        nameWithType: CardManagementController.RemoveSelectedCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard*
        name: RemoveSelectedCard
        nameWithType: CardManagementController.RemoveSelectedCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardManagementController.RemoveSelectedCard
  Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard*
        name: SelectTargetCard
        nameWithType: CardManagementController.SelectTargetCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard*
        name: SelectTargetCard
        nameWithType: CardManagementController.SelectTargetCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardManagementController.SelectTargetCard
  Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard*
        name: DeselectTargetCard
        nameWithType: CardManagementController.DeselectTargetCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard*
        name: DeselectTargetCard
        nameWithType: CardManagementController.DeselectTargetCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardManagementController.DeselectTargetCard
  Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard*
        name: ChangeTargetShinseiCard
        nameWithType: CardManagementController.ChangeTargetShinseiCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard*
        name: ChangeTargetShinseiCard
        nameWithType: CardManagementController.ChangeTargetShinseiCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardManagementController.ChangeTargetShinseiCard
  Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck*
        name: AddCardInDeck
        nameWithType: CardManagementController.AddCardInDeck
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck*
        name: AddCardInDeck
        nameWithType: CardManagementController.AddCardInDeck
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardManagementController.AddCardInDeck
  Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck*
        name: RemoveCardInDeck
        nameWithType: CardManagementController.RemoveCardInDeck
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck*
        name: RemoveCardInDeck
        nameWithType: CardManagementController.RemoveCardInDeck
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardManagementController.RemoveCardInDeck
  Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei*
        name: SetCurrentChangeShinsei
        nameWithType: CardManagementController.SetCurrentChangeShinsei
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei*
        name: SetCurrentChangeShinsei
        nameWithType: CardManagementController.SetCurrentChangeShinsei
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardManagementController.SetCurrentChangeShinsei
  Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual*
        name: UpdateDetailViewVisual
        nameWithType: CardManagementController.UpdateDetailViewVisual
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual*
        name: UpdateDetailViewVisual
        nameWithType: CardManagementController.UpdateDetailViewVisual
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardManagementController.UpdateDetailViewVisual
  Timba.SacredTails.CardStoreModule.CardManagementController:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController
        name: CardManagementController
        nameWithType: CardManagementController
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardManagementController
        name: CardManagementController
        nameWithType: CardManagementController
        qualifiedName: Timba.SacredTails.CardStoreModule.CardManagementController
    isDefinition: true
    commentId: T:Timba.SacredTails.CardStoreModule.CardManagementController
  Global.ActionCard:
    name:
      CSharp:
      - id: Global.ActionCard
        name: ActionCard
        nameWithType: ActionCard
        qualifiedName: ActionCard
        isExternal: true
      VB:
      - id: Global.ActionCard
        name: ActionCard
        nameWithType: ActionCard
        qualifiedName: ActionCard
        isExternal: true
    isDefinition: true
  Timba.SacredTails.CardStoreModule.CardView.ActionCard*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardView.ActionCard*
        name: ActionCard
        nameWithType: CardView.ActionCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardView.ActionCard
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardView.ActionCard*
        name: ActionCard
        nameWithType: CardView.ActionCard
        qualifiedName: Timba.SacredTails.CardStoreModule.CardView.ActionCard
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardView.ActionCard
  Global.Action{System.Int32,Timba.SacredTails.CardStoreModule.CardView}:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.SacredTails.CardStoreModule.CardView
        name: CardView
        nameWithType: CardView
        qualifiedName: Timba.SacredTails.CardStoreModule.CardView
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.SacredTails.CardStoreModule.CardView
        name: CardView
        nameWithType: CardView
        qualifiedName: Timba.SacredTails.CardStoreModule.CardView
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`2
    commentId: '!:Global.Action{System.Int32,Timba.SacredTails.CardStoreModule.CardView}'
  Timba.SacredTails.CardStoreModule.CardView.UpdateNumber*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardView.UpdateNumber*
        name: UpdateNumber
        nameWithType: CardView.UpdateNumber
        qualifiedName: Timba.SacredTails.CardStoreModule.CardView.UpdateNumber
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardView.UpdateNumber*
        name: UpdateNumber
        nameWithType: CardView.UpdateNumber
        qualifiedName: Timba.SacredTails.CardStoreModule.CardView.UpdateNumber
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardView.UpdateNumber
  Timba.SacredTails.CardStoreModule.CardView.OnPointerClick*:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardView.OnPointerClick*
        name: OnPointerClick
        nameWithType: CardView.OnPointerClick
        qualifiedName: Timba.SacredTails.CardStoreModule.CardView.OnPointerClick
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardView.OnPointerClick*
        name: OnPointerClick
        nameWithType: CardView.OnPointerClick
        qualifiedName: Timba.SacredTails.CardStoreModule.CardView.OnPointerClick
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CardStoreModule.CardView.OnPointerClick
  Timba.SacredTails.CardStoreModule.CardView:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.CardView
        name: CardView
        nameWithType: CardView
        qualifiedName: Timba.SacredTails.CardStoreModule.CardView
      VB:
      - id: Timba.SacredTails.CardStoreModule.CardView
        name: CardView
        nameWithType: CardView
        qualifiedName: Timba.SacredTails.CardStoreModule.CardView
    isDefinition: true
    commentId: T:Timba.SacredTails.CardStoreModule.CardView
  System.Collections.Generic.List{Timba.SacredTails.CardStoreModule.Card}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.CardStoreModule.Card
        name: Card
        nameWithType: Card
        qualifiedName: Timba.SacredTails.CardStoreModule.Card
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.CardStoreModule.Card
        name: Card
        nameWithType: Card
        qualifiedName: Timba.SacredTails.CardStoreModule.Card
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.CardStoreModule.Card}
  Timba.SacredTails.CardStoreModule.Deck:
    name:
      CSharp:
      - id: Timba.SacredTails.CardStoreModule.Deck
        name: Deck
        nameWithType: Deck
        qualifiedName: Timba.SacredTails.CardStoreModule.Deck
      VB:
      - id: Timba.SacredTails.CardStoreModule.Deck
        name: Deck
        nameWithType: Deck
        qualifiedName: Timba.SacredTails.CardStoreModule.Deck
    isDefinition: true
    commentId: T:Timba.SacredTails.CardStoreModule.Deck
  Timba.SacredTails.CardStoreModule:
    name:
      CSharp:
      - name: Timba.SacredTails.CardStoreModule
        nameWithType: Timba.SacredTails.CardStoreModule
        qualifiedName: Timba.SacredTails.CardStoreModule
      VB:
      - name: Timba.SacredTails.CardStoreModule
        nameWithType: Timba.SacredTails.CardStoreModule
        qualifiedName: Timba.SacredTails.CardStoreModule
    isDefinition: true
    commentId: N:Timba.SacredTails.CardStoreModule
  Timba.SacredTails.DialogSystem:
    name:
      CSharp:
      - name: Timba.SacredTails.DialogSystem
        nameWithType: Timba.SacredTails.DialogSystem
        qualifiedName: Timba.SacredTails.DialogSystem
      VB:
      - name: Timba.SacredTails.DialogSystem
        nameWithType: Timba.SacredTails.DialogSystem
        qualifiedName: Timba.SacredTails.DialogSystem
    isDefinition: true
    commentId: N:Timba.SacredTails.DialogSystem
  Timba.SacredTails.DialogSystem.ActionNode.Connection:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.ActionNode.Connection
        name: ActionNode.Connection
        nameWithType: ActionNode.Connection
        qualifiedName: Timba.SacredTails.DialogSystem.ActionNode.Connection
      VB:
      - id: Timba.SacredTails.DialogSystem.ActionNode.Connection
        name: ActionNode.Connection
        nameWithType: ActionNode.Connection
        qualifiedName: Timba.SacredTails.DialogSystem.ActionNode.Connection
    isDefinition: true
    parent: Timba.SacredTails.DialogSystem
    commentId: T:Timba.SacredTails.DialogSystem.ActionNode.Connection
  Timba.SacredTails.DialogSystem.ActionNode:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.ActionNode
        name: ActionNode
        nameWithType: ActionNode
        qualifiedName: Timba.SacredTails.DialogSystem.ActionNode
      VB:
      - id: Timba.SacredTails.DialogSystem.ActionNode
        name: ActionNode
        nameWithType: ActionNode
        qualifiedName: Timba.SacredTails.DialogSystem.ActionNode
    isDefinition: true
    commentId: T:Timba.SacredTails.DialogSystem.ActionNode
  Timba.SacredTails.DialogSystem.Conversation:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.Conversation
        name: Conversation
        nameWithType: Conversation
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation
      VB:
      - id: Timba.SacredTails.DialogSystem.Conversation
        name: Conversation
        nameWithType: Conversation
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation
    isDefinition: true
    parent: Timba.SacredTails.DialogSystem
    commentId: T:Timba.SacredTails.DialogSystem.Conversation
  Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse*
        name: SetButtonResponse
        nameWithType: AnswerField.SetButtonResponse
        qualifiedName: Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse
      VB:
      - id: Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse*
        name: SetButtonResponse
        nameWithType: AnswerField.SetButtonResponse
        qualifiedName: Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.AnswerField.SetButtonResponse
  Timba.SacredTails.DialogSystem.AnswerField:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.AnswerField
        name: AnswerField
        nameWithType: AnswerField
        qualifiedName: Timba.SacredTails.DialogSystem.AnswerField
      VB:
      - id: Timba.SacredTails.DialogSystem.AnswerField
        name: AnswerField
        nameWithType: AnswerField
        qualifiedName: Timba.SacredTails.DialogSystem.AnswerField
    isDefinition: true
    commentId: T:Timba.SacredTails.DialogSystem.AnswerField
  Timba.SacredTails.DialogSystem.DialogGraph:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.DialogGraph
        name: DialogGraph
        nameWithType: DialogGraph
        qualifiedName: Timba.SacredTails.DialogSystem.DialogGraph
      VB:
      - id: Timba.SacredTails.DialogSystem.DialogGraph
        name: DialogGraph
        nameWithType: DialogGraph
        qualifiedName: Timba.SacredTails.DialogSystem.DialogGraph
    isDefinition: true
    parent: Timba.SacredTails.DialogSystem
    commentId: T:Timba.SacredTails.DialogSystem.DialogGraph
  Timba.SacredTails.DialogSystem.DialogNode:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.DialogNode
        name: DialogNode
        nameWithType: DialogNode
        qualifiedName: Timba.SacredTails.DialogSystem.DialogNode
      VB:
      - id: Timba.SacredTails.DialogSystem.DialogNode
        name: DialogNode
        nameWithType: DialogNode
        qualifiedName: Timba.SacredTails.DialogSystem.DialogNode
    isDefinition: true
    parent: Timba.SacredTails.DialogSystem
    commentId: T:Timba.SacredTails.DialogSystem.DialogNode
  Timba.SacredTails.DialogSystem.DialogUI:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.DialogUI
        name: DialogUI
        nameWithType: DialogUI
        qualifiedName: Timba.SacredTails.DialogSystem.DialogUI
      VB:
      - id: Timba.SacredTails.DialogSystem.DialogUI
        name: DialogUI
        nameWithType: DialogUI
        qualifiedName: Timba.SacredTails.DialogSystem.DialogUI
    isDefinition: true
    parent: Timba.SacredTails.DialogSystem
    commentId: T:Timba.SacredTails.DialogSystem.DialogUI
  Timba.SacredTails.DialogSystem.Conversation.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.Conversation.Init*
        name: Init
        nameWithType: Conversation.Init
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation.Init
      VB:
      - id: Timba.SacredTails.DialogSystem.Conversation.Init*
        name: Init
        nameWithType: Conversation.Init
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.Conversation.Init
  Timba.SacredTails.DialogSystem.Conversation.UpdateDialog*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.Conversation.UpdateDialog*
        name: UpdateDialog
        nameWithType: Conversation.UpdateDialog
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation.UpdateDialog
      VB:
      - id: Timba.SacredTails.DialogSystem.Conversation.UpdateDialog*
        name: UpdateDialog
        nameWithType: Conversation.UpdateDialog
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation.UpdateDialog
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.Conversation.UpdateDialog
  Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText*
        name: NotifyPlayerReadText
        nameWithType: Conversation.NotifyPlayerReadText
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText
      VB:
      - id: Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText*
        name: NotifyPlayerReadText
        nameWithType: Conversation.NotifyPlayerReadText
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.Conversation.NotifyPlayerReadText
  Timba.SacredTails.DialogSystem.Conversation.SendResponse*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.Conversation.SendResponse*
        name: SendResponse
        nameWithType: Conversation.SendResponse
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation.SendResponse
      VB:
      - id: Timba.SacredTails.DialogSystem.Conversation.SendResponse*
        name: SendResponse
        nameWithType: Conversation.SendResponse
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation.SendResponse
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.Conversation.SendResponse
  Timba.SacredTails.DialogSystem.Dialogable:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.Dialogable
        name: Dialogable
        nameWithType: Dialogable
        qualifiedName: Timba.SacredTails.DialogSystem.Dialogable
      VB:
      - id: Timba.SacredTails.DialogSystem.Dialogable
        name: Dialogable
        nameWithType: Dialogable
        qualifiedName: Timba.SacredTails.DialogSystem.Dialogable
    isDefinition: true
    parent: Timba.SacredTails.DialogSystem
    commentId: T:Timba.SacredTails.DialogSystem.Dialogable
  Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine*
        name: ConversationRoutine
        nameWithType: Conversation.ConversationRoutine
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine
      VB:
      - id: Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine*
        name: ConversationRoutine
        nameWithType: Conversation.ConversationRoutine
        qualifiedName: Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.Conversation.ConversationRoutine
  System.Collections.Generic.List{UnityEvent}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UnityEvent}
  Timba.SacredTails.DialogSystem.Dialogable.StartConversation*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.Dialogable.StartConversation*
        name: StartConversation
        nameWithType: Dialogable.StartConversation
        qualifiedName: Timba.SacredTails.DialogSystem.Dialogable.StartConversation
      VB:
      - id: Timba.SacredTails.DialogSystem.Dialogable.StartConversation*
        name: StartConversation
        nameWithType: Dialogable.StartConversation
        qualifiedName: Timba.SacredTails.DialogSystem.Dialogable.StartConversation
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.Dialogable.StartConversation
  Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel*
        name: EnteringAnotherPanel
        nameWithType: Dialogable.EnteringAnotherPanel
        qualifiedName: Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel
      VB:
      - id: Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel*
        name: EnteringAnotherPanel
        nameWithType: Dialogable.EnteringAnotherPanel
        qualifiedName: Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.Dialogable.EnteringAnotherPanel
  Timba.SacredTails.DialogSystem.Dialogable.EndConversation*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.Dialogable.EndConversation*
        name: EndConversation
        nameWithType: Dialogable.EndConversation
        qualifiedName: Timba.SacredTails.DialogSystem.Dialogable.EndConversation
      VB:
      - id: Timba.SacredTails.DialogSystem.Dialogable.EndConversation*
        name: EndConversation
        nameWithType: Dialogable.EndConversation
        qualifiedName: Timba.SacredTails.DialogSystem.Dialogable.EndConversation
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.Dialogable.EndConversation
  Timba.SacredTails.DialogSystem.DialogNode.Connection:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.DialogNode.Connection
        name: DialogNode.Connection
        nameWithType: DialogNode.Connection
        qualifiedName: Timba.SacredTails.DialogSystem.DialogNode.Connection
      VB:
      - id: Timba.SacredTails.DialogSystem.DialogNode.Connection
        name: DialogNode.Connection
        nameWithType: DialogNode.Connection
        qualifiedName: Timba.SacredTails.DialogSystem.DialogNode.Connection
    isDefinition: true
    parent: Timba.SacredTails.DialogSystem
    commentId: T:Timba.SacredTails.DialogSystem.DialogNode.Connection
  System.Collections.Generic.List{Timba.SacredTails.DialogSystem.AnswerField}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.DialogSystem.AnswerField
        name: AnswerField
        nameWithType: AnswerField
        qualifiedName: Timba.SacredTails.DialogSystem.AnswerField
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.DialogSystem.AnswerField
        name: AnswerField
        nameWithType: AnswerField
        qualifiedName: Timba.SacredTails.DialogSystem.AnswerField
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.DialogSystem.AnswerField}
  Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate*
        name: IsPlayerDialogate
        nameWithType: DialogUI.IsPlayerDialogate
        qualifiedName: Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate
      VB:
      - id: Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate*
        name: IsPlayerDialogate
        nameWithType: DialogUI.IsPlayerDialogate
        qualifiedName: Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.DialogUI.IsPlayerDialogate
  Timba.SacredTails.DialogSystem.DialogUI.ShowResponses*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.DialogUI.ShowResponses*
        name: ShowResponses
        nameWithType: DialogUI.ShowResponses
        qualifiedName: Timba.SacredTails.DialogSystem.DialogUI.ShowResponses
      VB:
      - id: Timba.SacredTails.DialogSystem.DialogUI.ShowResponses*
        name: ShowResponses
        nameWithType: DialogUI.ShowResponses
        qualifiedName: Timba.SacredTails.DialogSystem.DialogUI.ShowResponses
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.DialogUI.ShowResponses
  Timba.SacredTails.DialogSystem.DialogUI.WriteText*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.DialogUI.WriteText*
        name: WriteText
        nameWithType: DialogUI.WriteText
        qualifiedName: Timba.SacredTails.DialogSystem.DialogUI.WriteText
      VB:
      - id: Timba.SacredTails.DialogSystem.DialogUI.WriteText*
        name: WriteText
        nameWithType: DialogUI.WriteText
        qualifiedName: Timba.SacredTails.DialogSystem.DialogUI.WriteText
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.DialogUI.WriteText
  Timba.SacredTails.DialogSystem.DialogUI.SkipDialog*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.DialogUI.SkipDialog*
        name: SkipDialog
        nameWithType: DialogUI.SkipDialog
        qualifiedName: Timba.SacredTails.DialogSystem.DialogUI.SkipDialog
      VB:
      - id: Timba.SacredTails.DialogSystem.DialogUI.SkipDialog*
        name: SkipDialog
        nameWithType: DialogUI.SkipDialog
        qualifiedName: Timba.SacredTails.DialogSystem.DialogUI.SkipDialog
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.DialogUI.SkipDialog
  Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI*:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI*
        name: OnBodyGUI
        nameWithType: DialogNodeEditor.OnBodyGUI
        qualifiedName: Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI
      VB:
      - id: Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI*
        name: OnBodyGUI
        nameWithType: DialogNodeEditor.OnBodyGUI
        qualifiedName: Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI
    isDefinition: true
    commentId: Overload:Timba.SacredTails.DialogSystem.DialogNodeEditor.OnBodyGUI
  Timba.SacredTails.DialogSystem.DialogNodeEditor:
    name:
      CSharp:
      - id: Timba.SacredTails.DialogSystem.DialogNodeEditor
        name: DialogNodeEditor
        nameWithType: DialogNodeEditor
        qualifiedName: Timba.SacredTails.DialogSystem.DialogNodeEditor
      VB:
      - id: Timba.SacredTails.DialogSystem.DialogNodeEditor
        name: DialogNodeEditor
        nameWithType: DialogNodeEditor
        qualifiedName: Timba.SacredTails.DialogSystem.DialogNodeEditor
    isDefinition: true
    commentId: T:Timba.SacredTails.DialogSystem.DialogNodeEditor
  Timba.SacredTails.CharacterStyle:
    name:
      CSharp:
      - name: Timba.SacredTails.CharacterStyle
        nameWithType: Timba.SacredTails.CharacterStyle
        qualifiedName: Timba.SacredTails.CharacterStyle
      VB:
      - name: Timba.SacredTails.CharacterStyle
        nameWithType: Timba.SacredTails.CharacterStyle
        qualifiedName: Timba.SacredTails.CharacterStyle
    isDefinition: true
    commentId: N:Timba.SacredTails.CharacterStyle
  Timba.SacredTails.CharacterStyle.CharacterRecolor:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterRecolor
        name: CharacterRecolor
        nameWithType: CharacterRecolor
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterRecolor
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterRecolor
        name: CharacterRecolor
        nameWithType: CharacterRecolor
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterRecolor
    isDefinition: true
    parent: Timba.SacredTails.CharacterStyle
    commentId: T:Timba.SacredTails.CharacterStyle.CharacterRecolor
  System.Collections.Generic.List{MaterialReskin}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MaterialReskin
        name: MaterialReskin
        nameWithType: MaterialReskin
        qualifiedName: MaterialReskin
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MaterialReskin
        name: MaterialReskin
        nameWithType: MaterialReskin
        qualifiedName: MaterialReskin
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{MaterialReskin}
  Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual*
        name: UpdateVisual
        nameWithType: BakeColorsInCharacter.UpdateVisual
        qualifiedName: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual
      VB:
      - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual*
        name: UpdateVisual
        nameWithType: BakeColorsInCharacter.UpdateVisual
        qualifiedName: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter.UpdateVisual
  Timba.SacredTails.CharacterStyle.BakeColorsInCharacter:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter
        name: BakeColorsInCharacter
        nameWithType: BakeColorsInCharacter
        qualifiedName: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter
      VB:
      - id: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter
        name: BakeColorsInCharacter
        nameWithType: BakeColorsInCharacter
        qualifiedName: Timba.SacredTails.CharacterStyle.BakeColorsInCharacter
    isDefinition: true
    commentId: T:Timba.SacredTails.CharacterStyle.BakeColorsInCharacter
  Timba.SacredTails.CharacterStyle.CharacterRecolor.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterRecolor.Init*
        name: Init
        nameWithType: CharacterRecolor.Init
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterRecolor.Init
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterRecolor.Init*
        name: Init
        nameWithType: CharacterRecolor.Init
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterRecolor.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterRecolor.Init
  Timba.SacredTails.CharacterStyle.PartsOfCharacter:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: Timba.SacredTails.CharacterStyle.PartsOfCharacter
      VB:
      - id: Timba.SacredTails.CharacterStyle.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: Timba.SacredTails.CharacterStyle.PartsOfCharacter
    isDefinition: true
    parent: Timba.SacredTails.CharacterStyle
    commentId: T:Timba.SacredTails.CharacterStyle.PartsOfCharacter
  Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors*
        name: ChangeMaterialColors
        nameWithType: CharacterRecolor.ChangeMaterialColors
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors*
        name: ChangeMaterialColors
        nameWithType: CharacterRecolor.ChangeMaterialColors
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterRecolor.ChangeMaterialColors
  Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn*
        name: UpdateBtn
        nameWithType: CharacterStyleButton.UpdateBtn
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn*
        name: UpdateBtn
        nameWithType: CharacterStyleButton.UpdateBtn
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleButton.UpdateBtn
  Timba.SacredTails.CharacterStyle.CharacterStyleButton:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleButton
        name: CharacterStyleButton
        nameWithType: CharacterStyleButton
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleButton
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleButton
        name: CharacterStyleButton
        nameWithType: CharacterStyleButton
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleButton
    isDefinition: true
    commentId: T:Timba.SacredTails.CharacterStyle.CharacterStyleButton
  Timba.SacredTails.CharacterStyle.CharacterStyleDatabase:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase
        name: CharacterStyleDatabase
        nameWithType: CharacterStyleDatabase
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase
        name: CharacterStyleDatabase
        nameWithType: CharacterStyleDatabase
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase
    isDefinition: true
    parent: Timba.SacredTails.CharacterStyle
    commentId: T:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase
  Timba.SacredTails.CharacterStyle.PlayerMouseRotator:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.PlayerMouseRotator
        name: PlayerMouseRotator
        nameWithType: PlayerMouseRotator
        qualifiedName: Timba.SacredTails.CharacterStyle.PlayerMouseRotator
      VB:
      - id: Timba.SacredTails.CharacterStyle.PlayerMouseRotator
        name: PlayerMouseRotator
        nameWithType: PlayerMouseRotator
        qualifiedName: Timba.SacredTails.CharacterStyle.PlayerMouseRotator
    isDefinition: true
    parent: Timba.SacredTails.CharacterStyle
    commentId: T:Timba.SacredTails.CharacterStyle.PlayerMouseRotator
  Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake*
        name: Awake
        nameWithType: CharacterStyleController.Awake
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake*
        name: Awake
        nameWithType: CharacterStyleController.Awake
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.Awake
  Timba.SacredTails.CharacterStyle.CharacterStyleController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.Init*
        name: Init
        nameWithType: CharacterStyleController.Init
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.Init
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.Init*
        name: Init
        nameWithType: CharacterStyleController.Init
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.Init
  Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide*
        name: Hide
        nameWithType: CharacterStyleController.Hide
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide*
        name: Hide
        nameWithType: CharacterStyleController.Hide
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.Hide
  Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext*
        name: SelectPartNext
        nameWithType: CharacterStyleController.SelectPartNext
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext*
        name: SelectPartNext
        nameWithType: CharacterStyleController.SelectPartNext
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.SelectPartNext
  Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart*
        name: OnSelectPart
        nameWithType: CharacterStyleController.OnSelectPart
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart*
        name: OnSelectPart
        nameWithType: CharacterStyleController.OnSelectPart
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.OnSelectPart
  Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle*
        name: ChangeTitle
        nameWithType: CharacterStyleController.ChangeTitle
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle*
        name: ChangeTitle
        nameWithType: CharacterStyleController.ChangeTitle
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeTitle
  Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory*
        name: ShowCategory
        nameWithType: CharacterStyleController.ShowCategory
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory*
        name: ShowCategory
        nameWithType: CharacterStyleController.ShowCategory
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.ShowCategory
  Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit*
        name: GenerateRandomOutfit
        nameWithType: CharacterStyleController.GenerateRandomOutfit
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit*
        name: GenerateRandomOutfit
        nameWithType: CharacterStyleController.GenerateRandomOutfit
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.GenerateRandomOutfit
  Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle*
        name: ApplyLastStyle
        nameWithType: CharacterStyleController.ApplyLastStyle
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle*
        name: ApplyLastStyle
        nameWithType: CharacterStyleController.ApplyLastStyle
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.ApplyLastStyle
  Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender*
        name: UpdateGender
        nameWithType: CharacterStyleController.UpdateGender
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender*
        name: UpdateGender
        nameWithType: CharacterStyleController.UpdateGender
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateGender
  Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter*
        name: UpdateColorPartOfCharacter
        nameWithType: CharacterStyleController.UpdateColorPartOfCharacter
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter*
        name: UpdateColorPartOfCharacter
        nameWithType: CharacterStyleController.UpdateColorPartOfCharacter
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateColorPartOfCharacter
  Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter*
        name: UpdatePartOfCharacter
        nameWithType: CharacterStyleController.UpdatePartOfCharacter
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter*
        name: UpdatePartOfCharacter
        nameWithType: CharacterStyleController.UpdatePartOfCharacter
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdatePartOfCharacter
  Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle*
        name: UpdateCharacterStyle
        nameWithType: CharacterStyleController.UpdateCharacterStyle
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle*
        name: UpdateCharacterStyle
        nameWithType: CharacterStyleController.UpdateCharacterStyle
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.UpdateCharacterStyle
  Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart*
        name: ChangeHairBodyPart
        nameWithType: CharacterStyleController.ChangeHairBodyPart
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart*
        name: ChangeHairBodyPart
        nameWithType: CharacterStyleController.ChangeHairBodyPart
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.ChangeHairBodyPart
  Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors*
        name: PopulateSkinColors
        nameWithType: CharacterStyleController.PopulateSkinColors
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors*
        name: PopulateSkinColors
        nameWithType: CharacterStyleController.PopulateSkinColors
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleController.PopulateSkinColors
  Timba.SacredTails.CharacterStyle.CharacterStyleController:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController
        name: CharacterStyleController
        nameWithType: CharacterStyleController
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleController
        name: CharacterStyleController
        nameWithType: CharacterStyleController
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleController
    isDefinition: true
    commentId: T:Timba.SacredTails.CharacterStyle.CharacterStyleController
  System.Collections.Generic.List{ColorIdRelation}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ColorIdRelation
        name: ColorIdRelation
        nameWithType: ColorIdRelation
        qualifiedName: ColorIdRelation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ColorIdRelation
        name: ColorIdRelation
        nameWithType: ColorIdRelation
        qualifiedName: ColorIdRelation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{ColorIdRelation}
  System.Collections.Generic.List{PartIdRelation}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PartIdRelation
        name: PartIdRelation
        nameWithType: PartIdRelation
        qualifiedName: PartIdRelation
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PartIdRelation
        name: PartIdRelation
        nameWithType: PartIdRelation
        qualifiedName: PartIdRelation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PartIdRelation}
  Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById*
        name: GetColorById
        nameWithType: CharacterStyleDatabase.GetColorById
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById*
        name: GetColorById
        nameWithType: CharacterStyleDatabase.GetColorById
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorById
  Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType*
        name: GetColorsByPartType
        nameWithType: CharacterStyleDatabase.GetColorsByPartType
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType*
        name: GetColorsByPartType
        nameWithType: CharacterStyleDatabase.GetColorsByPartType
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetColorsByPartType
  Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById*
        name: GetPartById
        nameWithType: CharacterStyleDatabase.GetPartById
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById*
        name: GetPartById
        nameWithType: CharacterStyleDatabase.GetPartById
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartById
  Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType*
        name: GetPartsByType
        nameWithType: CharacterStyleDatabase.GetPartsByType
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType*
        name: GetPartsByType
        nameWithType: CharacterStyleDatabase.GetPartsByType
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.GetPartsByType
  Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate*
        name: OnValidate
        nameWithType: CharacterStyleDatabase.OnValidate
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate
      VB:
      - id: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate*
        name: OnValidate
        nameWithType: CharacterStyleDatabase.OnValidate
        qualifiedName: Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.CharacterStyleDatabase.OnValidate
  Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea*:
    name:
      CSharp:
      - id: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea*
        name: IsClickingOnArea
        nameWithType: PlayerMouseRotator.IsClickingOnArea
        qualifiedName: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea
      VB:
      - id: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea*
        name: IsClickingOnArea
        nameWithType: PlayerMouseRotator.IsClickingOnArea
        qualifiedName: Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea
    isDefinition: true
    commentId: Overload:Timba.SacredTails.CharacterStyle.PlayerMouseRotator.IsClickingOnArea
  Timba.SacredTails.Database:
    name:
      CSharp:
      - name: Timba.SacredTails.Database
        nameWithType: Timba.SacredTails.Database
        qualifiedName: Timba.SacredTails.Database
      VB:
      - name: Timba.SacredTails.Database
        nameWithType: Timba.SacredTails.Database
        qualifiedName: Timba.SacredTails.Database
    isDefinition: true
    commentId: N:Timba.SacredTails.Database
  Timba.SacredTails.Database.IDatabase:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase
        name: IDatabase
        nameWithType: IDatabase
        qualifiedName: Timba.SacredTails.Database.IDatabase
      VB:
      - id: Timba.SacredTails.Database.IDatabase
        name: IDatabase
        nameWithType: IDatabase
        qualifiedName: Timba.SacredTails.Database.IDatabase
    isDefinition: true
    parent: Timba.SacredTails.Database
    commentId: T:Timba.SacredTails.Database.IDatabase
  Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex*
        name: GetActionCardByIndex
        nameWithType: DatabaseConnection.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex*
        name: GetActionCardByIndex
        nameWithType: DatabaseConnection.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex
  Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
        name: GetActionCardByIndex
        nameWithType: IDatabase.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
        name: GetActionCardByIndex
        nameWithType: IDatabase.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
  Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount*
        name: CardDatabaseCount
        nameWithType: DatabaseConnection.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount*
        name: CardDatabaseCount
        nameWithType: DatabaseConnection.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount
  Timba.SacredTails.Database.IDatabase.CardDatabaseCount:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
        name: CardDatabaseCount
        nameWithType: IDatabase.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
        name: CardDatabaseCount
        nameWithType: IDatabase.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.CardDatabaseCount
  Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType*
        name: GetDatabaseCardsIndexListByType
        nameWithType: DatabaseConnection.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType*
        name: GetDatabaseCardsIndexListByType
        nameWithType: DatabaseConnection.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType
  Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String}):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
        name: GetDatabaseCardsIndexListByType
        nameWithType: IDatabase.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
        name: GetDatabaseCardsIndexListByType
        nameWithType: IDatabase.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
  Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei*
        name: GetRandomShinsei
        nameWithType: DatabaseConnection.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei*
        name: GetRandomShinsei
        nameWithType: DatabaseConnection.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei
  Timba.SacredTails.Database.IDatabase.GetRandomShinsei:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
        name: GetRandomShinsei
        nameWithType: IDatabase.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
        name: GetRandomShinsei
        nameWithType: IDatabase.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetRandomShinsei
  Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure*
        name: GetShinseiStructure
        nameWithType: DatabaseConnection.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure*
        name: GetShinseiStructure
        nameWithType: DatabaseConnection.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure
  Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
        name: GetShinseiStructure
        nameWithType: IDatabase.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStructure
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
        name: GetShinseiStructure
        nameWithType: IDatabase.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStructure
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
  Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats*
        name: GetShinseiStats
        nameWithType: DatabaseConnection.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats*
        name: GetShinseiStats
        nameWithType: DatabaseConnection.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats
  Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
        name: GetShinseiStats
        nameWithType: IDatabase.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStats
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
        name: GetShinseiStats
        nameWithType: IDatabase.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStats
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
  Timba.SacredTails.Database.DatabaseConnection.GetSetName*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetSetName*
        name: GetSetName
        nameWithType: DatabaseConnection.GetSetName
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetSetName
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetSetName*
        name: GetSetName
        nameWithType: DatabaseConnection.GetSetName
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetSetName
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetSetName
  Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes*
        name: GetShinseiPartsTypes
        nameWithType: DatabaseConnection.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes*
        name: GetShinseiPartsTypes
        nameWithType: DatabaseConnection.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes
  Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
        name: GetShinseiPartsTypes
        nameWithType: IDatabase.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
        name: GetShinseiPartsTypes
        nameWithType: IDatabase.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
  Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType*
        name: ObtainShinseiType
        nameWithType: DatabaseConnection.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType*
        name: ObtainShinseiType
        nameWithType: DatabaseConnection.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType
  Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
        name: ObtainShinseiType
        nameWithType: IDatabase.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiType
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
        name: ObtainShinseiType
        nameWithType: IDatabase.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiType
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
  Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity*
        name: ObtainShinseiRarity
        nameWithType: DatabaseConnection.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity*
        name: ObtainShinseiRarity
        nameWithType: DatabaseConnection.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity
  Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
        name: ObtainShinseiRarity
        nameWithType: IDatabase.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
        name: ObtainShinseiRarity
        nameWithType: IDatabase.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
  Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence*
        name: StartMatchmakingSequence
        nameWithType: DatabaseConnection.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence*
        name: StartMatchmakingSequence
        nameWithType: DatabaseConnection.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence
  Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
        name: StartMatchmakingSequence
        nameWithType: IDatabase.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
        name: StartMatchmakingSequence
        nameWithType: IDatabase.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
  Global.CreateMatchmakingTicketResult:
    name:
      CSharp:
      - id: Global.CreateMatchmakingTicketResult
        name: CreateMatchmakingTicketResult
        nameWithType: CreateMatchmakingTicketResult
        qualifiedName: CreateMatchmakingTicketResult
        isExternal: true
      VB:
      - id: Global.CreateMatchmakingTicketResult
        name: CreateMatchmakingTicketResult
        nameWithType: CreateMatchmakingTicketResult
        qualifiedName: CreateMatchmakingTicketResult
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CreateMatchmakingTicketResult'
  Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus*
        name: CheckTicketStatus
        nameWithType: DatabaseConnection.CheckTicketStatus
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus*
        name: CheckTicketStatus
        nameWithType: DatabaseConnection.CheckTicketStatus
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus
  Timba.SacredTails.Database.DatabaseConnection.IsReady*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.IsReady*
        name: IsReady
        nameWithType: DatabaseConnection.IsReady
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.IsReady
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.IsReady*
        name: IsReady
        nameWithType: DatabaseConnection.IsReady
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.IsReady
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.IsReady
  Timba.SacredTails.Database.DatabaseConnection:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection
        name: DatabaseConnection
        nameWithType: DatabaseConnection
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection
        name: DatabaseConnection
        nameWithType: DatabaseConnection
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection
    isDefinition: true
    commentId: T:Timba.SacredTails.Database.DatabaseConnection
  Timba.SacredTails.Database.IDatabase.GetRandomShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetRandomShinsei*
        name: GetRandomShinsei
        nameWithType: IDatabase.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetRandomShinsei*
        name: GetRandomShinsei
        nameWithType: IDatabase.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetRandomShinsei
  Timba.SacredTails.Database.IDatabase.GetShinseiStructure*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStructure*
        name: GetShinseiStructure
        nameWithType: IDatabase.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStructure
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStructure*
        name: GetShinseiStructure
        nameWithType: IDatabase.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStructure
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetShinseiStructure
  Timba.SacredTails.Database.IDatabase.GetShinseiStats*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStats*
        name: GetShinseiStats
        nameWithType: IDatabase.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStats
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStats*
        name: GetShinseiStats
        nameWithType: IDatabase.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStats
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetShinseiStats
  Timba.SacredTails.Database.IDatabase.GetActionCardByIndex*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex*
        name: GetActionCardByIndex
        nameWithType: IDatabase.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex*
        name: GetActionCardByIndex
        nameWithType: IDatabase.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetActionCardByIndex
  Timba.SacredTails.Database.IDatabase.CardDatabaseCount*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.CardDatabaseCount*
        name: CardDatabaseCount
        nameWithType: IDatabase.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      VB:
      - id: Timba.SacredTails.Database.IDatabase.CardDatabaseCount*
        name: CardDatabaseCount
        nameWithType: IDatabase.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.CardDatabaseCount
  Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes*
        name: GetShinseiPartsTypes
        nameWithType: IDatabase.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes*
        name: GetShinseiPartsTypes
        nameWithType: IDatabase.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes
  Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType*
        name: GetDatabaseCardsIndexListByType
        nameWithType: IDatabase.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType*
        name: GetDatabaseCardsIndexListByType
        nameWithType: IDatabase.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType
  Timba.SacredTails.Database.IDatabase.ObtainShinseiType*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiType*
        name: ObtainShinseiType
        nameWithType: IDatabase.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiType
      VB:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiType*
        name: ObtainShinseiType
        nameWithType: IDatabase.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.ObtainShinseiType
  Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity*
        name: ObtainShinseiRarity
        nameWithType: IDatabase.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity
      VB:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity*
        name: ObtainShinseiRarity
        nameWithType: IDatabase.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity
  Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence*
        name: StartMatchmakingSequence
        nameWithType: IDatabase.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence
      VB:
      - id: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence*
        name: StartMatchmakingSequence
        nameWithType: IDatabase.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence
  Global.UnityTransport:
    name:
      CSharp:
      - id: Global.UnityTransport
        name: UnityTransport
        nameWithType: UnityTransport
        qualifiedName: UnityTransport
        isExternal: true
      VB:
      - id: Global.UnityTransport
        name: UnityTransport
        nameWithType: UnityTransport
        qualifiedName: UnityTransport
        isExternal: true
    isDefinition: true
    commentId: '!:Global.UnityTransport'
  Timba.SacredTails.Database.AuthController.LoadCachedData*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.LoadCachedData*
        name: LoadCachedData
        nameWithType: AuthController.LoadCachedData
        qualifiedName: Timba.SacredTails.Database.AuthController.LoadCachedData
      VB:
      - id: Timba.SacredTails.Database.AuthController.LoadCachedData*
        name: LoadCachedData
        nameWithType: AuthController.LoadCachedData
        qualifiedName: Timba.SacredTails.Database.AuthController.LoadCachedData
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.LoadCachedData
  Timba.SacredTails.Database.AuthController.SetIP*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.SetIP*
        name: SetIP
        nameWithType: AuthController.SetIP
        qualifiedName: Timba.SacredTails.Database.AuthController.SetIP
      VB:
      - id: Timba.SacredTails.Database.AuthController.SetIP*
        name: SetIP
        nameWithType: AuthController.SetIP
        qualifiedName: Timba.SacredTails.Database.AuthController.SetIP
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.SetIP
  Timba.SacredTails.Database.AuthController.SetLoginInfo*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.SetLoginInfo*
        name: SetLoginInfo
        nameWithType: AuthController.SetLoginInfo
        qualifiedName: Timba.SacredTails.Database.AuthController.SetLoginInfo
      VB:
      - id: Timba.SacredTails.Database.AuthController.SetLoginInfo*
        name: SetLoginInfo
        nameWithType: AuthController.SetLoginInfo
        qualifiedName: Timba.SacredTails.Database.AuthController.SetLoginInfo
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.SetLoginInfo
  Timba.SacredTails.Database.AuthController.OpenPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.OpenPanel*
        name: OpenPanel
        nameWithType: AuthController.OpenPanel
        qualifiedName: Timba.SacredTails.Database.AuthController.OpenPanel
      VB:
      - id: Timba.SacredTails.Database.AuthController.OpenPanel*
        name: OpenPanel
        nameWithType: AuthController.OpenPanel
        qualifiedName: Timba.SacredTails.Database.AuthController.OpenPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.OpenPanel
  Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel*
        name: OpenForgotPasswordPanel
        nameWithType: AuthController.OpenForgotPasswordPanel
        qualifiedName: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel
      VB:
      - id: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel*
        name: OpenForgotPasswordPanel
        nameWithType: AuthController.OpenForgotPasswordPanel
        qualifiedName: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel
  Timba.SacredTails.Database.AuthController.Login*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.Login*
        name: Login
        nameWithType: AuthController.Login
        qualifiedName: Timba.SacredTails.Database.AuthController.Login
      VB:
      - id: Timba.SacredTails.Database.AuthController.Login*
        name: Login
        nameWithType: AuthController.Login
        qualifiedName: Timba.SacredTails.Database.AuthController.Login
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.Login
  Timba.SacredTails.Database.AuthController.EventsListenging*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.EventsListenging*
        name: EventsListenging
        nameWithType: AuthController.EventsListenging
        qualifiedName: Timba.SacredTails.Database.AuthController.EventsListenging
      VB:
      - id: Timba.SacredTails.Database.AuthController.EventsListenging*
        name: EventsListenging
        nameWithType: AuthController.EventsListenging
        qualifiedName: Timba.SacredTails.Database.AuthController.EventsListenging
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.EventsListenging
  Timba.SacredTails.Database.AuthController.SignUp*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.SignUp*
        name: SignUp
        nameWithType: AuthController.SignUp
        qualifiedName: Timba.SacredTails.Database.AuthController.SignUp
      VB:
      - id: Timba.SacredTails.Database.AuthController.SignUp*
        name: SignUp
        nameWithType: AuthController.SignUp
        qualifiedName: Timba.SacredTails.Database.AuthController.SignUp
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.SignUp
  Timba.SacredTails.Database.AuthController.SendPasswordEmail*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.SendPasswordEmail*
        name: SendPasswordEmail
        nameWithType: AuthController.SendPasswordEmail
        qualifiedName: Timba.SacredTails.Database.AuthController.SendPasswordEmail
      VB:
      - id: Timba.SacredTails.Database.AuthController.SendPasswordEmail*
        name: SendPasswordEmail
        nameWithType: AuthController.SendPasswordEmail
        qualifiedName: Timba.SacredTails.Database.AuthController.SendPasswordEmail
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.SendPasswordEmail
  Timba.SacredTails.Database.AuthController:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController
        name: AuthController
        nameWithType: AuthController
        qualifiedName: Timba.SacredTails.Database.AuthController
      VB:
      - id: Timba.SacredTails.Database.AuthController
        name: AuthController
        nameWithType: AuthController
        qualifiedName: Timba.SacredTails.Database.AuthController
    isDefinition: true
    commentId: T:Timba.SacredTails.Database.AuthController
  Timba.SacredTails.Navigation.INavigation.GoToScene*:
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.INavigation.GoToScene*
        name: GoToScene
        nameWithType: INavigation.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.INavigation.GoToScene
      VB:
      - id: Timba.SacredTails.Navigation.INavigation.GoToScene*
        name: GoToScene
        nameWithType: INavigation.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.INavigation.GoToScene
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Navigation.INavigation.GoToScene
  Timba.SacredTails.Navigation.INavigation:
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.INavigation
        name: INavigation
        nameWithType: INavigation
        qualifiedName: Timba.SacredTails.Navigation.INavigation
      VB:
      - id: Timba.SacredTails.Navigation.INavigation
        name: INavigation
        nameWithType: INavigation
        qualifiedName: Timba.SacredTails.Navigation.INavigation
    isDefinition: true
    parent: Timba.SacredTails.Navigation
    commentId: T:Timba.SacredTails.Navigation.INavigation
  Timba.SacredTails.Navigation:
    name:
      CSharp:
      - name: Timba.SacredTails.Navigation
        nameWithType: Timba.SacredTails.Navigation
        qualifiedName: Timba.SacredTails.Navigation
      VB:
      - name: Timba.SacredTails.Navigation
        nameWithType: Timba.SacredTails.Navigation
        qualifiedName: Timba.SacredTails.Navigation
    isDefinition: true
    commentId: N:Timba.SacredTails.Navigation
  Timba.SacredTails.Navigation.NavigationManager.GoToScene*:
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.NavigationManager.GoToScene*
        name: GoToScene
        nameWithType: NavigationManager.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager.GoToScene
      VB:
      - id: Timba.SacredTails.Navigation.NavigationManager.GoToScene*
        name: GoToScene
        nameWithType: NavigationManager.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager.GoToScene
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Navigation.NavigationManager.GoToScene
  Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32):
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
        name: GoToScene
        nameWithType: INavigation.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.INavigation.GoToScene
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
        name: GoToScene
        nameWithType: INavigation.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.INavigation.GoToScene
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Navigation.INavigation
    commentId: M:Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
  Timba.SacredTails.Navigation.NavigationManager.IsReady*:
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.NavigationManager.IsReady*
        name: IsReady
        nameWithType: NavigationManager.IsReady
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager.IsReady
      VB:
      - id: Timba.SacredTails.Navigation.NavigationManager.IsReady*
        name: IsReady
        nameWithType: NavigationManager.IsReady
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager.IsReady
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Navigation.NavigationManager.IsReady
  Timba.SacredTails.Navigation.NavigationManager:
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.NavigationManager
        name: NavigationManager
        nameWithType: NavigationManager
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager
      VB:
      - id: Timba.SacredTails.Navigation.NavigationManager
        name: NavigationManager
        nameWithType: NavigationManager
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager
    isDefinition: true
    commentId: T:Timba.SacredTails.Navigation.NavigationManager
  Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons*:
    name:
      CSharp:
      - id: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons*
        name: GenerateShinseiIcons
        nameWithType: IIconGeneration.GenerateShinseiIcons
        qualifiedName: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons
      VB:
      - id: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons*
        name: GenerateShinseiIcons
        nameWithType: IIconGeneration.GenerateShinseiIcons
        qualifiedName: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons
  Timba.SacredTails.Photoboot.IIconGeneration:
    name:
      CSharp:
      - id: Timba.SacredTails.Photoboot.IIconGeneration
        name: IIconGeneration
        nameWithType: IIconGeneration
        qualifiedName: Timba.SacredTails.Photoboot.IIconGeneration
      VB:
      - id: Timba.SacredTails.Photoboot.IIconGeneration
        name: IIconGeneration
        nameWithType: IIconGeneration
        qualifiedName: Timba.SacredTails.Photoboot.IIconGeneration
    isDefinition: true
    parent: Timba.SacredTails.Photoboot
    commentId: T:Timba.SacredTails.Photoboot.IIconGeneration
  Timba.SacredTails.Photoboot:
    name:
      CSharp:
      - name: Timba.SacredTails.Photoboot
        nameWithType: Timba.SacredTails.Photoboot
        qualifiedName: Timba.SacredTails.Photoboot
      VB:
      - name: Timba.SacredTails.Photoboot
        nameWithType: Timba.SacredTails.Photoboot
        qualifiedName: Timba.SacredTails.Photoboot
    isDefinition: true
    commentId: N:Timba.SacredTails.Photoboot
  Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons*:
    name:
      CSharp:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons*
        name: GenerateShinseiIcons
        nameWithType: ShinseiWardrobe.GenerateShinseiIcons
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons
      VB:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons*
        name: GenerateShinseiIcons
        nameWithType: ShinseiWardrobe.GenerateShinseiIcons
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Photoboot.ShinseiWardrobe.GenerateShinseiIcons
  Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons(System.Collections.Generic.List{Shinsei},Action):
    name:
      CSharp:
      - id: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons(System.Collections.Generic.List{Shinsei},Action)
        name: GenerateShinseiIcons
        nameWithType: IIconGeneration.GenerateShinseiIcons
        qualifiedName: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons(System.Collections.Generic.List{Shinsei},Action)
        name: GenerateShinseiIcons
        nameWithType: IIconGeneration.GenerateShinseiIcons
        qualifiedName: Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Photoboot.IIconGeneration
    commentId: M:Timba.SacredTails.Photoboot.IIconGeneration.GenerateShinseiIcons(System.Collections.Generic.List{Shinsei},Action)
  Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons*:
    name:
      CSharp:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons*
        name: GetGeneratedIcons
        nameWithType: ShinseiWardrobe.GetGeneratedIcons
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons
      VB:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons*
        name: GetGeneratedIcons
        nameWithType: ShinseiWardrobe.GetGeneratedIcons
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedIcons
  Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence*:
    name:
      CSharp:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence*
        name: GetGeneratedSequence
        nameWithType: ShinseiWardrobe.GetGeneratedSequence
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence
      VB:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence*
        name: GetGeneratedSequence
        nameWithType: ShinseiWardrobe.GetGeneratedSequence
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Photoboot.ShinseiWardrobe.GetGeneratedSequence
  Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite*:
    name:
      CSharp:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite*
        name: TexToSprite
        nameWithType: ShinseiWardrobe.TexToSprite
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite
      VB:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite*
        name: TexToSprite
        nameWithType: ShinseiWardrobe.TexToSprite
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Photoboot.ShinseiWardrobe.TexToSprite
  Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady*:
    name:
      CSharp:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady*
        name: IsReady
        nameWithType: ShinseiWardrobe.IsReady
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady
      VB:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady*
        name: IsReady
        nameWithType: ShinseiWardrobe.IsReady
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Photoboot.ShinseiWardrobe.IsReady
  Timba.SacredTails.Photoboot.ShinseiWardrobe:
    name:
      CSharp:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe
        name: ShinseiWardrobe
        nameWithType: ShinseiWardrobe
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe
      VB:
      - id: Timba.SacredTails.Photoboot.ShinseiWardrobe
        name: ShinseiWardrobe
        nameWithType: ShinseiWardrobe
        qualifiedName: Timba.SacredTails.Photoboot.ShinseiWardrobe
    isDefinition: true
    commentId: T:Timba.SacredTails.Photoboot.ShinseiWardrobe
  Timba.Games.SacredTails.DisconnectManager.LogIn*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.DisconnectManager.LogIn*
        name: LogIn
        nameWithType: DisconnectManager.LogIn
        qualifiedName: Timba.Games.SacredTails.DisconnectManager.LogIn
      VB:
      - id: Timba.Games.SacredTails.DisconnectManager.LogIn*
        name: LogIn
        nameWithType: DisconnectManager.LogIn
        qualifiedName: Timba.Games.SacredTails.DisconnectManager.LogIn
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.DisconnectManager.LogIn
  Timba.Games.SacredTails.DisconnectManager.Update*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.DisconnectManager.Update*
        name: Update
        nameWithType: DisconnectManager.Update
        qualifiedName: Timba.Games.SacredTails.DisconnectManager.Update
      VB:
      - id: Timba.Games.SacredTails.DisconnectManager.Update*
        name: Update
        nameWithType: DisconnectManager.Update
        qualifiedName: Timba.Games.SacredTails.DisconnectManager.Update
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.DisconnectManager.Update
  Timba.Games.SacredTails.DisconnectManager:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.DisconnectManager
        name: DisconnectManager
        nameWithType: DisconnectManager
        qualifiedName: Timba.Games.SacredTails.DisconnectManager
      VB:
      - id: Timba.Games.SacredTails.DisconnectManager
        name: DisconnectManager
        nameWithType: DisconnectManager
        qualifiedName: Timba.Games.SacredTails.DisconnectManager
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.DisconnectManager
  Timba.Games.SacredTails.IWallet.UpdateUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.UpdateUserWallet*
        name: UpdateUserWallet
        nameWithType: IWallet.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.UpdateUserWallet
      VB:
      - id: Timba.Games.SacredTails.IWallet.UpdateUserWallet*
        name: UpdateUserWallet
        nameWithType: IWallet.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.UpdateUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.IWallet.UpdateUserWallet
  Timba.Games.SacredTails.IWallet.GetUserCurrentCoins*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins*
        name: GetUserCurrentCoins
        nameWithType: IWallet.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      VB:
      - id: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins*
        name: GetUserCurrentCoins
        nameWithType: IWallet.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
  Timba.Games.SacredTails.IWallet.HideUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.HideUserWallet*
        name: HideUserWallet
        nameWithType: IWallet.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.HideUserWallet
      VB:
      - id: Timba.Games.SacredTails.IWallet.HideUserWallet*
        name: HideUserWallet
        nameWithType: IWallet.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.HideUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.IWallet.HideUserWallet
  Timba.Games.SacredTails.IWallet.ShowUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: IWallet.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.ShowUserWallet
      VB:
      - id: Timba.Games.SacredTails.IWallet.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: IWallet.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.ShowUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.IWallet.ShowUserWallet
  Timba.Games.SacredTails.IWallet:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet
        name: IWallet
        nameWithType: IWallet
        qualifiedName: Timba.Games.SacredTails.IWallet
      VB:
      - id: Timba.Games.SacredTails.IWallet
        name: IWallet
        nameWithType: IWallet
        qualifiedName: Timba.Games.SacredTails.IWallet
    isDefinition: true
    parent: Timba.Games.SacredTails
    commentId: T:Timba.Games.SacredTails.IWallet
  Timba.Games.SacredTails:
    name:
      CSharp:
      - name: Timba.Games.SacredTails
        nameWithType: Timba.Games.SacredTails
        qualifiedName: Timba.Games.SacredTails
      VB:
      - name: Timba.Games.SacredTails
        nameWithType: Timba.Games.SacredTails
        qualifiedName: Timba.Games.SacredTails
    isDefinition: true
    commentId: N:Timba.Games.SacredTails
  Timba.Games.SacredTails.WalletController.Start*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.Start*
        name: Start
        nameWithType: WalletController.Start
        qualifiedName: Timba.Games.SacredTails.WalletController.Start
      VB:
      - id: Timba.Games.SacredTails.WalletController.Start*
        name: Start
        nameWithType: WalletController.Start
        qualifiedName: Timba.Games.SacredTails.WalletController.Start
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.Start
  Global.GetUserInventoryResult:
    name:
      CSharp:
      - id: Global.GetUserInventoryResult
        name: GetUserInventoryResult
        nameWithType: GetUserInventoryResult
        qualifiedName: GetUserInventoryResult
        isExternal: true
      VB:
      - id: Global.GetUserInventoryResult
        name: GetUserInventoryResult
        nameWithType: GetUserInventoryResult
        qualifiedName: GetUserInventoryResult
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GetUserInventoryResult'
  Timba.Games.SacredTails.WalletController.GetPlayerCurrency*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.GetPlayerCurrency*
        name: GetPlayerCurrency
        nameWithType: WalletController.GetPlayerCurrency
        qualifiedName: Timba.Games.SacredTails.WalletController.GetPlayerCurrency
      VB:
      - id: Timba.Games.SacredTails.WalletController.GetPlayerCurrency*
        name: GetPlayerCurrency
        nameWithType: WalletController.GetPlayerCurrency
        qualifiedName: Timba.Games.SacredTails.WalletController.GetPlayerCurrency
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.GetPlayerCurrency
  Timba.Games.SacredTails.WalletController.GetUserCurrentCoins*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins*
        name: GetUserCurrentCoins
        nameWithType: WalletController.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins
      VB:
      - id: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins*
        name: GetUserCurrentCoins
        nameWithType: WalletController.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.GetUserCurrentCoins
  Timba.Games.SacredTails.IWallet.GetUserCurrentCoins:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
        name: GetUserCurrentCoins
        nameWithType: IWallet.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
        name: GetUserCurrentCoins
        nameWithType: IWallet.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.IWallet
    commentId: M:Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
  Timba.Games.SacredTails.WalletController.UpdateUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.UpdateUserWallet*
        name: UpdateUserWallet
        nameWithType: WalletController.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.UpdateUserWallet
      VB:
      - id: Timba.Games.SacredTails.WalletController.UpdateUserWallet*
        name: UpdateUserWallet
        nameWithType: WalletController.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.UpdateUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.UpdateUserWallet
  Timba.Games.SacredTails.IWallet.UpdateUserWallet:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.UpdateUserWallet
        name: UpdateUserWallet
        nameWithType: IWallet.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.UpdateUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.IWallet.UpdateUserWallet
        name: UpdateUserWallet
        nameWithType: IWallet.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.UpdateUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.IWallet
    commentId: M:Timba.Games.SacredTails.IWallet.UpdateUserWallet
  Timba.Games.SacredTails.WalletController.ShowUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: WalletController.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.ShowUserWallet
      VB:
      - id: Timba.Games.SacredTails.WalletController.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: WalletController.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.ShowUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.ShowUserWallet
  Timba.Games.SacredTails.IWallet.ShowUserWallet:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.ShowUserWallet
        name: ShowUserWallet
        nameWithType: IWallet.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.ShowUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.IWallet.ShowUserWallet
        name: ShowUserWallet
        nameWithType: IWallet.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.ShowUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.IWallet
    commentId: M:Timba.Games.SacredTails.IWallet.ShowUserWallet
  Timba.Games.SacredTails.WalletController.HideUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.HideUserWallet*
        name: HideUserWallet
        nameWithType: WalletController.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.HideUserWallet
      VB:
      - id: Timba.Games.SacredTails.WalletController.HideUserWallet*
        name: HideUserWallet
        nameWithType: WalletController.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.HideUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.HideUserWallet
  Timba.Games.SacredTails.IWallet.HideUserWallet:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.HideUserWallet
        name: HideUserWallet
        nameWithType: IWallet.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.HideUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.IWallet.HideUserWallet
        name: HideUserWallet
        nameWithType: IWallet.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.HideUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.IWallet
    commentId: M:Timba.Games.SacredTails.IWallet.HideUserWallet
  Timba.Games.SacredTails.WalletController.IsReady*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.IsReady*
        name: IsReady
        nameWithType: WalletController.IsReady
        qualifiedName: Timba.Games.SacredTails.WalletController.IsReady
      VB:
      - id: Timba.Games.SacredTails.WalletController.IsReady*
        name: IsReady
        nameWithType: WalletController.IsReady
        qualifiedName: Timba.Games.SacredTails.WalletController.IsReady
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.IsReady
  Timba.Games.SacredTails.WalletController:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController
        name: WalletController
        nameWithType: WalletController
        qualifiedName: Timba.Games.SacredTails.WalletController
      VB:
      - id: Timba.Games.SacredTails.WalletController
        name: WalletController
        nameWithType: WalletController
        qualifiedName: Timba.Games.SacredTails.WalletController
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.WalletController
  Timba.Games.SacredTails.Lobby.SacredTeleport:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.SacredTeleport
        name: SacredTeleport
        nameWithType: SacredTeleport
        qualifiedName: Timba.Games.SacredTails.Lobby.SacredTeleport
      VB:
      - id: Timba.Games.SacredTails.Lobby.SacredTeleport
        name: SacredTeleport
        nameWithType: SacredTeleport
        qualifiedName: Timba.Games.SacredTails.Lobby.SacredTeleport
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.SacredTeleport
  Global.ShinseiSpawner:
    name:
      CSharp:
      - id: Global.ShinseiSpawner
        name: ShinseiSpawner
        nameWithType: ShinseiSpawner
        qualifiedName: ShinseiSpawner
        isExternal: true
      VB:
      - id: Global.ShinseiSpawner
        name: ShinseiSpawner
        nameWithType: ShinseiSpawner
        qualifiedName: ShinseiSpawner
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ShinseiSpawner'
  Timba.Games.SacredTails.Lobby.PartyManager.Start*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Start*
        name: Start
        nameWithType: PartyManager.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Start
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Start*
        name: Start
        nameWithType: PartyManager.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Start
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.Start
  Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis*
        name: UpdateShinseis
        nameWithType: PartyManager.UpdateShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis*
        name: UpdateShinseis
        nameWithType: PartyManager.UpdateShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
  Global.Action{System.Int32,ShinseiSlot}:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`2
    commentId: '!:Global.Action{System.Int32,ShinseiSlot}'
  Timba.Games.SacredTails.Lobby.PartyManager.Initialize*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Initialize*
        name: Initialize
        nameWithType: PartyManager.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Initialize
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Initialize*
        name: Initialize
        nameWithType: PartyManager.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Initialize
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.Initialize
  Global.UnityAction`2:
    name:
      CSharp:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityAction`2'
  Global.UnityAction{System.Int32,ShinseiSlot}:
    name:
      CSharp:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityAction`2
    commentId: '!:Global.UnityAction{System.Int32,ShinseiSlot}'
  Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction*
        name: ChangeOnClickSlotAction
        nameWithType: PartyManager.ChangeOnClickSlotAction
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction*
        name: ChangeOnClickSlotAction
        nameWithType: PartyManager.ChangeOnClickSlotAction
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction
  Global.ShinseiSlot:
    name:
      CSharp:
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      VB:
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
    isDefinition: true
  Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManager.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManager.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot
  Timba.Games.SacredTails.Lobby.PartyManager.HidePanel*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel*
        name: HidePanel
        nameWithType: PartyManager.HidePanel
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel*
        name: HidePanel
        nameWithType: PartyManager.HidePanel
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
  Timba.Games.SacredTails.Lobby.PartyManager:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager
        name: PartyManager
        nameWithType: PartyManager
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager
        name: PartyManager
        nameWithType: PartyManager
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManager
  Timba.Games.SacredTails.Lobby:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.Lobby
        nameWithType: Timba.Games.SacredTails.Lobby
        qualifiedName: Timba.Games.SacredTails.Lobby
      VB:
      - name: Timba.Games.SacredTails.Lobby
        nameWithType: Timba.Games.SacredTails.Lobby
        qualifiedName: Timba.Games.SacredTails.Lobby
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.Lobby
  Timba.Games.SacredTails.Lobby.PartyManager.selectorPos:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
        name: selectorPos
        nameWithType: PartyManager.selectorPos
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
        name: selectorPos
        nameWithType: PartyManager.selectorPos
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: F:Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
  Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
        name: shinseiSpawner
        nameWithType: PartyManager.shinseiSpawner
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
        name: shinseiSpawner
        nameWithType: PartyManager.shinseiSpawner
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: F:Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
  Timba.Games.SacredTails.Lobby.PartyManager.Start:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Start
        name: Start
        nameWithType: PartyManager.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Start
        name: Start
        nameWithType: PartyManager.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.Start
  Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
        name: UpdateShinseis
        nameWithType: PartyManager.UpdateShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
        name: UpdateShinseis
        nameWithType: PartyManager.UpdateShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
  Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot}):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
        name: ChangeOnClickSlotAction
        nameWithType: PartyManager.ChangeOnClickSlotAction
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
        name: ChangeOnClickSlotAction
        nameWithType: PartyManager.ChangeOnClickSlotAction
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
  Timba.Games.SacredTails.Lobby.PartyManager.HidePanel:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
        name: HidePanel
        nameWithType: PartyManager.HidePanel
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
        name: HidePanel
        nameWithType: PartyManager.HidePanel
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
  Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot}):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
        name: Initialize
        nameWithType: PartyManager.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
        name: Initialize
        nameWithType: PartyManager.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
  Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize*
        name: Initialize
        nameWithType: PartyManagerLobby.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize*
        name: Initialize
        nameWithType: PartyManagerLobby.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize
  Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
        name: OnClickSlot
        nameWithType: PartyManager.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
        name: OnClickSlot
        nameWithType: PartyManager.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
  Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManagerLobby.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManagerLobby.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot
  Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn*
        name: SwapShinseiBtn
        nameWithType: PartyManagerLobby.SwapShinseiBtn
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn*
        name: SwapShinseiBtn
        nameWithType: PartyManagerLobby.SwapShinseiBtn
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn
  Timba.Games.SacredTails.Lobby.PartyManagerLobby:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby
        name: PartyManagerLobby
        nameWithType: PartyManagerLobby
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby
        name: PartyManagerLobby
        nameWithType: PartyManagerLobby
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManagerLobby
  Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize*
        name: Initialize
        nameWithType: PartyManagerVault.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize*
        name: Initialize
        nameWithType: PartyManagerVault.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize
  Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManagerVault.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManagerVault.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot
  Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei*
        name: DisplayPreviewForShisnei
        nameWithType: PartyManagerVault.DisplayPreviewForShisnei
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei*
        name: DisplayPreviewForShisnei
        nameWithType: PartyManagerVault.DisplayPreviewForShisnei
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei
  Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis*
        name: ChangeShinseis
        nameWithType: PartyManagerVault.ChangeShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis*
        name: ChangeShinseis
        nameWithType: PartyManagerVault.ChangeShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis
  Timba.Games.SacredTails.Lobby.PartyManagerVault:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault
        name: PartyManagerVault
        nameWithType: PartyManagerVault
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault
        name: PartyManagerVault
        nameWithType: PartyManagerVault
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManagerVault
  Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start*
        name: Start
        nameWithType: ShinseiVaultController.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start*
        name: Start
        nameWithType: ShinseiVaultController.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start
  Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize*
        name: Initialize
        nameWithType: ShinseiVaultController.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize*
        name: Initialize
        nameWithType: ShinseiVaultController.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize
  Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected*
        name: OnVaultShinseiSelected
        nameWithType: ShinseiVaultController.OnVaultShinseiSelected
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected*
        name: OnVaultShinseiSelected
        nameWithType: ShinseiVaultController.OnVaultShinseiSelected
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected
  Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei*
        name: DisplayPreviewForShisnei
        nameWithType: ShinseiVaultController.DisplayPreviewForShisnei
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei*
        name: DisplayPreviewForShisnei
        nameWithType: ShinseiVaultController.DisplayPreviewForShisnei
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei
  Timba.Games.SacredTails.Lobby.ShinseiVaultController:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController
        name: ShinseiVaultController
        nameWithType: ShinseiVaultController
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController
        name: ShinseiVaultController
        nameWithType: ShinseiVaultController
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.ShinseiVaultController
  Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner*
        name: SetOwner
        nameWithType: ShinseiMovement.SetOwner
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner*
        name: SetOwner
        nameWithType: ShinseiMovement.SetOwner
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.ShinseiMovement.SetOwner
  Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt*
        name: MoveAt
        nameWithType: ShinseiMovement.MoveAt
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt*
        name: MoveAt
        nameWithType: ShinseiMovement.MoveAt
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.ShinseiMovement.MoveAt
  Timba.Games.SacredTails.Lobby.ShinseiMovement:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiMovement
        name: ShinseiMovement
        nameWithType: ShinseiMovement
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiMovement
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiMovement
        name: ShinseiMovement
        nameWithType: ShinseiMovement
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiMovement
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.ShinseiMovement
  Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init*
        name: Init
        nameWithType: ChatModule.Init
        qualifiedName: Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init
      VB:
      - id: Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init*
        name: Init
        nameWithType: ChatModule.Init
        qualifiedName: Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.Chat.ChatModule.Init
  Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage*
        name: SendMessage
        nameWithType: ChatModule.SendMessage
        qualifiedName: Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage
      VB:
      - id: Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage*
        name: SendMessage
        nameWithType: ChatModule.SendMessage
        qualifiedName: Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.Chat.ChatModule.SendMessage
  Timba.Games.SacredTails.Lobby.Chat.ChatModule:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.Chat.ChatModule
        name: ChatModule
        nameWithType: ChatModule
        qualifiedName: Timba.Games.SacredTails.Lobby.Chat.ChatModule
      VB:
      - id: Timba.Games.SacredTails.Lobby.Chat.ChatModule
        name: ChatModule
        nameWithType: ChatModule
        qualifiedName: Timba.Games.SacredTails.Lobby.Chat.ChatModule
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.Chat.ChatModule
  Timba.Games.SacredTails.Lobby.Chat.Message:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.Chat.Message
        name: Message
        nameWithType: Message
        qualifiedName: Timba.Games.SacredTails.Lobby.Chat.Message
      VB:
      - id: Timba.Games.SacredTails.Lobby.Chat.Message
        name: Message
        nameWithType: Message
        qualifiedName: Timba.Games.SacredTails.Lobby.Chat.Message
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.Chat.Message
  Timba.Games.SacredTails.Lobby.Chat:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.Lobby.Chat
        nameWithType: Timba.Games.SacredTails.Lobby.Chat
        qualifiedName: Timba.Games.SacredTails.Lobby.Chat
      VB:
      - name: Timba.Games.SacredTails.Lobby.Chat
        nameWithType: Timba.Games.SacredTails.Lobby.Chat
        qualifiedName: Timba.Games.SacredTails.Lobby.Chat
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.Lobby.Chat
  Timba.Games.SacredTails.LobbyDatabase:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.LobbyDatabase
        nameWithType: Timba.Games.SacredTails.LobbyDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase
      VB:
      - name: Timba.Games.SacredTails.LobbyDatabase
        nameWithType: Timba.Games.SacredTails.LobbyDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.LobbyDatabase
  Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData*
        name: CurrentUserData
        nameWithType: ILobbydatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData*
        name: CurrentUserData
        nameWithType: ILobbydatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: ILobbydatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: ILobbydatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData*
        name: SetGetPlayersData
        nameWithType: ILobbydatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData*
        name: SetGetPlayersData
        nameWithType: ILobbydatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData
  Global.Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}}'
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData*
        name: RecievePlayersData
        nameWithType: ILobbydatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData*
        name: RecievePlayersData
        nameWithType: ILobbydatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData*
        name: SendPlayerData
        nameWithType: ILobbydatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData*
        name: SendPlayerData
        nameWithType: ILobbydatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby*
        name: DisconnectFromLobby
        nameWithType: ILobbydatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby*
        name: DisconnectFromLobby
        nameWithType: ILobbydatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
        name: ILobbydatabase
        nameWithType: ILobbydatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
        name: ILobbydatabase
        nameWithType: ILobbydatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
  Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        name: TypeOfTournamentRequest
        nameWithType: TypeOfTournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        name: TypeOfTournamentRequest
        nameWithType: TypeOfTournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
  Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest*
        name: TournamentRequest
        nameWithType: ITournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest*
        name: TournamentRequest
        nameWithType: ITournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest
  Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
        name: ITournamentDatabase
        nameWithType: ITournamentDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
        name: ITournamentDatabase
        nameWithType: ITournamentDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
  System.Collections.Generic.List{Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload}
  Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
  Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
        name: CharacterStateEnum
        nameWithType: CharacterStateEnum
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
        name: CharacterStateEnum
        nameWithType: CharacterStateEnum
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData*
        name: CurrentUserData
        nameWithType: PlayfabLobbyDatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData*
        name: CurrentUserData
        nameWithType: PlayfabLobbyDatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
        name: CurrentUserData
        nameWithType: ILobbydatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
        name: CurrentUserData
        nameWithType: ILobbydatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: P:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake*
        name: Awake
        nameWithType: PlayfabLobbyDatabase.Awake
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake*
        name: Awake
        nameWithType: PlayfabLobbyDatabase.Awake
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady*
        name: IsReady
        nameWithType: PlayfabLobbyDatabase.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady*
        name: IsReady
        nameWithType: PlayfabLobbyDatabase.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: PlayfabLobbyDatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: PlayfabLobbyDatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby
  ? Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
        name: ConnectToLobby
        nameWithType: ILobbydatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
        name: ConnectToLobby
        nameWithType: ILobbydatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData*
        name: SetGetPlayersData
        nameWithType: PlayfabLobbyDatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData*
        name: SetGetPlayersData
        nameWithType: PlayfabLobbyDatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData
  ? Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
        name: SetGetPlayersData
        nameWithType: ILobbydatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
        name: SetGetPlayersData
        nameWithType: ILobbydatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData*
        name: RecievePlayersData
        nameWithType: PlayfabLobbyDatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData*
        name: RecievePlayersData
        nameWithType: PlayfabLobbyDatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData
  ? Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
        name: RecievePlayersData
        nameWithType: ILobbydatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
        name: RecievePlayersData
        nameWithType: ILobbydatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData*
        name: SendPlayerData
        nameWithType: PlayfabLobbyDatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData*
        name: SendPlayerData
        nameWithType: PlayfabLobbyDatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData
  ? Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
        name: SendPlayerData
        nameWithType: ILobbydatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
        name: SendPlayerData
        nameWithType: ILobbydatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby*
        name: DisconnectFromLobby
        nameWithType: PlayfabLobbyDatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby*
        name: DisconnectFromLobby
        nameWithType: PlayfabLobbyDatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby
  ? Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
        name: DisconnectFromLobby
        nameWithType: ILobbydatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
        name: DisconnectFromLobby
        nameWithType: ILobbydatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
        name: PlayfabLobbyDatabase
        nameWithType: PlayfabLobbyDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
        name: PlayfabLobbyDatabase
        nameWithType: PlayfabLobbyDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
  Timba.Games.SacredTails.LobbyDatabase.DeletePayload:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
        name: DeletePayload
        nameWithType: DeletePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
        name: DeletePayload
        nameWithType: DeletePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.DeletePayload
  Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady*
        name: IsReady
        nameWithType: PlayfabTournamentDatabase.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady*
        name: IsReady
        nameWithType: PlayfabTournamentDatabase.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady
  Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest*
        name: TournamentRequest
        nameWithType: PlayfabTournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest*
        name: TournamentRequest
        nameWithType: PlayfabTournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest
  ? Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
        name: TournamentRequest
        nameWithType: ITournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        name: TypeOfTournamentRequest
        nameWithType: TypeOfTournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
        name: TournamentRequest
        nameWithType: ITournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        name: TypeOfTournamentRequest
        nameWithType: TypeOfTournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
  Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
        name: PlayfabTournamentDatabase
        nameWithType: PlayfabTournamentDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
        name: PlayfabTournamentDatabase
        nameWithType: PlayfabTournamentDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
  Timba.Games.SacredTails.LobbyDatabase.RequestConstants:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
        name: RequestConstants
        nameWithType: RequestConstants
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
        name: RequestConstants
        nameWithType: RequestConstants
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.RequestConstants
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: ILobbyNetworkManager.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: ILobbyNetworkManager.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition*
        name: CurrentSecondsBetweenPetition
        nameWithType: ILobbyNetworkManager.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition*
        name: CurrentSecondsBetweenPetition
        nameWithType: ILobbyNetworkManager.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: ILobbyNetworkManager.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: ILobbyNetworkManager.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby
  System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload}
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers*
        name: ManageLobbyPlayers
        nameWithType: ILobbyNetworkManager.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers*
        name: ManageLobbyPlayers
        nameWithType: ILobbyNetworkManager.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode*
        name: ToggleBattleMode
        nameWithType: ILobbyNetworkManager.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode*
        name: ToggleBattleMode
        nameWithType: ILobbyNetworkManager.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates*
        name: TickCheckActivates
        nameWithType: ILobbyNetworkManager.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates*
        name: TickCheckActivates
        nameWithType: ILobbyNetworkManager.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
  Global.Action{ThirdPersonController}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{ThirdPersonController}'
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected*
        name: OnConnected
        nameWithType: ILobbyNetworkManager.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected*
        name: OnConnected
        nameWithType: ILobbyNetworkManager.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging*
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging*
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId*
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId*
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI*
        name: ShowPlayerPersonalUI
        nameWithType: ILobbyNetworkManager.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI*
        name: ShowPlayerPersonalUI
        nameWithType: ILobbyNetworkManager.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState*
        name: GetPlayerState
        nameWithType: ILobbyNetworkManager.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState*
        name: GetPlayerState
        nameWithType: ILobbyNetworkManager.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
        name: ILobbyNetworkManager
        nameWithType: ILobbyNetworkManager
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
        name: ILobbyNetworkManager
        nameWithType: ILobbyNetworkManager
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
  Timba.Games.SacredTails.LobbyNetworking:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.LobbyNetworking
        nameWithType: Timba.Games.SacredTails.LobbyNetworking
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking
      VB:
      - name: Timba.Games.SacredTails.LobbyNetworking
        nameWithType: Timba.Games.SacredTails.LobbyNetworking
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.LobbyNetworking
  System.Collections.Generic.Dictionary{System.String,ThirdPersonController}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,ThirdPersonController}
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: LobbyNetworkingController.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: LobbyNetworkingController.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
        name: CurrentPlayer
        nameWithType: ILobbyNetworkManager.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
        name: CurrentPlayer
        nameWithType: ILobbyNetworkManager.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
  System.Collections.Generic.Dictionary{System.String,System.Boolean}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Boolean}
  Global.ILobbydatabase:
    name:
      CSharp:
      - id: Global.ILobbydatabase
        name: ILobbydatabase
        nameWithType: ILobbydatabase
        qualifiedName: ILobbydatabase
        isExternal: true
      VB:
      - id: Global.ILobbydatabase
        name: ILobbydatabase
        nameWithType: ILobbydatabase
        qualifiedName: ILobbydatabase
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ILobbydatabase'
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition*
        name: CurrentSecondsBetweenPetition
        nameWithType: LobbyNetworkingController.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition*
        name: CurrentSecondsBetweenPetition
        nameWithType: LobbyNetworkingController.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
        name: CurrentSecondsBetweenPetition
        nameWithType: ILobbyNetworkManager.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
        name: CurrentSecondsBetweenPetition
        nameWithType: ILobbyNetworkManager.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected*
        name: OnConnected
        nameWithType: LobbyNetworkingController.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected*
        name: OnConnected
        nameWithType: LobbyNetworkingController.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
        name: OnConnected
        nameWithType: ILobbyNetworkManager.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
        name: OnConnected
        nameWithType: ILobbyNetworkManager.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
  Global.UnityEvent{ThirdPersonController}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{ThirdPersonController}'
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start*
        name: Start
        nameWithType: LobbyNetworkingController.Start
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start*
        name: Start
        nameWithType: LobbyNetworkingController.Start
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: LobbyNetworkingController.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: LobbyNetworkingController.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
        name: ConnectToLobby
        nameWithType: ILobbyNetworkManager.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
        name: ConnectToLobby
        nameWithType: ILobbyNetworkManager.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates*
        name: TickCheckActivates
        nameWithType: LobbyNetworkingController.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates*
        name: TickCheckActivates
        nameWithType: LobbyNetworkingController.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
        name: TickCheckActivates
        nameWithType: ILobbyNetworkManager.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
        name: TickCheckActivates
        nameWithType: ILobbyNetworkManager.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck*
        name: TickCheck
        nameWithType: LobbyNetworkingController.TickCheck
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck*
        name: TickCheck
        nameWithType: LobbyNetworkingController.TickCheck
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck
  Global.LobbyPlayerBasePayload:
    name:
      CSharp:
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      VB:
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
    isDefinition: true
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving*
        name: CheckIfIsMoving
        nameWithType: LobbyNetworkingController.CheckIfIsMoving
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving*
        name: CheckIfIsMoving
        nameWithType: LobbyNetworkingController.CheckIfIsMoving
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers*
        name: ManageLobbyPlayers
        nameWithType: LobbyNetworkingController.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers*
        name: ManageLobbyPlayers
        nameWithType: LobbyNetworkingController.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers
  ? Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
        name: ManageLobbyPlayers
        nameWithType: ILobbyNetworkManager.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
        name: ManageLobbyPlayers
        nameWithType: ILobbyNetworkManager.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
  System.Collections.Generic.KeyValuePair`2:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.KeyValuePair`2
  System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload}:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.KeyValuePair`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload}
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected*
        name: NewPlayerConnected
        nameWithType: LobbyNetworkingController.NewPlayerConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected*
        name: NewPlayerConnected
        nameWithType: LobbyNetworkingController.NewPlayerConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState*
        name: GetPlayerState
        nameWithType: LobbyNetworkingController.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState*
        name: GetPlayerState
        nameWithType: LobbyNetworkingController.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
        name: GetPlayerState
        nameWithType: ILobbyNetworkManager.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
        name: GetPlayerState
        nameWithType: ILobbyNetworkManager.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification*
        name: PlayerChallengeVerification
        nameWithType: LobbyNetworkingController.PlayerChallengeVerification
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification*
        name: PlayerChallengeVerification
        nameWithType: LobbyNetworkingController.PlayerChallengeVerification
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId*
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId*
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging*
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging*
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
  Global.CharacterRecolor:
    name:
      CSharp:
      - id: Global.CharacterRecolor
        name: CharacterRecolor
        nameWithType: CharacterRecolor
        qualifiedName: CharacterRecolor
        isExternal: true
      VB:
      - id: Global.CharacterRecolor
        name: CharacterRecolor
        nameWithType: CharacterRecolor
        qualifiedName: CharacterRecolor
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CharacterRecolor'
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer*
        name: PaintOtherPlayer
        nameWithType: LobbyNetworkingController.PaintOtherPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer*
        name: PaintOtherPlayer
        nameWithType: LobbyNetworkingController.PaintOtherPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: LobbyNetworkingController.OnApplicationQuit
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: LobbyNetworkingController.OnApplicationQuit
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI*
        name: ShowPlayerPersonalUI
        nameWithType: LobbyNetworkingController.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI*
        name: ShowPlayerPersonalUI
        nameWithType: LobbyNetworkingController.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
        name: ShowPlayerPersonalUI
        nameWithType: ILobbyNetworkManager.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
        name: ShowPlayerPersonalUI
        nameWithType: ILobbyNetworkManager.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode*
        name: ToogleChatMode
        nameWithType: LobbyNetworkingController.ToogleChatMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode*
        name: ToogleChatMode
        nameWithType: LobbyNetworkingController.ToogleChatMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode*
        name: UntoogleChatMode
        nameWithType: LobbyNetworkingController.UntoogleChatMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode*
        name: UntoogleChatMode
        nameWithType: LobbyNetworkingController.UntoogleChatMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode*
        name: ToggleBattleMode
        nameWithType: LobbyNetworkingController.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode*
        name: ToggleBattleMode
        nameWithType: LobbyNetworkingController.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
        name: ToggleBattleMode
        nameWithType: ILobbyNetworkManager.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
        name: ToggleBattleMode
        nameWithType: ILobbyNetworkManager.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash*
        name: GeneratePlayfabIdHash
        nameWithType: LobbyNetworkingController.GeneratePlayfabIdHash
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash*
        name: GeneratePlayfabIdHash
        nameWithType: LobbyNetworkingController.GeneratePlayfabIdHash
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady*
        name: IsReady
        nameWithType: LobbyNetworkingController.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady*
        name: IsReady
        nameWithType: LobbyNetworkingController.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
        name: LobbyNetworkingController
        nameWithType: LobbyNetworkingController
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
        name: LobbyNetworkingController
        nameWithType: LobbyNetworkingController
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
  System.Collections.Generic.List{Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
        name: LobbyNetworkingController.DirectMessage
        nameWithType: LobbyNetworkingController.DirectMessage
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
        name: LobbyNetworkingController.DirectMessage
        nameWithType: LobbyNetworkingController.DirectMessage
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage}
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
        name: LobbyNetworkingController.MessageObject
        nameWithType: LobbyNetworkingController.MessageObject
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
        name: LobbyNetworkingController.MessageObject
        nameWithType: LobbyNetworkingController.MessageObject
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
        name: LobbyNetworkingController.DirectMessage
        nameWithType: LobbyNetworkingController.DirectMessage
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
        name: LobbyNetworkingController.DirectMessage
        nameWithType: LobbyNetworkingController.DirectMessage
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
  Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
        name: ConnectionResponse
        nameWithType: ConnectionResponse
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
        name: ConnectionResponse
        nameWithType: ConnectionResponse
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
  Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
        name: PlayersStreamData
        nameWithType: PlayersStreamData
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
        name: PlayersStreamData
        nameWithType: PlayersStreamData
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
  Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup*
        name: OpenSkipTurnPopup
        nameWithType: UIHelper.OpenSkipTurnPopup
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup
      VB:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup*
        name: OpenSkipTurnPopup
        nameWithType: UIHelper.OpenSkipTurnPopup
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup
  Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup*
        name: OpenSurrenderPopup
        nameWithType: UIHelper.OpenSurrenderPopup
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup
      VB:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup*
        name: OpenSurrenderPopup
        nameWithType: UIHelper.OpenSurrenderPopup
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup
  Timba.Games.SacredTails.BattleModule.UIHelper:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper
        name: UIHelper
        nameWithType: UIHelper
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper
      VB:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper
        name: UIHelper
        nameWithType: UIHelper
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.BattleModule.UIHelper
  Timba.Games.SacredTails.BattleModule:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.BattleModule
        nameWithType: Timba.Games.SacredTails.BattleModule
        qualifiedName: Timba.Games.SacredTails.BattleModule
      VB:
      - name: Timba.Games.SacredTails.BattleModule
        nameWithType: Timba.Games.SacredTails.BattleModule
        qualifiedName: Timba.Games.SacredTails.BattleModule
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.BattleModule
  System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action}
  Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup*
        name: ShowInfoPopup
        nameWithType: IPopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup
      VB:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup*
        name: ShowInfoPopup
        nameWithType: IPopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup
  Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup*
        name: HideInfoPopup
        nameWithType: IPopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      VB:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup*
        name: HideInfoPopup
        nameWithType: IPopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
  Timba.Games.SacredTails.PopupModule.IPopupManager:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager
        name: IPopupManager
        nameWithType: IPopupManager
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager
      VB:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager
        name: IPopupManager
        nameWithType: IPopupManager
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager
    isDefinition: true
    parent: Timba.Games.SacredTails.PopupModule
    commentId: T:Timba.Games.SacredTails.PopupModule.IPopupManager
  Timba.Games.SacredTails.PopupModule:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.PopupModule
        nameWithType: Timba.Games.SacredTails.PopupModule
        qualifiedName: Timba.Games.SacredTails.PopupModule
      VB:
      - name: Timba.Games.SacredTails.PopupModule
        nameWithType: Timba.Games.SacredTails.PopupModule
        qualifiedName: Timba.Games.SacredTails.PopupModule
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.PopupModule
  Timba.Games.SacredTails.PopupModule.PopupManager.IsReady*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady*
        name: IsReady
        nameWithType: PopupManager.IsReady
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady
      VB:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady*
        name: IsReady
        nameWithType: PopupManager.IsReady
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.PopupModule.PopupManager.IsReady
  Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup*
        name: ShowInfoPopup
        nameWithType: PopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup
      VB:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup*
        name: ShowInfoPopup
        nameWithType: PopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup
  ? Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
        name: ShowInfoPopup
        nameWithType: IPopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
        name: ShowInfoPopup
        nameWithType: IPopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.PopupModule.IPopupManager
    commentId: M:Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
  Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup*
        name: HideInfoPopup
        nameWithType: PopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup
      VB:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup*
        name: HideInfoPopup
        nameWithType: PopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup
  Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
        name: HideInfoPopup
        nameWithType: IPopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
        name: HideInfoPopup
        nameWithType: IPopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.PopupModule.IPopupManager
    commentId: M:Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
  Timba.Games.SacredTails.PopupModule.PopupManager:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager
        name: PopupManager
        nameWithType: PopupManager
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager
      VB:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager
        name: PopupManager
        nameWithType: PopupManager
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.PopupModule.PopupManager
  Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      VB:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
    isDefinition: true
    parent: Timba.Games.SacredTails.PopupModule
    commentId: T:Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
  Timba.Games.SacredTails.StoreModule.StoreController.Start*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.Start*
        name: Start
        nameWithType: StoreController.Start
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.Start
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.Start*
        name: Start
        nameWithType: StoreController.Start
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.Start
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.Start
  Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent*
        name: SubscribeToPurchaseEvent
        nameWithType: StoreController.SubscribeToPurchaseEvent
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent*
        name: SubscribeToPurchaseEvent
        nameWithType: StoreController.SubscribeToPurchaseEvent
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent
  Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore*
        name: RequestCardsStore
        nameWithType: StoreController.RequestCardsStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore*
        name: RequestCardsStore
        nameWithType: StoreController.RequestCardsStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore
  Global.GetCatalogItemsResult:
    name:
      CSharp:
      - id: Global.GetCatalogItemsResult
        name: GetCatalogItemsResult
        nameWithType: GetCatalogItemsResult
        qualifiedName: GetCatalogItemsResult
        isExternal: true
      VB:
      - id: Global.GetCatalogItemsResult
        name: GetCatalogItemsResult
        nameWithType: GetCatalogItemsResult
        qualifiedName: GetCatalogItemsResult
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GetCatalogItemsResult'
  Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore*
        name: SetCardStore
        nameWithType: StoreController.SetCardStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore*
        name: SetCardStore
        nameWithType: StoreController.SetCardStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore
  Timba.Games.SacredTails.StoreModule.StoreController.HideStore*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.HideStore*
        name: HideStore
        nameWithType: StoreController.HideStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.HideStore
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.HideStore*
        name: HideStore
        nameWithType: StoreController.HideStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.HideStore
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.HideStore
  Timba.Games.SacredTails.StoreModule.StoreController.CreatePool*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool*
        name: CreatePool
        nameWithType: StoreController.CreatePool
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool*
        name: CreatePool
        nameWithType: StoreController.CreatePool
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.CreatePool
  System.Collections.Generic.List{CatalogItem}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CatalogItem
        name: CatalogItem
        nameWithType: CatalogItem
        qualifiedName: CatalogItem
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CatalogItem
        name: CatalogItem
        nameWithType: CatalogItem
        qualifiedName: CatalogItem
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CatalogItem}
  Timba.Games.SacredTails.StoreModule.StoreController.FillPool*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.FillPool*
        name: FillPool
        nameWithType: StoreController.FillPool
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.FillPool
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.FillPool*
        name: FillPool
        nameWithType: StoreController.FillPool
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.FillPool
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.FillPool
  Timba.Games.SacredTails.StoreModule.StoreController.BuyItem*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem*
        name: BuyItem
        nameWithType: StoreController.BuyItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem*
        name: BuyItem
        nameWithType: StoreController.BuyItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.BuyItem
  Timba.Games.SacredTails.StoreModule.StoreController:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController
        name: StoreController
        nameWithType: StoreController
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController
        name: StoreController
        nameWithType: StoreController
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreController
  Timba.Games.SacredTails.StoreModule:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.StoreModule
        nameWithType: Timba.Games.SacredTails.StoreModule
        qualifiedName: Timba.Games.SacredTails.StoreModule
      VB:
      - name: Timba.Games.SacredTails.StoreModule
        nameWithType: Timba.Games.SacredTails.StoreModule
        qualifiedName: Timba.Games.SacredTails.StoreModule
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.StoreModule
  Timba.Games.SacredTails.StoreModule.StoreItemData:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreItemData
        name: StoreItemData
        nameWithType: StoreItemData
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItemData
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreItemData
        name: StoreItemData
        nameWithType: StoreItemData
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItemData
    isDefinition: true
    parent: Timba.Games.SacredTails.StoreModule
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreItemData
  Timba.Games.SacredTails.StoreModule.StoreItem.Init*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem.Init*
        name: Init
        nameWithType: StoreItem.Init
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem.Init
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem.Init*
        name: Init
        nameWithType: StoreItem.Init
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem.Init
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreItem.Init
  Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction*
        name: SetCardButtonAction
        nameWithType: StoreItem.SetCardButtonAction
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction*
        name: SetCardButtonAction
        nameWithType: StoreItem.SetCardButtonAction
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction
  Timba.Games.SacredTails.StoreModule.StoreItem:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem
        name: StoreItem
        nameWithType: StoreItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem
        name: StoreItem
        nameWithType: StoreItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreItem
  Global.Action{System.Int32,System.UInt32}:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`2
    commentId: '!:Global.Action{System.Int32,System.UInt32}'
  Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard*
        name: ShowPopupPurchaseCard
        nameWithType: StoreView.ShowPopupPurchaseCard
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard*
        name: ShowPopupPurchaseCard
        nameWithType: StoreView.ShowPopupPurchaseCard
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard
  Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult*
        name: ShowPopupPurchaseResult
        nameWithType: StoreView.ShowPopupPurchaseResult
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult*
        name: ShowPopupPurchaseResult
        nameWithType: StoreView.ShowPopupPurchaseResult
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult
  Timba.Games.SacredTails.StoreModule.StoreView.HidePopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup*
        name: HidePopup
        nameWithType: StoreView.HidePopup
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup*
        name: HidePopup
        nameWithType: StoreView.HidePopup
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreView.HidePopup
  Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase*
        name: HidePanelAfterPurchase
        nameWithType: StoreView.HidePanelAfterPurchase
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase*
        name: HidePanelAfterPurchase
        nameWithType: StoreView.HidePanelAfterPurchase
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase
  System.Collections.Generic.List{Timba.Games.SacredTails.StoreModule.StoreItem}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.SacredTails.StoreModule.StoreItem
        name: StoreItem
        nameWithType: StoreItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.SacredTails.StoreModule.StoreItem
        name: StoreItem
        nameWithType: StoreItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.Games.SacredTails.StoreModule.StoreItem}
  Timba.Games.SacredTails.StoreModule.StoreView.HideStore*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HideStore*
        name: HideStore
        nameWithType: StoreView.HideStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HideStore
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HideStore*
        name: HideStore
        nameWithType: StoreView.HideStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HideStore
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreView.HideStore
  Timba.Games.SacredTails.StoreModule.StoreView:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView
        name: StoreView
        nameWithType: StoreView
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView
        name: StoreView
        nameWithType: StoreView
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreView
  Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency*
        name: ChangeCurrency
        nameWithType: WalletView.ChangeCurrency
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency
      VB:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency*
        name: ChangeCurrency
        nameWithType: WalletView.ChangeCurrency
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency
  Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: WalletView.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet
      VB:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: WalletView.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet
  Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet*
        name: HideUserWallet
        nameWithType: WalletView.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet
      VB:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet*
        name: HideUserWallet
        nameWithType: WalletView.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet
  Timba.Games.SacredTails.WalletModule.WalletView:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletModule.WalletView
        name: WalletView
        nameWithType: WalletView
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView
      VB:
      - id: Timba.Games.SacredTails.WalletModule.WalletView
        name: WalletView
        nameWithType: WalletView
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.WalletModule.WalletView
  Timba.Games.SacredTails.WalletModule:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.WalletModule
        nameWithType: Timba.Games.SacredTails.WalletModule
        qualifiedName: Timba.Games.SacredTails.WalletModule
      VB:
      - name: Timba.Games.SacredTails.WalletModule
        nameWithType: Timba.Games.SacredTails.WalletModule
        qualifiedName: Timba.Games.SacredTails.WalletModule
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.WalletModule
  Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA*
        name: GeneratePartDNA
        nameWithType: CharacterUtils.GeneratePartDNA
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA
      VB:
      - id: Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA*
        name: GeneratePartDNA
        nameWithType: CharacterUtils.GeneratePartDNA
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterUtils.GeneratePartDNA
  Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues*
        name: GetTypeValues
        nameWithType: CharacterUtils.GetTypeValues
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues
      VB:
      - id: Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues*
        name: GetTypeValues
        nameWithType: CharacterUtils.GetTypeValues
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterUtils.GetTypeValues
  Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA*
        name: ParsePartDNA
        nameWithType: CharacterUtils.ParsePartDNA
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA
      VB:
      - id: Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA*
        name: ParsePartDNA
        nameWithType: CharacterUtils.ParsePartDNA
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterUtils.ParsePartDNA
  Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA*
        name: ParseRarityDNA
        nameWithType: CharacterUtils.ParseRarityDNA
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA
      VB:
      - id: Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA*
        name: ParseRarityDNA
        nameWithType: CharacterUtils.ParseRarityDNA
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterUtils.ParseRarityDNA
  Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat*
        name: GetRarityStat
        nameWithType: CharacterUtils.GetRarityStat
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat
      VB:
      - id: Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat*
        name: GetRarityStat
        nameWithType: CharacterUtils.GetRarityStat
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterUtils.GetRarityStat
  Timba.Games.CharacterFactory.CharacterUtils:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterUtils
        name: CharacterUtils
        nameWithType: CharacterUtils
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils
      VB:
      - id: Timba.Games.CharacterFactory.CharacterUtils
        name: CharacterUtils
        nameWithType: CharacterUtils
        qualifiedName: Timba.Games.CharacterFactory.CharacterUtils
    isDefinition: true
    commentId: T:Timba.Games.CharacterFactory.CharacterUtils
  Utils.Singleton{Timba.Games.CharacterFactory.CharacterBuilder}:
    name:
      CSharp:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.CharacterFactory.CharacterBuilder
        name: CharacterBuilder
        nameWithType: CharacterBuilder
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.CharacterFactory.CharacterBuilder
        name: CharacterBuilder
        nameWithType: CharacterBuilder
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Utils.Singleton`1
    parent: Utils
    commentId: T:Utils.Singleton{Timba.Games.CharacterFactory.CharacterBuilder}
  Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter*
        name: InstantiateCharacter
        nameWithType: CharacterBuilder.InstantiateCharacter
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter
      VB:
      - id: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter*
        name: InstantiateCharacter
        nameWithType: CharacterBuilder.InstantiateCharacter
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter
  Timba.Games.CharacterFactory:
    name:
      CSharp:
      - name: Timba.Games.CharacterFactory
        nameWithType: Timba.Games.CharacterFactory
        qualifiedName: Timba.Games.CharacterFactory
      VB:
      - name: Timba.Games.CharacterFactory
        nameWithType: Timba.Games.CharacterFactory
        qualifiedName: Timba.Games.CharacterFactory
    isDefinition: true
    commentId: N:Timba.Games.CharacterFactory
  Timba.Games.CharacterFactory.CharacterSlot:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterSlot
        name: CharacterSlot
        nameWithType: CharacterSlot
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot
      VB:
      - id: Timba.Games.CharacterFactory.CharacterSlot
        name: CharacterSlot
        nameWithType: CharacterSlot
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot
    isDefinition: true
    parent: Timba.Games.CharacterFactory
    commentId: T:Timba.Games.CharacterFactory.CharacterSlot
  Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual*
        name: UpdateVisual
        nameWithType: CharacterBuilder.UpdateVisual
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual
      VB:
      - id: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual*
        name: UpdateVisual
        nameWithType: CharacterBuilder.UpdateVisual
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual
  Timba.Games.CharacterFactory.CharacterBuilder:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterBuilder
        name: CharacterBuilder
        nameWithType: CharacterBuilder
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder
      VB:
      - id: Timba.Games.CharacterFactory.CharacterBuilder
        name: CharacterBuilder
        nameWithType: CharacterBuilder
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder
    isDefinition: true
    commentId: T:Timba.Games.CharacterFactory.CharacterBuilder
  Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction*
        name: SetButtonAction
        nameWithType: CharacterSelector.SetButtonAction
        qualifiedName: Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction
      VB:
      - id: Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction*
        name: SetButtonAction
        nameWithType: CharacterSelector.SetButtonAction
        qualifiedName: Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterSelector.SetButtonAction
  Timba.Games.CharacterFactory.CharacterSelector:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterSelector
        name: CharacterSelector
        nameWithType: CharacterSelector
        qualifiedName: Timba.Games.CharacterFactory.CharacterSelector
      VB:
      - id: Timba.Games.CharacterFactory.CharacterSelector
        name: CharacterSelector
        nameWithType: CharacterSelector
        qualifiedName: Timba.Games.CharacterFactory.CharacterSelector
    isDefinition: true
    commentId: T:Timba.Games.CharacterFactory.CharacterSelector
  Global.PartSlot[]:
    name:
      CSharp:
      - id: Global.PartSlot
        name: PartSlot
        nameWithType: PartSlot
        qualifiedName: PartSlot
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.PartSlot
        name: PartSlot
        nameWithType: PartSlot
        qualifiedName: PartSlot
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Timba.Games.CharacterFactory.CharacterSlot.PartSlots*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterSlot.PartSlots*
        name: PartSlots
        nameWithType: CharacterSlot.PartSlots
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot.PartSlots
      VB:
      - id: Timba.Games.CharacterFactory.CharacterSlot.PartSlots*
        name: PartSlots
        nameWithType: CharacterSlot.PartSlots
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot.PartSlots
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterSlot.PartSlots
  Timba.Games.CharacterFactory.CharacterSlot.Initialize*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterSlot.Initialize*
        name: Initialize
        nameWithType: CharacterSlot.Initialize
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot.Initialize
      VB:
      - id: Timba.Games.CharacterFactory.CharacterSlot.Initialize*
        name: Initialize
        nameWithType: CharacterSlot.Initialize
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot.Initialize
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterSlot.Initialize
  Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution*
        name: SetShinseiEvolution
        nameWithType: CharacterSlot.SetShinseiEvolution
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution
      VB:
      - id: Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution*
        name: SetShinseiEvolution
        nameWithType: CharacterSlot.SetShinseiEvolution
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterSlot.SetShinseiEvolution
  Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual*
        name: UpdateVisual
        nameWithType: CharacterSlot.UpdateVisual
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual
      VB:
      - id: Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual*
        name: UpdateVisual
        nameWithType: CharacterSlot.UpdateVisual
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterSlot.UpdateVisual
  Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode*
        name: SetCharacterCode
        nameWithType: CharacterSlot.SetCharacterCode
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode
      VB:
      - id: Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode*
        name: SetCharacterCode
        nameWithType: CharacterSlot.SetCharacterCode
        qualifiedName: Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterSlot.SetCharacterCode
  System.Collections.Generic.List{PartStat}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PartStat
        name: PartStat
        nameWithType: PartStat
        qualifiedName: PartStat
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PartStat
        name: PartStat
        nameWithType: PartStat
        qualifiedName: PartStat
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PartStat}
  Timba.Games.CharacterFactory.CharacterType:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: Timba.Games.CharacterFactory.CharacterType
      VB:
      - id: Timba.Games.CharacterFactory.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: Timba.Games.CharacterFactory.CharacterType
    isDefinition: true
    parent: Timba.Games.CharacterFactory
    commentId: T:Timba.Games.CharacterFactory.CharacterType
  Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat*
        name: GetStat
        nameWithType: PartsStatDatabaseSO.GetStat
        qualifiedName: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat
      VB:
      - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat*
        name: GetStat
        nameWithType: PartsStatDatabaseSO.GetStat
        qualifiedName: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStat
  Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue*
        name: GetStatBalanceValue
        nameWithType: PartsStatDatabaseSO.GetStatBalanceValue
        qualifiedName: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue
      VB:
      - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue*
        name: GetStatBalanceValue
        nameWithType: PartsStatDatabaseSO.GetStatBalanceValue
        qualifiedName: Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.PartsStatDatabaseSO.GetStatBalanceValue
  Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat*
        name: CalculateStat
        nameWithType: PartsStatDatabaseSO.CalculateStat
        qualifiedName: Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat
      VB:
      - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat*
        name: CalculateStat
        nameWithType: PartsStatDatabaseSO.CalculateStat
        qualifiedName: Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.PartsStatDatabaseSO.CalculateStat
  Timba.Games.CharacterFactory.PartsStatDatabaseSO:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO
        name: PartsStatDatabaseSO
        nameWithType: PartsStatDatabaseSO
        qualifiedName: Timba.Games.CharacterFactory.PartsStatDatabaseSO
      VB:
      - id: Timba.Games.CharacterFactory.PartsStatDatabaseSO
        name: PartsStatDatabaseSO
        nameWithType: PartsStatDatabaseSO
        qualifiedName: Timba.Games.CharacterFactory.PartsStatDatabaseSO
    isDefinition: true
    commentId: T:Timba.Games.CharacterFactory.PartsStatDatabaseSO
  Global.SpriteRenderer:
    name:
      CSharp:
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        nameWithType: SpriteRenderer
        qualifiedName: SpriteRenderer
        isExternal: true
      VB:
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        nameWithType: SpriteRenderer
        qualifiedName: SpriteRenderer
        isExternal: true
    isDefinition: true
    commentId: '!:Global.SpriteRenderer'
  Global.ShinseiWardrobe:
    name:
      CSharp:
      - id: Global.ShinseiWardrobe
        name: ShinseiWardrobe
        nameWithType: ShinseiWardrobe
        qualifiedName: ShinseiWardrobe
        isExternal: true
      VB:
      - id: Global.ShinseiWardrobe
        name: ShinseiWardrobe
        nameWithType: ShinseiWardrobe
        qualifiedName: ShinseiWardrobe
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ShinseiWardrobe'
  Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData*
        name: GetShinseiNFTData
        nameWithType: ShinseiGenerator.GetShinseiNFTData
        qualifiedName: Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData
      VB:
      - id: Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData*
        name: GetShinseiNFTData
        nameWithType: ShinseiGenerator.GetShinseiNFTData
        qualifiedName: Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ShinseiGenerator.GetShinseiNFTData
  Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis*
        name: GenerateShinseis
        nameWithType: ShinseiGenerator.GenerateShinseis
        qualifiedName: Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis
      VB:
      - id: Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis*
        name: GenerateShinseis
        nameWithType: ShinseiGenerator.GenerateShinseis
        qualifiedName: Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ShinseiGenerator.GenerateShinseis
  Timba.Games.CharacterFactory.ShinseiGenerator:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ShinseiGenerator
        name: ShinseiGenerator
        nameWithType: ShinseiGenerator
        qualifiedName: Timba.Games.CharacterFactory.ShinseiGenerator
      VB:
      - id: Timba.Games.CharacterFactory.ShinseiGenerator
        name: ShinseiGenerator
        nameWithType: ShinseiGenerator
        qualifiedName: Timba.Games.CharacterFactory.ShinseiGenerator
    isDefinition: true
    commentId: T:Timba.Games.CharacterFactory.ShinseiGenerator
  Utils.Singleton{Timba.Games.CharacterFactory.ColorSwapper3D}:
    name:
      CSharp:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.CharacterFactory.ColorSwapper3D
        name: ColorSwapper3D
        nameWithType: ColorSwapper3D
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.CharacterFactory.ColorSwapper3D
        name: ColorSwapper3D
        nameWithType: ColorSwapper3D
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Utils.Singleton`1
    parent: Utils
    commentId: T:Utils.Singleton{Timba.Games.CharacterFactory.ColorSwapper3D}
  Global.RecolorablePart3D:
    name:
      CSharp:
      - id: Global.RecolorablePart3D
        name: RecolorablePart3D
        nameWithType: RecolorablePart3D
        qualifiedName: RecolorablePart3D
        isExternal: true
      VB:
      - id: Global.RecolorablePart3D
        name: RecolorablePart3D
        nameWithType: RecolorablePart3D
        qualifiedName: RecolorablePart3D
        isExternal: true
    isDefinition: true
  Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList*
        name: AddTo3DPartList
        nameWithType: ColorSwapper3D.AddTo3DPartList
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList*
        name: AddTo3DPartList
        nameWithType: ColorSwapper3D.AddTo3DPartList
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList
  Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart*
        name: RemovePart
        nameWithType: ColorSwapper3D.RemovePart
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart*
        name: RemovePart
        nameWithType: ColorSwapper3D.RemovePart
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart
  Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette*
        name: SwapPallette
        nameWithType: ColorSwapper3D.SwapPallette
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette*
        name: SwapPallette
        nameWithType: ColorSwapper3D.SwapPallette
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette
  Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette*
        name: UpdatePartPallette
        nameWithType: ColorSwapper3D.UpdatePartPallette
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette*
        name: UpdatePartPallette
        nameWithType: ColorSwapper3D.UpdatePartPallette
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette
  Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet*
        name: AssignPallet
        nameWithType: ColorSwapper3D.AssignPallet
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet*
        name: AssignPallet
        nameWithType: ColorSwapper3D.AssignPallet
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet
  Timba.Games.CharacterFactory.ColorSwapper3D:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D
        name: ColorSwapper3D
        nameWithType: ColorSwapper3D
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D
        name: ColorSwapper3D
        nameWithType: ColorSwapper3D
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D
    isDefinition: true
    commentId: T:Timba.Games.CharacterFactory.ColorSwapper3D
  Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam*
        name: SwitchToCam
        nameWithType: CameraPlaneController.SwitchToCam
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam*
        name: SwitchToCam
        nameWithType: CameraPlaneController.SwitchToCam
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.SwitchToCam
  Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback*
        name: WaitForSecondsToCallback
        nameWithType: CameraPlaneController.WaitForSecondsToCallback
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback*
        name: WaitForSecondsToCallback
        nameWithType: CameraPlaneController.WaitForSecondsToCallback
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.WaitForSecondsToCallback
  Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest*
        name: SwitchPointOfInterest
        nameWithType: CameraPlaneController.SwitchPointOfInterest
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest*
        name: SwitchPointOfInterest
        nameWithType: CameraPlaneController.SwitchPointOfInterest
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.SwitchPointOfInterest
  Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest*
        name: ClearPointOfInterest
        nameWithType: CameraPlaneController.ClearPointOfInterest
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest*
        name: ClearPointOfInterest
        nameWithType: CameraPlaneController.ClearPointOfInterest
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.ClearPointOfInterest
  Timba.Games.DynamicCamera.CameraPlaneController.InitCameras*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.InitCameras*
        name: InitCameras
        nameWithType: CameraPlaneController.InitCameras
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.InitCameras
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.InitCameras*
        name: InitCameras
        nameWithType: CameraPlaneController.InitCameras
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.InitCameras
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.InitCameras
  Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras*
        name: InitWaitTurnCameras
        nameWithType: CameraPlaneController.InitWaitTurnCameras
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras*
        name: InitWaitTurnCameras
        nameWithType: CameraPlaneController.InitWaitTurnCameras
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.InitWaitTurnCameras
  Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras*
        name: StopWaitTurnCameras
        nameWithType: CameraPlaneController.StopWaitTurnCameras
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras*
        name: StopWaitTurnCameras
        nameWithType: CameraPlaneController.StopWaitTurnCameras
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.StopWaitTurnCameras
  Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera*
        name: OrbitalCamera
        nameWithType: CameraPlaneController.OrbitalCamera
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera*
        name: OrbitalCamera
        nameWithType: CameraPlaneController.OrbitalCamera
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.OrbitalCamera
  Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera*
        name: StaticCamera
        nameWithType: CameraPlaneController.StaticCamera
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera*
        name: StaticCamera
        nameWithType: CameraPlaneController.StaticCamera
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.StaticCamera
  Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame*
        name: GeneralFrame
        nameWithType: CameraPlaneController.GeneralFrame
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame*
        name: GeneralFrame
        nameWithType: CameraPlaneController.GeneralFrame
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.GeneralFrame
  Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame*:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame*
        name: CenitalFrame
        nameWithType: CameraPlaneController.CenitalFrame
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame*
        name: CenitalFrame
        nameWithType: CameraPlaneController.CenitalFrame
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame
    isDefinition: true
    commentId: Overload:Timba.Games.DynamicCamera.CameraPlaneController.CenitalFrame
  Timba.Games.DynamicCamera.CameraPlaneController:
    name:
      CSharp:
      - id: Timba.Games.DynamicCamera.CameraPlaneController
        name: CameraPlaneController
        nameWithType: CameraPlaneController
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController
      VB:
      - id: Timba.Games.DynamicCamera.CameraPlaneController
        name: CameraPlaneController
        nameWithType: CameraPlaneController
        qualifiedName: Timba.Games.DynamicCamera.CameraPlaneController
    isDefinition: true
    commentId: T:Timba.Games.DynamicCamera.CameraPlaneController
  Timba.Games.DynamicCamera:
    name:
      CSharp:
      - name: Timba.Games.DynamicCamera
        nameWithType: Timba.Games.DynamicCamera
        qualifiedName: Timba.Games.DynamicCamera
      VB:
      - name: Timba.Games.DynamicCamera
        nameWithType: Timba.Games.DynamicCamera
        qualifiedName: Timba.Games.DynamicCamera
    isDefinition: true
    commentId: N:Timba.Games.DynamicCamera
  Timba.Games.Recolor.Recolorable.SetColors*:
    name:
      CSharp:
      - id: Timba.Games.Recolor.Recolorable.SetColors*
        name: SetColors
        nameWithType: Recolorable.SetColors
        qualifiedName: Timba.Games.Recolor.Recolorable.SetColors
      VB:
      - id: Timba.Games.Recolor.Recolorable.SetColors*
        name: SetColors
        nameWithType: Recolorable.SetColors
        qualifiedName: Timba.Games.Recolor.Recolorable.SetColors
    isDefinition: true
    commentId: Overload:Timba.Games.Recolor.Recolorable.SetColors
  Global.MaterialPropertyBlock:
    name:
      CSharp:
      - id: Global.MaterialPropertyBlock
        name: MaterialPropertyBlock
        nameWithType: MaterialPropertyBlock
        qualifiedName: MaterialPropertyBlock
        isExternal: true
      VB:
      - id: Global.MaterialPropertyBlock
        name: MaterialPropertyBlock
        nameWithType: MaterialPropertyBlock
        qualifiedName: MaterialPropertyBlock
        isExternal: true
    isDefinition: true
    commentId: '!:Global.MaterialPropertyBlock'
  Timba.Games.Recolor.Recolorable:
    name:
      CSharp:
      - id: Timba.Games.Recolor.Recolorable
        name: Recolorable
        nameWithType: Recolorable
        qualifiedName: Timba.Games.Recolor.Recolorable
      VB:
      - id: Timba.Games.Recolor.Recolorable
        name: Recolorable
        nameWithType: Recolorable
        qualifiedName: Timba.Games.Recolor.Recolorable
    isDefinition: true
    commentId: T:Timba.Games.Recolor.Recolorable
  Timba.Games.Recolor:
    name:
      CSharp:
      - name: Timba.Games.Recolor
        nameWithType: Timba.Games.Recolor
        qualifiedName: Timba.Games.Recolor
      VB:
      - name: Timba.Games.Recolor
        nameWithType: Timba.Games.Recolor
        qualifiedName: Timba.Games.Recolor
    isDefinition: true
    commentId: N:Timba.Games.Recolor
  Timba.Characters.PartVisual.ChangeSpritePalette*:
    name:
      CSharp:
      - id: Timba.Characters.PartVisual.ChangeSpritePalette*
        name: ChangeSpritePalette
        nameWithType: PartVisual.ChangeSpritePalette
        qualifiedName: Timba.Characters.PartVisual.ChangeSpritePalette
      VB:
      - id: Timba.Characters.PartVisual.ChangeSpritePalette*
        name: ChangeSpritePalette
        nameWithType: PartVisual.ChangeSpritePalette
        qualifiedName: Timba.Characters.PartVisual.ChangeSpritePalette
    isDefinition: true
    commentId: Overload:Timba.Characters.PartVisual.ChangeSpritePalette
  Global.Action{MaterialPropertyBlock}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MaterialPropertyBlock
        name: MaterialPropertyBlock
        nameWithType: MaterialPropertyBlock
        qualifiedName: MaterialPropertyBlock
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MaterialPropertyBlock
        name: MaterialPropertyBlock
        nameWithType: MaterialPropertyBlock
        qualifiedName: MaterialPropertyBlock
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{MaterialPropertyBlock}'
  Timba.Characters.PartVisual.RecolorPartSprites*:
    name:
      CSharp:
      - id: Timba.Characters.PartVisual.RecolorPartSprites*
        name: RecolorPartSprites
        nameWithType: PartVisual.RecolorPartSprites
        qualifiedName: Timba.Characters.PartVisual.RecolorPartSprites
      VB:
      - id: Timba.Characters.PartVisual.RecolorPartSprites*
        name: RecolorPartSprites
        nameWithType: PartVisual.RecolorPartSprites
        qualifiedName: Timba.Characters.PartVisual.RecolorPartSprites
    isDefinition: true
    commentId: Overload:Timba.Characters.PartVisual.RecolorPartSprites
  Global.Action{Material}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{Material}'
  Timba.Characters.PartVisual.RecolorPartImages*:
    name:
      CSharp:
      - id: Timba.Characters.PartVisual.RecolorPartImages*
        name: RecolorPartImages
        nameWithType: PartVisual.RecolorPartImages
        qualifiedName: Timba.Characters.PartVisual.RecolorPartImages
      VB:
      - id: Timba.Characters.PartVisual.RecolorPartImages*
        name: RecolorPartImages
        nameWithType: PartVisual.RecolorPartImages
        qualifiedName: Timba.Characters.PartVisual.RecolorPartImages
    isDefinition: true
    commentId: Overload:Timba.Characters.PartVisual.RecolorPartImages
  Timba.Characters.PartVisual.SetPowered*:
    name:
      CSharp:
      - id: Timba.Characters.PartVisual.SetPowered*
        name: SetPowered
        nameWithType: PartVisual.SetPowered
        qualifiedName: Timba.Characters.PartVisual.SetPowered
      VB:
      - id: Timba.Characters.PartVisual.SetPowered*
        name: SetPowered
        nameWithType: PartVisual.SetPowered
        qualifiedName: Timba.Characters.PartVisual.SetPowered
    isDefinition: true
    commentId: Overload:Timba.Characters.PartVisual.SetPowered
  Timba.Recolor.RecolorablePart3D.SetColors*:
    name:
      CSharp:
      - id: Timba.Recolor.RecolorablePart3D.SetColors*
        name: SetColors
        nameWithType: RecolorablePart3D.SetColors
        qualifiedName: Timba.Recolor.RecolorablePart3D.SetColors
      VB:
      - id: Timba.Recolor.RecolorablePart3D.SetColors*
        name: SetColors
        nameWithType: RecolorablePart3D.SetColors
        qualifiedName: Timba.Recolor.RecolorablePart3D.SetColors
    isDefinition: true
    commentId: Overload:Timba.Recolor.RecolorablePart3D.SetColors
  Timba.Recolor.RecolorablePart3D:
    name:
      CSharp:
      - id: Timba.Recolor.RecolorablePart3D
        name: RecolorablePart3D
        nameWithType: RecolorablePart3D
        qualifiedName: Timba.Recolor.RecolorablePart3D
      VB:
      - id: Timba.Recolor.RecolorablePart3D
        name: RecolorablePart3D
        nameWithType: RecolorablePart3D
        qualifiedName: Timba.Recolor.RecolorablePart3D
    isDefinition: true
    commentId: T:Timba.Recolor.RecolorablePart3D
  Timba.Recolor:
    name:
      CSharp:
      - name: Timba.Recolor
        nameWithType: Timba.Recolor
        qualifiedName: Timba.Recolor
      VB:
      - name: Timba.Recolor
        nameWithType: Timba.Recolor
        qualifiedName: Timba.Recolor
    isDefinition: true
    commentId: N:Timba.Recolor
  Global.KeyCode[]:
    name:
      CSharp:
      - id: Global.KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue*
        name: SetMoveValue
        nameWithType: InputSource.SetMoveValue
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue*
        name: SetMoveValue
        nameWithType: InputSource.SetMoveValue
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue
  Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue*
        name: SetInteractValue
        nameWithType: InputSource.SetInteractValue
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue*
        name: SetInteractValue
        nameWithType: InputSource.SetInteractValue
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue
  Timba.Packages.Games.PlayerControllerModule.InputSource:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource
        name: InputSource
        nameWithType: InputSource
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource
        name: InputSource
        nameWithType: InputSource
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource
    isDefinition: true
    parent: Timba.Packages.Games.PlayerControllerModule
    commentId: T:Timba.Packages.Games.PlayerControllerModule.InputSource
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init*
        name: Init
        nameWithType: IInputHandleable.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init*
        name: Init
        nameWithType: IInputHandleable.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput*
        name: GetHorizontalInput
        nameWithType: IInputHandleable.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput*
        name: GetHorizontalInput
        nameWithType: IInputHandleable.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput*
        name: GetVerticalInput
        nameWithType: IInputHandleable.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput*
        name: GetVerticalInput
        nameWithType: IInputHandleable.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
        name: IInputHandleable
        nameWithType: IInputHandleable
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
        name: IInputHandleable
        nameWithType: IInputHandleable
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    isDefinition: true
    parent: Timba.Packages.Games.PlayerControllerModule
    commentId: T:Timba.Packages.Games.PlayerControllerModule.IInputHandleable
  Timba.Packages.Games.PlayerControllerModule:
    name:
      CSharp:
      - name: Timba.Packages.Games.PlayerControllerModule
        nameWithType: Timba.Packages.Games.PlayerControllerModule
        qualifiedName: Timba.Packages.Games.PlayerControllerModule
      VB:
      - name: Timba.Packages.Games.PlayerControllerModule
        nameWithType: Timba.Packages.Games.PlayerControllerModule
        qualifiedName: Timba.Packages.Games.PlayerControllerModule
    isDefinition: true
    commentId: N:Timba.Packages.Games.PlayerControllerModule
  Timba.Packages.Games.PlayerControllerModule.InputHandler.Init*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init*
        name: Init
        nameWithType: InputHandler.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init*
        name: Init
        nameWithType: InputHandler.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputHandler.Init
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
        name: Init
        nameWithType: IInputHandleable.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
        name: Init
        nameWithType: IInputHandleable.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
  Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput*
        name: GetHorizontalInput
        nameWithType: InputHandler.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput*
        name: GetHorizontalInput
        nameWithType: InputHandler.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
        name: GetHorizontalInput
        nameWithType: IInputHandleable.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
        name: GetHorizontalInput
        nameWithType: IInputHandleable.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
  Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput*
        name: GetVerticalInput
        nameWithType: InputHandler.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput*
        name: GetVerticalInput
        nameWithType: InputHandler.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
        name: GetVerticalInput
        nameWithType: IInputHandleable.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
        name: GetVerticalInput
        nameWithType: IInputHandleable.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
  Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput*
        name: GetInteractableInput
        nameWithType: InputHandler.GetInteractableInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput*
        name: GetInteractableInput
        nameWithType: InputHandler.GetInteractableInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput
  Timba.Packages.Games.PlayerControllerModule.InputHandler:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler
        name: InputHandler
        nameWithType: InputHandler
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler
        name: InputHandler
        nameWithType: InputHandler
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler
    isDefinition: true
    commentId: T:Timba.Packages.Games.PlayerControllerModule.InputHandler
  Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init*
        name: Init
        nameWithType: ThirdPersonCoreController.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init*
        name: Init
        nameWithType: ThirdPersonCoreController.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init
  Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
        name: ThirdPersonCoreController
        nameWithType: ThirdPersonCoreController
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
        name: ThirdPersonCoreController
        nameWithType: ThirdPersonCoreController
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
    isDefinition: true
    commentId: T:Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
  Timba.Packages.Games.PlayerControllerModule.Core:
    name:
      CSharp:
      - name: Timba.Packages.Games.PlayerControllerModule.Core
        nameWithType: Timba.Packages.Games.PlayerControllerModule.Core
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core
      VB:
      - name: Timba.Packages.Games.PlayerControllerModule.Core
        nameWithType: Timba.Packages.Games.PlayerControllerModule.Core
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core
    isDefinition: true
    commentId: N:Timba.Packages.Games.PlayerControllerModule.Core
  Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init*:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init*
        name: Init
        nameWithType: LobbyChatController.Init
        qualifiedName: Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init
      VB:
      - id: Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init*
        name: Init
        nameWithType: LobbyChatController.Init
        qualifiedName: Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.ChatModule.Controller.LobbyChatController.Init
  Timba.Packages.Games.ChatModule.Controller.LobbyChatController:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Controller.LobbyChatController
        name: LobbyChatController
        nameWithType: LobbyChatController
        qualifiedName: Timba.Packages.Games.ChatModule.Controller.LobbyChatController
      VB:
      - id: Timba.Packages.Games.ChatModule.Controller.LobbyChatController
        name: LobbyChatController
        nameWithType: LobbyChatController
        qualifiedName: Timba.Packages.Games.ChatModule.Controller.LobbyChatController
    isDefinition: true
    commentId: T:Timba.Packages.Games.ChatModule.Controller.LobbyChatController
  Timba.Packages.Games.ChatModule.Controller:
    name:
      CSharp:
      - name: Timba.Packages.Games.ChatModule.Controller
        nameWithType: Timba.Packages.Games.ChatModule.Controller
        qualifiedName: Timba.Packages.Games.ChatModule.Controller
      VB:
      - name: Timba.Packages.Games.ChatModule.Controller
        nameWithType: Timba.Packages.Games.ChatModule.Controller
        qualifiedName: Timba.Packages.Games.ChatModule.Controller
    isDefinition: true
    commentId: N:Timba.Packages.Games.ChatModule.Controller
  Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage*:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage*
        name: OnSendMessage
        nameWithType: ILobbyChatViewable.OnSendMessage
        qualifiedName: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage
      VB:
      - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage*
        name: OnSendMessage
        nameWithType: ILobbyChatViewable.OnSendMessage
        qualifiedName: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.OnSendMessage
  Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init*:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init*
        name: Init
        nameWithType: ILobbyChatViewable.Init
        qualifiedName: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init
      VB:
      - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init*
        name: Init
        nameWithType: ILobbyChatViewable.Init
        qualifiedName: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.Init
  Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage*:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage*
        name: ShowMessage
        nameWithType: ILobbyChatViewable.ShowMessage
        qualifiedName: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage
      VB:
      - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage*
        name: ShowMessage
        nameWithType: ILobbyChatViewable.ShowMessage
        qualifiedName: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable.ShowMessage
  Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable
        name: ILobbyChatViewable
        nameWithType: ILobbyChatViewable
        qualifiedName: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable
      VB:
      - id: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable
        name: ILobbyChatViewable
        nameWithType: ILobbyChatViewable
        qualifiedName: Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable
    isDefinition: true
    parent: Timba.Packages.Games.ChatModule.Core
    commentId: T:Timba.Packages.Games.ChatModule.Core.ILobbyChatViewable
  Timba.Packages.Games.ChatModule.Core:
    name:
      CSharp:
      - name: Timba.Packages.Games.ChatModule.Core
        nameWithType: Timba.Packages.Games.ChatModule.Core
        qualifiedName: Timba.Packages.Games.ChatModule.Core
      VB:
      - name: Timba.Packages.Games.ChatModule.Core
        nameWithType: Timba.Packages.Games.ChatModule.Core
        qualifiedName: Timba.Packages.Games.ChatModule.Core
    isDefinition: true
    commentId: N:Timba.Packages.Games.ChatModule.Core
  Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init*:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init*
        name: Init
        nameWithType: LobbyChatCoreController.Init
        qualifiedName: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init
      VB:
      - id: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init*
        name: Init
        nameWithType: LobbyChatCoreController.Init
        qualifiedName: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController.Init
  Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController
        name: LobbyChatCoreController
        nameWithType: LobbyChatCoreController
        qualifiedName: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController
      VB:
      - id: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController
        name: LobbyChatCoreController
        nameWithType: LobbyChatCoreController
        qualifiedName: Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController
    isDefinition: true
    commentId: T:Timba.Packages.Games.ChatModule.Core.LobbyChatCoreController
  Global.Action{MessageDto}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MessageDto
        name: MessageDto
        nameWithType: MessageDto
        qualifiedName: MessageDto
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MessageDto
        name: MessageDto
        nameWithType: MessageDto
        qualifiedName: MessageDto
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{MessageDto}'
  Global.MessagePayload:
    name:
      CSharp:
      - id: Global.MessagePayload
        name: MessagePayload
        nameWithType: MessagePayload
        qualifiedName: MessagePayload
        isExternal: true
      VB:
      - id: Global.MessagePayload
        name: MessagePayload
        nameWithType: MessagePayload
        qualifiedName: MessagePayload
        isExternal: true
    isDefinition: true
    commentId: '!:Global.MessagePayload'
  Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage*:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage*
        name: CMDSendMessage
        nameWithType: LobbyChatModel.CMDSendMessage
        qualifiedName: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage
      VB:
      - id: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage*
        name: CMDSendMessage
        nameWithType: LobbyChatModel.CMDSendMessage
        qualifiedName: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.ChatModule.Model.LobbyChatModel.CMDSendMessage
  Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage*:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage*
        name: TestMessage
        nameWithType: LobbyChatModel.TestMessage
        qualifiedName: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage
      VB:
      - id: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage*
        name: TestMessage
        nameWithType: LobbyChatModel.TestMessage
        qualifiedName: Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.ChatModule.Model.LobbyChatModel.TestMessage
  Timba.Packages.Games.ChatModule.Model.LobbyChatModel:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Model.LobbyChatModel
        name: LobbyChatModel
        nameWithType: LobbyChatModel
        qualifiedName: Timba.Packages.Games.ChatModule.Model.LobbyChatModel
      VB:
      - id: Timba.Packages.Games.ChatModule.Model.LobbyChatModel
        name: LobbyChatModel
        nameWithType: LobbyChatModel
        qualifiedName: Timba.Packages.Games.ChatModule.Model.LobbyChatModel
    isDefinition: true
    commentId: T:Timba.Packages.Games.ChatModule.Model.LobbyChatModel
  Timba.Packages.Games.ChatModule.Model:
    name:
      CSharp:
      - name: Timba.Packages.Games.ChatModule.Model
        nameWithType: Timba.Packages.Games.ChatModule.Model
        qualifiedName: Timba.Packages.Games.ChatModule.Model
      VB:
      - name: Timba.Packages.Games.ChatModule.Model
        nameWithType: Timba.Packages.Games.ChatModule.Model
        qualifiedName: Timba.Packages.Games.ChatModule.Model
    isDefinition: true
    commentId: N:Timba.Packages.Games.ChatModule.Model
  Timba.Packages.Games.ChatModule.Structs.MessageDto:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Structs.MessageDto
        name: MessageDto
        nameWithType: MessageDto
        qualifiedName: Timba.Packages.Games.ChatModule.Structs.MessageDto
      VB:
      - id: Timba.Packages.Games.ChatModule.Structs.MessageDto
        name: MessageDto
        nameWithType: MessageDto
        qualifiedName: Timba.Packages.Games.ChatModule.Structs.MessageDto
    isDefinition: true
    commentId: T:Timba.Packages.Games.ChatModule.Structs.MessageDto
  Timba.Packages.Games.ChatModule.Structs.MessagePayload:
    name:
      CSharp:
      - id: Timba.Packages.Games.ChatModule.Structs.MessagePayload
        name: MessagePayload
        nameWithType: MessagePayload
        qualifiedName: Timba.Packages.Games.ChatModule.Structs.MessagePayload
      VB:
      - id: Timba.Packages.Games.ChatModule.Structs.MessagePayload
        name: MessagePayload
        nameWithType: MessagePayload
        qualifiedName: Timba.Packages.Games.ChatModule.Structs.MessagePayload
    isDefinition: true
    commentId: T:Timba.Packages.Games.ChatModule.Structs.MessagePayload
  Timba.Packages.Games.ChatModule.Structs:
    name:
      CSharp:
      - name: Timba.Packages.Games.ChatModule.Structs
        nameWithType: Timba.Packages.Games.ChatModule.Structs
        qualifiedName: Timba.Packages.Games.ChatModule.Structs
      VB:
      - name: Timba.Packages.Games.ChatModule.Structs
        nameWithType: Timba.Packages.Games.ChatModule.Structs
        qualifiedName: Timba.Packages.Games.ChatModule.Structs
    isDefinition: true
    commentId: N:Timba.Packages.Games.ChatModule.Structs
  Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Awake*:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Awake*
        name: Awake
        nameWithType: SingleInstanceMonoBehaviour<T>.Awake
        qualifiedName: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour<T>.Awake
      VB:
      - id: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Awake*
        name: Awake
        nameWithType: SingleInstanceMonoBehaviour(Of T).Awake
        qualifiedName: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour(Of T).Awake
    isDefinition: true
    commentId: Overload:Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Awake
  Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Initialize*:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Initialize*
        name: Initialize
        nameWithType: SingleInstanceMonoBehaviour<T>.Initialize
        qualifiedName: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour<T>.Initialize
      VB:
      - id: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Initialize*
        name: Initialize
        nameWithType: SingleInstanceMonoBehaviour(Of T).Initialize
        qualifiedName: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour(Of T).Initialize
    isDefinition: true
    commentId: Overload:Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1.Initialize
  Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1
        name: SingleInstanceMonoBehaviour
        nameWithType: SingleInstanceMonoBehaviour
        qualifiedName: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1
        name: SingleInstanceMonoBehaviour
        nameWithType: SingleInstanceMonoBehaviour
        qualifiedName: Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Timba.Patterns.ServiceLocator.SingleInstanceMonoBehaviour`1
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance*:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance*
        name: Instance
        nameWithType: SingletonMonoBehaviour<T>.Instance
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.Instance
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance*
        name: Instance
        nameWithType: SingletonMonoBehaviour(Of T).Instance
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).Instance
    isDefinition: true
    commentId: Overload:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake*:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake*
        name: Awake
        nameWithType: SingletonMonoBehaviour<T>.Awake
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.Awake
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake*
        name: Awake
        nameWithType: SingletonMonoBehaviour(Of T).Awake
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).Awake
    isDefinition: true
    commentId: Overload:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize*:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize*
        name: Initialize
        nameWithType: SingletonMonoBehaviour<T>.Initialize
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.Initialize
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize*
        name: Initialize
        nameWithType: SingletonMonoBehaviour(Of T).Initialize
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).Initialize
    isDefinition: true
    commentId: Overload:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1
        name: SingletonMonoBehaviour
        nameWithType: SingletonMonoBehaviour
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1
        name: SingletonMonoBehaviour
        nameWithType: SingletonMonoBehaviour
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1
  Timba.Patterns.ServiceLocator.IService.gameObject*:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.IService.gameObject*
        name: gameObject
        nameWithType: IService.gameObject
        qualifiedName: Timba.Patterns.ServiceLocator.IService.gameObject
      VB:
      - id: Timba.Patterns.ServiceLocator.IService.gameObject*
        name: gameObject
        nameWithType: IService.gameObject
        qualifiedName: Timba.Patterns.ServiceLocator.IService.gameObject
    isDefinition: true
    commentId: Overload:Timba.Patterns.ServiceLocator.IService.gameObject
  Timba.Patterns.ServiceLocator.IService.IsReady*:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.IService.IsReady*
        name: IsReady
        nameWithType: IService.IsReady
        qualifiedName: Timba.Patterns.ServiceLocator.IService.IsReady
      VB:
      - id: Timba.Patterns.ServiceLocator.IService.IsReady*
        name: IsReady
        nameWithType: IService.IsReady
        qualifiedName: Timba.Patterns.ServiceLocator.IService.IsReady
    isDefinition: true
    commentId: Overload:Timba.Patterns.ServiceLocator.IService.IsReady
  Timba.Patterns.ServiceLocator.IService:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.IService
        name: IService
        nameWithType: IService
        qualifiedName: Timba.Patterns.ServiceLocator.IService
      VB:
      - id: Timba.Patterns.ServiceLocator.IService
        name: IService
        nameWithType: IService
        qualifiedName: Timba.Patterns.ServiceLocator.IService
    isDefinition: true
    commentId: T:Timba.Patterns.ServiceLocator.IService
  Timba.Patterns.ServiceLocator:
    name:
      CSharp:
      - name: Timba.Patterns.ServiceLocator
        nameWithType: Timba.Patterns.ServiceLocator
        qualifiedName: Timba.Patterns.ServiceLocator
      VB:
      - name: Timba.Patterns.ServiceLocator
        nameWithType: Timba.Patterns.ServiceLocator
        qualifiedName: Timba.Patterns.ServiceLocator
    isDefinition: true
    commentId: N:Timba.Patterns.ServiceLocator
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1
        name: SingletonMonoBehaviour
        nameWithType: SingletonMonoBehaviour
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Patterns.ServiceLocator.ServiceLocator
        name: ServiceLocator
        nameWithType: ServiceLocator
        qualifiedName: Timba.Patterns.ServiceLocator.ServiceLocator
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1
        name: SingletonMonoBehaviour
        nameWithType: SingletonMonoBehaviour
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Patterns.ServiceLocator.ServiceLocator
        name: ServiceLocator
        nameWithType: ServiceLocator
        qualifiedName: Timba.Patterns.ServiceLocator.ServiceLocator
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1
    parent: Timba.Patterns.ServiceLocator
    commentId: T:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance
        name: Instance
        nameWithType: SingletonMonoBehaviour<T>.Instance
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.Instance
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance
        name: Instance
        nameWithType: SingletonMonoBehaviour(Of T).Instance
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).Instance
    isDefinition: true
    commentId: P:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.Instance:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance
        name: Instance
        nameWithType: SingletonMonoBehaviour<ServiceLocator>.Instance
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<Timba.Patterns.ServiceLocator.ServiceLocator>.Instance
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance
        name: Instance
        nameWithType: SingletonMonoBehaviour(Of ServiceLocator).Instance
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of Timba.Patterns.ServiceLocator.ServiceLocator).Instance
    isDefinition: false
    definition: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Instance
    parent: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}
    commentId: P:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.Instance
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake
        name: Awake
        nameWithType: SingletonMonoBehaviour<T>.Awake
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake
        name: Awake
        nameWithType: SingletonMonoBehaviour(Of T).Awake
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.Awake:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake
        name: Awake
        nameWithType: SingletonMonoBehaviour<ServiceLocator>.Awake
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<Timba.Patterns.ServiceLocator.ServiceLocator>.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake
        name: Awake
        nameWithType: SingletonMonoBehaviour(Of ServiceLocator).Awake
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of Timba.Patterns.ServiceLocator.ServiceLocator).Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Awake
    parent: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}
    commentId: M:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.Awake
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.initialized:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.initialized
        name: initialized
        nameWithType: SingletonMonoBehaviour<T>.initialized
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.initialized
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.initialized
        name: initialized
        nameWithType: SingletonMonoBehaviour(Of T).initialized
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).initialized
    isDefinition: true
    commentId: F:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.initialized
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.initialized:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.initialized
        name: initialized
        nameWithType: SingletonMonoBehaviour<ServiceLocator>.initialized
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<Timba.Patterns.ServiceLocator.ServiceLocator>.initialized
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.initialized
        name: initialized
        nameWithType: SingletonMonoBehaviour(Of ServiceLocator).initialized
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of Timba.Patterns.ServiceLocator.ServiceLocator).initialized
    isDefinition: false
    definition: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.initialized
    parent: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}
    commentId: F:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.initialized
  Timba.Patterns.ServiceLocator.ServiceLocatorConfig:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.ServiceLocatorConfig
        name: ServiceLocatorConfig
        nameWithType: ServiceLocatorConfig
        qualifiedName: Timba.Patterns.ServiceLocator.ServiceLocatorConfig
      VB:
      - id: Timba.Patterns.ServiceLocator.ServiceLocatorConfig
        name: ServiceLocatorConfig
        nameWithType: ServiceLocatorConfig
        qualifiedName: Timba.Patterns.ServiceLocator.ServiceLocatorConfig
    isDefinition: true
    parent: Timba.Patterns.ServiceLocator
    commentId: T:Timba.Patterns.ServiceLocator.ServiceLocatorConfig
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize
        name: Initialize
        nameWithType: SingletonMonoBehaviour<T>.Initialize
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<T>.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize
        name: Initialize
        nameWithType: SingletonMonoBehaviour(Of T).Initialize
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of T).Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize
  Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.Initialize:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize
        name: Initialize
        nameWithType: SingletonMonoBehaviour<ServiceLocator>.Initialize
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour<Timba.Patterns.ServiceLocator.ServiceLocator>.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize
        name: Initialize
        nameWithType: SingletonMonoBehaviour(Of ServiceLocator).Initialize
        qualifiedName: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour(Of Timba.Patterns.ServiceLocator.ServiceLocator).Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour`1.Initialize
    parent: Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}
    commentId: M:Timba.Patterns.ServiceLocator.SingletonMonoBehaviour{Timba.Patterns.ServiceLocator.ServiceLocator}.Initialize
  Timba.Patterns.ServiceLocator.ServiceLocator.Initialize*:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.ServiceLocator.Initialize*
        name: Initialize
        nameWithType: ServiceLocator.Initialize
        qualifiedName: Timba.Patterns.ServiceLocator.ServiceLocator.Initialize
      VB:
      - id: Timba.Patterns.ServiceLocator.ServiceLocator.Initialize*
        name: Initialize
        nameWithType: ServiceLocator.Initialize
        qualifiedName: Timba.Patterns.ServiceLocator.ServiceLocator.Initialize
    isDefinition: true
    commentId: Overload:Timba.Patterns.ServiceLocator.ServiceLocator.Initialize
  Timba.Patterns.ServiceLocator.ServiceLocator.GetService*:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.ServiceLocator.GetService*
        name: GetService
        nameWithType: ServiceLocator.GetService
        qualifiedName: Timba.Patterns.ServiceLocator.ServiceLocator.GetService
      VB:
      - id: Timba.Patterns.ServiceLocator.ServiceLocator.GetService*
        name: GetService
        nameWithType: ServiceLocator.GetService
        qualifiedName: Timba.Patterns.ServiceLocator.ServiceLocator.GetService
    isDefinition: true
    commentId: Overload:Timba.Patterns.ServiceLocator.ServiceLocator.GetService
  Timba.Patterns.ServiceLocator.ServiceLocator:
    name:
      CSharp:
      - id: Timba.Patterns.ServiceLocator.ServiceLocator
        name: ServiceLocator
        nameWithType: ServiceLocator
        qualifiedName: Timba.Patterns.ServiceLocator.ServiceLocator
      VB:
      - id: Timba.Patterns.ServiceLocator.ServiceLocator
        name: ServiceLocator
        nameWithType: ServiceLocator
        qualifiedName: Timba.Patterns.ServiceLocator.ServiceLocator
    isDefinition: true
    commentId: T:Timba.Patterns.ServiceLocator.ServiceLocator
