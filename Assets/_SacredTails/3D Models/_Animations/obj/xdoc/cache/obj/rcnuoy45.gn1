id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Timba.SacredTails.Arena
  commentId: N:Timba.SacredTails.Arena
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Arena
    VB: Timba.SacredTails.Arena
  nameWithType:
    CSharp: Timba.SacredTails.Arena
    VB: Timba.SacredTails.Arena
  qualifiedName:
    CSharp: Timba.SacredTails.Arena
    VB: Timba.SacredTails.Arena
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Arena.BattleShinseiSpawner
    commentId: T:Timba.SacredTails.Arena.BattleShinseiSpawner
    language: CSharp
    name:
      CSharp: BattleShinseiSpawner
      VB: BattleShinseiSpawner
    nameWithType:
      CSharp: BattleShinseiSpawner
      VB: BattleShinseiSpawner
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner
      VB: Timba.SacredTails.Arena.BattleShinseiSpawner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleShinseiSpawner
      path: ''
      startLine: 5590
    summary: "\nSpawns Player&apos;s and Oponent&apos;s shinseis for the arena instances\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleShinseiSpawner : MonoBehaviour'
        VB: >-
          Public Class BattleShinseiSpawner

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
      commentId: F:Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
      language: CSharp
      name:
        CSharp: enemyParent
        VB: enemyParent
      nameWithType:
        CSharp: BattleShinseiSpawner.enemyParent
        VB: BattleShinseiSpawner.enemyParent
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
        VB: Timba.SacredTails.Arena.BattleShinseiSpawner.enemyParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: enemyParent
        path: ''
        startLine: 5595
      syntax:
        content:
          CSharp: public Transform enemyParent
          VB: Public enemyParent As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean,System.String)
      commentId: M:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: SpawnPlayerShinseis(Boolean, String)
        VB: SpawnPlayerShinseis(Boolean, String)
      nameWithType:
        CSharp: BattleShinseiSpawner.SpawnPlayerShinseis(Boolean, String)
        VB: BattleShinseiSpawner.SpawnPlayerShinseis(Boolean, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean, System.String)
        VB: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis(System.Boolean, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SpawnPlayerShinseis
        path: ''
        startLine: 5605
      syntax:
        content:
          CSharp: public CharacterSlot SpawnPlayerShinseis(bool isEnemy, string dna)
          VB: Public Function SpawnPlayerShinseis(isEnemy As Boolean, dna As String) As CharacterSlot
        parameters:
        - id: isEnemy
          type: System.Boolean
        - id: dna
          type: System.String
        return:
          type: Global.CharacterSlot
      overload: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List{System.String},Transform)
      commentId: M:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List{System.String},Transform)
      language: CSharp
      name:
        CSharp: SpawnShinseiEndGame(List<String>, Transform)
        VB: SpawnShinseiEndGame(List(Of String), Transform)
      nameWithType:
        CSharp: BattleShinseiSpawner.SpawnShinseiEndGame(List<String>, Transform)
        VB: BattleShinseiSpawner.SpawnShinseiEndGame(List(Of String), Transform)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List<System.String>, Transform)
        VB: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame(System.Collections.Generic.List(Of System.String), Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SpawnShinseiEndGame
        path: ''
        startLine: 5613
      syntax:
        content:
          CSharp: public void SpawnShinseiEndGame(List<string> dnas, Transform parent)
          VB: Public Sub SpawnShinseiEndGame(dnas As List(Of String), parent As Transform)
        parameters:
        - id: dnas
          type: System.Collections.Generic.List{System.String}
        - id: parent
          type: Global.Transform
      overload: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.BattleUIController
    commentId: T:Timba.SacredTails.Arena.BattleUIController
    language: CSharp
    name:
      CSharp: BattleUIController
      VB: BattleUIController
    nameWithType:
      CSharp: BattleUIController
      VB: BattleUIController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleUIController
      VB: Timba.SacredTails.Arena.BattleUIController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleUIController
      path: ''
      startLine: 5661
    summary: "\nHandles all of the events present in the UI of the Combat arena Mode\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleUIController : MonoBehaviour'
        VB: >-
          Public Class BattleUIController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
      commentId: F:Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
      language: CSharp
      name:
        CSharp: titleEndMatchPanel
        VB: titleEndMatchPanel
      nameWithType:
        CSharp: BattleUIController.titleEndMatchPanel
        VB: BattleUIController.titleEndMatchPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
        VB: Timba.SacredTails.Arena.BattleUIController.titleEndMatchPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: titleEndMatchPanel
        path: ''
        startLine: 5664
      syntax:
        content:
          CSharp: public TMP_Text titleEndMatchPanel
          VB: Public titleEndMatchPanel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.versusPanelController
      commentId: F:Timba.SacredTails.Arena.BattleUIController.versusPanelController
      language: CSharp
      name:
        CSharp: versusPanelController
        VB: versusPanelController
      nameWithType:
        CSharp: BattleUIController.versusPanelController
        VB: BattleUIController.versusPanelController
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.versusPanelController
        VB: Timba.SacredTails.Arena.BattleUIController.versusPanelController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: versusPanelController
        path: ''
        startLine: 5669
      syntax:
        content:
          CSharp: public VersusPanelController versusPanelController
          VB: Public versusPanelController As VersusPanelController
        return:
          type: Global.VersusPanelController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.battleMenu
      commentId: F:Timba.SacredTails.Arena.BattleUIController.battleMenu
      language: CSharp
      name:
        CSharp: battleMenu
        VB: battleMenu
      nameWithType:
        CSharp: BattleUIController.battleMenu
        VB: BattleUIController.battleMenu
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.battleMenu
        VB: Timba.SacredTails.Arena.BattleUIController.battleMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleMenu
        path: ''
        startLine: 5687
      syntax:
        content:
          CSharp: public GameObject battleMenu
          VB: Public battleMenu As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
      commentId: F:Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
      language: CSharp
      name:
        CSharp: viewingBackToLobbyButton
        VB: viewingBackToLobbyButton
      nameWithType:
        CSharp: BattleUIController.viewingBackToLobbyButton
        VB: BattleUIController.viewingBackToLobbyButton
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
        VB: Timba.SacredTails.Arena.BattleUIController.viewingBackToLobbyButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: viewingBackToLobbyButton
        path: ''
        startLine: 5688
      syntax:
        content:
          CSharp: public GameObject viewingBackToLobbyButton
          VB: Public viewingBackToLobbyButton As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.cardContainer
      commentId: F:Timba.SacredTails.Arena.BattleUIController.cardContainer
      language: CSharp
      name:
        CSharp: cardContainer
        VB: cardContainer
      nameWithType:
        CSharp: BattleUIController.cardContainer
        VB: BattleUIController.cardContainer
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.cardContainer
        VB: Timba.SacredTails.Arena.BattleUIController.cardContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardContainer
        path: ''
        startLine: 5689
      syntax:
        content:
          CSharp: public GameObject cardContainer
          VB: Public cardContainer As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
      commentId: F:Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
      language: CSharp
      name:
        CSharp: battleNotificationSystem
        VB: battleNotificationSystem
      nameWithType:
        CSharp: BattleUIController.battleNotificationSystem
        VB: BattleUIController.battleNotificationSystem
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
        VB: Timba.SacredTails.Arena.BattleUIController.battleNotificationSystem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleNotificationSystem
        path: ''
        startLine: 5690
      syntax:
        content:
          CSharp: public BattleNotificationSystem battleNotificationSystem
          VB: Public battleNotificationSystem As BattleNotificationSystem
        return:
          type: Global.BattleNotificationSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.cardUis
      commentId: F:Timba.SacredTails.Arena.BattleUIController.cardUis
      language: CSharp
      name:
        CSharp: cardUis
        VB: cardUis
      nameWithType:
        CSharp: BattleUIController.cardUis
        VB: BattleUIController.cardUis
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.cardUis
        VB: Timba.SacredTails.Arena.BattleUIController.cardUis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardUis
        path: ''
        startLine: 5691
      syntax:
        content:
          CSharp: public List<CardUI> cardUis
          VB: Public cardUis As List(Of CardUI)
        return:
          type: System.Collections.Generic.List{CardUI}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.uIDisolver
      commentId: F:Timba.SacredTails.Arena.BattleUIController.uIDisolver
      language: CSharp
      name:
        CSharp: uIDisolver
        VB: uIDisolver
      nameWithType:
        CSharp: BattleUIController.uIDisolver
        VB: BattleUIController.uIDisolver
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.uIDisolver
        VB: Timba.SacredTails.Arena.BattleUIController.uIDisolver
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: uIDisolver
        path: ''
        startLine: 5701
      syntax:
        content:
          CSharp: public UIDisolver uIDisolver
          VB: Public uIDisolver As UIDisolver
        return:
          type: Global.UIDisolver
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,System.String,System.String,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,Timba.SacredTails.Arena.ResourceBarValues,System.String,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
        VB: Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
      nameWithType:
        CSharp: BattleUIController.Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
        VB: BattleUIController.Init(ResourceBarValues, ResourceBarValues, ResourceBarValues, ResourceBarValues, String, String, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, System.String, System.String, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.Init(Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, Timba.SacredTails.Arena.ResourceBarValues, System.String, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 5704
      syntax:
        content:
          CSharp: public void Init(ResourceBarValues player1Hp, ResourceBarValues player2Hp, ResourceBarValues player1Pp, ResourceBarValues player2Pp, string playerName, string enemyName, bool isViewing = false)
          VB: Public Sub Init(player1Hp As ResourceBarValues, player2Hp As ResourceBarValues, player1Pp As ResourceBarValues, player2Pp As ResourceBarValues, playerName As String, enemyName As String, isViewing As Boolean = False)
        parameters:
        - id: player1Hp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: player2Hp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: player1Pp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: player2Pp
          type: Timba.SacredTails.Arena.ResourceBarValues
        - id: playerName
          type: System.String
        - id: enemyName
          type: System.String
        - id: isViewing
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32,Shinsei)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32,Shinsei)
      language: CSharp
      name:
        CSharp: UpdateShinseiPicture(Int32, Shinsei)
        VB: UpdateShinseiPicture(Int32, Shinsei)
      nameWithType:
        CSharp: BattleUIController.UpdateShinseiPicture(Int32, Shinsei)
        VB: BattleUIController.UpdateShinseiPicture(Int32, Shinsei)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32, Shinsei)
        VB: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture(System.Int32, Shinsei)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateShinseiPicture
        path: ''
        startLine: 5774
      syntax:
        content:
          CSharp: public void UpdateShinseiPicture(int playerIndex, Shinsei playerShinsei)
          VB: Public Sub UpdateShinseiPicture(playerIndex As Integer, playerShinsei As Shinsei)
        parameters:
        - id: playerIndex
          type: System.Int32
        - id: playerShinsei
          type: Global.Shinsei
      overload: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single,System.String)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single,System.String)
      language: CSharp
      name:
        CSharp: UpdateTimer(Single, String)
        VB: UpdateTimer(Single, String)
      nameWithType:
        CSharp: BattleUIController.UpdateTimer(Single, String)
        VB: BattleUIController.UpdateTimer(Single, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single, System.String)
        VB: Timba.SacredTails.Arena.BattleUIController.UpdateTimer(System.Single, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateTimer
        path: ''
        startLine: 5780
      syntax:
        content:
          CSharp: public void UpdateTimer(float timeInSeconds, string colorText = null)
          VB: Public Sub UpdateTimer(timeInSeconds As Single, colorText As String = Nothing)
        parameters:
        - id: timeInSeconds
          type: System.Single
        - id: colorText
          type: System.String
      overload: Timba.SacredTails.Arena.BattleUIController.UpdateTimer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
      language: CSharp
      name:
        CSharp: ChangeHealthColorBar(Int32)
        VB: ChangeHealthColorBar(Int32)
      nameWithType:
        CSharp: BattleUIController.ChangeHealthColorBar(Int32)
        VB: BattleUIController.ChangeHealthColorBar(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeHealthColorBar
        path: ''
        startLine: 5794
      syntax:
        content:
          CSharp: public void ChangeHealthColorBar(int indexBar)
          VB: Public Sub ChangeHealthColorBar(indexBar As Integer)
        parameters:
        - id: indexBar
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
        VB: InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
      nameWithType:
        CSharp: BattleUIController.InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
        VB: BattleUIController.InitializeBars(Int32, Int32, Int32, Int32, Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.InitializeBars(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitializeBars
        path: ''
        startLine: 5816
      syntax:
        content:
          CSharp: public void InitializeBars(int playerHealth, int healthBarIndex, int maxValueHealth, int playerEnergy, int energyBarIndex, int maxValueEnergy)
          VB: Public Sub InitializeBars(playerHealth As Integer, healthBarIndex As Integer, maxValueHealth As Integer, playerEnergy As Integer, energyBarIndex As Integer, maxValueEnergy As Integer)
        parameters:
        - id: playerHealth
          type: System.Int32
        - id: healthBarIndex
          type: System.Int32
        - id: maxValueHealth
          type: System.Int32
        - id: playerEnergy
          type: System.Int32
        - id: energyBarIndex
          type: System.Int32
        - id: maxValueEnergy
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.InitializeBars*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
      language: CSharp
      name:
        CSharp: ShowFaster(Int32)
        VB: ShowFaster(Int32)
      nameWithType:
        CSharp: BattleUIController.ShowFaster(Int32)
        VB: BattleUIController.ShowFaster(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.ShowFaster(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowFaster
        path: ''
        startLine: 5842
      syntax:
        content:
          CSharp: public void ShowFaster(int index)
          VB: Public Sub ShowFaster(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.ShowFaster*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
      commentId: F:Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
      language: CSharp
      name:
        CSharp: OnGetValueOfBars
        VB: OnGetValueOfBars
      nameWithType:
        CSharp: BattleUIController.OnGetValueOfBars
        VB: BattleUIController.OnGetValueOfBars
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
        VB: Timba.SacredTails.Arena.BattleUIController.OnGetValueOfBars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnGetValueOfBars
        path: ''
        startLine: 5847
      syntax:
        content:
          CSharp: public Func<List<int>> OnGetValueOfBars
          VB: Public OnGetValueOfBars As Func(Of List(Of Integer))
        return:
          type: Global.Func{System.Collections.Generic.List{System.Int32}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
      language: CSharp
      name:
        CSharp: ChangeHealthbarView()
        VB: ChangeHealthbarView()
      nameWithType:
        CSharp: BattleUIController.ChangeHealthbarView()
        VB: BattleUIController.ChangeHealthbarView()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView()
        VB: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeHealthbarView
        path: ''
        startLine: 5848
      syntax:
        content:
          CSharp: public void ChangeHealthbarView()
          VB: Public Sub ChangeHealthbarView
      overload: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: ApplyEnergyChange(Int32, Int32)
        VB: ApplyEnergyChange(Int32, Int32)
      nameWithType:
        CSharp: BattleUIController.ApplyEnergyChange(Int32, Int32)
        VB: BattleUIController.ApplyEnergyChange(Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ApplyEnergyChange
        path: ''
        startLine: 5866
      syntax:
        content:
          CSharp: public void ApplyEnergyChange(int energyBarIndex, int newEnergyValue)
          VB: Public Sub ApplyEnergyChange(energyBarIndex As Integer, newEnergyValue As Integer)
        parameters:
        - id: energyBarIndex
          type: System.Int32
        - id: newEnergyValue
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
      language: CSharp
      name:
        CSharp: HideEverythingForWatchMatch(Boolean)
        VB: HideEverythingForWatchMatch(Boolean)
      nameWithType:
        CSharp: BattleUIController.HideEverythingForWatchMatch(Boolean)
        VB: BattleUIController.HideEverythingForWatchMatch(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: HideEverythingForWatchMatch
        path: ''
        startLine: 5873
      syntax:
        content:
          CSharp: public void HideEverythingForWatchMatch(bool isViewer)
          VB: Public Sub HideEverythingForWatchMatch(isViewer As Boolean)
        parameters:
        - id: isViewer
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleWaitingPrompt(Boolean)
        VB: ToggleWaitingPrompt(Boolean)
      nameWithType:
        CSharp: BattleUIController.ToggleWaitingPrompt(Boolean)
        VB: BattleUIController.ToggleWaitingPrompt(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ToggleWaitingPrompt
        path: ''
        startLine: 5889
      syntax:
        content:
          CSharp: public void ToggleWaitingPrompt(bool isWaiting)
          VB: Public Sub ToggleWaitingPrompt(isWaiting As Boolean)
        parameters:
        - id: isWaiting
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowCards(Boolean)
        VB: ShowCards(Boolean)
      nameWithType:
        CSharp: BattleUIController.ShowCards(Boolean)
        VB: BattleUIController.ShowCards(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
        VB: Timba.SacredTails.Arena.BattleUIController.ShowCards(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowCards
        path: ''
        startLine: 5902
      syntax:
        content:
          CSharp: public void ShowCards(bool isShow)
          VB: Public Sub ShowCards(isShow As Boolean)
        parameters:
        - id: isShow
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleUIController.ShowCards*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.VfxInfo
    commentId: T:Timba.SacredTails.Arena.VfxInfo
    language: CSharp
    name:
      CSharp: VfxInfo
      VB: VfxInfo
    nameWithType:
      CSharp: VfxInfo
      VB: VfxInfo
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.VfxInfo
      VB: Timba.SacredTails.Arena.VfxInfo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: VfxInfo
      path: ''
      startLine: 7055
    syntax:
      content:
        CSharp: 'public class VfxInfo : MonoBehaviour'
        VB: >-
          Public Class VfxInfo

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.VfxInfo.isVfxReversed
      commentId: F:Timba.SacredTails.Arena.VfxInfo.isVfxReversed
      language: CSharp
      name:
        CSharp: isVfxReversed
        VB: isVfxReversed
      nameWithType:
        CSharp: VfxInfo.isVfxReversed
        VB: VfxInfo.isVfxReversed
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.VfxInfo.isVfxReversed
        VB: Timba.SacredTails.Arena.VfxInfo.isVfxReversed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isVfxReversed
        path: ''
        startLine: 7057
      syntax:
        content:
          CSharp: public bool isVfxReversed
          VB: Public isVfxReversed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.VfxInfo.vfxDuration
      commentId: F:Timba.SacredTails.Arena.VfxInfo.vfxDuration
      language: CSharp
      name:
        CSharp: vfxDuration
        VB: vfxDuration
      nameWithType:
        CSharp: VfxInfo.vfxDuration
        VB: VfxInfo.vfxDuration
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.VfxInfo.vfxDuration
        VB: Timba.SacredTails.Arena.VfxInfo.vfxDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxDuration
        path: ''
        startLine: 7058
      syntax:
        content:
          CSharp: public float vfxDuration
          VB: Public vfxDuration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionController
    language: CSharp
    name:
      CSharp: ArenaShinseiSelectionController
      VB: ArenaShinseiSelectionController
    nameWithType:
      CSharp: ArenaShinseiSelectionController
      VB: ArenaShinseiSelectionController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController
      VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ArenaShinseiSelectionController
      path: ''
      startLine: 8608
    syntax:
      content:
        CSharp: 'public class ArenaShinseiSelectionController : MonoBehaviour'
        VB: >-
          Public Class ArenaShinseiSelectionController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
      language: CSharp
      name:
        CSharp: OnShinseisSelected
        VB: OnShinseisSelected
      nameWithType:
        CSharp: ArenaShinseiSelectionController.OnShinseisSelected
        VB: ArenaShinseiSelectionController.OnShinseisSelected
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseisSelected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnShinseisSelected
        path: ''
        startLine: 8616
      syntax:
        content:
          CSharp: public Action<bool, List<int>> OnShinseisSelected
          VB: Public OnShinseisSelected As Action(Of Boolean, List(Of Integer))
        return:
          type: Global.Action{System.Boolean,System.Collections.Generic.List{System.Int32}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData,System.Int32,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: Init(MatchData, Int32, Boolean)
        VB: Init(MatchData, Int32, Boolean)
      nameWithType:
        CSharp: ArenaShinseiSelectionController.Init(MatchData, Int32, Boolean)
        VB: ArenaShinseiSelectionController.Init(MatchData, Int32, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData, System.Int32, System.Boolean)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init(MatchData, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 8626
      syntax:
        content:
          CSharp: public void Init(MatchData matchData, int playerIndex, bool isViewer = false)
          VB: Public Sub Init(matchData As MatchData, playerIndex As Integer, isViewer As Boolean = False)
        parameters:
        - id: matchData
          type: Global.MatchData
        - id: playerIndex
          type: System.Int32
        - id: isViewer
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
      language: CSharp
      name:
        CSharp: OnShinseiSelectionCompleted()
        VB: OnShinseiSelectionCompleted()
      nameWithType:
        CSharp: ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
        VB: ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnShinseiSelectionCompleted
        path: ''
        startLine: 8644
      syntax:
        content:
          CSharp: public void OnShinseiSelectionCompleted()
          VB: Public Sub OnShinseiSelectionCompleted
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    language: CSharp
    name:
      CSharp: ArenaShinseiSelectionUserPanelController
      VB: ArenaShinseiSelectionUserPanelController
    nameWithType:
      CSharp: ArenaShinseiSelectionUserPanelController
      VB: ArenaShinseiSelectionUserPanelController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
      VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ArenaShinseiSelectionUserPanelController
      path: ''
      startLine: 8686
    syntax:
      content:
        CSharp: 'public class ArenaShinseiSelectionUserPanelController : MonoBehaviour'
        VB: >-
          Public Class ArenaShinseiSelectionUserPanelController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
      language: CSharp
      name:
        CSharp: selectionIndicators
        VB: selectionIndicators
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.selectionIndicators
        VB: ArenaShinseiSelectionUserPanelController.selectionIndicators
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicators
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: selectionIndicators
        path: ''
        startLine: 8690
      syntax:
        content:
          CSharp: public List<Image> selectionIndicators
          VB: Public selectionIndicators As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      language: CSharp
      name:
        CSharp: selectionIndicatorsDetail
        VB: selectionIndicatorsDetail
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
        VB: ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectionIndicatorsDetail
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: selectionIndicatorsDetail
        path: ''
        startLine: 8690
      syntax:
        content:
          CSharp: public List<Image> selectionIndicatorsDetail
          VB: Public selectionIndicatorsDetail As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
      language: CSharp
      name:
        CSharp: selectedIndicator
        VB: selectedIndicator
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.selectedIndicator
        VB: ArenaShinseiSelectionUserPanelController.selectedIndicator
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.selectedIndicator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: selectedIndicator
        path: ''
        startLine: 8691
      syntax:
        content:
          CSharp: public Sprite selectedIndicator
          VB: Public selectedIndicator As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
      language: CSharp
      name:
        CSharp: unselectedIndicator
        VB: unselectedIndicator
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.unselectedIndicator
        VB: ArenaShinseiSelectionUserPanelController.unselectedIndicator
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.unselectedIndicator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: unselectedIndicator
        path: ''
        startLine: 8692
      syntax:
        content:
          CSharp: public Sprite unselectedIndicator
          VB: Public unselectedIndicator As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      language: CSharp
      name:
        CSharp: shinseSlotPrefab
        VB: shinseSlotPrefab
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
        VB: ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.shinseSlotPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseSlotPrefab
        path: ''
        startLine: 8693
      syntax:
        content:
          CSharp: public ShinseiSlot shinseSlotPrefab
          VB: Public shinseSlotPrefab As ShinseiSlot
        return:
          type: Timba.SacredTails.Arena.ShinseiSlot
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
      language: CSharp
      name:
        CSharp: partyRow1
        VB: partyRow1
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.partyRow1
        VB: ArenaShinseiSelectionUserPanelController.partyRow1
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: partyRow1
        path: ''
        startLine: 8695
      syntax:
        content:
          CSharp: public Transform partyRow1
          VB: Public partyRow1 As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
      language: CSharp
      name:
        CSharp: partyRow2
        VB: partyRow2
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.partyRow2
        VB: ArenaShinseiSelectionUserPanelController.partyRow2
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.partyRow2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: partyRow2
        path: ''
        startLine: 8696
      syntax:
        content:
          CSharp: public Transform partyRow2
          VB: Public partyRow2 As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
      language: CSharp
      name:
        CSharp: nameLabel
        VB: nameLabel
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.nameLabel
        VB: ArenaShinseiSelectionUserPanelController.nameLabel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.nameLabel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: nameLabel
        path: ''
        startLine: 8697
      syntax:
        content:
          CSharp: public TMP_Text nameLabel
          VB: Public nameLabel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
      language: CSharp
      name:
        CSharp: textCounter
        VB: textCounter
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.textCounter
        VB: ArenaShinseiSelectionUserPanelController.textCounter
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.textCounter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: textCounter
        path: ''
        startLine: 8698
      syntax:
        content:
          CSharp: public TextMeshProUGUI textCounter
          VB: Public textCounter As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
      language: CSharp
      name:
        CSharp: isEnemyPanel
        VB: isEnemyPanel
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.isEnemyPanel
        VB: ArenaShinseiSelectionUserPanelController.isEnemyPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.isEnemyPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isEnemyPanel
        path: ''
        startLine: 8701
      syntax:
        content:
          CSharp: public bool isEnemyPanel
          VB: Public isEnemyPanel As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
      commentId: F:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
      language: CSharp
      name:
        CSharp: previewPanel
        VB: previewPanel
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.previewPanel
        VB: ArenaShinseiSelectionUserPanelController.previewPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.previewPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: previewPanel
        path: ''
        startLine: 8702
      syntax:
        content:
          CSharp: public ShinseiPreviewPanelManager previewPanel
          VB: Public previewPanel As ShinseiPreviewPanelManager
        return:
          type: Global.ShinseiPreviewPanelManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
      language: CSharp
      name:
        CSharp: Init(CombatPlayer)
        VB: Init(CombatPlayer)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
        VB: ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init(CombatPlayer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 8708
      syntax:
        content:
          CSharp: public void Init(CombatPlayer combatPlayer)
          VB: Public Sub Init(combatPlayer As CombatPlayer)
        parameters:
        - id: combatPlayer
          type: Global.CombatPlayer
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowNext(Boolean)
        VB: ShowNext(Boolean)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.ShowNext(Boolean)
        VB: ArenaShinseiSelectionUserPanelController.ShowNext(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowNext
        path: ''
        startLine: 8758
      syntax:
        content:
          CSharp: public void ShowNext(bool direction)
          VB: Public Sub ShowNext(direction As Boolean)
        parameters:
        - id: direction
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
      language: CSharp
      name:
        CSharp: Show(Int32)
        VB: Show(Int32)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.Show(Int32)
        VB: ArenaShinseiSelectionUserPanelController.Show(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Show
        path: ''
        startLine: 8763
      syntax:
        content:
          CSharp: public void Show(int direction)
          VB: Public Sub Show(direction As Integer)
        parameters:
        - id: direction
          type: System.Int32
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32,Timba.SacredTails.Arena.ShinseiSlot)
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32,Timba.SacredTails.Arena.ShinseiSlot)
      language: CSharp
      name:
        CSharp: SelectShinseiForBattle(Int32, ShinseiSlot)
        VB: SelectShinseiForBattle(Int32, ShinseiSlot)
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(Int32, ShinseiSlot)
        VB: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32, Timba.SacredTails.Arena.ShinseiSlot)
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle(System.Int32, Timba.SacredTails.Arena.ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SelectShinseiForBattle
        path: ''
        startLine: 8785
      syntax:
        content:
          CSharp: public void SelectShinseiForBattle(int listIndex, ShinseiSlot shinseiSlot)
          VB: Public Sub SelectShinseiForBattle(listIndex As Integer, shinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: shinseiSlot
          type: Timba.SacredTails.Arena.ShinseiSlot
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
      language: CSharp
      name:
        CSharp: MakeSlotsUnclickeable()
        VB: MakeSlotsUnclickeable()
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
        VB: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: MakeSlotsUnclickeable
        path: ''
        startLine: 8845
      syntax:
        content:
          CSharp: public void MakeSlotsUnclickeable()
          VB: Public Sub MakeSlotsUnclickeable
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
      commentId: M:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
      language: CSharp
      name:
        CSharp: GetShinseisSelected()
        VB: GetShinseisSelected()
      nameWithType:
        CSharp: ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
        VB: ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
        VB: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetShinseisSelected
        path: ''
        startLine: 8854
      syntax:
        content:
          CSharp: public List<int> GetShinseisSelected()
          VB: Public Function GetShinseisSelected As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
      overload: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.UserInfo
    commentId: T:Timba.SacredTails.Arena.UserInfo
    language: CSharp
    name:
      CSharp: UserInfo
      VB: UserInfo
    nameWithType:
      CSharp: UserInfo
      VB: UserInfo
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.UserInfo
      VB: Timba.SacredTails.Arena.UserInfo
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: UserInfo
      path: ''
      startLine: 9740
    syntax:
      content:
        CSharp: public class UserInfo
        VB: Public Class UserInfo
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.UserInfo.healthbars
      commentId: F:Timba.SacredTails.Arena.UserInfo.healthbars
      language: CSharp
      name:
        CSharp: healthbars
        VB: healthbars
      nameWithType:
        CSharp: UserInfo.healthbars
        VB: UserInfo.healthbars
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.healthbars
        VB: Timba.SacredTails.Arena.UserInfo.healthbars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: healthbars
        path: ''
        startLine: 9743
      syntax:
        content:
          CSharp: public List<ResourceBarValues> healthbars
          VB: Public healthbars As List(Of ResourceBarValues)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.energybars
      commentId: F:Timba.SacredTails.Arena.UserInfo.energybars
      language: CSharp
      name:
        CSharp: energybars
        VB: energybars
      nameWithType:
        CSharp: UserInfo.energybars
        VB: UserInfo.energybars
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.energybars
        VB: Timba.SacredTails.Arena.UserInfo.energybars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: energybars
        path: ''
        startLine: 9744
      syntax:
        content:
          CSharp: public List<ResourceBarValues> energybars
          VB: Public energybars As List(Of ResourceBarValues)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.userIndex
      commentId: F:Timba.SacredTails.Arena.UserInfo.userIndex
      language: CSharp
      name:
        CSharp: userIndex
        VB: userIndex
      nameWithType:
        CSharp: UserInfo.userIndex
        VB: UserInfo.userIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.userIndex
        VB: Timba.SacredTails.Arena.UserInfo.userIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: userIndex
        path: ''
        startLine: 9745
      syntax:
        content:
          CSharp: public int userIndex
          VB: Public userIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.spawnedShinsei
      commentId: F:Timba.SacredTails.Arena.UserInfo.spawnedShinsei
      language: CSharp
      name:
        CSharp: spawnedShinsei
        VB: spawnedShinsei
      nameWithType:
        CSharp: UserInfo.spawnedShinsei
        VB: UserInfo.spawnedShinsei
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.spawnedShinsei
        VB: Timba.SacredTails.Arena.UserInfo.spawnedShinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: spawnedShinsei
        path: ''
        startLine: 9746
      syntax:
        content:
          CSharp: public CharacterSlot spawnedShinsei
          VB: Public spawnedShinsei As CharacterSlot
        return:
          type: Global.CharacterSlot
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.battleShinseis
      commentId: F:Timba.SacredTails.Arena.UserInfo.battleShinseis
      language: CSharp
      name:
        CSharp: battleShinseis
        VB: battleShinseis
      nameWithType:
        CSharp: UserInfo.battleShinseis
        VB: UserInfo.battleShinseis
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.battleShinseis
        VB: Timba.SacredTails.Arena.UserInfo.battleShinseis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleShinseis
        path: ''
        startLine: 9747
      syntax:
        content:
          CSharp: public List<Shinsei> battleShinseis
          VB: Public battleShinseis As List(Of Shinsei)
        return:
          type: System.Collections.Generic.List{Shinsei}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.turnActions
      commentId: F:Timba.SacredTails.Arena.UserInfo.turnActions
      language: CSharp
      name:
        CSharp: turnActions
        VB: turnActions
      nameWithType:
        CSharp: UserInfo.turnActions
        VB: UserInfo.turnActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.turnActions
        VB: Timba.SacredTails.Arena.UserInfo.turnActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnActions
        path: ''
        startLine: 9748
      syntax:
        content:
          CSharp: public List<BattleActionsBase> turnActions
          VB: Public turnActions As List(Of BattleActionsBase)
        return:
          type: System.Collections.Generic.List{BattleActionsBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
      commentId: F:Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
      language: CSharp
      name:
        CSharp: currentShinseiIndex
        VB: currentShinseiIndex
      nameWithType:
        CSharp: UserInfo.currentShinseiIndex
        VB: UserInfo.currentShinseiIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
        VB: Timba.SacredTails.Arena.UserInfo.currentShinseiIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: currentShinseiIndex
        path: ''
        startLine: 9749
      syntax:
        content:
          CSharp: public int currentShinseiIndex
          VB: Public currentShinseiIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.UserInfo.isLocalPlayer
      commentId: F:Timba.SacredTails.Arena.UserInfo.isLocalPlayer
      language: CSharp
      name:
        CSharp: isLocalPlayer
        VB: isLocalPlayer
      nameWithType:
        CSharp: UserInfo.isLocalPlayer
        VB: UserInfo.isLocalPlayer
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.UserInfo.isLocalPlayer
        VB: Timba.SacredTails.Arena.UserInfo.isLocalPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isLocalPlayer
        path: ''
        startLine: 9750
      syntax:
        content:
          CSharp: public bool isLocalPlayer
          VB: Public isLocalPlayer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ResourceBarValues
    commentId: T:Timba.SacredTails.Arena.ResourceBarValues
    language: CSharp
    name:
      CSharp: ResourceBarValues
      VB: ResourceBarValues
    nameWithType:
      CSharp: ResourceBarValues
      VB: ResourceBarValues
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ResourceBarValues
      VB: Timba.SacredTails.Arena.ResourceBarValues
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ResourceBarValues
      path: ''
      startLine: 9753
    syntax:
      content:
        CSharp: public class ResourceBarValues
        VB: Public Class ResourceBarValues
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ResourceBarValues.currentValue
      commentId: F:Timba.SacredTails.Arena.ResourceBarValues.currentValue
      language: CSharp
      name:
        CSharp: currentValue
        VB: currentValue
      nameWithType:
        CSharp: ResourceBarValues.currentValue
        VB: ResourceBarValues.currentValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ResourceBarValues.currentValue
        VB: Timba.SacredTails.Arena.ResourceBarValues.currentValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: currentValue
        path: ''
        startLine: 9756
      syntax:
        content:
          CSharp: public int currentValue
          VB: Public currentValue As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ResourceBarValues.maxValue
      commentId: F:Timba.SacredTails.Arena.ResourceBarValues.maxValue
      language: CSharp
      name:
        CSharp: maxValue
        VB: maxValue
      nameWithType:
        CSharp: ResourceBarValues.maxValue
        VB: ResourceBarValues.maxValue
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ResourceBarValues.maxValue
        VB: Timba.SacredTails.Arena.ResourceBarValues.maxValue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: maxValue
        path: ''
        startLine: 9757
      syntax:
        content:
          CSharp: public int maxValue
          VB: Public maxValue As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.BattleGameMode
    commentId: T:Timba.SacredTails.Arena.BattleGameMode
    language: CSharp
    name:
      CSharp: BattleGameMode
      VB: BattleGameMode
    nameWithType:
      CSharp: BattleGameMode
      VB: BattleGameMode
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleGameMode
      VB: Timba.SacredTails.Arena.BattleGameMode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleGameMode
      path: ''
      startLine: 11342
    syntax:
      content:
        CSharp: 'public class BattleGameMode : MonoBehaviour'
        VB: >-
          Public Class BattleGameMode

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
      language: CSharp
      name:
        CSharp: gameSceneManager
        VB: gameSceneManager
      nameWithType:
        CSharp: BattleGameMode.gameSceneManager
        VB: BattleGameMode.gameSceneManager
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
        VB: Timba.SacredTails.Arena.BattleGameMode.gameSceneManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: gameSceneManager
        path: ''
        startLine: 11348
      syntax:
        content:
          CSharp: public GameSceneManager gameSceneManager
          VB: Public gameSceneManager As GameSceneManager
        return:
          type: Timba.SacredTails.Arena.GameSceneManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.turnsController
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.turnsController
      language: CSharp
      name:
        CSharp: turnsController
        VB: turnsController
      nameWithType:
        CSharp: BattleGameMode.turnsController
        VB: BattleGameMode.turnsController
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.turnsController
        VB: Timba.SacredTails.Arena.BattleGameMode.turnsController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnsController
        path: ''
        startLine: 11349
      syntax:
        content:
          CSharp: public TurnsController turnsController
          VB: Public turnsController As TurnsController
        return:
          type: Timba.SacredTails.Arena.TurnsController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.delayTime
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.delayTime
      language: CSharp
      name:
        CSharp: delayTime
        VB: delayTime
      nameWithType:
        CSharp: BattleGameMode.delayTime
        VB: BattleGameMode.delayTime
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.delayTime
        VB: Timba.SacredTails.Arena.BattleGameMode.delayTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: delayTime
        path: ''
        startLine: 11352
      syntax:
        content:
          CSharp: public float delayTime
          VB: Public delayTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
      language: CSharp
      name:
        CSharp: matchIdSeed
        VB: matchIdSeed
      nameWithType:
        CSharp: BattleGameMode.matchIdSeed
        VB: BattleGameMode.matchIdSeed
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
        VB: Timba.SacredTails.Arena.BattleGameMode.matchIdSeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: matchIdSeed
        path: ''
        startLine: 11353
      syntax:
        content:
          CSharp: public int matchIdSeed
          VB: Public matchIdSeed As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
      language: CSharp
      name:
        CSharp: isViewingMatch
        VB: isViewingMatch
      nameWithType:
        CSharp: BattleGameMode.isViewingMatch
        VB: BattleGameMode.isViewingMatch
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
        VB: Timba.SacredTails.Arena.BattleGameMode.isViewingMatch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isViewingMatch
        path: ''
        startLine: 11354
      syntax:
        content:
          CSharp: public bool isViewingMatch
          VB: Public isViewingMatch As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.currentTerrain
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.currentTerrain
      language: CSharp
      name:
        CSharp: currentTerrain
        VB: currentTerrain
      nameWithType:
        CSharp: BattleGameMode.currentTerrain
        VB: BattleGameMode.currentTerrain
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.currentTerrain
        VB: Timba.SacredTails.Arena.BattleGameMode.currentTerrain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: currentTerrain
        path: ''
        startLine: 11359
      syntax:
        content:
          CSharp: public BattleTerrainBehavioursBase currentTerrain
          VB: Public currentTerrain As BattleTerrainBehavioursBase
        return:
          type: Global.BattleTerrainBehavioursBase
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.playerInfo
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.playerInfo
      language: CSharp
      name:
        CSharp: playerInfo
        VB: playerInfo
      nameWithType:
        CSharp: BattleGameMode.playerInfo
        VB: BattleGameMode.playerInfo
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.playerInfo
        VB: Timba.SacredTails.Arena.BattleGameMode.playerInfo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: playerInfo
        path: ''
        startLine: 11365
      syntax:
        content:
          CSharp: public UserInfo playerInfo
          VB: Public playerInfo As UserInfo
        return:
          type: Timba.SacredTails.Arena.UserInfo
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.localCombat
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.localCombat
      language: CSharp
      name:
        CSharp: localCombat
        VB: localCombat
      nameWithType:
        CSharp: BattleGameMode.localCombat
        VB: BattleGameMode.localCombat
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.localCombat
        VB: Timba.SacredTails.Arena.BattleGameMode.localCombat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: localCombat
        path: ''
        startLine: 11366
      syntax:
        content:
          CSharp: public Combat localCombat
          VB: Public localCombat As Combat
        return:
          type: Global.Combat
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.enemyInfo
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.enemyInfo
      language: CSharp
      name:
        CSharp: enemyInfo
        VB: enemyInfo
      nameWithType:
        CSharp: BattleGameMode.enemyInfo
        VB: BattleGameMode.enemyInfo
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.enemyInfo
        VB: Timba.SacredTails.Arena.BattleGameMode.enemyInfo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: enemyInfo
        path: ''
        startLine: 11371
      syntax:
        content:
          CSharp: public UserInfo enemyInfo
          VB: Public enemyInfo As UserInfo
        return:
          type: Timba.SacredTails.Arena.UserInfo
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
      language: CSharp
      name:
        CSharp: titleEndMatchPanel
        VB: titleEndMatchPanel
      nameWithType:
        CSharp: BattleGameMode.titleEndMatchPanel
        VB: BattleGameMode.titleEndMatchPanel
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
        VB: Timba.SacredTails.Arena.BattleGameMode.titleEndMatchPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: titleEndMatchPanel
        path: ''
        startLine: 11395
      syntax:
        content:
          CSharp: public TMP_Text titleEndMatchPanel
          VB: Public titleEndMatchPanel As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.blackSprites
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.blackSprites
      language: CSharp
      name:
        CSharp: blackSprites
        VB: blackSprites
      nameWithType:
        CSharp: BattleGameMode.blackSprites
        VB: BattleGameMode.blackSprites
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.blackSprites
        VB: Timba.SacredTails.Arena.BattleGameMode.blackSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: blackSprites
        path: ''
        startLine: 11396
      syntax:
        content:
          CSharp: public List<Sprite> blackSprites
          VB: Public blackSprites As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.whiteSprites
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.whiteSprites
      language: CSharp
      name:
        CSharp: whiteSprites
        VB: whiteSprites
      nameWithType:
        CSharp: BattleGameMode.whiteSprites
        VB: BattleGameMode.whiteSprites
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.whiteSprites
        VB: Timba.SacredTails.Arena.BattleGameMode.whiteSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: whiteSprites
        path: ''
        startLine: 11397
      syntax:
        content:
          CSharp: public List<Sprite> whiteSprites
          VB: Public whiteSprites As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.texts
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.texts
      language: CSharp
      name:
        CSharp: texts
        VB: texts
      nameWithType:
        CSharp: BattleGameMode.texts
        VB: BattleGameMode.texts
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.texts
        VB: Timba.SacredTails.Arena.BattleGameMode.texts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: texts
        path: ''
        startLine: 11398
      syntax:
        content:
          CSharp: public List<TextMeshProUGUI> texts
          VB: Public texts As List(Of TextMeshProUGUI)
        return:
          type: System.Collections.Generic.List{TextMeshProUGUI}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.changeColorElements
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.changeColorElements
      language: CSharp
      name:
        CSharp: changeColorElements
        VB: changeColorElements
      nameWithType:
        CSharp: BattleGameMode.changeColorElements
        VB: BattleGameMode.changeColorElements
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.changeColorElements
        VB: Timba.SacredTails.Arena.BattleGameMode.changeColorElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: changeColorElements
        path: ''
        startLine: 11399
      syntax:
        content:
          CSharp: public List<Image> changeColorElements
          VB: Public changeColorElements As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
      language: CSharp
      name:
        CSharp: changeColorInvertElements
        VB: changeColorInvertElements
      nameWithType:
        CSharp: BattleGameMode.changeColorInvertElements
        VB: BattleGameMode.changeColorInvertElements
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
        VB: Timba.SacredTails.Arena.BattleGameMode.changeColorInvertElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: changeColorInvertElements
        path: ''
        startLine: 11399
      syntax:
        content:
          CSharp: public List<Image> changeColorInvertElements
          VB: Public changeColorInvertElements As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
      language: CSharp
      name:
        CSharp: changeSpriteElements
        VB: changeSpriteElements
      nameWithType:
        CSharp: BattleGameMode.changeSpriteElements
        VB: BattleGameMode.changeSpriteElements
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
        VB: Timba.SacredTails.Arena.BattleGameMode.changeSpriteElements
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: changeSpriteElements
        path: ''
        startLine: 11400
      syntax:
        content:
          CSharp: public List<Image> changeSpriteElements
          VB: Public changeSpriteElements As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.colors
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.colors
      language: CSharp
      name:
        CSharp: colors
        VB: colors
      nameWithType:
        CSharp: BattleGameMode.colors
        VB: BattleGameMode.colors
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.colors
        VB: Timba.SacredTails.Arena.BattleGameMode.colors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: colors
        path: ''
        startLine: 11401
      syntax:
        content:
          CSharp: public List<Color> colors
          VB: Public colors As List(Of Color)
        return:
          type: System.Collections.Generic.List{Color}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
      language: CSharp
      name:
        CSharp: cameraEndBattle
        VB: cameraEndBattle
      nameWithType:
        CSharp: BattleGameMode.cameraEndBattle
        VB: BattleGameMode.cameraEndBattle
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
        VB: Timba.SacredTails.Arena.BattleGameMode.cameraEndBattle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cameraEndBattle
        path: ''
        startLine: 11411
      syntax:
        content:
          CSharp: public Camera cameraEndBattle
          VB: Public cameraEndBattle As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
      language: CSharp
      name:
        CSharp: OnStartMatch(GetMatchResult)
        VB: OnStartMatch(GetMatchResult)
      nameWithType:
        CSharp: BattleGameMode.OnStartMatch(GetMatchResult)
        VB: BattleGameMode.OnStartMatch(GetMatchResult)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
        VB: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch(GetMatchResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnStartMatch
        path: ''
        startLine: 11428
      syntax:
        content:
          CSharp: public void OnStartMatch(GetMatchResult getMatchResult)
          VB: Public Sub OnStartMatch(getMatchResult As GetMatchResult)
        parameters:
        - id: getMatchResult
          type: Global.GetMatchResult
      overload: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      language: CSharp
      name:
        CSharp: OnStartMatchRoutine(GetMatchResult)
        VB: OnStartMatchRoutine(GetMatchResult)
      nameWithType:
        CSharp: BattleGameMode.OnStartMatchRoutine(GetMatchResult)
        VB: BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
        VB: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine(GetMatchResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnStartMatchRoutine
        path: ''
        startLine: 11433
      syntax:
        content:
          CSharp: public IEnumerator OnStartMatchRoutine(GetMatchResult getMatchResult)
          VB: Public Function OnStartMatchRoutine(getMatchResult As GetMatchResult) As IEnumerator
        parameters:
        - id: getMatchResult
          type: Global.GetMatchResult
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
      language: CSharp
      name:
        CSharp: MakeShinseiPartyUsingPlayfabId(String)
        VB: MakeShinseiPartyUsingPlayfabId(String)
      nameWithType:
        CSharp: BattleGameMode.MakeShinseiPartyUsingPlayfabId(String)
        VB: BattleGameMode.MakeShinseiPartyUsingPlayfabId(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
        VB: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: MakeShinseiPartyUsingPlayfabId
        path: ''
        startLine: 11492
      summary: "\nBring shinsei party from playfab\n"
      example: []
      syntax:
        content:
          CSharp: public void MakeShinseiPartyUsingPlayfabId(string playfabId)
          VB: Public Sub MakeShinseiPartyUsingPlayfabId(playfabId As String)
        parameters:
        - id: playfabId
          type: System.String
          description: Playfab ID
      overload: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
      language: CSharp
      name:
        CSharp: Initialize(MatchData)
        VB: Initialize(MatchData)
      nameWithType:
        CSharp: BattleGameMode.Initialize(MatchData)
        VB: BattleGameMode.Initialize(MatchData)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
        VB: Timba.SacredTails.Arena.BattleGameMode.Initialize(MatchData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Initialize
        path: ''
        startLine: 11511
      syntax:
        content:
          CSharp: public void Initialize(MatchData matchData)
          VB: Public Sub Initialize(matchData As MatchData)
        parameters:
        - id: matchData
          type: Global.MatchData
      overload: Timba.SacredTails.Arena.BattleGameMode.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean,System.Collections.Generic.List{System.Int32})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean,System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: ShinseiSelected(Boolean, List<Int32>)
        VB: ShinseiSelected(Boolean, List(Of Int32))
      nameWithType:
        CSharp: BattleGameMode.ShinseiSelected(Boolean, List<Int32>)
        VB: BattleGameMode.ShinseiSelected(Boolean, List(Of Int32))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean, System.Collections.Generic.List<System.Int32>)
        VB: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected(System.Boolean, System.Collections.Generic.List(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShinseiSelected
        path: ''
        startLine: 11538
      syntax:
        content:
          CSharp: public void ShinseiSelected(bool endTime, List<int> shinseisPlayer)
          VB: Public Sub ShinseiSelected(endTime As Boolean, shinseisPlayer As List(Of Integer))
        parameters:
        - id: endTime
          type: System.Boolean
        - id: shinseisPlayer
          type: System.Collections.Generic.List{System.Int32}
      overload: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnDisable
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: BattleGameMode.OnDisable()
        VB: BattleGameMode.OnDisable()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnDisable()
        VB: Timba.SacredTails.Arena.BattleGameMode.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnDisable
        path: ''
        startLine: 11566
      syntax:
        content:
          CSharp: public void OnDisable()
          VB: Public Sub OnDisable
      overload: Timba.SacredTails.Arena.BattleGameMode.OnDisable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
      language: CSharp
      name:
        CSharp: OnApplicationQuit()
        VB: OnApplicationQuit()
      nameWithType:
        CSharp: BattleGameMode.OnApplicationQuit()
        VB: BattleGameMode.OnApplicationQuit()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit()
        VB: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnApplicationQuit
        path: ''
        startLine: 11570
      syntax:
        content:
          CSharp: public void OnApplicationQuit()
          VB: Public Sub OnApplicationQuit
      overload: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
      language: CSharp
      name:
        CSharp: CancelSelectShinsei()
        VB: CancelSelectShinsei()
      nameWithType:
        CSharp: BattleGameMode.CancelSelectShinsei()
        VB: BattleGameMode.CancelSelectShinsei()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei()
        VB: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CancelSelectShinsei
        path: ''
        startLine: 11575
      syntax:
        content:
          CSharp: public void CancelSelectShinsei()
          VB: Public Sub CancelSelectShinsei
      overload: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
      language: CSharp
      name:
        CSharp: WaitForOpponentToSelectViewMatch()
        VB: WaitForOpponentToSelectViewMatch()
      nameWithType:
        CSharp: BattleGameMode.WaitForOpponentToSelectViewMatch()
        VB: BattleGameMode.WaitForOpponentToSelectViewMatch()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch()
        VB: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitForOpponentToSelectViewMatch
        path: ''
        startLine: 11586
      syntax:
        content:
          CSharp: public void WaitForOpponentToSelectViewMatch()
          VB: Public Sub WaitForOpponentToSelectViewMatch
      overload: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
      language: CSharp
      name:
        CSharp: WaitForOpponentToSelect()
        VB: WaitForOpponentToSelect()
      nameWithType:
        CSharp: BattleGameMode.WaitForOpponentToSelect()
        VB: BattleGameMode.WaitForOpponentToSelect()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect()
        VB: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitForOpponentToSelect
        path: ''
        startLine: 11593
      syntax:
        content:
          CSharp: public IEnumerator WaitForOpponentToSelect()
          VB: Public Function WaitForOpponentToSelect As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.InitBattle
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.InitBattle
      language: CSharp
      name:
        CSharp: InitBattle()
        VB: InitBattle()
      nameWithType:
        CSharp: BattleGameMode.InitBattle()
        VB: BattleGameMode.InitBattle()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.InitBattle()
        VB: Timba.SacredTails.Arena.BattleGameMode.InitBattle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitBattle
        path: ''
        startLine: 11645
      syntax:
        content:
          CSharp: public void InitBattle()
          VB: Public Sub InitBattle
      overload: Timba.SacredTails.Arena.BattleGameMode.InitBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
      language: CSharp
      name:
        CSharp: OpenChangeShinseiPanel()
        VB: OpenChangeShinseiPanel()
      nameWithType:
        CSharp: BattleGameMode.OpenChangeShinseiPanel()
        VB: BattleGameMode.OpenChangeShinseiPanel()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel()
        VB: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OpenChangeShinseiPanel
        path: ''
        startLine: 11739
      syntax:
        content:
          CSharp: public void OpenChangeShinseiPanel()
          VB: Public Sub OpenChangeShinseiPanel
      overload: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(Timba.SacredTails.Arena.UserInfo@)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(Timba.SacredTails.Arena.UserInfo@)
      language: CSharp
      name:
        CSharp: UpdateCurrentShinsei(ref UserInfo)
        VB: UpdateCurrentShinsei(ByRef UserInfo)
      nameWithType:
        CSharp: BattleGameMode.UpdateCurrentShinsei(ref UserInfo)
        VB: BattleGameMode.UpdateCurrentShinsei(ByRef UserInfo)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(ref Timba.SacredTails.Arena.UserInfo)
        VB: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei(ByRef Timba.SacredTails.Arena.UserInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateCurrentShinsei
        path: ''
        startLine: 11792
      syntax:
        content:
          CSharp: public void UpdateCurrentShinsei(ref UserInfo userInfo)
          VB: Public Sub UpdateCurrentShinsei(ByRef userInfo As UserInfo)
        parameters:
        - id: userInfo
          type: Timba.SacredTails.Arena.UserInfo
      overload: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action,System.String,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action,System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: ShowPopupEndMatch(Action, String, Boolean)
        VB: ShowPopupEndMatch(Action, String, Boolean)
      nameWithType:
        CSharp: BattleGameMode.ShowPopupEndMatch(Action, String, Boolean)
        VB: BattleGameMode.ShowPopupEndMatch(Action, String, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action, System.String, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch(Action, System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowPopupEndMatch
        path: ''
        startLine: 11826
      syntax:
        content:
          CSharp: public void ShowPopupEndMatch(Action callback, string message, bool localPlayerWon)
          VB: Public Sub ShowPopupEndMatch(callback As Action, message As String, localPlayerWon As Boolean)
        parameters:
        - id: callback
          type: Global.Action
        - id: message
          type: System.String
        - id: localPlayerWon
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
      commentId: F:Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
      language: CSharp
      name:
        CSharp: hasShowEndResult
        VB: hasShowEndResult
      nameWithType:
        CSharp: BattleGameMode.hasShowEndResult
        VB: BattleGameMode.hasShowEndResult
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
        VB: Timba.SacredTails.Arena.BattleGameMode.hasShowEndResult
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: hasShowEndResult
        path: ''
        startLine: 11845
      syntax:
        content:
          CSharp: public bool hasShowEndResult
          VB: Public hasShowEndResult As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean,Action)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean,Action)
      language: CSharp
      name:
        CSharp: ShowEndResultPanel(Boolean, Action)
        VB: ShowEndResultPanel(Boolean, Action)
      nameWithType:
        CSharp: BattleGameMode.ShowEndResultPanel(Boolean, Action)
        VB: BattleGameMode.ShowEndResultPanel(Boolean, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean, Action)
        VB: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel(System.Boolean, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowEndResultPanel
        path: ''
        startLine: 11846
      syntax:
        content:
          CSharp: public void ShowEndResultPanel(bool localPlayerWon, Action onEndAnimations = null)
          VB: Public Sub ShowEndResultPanel(localPlayerWon As Boolean, onEndAnimations As Action = Nothing)
        parameters:
        - id: localPlayerWon
          type: System.Boolean
        - id: onEndAnimations
          type: Global.Action
      overload: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean,Action)
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean,Action)
      language: CSharp
      name:
        CSharp: SpawnWinnerShisneis(Boolean, Action)
        VB: SpawnWinnerShisneis(Boolean, Action)
      nameWithType:
        CSharp: BattleGameMode.SpawnWinnerShisneis(Boolean, Action)
        VB: BattleGameMode.SpawnWinnerShisneis(Boolean, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean, Action)
        VB: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis(System.Boolean, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SpawnWinnerShisneis
        path: ''
        startLine: 11867
      syntax:
        content:
          CSharp: public void SpawnWinnerShisneis(bool localPlayerWon, Action onEndAnimations = null)
          VB: Public Sub SpawnWinnerShisneis(localPlayerWon As Boolean, onEndAnimations As Action = Nothing)
        parameters:
        - id: localPlayerWon
          type: System.Boolean
        - id: onEndAnimations
          type: Global.Action
      overload: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
      language: CSharp
      name:
        CSharp: GoBackToLobbyPopup()
        VB: GoBackToLobbyPopup()
      nameWithType:
        CSharp: BattleGameMode.GoBackToLobbyPopup()
        VB: BattleGameMode.GoBackToLobbyPopup()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup()
        VB: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GoBackToLobbyPopup
        path: ''
        startLine: 11922
      syntax:
        content:
          CSharp: public void GoBackToLobbyPopup()
          VB: Public Sub GoBackToLobbyPopup
      overload: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
      language: CSharp
      name:
        CSharp: GoBackToLobby()
        VB: GoBackToLobby()
      nameWithType:
        CSharp: BattleGameMode.GoBackToLobby()
        VB: BattleGameMode.GoBackToLobby()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby()
        VB: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GoBackToLobby
        path: ''
        startLine: 11935
      syntax:
        content:
          CSharp: public void GoBackToLobby()
          VB: Public Sub GoBackToLobby
      overload: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues})
      language: CSharp
      name:
        CSharp: EndMatchCheck(List<ResourceBarValues>)
        VB: EndMatchCheck(List(Of ResourceBarValues))
      nameWithType:
        CSharp: BattleGameMode.EndMatchCheck(List<ResourceBarValues>)
        VB: BattleGameMode.EndMatchCheck(List(Of ResourceBarValues))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List<Timba.SacredTails.Arena.ResourceBarValues>)
        VB: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck(System.Collections.Generic.List(Of Timba.SacredTails.Arena.ResourceBarValues))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: EndMatchCheck
        path: ''
        startLine: 11943
      syntax:
        content:
          CSharp: public bool EndMatchCheck(List<ResourceBarValues> healthBars)
          VB: Public Function EndMatchCheck(healthBars As List(Of ResourceBarValues)) As Boolean
        parameters:
        - id: healthBars
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
      language: CSharp
      name:
        CSharp: AddTextToLog(String, Dictionary<String, String>)
        VB: AddTextToLog(String, Dictionary(Of String, String))
      nameWithType:
        CSharp: BattleGameMode.AddTextToLog(String, Dictionary<String, String>)
        VB: BattleGameMode.AddTextToLog(String, Dictionary(Of String, String))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
        VB: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: AddTextToLog
        path: ''
        startLine: 11969
      syntax:
        content:
          CSharp: public void AddTextToLog(string text, Dictionary<string, string> customCodes = null)
          VB: Public Sub AddTextToLog(text As String, customCodes As Dictionary(Of String, String) = Nothing)
        parameters:
        - id: text
          type: System.String
        - id: customCodes
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action{Combat})
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action{Combat})
      language: CSharp
      name:
        CSharp: GetOwnCombatData(Action<Combat>)
        VB: GetOwnCombatData(Action(Of Combat))
      nameWithType:
        CSharp: BattleGameMode.GetOwnCombatData(Action<Combat>)
        VB: BattleGameMode.GetOwnCombatData(Action(Of Combat))
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action<Combat>)
        VB: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData(Action(Of Combat))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetOwnCombatData
        path: ''
        startLine: 11976
      syntax:
        content:
          CSharp: public void GetOwnCombatData(Action<Combat> onRecieveData)
          VB: Public Sub GetOwnCombatData(onRecieveData As Action(Of Combat))
        parameters:
        - id: onRecieveData
          type: Global.Action{Combat}
      overload: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
      commentId: M:Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
      language: CSharp
      name:
        CSharp: GetCurrentShinseiEnergy()
        VB: GetCurrentShinseiEnergy()
      nameWithType:
        CSharp: BattleGameMode.GetCurrentShinseiEnergy()
        VB: BattleGameMode.GetCurrentShinseiEnergy()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy()
        VB: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetCurrentShinseiEnergy
        path: ''
        startLine: 12001
      syntax:
        content:
          CSharp: public int GetCurrentShinseiEnergy()
          VB: Public Function GetCurrentShinseiEnergy As Integer
        return:
          type: System.Int32
      overload: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.BattleViewerController
    commentId: T:Timba.SacredTails.Arena.BattleViewerController
    language: CSharp
    name:
      CSharp: BattleViewerController
      VB: BattleViewerController
    nameWithType:
      CSharp: BattleViewerController
      VB: BattleViewerController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.BattleViewerController
      VB: Timba.SacredTails.Arena.BattleViewerController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: BattleViewerController
      path: ''
      startLine: 12023
    syntax:
      content:
        CSharp: 'public class BattleViewerController : MonoBehaviour'
        VB: >-
          Public Class BattleViewerController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.BattleViewerController.battleGameMode
      commentId: F:Timba.SacredTails.Arena.BattleViewerController.battleGameMode
      language: CSharp
      name:
        CSharp: battleGameMode
        VB: battleGameMode
      nameWithType:
        CSharp: BattleViewerController.battleGameMode
        VB: BattleViewerController.battleGameMode
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleViewerController.battleGameMode
        VB: Timba.SacredTails.Arena.BattleViewerController.battleGameMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleGameMode
        path: ''
        startLine: 12025
      syntax:
        content:
          CSharp: public BattleGameMode battleGameMode
          VB: Public battleGameMode As BattleGameMode
        return:
          type: Timba.SacredTails.Arena.BattleGameMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: Initialize(String, Boolean)
        VB: Initialize(String, Boolean)
      nameWithType:
        CSharp: BattleViewerController.Initialize(String, Boolean)
        VB: BattleViewerController.Initialize(String, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String, System.Boolean)
        VB: Timba.SacredTails.Arena.BattleViewerController.Initialize(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Initialize
        path: ''
        startLine: 12027
      syntax:
        content:
          CSharp: public void Initialize(string matchId, bool isViewing)
          VB: Public Sub Initialize(matchId As String, isViewing As Boolean)
        parameters:
        - id: matchId
          type: System.String
        - id: isViewing
          type: System.Boolean
      overload: Timba.SacredTails.Arena.BattleViewerController.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.TurnsController
    commentId: T:Timba.SacredTails.Arena.TurnsController
    language: CSharp
    name:
      CSharp: TurnsController
      VB: TurnsController
    nameWithType:
      CSharp: TurnsController
      VB: TurnsController
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.TurnsController
      VB: Timba.SacredTails.Arena.TurnsController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: TurnsController
      path: ''
      startLine: 12072
    syntax:
      content:
        CSharp: 'public class TurnsController : MonoBehaviour'
        VB: >-
          Public Class TurnsController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
      commentId: F:Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
      language: CSharp
      name:
        CSharp: turnActionsDatabase
        VB: turnActionsDatabase
      nameWithType:
        CSharp: TurnsController.turnActionsDatabase
        VB: TurnsController.turnActionsDatabase
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
        VB: Timba.SacredTails.Arena.TurnsController.turnActionsDatabase
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnActionsDatabase
        path: ''
        startLine: 12087
      syntax:
        content:
          CSharp: public List<BattleActionsBase> turnActionsDatabase
          VB: Public turnActionsDatabase As List(Of BattleActionsBase)
        return:
          type: System.Collections.Generic.List{BattleActionsBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
      commentId: F:Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
      language: CSharp
      name:
        CSharp: turnActionsDatabaseDictionary
        VB: turnActionsDatabaseDictionary
      nameWithType:
        CSharp: TurnsController.turnActionsDatabaseDictionary
        VB: TurnsController.turnActionsDatabaseDictionary
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
        VB: Timba.SacredTails.Arena.TurnsController.turnActionsDatabaseDictionary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: turnActionsDatabaseDictionary
        path: ''
        startLine: 12089
      syntax:
        content:
          CSharp: public Dictionary<ActionTypeEnum, BattleActionsBase> turnActionsDatabaseDictionary
          VB: Public turnActionsDatabaseDictionary As Dictionary(Of ActionTypeEnum, BattleActionsBase)
        return:
          type: System.Collections.Generic.Dictionary{ActionTypeEnum,BattleActionsBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.alteredStates
      commentId: F:Timba.SacredTails.Arena.TurnsController.alteredStates
      language: CSharp
      name:
        CSharp: alteredStates
        VB: alteredStates
      nameWithType:
        CSharp: TurnsController.alteredStates
        VB: TurnsController.alteredStates
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.alteredStates
        VB: Timba.SacredTails.Arena.TurnsController.alteredStates
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: alteredStates
        path: ''
        startLine: 12091
      syntax:
        content:
          CSharp: public List<BattleAlteredStateBase> alteredStates
          VB: Public alteredStates As List(Of BattleAlteredStateBase)
        return:
          type: System.Collections.Generic.List{BattleAlteredStateBase}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.localPlayer
      commentId: F:Timba.SacredTails.Arena.TurnsController.localPlayer
      language: CSharp
      name:
        CSharp: localPlayer
        VB: localPlayer
      nameWithType:
        CSharp: TurnsController.localPlayer
        VB: TurnsController.localPlayer
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.localPlayer
        VB: Timba.SacredTails.Arena.TurnsController.localPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: localPlayer
        path: ''
        startLine: 12095
      syntax:
        content:
          CSharp: public CombatPlayer localPlayer
          VB: Public localPlayer As CombatPlayer
        return:
          type: Global.CombatPlayer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.vfxsActionType
      commentId: F:Timba.SacredTails.Arena.TurnsController.vfxsActionType
      language: CSharp
      name:
        CSharp: vfxsActionType
        VB: vfxsActionType
      nameWithType:
        CSharp: TurnsController.vfxsActionType
        VB: TurnsController.vfxsActionType
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.vfxsActionType
        VB: Timba.SacredTails.Arena.TurnsController.vfxsActionType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxsActionType
        path: ''
        startLine: 12096
      syntax:
        content:
          CSharp: public List<VFXTypeData> vfxsActionType
          VB: Public vfxsActionType As List(Of VFXTypeData)
        return:
          type: System.Collections.Generic.List{VFXTypeData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.isViewingMatch
      commentId: F:Timba.SacredTails.Arena.TurnsController.isViewingMatch
      language: CSharp
      name:
        CSharp: isViewingMatch
        VB: isViewingMatch
      nameWithType:
        CSharp: TurnsController.isViewingMatch
        VB: TurnsController.isViewingMatch
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.isViewingMatch
        VB: Timba.SacredTails.Arena.TurnsController.isViewingMatch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isViewingMatch
        path: ''
        startLine: 12097
      syntax:
        content:
          CSharp: public bool isViewingMatch
          VB: Public isViewingMatch As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.matchEnded
      commentId: F:Timba.SacredTails.Arena.TurnsController.matchEnded
      language: CSharp
      name:
        CSharp: matchEnded
        VB: matchEnded
      nameWithType:
        CSharp: TurnsController.matchEnded
        VB: TurnsController.matchEnded
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.matchEnded
        VB: Timba.SacredTails.Arena.TurnsController.matchEnded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: matchEnded
        path: ''
        startLine: 12111
      syntax:
        content:
          CSharp: public bool matchEnded
          VB: Public matchEnded As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
      commentId: F:Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
      language: CSharp
      name:
        CSharp: battlePlayerCurrentActions
        VB: battlePlayerCurrentActions
      nameWithType:
        CSharp: TurnsController.battlePlayerCurrentActions
        VB: TurnsController.battlePlayerCurrentActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
        VB: Timba.SacredTails.Arena.TurnsController.battlePlayerCurrentActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battlePlayerCurrentActions
        path: ''
        startLine: 12113
      syntax:
        content:
          CSharp: public List<BattleActionData> battlePlayerCurrentActions
          VB: Public battlePlayerCurrentActions As List(Of BattleActionData)
        return:
          type: System.Collections.Generic.List{BattleActionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
      commentId: F:Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
      language: CSharp
      name:
        CSharp: battleEnemyCurrentActions
        VB: battleEnemyCurrentActions
      nameWithType:
        CSharp: TurnsController.battleEnemyCurrentActions
        VB: TurnsController.battleEnemyCurrentActions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
        VB: Timba.SacredTails.Arena.TurnsController.battleEnemyCurrentActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: battleEnemyCurrentActions
        path: ''
        startLine: 12114
      syntax:
        content:
          CSharp: public List<BattleActionData> battleEnemyCurrentActions
          VB: Public battleEnemyCurrentActions As List(Of BattleActionData)
        return:
          type: System.Collections.Generic.List{BattleActionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.uiCards
      commentId: F:Timba.SacredTails.Arena.TurnsController.uiCards
      language: CSharp
      name:
        CSharp: uiCards
        VB: uiCards
      nameWithType:
        CSharp: TurnsController.uiCards
        VB: TurnsController.uiCards
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.uiCards
        VB: Timba.SacredTails.Arena.TurnsController.uiCards
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: uiCards
        path: ''
        startLine: 12122
      syntax:
        content:
          CSharp: public List<CardUI> uiCards
          VB: Public uiCards As List(Of CardUI)
        return:
          type: System.Collections.Generic.List{CardUI}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.camManager
      commentId: F:Timba.SacredTails.Arena.TurnsController.camManager
      language: CSharp
      name:
        CSharp: camManager
        VB: camManager
      nameWithType:
        CSharp: TurnsController.camManager
        VB: TurnsController.camManager
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.camManager
        VB: Timba.SacredTails.Arena.TurnsController.camManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: camManager
        path: ''
        startLine: 12128
      syntax:
        content:
          CSharp: public CameraPlaneController camManager
          VB: Public camManager As CameraPlaneController
        return:
          type: Global.CameraPlaneController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.vfxPositions
      commentId: F:Timba.SacredTails.Arena.TurnsController.vfxPositions
      language: CSharp
      name:
        CSharp: vfxPositions
        VB: vfxPositions
      nameWithType:
        CSharp: TurnsController.vfxPositions
        VB: TurnsController.vfxPositions
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.vfxPositions
        VB: Timba.SacredTails.Arena.TurnsController.vfxPositions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxPositions
        path: ''
        startLine: 12135
      syntax:
        content:
          CSharp: public List<VFXPositionData> vfxPositions
          VB: Public vfxPositions As List(Of VFXPositionData)
        return:
          type: System.Collections.Generic.List{VFXPositionData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
      commentId: F:Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
      language: CSharp
      name:
        CSharp: vfxPositionsDictionary
        VB: vfxPositionsDictionary
      nameWithType:
        CSharp: TurnsController.vfxPositionsDictionary
        VB: TurnsController.vfxPositionsDictionary
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
        VB: Timba.SacredTails.Arena.TurnsController.vfxPositionsDictionary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: vfxPositionsDictionary
        path: ''
        startLine: 12136
      syntax:
        content:
          CSharp: public Dictionary<VFXPositionEnum, Transform> vfxPositionsDictionary
          VB: Public vfxPositionsDictionary As Dictionary(Of VFXPositionEnum, Transform)
        return:
          type: System.Collections.Generic.Dictionary{VFXPositionEnum,Transform}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.isPlayerSleep
      commentId: F:Timba.SacredTails.Arena.TurnsController.isPlayerSleep
      language: CSharp
      name:
        CSharp: isPlayerSleep
        VB: isPlayerSleep
      nameWithType:
        CSharp: TurnsController.isPlayerSleep
        VB: TurnsController.isPlayerSleep
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.isPlayerSleep
        VB: Timba.SacredTails.Arena.TurnsController.isPlayerSleep
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isPlayerSleep
        path: ''
        startLine: 12138
      syntax:
        content:
          CSharp: public bool isPlayerSleep
          VB: Public isPlayerSleep As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.isEnemySleep
      commentId: F:Timba.SacredTails.Arena.TurnsController.isEnemySleep
      language: CSharp
      name:
        CSharp: isEnemySleep
        VB: isEnemySleep
      nameWithType:
        CSharp: TurnsController.isEnemySleep
        VB: TurnsController.isEnemySleep
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.isEnemySleep
        VB: Timba.SacredTails.Arena.TurnsController.isEnemySleep
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isEnemySleep
        path: ''
        startLine: 12139
      syntax:
        content:
          CSharp: public bool isEnemySleep
          VB: Public isEnemySleep As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
      commentId: F:Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
      language: CSharp
      name:
        CSharp: testMatchSendTurnAutomatically
        VB: testMatchSendTurnAutomatically
      nameWithType:
        CSharp: TurnsController.testMatchSendTurnAutomatically
        VB: TurnsController.testMatchSendTurnAutomatically
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
        VB: Timba.SacredTails.Arena.TurnsController.testMatchSendTurnAutomatically
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: testMatchSendTurnAutomatically
        path: ''
        startLine: 12144
      syntax:
        content:
          CSharp: public bool testMatchSendTurnAutomatically
          VB: Public testMatchSendTurnAutomatically As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.cardToTest
      commentId: F:Timba.SacredTails.Arena.TurnsController.cardToTest
      language: CSharp
      name:
        CSharp: cardToTest
        VB: cardToTest
      nameWithType:
        CSharp: TurnsController.cardToTest
        VB: TurnsController.cardToTest
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.cardToTest
        VB: Timba.SacredTails.Arena.TurnsController.cardToTest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: cardToTest
        path: ''
        startLine: 12145
      syntax:
        content:
          CSharp: public int cardToTest
          VB: Public cardToTest As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode,System.Boolean)
      language: CSharp
      name:
        CSharp: Init(BattleGameMode, Boolean)
        VB: Init(BattleGameMode, Boolean)
      nameWithType:
        CSharp: TurnsController.Init(BattleGameMode, Boolean)
        VB: TurnsController.Init(BattleGameMode, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode, System.Boolean)
        VB: Timba.SacredTails.Arena.TurnsController.Init(Timba.SacredTails.Arena.BattleGameMode, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Init
        path: ''
        startLine: 12166
      summary: "\nInitialize turns controller\n"
      example: []
      syntax:
        content:
          CSharp: public void Init(BattleGameMode battleGameMode, bool isViewing = false)
          VB: Public Sub Init(battleGameMode As BattleGameMode, isViewing As Boolean = False)
        parameters:
        - id: battleGameMode
          type: Timba.SacredTails.Arena.BattleGameMode
          description: ''
        - id: isViewing
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.InitCountDown
      commentId: M:Timba.SacredTails.Arena.TurnsController.InitCountDown
      language: CSharp
      name:
        CSharp: InitCountDown()
        VB: InitCountDown()
      nameWithType:
        CSharp: TurnsController.InitCountDown()
        VB: TurnsController.InitCountDown()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.InitCountDown()
        VB: Timba.SacredTails.Arena.TurnsController.InitCountDown()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitCountDown
        path: ''
        startLine: 12195
      summary: "\nInit turn countdown\n"
      example: []
      syntax:
        content:
          CSharp: public void InitCountDown()
          VB: Public Sub InitCountDown
      overload: Timba.SacredTails.Arena.TurnsController.InitCountDown*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.InitNewTurn
      commentId: M:Timba.SacredTails.Arena.TurnsController.InitNewTurn
      language: CSharp
      name:
        CSharp: InitNewTurn()
        VB: InitNewTurn()
      nameWithType:
        CSharp: TurnsController.InitNewTurn()
        VB: TurnsController.InitNewTurn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.InitNewTurn()
        VB: Timba.SacredTails.Arena.TurnsController.InitNewTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitNewTurn
        path: ''
        startLine: 12212
      summary: "\nCamera change on turn change.\n"
      example: []
      syntax:
        content:
          CSharp: public void InitNewTurn()
          VB: Public Sub InitNewTurn
      overload: Timba.SacredTails.Arena.TurnsController.InitNewTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
      commentId: M:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
      language: CSharp
      name:
        CSharp: CurrentActionsHasSkipTurnForLocalPlayer()
        VB: CurrentActionsHasSkipTurnForLocalPlayer()
      nameWithType:
        CSharp: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
        VB: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
        VB: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CurrentActionsHasSkipTurnForLocalPlayer
        path: ''
        startLine: 12275
      syntax:
        content:
          CSharp: public bool CurrentActionsHasSkipTurnForLocalPlayer()
          VB: Public Function CurrentActionsHasSkipTurnForLocalPlayer As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
      commentId: M:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
      language: CSharp
      name:
        CSharp: CurrentActionsHasSkipTurnForEnemy()
        VB: CurrentActionsHasSkipTurnForEnemy()
      nameWithType:
        CSharp: TurnsController.CurrentActionsHasSkipTurnForEnemy()
        VB: TurnsController.CurrentActionsHasSkipTurnForEnemy()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy()
        VB: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CurrentActionsHasSkipTurnForEnemy
        path: ''
        startLine: 12286
      syntax:
        content:
          CSharp: public bool CurrentActionsHasSkipTurnForEnemy()
          VB: Public Function CurrentActionsHasSkipTurnForEnemy As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ShowPopupStrike(System.Int32)
      language: CSharp
      name:
        CSharp: ShowPopupStrike(Int32)
        VB: ShowPopupStrike(Int32)
      nameWithType:
        CSharp: TurnsController.ShowPopupStrike(Int32)
        VB: TurnsController.ShowPopupStrike(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowPopupStrike
        path: ''
        startLine: 12338
      syntax:
        content:
          CSharp: public void ShowPopupStrike(int strikeCount)
          VB: Public Sub ShowPopupStrike(strikeCount As Integer)
        parameters:
        - id: strikeCount
          type: System.Int32
      overload: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
      language: CSharp
      name:
        CSharp: BtnSendTurn(Int32)
        VB: BtnSendTurn(Int32)
      nameWithType:
        CSharp: TurnsController.BtnSendTurn(Int32)
        VB: TurnsController.BtnSendTurn(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.BtnSendTurn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: BtnSendTurn
        path: ''
        startLine: 12371
      syntax:
        content:
          CSharp: public void BtnSendTurn(int indexCard)
          VB: Public Sub BtnSendTurn(indexCard As Integer)
        parameters:
        - id: indexCard
          type: System.Int32
      overload: Timba.SacredTails.Arena.TurnsController.BtnSendTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
      language: CSharp
      name:
        CSharp: SendMyTurn(Int32)
        VB: SendMyTurn(Int32)
      nameWithType:
        CSharp: TurnsController.SendMyTurn(Int32)
        VB: TurnsController.SendMyTurn(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.SendMyTurn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SendMyTurn
        path: ''
        startLine: 12381
      summary: "\nPrepare my turn with the card selected, execute it in local and send it to the other player\n"
      example: []
      syntax:
        content:
          CSharp: public void SendMyTurn(int indexCard)
          VB: Public Sub SendMyTurn(indexCard As Integer)
        parameters:
        - id: indexCard
          type: System.Int32
          description: Index of card
      overload: Timba.SacredTails.Arena.TurnsController.SendMyTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.TestSendTurn
      commentId: M:Timba.SacredTails.Arena.TurnsController.TestSendTurn
      language: CSharp
      name:
        CSharp: TestSendTurn()
        VB: TestSendTurn()
      nameWithType:
        CSharp: TurnsController.TestSendTurn()
        VB: TurnsController.TestSendTurn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.TestSendTurn()
        VB: Timba.SacredTails.Arena.TurnsController.TestSendTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: TestSendTurn
        path: ''
        startLine: 12410
      syntax:
        content:
          CSharp: public void TestSendTurn()
          VB: Public Sub TestSendTurn
      overload: Timba.SacredTails.Arena.TurnsController.TestSendTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SendTurnRequest(Int32, Int32)
        VB: SendTurnRequest(Int32, Int32)
      nameWithType:
        CSharp: TurnsController.SendTurnRequest(Int32, Int32)
        VB: TurnsController.SendTurnRequest(Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.SendTurnRequest(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SendTurnRequest
        path: ''
        startLine: 12428
      syntax:
        content:
          CSharp: public void SendTurnRequest(int indexCard, int timesTryingToSendTurn = 0)
          VB: Public Sub SendTurnRequest(indexCard As Integer, timesTryingToSendTurn As Integer = 0)
        parameters:
        - id: indexCard
          type: System.Int32
        - id: timesTryingToSendTurn
          type: System.Int32
      overload: Timba.SacredTails.Arena.TurnsController.SendTurnRequest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(ActionCard)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(ActionCard)
      language: CSharp
      name:
        CSharp: ForbiddenActionCheck(ActionCard)
        VB: ForbiddenActionCheck(ActionCard)
      nameWithType:
        CSharp: TurnsController.ForbiddenActionCheck(ActionCard)
        VB: TurnsController.ForbiddenActionCheck(ActionCard)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(ActionCard)
        VB: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck(ActionCard)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ForbiddenActionCheck
        path: ''
        startLine: 12471
      syntax:
        content:
          CSharp: public bool ForbiddenActionCheck(ActionCard actionCard)
          VB: Public Function ForbiddenActionCheck(actionCard As ActionCard) As Boolean
        parameters:
        - id: actionCard
          type: Global.ActionCard
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(ActionCard)
      commentId: M:Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(ActionCard)
      language: CSharp
      name:
        CSharp: SetForbiddenActions(ActionCard)
        VB: SetForbiddenActions(ActionCard)
      nameWithType:
        CSharp: TurnsController.SetForbiddenActions(ActionCard)
        VB: TurnsController.SetForbiddenActions(ActionCard)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(ActionCard)
        VB: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions(ActionCard)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetForbiddenActions
        path: ''
        startLine: 12480
      syntax:
        content:
          CSharp: public void SetForbiddenActions(ActionCard actionCard)
          VB: Public Sub SetForbiddenActions(actionCard As ActionCard)
        parameters:
        - id: actionCard
          type: Global.ActionCard
      overload: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
      commentId: M:Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
      language: CSharp
      name:
        CSharp: ReduceForbiddenActionsDuration()
        VB: ReduceForbiddenActionsDuration()
      nameWithType:
        CSharp: TurnsController.ReduceForbiddenActionsDuration()
        VB: TurnsController.ReduceForbiddenActionsDuration()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration()
        VB: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ReduceForbiddenActionsDuration
        path: ''
        startLine: 12493
      syntax:
        content:
          CSharp: public void ReduceForbiddenActionsDuration()
          VB: Public Sub ReduceForbiddenActionsDuration
      overload: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(System.Collections.Generic.List{BattleActionData}@,System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(System.Collections.Generic.List{BattleActionData}@,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: CalculateIncomingActions(ref List<BattleActionData>, Int32, Int32)
        VB: CalculateIncomingActions(ByRef List(Of BattleActionData), Int32, Int32)
      nameWithType:
        CSharp: TurnsController.CalculateIncomingActions(ref List<BattleActionData>, Int32, Int32)
        VB: TurnsController.CalculateIncomingActions(ByRef List(Of BattleActionData), Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(ref System.Collections.Generic.List<BattleActionData>, System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions(ByRef System.Collections.Generic.List(Of BattleActionData), System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CalculateIncomingActions
        path: ''
        startLine: 12510
      summary: "\nExecute the action of the target player on this turn\n"
      example: []
      syntax:
        content:
          CSharp: public void CalculateIncomingActions(ref List<BattleActionData> currentActionsData, int playerIndex, int ppCost)
          VB: Public Sub CalculateIncomingActions(ByRef currentActionsData As List(Of BattleActionData), playerIndex As Integer, ppCost As Integer)
        parameters:
        - id: currentActionsData
          type: System.Collections.Generic.List{BattleActionData}
          description: Actions executed this turn
        - id: playerIndex
          type: System.Int32
          description: Index of user
        - id: ppCost
          type: System.Int32
          description: ppCost of card
      overload: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean,Timba.SacredTails.Arena.UserInfo)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean,Timba.SacredTails.Arena.UserInfo)
      language: CSharp
      name:
        CSharp: CheckEndMatch(Boolean, UserInfo)
        VB: CheckEndMatch(Boolean, UserInfo)
      nameWithType:
        CSharp: TurnsController.CheckEndMatch(Boolean, UserInfo)
        VB: TurnsController.CheckEndMatch(Boolean, UserInfo)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean, Timba.SacredTails.Arena.UserInfo)
        VB: Timba.SacredTails.Arena.TurnsController.CheckEndMatch(System.Boolean, Timba.SacredTails.Arena.UserInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckEndMatch
        path: ''
        startLine: 12624
      syntax:
        content:
          CSharp: public void CheckEndMatch(bool isLocalPlayer, UserInfo otherPlayer)
          VB: Public Sub CheckEndMatch(isLocalPlayer As Boolean, otherPlayer As UserInfo)
        parameters:
        - id: isLocalPlayer
          type: System.Boolean
        - id: otherPlayer
          type: Timba.SacredTails.Arena.UserInfo
      overload: Timba.SacredTails.Arena.TurnsController.CheckEndMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32,System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: CheckDeadTime(Int32, Int32)
        VB: CheckDeadTime(Int32, Int32)
      nameWithType:
        CSharp: TurnsController.CheckDeadTime(Int32, Int32)
        VB: TurnsController.CheckDeadTime(Int32, Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32, System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.CheckDeadTime(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckDeadTime
        path: ''
        startLine: 12636
      syntax:
        content:
          CSharp: public int CheckDeadTime(int healthOwner, int healthOther)
          VB: Public Function CheckDeadTime(healthOwner As Integer, healthOther As Integer) As Integer
        parameters:
        - id: healthOwner
          type: System.Int32
        - id: healthOther
          type: System.Int32
        return:
          type: System.Int32
      overload: Timba.SacredTails.Arena.TurnsController.CheckDeadTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.deathTime
      commentId: F:Timba.SacredTails.Arena.TurnsController.deathTime
      language: CSharp
      name:
        CSharp: deathTime
        VB: deathTime
      nameWithType:
        CSharp: TurnsController.deathTime
        VB: TurnsController.deathTime
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.deathTime
        VB: Timba.SacredTails.Arena.TurnsController.deathTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: deathTime
        path: ''
        startLine: 12692
      syntax:
        content:
          CSharp: public int deathTime
          VB: Public deathTime As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
      commentId: F:Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
      language: CSharp
      name:
        CSharp: calculateEndMatchAgain
        VB: calculateEndMatchAgain
      nameWithType:
        CSharp: TurnsController.calculateEndMatchAgain
        VB: TurnsController.calculateEndMatchAgain
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
        VB: Timba.SacredTails.Arena.TurnsController.calculateEndMatchAgain
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: calculateEndMatchAgain
        path: ''
        startLine: 12708
      summary: "\nBring data and actions from the enemy and execute them.\n"
      example: []
      syntax:
        content:
          CSharp: public bool calculateEndMatchAgain
          VB: Public calculateEndMatchAgain As Boolean
        return:
          type: System.Boolean
          description: ''
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
      commentId: M:Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
      language: CSharp
      name:
        CSharp: WaitOponentTurn()
        VB: WaitOponentTurn()
      nameWithType:
        CSharp: TurnsController.WaitOponentTurn()
        VB: TurnsController.WaitOponentTurn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn()
        VB: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitOponentTurn
        path: ''
        startLine: 12709
      syntax:
        content:
          CSharp: public IEnumerator WaitOponentTurn()
          VB: Public Function WaitOponentTurn As IEnumerator
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch(System.Boolean,System.String)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch(System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: ShowForcedEndMatch(Boolean, String)
        VB: ShowForcedEndMatch(Boolean, String)
      nameWithType:
        CSharp: TurnsController.ShowForcedEndMatch(Boolean, String)
        VB: TurnsController.ShowForcedEndMatch(Boolean, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch(System.Boolean, System.String)
        VB: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch(System.Boolean, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ShowForcedEndMatch
        path: ''
        startLine: 12814
      syntax:
        content:
          CSharp: public void ShowForcedEndMatch(bool localPlayerWinMatch, string message = null)
          VB: Public Sub ShowForcedEndMatch(localPlayerWinMatch As Boolean, message As String = Nothing)
        parameters:
        - id: localPlayerWinMatch
          type: System.Boolean
        - id: message
          type: System.String
      overload: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates(System.Boolean,ActionCardDto)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckAlteredStates(System.Boolean,ActionCardDto)
      language: CSharp
      name:
        CSharp: CheckAlteredStates(Boolean, ActionCardDto)
        VB: CheckAlteredStates(Boolean, ActionCardDto)
      nameWithType:
        CSharp: TurnsController.CheckAlteredStates(Boolean, ActionCardDto)
        VB: TurnsController.CheckAlteredStates(Boolean, ActionCardDto)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates(System.Boolean, ActionCardDto)
        VB: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates(System.Boolean, ActionCardDto)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckAlteredStates
        path: ''
        startLine: 12827
      syntax:
        content:
          CSharp: public bool CheckAlteredStates(bool isPlayer, ActionCardDto playerTurn)
          VB: Public Function CheckAlteredStates(isPlayer As Boolean, playerTurn As ActionCardDto) As Boolean
        parameters:
        - id: isPlayer
          type: System.Boolean
        - id: playerTurn
          type: Global.ActionCardDto
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      language: CSharp
      name:
        CSharp: CheckIfAnyoneSurrendered(List<ActionCardDto>, Boolean)
        VB: CheckIfAnyoneSurrendered(List(Of ActionCardDto), Boolean)
      nameWithType:
        CSharp: TurnsController.CheckIfAnyoneSurrendered(List<ActionCardDto>, Boolean)
        VB: TurnsController.CheckIfAnyoneSurrendered(List(Of ActionCardDto), Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List<ActionCardDto>, System.Boolean)
        VB: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered(System.Collections.Generic.List(Of ActionCardDto), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckIfAnyoneSurrendered
        path: ''
        startLine: 12885
      summary: "\nCheck if the enemy has surrender, if it has then end match.\n"
      example: []
      syntax:
        content:
          CSharp: public bool CheckIfAnyoneSurrendered(List<ActionCardDto> playersTurnIndexCard, bool isLocalFirst)
          VB: Public Function CheckIfAnyoneSurrendered(playersTurnIndexCard As List(Of ActionCardDto), isLocalFirst As Boolean) As Boolean
        parameters:
        - id: playersTurnIndexCard
          type: System.Collections.Generic.List{ActionCardDto}
        - id: isLocalFirst
          type: System.Boolean
        return:
          type: System.Boolean
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean,Action,Action,Action)
      commentId: M:Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean,Action,Action,Action)
      language: CSharp
      name:
        CSharp: InitTurnFlow(Boolean, Action, Action, Action)
        VB: InitTurnFlow(Boolean, Action, Action, Action)
      nameWithType:
        CSharp: TurnsController.InitTurnFlow(Boolean, Action, Action, Action)
        VB: TurnsController.InitTurnFlow(Boolean, Action, Action, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean, Action, Action, Action)
        VB: Timba.SacredTails.Arena.TurnsController.InitTurnFlow(System.Boolean, Action, Action, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: InitTurnFlow
        path: ''
        startLine: 12934
      summary: "\nCheck if otherPlayer shinsei dies. If so, then doesn&apos;t execute his action.\n"
      example: []
      syntax:
        content:
          CSharp: public void InitTurnFlow(bool ownerOfActionIsLocal, Action userAction, Action enemyAction, Action callback)
          VB: Public Sub InitTurnFlow(ownerOfActionIsLocal As Boolean, userAction As Action, enemyAction As Action, callback As Action)
        parameters:
        - id: ownerOfActionIsLocal
          type: System.Boolean
        - id: userAction
          type: Global.Action
        - id: enemyAction
          type: Global.Action
        - id: callback
          type: Global.Action
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.InitTurnFlow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single,Action)
      commentId: M:Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single,Action)
      language: CSharp
      name:
        CSharp: WaitForSeconds(Single, Action)
        VB: WaitForSeconds(Single, Action)
      nameWithType:
        CSharp: TurnsController.WaitForSeconds(Single, Action)
        VB: TurnsController.WaitForSeconds(Single, Action)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single, Action)
        VB: Timba.SacredTails.Arena.TurnsController.WaitForSeconds(System.Single, Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: WaitForSeconds
        path: ''
        startLine: 12990
      syntax:
        content:
          CSharp: public IEnumerator WaitForSeconds(float time, Action callback)
          VB: Public Function WaitForSeconds(time As Single, callback As Action) As IEnumerator
        parameters:
        - id: time
          type: System.Single
        - id: callback
          type: Global.Action
        return:
          type: System.Collections.IEnumerator
      overload: Timba.SacredTails.Arena.TurnsController.WaitForSeconds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto,ActionCardDto)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto,ActionCardDto)
      language: CSharp
      name:
        CSharp: CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
        VB: CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
      nameWithType:
        CSharp: TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
        VB: TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
        VB: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn(ActionCardDto, ActionCardDto)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CheckEnergyBarsAndInitNextTurn
        path: ''
        startLine: 12999
      summary: "\nAfter executing actions update energyBars and init next turn.\n"
      example: []
      syntax:
        content:
          CSharp: public void CheckEnergyBarsAndInitNextTurn(ActionCardDto playerTurn, ActionCardDto enemyTurn)
          VB: Public Sub CheckEnergyBarsAndInitNextTurn(playerTurn As ActionCardDto, enemyTurn As ActionCardDto)
        parameters:
        - id: playerTurn
          type: Global.ActionCardDto
        - id: enemyTurn
          type: Global.ActionCardDto
      overload: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei,Timba.SacredTails.Arena.ResourceBarValues,System.Collections.Generic.List{BattleActionData},System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei,Timba.SacredTails.Arena.ResourceBarValues,System.Collections.Generic.List{BattleActionData},System.Int32)
      language: CSharp
      name:
        CSharp: CalculateEnergyRegen(Shinsei, ResourceBarValues, List<BattleActionData>, Int32)
        VB: CalculateEnergyRegen(Shinsei, ResourceBarValues, List(Of BattleActionData), Int32)
      nameWithType:
        CSharp: TurnsController.CalculateEnergyRegen(Shinsei, ResourceBarValues, List<BattleActionData>, Int32)
        VB: TurnsController.CalculateEnergyRegen(Shinsei, ResourceBarValues, List(Of BattleActionData), Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei, Timba.SacredTails.Arena.ResourceBarValues, System.Collections.Generic.List<BattleActionData>, System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen(Shinsei, Timba.SacredTails.Arena.ResourceBarValues, System.Collections.Generic.List(Of BattleActionData), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: CalculateEnergyRegen
        path: ''
        startLine: 13034
      summary: "\nCalculates the amount of energy that a shinsei restores after the turn passes\n"
      example: []
      syntax:
        content:
          CSharp: public void CalculateEnergyRegen(Shinsei playerShinsei, ResourceBarValues energyBar, List<BattleActionData> playersActions, int playerIndex)
          VB: Public Sub CalculateEnergyRegen(playerShinsei As Shinsei, energyBar As ResourceBarValues, playersActions As List(Of BattleActionData), playerIndex As Integer)
        parameters:
        - id: playerShinsei
          type: Global.Shinsei
          description: ''
        - id: energyBar
          type: Timba.SacredTails.Arena.ResourceBarValues
          description: ''
        - id: playersActions
          type: System.Collections.Generic.List{BattleActionData}
          description: ''
        - id: playerIndex
          type: System.Int32
          description: ''
      overload: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      commentId: M:Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List{ActionCardDto},System.Boolean)
      language: CSharp
      name:
        CSharp: ExecuteServerAction(List<ActionCardDto>, Boolean)
        VB: ExecuteServerAction(List(Of ActionCardDto), Boolean)
      nameWithType:
        CSharp: TurnsController.ExecuteServerAction(List<ActionCardDto>, Boolean)
        VB: TurnsController.ExecuteServerAction(List(Of ActionCardDto), Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List<ActionCardDto>, System.Boolean)
        VB: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction(System.Collections.Generic.List(Of ActionCardDto), System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ExecuteServerAction
        path: ''
        startLine: 13055
      summary: "\nExecute enemy actions that we bringed earlier from the cloud.\n"
      example: []
      syntax:
        content:
          CSharp: public Action ExecuteServerAction(List<ActionCardDto> turns, bool isEnemy = false)
          VB: Public Function ExecuteServerAction(turns As List(Of ActionCardDto), isEnemy As Boolean = False) As Action
        parameters:
        - id: turns
          type: System.Collections.Generic.List{ActionCardDto}
        - id: isEnemy
          type: System.Boolean
        return:
          type: Global.Action
      overload: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
      commentId: M:Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
      language: CSharp
      name:
        CSharp: GetTrueIndexCard(Int32)
        VB: GetTrueIndexCard(Int32)
      nameWithType:
        CSharp: TurnsController.GetTrueIndexCard(Int32)
        VB: TurnsController.GetTrueIndexCard(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
        VB: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetTrueIndexCard
        path: ''
        startLine: 13106
      syntax:
        content:
          CSharp: public int GetTrueIndexCard(int indexCard)
          VB: Public Function GetTrueIndexCard(indexCard As Integer) As Integer
        parameters:
        - id: indexCard
          type: System.Int32
        return:
          type: System.Int32
      overload: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ShinseiSlot
    commentId: T:Timba.SacredTails.Arena.ShinseiSlot
    language: CSharp
    name:
      CSharp: ShinseiSlot
      VB: ShinseiSlot
    nameWithType:
      CSharp: ShinseiSlot
      VB: ShinseiSlot
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiSlot
      VB: Timba.SacredTails.Arena.ShinseiSlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: ShinseiSlot
      path: ''
      startLine: 18757
    syntax:
      content:
        CSharp: 'public class ShinseiSlot : MonoBehaviour'
        VB: >-
          Public Class ShinseiSlot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      commentId: P:Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      language: CSharp
      name:
        CSharp: IsCompanion
        VB: IsCompanion
      nameWithType:
        CSharp: ShinseiSlot.IsCompanion
        VB: ShinseiSlot.IsCompanion
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
        VB: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: IsCompanion
        path: ''
        startLine: 18760
      syntax:
        content:
          CSharp: public bool IsCompanion { get; set; }
          VB: Public Property IsCompanion As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
      language: CSharp
      name:
        CSharp: shinseiKey
        VB: shinseiKey
      nameWithType:
        CSharp: ShinseiSlot.shinseiKey
        VB: ShinseiSlot.shinseiKey
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinseiKey
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiKey
        path: ''
        startLine: 18761
      syntax:
        content:
          CSharp: public string shinseiKey
          VB: Public shinseiKey As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinseiName
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinseiName
      language: CSharp
      name:
        CSharp: shinseiName
        VB: shinseiName
      nameWithType:
        CSharp: ShinseiSlot.shinseiName
        VB: ShinseiSlot.shinseiName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinseiName
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinseiName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiName
        path: ''
        startLine: 18762
      syntax:
        content:
          CSharp: public string shinseiName
          VB: Public shinseiName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.listIndex
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.listIndex
      language: CSharp
      name:
        CSharp: listIndex
        VB: listIndex
      nameWithType:
        CSharp: ShinseiSlot.listIndex
        VB: ShinseiSlot.listIndex
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.listIndex
        VB: Timba.SacredTails.Arena.ShinseiSlot.listIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: listIndex
        path: ''
        startLine: 18763
      syntax:
        content:
          CSharp: public int listIndex
          VB: Public listIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinsei
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinsei
      language: CSharp
      name:
        CSharp: shinsei
        VB: shinsei
      nameWithType:
        CSharp: ShinseiSlot.shinsei
        VB: ShinseiSlot.shinsei
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinsei
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinsei
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinsei
        path: ''
        startLine: 18764
      syntax:
        content:
          CSharp: public Shinsei shinsei
          VB: Public shinsei As Shinsei
        return:
          type: Global.Shinsei
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.shinseiView
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.shinseiView
      language: CSharp
      name:
        CSharp: shinseiView
        VB: shinseiView
      nameWithType:
        CSharp: ShinseiSlot.shinseiView
        VB: ShinseiSlot.shinseiView
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.shinseiView
        VB: Timba.SacredTails.Arena.ShinseiSlot.shinseiView
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: shinseiView
        path: ''
        startLine: 18765
      syntax:
        content:
          CSharp: public Image shinseiView
          VB: Public shinseiView As Image
        return:
          type: Global.Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._infoBtn
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._infoBtn
      language: CSharp
      name:
        CSharp: _infoBtn
        VB: _infoBtn
      nameWithType:
        CSharp: ShinseiSlot._infoBtn
        VB: ShinseiSlot._infoBtn
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._infoBtn
        VB: Timba.SacredTails.Arena.ShinseiSlot._infoBtn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _infoBtn
        path: ''
        startLine: 18768
      syntax:
        content:
          CSharp: public Button _infoBtn
          VB: Public _infoBtn As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._shinseiName
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._shinseiName
      language: CSharp
      name:
        CSharp: _shinseiName
        VB: _shinseiName
      nameWithType:
        CSharp: ShinseiSlot._shinseiName
        VB: ShinseiSlot._shinseiName
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._shinseiName
        VB: Timba.SacredTails.Arena.ShinseiSlot._shinseiName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _shinseiName
        path: ''
        startLine: 18769
      syntax:
        content:
          CSharp: public TMP_Text _shinseiName
          VB: Public _shinseiName As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._health
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._health
      language: CSharp
      name:
        CSharp: _health
        VB: _health
      nameWithType:
        CSharp: ShinseiSlot._health
        VB: ShinseiSlot._health
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._health
        VB: Timba.SacredTails.Arena.ShinseiSlot._health
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _health
        path: ''
        startLine: 18770
      syntax:
        content:
          CSharp: public TMP_Text _health
          VB: Public _health As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._energy
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._energy
      language: CSharp
      name:
        CSharp: _energy
        VB: _energy
      nameWithType:
        CSharp: ShinseiSlot._energy
        VB: ShinseiSlot._energy
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._energy
        VB: Timba.SacredTails.Arena.ShinseiSlot._energy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _energy
        path: ''
        startLine: 18771
      syntax:
        content:
          CSharp: public TMP_Text _energy
          VB: Public _energy As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._helathBar
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._helathBar
      language: CSharp
      name:
        CSharp: _helathBar
        VB: _helathBar
      nameWithType:
        CSharp: ShinseiSlot._helathBar
        VB: ShinseiSlot._helathBar
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._helathBar
        VB: Timba.SacredTails.Arena.ShinseiSlot._helathBar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _helathBar
        path: ''
        startLine: 18772
      syntax:
        content:
          CSharp: public Slider _helathBar
          VB: Public _helathBar As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._energyBar
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._energyBar
      language: CSharp
      name:
        CSharp: _energyBar
        VB: _energyBar
      nameWithType:
        CSharp: ShinseiSlot._energyBar
        VB: ShinseiSlot._energyBar
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._energyBar
        VB: Timba.SacredTails.Arena.ShinseiSlot._energyBar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _energyBar
        path: ''
        startLine: 18773
      syntax:
        content:
          CSharp: public Slider _energyBar
          VB: Public _energyBar As Slider
        return:
          type: Global.Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._higlightColor
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._higlightColor
      language: CSharp
      name:
        CSharp: _higlightColor
        VB: _higlightColor
      nameWithType:
        CSharp: ShinseiSlot._higlightColor
        VB: ShinseiSlot._higlightColor
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._higlightColor
        VB: Timba.SacredTails.Arena.ShinseiSlot._higlightColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _higlightColor
        path: ''
        startLine: 18774
      syntax:
        content:
          CSharp: public Color _higlightColor
          VB: Public _higlightColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
      language: CSharp
      name:
        CSharp: _shinseiTypesImg
        VB: _shinseiTypesImg
      nameWithType:
        CSharp: ShinseiSlot._shinseiTypesImg
        VB: ShinseiSlot._shinseiTypesImg
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
        VB: Timba.SacredTails.Arena.ShinseiSlot._shinseiTypesImg
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: _shinseiTypesImg
        path: ''
        startLine: 18775
      syntax:
        content:
          CSharp: public List<Image> _shinseiTypesImg
          VB: Public _shinseiTypesImg As List(Of Image)
        return:
          type: System.Collections.Generic.List{Image}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
      language: CSharp
      name:
        CSharp: isPreviewOnly
        VB: isPreviewOnly
      nameWithType:
        CSharp: ShinseiSlot.isPreviewOnly
        VB: ShinseiSlot.isPreviewOnly
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
        VB: Timba.SacredTails.Arena.ShinseiSlot.isPreviewOnly
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isPreviewOnly
        path: ''
        startLine: 18778
      syntax:
        content:
          CSharp: public bool isPreviewOnly
          VB: Public isPreviewOnly As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.isLocked
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.isLocked
      language: CSharp
      name:
        CSharp: isLocked
        VB: isLocked
      nameWithType:
        CSharp: ShinseiSlot.isLocked
        VB: ShinseiSlot.isLocked
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.isLocked
        VB: Timba.SacredTails.Arena.ShinseiSlot.isLocked
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: isLocked
        path: ''
        startLine: 18779
      syntax:
        content:
          CSharp: public bool isLocked
          VB: Public isLocked As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
      language: CSharp
      name:
        CSharp: deactivateSlotOnClick
        VB: deactivateSlotOnClick
      nameWithType:
        CSharp: ShinseiSlot.deactivateSlotOnClick
        VB: ShinseiSlot.deactivateSlotOnClick
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
        VB: Timba.SacredTails.Arena.ShinseiSlot.deactivateSlotOnClick
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: deactivateSlotOnClick
        path: ''
        startLine: 18780
      syntax:
        content:
          CSharp: public bool deactivateSlotOnClick
          VB: Public deactivateSlotOnClick As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.previewBtn
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.previewBtn
      language: CSharp
      name:
        CSharp: previewBtn
        VB: previewBtn
      nameWithType:
        CSharp: ShinseiSlot.previewBtn
        VB: ShinseiSlot.previewBtn
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.previewBtn
        VB: Timba.SacredTails.Arena.ShinseiSlot.previewBtn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: previewBtn
        path: ''
        startLine: 18783
      syntax:
        content:
          CSharp: public Button previewBtn
          VB: Public previewBtn As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.Counter
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.Counter
      language: CSharp
      name:
        CSharp: Counter
        VB: Counter
      nameWithType:
        CSharp: ShinseiSlot.Counter
        VB: ShinseiSlot.Counter
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.Counter
        VB: Timba.SacredTails.Arena.ShinseiSlot.Counter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: Counter
        path: ''
        startLine: 18785
      syntax:
        content:
          CSharp: public TextMeshProUGUI Counter
          VB: Public Counter As TextMeshProUGUI
        return:
          type: Global.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
      commentId: F:Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
      language: CSharp
      name:
        CSharp: OnSlotClicked
        VB: OnSlotClicked
      nameWithType:
        CSharp: ShinseiSlot.OnSlotClicked
        VB: ShinseiSlot.OnSlotClicked
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
        VB: Timba.SacredTails.Arena.ShinseiSlot.OnSlotClicked
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnSlotClicked
        path: ''
        startLine: 18788
      syntax:
        content:
          CSharp: public UnityEvent<int, ShinseiSlot> OnSlotClicked
          VB: Public OnSlotClicked As UnityEvent(Of Integer, ShinseiSlot)
        return:
          type: Global.UnityEvent{System.Int32,Timba.SacredTails.Arena.ShinseiSlot}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerClick(PointerEventData)
        VB: OnPointerClick(PointerEventData)
      nameWithType:
        CSharp: ShinseiSlot.OnPointerClick(PointerEventData)
        VB: ShinseiSlot.OnPointerClick(PointerEventData)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
        VB: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: OnPointerClick
        path: ''
        startLine: 18792
      syntax:
        content:
          CSharp: public void OnPointerClick(PointerEventData eventData)
          VB: Public Sub OnPointerClick(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: Global.PointerEventData
      overload: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String,System.String,Sprite)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String,System.String,Sprite)
      language: CSharp
      name:
        CSharp: UpdateVisual(String, String, Sprite)
        VB: UpdateVisual(String, String, Sprite)
      nameWithType:
        CSharp: ShinseiSlot.UpdateVisual(String, String, Sprite)
        VB: ShinseiSlot.UpdateVisual(String, String, Sprite)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String, System.String, Sprite)
        VB: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual(System.String, System.String, Sprite)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: UpdateVisual
        path: ''
        startLine: 18799
      syntax:
        content:
          CSharp: public void UpdateVisual(string shinseiName = null, string shinseiDNA = null, Sprite shinseiIcon = null)
          VB: Public Sub UpdateVisual(shinseiName As String = Nothing, shinseiDNA As String = Nothing, shinseiIcon As Sprite = Nothing)
        parameters:
        - id: shinseiName
          type: System.String
        - id: shinseiDNA
          type: System.String
        - id: shinseiIcon
          type: Global.Sprite
      overload: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String,System.Int32,Shinsei,System.String,Timba.SacredTails.Arena.ShinseiSlot)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String,System.Int32,Shinsei,System.String,Timba.SacredTails.Arena.ShinseiSlot)
      language: CSharp
      name:
        CSharp: ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
        VB: ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
      nameWithType:
        CSharp: ShinseiSlot.ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
        VB: ShinseiSlot.ChangeShinseiSlotValues(String, Int32, Shinsei, String, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String, System.Int32, Shinsei, System.String, Timba.SacredTails.Arena.ShinseiSlot)
        VB: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues(System.String, System.Int32, Shinsei, System.String, Timba.SacredTails.Arena.ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeShinseiSlotValues
        path: ''
        startLine: 18812
      syntax:
        content:
          CSharp: public void ChangeShinseiSlotValues(string shinseiKey = null, int listIndex = -1, Shinsei shinsei = null, string name = null, ShinseiSlot newSlot = null)
          VB: Public Sub ChangeShinseiSlotValues(shinseiKey As String = Nothing, listIndex As Integer = -1, shinsei As Shinsei = Nothing, name As String = Nothing, newSlot As ShinseiSlot = Nothing)
        parameters:
        - id: shinseiKey
          type: System.String
        - id: listIndex
          type: System.Int32
        - id: shinsei
          type: Global.Shinsei
        - id: name
          type: System.String
        - id: newSlot
          type: Timba.SacredTails.Arena.ShinseiSlot
      overload: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeInteractuable(Boolean, Boolean)
        VB: ChangeInteractuable(Boolean, Boolean)
      nameWithType:
        CSharp: ShinseiSlot.ChangeInteractuable(Boolean, Boolean)
        VB: ShinseiSlot.ChangeInteractuable(Boolean, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean, System.Boolean)
        VB: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable(System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: ChangeInteractuable
        path: ''
        startLine: 18834
      syntax:
        content:
          CSharp: public void ChangeInteractuable(bool slotIsLocked = false, bool deactivateSlotOnClick = true)
          VB: Public Sub ChangeInteractuable(slotIsLocked As Boolean = False, deactivateSlotOnClick As Boolean = True)
        parameters:
        - id: slotIsLocked
          type: System.Boolean
        - id: deactivateSlotOnClick
          type: System.Boolean
      overload: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
      language: CSharp
      name:
        CSharp: SetDataColor()
        VB: SetDataColor()
      nameWithType:
        CSharp: ShinseiSlot.SetDataColor()
        VB: ShinseiSlot.SetDataColor()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor()
        VB: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SetDataColor
        path: ''
        startLine: 18845
      syntax:
        content:
          CSharp: public void SetDataColor()
          VB: Public Sub SetDataColor
      overload: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String,CharacterType)
      commentId: M:Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String,CharacterType)
      language: CSharp
      name:
        CSharp: PopulateShinseiTypesSprites(String, CharacterType)
        VB: PopulateShinseiTypesSprites(String, CharacterType)
      nameWithType:
        CSharp: ShinseiSlot.PopulateShinseiTypesSprites(String, CharacterType)
        VB: ShinseiSlot.PopulateShinseiTypesSprites(String, CharacterType)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String, CharacterType)
        VB: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites(System.String, CharacterType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: PopulateShinseiTypesSprites
        path: ''
        startLine: 18869
      syntax:
        content:
          CSharp: public void PopulateShinseiTypesSprites(string dna, CharacterType mainType)
          VB: Public Sub PopulateShinseiTypesSprites(dna As String, mainType As CharacterType)
        parameters:
        - id: dna
          type: System.String
        - id: mainType
          type: Global.CharacterType
      overload: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.GameSceneManager
    commentId: T:Timba.SacredTails.Arena.GameSceneManager
    language: CSharp
    name:
      CSharp: GameSceneManager
      VB: GameSceneManager
    nameWithType:
      CSharp: GameSceneManager
      VB: GameSceneManager
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.GameSceneManager
      VB: Timba.SacredTails.Arena.GameSceneManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena
    source:
      id: GameSceneManager
      path: ''
      startLine: 28532
    syntax:
      content:
        CSharp: 'public class GameSceneManager : NetworkBehaviour'
        VB: >-
          Public Class GameSceneManager

              Inherits NetworkBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
      commentId: M:Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
      language: CSharp
      name:
        CSharp: GetClosestBattleSpawn()
        VB: GetClosestBattleSpawn()
      nameWithType:
        CSharp: GameSceneManager.GetClosestBattleSpawn()
        VB: GameSceneManager.GetClosestBattleSpawn()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn()
        VB: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: GetClosestBattleSpawn
        path: ''
        startLine: 28551
      syntax:
        content:
          CSharp: public int GetClosestBattleSpawn()
          VB: Public Function GetClosestBattleSpawn As Integer
        return:
          type: System.Int32
      overload: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult,System.String,System.Int32,System.Boolean)
      commentId: M:Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult,System.String,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: SendBattle(GetMatchResult, String, Int32, Boolean)
        VB: SendBattle(GetMatchResult, String, Int32, Boolean)
      nameWithType:
        CSharp: GameSceneManager.SendBattle(GetMatchResult, String, Int32, Boolean)
        VB: GameSceneManager.SendBattle(GetMatchResult, String, Int32, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult, System.String, System.Int32, System.Boolean)
        VB: Timba.SacredTails.Arena.GameSceneManager.SendBattle(GetMatchResult, System.String, System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: SendBattle
        path: ''
        startLine: 28567
      syntax:
        content:
          CSharp: public void SendBattle(GetMatchResult getMatchResult = null, string matchId = null, int _closestSpawnPoint = -1, bool isViewing = false)
          VB: Public Sub SendBattle(getMatchResult As GetMatchResult = Nothing, matchId As String = Nothing, _closestSpawnPoint As Integer = -1, isViewing As Boolean = False)
        parameters:
        - id: getMatchResult
          type: Global.GetMatchResult
        - id: matchId
          type: System.String
        - id: _closestSpawnPoint
          type: System.Int32
        - id: isViewing
          type: System.Boolean
      overload: Timba.SacredTails.Arena.GameSceneManager.SendBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.GameSceneManager.EndBattle
      commentId: M:Timba.SacredTails.Arena.GameSceneManager.EndBattle
      language: CSharp
      name:
        CSharp: EndBattle()
        VB: EndBattle()
      nameWithType:
        CSharp: GameSceneManager.EndBattle()
        VB: GameSceneManager.EndBattle()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.GameSceneManager.EndBattle()
        VB: Timba.SacredTails.Arena.GameSceneManager.EndBattle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena
      source:
        id: EndBattle
        path: ''
        startLine: 28602
      syntax:
        content:
          CSharp: public void EndBattle()
          VB: Public Sub
      overload: Timba.SacredTails.Arena.GameSceneManager.EndBattle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Arena.ShinseiType
  commentId: N:Timba.SacredTails.Arena.ShinseiType
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Arena.ShinseiType
    VB: Timba.SacredTails.Arena.ShinseiType
  nameWithType:
    CSharp: Timba.SacredTails.Arena.ShinseiType
    VB: Timba.SacredTails.Arena.ShinseiType
  qualifiedName:
    CSharp: Timba.SacredTails.Arena.ShinseiType
    VB: Timba.SacredTails.Arena.ShinseiType
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    language: CSharp
    name:
      CSharp: ShinseiTypeScriptable
      VB: ShinseiTypeScriptable
    nameWithType:
      CSharp: ShinseiTypeScriptable
      VB: ShinseiTypeScriptable
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
      VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena.ShinseiType
    source:
      id: ShinseiTypeScriptable
      path: ''
      startLine: 13459
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ShinseiTypeScriptable : ScriptableObject
        VB: >-
          <Serializable>

          Public Class ShinseiTypeScriptable

              Inherits ScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
      commentId: F:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
      language: CSharp
      name:
        CSharp: shinseiTypeMatrix
        VB: shinseiTypeMatrix
      nameWithType:
        CSharp: ShinseiTypeScriptable.shinseiTypeMatrix
        VB: ShinseiTypeScriptable.shinseiTypeMatrix
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.shinseiTypeMatrix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: shinseiTypeMatrix
        path: ''
        startLine: 13463
      syntax:
        content:
          CSharp: public List<ShinseiTypeListClass> shinseiTypeMatrix
          VB: Public shinseiTypeMatrix As List(Of ShinseiTypeListClass)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
      language: CSharp
      name:
        CSharp: GetShinseiTypes()
        VB: GetShinseiTypes()
      nameWithType:
        CSharp: ShinseiTypeScriptable.GetShinseiTypes()
        VB: ShinseiTypeScriptable.GetShinseiTypes()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes()
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: GetShinseiTypes
        path: ''
        startLine: 13465
      syntax:
        content:
          CSharp: public void GetShinseiTypes()
          VB: Public Sub GetShinseiTypes
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType,CharacterType)
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType,CharacterType)
      language: CSharp
      name:
        CSharp: CompareTypesAndGetDamage(CharacterType, CharacterType)
        VB: CompareTypesAndGetDamage(CharacterType, CharacterType)
      nameWithType:
        CSharp: ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
        VB: ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage(CharacterType, CharacterType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: CompareTypesAndGetDamage
        path: ''
        startLine: 13475
      syntax:
        content:
          CSharp: public float CompareTypesAndGetDamage(CharacterType currentShinsei, CharacterType targetShinesi)
          VB: Public Function CompareTypesAndGetDamage(currentShinsei As CharacterType, targetShinesi As CharacterType) As Single
        parameters:
        - id: currentShinsei
          type: Global.CharacterType
        - id: targetShinesi
          type: Global.CharacterType
        return:
          type: System.Single
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
      language: CSharp
      name:
        CSharp: GetMessageForTypeDamage(Single)
        VB: GetMessageForTypeDamage(Single)
      nameWithType:
        CSharp: ShinseiTypeScriptable.GetMessageForTypeDamage(Single)
        VB: ShinseiTypeScriptable.GetMessageForTypeDamage(Single)
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: GetMessageForTypeDamage
        path: ''
        startLine: 13480
      syntax:
        content:
          CSharp: public string GetMessageForTypeDamage(float typeDamageMultiplier)
          VB: Public Function GetMessageForTypeDamage(typeDamageMultiplier As Single) As String
        parameters:
        - id: typeDamageMultiplier
          type: System.Single
        return:
          type: System.String
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
      commentId: M:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
      language: CSharp
      name:
        CSharp: SerializeShinseiTypeMatrix()
        VB: SerializeShinseiTypeMatrix()
      nameWithType:
        CSharp: ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
        VB: ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: SerializeShinseiTypeMatrix
        path: ''
        startLine: 13493
      syntax:
        content:
          CSharp: public void SerializeShinseiTypeMatrix()
          VB: Public Sub SerializeShinseiTypeMatrix
      overload: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    language: CSharp
    name:
      CSharp: ShinseiTypeListClass
      VB: ShinseiTypeListClass
    nameWithType:
      CSharp: ShinseiTypeListClass
      VB: ShinseiTypeListClass
    qualifiedName:
      CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Arena.ShinseiType
    source:
      id: ShinseiTypeListClass
      path: ''
      startLine: 13514
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ShinseiTypeListClass
        VB: >-
          <Serializable>

          Public Class ShinseiTypeListClass
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
      commentId: F:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
      language: CSharp
      name:
        CSharp: rows
        VB: rows
      nameWithType:
        CSharp: ShinseiTypeListClass.rows
        VB: ShinseiTypeListClass.rows
      qualifiedName:
        CSharp: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
        VB: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass.rows
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Arena.ShinseiType
      source:
        id: rows
        path: ''
        startLine: 13517
      syntax:
        content:
          CSharp: public List<float> rows
          VB: Public rows As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Lobby
  commentId: N:Timba.SacredTails.Lobby
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Lobby
    VB: Timba.SacredTails.Lobby
  nameWithType:
    CSharp: Timba.SacredTails.Lobby
    VB: Timba.SacredTails.Lobby
  qualifiedName:
    CSharp: Timba.SacredTails.Lobby
    VB: Timba.SacredTails.Lobby
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Lobby.PlayerCameraFollow
    commentId: T:Timba.SacredTails.Lobby.PlayerCameraFollow
    language: CSharp
    name:
      CSharp: PlayerCameraFollow
      VB: PlayerCameraFollow
    nameWithType:
      CSharp: PlayerCameraFollow
      VB: PlayerCameraFollow
    qualifiedName:
      CSharp: Timba.SacredTails.Lobby.PlayerCameraFollow
      VB: Timba.SacredTails.Lobby.PlayerCameraFollow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Lobby
    source:
      id: PlayerCameraFollow
      path: ''
      startLine: 18085
    syntax:
      content:
        CSharp: 'public class PlayerCameraFollow : Singleton<PlayerCameraFollow>'
        VB: >-
          Public Class PlayerCameraFollow

              Inherits Singleton(Of PlayerCameraFollow)
    inheritance:
    - System.Object
    - Utils.Singleton
    - Utils.Singleton{Timba.SacredTails.Lobby.PlayerCameraFollow}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Lobby.PlayerCameraFollow.virtualCam
      commentId: F:Timba.SacredTails.Lobby.PlayerCameraFollow.virtualCam
      language: CSharp
      name:
        CSharp: virtualCam
        VB: virtualCam
      nameWithType:
        CSharp: PlayerCameraFollow.virtualCam
        VB: PlayerCameraFollow.virtualCam
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.PlayerCameraFollow.virtualCam
        VB: Timba.SacredTails.Lobby.PlayerCameraFollow.virtualCam
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: virtualCam
        path: ''
        startLine: 18087
      syntax:
        content:
          CSharp: public List<CinemachineVirtualCamera> virtualCam
          VB: Public virtualCam As List(Of CinemachineVirtualCamera)
        return:
          type: System.Collections.Generic.List{CinemachineVirtualCamera}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer(Transform)
      commentId: M:Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer(Transform)
      language: CSharp
      name:
        CSharp: FollowPlayer(Transform)
        VB: FollowPlayer(Transform)
      nameWithType:
        CSharp: PlayerCameraFollow.FollowPlayer(Transform)
        VB: PlayerCameraFollow.FollowPlayer(Transform)
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer(Transform)
        VB: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: FollowPlayer
        path: ''
        startLine: 18089
      syntax:
        content:
          CSharp: public void FollowPlayer(Transform transform)
          VB: Public Sub FollowPlayer(transform As Transform)
        parameters:
        - id: transform
          type: Global.Transform
      overload: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Lobby.ShinseiSpawner
    commentId: T:Timba.SacredTails.Lobby.ShinseiSpawner
    language: CSharp
    name:
      CSharp: ShinseiSpawner
      VB: ShinseiSpawner
    nameWithType:
      CSharp: ShinseiSpawner
      VB: ShinseiSpawner
    qualifiedName:
      CSharp: Timba.SacredTails.Lobby.ShinseiSpawner
      VB: Timba.SacredTails.Lobby.ShinseiSpawner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Lobby
    source:
      id: ShinseiSpawner
      path: ''
      startLine: 18904
    summary: "\nSpawns shinsei as network objects for the lobby scene \n"
    example: []
    syntax:
      content:
        CSharp: 'public class ShinseiSpawner : MonoBehaviour'
        VB: >-
          Public Class ShinseiSpawner

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Lobby.ShinseiSpawner.characterSlot
      commentId: F:Timba.SacredTails.Lobby.ShinseiSpawner.characterSlot
      language: CSharp
      name:
        CSharp: characterSlot
        VB: characterSlot
      nameWithType:
        CSharp: ShinseiSpawner.characterSlot
        VB: ShinseiSpawner.characterSlot
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.ShinseiSpawner.characterSlot
        VB: Timba.SacredTails.Lobby.ShinseiSpawner.characterSlot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: characterSlot
        path: ''
        startLine: 18908
      syntax:
        content:
          CSharp: public CharacterSlot characterSlot
          VB: Public characterSlot As CharacterSlot
        return:
          type: Global.CharacterSlot
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei(System.String,Transform,Vector3)
      commentId: M:Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei(System.String,Transform,Vector3)
      language: CSharp
      name:
        CSharp: SpawnOtherShinsei(String, Transform, Vector3)
        VB: SpawnOtherShinsei(String, Transform, Vector3)
      nameWithType:
        CSharp: ShinseiSpawner.SpawnOtherShinsei(String, Transform, Vector3)
        VB: ShinseiSpawner.SpawnOtherShinsei(String, Transform, Vector3)
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei(System.String, Transform, Vector3)
        VB: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei(System.String, Transform, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: SpawnOtherShinsei
        path: ''
        startLine: 18916
      syntax:
        content:
          CSharp: public void SpawnOtherShinsei(string shinseiCompanionDna, Transform parent, Vector3 playerPos)
          VB: Public Sub SpawnOtherShinsei(shinseiCompanionDna As String, parent As Transform, playerPos As Vector3)
        parameters:
        - id: shinseiCompanionDna
          type: System.String
        - id: parent
          type: Global.Transform
        - id: playerPos
          type: Global.Vector3
      overload: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn(Transform,System.Boolean,System.Boolean)
      commentId: M:Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn(Transform,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: OnSpawn(Transform, Boolean, Boolean)
        VB: OnSpawn(Transform, Boolean, Boolean)
      nameWithType:
        CSharp: ShinseiSpawner.OnSpawn(Transform, Boolean, Boolean)
        VB: ShinseiSpawner.OnSpawn(Transform, Boolean, Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn(Transform, System.Boolean, System.Boolean)
        VB: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn(Transform, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: OnSpawn
        path: ''
        startLine: 18922
      syntax:
        content:
          CSharp: public void OnSpawn(Transform parent, bool isLocalPlayerShinsei = false, bool useGravity = false)
          VB: Public Sub OnSpawn(parent As Transform, isLocalPlayerShinsei As Boolean = False, useGravity As Boolean = False)
        parameters:
        - id: parent
          type: Global.Transform
        - id: isLocalPlayerShinsei
          type: System.Boolean
        - id: useGravity
          type: System.Boolean
      overload: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei(System.String)
      commentId: M:Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei(System.String)
      language: CSharp
      name:
        CSharp: ChangeCurrentShinsei(String)
        VB: ChangeCurrentShinsei(String)
      nameWithType:
        CSharp: ShinseiSpawner.ChangeCurrentShinsei(String)
        VB: ShinseiSpawner.ChangeCurrentShinsei(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei(System.String)
        VB: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Lobby
      source:
        id: ChangeCurrentShinsei
        path: ''
        startLine: 18937
      syntax:
        content:
          CSharp: public void ChangeCurrentShinsei(string newValue)
          VB: Public Sub ChangeCurrentShinsei(newValue As String)
        parameters:
        - id: newValue
          type: System.String
      overload: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Database
  commentId: N:Timba.SacredTails.Database
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Database
    VB: Timba.SacredTails.Database
  nameWithType:
    CSharp: Timba.SacredTails.Database
    VB: Timba.SacredTails.Database
  qualifiedName:
    CSharp: Timba.SacredTails.Database
    VB: Timba.SacredTails.Database
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Database.DatabaseConnection
    commentId: T:Timba.SacredTails.Database.DatabaseConnection
    language: CSharp
    name:
      CSharp: DatabaseConnection
      VB: DatabaseConnection
    nameWithType:
      CSharp: DatabaseConnection
      VB: DatabaseConnection
    qualifiedName:
      CSharp: Timba.SacredTails.Database.DatabaseConnection
      VB: Timba.SacredTails.Database.DatabaseConnection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Database
    source:
      id: DatabaseConnection
      path: ''
      startLine: 30794
    syntax:
      content:
        CSharp: 'public class DatabaseConnection : MonoBehaviour, IDatabase'
        VB: >-
          Public Class DatabaseConnection

              Inherits MonoBehaviour

              Implements IDatabase
    inheritance:
    - System.Object
    implements:
    - Timba.SacredTails.Database.IDatabase
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex(System.Int32)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex(System.Int32)
      language: CSharp
      name:
        CSharp: GetActionCardByIndex(Int32)
        VB: GetActionCardByIndex(Int32)
      nameWithType:
        CSharp: DatabaseConnection.GetActionCardByIndex(Int32)
        VB: DatabaseConnection.GetActionCardByIndex(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex(System.Int32)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetActionCardByIndex
        path: ''
        startLine: 30806
      syntax:
        content:
          CSharp: public ActionCard GetActionCardByIndex(int index)
          VB: Public Function GetActionCardByIndex(index As Integer) As ActionCard
        parameters:
        - id: index
          type: System.Int32
        return:
          type: Global.ActionCard
      overload: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount
      language: CSharp
      name:
        CSharp: CardDatabaseCount()
        VB: CardDatabaseCount()
      nameWithType:
        CSharp: DatabaseConnection.CardDatabaseCount()
        VB: DatabaseConnection.CardDatabaseCount()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount()
        VB: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: CardDatabaseCount
        path: ''
        startLine: 30811
      syntax:
        content:
          CSharp: public int CardDatabaseCount()
          VB: Public Function CardDatabaseCount As Integer
        return:
          type: System.Int32
      overload: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount*
      implements:
      - Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: GetDatabaseCardsIndexListByType(List<String>)
        VB: GetDatabaseCardsIndexListByType(List(Of String))
      nameWithType:
        CSharp: DatabaseConnection.GetDatabaseCardsIndexListByType(List<String>)
        VB: DatabaseConnection.GetDatabaseCardsIndexListByType(List(Of String))
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType(System.Collections.Generic.List<System.String>)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetDatabaseCardsIndexListByType
        path: ''
        startLine: 30816
      syntax:
        content:
          CSharp: public List<int> GetDatabaseCardsIndexListByType(List<string> partTypes)
          VB: Public Function GetDatabaseCardsIndexListByType(partTypes As List(Of String)) As List(Of Integer)
        parameters:
        - id: partTypes
          type: System.Collections.Generic.List{System.String}
        return:
          type: System.Collections.Generic.List{System.Int32}
      overload: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei
      language: CSharp
      name:
        CSharp: GetRandomShinsei()
        VB: GetRandomShinsei()
      nameWithType:
        CSharp: DatabaseConnection.GetRandomShinsei()
        VB: DatabaseConnection.GetRandomShinsei()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei()
        VB: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetRandomShinsei
        path: ''
        startLine: 30826
      syntax:
        content:
          CSharp: public string GetRandomShinsei()
          VB: Public Function GetRandomShinsei As String
        return:
          type: System.String
      overload: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure(System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure(System.String)
      language: CSharp
      name:
        CSharp: GetShinseiStructure(String)
        VB: GetShinseiStructure(String)
      nameWithType:
        CSharp: DatabaseConnection.GetShinseiStructure(String)
        VB: DatabaseConnection.GetShinseiStructure(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure(System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiStructure
        path: ''
        startLine: 30832
      syntax:
        content:
          CSharp: public string GetShinseiStructure(string dna)
          VB: Public Function GetShinseiStructure(dna As String) As String
        parameters:
        - id: dna
          type: System.String
        return:
          type: System.String
      overload: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats(System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats(System.String)
      language: CSharp
      name:
        CSharp: GetShinseiStats(String)
        VB: GetShinseiStats(String)
      nameWithType:
        CSharp: DatabaseConnection.GetShinseiStats(String)
        VB: DatabaseConnection.GetShinseiStats(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats(System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiStats
        path: ''
        startLine: 30837
      syntax:
        content:
          CSharp: public ShinseiStats GetShinseiStats(string shinseiDna)
          VB: Public Function GetShinseiStats(shinseiDna As String) As ShinseiStats
        parameters:
        - id: shinseiDna
          type: System.String
        return:
          type: Global.ShinseiStats
      overload: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetSetName(System.String,System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetSetName(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetSetName(String, String)
        VB: GetSetName(String, String)
      nameWithType:
        CSharp: DatabaseConnection.GetSetName(String, String)
        VB: DatabaseConnection.GetSetName(String, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetSetName(System.String, System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetSetName(System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetSetName
        path: ''
        startLine: 30911
      syntax:
        content:
          CSharp: public string GetSetName(string partRarity, string partType)
          VB: Public Function GetSetName(partRarity As String, partType As String) As String
        parameters:
        - id: partRarity
          type: System.String
        - id: partType
          type: System.String
        return:
          type: System.String
      overload: Timba.SacredTails.Database.DatabaseConnection.GetSetName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes(System.String,Enum)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes(System.String,Enum)
      language: CSharp
      name:
        CSharp: GetShinseiPartsTypes(String, Enum)
        VB: GetShinseiPartsTypes(String, Enum)
      nameWithType:
        CSharp: DatabaseConnection.GetShinseiPartsTypes(String, Enum)
        VB: DatabaseConnection.GetShinseiPartsTypes(String, Enum)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes(System.String, Enum)
        VB: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes(System.String, Enum)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiPartsTypes
        path: ''
        startLine: 30917
      syntax:
        content:
          CSharp: public Dictionary<string, string> GetShinseiPartsTypes(string shinseiDna, Enum genericEnum)
          VB: Public Function GetShinseiPartsTypes(shinseiDna As String, genericEnum As  Enum) As Dictionary(Of String, String)
        parameters:
        - id: shinseiDna
          type: System.String
        - id: genericEnum
          type: Global.Enum
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes*
      implements:
      - Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType(System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType(System.String)
      language: CSharp
      name:
        CSharp: ObtainShinseiType(String)
        VB: ObtainShinseiType(String)
      nameWithType:
        CSharp: DatabaseConnection.ObtainShinseiType(String)
        VB: DatabaseConnection.ObtainShinseiType(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType(System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: ObtainShinseiType
        path: ''
        startLine: 30922
      syntax:
        content:
          CSharp: public CharacterType ObtainShinseiType(string dna)
          VB: Public Function ObtainShinseiType(dna As String) As CharacterType
        parameters:
        - id: dna
          type: System.String
        return:
          type: Global.CharacterType
      overload: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType*
      implements:
      - Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity(System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity(System.String)
      language: CSharp
      name:
        CSharp: ObtainShinseiRarity(String)
        VB: ObtainShinseiRarity(String)
      nameWithType:
        CSharp: DatabaseConnection.ObtainShinseiRarity(String)
        VB: DatabaseConnection.ObtainShinseiRarity(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity(System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: ObtainShinseiRarity
        path: ''
        startLine: 30927
      syntax:
        content:
          CSharp: public RarityType ObtainShinseiRarity(string dna)
          VB: Public Function ObtainShinseiRarity(dna As String) As RarityType
        parameters:
        - id: dna
          type: System.String
        return:
          type: Global.RarityType
      overload: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity*
      implements:
      - Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence(System.Int32,System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: StartMatchmakingSequence(Int32, String)
        VB: StartMatchmakingSequence(Int32, String)
      nameWithType:
        CSharp: DatabaseConnection.StartMatchmakingSequence(Int32, String)
        VB: DatabaseConnection.StartMatchmakingSequence(Int32, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence(System.Int32, System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence(System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: StartMatchmakingSequence
        path: ''
        startLine: 30935
      summary: "\nstarts the matchmaking sequence under the specified queue \n"
      example: []
      syntax:
        content:
          CSharp: public void StartMatchmakingSequence(int skillLevel, string gamemodeQueue)
          VB: Public Sub StartMatchmakingSequence(skillLevel As Integer, gamemodeQueue As String)
        parameters:
        - id: skillLevel
          type: System.Int32
        - id: gamemodeQueue
          type: System.String
      overload: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence*
      implements:
      - Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult,System.String)
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult,System.String)
      language: CSharp
      name:
        CSharp: CheckTicketStatus(CreateMatchmakingTicketResult, String)
        VB: CheckTicketStatus(CreateMatchmakingTicketResult, String)
      nameWithType:
        CSharp: DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult, String)
        VB: DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult, System.String)
        VB: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus(CreateMatchmakingTicketResult, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: CheckTicketStatus
        path: ''
        startLine: 30947
      syntax:
        content:
          CSharp: public async void CheckTicketStatus(CreateMatchmakingTicketResult ticket, string gamemodeQueue)
          VB: Public Sub CheckTicketStatus(ticket As CreateMatchmakingTicketResult, gamemodeQueue As String)
        parameters:
        - id: ticket
          type: Global.CreateMatchmakingTicketResult
        - id: gamemodeQueue
          type: System.String
      overload: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus*
      modifiers:
        CSharp:
        - public
        - async
        VB:
        - Public
    - id: Timba.SacredTails.Database.DatabaseConnection.IsReady
      commentId: M:Timba.SacredTails.Database.DatabaseConnection.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: DatabaseConnection.IsReady()
        VB: DatabaseConnection.IsReady()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.DatabaseConnection.IsReady()
        VB: Timba.SacredTails.Database.DatabaseConnection.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: IsReady
        path: ''
        startLine: 30972
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Database.DatabaseConnection.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.Database.IDatabase
    commentId: T:Timba.SacredTails.Database.IDatabase
    language: CSharp
    name:
      CSharp: IDatabase
      VB: IDatabase
    nameWithType:
      CSharp: IDatabase
      VB: IDatabase
    qualifiedName:
      CSharp: Timba.SacredTails.Database.IDatabase
      VB: Timba.SacredTails.Database.IDatabase
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Database
    source:
      id: IDatabase
      path: ''
      startLine: 30991
    syntax:
      content:
        CSharp: public interface IDatabase
        VB: >-
          Public Interface IDatabase

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      commentId: M:Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      language: CSharp
      name:
        CSharp: GetRandomShinsei()
        VB: GetRandomShinsei()
      nameWithType:
        CSharp: IDatabase.GetRandomShinsei()
        VB: IDatabase.GetRandomShinsei()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetRandomShinsei()
        VB: Timba.SacredTails.Database.IDatabase.GetRandomShinsei()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetRandomShinsei
        path: ''
        startLine: 30993
      syntax:
        content:
          CSharp: string GetRandomShinsei()
          VB: Function GetRandomShinsei As String
        return:
          type: System.String
      overload: Timba.SacredTails.Database.IDatabase.GetRandomShinsei*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
      commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
      language: CSharp
      name:
        CSharp: GetShinseiStructure(String)
        VB: GetShinseiStructure(String)
      nameWithType:
        CSharp: IDatabase.GetShinseiStructure(String)
        VB: IDatabase.GetShinseiStructure(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
        VB: Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiStructure
        path: ''
        startLine: 30994
      syntax:
        content:
          CSharp: string GetShinseiStructure(string dna)
          VB: Function GetShinseiStructure(dna As String) As String
        parameters:
        - id: dna
          type: System.String
        return:
          type: System.String
      overload: Timba.SacredTails.Database.IDatabase.GetShinseiStructure*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
      commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
      language: CSharp
      name:
        CSharp: GetShinseiStats(String)
        VB: GetShinseiStats(String)
      nameWithType:
        CSharp: IDatabase.GetShinseiStats(String)
        VB: IDatabase.GetShinseiStats(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
        VB: Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiStats
        path: ''
        startLine: 30995
      syntax:
        content:
          CSharp: ShinseiStats GetShinseiStats(string shinseiDna)
          VB: Function GetShinseiStats(shinseiDna As String) As ShinseiStats
        parameters:
        - id: shinseiDna
          type: System.String
        return:
          type: Global.ShinseiStats
      overload: Timba.SacredTails.Database.IDatabase.GetShinseiStats*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
      commentId: M:Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
      language: CSharp
      name:
        CSharp: GetActionCardByIndex(Int32)
        VB: GetActionCardByIndex(Int32)
      nameWithType:
        CSharp: IDatabase.GetActionCardByIndex(Int32)
        VB: IDatabase.GetActionCardByIndex(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
        VB: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetActionCardByIndex
        path: ''
        startLine: 30996
      syntax:
        content:
          CSharp: ActionCard GetActionCardByIndex(int index)
          VB: Function GetActionCardByIndex(index As Integer) As ActionCard
        parameters:
        - id: index
          type: System.Int32
        return:
          type: Global.ActionCard
      overload: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      commentId: M:Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      language: CSharp
      name:
        CSharp: CardDatabaseCount()
        VB: CardDatabaseCount()
      nameWithType:
        CSharp: IDatabase.CardDatabaseCount()
        VB: IDatabase.CardDatabaseCount()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.CardDatabaseCount()
        VB: Timba.SacredTails.Database.IDatabase.CardDatabaseCount()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: CardDatabaseCount
        path: ''
        startLine: 30997
      syntax:
        content:
          CSharp: int CardDatabaseCount()
          VB: Function CardDatabaseCount As Integer
        return:
          type: System.Int32
      overload: Timba.SacredTails.Database.IDatabase.CardDatabaseCount*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
      commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
      language: CSharp
      name:
        CSharp: GetShinseiPartsTypes(String, Enum)
        VB: GetShinseiPartsTypes(String, Enum)
      nameWithType:
        CSharp: IDatabase.GetShinseiPartsTypes(String, Enum)
        VB: IDatabase.GetShinseiPartsTypes(String, Enum)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String, Enum)
        VB: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String, Enum)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetShinseiPartsTypes
        path: ''
        startLine: 30998
      syntax:
        content:
          CSharp: Dictionary<string, string> GetShinseiPartsTypes(string shinseiDna, Enum genericEnum)
          VB: Function GetShinseiPartsTypes(shinseiDna As String, genericEnum As  Enum) As Dictionary(Of String, String)
        parameters:
        - id: shinseiDna
          type: System.String
        - id: genericEnum
          type: Global.Enum
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.String}
      overload: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
      commentId: M:Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: GetDatabaseCardsIndexListByType(List<String>)
        VB: GetDatabaseCardsIndexListByType(List(Of String))
      nameWithType:
        CSharp: IDatabase.GetDatabaseCardsIndexListByType(List<String>)
        VB: IDatabase.GetDatabaseCardsIndexListByType(List(Of String))
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List<System.String>)
        VB: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: GetDatabaseCardsIndexListByType
        path: ''
        startLine: 30999
      syntax:
        content:
          CSharp: List<int> GetDatabaseCardsIndexListByType(List<string> type)
          VB: Function GetDatabaseCardsIndexListByType(type As List(Of String)) As List(Of Integer)
        parameters:
        - id: type
          type: System.Collections.Generic.List{System.String}
        return:
          type: System.Collections.Generic.List{System.Int32}
      overload: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
      commentId: M:Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
      language: CSharp
      name:
        CSharp: ObtainShinseiType(String)
        VB: ObtainShinseiType(String)
      nameWithType:
        CSharp: IDatabase.ObtainShinseiType(String)
        VB: IDatabase.ObtainShinseiType(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
        VB: Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: ObtainShinseiType
        path: ''
        startLine: 31000
      syntax:
        content:
          CSharp: CharacterType ObtainShinseiType(string dna)
          VB: Function ObtainShinseiType(dna As String) As CharacterType
        parameters:
        - id: dna
          type: System.String
        return:
          type: Global.CharacterType
      overload: Timba.SacredTails.Database.IDatabase.ObtainShinseiType*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
      commentId: M:Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
      language: CSharp
      name:
        CSharp: ObtainShinseiRarity(String)
        VB: ObtainShinseiRarity(String)
      nameWithType:
        CSharp: IDatabase.ObtainShinseiRarity(String)
        VB: IDatabase.ObtainShinseiRarity(String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
        VB: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: ObtainShinseiRarity
        path: ''
        startLine: 31001
      syntax:
        content:
          CSharp: RarityType ObtainShinseiRarity(string dna)
          VB: Function ObtainShinseiRarity(dna As String) As RarityType
        parameters:
        - id: dna
          type: System.String
        return:
          type: Global.RarityType
      overload: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
      commentId: M:Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: StartMatchmakingSequence(Int32, String)
        VB: StartMatchmakingSequence(Int32, String)
      nameWithType:
        CSharp: IDatabase.StartMatchmakingSequence(Int32, String)
        VB: IDatabase.StartMatchmakingSequence(Int32, String)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32, System.String)
        VB: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: StartMatchmakingSequence
        path: ''
        startLine: 31002
      syntax:
        content:
          CSharp: void StartMatchmakingSequence(int skillLevel = 0, string gamemodeQueue = "FriendlyMatch")
          VB: Sub StartMatchmakingSequence(skillLevel As Integer = 0, gamemodeQueue As String = "FriendlyMatch")
        parameters:
        - id: skillLevel
          type: System.Int32
        - id: gamemodeQueue
          type: System.String
      overload: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.SacredTails.Database.AuthController
    commentId: T:Timba.SacredTails.Database.AuthController
    language: CSharp
    name:
      CSharp: AuthController
      VB: AuthController
    nameWithType:
      CSharp: AuthController
      VB: AuthController
    qualifiedName:
      CSharp: Timba.SacredTails.Database.AuthController
      VB: Timba.SacredTails.Database.AuthController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Database
    source:
      id: AuthController
      path: ''
      startLine: 32576
    syntax:
      content:
        CSharp: 'public class AuthController : MonoBehaviour'
        VB: >-
          Public Class AuthController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Database.AuthController.tournamentCreationLogin
      commentId: F:Timba.SacredTails.Database.AuthController.tournamentCreationLogin
      language: CSharp
      name:
        CSharp: tournamentCreationLogin
        VB: tournamentCreationLogin
      nameWithType:
        CSharp: AuthController.tournamentCreationLogin
        VB: AuthController.tournamentCreationLogin
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.tournamentCreationLogin
        VB: Timba.SacredTails.Database.AuthController.tournamentCreationLogin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: tournamentCreationLogin
        path: ''
        startLine: 32600
      syntax:
        content:
          CSharp: public bool tournamentCreationLogin
          VB: Public tournamentCreationLogin As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.ipField
      commentId: F:Timba.SacredTails.Database.AuthController.ipField
      language: CSharp
      name:
        CSharp: ipField
        VB: ipField
      nameWithType:
        CSharp: AuthController.ipField
        VB: AuthController.ipField
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.ipField
        VB: Timba.SacredTails.Database.AuthController.ipField
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: ipField
        path: ''
        startLine: 32604
      syntax:
        content:
          CSharp: public TMP_InputField ipField
          VB: Public ipField As TMP_InputField
        return:
          type: Global.TMP_InputField
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.transport
      commentId: F:Timba.SacredTails.Database.AuthController.transport
      language: CSharp
      name:
        CSharp: transport
        VB: transport
      nameWithType:
        CSharp: AuthController.transport
        VB: AuthController.transport
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.transport
        VB: Timba.SacredTails.Database.AuthController.transport
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: transport
        path: ''
        startLine: 32605
      syntax:
        content:
          CSharp: public UnityTransport transport
          VB: Public transport As UnityTransport
        return:
          type: Global.UnityTransport
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.LoadCachedData
      commentId: M:Timba.SacredTails.Database.AuthController.LoadCachedData
      language: CSharp
      name:
        CSharp: LoadCachedData()
        VB: LoadCachedData()
      nameWithType:
        CSharp: AuthController.LoadCachedData()
        VB: AuthController.LoadCachedData()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.LoadCachedData()
        VB: Timba.SacredTails.Database.AuthController.LoadCachedData()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: LoadCachedData
        path: ''
        startLine: 32628
      syntax:
        content:
          CSharp: public void LoadCachedData()
          VB: Public Sub LoadCachedData
      overload: Timba.SacredTails.Database.AuthController.LoadCachedData*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.SetIP
      commentId: M:Timba.SacredTails.Database.AuthController.SetIP
      language: CSharp
      name:
        CSharp: SetIP()
        VB: SetIP()
      nameWithType:
        CSharp: AuthController.SetIP()
        VB: AuthController.SetIP()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.SetIP()
        VB: Timba.SacredTails.Database.AuthController.SetIP()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: SetIP
        path: ''
        startLine: 32649
      syntax:
        content:
          CSharp: public void SetIP()
          VB: Public Sub SetIP
      overload: Timba.SacredTails.Database.AuthController.SetIP*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.OpenPanel(System.Boolean)
      commentId: M:Timba.SacredTails.Database.AuthController.OpenPanel(System.Boolean)
      language: CSharp
      name:
        CSharp: OpenPanel(Boolean)
        VB: OpenPanel(Boolean)
      nameWithType:
        CSharp: AuthController.OpenPanel(Boolean)
        VB: AuthController.OpenPanel(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.OpenPanel(System.Boolean)
        VB: Timba.SacredTails.Database.AuthController.OpenPanel(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: OpenPanel
        path: ''
        startLine: 32661
      syntax:
        content:
          CSharp: public void OpenPanel(bool isLogin)
          VB: Public Sub OpenPanel(isLogin As Boolean)
        parameters:
        - id: isLogin
          type: System.Boolean
      overload: Timba.SacredTails.Database.AuthController.OpenPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel(System.Boolean)
      commentId: M:Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel(System.Boolean)
      language: CSharp
      name:
        CSharp: OpenForgotPasswordPanel(Boolean)
        VB: OpenForgotPasswordPanel(Boolean)
      nameWithType:
        CSharp: AuthController.OpenForgotPasswordPanel(Boolean)
        VB: AuthController.OpenForgotPasswordPanel(Boolean)
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel(System.Boolean)
        VB: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: OpenForgotPasswordPanel
        path: ''
        startLine: 32678
      syntax:
        content:
          CSharp: public void OpenForgotPasswordPanel(bool isLogin)
          VB: Public Sub OpenForgotPasswordPanel(isLogin As Boolean)
        parameters:
        - id: isLogin
          type: System.Boolean
      overload: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.Login
      commentId: M:Timba.SacredTails.Database.AuthController.Login
      language: CSharp
      name:
        CSharp: Login()
        VB: Login()
      nameWithType:
        CSharp: AuthController.Login()
        VB: AuthController.Login()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.Login()
        VB: Timba.SacredTails.Database.AuthController.Login()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: Login
        path: ''
        startLine: 32706
      syntax:
        content:
          CSharp: public void Login()
          VB: Public Sub Login
      overload: Timba.SacredTails.Database.AuthController.Login*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.EventsListenging
      commentId: M:Timba.SacredTails.Database.AuthController.EventsListenging
      language: CSharp
      name:
        CSharp: EventsListenging()
        VB: EventsListenging()
      nameWithType:
        CSharp: AuthController.EventsListenging()
        VB: AuthController.EventsListenging()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.EventsListenging()
        VB: Timba.SacredTails.Database.AuthController.EventsListenging()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: EventsListenging
        path: ''
        startLine: 32718
      syntax:
        content:
          CSharp: public void EventsListenging()
          VB: Public Sub EventsListenging
      overload: Timba.SacredTails.Database.AuthController.EventsListenging*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.SignUp
      commentId: M:Timba.SacredTails.Database.AuthController.SignUp
      language: CSharp
      name:
        CSharp: SignUp()
        VB: SignUp()
      nameWithType:
        CSharp: AuthController.SignUp()
        VB: AuthController.SignUp()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.SignUp()
        VB: Timba.SacredTails.Database.AuthController.SignUp()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: SignUp
        path: ''
        startLine: 32731
      syntax:
        content:
          CSharp: public void SignUp()
          VB: Public Sub SignUp
      overload: Timba.SacredTails.Database.AuthController.SignUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Database.AuthController.SendPasswordEmail
      commentId: M:Timba.SacredTails.Database.AuthController.SendPasswordEmail
      language: CSharp
      name:
        CSharp: SendPasswordEmail()
        VB: SendPasswordEmail()
      nameWithType:
        CSharp: AuthController.SendPasswordEmail()
        VB: AuthController.SendPasswordEmail()
      qualifiedName:
        CSharp: Timba.SacredTails.Database.AuthController.SendPasswordEmail()
        VB: Timba.SacredTails.Database.AuthController.SendPasswordEmail()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Database
      source:
        id: SendPasswordEmail
        path: ''
        startLine: 32746
      syntax:
        content:
          CSharp: public void SendPasswordEmail()
          VB: Public Sub SendPasswordEmail
      overload: Timba.SacredTails.Database.AuthController.SendPasswordEmail*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.Navigation
  commentId: N:Timba.SacredTails.Navigation
  language: CSharp
  name:
    CSharp: Timba.SacredTails.Navigation
    VB: Timba.SacredTails.Navigation
  nameWithType:
    CSharp: Timba.SacredTails.Navigation
    VB: Timba.SacredTails.Navigation
  qualifiedName:
    CSharp: Timba.SacredTails.Navigation
    VB: Timba.SacredTails.Navigation
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.Navigation.INavigation
    commentId: T:Timba.SacredTails.Navigation.INavigation
    language: CSharp
    name:
      CSharp: INavigation
      VB: INavigation
    nameWithType:
      CSharp: INavigation
      VB: INavigation
    qualifiedName:
      CSharp: Timba.SacredTails.Navigation.INavigation
      VB: Timba.SacredTails.Navigation.INavigation
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Navigation
    source:
      id: INavigation
      path: ''
      startLine: 31047
    syntax:
      content:
        CSharp: public interface INavigation
        VB: >-
          Public Interface INavigation

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
      commentId: M:Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
      language: CSharp
      name:
        CSharp: GoToScene(Int32)
        VB: GoToScene(Int32)
      nameWithType:
        CSharp: INavigation.GoToScene(Int32)
        VB: INavigation.GoToScene(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
        VB: Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Navigation
      source:
        id: GoToScene
        path: ''
        startLine: 31049
      syntax:
        content:
          CSharp: void GoToScene(int index)
          VB: Sub GoToScene(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.Navigation.INavigation.GoToScene*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.SacredTails.Navigation.NavigationManager
    commentId: T:Timba.SacredTails.Navigation.NavigationManager
    language: CSharp
    name:
      CSharp: NavigationManager
      VB: NavigationManager
    nameWithType:
      CSharp: NavigationManager
      VB: NavigationManager
    qualifiedName:
      CSharp: Timba.SacredTails.Navigation.NavigationManager
      VB: Timba.SacredTails.Navigation.NavigationManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.Navigation
    source:
      id: NavigationManager
      path: ''
      startLine: 31059
    syntax:
      content:
        CSharp: 'public class NavigationManager : MonoBehaviour, INavigation'
        VB: >-
          Public Class NavigationManager

              Inherits MonoBehaviour

              Implements INavigation
    inheritance:
    - System.Object
    implements:
    - Timba.SacredTails.Navigation.INavigation
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.Navigation.NavigationManager.GoToScene(System.Int32)
      commentId: M:Timba.SacredTails.Navigation.NavigationManager.GoToScene(System.Int32)
      language: CSharp
      name:
        CSharp: GoToScene(Int32)
        VB: GoToScene(Int32)
      nameWithType:
        CSharp: NavigationManager.GoToScene(Int32)
        VB: NavigationManager.GoToScene(Int32)
      qualifiedName:
        CSharp: Timba.SacredTails.Navigation.NavigationManager.GoToScene(System.Int32)
        VB: Timba.SacredTails.Navigation.NavigationManager.GoToScene(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Navigation
      source:
        id: GoToScene
        path: ''
        startLine: 31062
      syntax:
        content:
          CSharp: public void GoToScene(int index)
          VB: Public Sub GoToScene(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.SacredTails.Navigation.NavigationManager.GoToScene*
      implements:
      - Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.Navigation.NavigationManager.IsReady
      commentId: M:Timba.SacredTails.Navigation.NavigationManager.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: NavigationManager.IsReady()
        VB: NavigationManager.IsReady()
      qualifiedName:
        CSharp: Timba.SacredTails.Navigation.NavigationManager.IsReady()
        VB: Timba.SacredTails.Navigation.NavigationManager.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.Navigation
      source:
        id: IsReady
        path: ''
        startLine: 31068
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.Navigation.NavigationManager.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.SacredTails.UiHelpers
  commentId: N:Timba.SacredTails.UiHelpers
  language: CSharp
  name:
    CSharp: Timba.SacredTails.UiHelpers
    VB: Timba.SacredTails.UiHelpers
  nameWithType:
    CSharp: Timba.SacredTails.UiHelpers
    VB: Timba.SacredTails.UiHelpers
  qualifiedName:
    CSharp: Timba.SacredTails.UiHelpers
    VB: Timba.SacredTails.UiHelpers
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.SacredTails.UiHelpers.IconContainerSO
    commentId: T:Timba.SacredTails.UiHelpers.IconContainerSO
    language: CSharp
    name:
      CSharp: IconContainerSO
      VB: IconContainerSO
    nameWithType:
      CSharp: IconContainerSO
      VB: IconContainerSO
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.IconContainerSO
      VB: Timba.SacredTails.UiHelpers.IconContainerSO
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: IconContainerSO
      path: ''
      startLine: 31595
    syntax:
      content:
        CSharp: 'public class IconContainerSO : ScriptableObject'
        VB: >-
          Public Class IconContainerSO

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.IconContainerSO.nullIcon
      commentId: F:Timba.SacredTails.UiHelpers.IconContainerSO.nullIcon
      language: CSharp
      name:
        CSharp: nullIcon
        VB: nullIcon
      nameWithType:
        CSharp: IconContainerSO.nullIcon
        VB: IconContainerSO.nullIcon
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconContainerSO.nullIcon
        VB: Timba.SacredTails.UiHelpers.IconContainerSO.nullIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: nullIcon
        path: ''
        startLine: 31598
      syntax:
        content:
          CSharp: public IconSet nullIcon
          VB: Public nullIcon As IconSet
        return:
          type: Timba.SacredTails.UiHelpers.IconSet
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconContainerSO.IconCollection
      commentId: F:Timba.SacredTails.UiHelpers.IconContainerSO.IconCollection
      language: CSharp
      name:
        CSharp: IconCollection
        VB: IconCollection
      nameWithType:
        CSharp: IconContainerSO.IconCollection
        VB: IconContainerSO.IconCollection
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconContainerSO.IconCollection
        VB: Timba.SacredTails.UiHelpers.IconContainerSO.IconCollection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: IconCollection
        path: ''
        startLine: 31599
      syntax:
        content:
          CSharp: public List<IconSet> IconCollection
          VB: Public IconCollection As List(Of IconSet)
        return:
          type: System.Collections.Generic.List{Timba.SacredTails.UiHelpers.IconSet}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon(System.Nullable{CharacterType})
      commentId: M:Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon(System.Nullable{CharacterType})
      language: CSharp
      name:
        CSharp: AssignIcon(Nullable<CharacterType>)
        VB: AssignIcon(Nullable(Of CharacterType))
      nameWithType:
        CSharp: IconContainerSO.AssignIcon(Nullable<CharacterType>)
        VB: IconContainerSO.AssignIcon(Nullable(Of CharacterType))
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon(System.Nullable<CharacterType>)
        VB: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon(System.Nullable(Of CharacterType))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: AssignIcon
        path: ''
        startLine: 31601
      syntax:
        content:
          CSharp: public IconSet AssignIcon(CharacterType? charType)
          VB: Public Function AssignIcon(charType As CharacterType?) As IconSet
        parameters:
        - id: charType
          type: System.Nullable{CharacterType}
        return:
          type: Timba.SacredTails.UiHelpers.IconSet
      overload: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.IconSet
    commentId: T:Timba.SacredTails.UiHelpers.IconSet
    language: CSharp
    name:
      CSharp: IconSet
      VB: IconSet
    nameWithType:
      CSharp: IconSet
      VB: IconSet
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.IconSet
      VB: Timba.SacredTails.UiHelpers.IconSet
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: IconSet
      path: ''
      startLine: 31616
    syntax:
      content:
        CSharp: public class IconSet
        VB: Public Class IconSet
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.IconSet.iconType
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.iconType
      language: CSharp
      name:
        CSharp: iconType
        VB: iconType
      nameWithType:
        CSharp: IconSet.iconType
        VB: IconSet.iconType
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.iconType
        VB: Timba.SacredTails.UiHelpers.IconSet.iconType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: iconType
        path: ''
        startLine: 31619
      syntax:
        content:
          CSharp: public CharacterType iconType
          VB: Public iconType As CharacterType
        return:
          type: Global.CharacterType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconSet.battleIcon
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.battleIcon
      language: CSharp
      name:
        CSharp: battleIcon
        VB: battleIcon
      nameWithType:
        CSharp: IconSet.battleIcon
        VB: IconSet.battleIcon
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.battleIcon
        VB: Timba.SacredTails.UiHelpers.IconSet.battleIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: battleIcon
        path: ''
        startLine: 31620
      syntax:
        content:
          CSharp: public Sprite battleIcon
          VB: Public battleIcon As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconSet.partIcon
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.partIcon
      language: CSharp
      name:
        CSharp: partIcon
        VB: partIcon
      nameWithType:
        CSharp: IconSet.partIcon
        VB: IconSet.partIcon
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.partIcon
        VB: Timba.SacredTails.UiHelpers.IconSet.partIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: partIcon
        path: ''
        startLine: 31621
      syntax:
        content:
          CSharp: public Sprite partIcon
          VB: Public partIcon As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconSet.negativeIcon
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.negativeIcon
      language: CSharp
      name:
        CSharp: negativeIcon
        VB: negativeIcon
      nameWithType:
        CSharp: IconSet.negativeIcon
        VB: IconSet.negativeIcon
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.negativeIcon
        VB: Timba.SacredTails.UiHelpers.IconSet.negativeIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: negativeIcon
        path: ''
        startLine: 31622
      syntax:
        content:
          CSharp: public Sprite negativeIcon
          VB: Public negativeIcon As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconSet.backgroundSprite
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.backgroundSprite
      language: CSharp
      name:
        CSharp: backgroundSprite
        VB: backgroundSprite
      nameWithType:
        CSharp: IconSet.backgroundSprite
        VB: IconSet.backgroundSprite
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.backgroundSprite
        VB: Timba.SacredTails.UiHelpers.IconSet.backgroundSprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: backgroundSprite
        path: ''
        startLine: 31623
      syntax:
        content:
          CSharp: public Sprite backgroundSprite
          VB: Public backgroundSprite As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.IconSet.TypeColor
      commentId: F:Timba.SacredTails.UiHelpers.IconSet.TypeColor
      language: CSharp
      name:
        CSharp: TypeColor
        VB: TypeColor
      nameWithType:
        CSharp: IconSet.TypeColor
        VB: IconSet.TypeColor
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IconSet.TypeColor
        VB: Timba.SacredTails.UiHelpers.IconSet.TypeColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: TypeColor
        path: ''
        startLine: 31624
      syntax:
        content:
          CSharp: public Color TypeColor
          VB: Public TypeColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.SacredTails.UiHelpers.IUIHelpable
    commentId: T:Timba.SacredTails.UiHelpers.IUIHelpable
    language: CSharp
    name:
      CSharp: IUIHelpable
      VB: IUIHelpable
    nameWithType:
      CSharp: IUIHelpable
      VB: IUIHelpable
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.IUIHelpable
      VB: Timba.SacredTails.UiHelpers.IUIHelpable
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: IUIHelpable
      path: ''
      startLine: 31635
    syntax:
      content:
        CSharp: public interface IUIHelpable
        VB: >-
          Public Interface IUIHelpable

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
      commentId: M:Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
      language: CSharp
      name:
        CSharp: AssignIcon(Nullable<CharacterType>)
        VB: AssignIcon(Nullable(Of CharacterType))
      nameWithType:
        CSharp: IUIHelpable.AssignIcon(Nullable<CharacterType>)
        VB: IUIHelpable.AssignIcon(Nullable(Of CharacterType))
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable<CharacterType>)
        VB: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable(Of CharacterType))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: AssignIcon
        path: ''
        startLine: 31637
      syntax:
        content:
          CSharp: IconSet AssignIcon(CharacterType? charType)
          VB: Function AssignIcon(charType As CharacterType?) As IconSet
        parameters:
        - id: charType
          type: System.Nullable{CharacterType}
        return:
          type: Timba.SacredTails.UiHelpers.IconSet
      overload: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.SacredTails.UiHelpers.TypeIconAsigner
    commentId: T:Timba.SacredTails.UiHelpers.TypeIconAsigner
    language: CSharp
    name:
      CSharp: TypeIconAsigner
      VB: TypeIconAsigner
    nameWithType:
      CSharp: TypeIconAsigner
      VB: TypeIconAsigner
    qualifiedName:
      CSharp: Timba.SacredTails.UiHelpers.TypeIconAsigner
      VB: Timba.SacredTails.UiHelpers.TypeIconAsigner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.SacredTails.UiHelpers
    source:
      id: TypeIconAsigner
      path: ''
      startLine: 32039
    syntax:
      content:
        CSharp: 'public class TypeIconAsigner : MonoBehaviour, IUIHelpable'
        VB: >-
          Public Class TypeIconAsigner

              Inherits MonoBehaviour

              Implements IUIHelpable
    inheritance:
    - System.Object
    implements:
    - Timba.SacredTails.UiHelpers.IUIHelpable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.IconDatabase
      commentId: F:Timba.SacredTails.UiHelpers.TypeIconAsigner.IconDatabase
      language: CSharp
      name:
        CSharp: IconDatabase
        VB: IconDatabase
      nameWithType:
        CSharp: TypeIconAsigner.IconDatabase
        VB: TypeIconAsigner.IconDatabase
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.TypeIconAsigner.IconDatabase
        VB: Timba.SacredTails.UiHelpers.TypeIconAsigner.IconDatabase
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: IconDatabase
        path: ''
        startLine: 32041
      syntax:
        content:
          CSharp: public IconContainerSO IconDatabase
          VB: Public IconDatabase As IconContainerSO
        return:
          type: Timba.SacredTails.UiHelpers.IconContainerSO
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon(System.Nullable{CharacterType})
      commentId: M:Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon(System.Nullable{CharacterType})
      language: CSharp
      name:
        CSharp: AssignIcon(Nullable<CharacterType>)
        VB: AssignIcon(Nullable(Of CharacterType))
      nameWithType:
        CSharp: TypeIconAsigner.AssignIcon(Nullable<CharacterType>)
        VB: TypeIconAsigner.AssignIcon(Nullable(Of CharacterType))
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon(System.Nullable<CharacterType>)
        VB: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon(System.Nullable(Of CharacterType))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: AssignIcon
        path: ''
        startLine: 32043
      syntax:
        content:
          CSharp: public IconSet AssignIcon(CharacterType? charType)
          VB: Public Function AssignIcon(charType As CharacterType?) As IconSet
        parameters:
        - id: charType
          type: System.Nullable{CharacterType}
        return:
          type: Timba.SacredTails.UiHelpers.IconSet
      overload: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon*
      implements:
      - Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady
      commentId: M:Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: TypeIconAsigner.IsReady()
        VB: TypeIconAsigner.IsReady()
      qualifiedName:
        CSharp: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady()
        VB: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.SacredTails.UiHelpers
      source:
        id: IsReady
        path: ''
        startLine: 32048
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.CharacterFactory
  commentId: N:Timba.Games.CharacterFactory
  language: CSharp
  name:
    CSharp: Timba.Games.CharacterFactory
    VB: Timba.Games.CharacterFactory
  nameWithType:
    CSharp: Timba.Games.CharacterFactory
    VB: Timba.Games.CharacterFactory
  qualifiedName:
    CSharp: Timba.Games.CharacterFactory
    VB: Timba.Games.CharacterFactory
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.CharacterFactory.CharacterBuilder
    commentId: T:Timba.Games.CharacterFactory.CharacterBuilder
    language: CSharp
    name:
      CSharp: CharacterBuilder
      VB: CharacterBuilder
    nameWithType:
      CSharp: CharacterBuilder
      VB: CharacterBuilder
    qualifiedName:
      CSharp: Timba.Games.CharacterFactory.CharacterBuilder
      VB: Timba.Games.CharacterFactory.CharacterBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.CharacterFactory
    source:
      id: CharacterBuilder
      path: ''
      startLine: 14615
    summary: "\nRecives a string with the character&apos;s structure and Instantiates the respective mesh \n"
    example: []
    syntax:
      content:
        CSharp: 'public class CharacterBuilder : Singleton<CharacterBuilder>'
        VB: >-
          Public Class CharacterBuilder

              Inherits Singleton(Of CharacterBuilder)
    inheritance:
    - System.Object
    - Utils.Singleton
    - Utils.Singleton{Timba.Games.CharacterFactory.CharacterBuilder}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter(System.Int32,Transform,Vector3)
      commentId: M:Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter(System.Int32,Transform,Vector3)
      language: CSharp
      name:
        CSharp: InstantiateCharacter(Int32, Transform, Vector3)
        VB: InstantiateCharacter(Int32, Transform, Vector3)
      nameWithType:
        CSharp: CharacterBuilder.InstantiateCharacter(Int32, Transform, Vector3)
        VB: CharacterBuilder.InstantiateCharacter(Int32, Transform, Vector3)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter(System.Int32, Transform, Vector3)
        VB: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter(System.Int32, Transform, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: InstantiateCharacter
        path: ''
        startLine: 14621
      syntax:
        content:
          CSharp: public GameObject InstantiateCharacter(int index, Transform parent, Vector3 position)
          VB: Public Function InstantiateCharacter(index As Integer, parent As Transform, position As Vector3) As GameObject
        parameters:
        - id: index
          type: System.Int32
        - id: parent
          type: Global.Transform
        - id: position
          type: Global.Vector3
        return:
          type: Global.GameObject
      overload: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual(System.String,CharacterSlot)
      commentId: M:Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual(System.String,CharacterSlot)
      language: CSharp
      name:
        CSharp: UpdateVisual(String, CharacterSlot)
        VB: UpdateVisual(String, CharacterSlot)
      nameWithType:
        CSharp: CharacterBuilder.UpdateVisual(String, CharacterSlot)
        VB: CharacterBuilder.UpdateVisual(String, CharacterSlot)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual(System.String, CharacterSlot)
        VB: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual(System.String, CharacterSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: UpdateVisual
        path: ''
        startLine: 14634
      syntax:
        content:
          CSharp: public void UpdateVisual(string characterStructure, CharacterSlot targetCharacter)
          VB: Public Sub UpdateVisual(characterStructure As String, targetCharacter As CharacterSlot)
        parameters:
        - id: characterStructure
          type: System.String
        - id: targetCharacter
          type: Global.CharacterSlot
      overload: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.CharacterFactory.ColorSwapper3D
    commentId: T:Timba.Games.CharacterFactory.ColorSwapper3D
    language: CSharp
    name:
      CSharp: ColorSwapper3D
      VB: ColorSwapper3D
    nameWithType:
      CSharp: ColorSwapper3D
      VB: ColorSwapper3D
    qualifiedName:
      CSharp: Timba.Games.CharacterFactory.ColorSwapper3D
      VB: Timba.Games.CharacterFactory.ColorSwapper3D
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.CharacterFactory
    source:
      id: ColorSwapper3D
      path: ''
      startLine: 15970
    syntax:
      content:
        CSharp: 'public class ColorSwapper3D : Singleton<ColorSwapper3D>'
        VB: >-
          Public Class ColorSwapper3D

              Inherits Singleton(Of ColorSwapper3D)
    inheritance:
    - System.Object
    - Utils.Singleton
    - Utils.Singleton{Timba.Games.CharacterFactory.ColorSwapper3D}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.PaletteID
      commentId: F:Timba.Games.CharacterFactory.ColorSwapper3D.PaletteID
      language: CSharp
      name:
        CSharp: PaletteID
        VB: PaletteID
      nameWithType:
        CSharp: ColorSwapper3D.PaletteID
        VB: ColorSwapper3D.PaletteID
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.PaletteID
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.PaletteID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: PaletteID
        path: ''
        startLine: 15972
      syntax:
        content:
          CSharp: public string PaletteID
          VB: Public PaletteID As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D._colorsScriptableObject
      commentId: F:Timba.Games.CharacterFactory.ColorSwapper3D._colorsScriptableObject
      language: CSharp
      name:
        CSharp: _colorsScriptableObject
        VB: _colorsScriptableObject
      nameWithType:
        CSharp: ColorSwapper3D._colorsScriptableObject
        VB: ColorSwapper3D._colorsScriptableObject
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D._colorsScriptableObject
        VB: Timba.Games.CharacterFactory.ColorSwapper3D._colorsScriptableObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: _colorsScriptableObject
        path: ''
        startLine: 15974
      syntax:
        content:
          CSharp: public ColorsSO _colorsScriptableObject
          VB: Public _colorsScriptableObject As ColorsSO
        return:
          type: Global.ColorsSO
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.isCharacterViewScene
      commentId: F:Timba.Games.CharacterFactory.ColorSwapper3D.isCharacterViewScene
      language: CSharp
      name:
        CSharp: isCharacterViewScene
        VB: isCharacterViewScene
      nameWithType:
        CSharp: ColorSwapper3D.isCharacterViewScene
        VB: ColorSwapper3D.isCharacterViewScene
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.isCharacterViewScene
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.isCharacterViewScene
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: isCharacterViewScene
        path: ''
        startLine: 15975
      syntax:
        content:
          CSharp: public bool isCharacterViewScene
          VB: Public isCharacterViewScene As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D._materialColorPropertyName
      commentId: F:Timba.Games.CharacterFactory.ColorSwapper3D._materialColorPropertyName
      language: CSharp
      name:
        CSharp: _materialColorPropertyName
        VB: _materialColorPropertyName
      nameWithType:
        CSharp: ColorSwapper3D._materialColorPropertyName
        VB: ColorSwapper3D._materialColorPropertyName
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D._materialColorPropertyName
        VB: Timba.Games.CharacterFactory.ColorSwapper3D._materialColorPropertyName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: _materialColorPropertyName
        path: ''
        startLine: 15979
      syntax:
        content:
          CSharp: public SwapColorPropertyNameSO _materialColorPropertyName
          VB: Public _materialColorPropertyName As SwapColorPropertyNameSO
        return:
          type: Global.SwapColorPropertyNameSO
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
      commentId: M:Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
      language: CSharp
      name:
        CSharp: AddTo3DPartList(RecolorablePart3D)
        VB: AddTo3DPartList(RecolorablePart3D)
      nameWithType:
        CSharp: ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
        VB: ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList(RecolorablePart3D)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: AddTo3DPartList
        path: ''
        startLine: 15985
      syntax:
        content:
          CSharp: public void AddTo3DPartList(RecolorablePart3D part)
          VB: Public Sub AddTo3DPartList(part As RecolorablePart3D)
        parameters:
        - id: part
          type: Global.RecolorablePart3D
      overload: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart(RecolorablePart3D)
      commentId: M:Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart(RecolorablePart3D)
      language: CSharp
      name:
        CSharp: RemovePart(RecolorablePart3D)
        VB: RemovePart(RecolorablePart3D)
      nameWithType:
        CSharp: ColorSwapper3D.RemovePart(RecolorablePart3D)
        VB: ColorSwapper3D.RemovePart(RecolorablePart3D)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart(RecolorablePart3D)
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart(RecolorablePart3D)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: RemovePart
        path: ''
        startLine: 15991
      syntax:
        content:
          CSharp: public void RemovePart(RecolorablePart3D part)
          VB: Public Sub RemovePart(part As RecolorablePart3D)
        parameters:
        - id: part
          type: Global.RecolorablePart3D
      overload: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette
      commentId: M:Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette
      language: CSharp
      name:
        CSharp: SwapPallette()
        VB: SwapPallette()
      nameWithType:
        CSharp: ColorSwapper3D.SwapPallette()
        VB: ColorSwapper3D.SwapPallette()
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette()
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: SwapPallette
        path: ''
        startLine: 15995
      syntax:
        content:
          CSharp: public void SwapPallette()
          VB: Public Sub SwapPallette
      overload: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette
      commentId: M:Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette
      language: CSharp
      name:
        CSharp: UpdatePartPallette()
        VB: UpdatePartPallette()
      nameWithType:
        CSharp: ColorSwapper3D.UpdatePartPallette()
        VB: ColorSwapper3D.UpdatePartPallette()
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette()
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: UpdatePartPallette
        path: ''
        startLine: 16006
      syntax:
        content:
          CSharp: public void UpdatePartPallette()
          VB: Public Sub UpdatePartPallette
      overload: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet(System.Int32)
      commentId: M:Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet(System.Int32)
      language: CSharp
      name:
        CSharp: AssignPallet(Int32)
        VB: AssignPallet(Int32)
      nameWithType:
        CSharp: ColorSwapper3D.AssignPallet(Int32)
        VB: ColorSwapper3D.AssignPallet(Int32)
      qualifiedName:
        CSharp: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet(System.Int32)
        VB: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.CharacterFactory
      source:
        id: AssignPallet
        path: ''
        startLine: 16014
      syntax:
        content:
          CSharp: public void AssignPallet(int index)
          VB: Public Sub AssignPallet(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails
  commentId: N:Timba.Games.SacredTails
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails
    VB: Timba.Games.SacredTails
  nameWithType:
    CSharp: Timba.Games.SacredTails
    VB: Timba.Games.SacredTails
  qualifiedName:
    CSharp: Timba.Games.SacredTails
    VB: Timba.Games.SacredTails
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.DisconnectManager
    commentId: T:Timba.Games.SacredTails.DisconnectManager
    language: CSharp
    name:
      CSharp: DisconnectManager
      VB: DisconnectManager
    nameWithType:
      CSharp: DisconnectManager
      VB: DisconnectManager
    qualifiedName:
      CSharp: Timba.Games.SacredTails.DisconnectManager
      VB: Timba.Games.SacredTails.DisconnectManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails
    source:
      id: DisconnectManager
      path: ''
      startLine: 31016
    syntax:
      content:
        CSharp: 'public class DisconnectManager : MonoBehaviour'
        VB: >-
          Public Class DisconnectManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.DisconnectManager.logout
      commentId: F:Timba.Games.SacredTails.DisconnectManager.logout
      language: CSharp
      name:
        CSharp: logout
        VB: logout
      nameWithType:
        CSharp: DisconnectManager.logout
        VB: DisconnectManager.logout
      qualifiedName:
        CSharp: Timba.Games.SacredTails.DisconnectManager.logout
        VB: Timba.Games.SacredTails.DisconnectManager.logout
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: logout
        path: ''
        startLine: 31018
      syntax:
        content:
          CSharp: public Logout logout
          VB: Public logout As Logout
        return:
          type: Global.Logout
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.DisconnectManager.LogIn
      commentId: M:Timba.Games.SacredTails.DisconnectManager.LogIn
      language: CSharp
      name:
        CSharp: LogIn()
        VB: LogIn()
      nameWithType:
        CSharp: DisconnectManager.LogIn()
        VB: DisconnectManager.LogIn()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.DisconnectManager.LogIn()
        VB: Timba.Games.SacredTails.DisconnectManager.LogIn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: LogIn
        path: ''
        startLine: 31021
      syntax:
        content:
          CSharp: public void LogIn()
          VB: Public Sub LogIn
      overload: Timba.Games.SacredTails.DisconnectManager.LogIn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.DisconnectManager.Update
      commentId: M:Timba.Games.SacredTails.DisconnectManager.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: DisconnectManager.Update()
        VB: DisconnectManager.Update()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.DisconnectManager.Update()
        VB: Timba.Games.SacredTails.DisconnectManager.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: Update
        path: ''
        startLine: 31026
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: Timba.Games.SacredTails.DisconnectManager.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.IWallet
    commentId: T:Timba.Games.SacredTails.IWallet
    language: CSharp
    name:
      CSharp: IWallet
      VB: IWallet
    nameWithType:
      CSharp: IWallet
      VB: IWallet
    qualifiedName:
      CSharp: Timba.Games.SacredTails.IWallet
      VB: Timba.Games.SacredTails.IWallet
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails
    source:
      id: IWallet
      path: ''
      startLine: 32425
    syntax:
      content:
        CSharp: public interface IWallet
        VB: >-
          Public Interface IWallet

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Games.SacredTails.IWallet.UpdateUserWallet
      commentId: M:Timba.Games.SacredTails.IWallet.UpdateUserWallet
      language: CSharp
      name:
        CSharp: UpdateUserWallet()
        VB: UpdateUserWallet()
      nameWithType:
        CSharp: IWallet.UpdateUserWallet()
        VB: IWallet.UpdateUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.IWallet.UpdateUserWallet()
        VB: Timba.Games.SacredTails.IWallet.UpdateUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: UpdateUserWallet
        path: ''
        startLine: 32427
      syntax:
        content:
          CSharp: void UpdateUserWallet()
          VB: Sub UpdateUserWallet
      overload: Timba.Games.SacredTails.IWallet.UpdateUserWallet*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      commentId: M:Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      language: CSharp
      name:
        CSharp: GetUserCurrentCoins()
        VB: GetUserCurrentCoins()
      nameWithType:
        CSharp: IWallet.GetUserCurrentCoins()
        VB: IWallet.GetUserCurrentCoins()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins()
        VB: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: GetUserCurrentCoins
        path: ''
        startLine: 32428
      syntax:
        content:
          CSharp: int GetUserCurrentCoins()
          VB: Function GetUserCurrentCoins As Integer
        return:
          type: System.Int32
      overload: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.IWallet.HideUserWallet
      commentId: M:Timba.Games.SacredTails.IWallet.HideUserWallet
      language: CSharp
      name:
        CSharp: HideUserWallet()
        VB: HideUserWallet()
      nameWithType:
        CSharp: IWallet.HideUserWallet()
        VB: IWallet.HideUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.IWallet.HideUserWallet()
        VB: Timba.Games.SacredTails.IWallet.HideUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: HideUserWallet
        path: ''
        startLine: 32429
      syntax:
        content:
          CSharp: void HideUserWallet()
          VB: Sub HideUserWallet
      overload: Timba.Games.SacredTails.IWallet.HideUserWallet*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.IWallet.ShowUserWallet
      commentId: M:Timba.Games.SacredTails.IWallet.ShowUserWallet
      language: CSharp
      name:
        CSharp: ShowUserWallet()
        VB: ShowUserWallet()
      nameWithType:
        CSharp: IWallet.ShowUserWallet()
        VB: IWallet.ShowUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.IWallet.ShowUserWallet()
        VB: Timba.Games.SacredTails.IWallet.ShowUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: ShowUserWallet
        path: ''
        startLine: 32430
      syntax:
        content:
          CSharp: void ShowUserWallet()
          VB: Sub ShowUserWallet
      overload: Timba.Games.SacredTails.IWallet.ShowUserWallet*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Games.SacredTails.WalletController
    commentId: T:Timba.Games.SacredTails.WalletController
    language: CSharp
    name:
      CSharp: WalletController
      VB: WalletController
    nameWithType:
      CSharp: WalletController
      VB: WalletController
    qualifiedName:
      CSharp: Timba.Games.SacredTails.WalletController
      VB: Timba.Games.SacredTails.WalletController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails
    source:
      id: WalletController
      path: ''
      startLine: 32441
    syntax:
      content:
        CSharp: 'public class WalletController : MonoBehaviour, IWallet'
        VB: >-
          Public Class WalletController

              Inherits MonoBehaviour

              Implements IWallet
    inheritance:
    - System.Object
    implements:
    - Timba.Games.SacredTails.IWallet
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.WalletController.Start
      commentId: M:Timba.Games.SacredTails.WalletController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: WalletController.Start()
        VB: WalletController.Start()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.Start()
        VB: Timba.Games.SacredTails.WalletController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: Start
        path: ''
        startLine: 32449
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Timba.Games.SacredTails.WalletController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.GetPlayerCurrency(GetUserInventoryResult)
      commentId: M:Timba.Games.SacredTails.WalletController.GetPlayerCurrency(GetUserInventoryResult)
      language: CSharp
      name:
        CSharp: GetPlayerCurrency(GetUserInventoryResult)
        VB: GetPlayerCurrency(GetUserInventoryResult)
      nameWithType:
        CSharp: WalletController.GetPlayerCurrency(GetUserInventoryResult)
        VB: WalletController.GetPlayerCurrency(GetUserInventoryResult)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.GetPlayerCurrency(GetUserInventoryResult)
        VB: Timba.Games.SacredTails.WalletController.GetPlayerCurrency(GetUserInventoryResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: GetPlayerCurrency
        path: ''
        startLine: 32461
      syntax:
        content:
          CSharp: public void GetPlayerCurrency(GetUserInventoryResult result)
          VB: Public Sub GetPlayerCurrency(result As GetUserInventoryResult)
        parameters:
        - id: result
          type: Global.GetUserInventoryResult
      overload: Timba.Games.SacredTails.WalletController.GetPlayerCurrency*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins
      commentId: M:Timba.Games.SacredTails.WalletController.GetUserCurrentCoins
      language: CSharp
      name:
        CSharp: GetUserCurrentCoins()
        VB: GetUserCurrentCoins()
      nameWithType:
        CSharp: WalletController.GetUserCurrentCoins()
        VB: WalletController.GetUserCurrentCoins()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins()
        VB: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: GetUserCurrentCoins
        path: ''
        startLine: 32466
      syntax:
        content:
          CSharp: public int GetUserCurrentCoins()
          VB: Public Function GetUserCurrentCoins As Integer
        return:
          type: System.Int32
      overload: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins*
      implements:
      - Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.UpdateUserWallet
      commentId: M:Timba.Games.SacredTails.WalletController.UpdateUserWallet
      language: CSharp
      name:
        CSharp: UpdateUserWallet()
        VB: UpdateUserWallet()
      nameWithType:
        CSharp: WalletController.UpdateUserWallet()
        VB: WalletController.UpdateUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.UpdateUserWallet()
        VB: Timba.Games.SacredTails.WalletController.UpdateUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: UpdateUserWallet
        path: ''
        startLine: 32471
      syntax:
        content:
          CSharp: public void UpdateUserWallet()
          VB: Public Sub UpdateUserWallet
      overload: Timba.Games.SacredTails.WalletController.UpdateUserWallet*
      implements:
      - Timba.Games.SacredTails.IWallet.UpdateUserWallet
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.ShowUserWallet
      commentId: M:Timba.Games.SacredTails.WalletController.ShowUserWallet
      language: CSharp
      name:
        CSharp: ShowUserWallet()
        VB: ShowUserWallet()
      nameWithType:
        CSharp: WalletController.ShowUserWallet()
        VB: WalletController.ShowUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.ShowUserWallet()
        VB: Timba.Games.SacredTails.WalletController.ShowUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: ShowUserWallet
        path: ''
        startLine: 32476
      syntax:
        content:
          CSharp: public void ShowUserWallet()
          VB: Public Sub ShowUserWallet
      overload: Timba.Games.SacredTails.WalletController.ShowUserWallet*
      implements:
      - Timba.Games.SacredTails.IWallet.ShowUserWallet
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.HideUserWallet
      commentId: M:Timba.Games.SacredTails.WalletController.HideUserWallet
      language: CSharp
      name:
        CSharp: HideUserWallet()
        VB: HideUserWallet()
      nameWithType:
        CSharp: WalletController.HideUserWallet()
        VB: WalletController.HideUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.HideUserWallet()
        VB: Timba.Games.SacredTails.WalletController.HideUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: HideUserWallet
        path: ''
        startLine: 32481
      syntax:
        content:
          CSharp: public void HideUserWallet()
          VB: Public Sub HideUserWallet
      overload: Timba.Games.SacredTails.WalletController.HideUserWallet*
      implements:
      - Timba.Games.SacredTails.IWallet.HideUserWallet
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletController.IsReady
      commentId: M:Timba.Games.SacredTails.WalletController.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: WalletController.IsReady()
        VB: WalletController.IsReady()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletController.IsReady()
        VB: Timba.Games.SacredTails.WalletController.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails
      source:
        id: IsReady
        path: ''
        startLine: 32486
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.WalletController.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.Lobby
  commentId: N:Timba.Games.SacredTails.Lobby
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.Lobby
    VB: Timba.Games.SacredTails.Lobby
  nameWithType:
    CSharp: Timba.Games.SacredTails.Lobby
    VB: Timba.Games.SacredTails.Lobby
  qualifiedName:
    CSharp: Timba.Games.SacredTails.Lobby
    VB: Timba.Games.SacredTails.Lobby
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.Lobby.LobbySceneController
    commentId: T:Timba.Games.SacredTails.Lobby.LobbySceneController
    language: CSharp
    name:
      CSharp: LobbySceneController
      VB: LobbySceneController
    nameWithType:
      CSharp: LobbySceneController
      VB: LobbySceneController
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.LobbySceneController
      VB: Timba.Games.SacredTails.Lobby.LobbySceneController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: LobbySceneController
      path: ''
      startLine: 17502
    syntax:
      content:
        CSharp: 'public class LobbySceneController : SceneController'
        VB: >-
          Public Class LobbySceneController

              Inherits SceneController
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.LobbySceneController.Init(System.Object,Action{System.Boolean,System.UInt32,System.String})
      commentId: M:Timba.Games.SacredTails.Lobby.LobbySceneController.Init(System.Object,Action{System.Boolean,System.UInt32,System.String})
      language: CSharp
      name:
        CSharp: Init(Object, Action<Boolean, UInt32, String>)
        VB: Init(Object, Action(Of Boolean, UInt32, String))
      nameWithType:
        CSharp: LobbySceneController.Init(Object, Action<Boolean, UInt32, String>)
        VB: LobbySceneController.Init(Object, Action(Of Boolean, UInt32, String))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.LobbySceneController.Init(System.Object, Action<System.Boolean, System.UInt32, System.String>)
        VB: Timba.Games.SacredTails.Lobby.LobbySceneController.Init(System.Object, Action(Of System.Boolean, System.UInt32, System.String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Init
        path: ''
        startLine: 17504
      syntax:
        content:
          CSharp: public override void Init(object data, Action<bool, uint, string> callback = null)
          VB: Public Overrides Sub Init(data As Object, callback As Action(Of Boolean, UInteger, String) = Nothing)
        parameters:
        - id: data
          type: System.Object
        - id: callback
          type: Global.Action{System.Boolean,System.UInt32,System.String}
      overload: Timba.Games.SacredTails.Lobby.LobbySceneController.Init*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManager
    language: CSharp
    name:
      CSharp: PartyManager
      VB: PartyManager
    nameWithType:
      CSharp: PartyManager
      VB: PartyManager
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.PartyManager
      VB: Timba.Games.SacredTails.Lobby.PartyManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: PartyManager
      path: ''
      startLine: 17676
    syntax:
      content:
        CSharp: 'public abstract class PartyManager : MonoBehaviour'
        VB: >-
          Public MustInherit Class PartyManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
      commentId: F:Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
      language: CSharp
      name:
        CSharp: selectorPos
        VB: selectorPos
      nameWithType:
        CSharp: PartyManager.selectorPos
        VB: PartyManager.selectorPos
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
        VB: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: selectorPos
        path: ''
        startLine: 17681
      syntax:
        content:
          CSharp: public int selectorPos
          VB: Public selectorPos As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
      commentId: F:Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
      language: CSharp
      name:
        CSharp: shinseiSpawner
        VB: shinseiSpawner
      nameWithType:
        CSharp: PartyManager.shinseiSpawner
        VB: PartyManager.shinseiSpawner
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
        VB: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: shinseiSpawner
        path: ''
        startLine: 17683
      syntax:
        content:
          CSharp: public ShinseiSpawner shinseiSpawner
          VB: Public shinseiSpawner As ShinseiSpawner
        return:
          type: Global.ShinseiSpawner
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManager.Start
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: PartyManager.Start()
        VB: PartyManager.Start()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.Start()
        VB: Timba.Games.SacredTails.Lobby.PartyManager.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Start
        path: ''
        startLine: 17691
      syntax:
        content:
          CSharp: public virtual void Start()
          VB: Public Overridable Sub Start
      overload: Timba.Games.SacredTails.Lobby.PartyManager.Start*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
      language: CSharp
      name:
        CSharp: UpdateShinseis()
        VB: UpdateShinseis()
      nameWithType:
        CSharp: PartyManager.UpdateShinseis()
        VB: PartyManager.UpdateShinseis()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis()
        VB: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: UpdateShinseis
        path: ''
        startLine: 17696
      syntax:
        content:
          CSharp: public void UpdateShinseis()
          VB: Public Sub UpdateShinseis
      overload: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
      language: CSharp
      name:
        CSharp: Initialize(Action<Int32, ShinseiSlot>)
        VB: Initialize(Action(Of Int32, ShinseiSlot))
      nameWithType:
        CSharp: PartyManager.Initialize(Action<Int32, ShinseiSlot>)
        VB: PartyManager.Initialize(Action(Of Int32, ShinseiSlot))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action<System.Int32, ShinseiSlot>)
        VB: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action(Of System.Int32, ShinseiSlot))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Initialize
        path: ''
        startLine: 17729
      syntax:
        content:
          CSharp: public virtual void Initialize(Action<int, ShinseiSlot> onNewSlotCreated = null)
          VB: Public Overridable Sub Initialize(onNewSlotCreated As Action(Of Integer, ShinseiSlot) = Nothing)
        parameters:
        - id: onNewSlotCreated
          type: Global.Action{System.Int32,ShinseiSlot}
      overload: Timba.Games.SacredTails.Lobby.PartyManager.Initialize*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
      language: CSharp
      name:
        CSharp: ChangeOnClickSlotAction(UnityAction<Int32, ShinseiSlot>)
        VB: ChangeOnClickSlotAction(UnityAction(Of Int32, ShinseiSlot))
      nameWithType:
        CSharp: PartyManager.ChangeOnClickSlotAction(UnityAction<Int32, ShinseiSlot>)
        VB: PartyManager.ChangeOnClickSlotAction(UnityAction(Of Int32, ShinseiSlot))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction<System.Int32, ShinseiSlot>)
        VB: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction(Of System.Int32, ShinseiSlot))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: ChangeOnClickSlotAction
        path: ''
        startLine: 17774
      syntax:
        content:
          CSharp: public virtual void ChangeOnClickSlotAction(UnityAction<int, ShinseiSlot> onClick = null)
          VB: Public Overridable Sub ChangeOnClickSlotAction(onClick As UnityAction(Of Integer, ShinseiSlot) = Nothing)
        parameters:
        - id: onClick
          type: Global.UnityAction{System.Int32,ShinseiSlot}
      overload: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
      language: CSharp
      name:
        CSharp: OnClickSlot(Int32, ShinseiSlot)
        VB: OnClickSlot(Int32, ShinseiSlot)
      nameWithType:
        CSharp: PartyManager.OnClickSlot(Int32, ShinseiSlot)
        VB: PartyManager.OnClickSlot(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32, ShinseiSlot)
        VB: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32, ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: OnClickSlot
        path: ''
        startLine: 17790
      syntax:
        content:
          CSharp: public virtual void OnClickSlot(int listIndex, ShinseiSlot eventShinseiSlot)
          VB: Public Overridable Sub OnClickSlot(listIndex As Integer, eventShinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: eventShinseiSlot
          type: Global.ShinseiSlot
      overload: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
      language: CSharp
      name:
        CSharp: HidePanel()
        VB: HidePanel()
      nameWithType:
        CSharp: PartyManager.HidePanel()
        VB: PartyManager.HidePanel()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel()
        VB: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: HidePanel
        path: ''
        startLine: 17822
      syntax:
        content:
          CSharp: public virtual void HidePanel()
          VB: Public Overridable Sub HidePanel
      overload: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManagerLobby
    language: CSharp
    name:
      CSharp: PartyManagerLobby
      VB: PartyManagerLobby
    nameWithType:
      CSharp: PartyManagerLobby
      VB: PartyManagerLobby
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.PartyManagerLobby
      VB: Timba.Games.SacredTails.Lobby.PartyManagerLobby
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: PartyManagerLobby
      path: ''
      startLine: 17837
    syntax:
      content:
        CSharp: 'public class PartyManagerLobby : PartyManager'
        VB: >-
          Public Class PartyManagerLobby

              Inherits PartyManager
    inheritance:
    - System.Object
    - Timba.Games.SacredTails.Lobby.PartyManager
    inheritedMembers:
    - Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
    - Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
    - Timba.Games.SacredTails.Lobby.PartyManager.Start
    - Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
    - Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
    - Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize(Action{System.Int32,ShinseiSlot})
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize(Action{System.Int32,ShinseiSlot})
      language: CSharp
      name:
        CSharp: Initialize(Action<Int32, ShinseiSlot>)
        VB: Initialize(Action(Of Int32, ShinseiSlot))
      nameWithType:
        CSharp: PartyManagerLobby.Initialize(Action<Int32, ShinseiSlot>)
        VB: PartyManagerLobby.Initialize(Action(Of Int32, ShinseiSlot))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize(Action<System.Int32, ShinseiSlot>)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize(Action(Of System.Int32, ShinseiSlot))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Initialize
        path: ''
        startLine: 17839
      syntax:
        content:
          CSharp: public override void Initialize(Action<int, ShinseiSlot> onNewSlotCreated = null)
          VB: Public Overrides Sub Initialize(onNewSlotCreated As Action(Of Integer, ShinseiSlot) = Nothing)
        parameters:
        - id: onNewSlotCreated
          type: Global.Action{System.Int32,ShinseiSlot}
      overload: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize*
      overridden: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot(System.Int32,ShinseiSlot)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot(System.Int32,ShinseiSlot)
      language: CSharp
      name:
        CSharp: OnClickSlot(Int32, ShinseiSlot)
        VB: OnClickSlot(Int32, ShinseiSlot)
      nameWithType:
        CSharp: PartyManagerLobby.OnClickSlot(Int32, ShinseiSlot)
        VB: PartyManagerLobby.OnClickSlot(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot(System.Int32, ShinseiSlot)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot(System.Int32, ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: OnClickSlot
        path: ''
        startLine: 17852
      syntax:
        content:
          CSharp: public override void OnClickSlot(int listIndex, ShinseiSlot eventShinseiSlot)
          VB: Public Overrides Sub OnClickSlot(listIndex As Integer, eventShinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: eventShinseiSlot
          type: Global.ShinseiSlot
      overload: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot*
      overridden: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn(System.Int32)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn(System.Int32)
      language: CSharp
      name:
        CSharp: SwapShinseiBtn(Int32)
        VB: SwapShinseiBtn(Int32)
      nameWithType:
        CSharp: PartyManagerLobby.SwapShinseiBtn(Int32)
        VB: PartyManagerLobby.SwapShinseiBtn(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn(System.Int32)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: SwapShinseiBtn
        path: ''
        startLine: 17858
      syntax:
        content:
          CSharp: public void SwapShinseiBtn(int dir)
          VB: Public Sub SwapShinseiBtn(dir As Integer)
        parameters:
        - id: dir
          type: System.Int32
      overload: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.Lobby.PartyManagerVault
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManagerVault
    language: CSharp
    name:
      CSharp: PartyManagerVault
      VB: PartyManagerVault
    nameWithType:
      CSharp: PartyManagerVault
      VB: PartyManagerVault
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault
      VB: Timba.Games.SacredTails.Lobby.PartyManagerVault
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: PartyManagerVault
      path: ''
      startLine: 17894
    syntax:
      content:
        CSharp: 'public class PartyManagerVault : PartyManager'
        VB: >-
          Public Class PartyManagerVault

              Inherits PartyManager
    inheritance:
    - System.Object
    - Timba.Games.SacredTails.Lobby.PartyManager
    inheritedMembers:
    - Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
    - Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
    - Timba.Games.SacredTails.Lobby.PartyManager.Start
    - Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
    - Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
    - Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.shinseiPreviewPanel
      commentId: F:Timba.Games.SacredTails.Lobby.PartyManagerVault.shinseiPreviewPanel
      language: CSharp
      name:
        CSharp: shinseiPreviewPanel
        VB: shinseiPreviewPanel
      nameWithType:
        CSharp: PartyManagerVault.shinseiPreviewPanel
        VB: PartyManagerVault.shinseiPreviewPanel
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.shinseiPreviewPanel
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.shinseiPreviewPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: shinseiPreviewPanel
        path: ''
        startLine: 17896
      syntax:
        content:
          CSharp: public ShinseiPreviewPanelManager shinseiPreviewPanel
          VB: Public shinseiPreviewPanel As ShinseiPreviewPanelManager
        return:
          type: Global.ShinseiPreviewPanelManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.selectableUi
      commentId: F:Timba.Games.SacredTails.Lobby.PartyManagerVault.selectableUi
      language: CSharp
      name:
        CSharp: selectableUi
        VB: selectableUi
      nameWithType:
        CSharp: PartyManagerVault.selectableUi
        VB: PartyManagerVault.selectableUi
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.selectableUi
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.selectableUi
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: selectableUi
        path: ''
        startLine: 17897
      syntax:
        content:
          CSharp: public SelectableUi selectableUi
          VB: Public selectableUi As SelectableUi
        return:
          type: Global.SelectableUi
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize(Action{System.Int32,ShinseiSlot})
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize(Action{System.Int32,ShinseiSlot})
      language: CSharp
      name:
        CSharp: Initialize(Action<Int32, ShinseiSlot>)
        VB: Initialize(Action(Of Int32, ShinseiSlot))
      nameWithType:
        CSharp: PartyManagerVault.Initialize(Action<Int32, ShinseiSlot>)
        VB: PartyManagerVault.Initialize(Action(Of Int32, ShinseiSlot))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize(Action<System.Int32, ShinseiSlot>)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize(Action(Of System.Int32, ShinseiSlot))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Initialize
        path: ''
        startLine: 17899
      syntax:
        content:
          CSharp: public override void Initialize(Action<int, ShinseiSlot> onNewSlotCreated = null)
          VB: Public Overrides Sub Initialize(onNewSlotCreated As Action(Of Integer, ShinseiSlot) = Nothing)
        parameters:
        - id: onNewSlotCreated
          type: Global.Action{System.Int32,ShinseiSlot}
      overload: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize*
      overridden: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot(System.Int32,ShinseiSlot)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot(System.Int32,ShinseiSlot)
      language: CSharp
      name:
        CSharp: OnClickSlot(Int32, ShinseiSlot)
        VB: OnClickSlot(Int32, ShinseiSlot)
      nameWithType:
        CSharp: PartyManagerVault.OnClickSlot(Int32, ShinseiSlot)
        VB: PartyManagerVault.OnClickSlot(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot(System.Int32, ShinseiSlot)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot(System.Int32, ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: OnClickSlot
        path: ''
        startLine: 17912
      syntax:
        content:
          CSharp: public override void OnClickSlot(int listIndex, ShinseiSlot eventShinseiSlot)
          VB: Public Overrides Sub OnClickSlot(listIndex As Integer, eventShinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: eventShinseiSlot
          type: Global.ShinseiSlot
      overload: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot*
      overridden: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei(System.Int32)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei(System.Int32)
      language: CSharp
      name:
        CSharp: DisplayPreviewForShisnei(Int32)
        VB: DisplayPreviewForShisnei(Int32)
      nameWithType:
        CSharp: PartyManagerVault.DisplayPreviewForShisnei(Int32)
        VB: PartyManagerVault.DisplayPreviewForShisnei(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei(System.Int32)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: DisplayPreviewForShisnei
        path: ''
        startLine: 17924
      syntax:
        content:
          CSharp: public void DisplayPreviewForShisnei(int shinseIndex)
          VB: Public Sub DisplayPreviewForShisnei(shinseIndex As Integer)
        parameters:
        - id: shinseIndex
          type: System.Int32
      overload: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis(System.Int32,ShinseiSlot,System.Int32,ShinseiSlot)
      commentId: M:Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis(System.Int32,ShinseiSlot,System.Int32,ShinseiSlot)
      language: CSharp
      name:
        CSharp: ChangeShinseis(Int32, ShinseiSlot, Int32, ShinseiSlot)
        VB: ChangeShinseis(Int32, ShinseiSlot, Int32, ShinseiSlot)
      nameWithType:
        CSharp: PartyManagerVault.ChangeShinseis(Int32, ShinseiSlot, Int32, ShinseiSlot)
        VB: PartyManagerVault.ChangeShinseis(Int32, ShinseiSlot, Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis(System.Int32, ShinseiSlot, System.Int32, ShinseiSlot)
        VB: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis(System.Int32, ShinseiSlot, System.Int32, ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: ChangeShinseis
        path: ''
        startLine: 17930
      syntax:
        content:
          CSharp: public void ChangeShinseis(int listIndexFrom, ShinseiSlot shinseiSlotFrom, int listIndexTarget, ShinseiSlot shinseiSlotTarget)
          VB: Public Sub ChangeShinseis(listIndexFrom As Integer, shinseiSlotFrom As ShinseiSlot, listIndexTarget As Integer, shinseiSlotTarget As ShinseiSlot)
        parameters:
        - id: listIndexFrom
          type: System.Int32
        - id: shinseiSlotFrom
          type: Global.ShinseiSlot
        - id: listIndexTarget
          type: System.Int32
        - id: shinseiSlotTarget
          type: Global.ShinseiSlot
      overload: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController
    commentId: T:Timba.Games.SacredTails.Lobby.ShinseiVaultController
    language: CSharp
    name:
      CSharp: ShinseiVaultController
      VB: ShinseiVaultController
    nameWithType:
      CSharp: ShinseiVaultController
      VB: ShinseiVaultController
    qualifiedName:
      CSharp: Timba.Games.SacredTails.Lobby.ShinseiVaultController
      VB: Timba.Games.SacredTails.Lobby.ShinseiVaultController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.Lobby
    source:
      id: ShinseiVaultController
      path: ''
      startLine: 19015
    syntax:
      content:
        CSharp: 'public class ShinseiVaultController : MonoBehaviour'
        VB: >-
          Public Class ShinseiVaultController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start
      commentId: M:Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: ShinseiVaultController.Start()
        VB: ShinseiVaultController.Start()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start()
        VB: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Start
        path: ''
        startLine: 19050
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize
      commentId: M:Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: ShinseiVaultController.Initialize()
        VB: ShinseiVaultController.Initialize()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize()
        VB: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: Initialize
        path: ''
        startLine: 19055
      syntax:
        content:
          CSharp: public void Initialize()
          VB: Public Sub Initialize
      overload: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected(System.Int32,ShinseiSlot)
      commentId: M:Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected(System.Int32,ShinseiSlot)
      language: CSharp
      name:
        CSharp: OnVaultShinseiSelected(Int32, ShinseiSlot)
        VB: OnVaultShinseiSelected(Int32, ShinseiSlot)
      nameWithType:
        CSharp: ShinseiVaultController.OnVaultShinseiSelected(Int32, ShinseiSlot)
        VB: ShinseiVaultController.OnVaultShinseiSelected(Int32, ShinseiSlot)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected(System.Int32, ShinseiSlot)
        VB: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected(System.Int32, ShinseiSlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: OnVaultShinseiSelected
        path: ''
        startLine: 19108
      syntax:
        content:
          CSharp: public void OnVaultShinseiSelected(int listIndex, ShinseiSlot vaultShinseiSlot)
          VB: Public Sub OnVaultShinseiSelected(listIndex As Integer, vaultShinseiSlot As ShinseiSlot)
        parameters:
        - id: listIndex
          type: System.Int32
        - id: vaultShinseiSlot
          type: Global.ShinseiSlot
      overload: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei(System.Int32)
      commentId: M:Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei(System.Int32)
      language: CSharp
      name:
        CSharp: DisplayPreviewForShisnei(Int32)
        VB: DisplayPreviewForShisnei(Int32)
      nameWithType:
        CSharp: ShinseiVaultController.DisplayPreviewForShisnei(Int32)
        VB: ShinseiVaultController.DisplayPreviewForShisnei(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei(System.Int32)
        VB: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.Lobby
      source:
        id: DisplayPreviewForShisnei
        path: ''
        startLine: 19172
      syntax:
        content:
          CSharp: public void DisplayPreviewForShisnei(int shinseIndex)
          VB: Public Sub DisplayPreviewForShisnei(shinseIndex As Integer)
        parameters:
        - id: shinseIndex
          type: System.Int32
      overload: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.LobbyDatabase
  commentId: N:Timba.Games.SacredTails.LobbyDatabase
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.LobbyDatabase
    VB: Timba.Games.SacredTails.LobbyDatabase
  nameWithType:
    CSharp: Timba.Games.SacredTails.LobbyDatabase
    VB: Timba.Games.SacredTails.LobbyDatabase
  qualifiedName:
    CSharp: Timba.Games.SacredTails.LobbyDatabase
    VB: Timba.Games.SacredTails.LobbyDatabase
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    language: CSharp
    name:
      CSharp: ILobbydatabase
      VB: ILobbydatabase
    nameWithType:
      CSharp: ILobbydatabase
      VB: ILobbydatabase
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
      VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: ILobbydatabase
      path: ''
      startLine: 25682
    syntax:
      content:
        CSharp: public interface ILobbydatabase
        VB: >-
          Public Interface ILobbydatabase

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      commentId: P:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      language: CSharp
      name:
        CSharp: CurrentUserData
        VB: CurrentUserData
      nameWithType:
        CSharp: ILobbydatabase.CurrentUserData
        VB: ILobbydatabase.CurrentUserData
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: CurrentUserData
        path: ''
        startLine: 25684
      syntax:
        content:
          CSharp: LobbyPlayerBasePayload CurrentUserData { get; }
          VB: ReadOnly Property CurrentUserData As LobbyPlayerBasePayload
        parameters: []
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      language: CSharp
      name:
        CSharp: ConnectToLobby(Int32, LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: ConnectToLobby(Int32, LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      nameWithType:
        CSharp: ILobbydatabase.ConnectToLobby(Int32, LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: ILobbydatabase.ConnectToLobby(Int32, LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: ConnectToLobby
        path: ''
        startLine: 25685
      syntax:
        content:
          CSharp: void ConnectToLobby(int lobbyId, LobbyPlayerBasePayload userData, Action<ExecuteFunctionResult> resultCallback)
          VB: Sub ConnectToLobby(lobbyId As Integer, userData As LobbyPlayerBasePayload, resultCallback As Action(Of ExecuteFunctionResult))
        parameters:
        - id: lobbyId
          type: System.Int32
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      language: CSharp
      name:
        CSharp: SetGetPlayersData(LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: SetGetPlayersData(LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      nameWithType:
        CSharp: ILobbydatabase.SetGetPlayersData(LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: ILobbydatabase.SetGetPlayersData(LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: SetGetPlayersData
        path: ''
        startLine: 25686
      syntax:
        content:
          CSharp: void SetGetPlayersData(LobbyPlayerBasePayload userData, Action<ExecuteFunctionResult> resultCallback)
          VB: Sub SetGetPlayersData(userData As LobbyPlayerBasePayload, resultCallback As Action(Of ExecuteFunctionResult))
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
      language: CSharp
      name:
        CSharp: RecievePlayersData(Action<Dictionary<String, LobbyPlayerBasePayload>>)
        VB: RecievePlayersData(Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
      nameWithType:
        CSharp: ILobbydatabase.RecievePlayersData(Action<Dictionary<String, LobbyPlayerBasePayload>>)
        VB: ILobbydatabase.RecievePlayersData(Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action<System.Collections.Generic.Dictionary<System.String, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload>>)
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action(Of System.Collections.Generic.Dictionary(Of System.String, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: RecievePlayersData
        path: ''
        startLine: 25687
      syntax:
        content:
          CSharp: void RecievePlayersData(Action<Dictionary<string, LobbyPlayerBasePayload>> callback)
          VB: Sub RecievePlayersData(callback As Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
        parameters:
        - id: callback
          type: Global.Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}}
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
      language: CSharp
      name:
        CSharp: SendPlayerData(LobbyPlayerBasePayload, Action<Boolean>)
        VB: SendPlayerData(LobbyPlayerBasePayload, Action(Of Boolean))
      nameWithType:
        CSharp: ILobbydatabase.SendPlayerData(LobbyPlayerBasePayload, Action<Boolean>)
        VB: ILobbydatabase.SendPlayerData(LobbyPlayerBasePayload, Action(Of Boolean))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<System.Boolean>)
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of System.Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: SendPlayerData
        path: ''
        startLine: 25688
      syntax:
        content:
          CSharp: void SendPlayerData(LobbyPlayerBasePayload userData, Action<bool> onSendSuccess = null)
          VB: Sub SendPlayerData(userData As LobbyPlayerBasePayload, onSendSuccess As Action(Of Boolean) = Nothing)
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: onSendSuccess
          type: Global.Action{System.Boolean}
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      language: CSharp
      name:
        CSharp: DisconnectFromLobby(LobbyPlayerBasePayload)
        VB: DisconnectFromLobby(LobbyPlayerBasePayload)
      nameWithType:
        CSharp: ILobbydatabase.DisconnectFromLobby(LobbyPlayerBasePayload)
        VB: ILobbydatabase.DisconnectFromLobby(LobbyPlayerBasePayload)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
        VB: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: DisconnectFromLobby
        path: ''
        startLine: 25689
      syntax:
        content:
          CSharp: void DisconnectFromLobby(LobbyPlayerBasePayload userData)
          VB: Sub DisconnectFromLobby(userData As LobbyPlayerBasePayload)
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      overload: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    language: CSharp
    name:
      CSharp: ITournamentDatabase
      VB: ITournamentDatabase
    nameWithType:
      CSharp: ITournamentDatabase
      VB: ITournamentDatabase
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
      VB: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: ITournamentDatabase
      path: ''
      startLine: 25698
    syntax:
      content:
        CSharp: public interface ITournamentDatabase
        VB: >-
          Public Interface ITournamentDatabase

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
      language: CSharp
      name:
        CSharp: TournamentRequest(String, TypeOfTournamentRequest, Action<ExecuteFunctionResult>, Boolean, Int32)
        VB: TournamentRequest(String, TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), Boolean, Int32)
      nameWithType:
        CSharp: ITournamentDatabase.TournamentRequest(String, TypeOfTournamentRequest, Action<ExecuteFunctionResult>, Boolean, Int32)
        VB: ITournamentDatabase.TournamentRequest(String, TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), Boolean, Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String, Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest, Action<ExecuteFunctionResult>, System.Boolean, System.Int32)
        VB: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String, Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), System.Boolean, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: TournamentRequest
        path: ''
        startLine: 25700
      syntax:
        content:
          CSharp: void TournamentRequest(string tournamentId, TypeOfTournamentRequest typeOfRequest, Action<ExecuteFunctionResult> resultCallback, bool shouldMarkReady = true, int timesTrying = 0)
          VB: Sub TournamentRequest(tournamentId As String, typeOfRequest As TypeOfTournamentRequest, resultCallback As Action(Of ExecuteFunctionResult), shouldMarkReady As Boolean = True, timesTrying As Integer = 0)
        parameters:
        - id: tournamentId
          type: System.String
        - id: typeOfRequest
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
        - id: shouldMarkReady
          type: System.Boolean
        - id: timesTrying
          type: System.Int32
      overload: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
    language: CSharp
    name:
      CSharp: LobbyPlayerBasePayload
      VB: LobbyPlayerBasePayload
    nameWithType:
      CSharp: LobbyPlayerBasePayload
      VB: LobbyPlayerBasePayload
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: LobbyPlayerBasePayload
      path: ''
      startLine: 26261
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class LobbyPlayerBasePayload
        VB: >-
          <Serializable>

          Public Class LobbyPlayerBasePayload
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.connectionId
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.connectionId
      language: CSharp
      name:
        CSharp: connectionId
        VB: connectionId
      nameWithType:
        CSharp: LobbyPlayerBasePayload.connectionId
        VB: LobbyPlayerBasePayload.connectionId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.connectionId
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.connectionId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: connectionId
        path: ''
        startLine: 26264
      syntax:
        content:
          CSharp: public ulong connectionId
          VB: Public connectionId As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.lobby
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.lobby
      language: CSharp
      name:
        CSharp: lobby
        VB: lobby
      nameWithType:
        CSharp: LobbyPlayerBasePayload.lobby
        VB: LobbyPlayerBasePayload.lobby
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.lobby
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.lobby
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: lobby
        path: ''
        startLine: 26265
      syntax:
        content:
          CSharp: public int lobby
          VB: Public lobby As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.displayName
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.displayName
      language: CSharp
      name:
        CSharp: displayName
        VB: displayName
      nameWithType:
        CSharp: LobbyPlayerBasePayload.displayName
        VB: LobbyPlayerBasePayload.displayName
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.displayName
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.displayName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: displayName
        path: ''
        startLine: 26266
      syntax:
        content:
          CSharp: public string displayName
          VB: Public displayName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.encryptIV
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.encryptIV
      language: CSharp
      name:
        CSharp: encryptIV
        VB: encryptIV
      nameWithType:
        CSharp: LobbyPlayerBasePayload.encryptIV
        VB: LobbyPlayerBasePayload.encryptIV
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.encryptIV
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.encryptIV
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: encryptIV
        path: ''
        startLine: 26267
      syntax:
        content:
          CSharp: public string encryptIV
          VB: Public encryptIV As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.chatMessages
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.chatMessages
      language: CSharp
      name:
        CSharp: chatMessages
        VB: chatMessages
      nameWithType:
        CSharp: LobbyPlayerBasePayload.chatMessages
        VB: LobbyPlayerBasePayload.chatMessages
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.chatMessages
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.chatMessages
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: chatMessages
        path: ''
        startLine: 26268
      syntax:
        content:
          CSharp: public List<ChatMessagePayload> chatMessages
          VB: Public chatMessages As List(Of ChatMessagePayload)
        return:
          type: System.Collections.Generic.List{Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playerPosition
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playerPosition
      language: CSharp
      name:
        CSharp: playerPosition
        VB: playerPosition
      nameWithType:
        CSharp: LobbyPlayerBasePayload.playerPosition
        VB: LobbyPlayerBasePayload.playerPosition
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playerPosition
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playerPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: playerPosition
        path: ''
        startLine: 26269
      syntax:
        content:
          CSharp: public SerializableVector3 playerPosition
          VB: Public playerPosition As SerializableVector3
        return:
          type: Global.SerializableVector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playfabIdEncrypted
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playfabIdEncrypted
      language: CSharp
      name:
        CSharp: playfabIdEncrypted
        VB: playfabIdEncrypted
      nameWithType:
        CSharp: LobbyPlayerBasePayload.playfabIdEncrypted
        VB: LobbyPlayerBasePayload.playfabIdEncrypted
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playfabIdEncrypted
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.playfabIdEncrypted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: playfabIdEncrypted
        path: ''
        startLine: 26270
      syntax:
        content:
          CSharp: public string playfabIdEncrypted
          VB: Public playfabIdEncrypted As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.shinseiCompanionDna
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.shinseiCompanionDna
      language: CSharp
      name:
        CSharp: shinseiCompanionDna
        VB: shinseiCompanionDna
      nameWithType:
        CSharp: LobbyPlayerBasePayload.shinseiCompanionDna
        VB: LobbyPlayerBasePayload.shinseiCompanionDna
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.shinseiCompanionDna
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.shinseiCompanionDna
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: shinseiCompanionDna
        path: ''
        startLine: 26271
      syntax:
        content:
          CSharp: public string shinseiCompanionDna
          VB: Public shinseiCompanionDna As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterStyle
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterStyle
      language: CSharp
      name:
        CSharp: characterStyle
        VB: characterStyle
      nameWithType:
        CSharp: LobbyPlayerBasePayload.characterStyle
        VB: LobbyPlayerBasePayload.characterStyle
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterStyle
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterStyle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: characterStyle
        path: ''
        startLine: 26272
      syntax:
        content:
          CSharp: public string characterStyle
          VB: Public characterStyle As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.currentMatchId
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.currentMatchId
      language: CSharp
      name:
        CSharp: currentMatchId
        VB: currentMatchId
      nameWithType:
        CSharp: LobbyPlayerBasePayload.currentMatchId
        VB: LobbyPlayerBasePayload.currentMatchId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.currentMatchId
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.currentMatchId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: currentMatchId
        path: ''
        startLine: 26273
      syntax:
        content:
          CSharp: public string currentMatchId
          VB: Public currentMatchId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterState
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterState
      language: CSharp
      name:
        CSharp: characterState
        VB: characterState
      nameWithType:
        CSharp: LobbyPlayerBasePayload.characterState
        VB: LobbyPlayerBasePayload.characterState
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterState
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.characterState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: characterState
        path: ''
        startLine: 26274
      syntax:
        content:
          CSharp: public int characterState
          VB: Public characterState As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.challengedPlayer
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.challengedPlayer
      language: CSharp
      name:
        CSharp: challengedPlayer
        VB: challengedPlayer
      nameWithType:
        CSharp: LobbyPlayerBasePayload.challengedPlayer
        VB: LobbyPlayerBasePayload.challengedPlayer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.challengedPlayer
        VB: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload.challengedPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: challengedPlayer
        path: ''
        startLine: 26275
      syntax:
        content:
          CSharp: public string challengedPlayer
          VB: Public challengedPlayer As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
    language: CSharp
    name:
      CSharp: ChatMessagePayload
      VB: ChatMessagePayload
    nameWithType:
      CSharp: ChatMessagePayload
      VB: ChatMessagePayload
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
      VB: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: ChatMessagePayload
      path: ''
      startLine: 26277
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class ChatMessagePayload
        VB: >-
          <Serializable>

          Public Class ChatMessagePayload
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.id
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: ChatMessagePayload.id
        VB: ChatMessagePayload.id
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.id
        VB: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: id
        path: ''
        startLine: 26280
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.message
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.message
      language: CSharp
      name:
        CSharp: message
        VB: message
      nameWithType:
        CSharp: ChatMessagePayload.message
        VB: ChatMessagePayload.message
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.message
        VB: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.message
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: message
        path: ''
        startLine: 26281
      syntax:
        content:
          CSharp: public string message
          VB: Public message As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.timeStamp
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.timeStamp
      language: CSharp
      name:
        CSharp: timeStamp
        VB: timeStamp
      nameWithType:
        CSharp: ChatMessagePayload.timeStamp
        VB: ChatMessagePayload.timeStamp
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.timeStamp
        VB: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload.timeStamp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: timeStamp
        path: ''
        startLine: 26282
      syntax:
        content:
          CSharp: public string timeStamp
          VB: Public timeStamp As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
    language: CSharp
    name:
      CSharp: CharacterStateEnum
      VB: CharacterStateEnum
    nameWithType:
      CSharp: CharacterStateEnum
      VB: CharacterStateEnum
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
      VB: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: CharacterStateEnum
      path: ''
      startLine: 26285
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public enum CharacterStateEnum
        VB: >-
          <Serializable>

          Public Enum CharacterStateEnum
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.LOBBY
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.LOBBY
      language: CSharp
      name:
        CSharp: LOBBY
        VB: LOBBY
      nameWithType:
        CSharp: CharacterStateEnum.LOBBY
        VB: CharacterStateEnum.LOBBY
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.LOBBY
        VB: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.LOBBY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: LOBBY
        path: ''
        startLine: 26288
      syntax:
        content:
          CSharp: LOBBY = 0
          VB: LOBBY = 0
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.BACKPACK
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.BACKPACK
      language: CSharp
      name:
        CSharp: BACKPACK
        VB: BACKPACK
      nameWithType:
        CSharp: CharacterStateEnum.BACKPACK
        VB: CharacterStateEnum.BACKPACK
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.BACKPACK
        VB: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.BACKPACK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: BACKPACK
        path: ''
        startLine: 26289
      syntax:
        content:
          CSharp: BACKPACK = 1
          VB: BACKPACK = 1
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.COMBAT
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.COMBAT
      language: CSharp
      name:
        CSharp: COMBAT
        VB: COMBAT
      nameWithType:
        CSharp: CharacterStateEnum.COMBAT
        VB: CharacterStateEnum.COMBAT
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.COMBAT
        VB: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum.COMBAT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: COMBAT
        path: ''
        startLine: 26290
      syntax:
        content:
          CSharp: COMBAT = 2
          VB: COMBAT = 2
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
    language: CSharp
    name:
      CSharp: PlayfabLobbyDatabase
      VB: PlayfabLobbyDatabase
    nameWithType:
      CSharp: PlayfabLobbyDatabase
      VB: PlayfabLobbyDatabase
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
      VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: PlayfabLobbyDatabase
      path: ''
      startLine: 26306
    syntax:
      content:
        CSharp: 'public class PlayfabLobbyDatabase : MonoBehaviour, ILobbydatabase'
        VB: >-
          Public Class PlayfabLobbyDatabase

              Inherits MonoBehaviour

              Implements ILobbydatabase
    inheritance:
    - System.Object
    implements:
    - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentUserData
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentUserData
      language: CSharp
      name:
        CSharp: currentUserData
        VB: currentUserData
      nameWithType:
        CSharp: PlayfabLobbyDatabase.currentUserData
        VB: PlayfabLobbyDatabase.currentUserData
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentUserData
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentUserData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: currentUserData
        path: ''
        startLine: 26309
      syntax:
        content:
          CSharp: public LobbyPlayerBasePayload currentUserData
          VB: Public currentUserData As LobbyPlayerBasePayload
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentLobby
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentLobby
      language: CSharp
      name:
        CSharp: currentLobby
        VB: currentLobby
      nameWithType:
        CSharp: PlayfabLobbyDatabase.currentLobby
        VB: PlayfabLobbyDatabase.currentLobby
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentLobby
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.currentLobby
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: currentLobby
        path: ''
        startLine: 26310
      syntax:
        content:
          CSharp: public int currentLobby
          VB: Public currentLobby As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testPlayfabId
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testPlayfabId
      language: CSharp
      name:
        CSharp: testPlayfabId
        VB: testPlayfabId
      nameWithType:
        CSharp: PlayfabLobbyDatabase.testPlayfabId
        VB: PlayfabLobbyDatabase.testPlayfabId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testPlayfabId
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testPlayfabId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: testPlayfabId
        path: ''
        startLine: 26311
      syntax:
        content:
          CSharp: public string testPlayfabId
          VB: Public testPlayfabId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testUserData
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testUserData
      language: CSharp
      name:
        CSharp: testUserData
        VB: testUserData
      nameWithType:
        CSharp: PlayfabLobbyDatabase.testUserData
        VB: PlayfabLobbyDatabase.testUserData
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testUserData
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.testUserData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: testUserData
        path: ''
        startLine: 26312
      syntax:
        content:
          CSharp: public LobbyPlayerBasePayload testUserData
          VB: Public testUserData As LobbyPlayerBasePayload
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
      commentId: P:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
      language: CSharp
      name:
        CSharp: CurrentUserData
        VB: CurrentUserData
      nameWithType:
        CSharp: PlayfabLobbyDatabase.CurrentUserData
        VB: PlayfabLobbyDatabase.CurrentUserData
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: CurrentUserData
        path: ''
        startLine: 26314
      syntax:
        content:
          CSharp: public LobbyPlayerBasePayload CurrentUserData { get; }
          VB: Public ReadOnly Property CurrentUserData As LobbyPlayerBasePayload
        parameters: []
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: PlayfabLobbyDatabase.Awake()
        VB: PlayfabLobbyDatabase.Awake()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake()
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: Awake
        path: ''
        startLine: 26316
      syntax:
        content:
          CSharp: public void Awake()
          VB: Public Sub Awake
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: PlayfabLobbyDatabase.IsReady()
        VB: PlayfabLobbyDatabase.IsReady()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady()
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: IsReady
        path: ''
        startLine: 26326
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      language: CSharp
      name:
        CSharp: ConnectToLobby(Int32, LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: ConnectToLobby(Int32, LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      nameWithType:
        CSharp: PlayfabLobbyDatabase.ConnectToLobby(Int32, LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: PlayfabLobbyDatabase.ConnectToLobby(Int32, LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby(System.Int32, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby(System.Int32, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: ConnectToLobby
        path: ''
        startLine: 26335
      syntax:
        content:
          CSharp: public void ConnectToLobby(int lobbyId, LobbyPlayerBasePayload userData, Action<ExecuteFunctionResult> resultCallback)
          VB: Public Sub ConnectToLobby(lobbyId As Integer, userData As LobbyPlayerBasePayload, resultCallback As Action(Of ExecuteFunctionResult))
        parameters:
        - id: lobbyId
          type: System.Int32
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      language: CSharp
      name:
        CSharp: SetGetPlayersData(LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: SetGetPlayersData(LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      nameWithType:
        CSharp: PlayfabLobbyDatabase.SetGetPlayersData(LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: PlayfabLobbyDatabase.SetGetPlayersData(LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<ExecuteFunctionResult>)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of ExecuteFunctionResult))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: SetGetPlayersData
        path: ''
        startLine: 26368
      syntax:
        content:
          CSharp: public void SetGetPlayersData(LobbyPlayerBasePayload userData, Action<ExecuteFunctionResult> callback)
          VB: Public Sub SetGetPlayersData(userData As LobbyPlayerBasePayload, callback As Action(Of ExecuteFunctionResult))
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: callback
          type: Global.Action{ExecuteFunctionResult}
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
      language: CSharp
      name:
        CSharp: RecievePlayersData(Action<Dictionary<String, LobbyPlayerBasePayload>>)
        VB: RecievePlayersData(Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
      nameWithType:
        CSharp: PlayfabLobbyDatabase.RecievePlayersData(Action<Dictionary<String, LobbyPlayerBasePayload>>)
        VB: PlayfabLobbyDatabase.RecievePlayersData(Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData(Action<System.Collections.Generic.Dictionary<System.String, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload>>)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData(Action(Of System.Collections.Generic.Dictionary(Of System.String, Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: RecievePlayersData
        path: ''
        startLine: 26404
      syntax:
        content:
          CSharp: public void RecievePlayersData(Action<Dictionary<string, LobbyPlayerBasePayload>> callback)
          VB: Public Sub RecievePlayersData(callback As Action(Of Dictionary(Of String, LobbyPlayerBasePayload)))
        parameters:
        - id: callback
          type: Global.Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}}
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
      language: CSharp
      name:
        CSharp: SendPlayerData(LobbyPlayerBasePayload, Action<Boolean>)
        VB: SendPlayerData(LobbyPlayerBasePayload, Action(Of Boolean))
      nameWithType:
        CSharp: PlayfabLobbyDatabase.SendPlayerData(LobbyPlayerBasePayload, Action<Boolean>)
        VB: PlayfabLobbyDatabase.SendPlayerData(LobbyPlayerBasePayload, Action(Of Boolean))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action<System.Boolean>)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload, Action(Of System.Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: SendPlayerData
        path: ''
        startLine: 26439
      syntax:
        content:
          CSharp: public void SendPlayerData(LobbyPlayerBasePayload userData, Action<bool> onSendSuccess = null)
          VB: Public Sub SendPlayerData(userData As LobbyPlayerBasePayload, onSendSuccess As Action(Of Boolean) = Nothing)
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        - id: onSendSuccess
          type: Global.Action{System.Boolean}
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      language: CSharp
      name:
        CSharp: DisconnectFromLobby(LobbyPlayerBasePayload)
        VB: DisconnectFromLobby(LobbyPlayerBasePayload)
      nameWithType:
        CSharp: PlayfabLobbyDatabase.DisconnectFromLobby(LobbyPlayerBasePayload)
        VB: PlayfabLobbyDatabase.DisconnectFromLobby(LobbyPlayerBasePayload)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: DisconnectFromLobby
        path: ''
        startLine: 26460
      syntax:
        content:
          CSharp: public void DisconnectFromLobby(LobbyPlayerBasePayload userData)
          VB: Public Sub DisconnectFromLobby(userData As LobbyPlayerBasePayload)
        parameters:
        - id: userData
          type: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.DeletePayload
    language: CSharp
    name:
      CSharp: DeletePayload
      VB: DeletePayload
    nameWithType:
      CSharp: DeletePayload
      VB: DeletePayload
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
      VB: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: DeletePayload
      path: ''
      startLine: 26500
    syntax:
      content:
        CSharp: public struct DeletePayload
        VB: Public Structure DeletePayload
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.playfabIdEncrypted
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.DeletePayload.playfabIdEncrypted
      language: CSharp
      name:
        CSharp: playfabIdEncrypted
        VB: playfabIdEncrypted
      nameWithType:
        CSharp: DeletePayload.playfabIdEncrypted
        VB: DeletePayload.playfabIdEncrypted
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.playfabIdEncrypted
        VB: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.playfabIdEncrypted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: playfabIdEncrypted
        path: ''
        startLine: 26502
      syntax:
        content:
          CSharp: public string playfabIdEncrypted
          VB: Public playfabIdEncrypted As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.encryptIV
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.DeletePayload.encryptIV
      language: CSharp
      name:
        CSharp: encryptIV
        VB: encryptIV
      nameWithType:
        CSharp: DeletePayload.encryptIV
        VB: DeletePayload.encryptIV
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.encryptIV
        VB: Timba.Games.SacredTails.LobbyDatabase.DeletePayload.encryptIV
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: encryptIV
        path: ''
        startLine: 26503
      syntax:
        content:
          CSharp: public string encryptIV
          VB: Public encryptIV As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
    language: CSharp
    name:
      CSharp: PlayfabTournamentDatabase
      VB: PlayfabTournamentDatabase
    nameWithType:
      CSharp: PlayfabTournamentDatabase
      VB: PlayfabTournamentDatabase
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
      VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: PlayfabTournamentDatabase
      path: ''
      startLine: 26522
    syntax:
      content:
        CSharp: 'public class PlayfabTournamentDatabase : MonoBehaviour, ITournamentDatabase'
        VB: >-
          Public Class PlayfabTournamentDatabase

              Inherits MonoBehaviour

              Implements ITournamentDatabase
    inheritance:
    - System.Object
    implements:
    - Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugRequest
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugRequest
      language: CSharp
      name:
        CSharp: debugRequest
        VB: debugRequest
      nameWithType:
        CSharp: PlayfabTournamentDatabase.debugRequest
        VB: PlayfabTournamentDatabase.debugRequest
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugRequest
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugRequest
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: debugRequest
        path: ''
        startLine: 26524
      syntax:
        content:
          CSharp: public bool debugRequest
          VB: Public debugRequest As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugResult
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugResult
      language: CSharp
      name:
        CSharp: debugResult
        VB: debugResult
      nameWithType:
        CSharp: PlayfabTournamentDatabase.debugResult
        VB: PlayfabTournamentDatabase.debugResult
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugResult
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugResult
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: debugResult
        path: ''
        startLine: 26525
      syntax:
        content:
          CSharp: public bool debugResult
          VB: Public debugResult As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugError
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugError
      language: CSharp
      name:
        CSharp: debugError
        VB: debugError
      nameWithType:
        CSharp: PlayfabTournamentDatabase.debugError
        VB: PlayfabTournamentDatabase.debugError
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugError
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.debugError
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: debugError
        path: ''
        startLine: 26526
      syntax:
        content:
          CSharp: public bool debugError
          VB: Public debugError As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: PlayfabTournamentDatabase.IsReady()
        VB: PlayfabTournamentDatabase.IsReady()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady()
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: IsReady
        path: ''
        startLine: 26527
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
      commentId: M:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
      language: CSharp
      name:
        CSharp: TournamentRequest(String, TypeOfTournamentRequest, Action<ExecuteFunctionResult>, Boolean, Int32)
        VB: TournamentRequest(String, TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), Boolean, Int32)
      nameWithType:
        CSharp: PlayfabTournamentDatabase.TournamentRequest(String, TypeOfTournamentRequest, Action<ExecuteFunctionResult>, Boolean, Int32)
        VB: PlayfabTournamentDatabase.TournamentRequest(String, TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), Boolean, Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest(System.String, Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest, Action<ExecuteFunctionResult>, System.Boolean, System.Int32)
        VB: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest(System.String, Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest, Action(Of ExecuteFunctionResult), System.Boolean, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: TournamentRequest
        path: ''
        startLine: 26529
      syntax:
        content:
          CSharp: public void TournamentRequest(string tournamentId, TypeOfTournamentRequest typeOfRequest, Action<ExecuteFunctionResult> resultCallback, bool shouldMarkReady = false, int timesTrying = 0)
          VB: Public Sub TournamentRequest(tournamentId As String, typeOfRequest As TypeOfTournamentRequest, resultCallback As Action(Of ExecuteFunctionResult), shouldMarkReady As Boolean = False, timesTrying As Integer = 0)
        parameters:
        - id: tournamentId
          type: System.String
        - id: typeOfRequest
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        - id: resultCallback
          type: Global.Action{ExecuteFunctionResult}
        - id: shouldMarkReady
          type: System.Boolean
        - id: timesTrying
          type: System.Int32
      overload: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest*
      implements:
      - Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.RequestConstants
    language: CSharp
    name:
      CSharp: RequestConstants
      VB: RequestConstants
    nameWithType:
      CSharp: RequestConstants
      VB: RequestConstants
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
      VB: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: RequestConstants
      path: ''
      startLine: 26590
    syntax:
      content:
        CSharp: public static class RequestConstants
        VB: Public Module RequestConstants
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.baseUrl
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.RequestConstants.baseUrl
      language: CSharp
      name:
        CSharp: baseUrl
        VB: baseUrl
      nameWithType:
        CSharp: RequestConstants.baseUrl
        VB: RequestConstants.baseUrl
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.baseUrl
        VB: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.baseUrl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: baseUrl
        path: ''
        startLine: 26592
      syntax:
        content:
          CSharp: public const string baseUrl = "https://sacredtails.azurewebsites.net/api/"
          VB: Public Const baseUrl As String = "https://sacredtails.azurewebsites.net/api/"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseMessage
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseMessage
      language: CSharp
      name:
        CSharp: firebaseMessage
        VB: firebaseMessage
      nameWithType:
        CSharp: RequestConstants.firebaseMessage
        VB: RequestConstants.firebaseMessage
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseMessage
        VB: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseMessage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: firebaseMessage
        path: ''
        startLine: 26594
      syntax:
        content:
          CSharp: 'public const string firebaseMessage = "<color=blue>Firebase Lobby Database: </color>"'
          VB: 'Public Const firebaseMessage As String = "<color=blue>Firebase Lobby Database: </color>"'
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseError
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseError
      language: CSharp
      name:
        CSharp: firebaseError
        VB: firebaseError
      nameWithType:
        CSharp: RequestConstants.firebaseError
        VB: RequestConstants.firebaseError
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseError
        VB: Timba.Games.SacredTails.LobbyDatabase.RequestConstants.firebaseError
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: firebaseError
        path: ''
        startLine: 26595
      syntax:
        content:
          CSharp: 'public const string firebaseError = "<color=red>Firebase Lobby Database: </color>"'
          VB: 'Public Const firebaseError As String = "<color=red>Firebase Lobby Database: </color>"'
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
    language: CSharp
    name:
      CSharp: TypeOfTournamentRequest
      VB: TypeOfTournamentRequest
    nameWithType:
      CSharp: TypeOfTournamentRequest
      VB: TypeOfTournamentRequest
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyDatabase
    source:
      id: TypeOfTournamentRequest
      path: ''
      startLine: 26650
    syntax:
      content:
        CSharp: public enum TypeOfTournamentRequest
        VB: Public Enum TypeOfTournamentRequest
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.JOIN_TOURNAMENT
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.JOIN_TOURNAMENT
      language: CSharp
      name:
        CSharp: JOIN_TOURNAMENT
        VB: JOIN_TOURNAMENT
      nameWithType:
        CSharp: TypeOfTournamentRequest.JOIN_TOURNAMENT
        VB: TypeOfTournamentRequest.JOIN_TOURNAMENT
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.JOIN_TOURNAMENT
        VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.JOIN_TOURNAMENT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: JOIN_TOURNAMENT
        path: ''
        startLine: 26652
      syntax:
        content:
          CSharp: JOIN_TOURNAMENT = 0
          VB: JOIN_TOURNAMENT = 0
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_READY_STATE
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_READY_STATE
      language: CSharp
      name:
        CSharp: CHECK_READY_STATE
        VB: CHECK_READY_STATE
      nameWithType:
        CSharp: TypeOfTournamentRequest.CHECK_READY_STATE
        VB: TypeOfTournamentRequest.CHECK_READY_STATE
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_READY_STATE
        VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_READY_STATE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: CHECK_READY_STATE
        path: ''
        startLine: 26653
      syntax:
        content:
          CSharp: CHECK_READY_STATE = 1
          VB: CHECK_READY_STATE = 1
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
      language: CSharp
      name:
        CSharp: CHECK_TOURNAMENT_STATE
        VB: CHECK_TOURNAMENT_STATE
      nameWithType:
        CSharp: TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
        VB: TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
        VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.CHECK_TOURNAMENT_STATE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: CHECK_TOURNAMENT_STATE
        path: ''
        startLine: 26654
      syntax:
        content:
          CSharp: CHECK_TOURNAMENT_STATE = 2
          VB: CHECK_TOURNAMENT_STATE = 2
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
      language: CSharp
      name:
        CSharp: GET_CURRENT_BRACKETS_DATA
        VB: GET_CURRENT_BRACKETS_DATA
      nameWithType:
        CSharp: TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
        VB: TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
        VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_CURRENT_BRACKETS_DATA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: GET_CURRENT_BRACKETS_DATA
        path: ''
        startLine: 26655
      syntax:
        content:
          CSharp: GET_CURRENT_BRACKETS_DATA = 3
          VB: GET_CURRENT_BRACKETS_DATA = 3
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_TOURNAMENT_LIST
      commentId: F:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_TOURNAMENT_LIST
      language: CSharp
      name:
        CSharp: GET_TOURNAMENT_LIST
        VB: GET_TOURNAMENT_LIST
      nameWithType:
        CSharp: TypeOfTournamentRequest.GET_TOURNAMENT_LIST
        VB: TypeOfTournamentRequest.GET_TOURNAMENT_LIST
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_TOURNAMENT_LIST
        VB: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest.GET_TOURNAMENT_LIST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyDatabase
      source:
        id: GET_TOURNAMENT_LIST
        path: ''
        startLine: 26656
      syntax:
        content:
          CSharp: GET_TOURNAMENT_LIST = 4
          VB: GET_TOURNAMENT_LIST = 4
        return:
          type: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: Timba.Games.SacredTails.LobbyNetworking
  commentId: N:Timba.Games.SacredTails.LobbyNetworking
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.LobbyNetworking
    VB: Timba.Games.SacredTails.LobbyNetworking
  nameWithType:
    CSharp: Timba.Games.SacredTails.LobbyNetworking
    VB: Timba.Games.SacredTails.LobbyNetworking
  qualifiedName:
    CSharp: Timba.Games.SacredTails.LobbyNetworking
    VB: Timba.Games.SacredTails.LobbyNetworking
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    language: CSharp
    name:
      CSharp: ILobbyNetworkManager
      VB: ILobbyNetworkManager
    nameWithType:
      CSharp: ILobbyNetworkManager
      VB: ILobbyNetworkManager
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
      VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: ILobbyNetworkManager
      path: ''
      startLine: 25727
    syntax:
      content:
        CSharp: public interface ILobbyNetworkManager
        VB: >-
          Public Interface ILobbyNetworkManager

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      language: CSharp
      name:
        CSharp: CurrentPlayer
        VB: CurrentPlayer
      nameWithType:
        CSharp: ILobbyNetworkManager.CurrentPlayer
        VB: ILobbyNetworkManager.CurrentPlayer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CurrentPlayer
        path: ''
        startLine: 25729
      syntax:
        content:
          CSharp: ThirdPersonController CurrentPlayer { get; set; }
          VB: Property CurrentPlayer As ThirdPersonController
        parameters: []
        return:
          type: Global.ThirdPersonController
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      language: CSharp
      name:
        CSharp: CurrentSecondsBetweenPetition
        VB: CurrentSecondsBetweenPetition
      nameWithType:
        CSharp: ILobbyNetworkManager.CurrentSecondsBetweenPetition
        VB: ILobbyNetworkManager.CurrentSecondsBetweenPetition
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CurrentSecondsBetweenPetition
        path: ''
        startLine: 25730
      syntax:
        content:
          CSharp: float CurrentSecondsBetweenPetition { get; }
          VB: ReadOnly Property CurrentSecondsBetweenPetition As Single
        parameters: []
        return:
          type: System.Single
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
      language: CSharp
      name:
        CSharp: ConnectToLobby(Int32)
        VB: ConnectToLobby(Int32)
      nameWithType:
        CSharp: ILobbyNetworkManager.ConnectToLobby(Int32)
        VB: ILobbyNetworkManager.ConnectToLobby(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ConnectToLobby
        path: ''
        startLine: 25731
      syntax:
        content:
          CSharp: void ConnectToLobby(int lobbyId)
          VB: Sub ConnectToLobby(lobbyId As Integer)
        parameters:
        - id: lobbyId
          type: System.Int32
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
      language: CSharp
      name:
        CSharp: ManageLobbyPlayers(Dictionary<String, LobbyPlayerBasePayload>)
        VB: ManageLobbyPlayers(Dictionary(Of String, LobbyPlayerBasePayload))
      nameWithType:
        CSharp: ILobbyNetworkManager.ManageLobbyPlayers(Dictionary<String, LobbyPlayerBasePayload>)
        VB: ILobbyNetworkManager.ManageLobbyPlayers(Dictionary(Of String, LobbyPlayerBasePayload))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary<System.String, LobbyPlayerBasePayload>)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary(Of System.String, LobbyPlayerBasePayload))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ManageLobbyPlayers
        path: ''
        startLine: 25732
      syntax:
        content:
          CSharp: void ManageLobbyPlayers(Dictionary<string, LobbyPlayerBasePayload> usersData)
          VB: Sub ManageLobbyPlayers(usersData As Dictionary(Of String, LobbyPlayerBasePayload))
        parameters:
        - id: usersData
          type: System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload}
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleBattleMode(Boolean)
        VB: ToggleBattleMode(Boolean)
      nameWithType:
        CSharp: ILobbyNetworkManager.ToggleBattleMode(Boolean)
        VB: ILobbyNetworkManager.ToggleBattleMode(Boolean)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ToggleBattleMode
        path: ''
        startLine: 25733
      syntax:
        content:
          CSharp: void ToggleBattleMode(bool state)
          VB: Sub ToggleBattleMode(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      language: CSharp
      name:
        CSharp: TickCheckActivates()
        VB: TickCheckActivates()
      nameWithType:
        CSharp: ILobbyNetworkManager.TickCheckActivates()
        VB: ILobbyNetworkManager.TickCheckActivates()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates()
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: TickCheckActivates
        path: ''
        startLine: 25734
      syntax:
        content:
          CSharp: void TickCheckActivates()
          VB: Sub TickCheckActivates
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      language: CSharp
      name:
        CSharp: OnConnected
        VB: OnConnected
      nameWithType:
        CSharp: ILobbyNetworkManager.OnConnected
        VB: ILobbyNetworkManager.OnConnected
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: OnConnected
        path: ''
        startLine: 25735
      syntax:
        content:
          CSharp: Action<ThirdPersonController> OnConnected { get; set; }
          VB: Property OnConnected As Action(Of ThirdPersonController)
        parameters: []
        return:
          type: Global.Action{ThirdPersonController}
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      language: CSharp
      name:
        CSharp: CheckIfPlayerHasChallengeOrIsChallenging(String)
        VB: CheckIfPlayerHasChallengeOrIsChallenging(String)
      nameWithType:
        CSharp: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(String)
        VB: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CheckIfPlayerHasChallengeOrIsChallenging
        path: ''
        startLine: 25736
      syntax:
        content:
          CSharp: bool CheckIfPlayerHasChallengeOrIsChallenging(string playfabId)
          VB: Function CheckIfPlayerHasChallengeOrIsChallenging(playfabId As String) As Boolean
        parameters:
        - id: playfabId
          type: System.String
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      language: CSharp
      name:
        CSharp: CheckIfOtherPlayerHasChallengeForPlayfabId(String)
        VB: CheckIfOtherPlayerHasChallengeForPlayfabId(String)
      nameWithType:
        CSharp: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(String)
        VB: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CheckIfOtherPlayerHasChallengeForPlayfabId
        path: ''
        startLine: 25737
      syntax:
        content:
          CSharp: bool CheckIfOtherPlayerHasChallengeForPlayfabId(string playfabId)
          VB: Function CheckIfOtherPlayerHasChallengeForPlayfabId(playfabId As String) As Boolean
        parameters:
        - id: playfabId
          type: System.String
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowPlayerPersonalUI(Boolean)
        VB: ShowPlayerPersonalUI(Boolean)
      nameWithType:
        CSharp: ILobbyNetworkManager.ShowPlayerPersonalUI(Boolean)
        VB: ILobbyNetworkManager.ShowPlayerPersonalUI(Boolean)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ShowPlayerPersonalUI
        path: ''
        startLine: 25738
      syntax:
        content:
          CSharp: void ShowPlayerPersonalUI(bool show = true)
          VB: Sub ShowPlayerPersonalUI(show As Boolean = True)
        parameters:
        - id: show
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerState(String)
        VB: GetPlayerState(String)
      nameWithType:
        CSharp: ILobbyNetworkManager.GetPlayerState(String)
        VB: ILobbyNetworkManager.GetPlayerState(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: GetPlayerState
        path: ''
        startLine: 25739
      syntax:
        content:
          CSharp: CharacterStateEnum GetPlayerState(string playerId)
          VB: Function GetPlayerState(playerId As String) As CharacterStateEnum
        parameters:
        - id: playerId
          type: System.String
        return:
          type: Global.CharacterStateEnum
      overload: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
    language: CSharp
    name:
      CSharp: LobbyNetworkingController
      VB: LobbyNetworkingController
    nameWithType:
      CSharp: LobbyNetworkingController
      VB: LobbyNetworkingController
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
      VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: LobbyNetworkingController
      path: ''
      startLine: 25742
    syntax:
      content:
        CSharp: 'public class LobbyNetworkingController : MonoBehaviour, ILobbyNetworkManager'
        VB: >-
          Public Class LobbyNetworkingController

              Inherits MonoBehaviour

              Implements ILobbyNetworkManager
    inheritance:
    - System.Object
    implements:
    - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playerDataManager
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playerDataManager
      language: CSharp
      name:
        CSharp: playerDataManager
        VB: playerDataManager
      nameWithType:
        CSharp: LobbyNetworkingController.playerDataManager
        VB: LobbyNetworkingController.playerDataManager
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playerDataManager
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playerDataManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: playerDataManager
        path: ''
        startLine: 25745
      syntax:
        content:
          CSharp: public PlayerDataManager playerDataManager
          VB: Public playerDataManager As PlayerDataManager
        return:
          type: Global.PlayerDataManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.loadingScreen
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.loadingScreen
      language: CSharp
      name:
        CSharp: loadingScreen
        VB: loadingScreen
      nameWithType:
        CSharp: LobbyNetworkingController.loadingScreen
        VB: LobbyNetworkingController.loadingScreen
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.loadingScreen
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.loadingScreen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: loadingScreen
        path: ''
        startLine: 25746
      syntax:
        content:
          CSharp: public GameObject loadingScreen
          VB: Public loadingScreen As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.localPlayerPrefab
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.localPlayerPrefab
      language: CSharp
      name:
        CSharp: localPlayerPrefab
        VB: localPlayerPrefab
      nameWithType:
        CSharp: LobbyNetworkingController.localPlayerPrefab
        VB: LobbyNetworkingController.localPlayerPrefab
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.localPlayerPrefab
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.localPlayerPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: localPlayerPrefab
        path: ''
        startLine: 25749
      syntax:
        content:
          CSharp: public ThirdPersonController localPlayerPrefab
          VB: Public localPlayerPrefab As ThirdPersonController
        return:
          type: Global.ThirdPersonController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayerPrefab
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayerPrefab
      language: CSharp
      name:
        CSharp: otherPlayerPrefab
        VB: otherPlayerPrefab
      nameWithType:
        CSharp: LobbyNetworkingController.otherPlayerPrefab
        VB: LobbyNetworkingController.otherPlayerPrefab
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayerPrefab
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayerPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: otherPlayerPrefab
        path: ''
        startLine: 25750
      syntax:
        content:
          CSharp: public ThirdPersonController otherPlayerPrefab
          VB: Public otherPlayerPrefab As ThirdPersonController
        return:
          type: Global.ThirdPersonController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersAvatar
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersAvatar
      language: CSharp
      name:
        CSharp: currentPlayersAvatar
        VB: currentPlayersAvatar
      nameWithType:
        CSharp: LobbyNetworkingController.currentPlayersAvatar
        VB: LobbyNetworkingController.currentPlayersAvatar
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersAvatar
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersAvatar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: currentPlayersAvatar
        path: ''
        startLine: 25751
      syntax:
        content:
          CSharp: public Dictionary<string, ThirdPersonController> currentPlayersAvatar
          VB: Public currentPlayersAvatar As Dictionary(Of String, ThirdPersonController)
        return:
          type: System.Collections.Generic.Dictionary{System.String,ThirdPersonController}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayer
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayer
      language: CSharp
      name:
        CSharp: currentPlayer
        VB: currentPlayer
      nameWithType:
        CSharp: LobbyNetworkingController.currentPlayer
        VB: LobbyNetworkingController.currentPlayer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayer
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: currentPlayer
        path: ''
        startLine: 25752
      syntax:
        content:
          CSharp: public ThirdPersonController currentPlayer
          VB: Public currentPlayer As ThirdPersonController
        return:
          type: Global.ThirdPersonController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
      language: CSharp
      name:
        CSharp: CurrentPlayer
        VB: CurrentPlayer
      nameWithType:
        CSharp: LobbyNetworkingController.CurrentPlayer
        VB: LobbyNetworkingController.CurrentPlayer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CurrentPlayer
        path: ''
        startLine: 25753
      syntax:
        content:
          CSharp: public ThirdPersonController CurrentPlayer { get; set; }
          VB: Public Property CurrentPlayer As ThirdPersonController
        parameters: []
        return:
          type: Global.ThirdPersonController
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersData
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersData
      language: CSharp
      name:
        CSharp: currentPlayersData
        VB: currentPlayersData
      nameWithType:
        CSharp: LobbyNetworkingController.currentPlayersData
        VB: LobbyNetworkingController.currentPlayersData
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersData
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.currentPlayersData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: currentPlayersData
        path: ''
        startLine: 25755
      syntax:
        content:
          CSharp: public Dictionary<string, LobbyPlayerBasePayload> currentPlayersData
          VB: Public currentPlayersData As Dictionary(Of String, LobbyPlayerBasePayload)
        return:
          type: System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playersInstantiated
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playersInstantiated
      language: CSharp
      name:
        CSharp: playersInstantiated
        VB: playersInstantiated
      nameWithType:
        CSharp: LobbyNetworkingController.playersInstantiated
        VB: LobbyNetworkingController.playersInstantiated
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playersInstantiated
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.playersInstantiated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: playersInstantiated
        path: ''
        startLine: 25756
      syntax:
        content:
          CSharp: public Dictionary<string, bool> playersInstantiated
          VB: Public playersInstantiated As Dictionary(Of String, Boolean)
        return:
          type: System.Collections.Generic.Dictionary{System.String,System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lobbyDatabase
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lobbyDatabase
      language: CSharp
      name:
        CSharp: lobbyDatabase
        VB: lobbyDatabase
      nameWithType:
        CSharp: LobbyNetworkingController.lobbyDatabase
        VB: LobbyNetworkingController.lobbyDatabase
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lobbyDatabase
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lobbyDatabase
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: lobbyDatabase
        path: ''
        startLine: 25757
      syntax:
        content:
          CSharp: public ILobbydatabase lobbyDatabase
          VB: Public lobbyDatabase As ILobbydatabase
        return:
          type: Global.ILobbydatabase
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.chatTextBox
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.chatTextBox
      language: CSharp
      name:
        CSharp: chatTextBox
        VB: chatTextBox
      nameWithType:
        CSharp: LobbyNetworkingController.chatTextBox
        VB: LobbyNetworkingController.chatTextBox
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.chatTextBox
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.chatTextBox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: chatTextBox
        path: ''
        startLine: 25758
      syntax:
        content:
          CSharp: public ChatTextBox chatTextBox
          VB: Public chatTextBox As ChatTextBox
        return:
          type: Global.ChatTextBox
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connected
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connected
      language: CSharp
      name:
        CSharp: connected
        VB: connected
      nameWithType:
        CSharp: LobbyNetworkingController.connected
        VB: LobbyNetworkingController.connected
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connected
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connected
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: connected
        path: ''
        startLine: 25760
      syntax:
        content:
          CSharp: public bool connected
          VB: Public connected As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayersContainer
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayersContainer
      language: CSharp
      name:
        CSharp: otherPlayersContainer
        VB: otherPlayersContainer
      nameWithType:
        CSharp: LobbyNetworkingController.otherPlayersContainer
        VB: LobbyNetworkingController.otherPlayersContainer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayersContainer
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.otherPlayersContainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: otherPlayersContainer
        path: ''
        startLine: 25761
      syntax:
        content:
          CSharp: public GameObject otherPlayersContainer
          VB: Public otherPlayersContainer As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.onBattle
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.onBattle
      language: CSharp
      name:
        CSharp: onBattle
        VB: onBattle
      nameWithType:
        CSharp: LobbyNetworkingController.onBattle
        VB: LobbyNetworkingController.onBattle
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.onBattle
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.onBattle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: onBattle
        path: ''
        startLine: 25762
      syntax:
        content:
          CSharp: public bool onBattle
          VB: Public onBattle As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.minErrorPosition
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.minErrorPosition
      language: CSharp
      name:
        CSharp: minErrorPosition
        VB: minErrorPosition
      nameWithType:
        CSharp: LobbyNetworkingController.minErrorPosition
        VB: LobbyNetworkingController.minErrorPosition
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.minErrorPosition
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.minErrorPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: minErrorPosition
        path: ''
        startLine: 25764
      syntax:
        content:
          CSharp: public float minErrorPosition
          VB: Public minErrorPosition As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ratePetiton
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ratePetiton
      language: CSharp
      name:
        CSharp: ratePetiton
        VB: ratePetiton
      nameWithType:
        CSharp: LobbyNetworkingController.ratePetiton
        VB: LobbyNetworkingController.ratePetiton
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ratePetiton
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ratePetiton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ratePetiton
        path: ''
        startLine: 25765
      syntax:
        content:
          CSharp: public float ratePetiton
          VB: Public ratePetiton As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
      language: CSharp
      name:
        CSharp: CurrentSecondsBetweenPetition
        VB: CurrentSecondsBetweenPetition
      nameWithType:
        CSharp: LobbyNetworkingController.CurrentSecondsBetweenPetition
        VB: LobbyNetworkingController.CurrentSecondsBetweenPetition
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CurrentSecondsBetweenPetition
        path: ''
        startLine: 25766
      syntax:
        content:
          CSharp: public float CurrentSecondsBetweenPetition { get; }
          VB: Public ReadOnly Property CurrentSecondsBetweenPetition As Single
        parameters: []
        return:
          type: System.Single
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lerpDuration
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lerpDuration
      language: CSharp
      name:
        CSharp: lerpDuration
        VB: lerpDuration
      nameWithType:
        CSharp: LobbyNetworkingController.lerpDuration
        VB: LobbyNetworkingController.lerpDuration
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lerpDuration
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.lerpDuration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: lerpDuration
        path: ''
        startLine: 25767
      syntax:
        content:
          CSharp: public float lerpDuration
          VB: Public lerpDuration As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
      commentId: P:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
      language: CSharp
      name:
        CSharp: OnConnected
        VB: OnConnected
      nameWithType:
        CSharp: LobbyNetworkingController.OnConnected
        VB: LobbyNetworkingController.OnConnected
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: OnConnected
        path: ''
        startLine: 25772
      syntax:
        content:
          CSharp: public Action<ThirdPersonController> OnConnected { get; set; }
          VB: Public Property OnConnected As Action(Of ThirdPersonController)
        parameters: []
        return:
          type: Global.Action{ThirdPersonController}
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnectedCallback
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnectedCallback
      language: CSharp
      name:
        CSharp: OnConnectedCallback
        VB: OnConnectedCallback
      nameWithType:
        CSharp: LobbyNetworkingController.OnConnectedCallback
        VB: LobbyNetworkingController.OnConnectedCallback
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnectedCallback
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnectedCallback
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: OnConnectedCallback
        path: ''
        startLine: 25773
      syntax:
        content:
          CSharp: public UnityEvent<ThirdPersonController> OnConnectedCallback
          VB: Public OnConnectedCallback As UnityEvent(Of ThirdPersonController)
        return:
          type: Global.UnityEvent{ThirdPersonController}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connectionId
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connectionId
      language: CSharp
      name:
        CSharp: connectionId
        VB: connectionId
      nameWithType:
        CSharp: LobbyNetworkingController.connectionId
        VB: LobbyNetworkingController.connectionId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connectionId
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.connectionId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: connectionId
        path: ''
        startLine: 25774
      syntax:
        content:
          CSharp: public ulong connectionId
          VB: Public connectionId As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: LobbyNetworkingController.Start()
        VB: LobbyNetworkingController.Start()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: Start
        path: ''
        startLine: 25781
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby(System.Int32)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby(System.Int32)
      language: CSharp
      name:
        CSharp: ConnectToLobby(Int32)
        VB: ConnectToLobby(Int32)
      nameWithType:
        CSharp: LobbyNetworkingController.ConnectToLobby(Int32)
        VB: LobbyNetworkingController.ConnectToLobby(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby(System.Int32)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ConnectToLobby
        path: ''
        startLine: 25787
      syntax:
        content:
          CSharp: public void ConnectToLobby(int lobbyId)
          VB: Public Sub ConnectToLobby(lobbyId As Integer)
        parameters:
        - id: lobbyId
          type: System.Int32
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates
      language: CSharp
      name:
        CSharp: TickCheckActivates()
        VB: TickCheckActivates()
      nameWithType:
        CSharp: LobbyNetworkingController.TickCheckActivates()
        VB: LobbyNetworkingController.TickCheckActivates()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: TickCheckActivates
        path: ''
        startLine: 25868
      syntax:
        content:
          CSharp: public void TickCheckActivates()
          VB: Public Sub TickCheckActivates
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck
      language: CSharp
      name:
        CSharp: TickCheck()
        VB: TickCheck()
      nameWithType:
        CSharp: LobbyNetworkingController.TickCheck()
        VB: LobbyNetworkingController.TickCheck()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: TickCheck
        path: ''
        startLine: 25887
      syntax:
        content:
          CSharp: public void TickCheck()
          VB: Public Sub TickCheck
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.timer
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.timer
      language: CSharp
      name:
        CSharp: timer
        VB: timer
      nameWithType:
        CSharp: LobbyNetworkingController.timer
        VB: LobbyNetworkingController.timer
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.timer
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.timer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: timer
        path: ''
        startLine: 25965
      syntax:
        content:
          CSharp: public float timer
          VB: Public timer As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload,LobbyPlayerBasePayload)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload,LobbyPlayerBasePayload)
      language: CSharp
      name:
        CSharp: CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
        VB: CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
      nameWithType:
        CSharp: LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
        VB: LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving(LobbyPlayerBasePayload, LobbyPlayerBasePayload)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CheckIfIsMoving
        path: ''
        startLine: 25967
      syntax:
        content:
          CSharp: public bool CheckIfIsMoving(LobbyPlayerBasePayload currentData, LobbyPlayerBasePayload dataToSend)
          VB: Public Function CheckIfIsMoving(currentData As LobbyPlayerBasePayload, dataToSend As LobbyPlayerBasePayload) As Boolean
        parameters:
        - id: currentData
          type: Global.LobbyPlayerBasePayload
        - id: dataToSend
          type: Global.LobbyPlayerBasePayload
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
      language: CSharp
      name:
        CSharp: ManageLobbyPlayers(Dictionary<String, LobbyPlayerBasePayload>)
        VB: ManageLobbyPlayers(Dictionary(Of String, LobbyPlayerBasePayload))
      nameWithType:
        CSharp: LobbyNetworkingController.ManageLobbyPlayers(Dictionary<String, LobbyPlayerBasePayload>)
        VB: LobbyNetworkingController.ManageLobbyPlayers(Dictionary(Of String, LobbyPlayerBasePayload))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers(System.Collections.Generic.Dictionary<System.String, LobbyPlayerBasePayload>)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers(System.Collections.Generic.Dictionary(Of System.String, LobbyPlayerBasePayload))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ManageLobbyPlayers
        path: ''
        startLine: 25975
      syntax:
        content:
          CSharp: public void ManageLobbyPlayers(Dictionary<string, LobbyPlayerBasePayload> usersData)
          VB: Public Sub ManageLobbyPlayers(usersData As Dictionary(Of String, LobbyPlayerBasePayload))
        parameters:
        - id: usersData
          type: System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload}
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected(System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload})
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected(System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload})
      language: CSharp
      name:
        CSharp: NewPlayerConnected(KeyValuePair<String, LobbyPlayerBasePayload>)
        VB: NewPlayerConnected(KeyValuePair(Of String, LobbyPlayerBasePayload))
      nameWithType:
        CSharp: LobbyNetworkingController.NewPlayerConnected(KeyValuePair<String, LobbyPlayerBasePayload>)
        VB: LobbyNetworkingController.NewPlayerConnected(KeyValuePair(Of String, LobbyPlayerBasePayload))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected(System.Collections.Generic.KeyValuePair<System.String, LobbyPlayerBasePayload>)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected(System.Collections.Generic.KeyValuePair(Of System.String, LobbyPlayerBasePayload))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: NewPlayerConnected
        path: ''
        startLine: 26045
      syntax:
        content:
          CSharp: public void NewPlayerConnected(KeyValuePair<string, LobbyPlayerBasePayload> item)
          VB: Public Sub NewPlayerConnected(item As KeyValuePair(Of String, LobbyPlayerBasePayload))
        parameters:
        - id: item
          type: System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload}
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState(System.String)
      language: CSharp
      name:
        CSharp: GetPlayerState(String)
        VB: GetPlayerState(String)
      nameWithType:
        CSharp: LobbyNetworkingController.GetPlayerState(String)
        VB: LobbyNetworkingController.GetPlayerState(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: GetPlayerState
        path: ''
        startLine: 26062
      syntax:
        content:
          CSharp: public CharacterStateEnum GetPlayerState(string playerId)
          VB: Public Function GetPlayerState(playerId As String) As CharacterStateEnum
        parameters:
        - id: playerId
          type: System.String
        return:
          type: Global.CharacterStateEnum
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification(System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload})
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification(System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload})
      language: CSharp
      name:
        CSharp: PlayerChallengeVerification(KeyValuePair<String, LobbyPlayerBasePayload>)
        VB: PlayerChallengeVerification(KeyValuePair(Of String, LobbyPlayerBasePayload))
      nameWithType:
        CSharp: LobbyNetworkingController.PlayerChallengeVerification(KeyValuePair<String, LobbyPlayerBasePayload>)
        VB: LobbyNetworkingController.PlayerChallengeVerification(KeyValuePair(Of String, LobbyPlayerBasePayload))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification(System.Collections.Generic.KeyValuePair<System.String, LobbyPlayerBasePayload>)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification(System.Collections.Generic.KeyValuePair(Of System.String, LobbyPlayerBasePayload))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: PlayerChallengeVerification
        path: ''
        startLine: 26067
      syntax:
        content:
          CSharp: public void PlayerChallengeVerification(KeyValuePair<string, LobbyPlayerBasePayload> item)
          VB: Public Sub PlayerChallengeVerification(item As KeyValuePair(Of String, LobbyPlayerBasePayload))
        parameters:
        - id: item
          type: System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload}
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      language: CSharp
      name:
        CSharp: CheckIfOtherPlayerHasChallengeForPlayfabId(String)
        VB: CheckIfOtherPlayerHasChallengeForPlayfabId(String)
      nameWithType:
        CSharp: LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(String)
        VB: LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CheckIfOtherPlayerHasChallengeForPlayfabId
        path: ''
        startLine: 26115
      syntax:
        content:
          CSharp: public bool CheckIfOtherPlayerHasChallengeForPlayfabId(string playfabId)
          VB: Public Function CheckIfOtherPlayerHasChallengeForPlayfabId(playfabId As String) As Boolean
        parameters:
        - id: playfabId
          type: System.String
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      language: CSharp
      name:
        CSharp: CheckIfPlayerHasChallengeOrIsChallenging(String)
        VB: CheckIfPlayerHasChallengeOrIsChallenging(String)
      nameWithType:
        CSharp: LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(String)
        VB: LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: CheckIfPlayerHasChallengeOrIsChallenging
        path: ''
        startLine: 26123
      syntax:
        content:
          CSharp: public bool CheckIfPlayerHasChallengeOrIsChallenging(string playfabId)
          VB: Public Function CheckIfPlayerHasChallengeOrIsChallenging(playfabId As String) As Boolean
        parameters:
        - id: playfabId
          type: System.String
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor,System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo})
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor,System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo})
      language: CSharp
      name:
        CSharp: PaintOtherPlayer(CharacterRecolor, Dictionary<PartsOfCharacter, CharacterStyleInfo>)
        VB: PaintOtherPlayer(CharacterRecolor, Dictionary(Of PartsOfCharacter, CharacterStyleInfo))
      nameWithType:
        CSharp: LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor, Dictionary<PartsOfCharacter, CharacterStyleInfo>)
        VB: LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor, Dictionary(Of PartsOfCharacter, CharacterStyleInfo))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor, System.Collections.Generic.Dictionary<PartsOfCharacter, CharacterStyleInfo>)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer(CharacterRecolor, System.Collections.Generic.Dictionary(Of PartsOfCharacter, CharacterStyleInfo))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: PaintOtherPlayer
        path: ''
        startLine: 26133
      syntax:
        content:
          CSharp: public void PaintOtherPlayer(CharacterRecolor playerRecolor, Dictionary<PartsOfCharacter, CharacterStyleInfo> characterStyle)
          VB: Public Sub PaintOtherPlayer(playerRecolor As CharacterRecolor, characterStyle As Dictionary(Of PartsOfCharacter, CharacterStyleInfo))
        parameters:
        - id: playerRecolor
          type: Global.CharacterRecolor
        - id: characterStyle
          type: System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo}
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit
      language: CSharp
      name:
        CSharp: OnApplicationQuit()
        VB: OnApplicationQuit()
      nameWithType:
        CSharp: LobbyNetworkingController.OnApplicationQuit()
        VB: LobbyNetworkingController.OnApplicationQuit()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: OnApplicationQuit
        path: ''
        startLine: 26170
      syntax:
        content:
          CSharp: public void OnApplicationQuit()
          VB: Public Sub OnApplicationQuit
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI(System.Boolean)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI(System.Boolean)
      language: CSharp
      name:
        CSharp: ShowPlayerPersonalUI(Boolean)
        VB: ShowPlayerPersonalUI(Boolean)
      nameWithType:
        CSharp: LobbyNetworkingController.ShowPlayerPersonalUI(Boolean)
        VB: LobbyNetworkingController.ShowPlayerPersonalUI(Boolean)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI(System.Boolean)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ShowPlayerPersonalUI
        path: ''
        startLine: 26185
      syntax:
        content:
          CSharp: public void ShowPlayerPersonalUI(bool show = true)
          VB: Public Sub ShowPlayerPersonalUI(show As Boolean = True)
        parameters:
        - id: show
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode
      language: CSharp
      name:
        CSharp: ToogleChatMode()
        VB: ToogleChatMode()
      nameWithType:
        CSharp: LobbyNetworkingController.ToogleChatMode()
        VB: LobbyNetworkingController.ToogleChatMode()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ToogleChatMode
        path: ''
        startLine: 26191
      syntax:
        content:
          CSharp: public void ToogleChatMode()
          VB: Public Sub ToogleChatMode
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode
      language: CSharp
      name:
        CSharp: UntoogleChatMode()
        VB: UntoogleChatMode()
      nameWithType:
        CSharp: LobbyNetworkingController.UntoogleChatMode()
        VB: LobbyNetworkingController.UntoogleChatMode()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: UntoogleChatMode
        path: ''
        startLine: 26197
      syntax:
        content:
          CSharp: public void UntoogleChatMode()
          VB: Public Sub UntoogleChatMode
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode(System.Boolean)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleBattleMode(Boolean)
        VB: ToggleBattleMode(Boolean)
      nameWithType:
        CSharp: LobbyNetworkingController.ToggleBattleMode(Boolean)
        VB: LobbyNetworkingController.ToggleBattleMode(Boolean)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode(System.Boolean)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: ToggleBattleMode
        path: ''
        startLine: 26203
      syntax:
        content:
          CSharp: public void ToggleBattleMode(bool state)
          VB: Public Sub ToggleBattleMode(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode*
      implements:
      - Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash(System.String)
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash(System.String)
      language: CSharp
      name:
        CSharp: GeneratePlayfabIdHash(String)
        VB: GeneratePlayfabIdHash(String)
      nameWithType:
        CSharp: LobbyNetworkingController.GeneratePlayfabIdHash(String)
        VB: LobbyNetworkingController.GeneratePlayfabIdHash(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash(System.String)
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: GeneratePlayfabIdHash
        path: ''
        startLine: 26210
      syntax:
        content:
          CSharp: public string GeneratePlayfabIdHash(string text)
          VB: Public Function GeneratePlayfabIdHash(text As String) As String
        parameters:
        - id: text
          type: System.String
        return:
          type: System.String
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady
      commentId: M:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: LobbyNetworkingController.IsReady()
        VB: LobbyNetworkingController.IsReady()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady()
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: IsReady
        path: ''
        startLine: 26226
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
    language: CSharp
    name:
      CSharp: LobbyNetworkingController.MessageObject
      VB: LobbyNetworkingController.MessageObject
    nameWithType:
      CSharp: LobbyNetworkingController.MessageObject
      VB: LobbyNetworkingController.MessageObject
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
      VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: MessageObject
      path: ''
      startLine: 25877
    syntax:
      content:
        CSharp: public class MessageObject
        VB: Public Class MessageObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject.messages
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject.messages
      language: CSharp
      name:
        CSharp: messages
        VB: messages
      nameWithType:
        CSharp: LobbyNetworkingController.MessageObject.messages
        VB: LobbyNetworkingController.MessageObject.messages
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject.messages
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject.messages
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: messages
        path: ''
        startLine: 25879
      syntax:
        content:
          CSharp: public List<LobbyNetworkingController.DirectMessage> messages
          VB: Public messages As List(Of LobbyNetworkingController.DirectMessage)
        return:
          type: System.Collections.Generic.List{Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
    language: CSharp
    name:
      CSharp: LobbyNetworkingController.DirectMessage
      VB: LobbyNetworkingController.DirectMessage
    nameWithType:
      CSharp: LobbyNetworkingController.DirectMessage
      VB: LobbyNetworkingController.DirectMessage
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
      VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: DirectMessage
      path: ''
      startLine: 25881
    syntax:
      content:
        CSharp: public class DirectMessage
        VB: Public Class DirectMessage
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.from
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.from
      language: CSharp
      name:
        CSharp: from
        VB: from
      nameWithType:
        CSharp: LobbyNetworkingController.DirectMessage.from
        VB: LobbyNetworkingController.DirectMessage.from
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.from
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.from
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: from
        path: ''
        startLine: 25883
      syntax:
        content:
          CSharp: public string from
          VB: Public from As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.msg
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.msg
      language: CSharp
      name:
        CSharp: msg
        VB: msg
      nameWithType:
        CSharp: LobbyNetworkingController.DirectMessage.msg
        VB: LobbyNetworkingController.DirectMessage.msg
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.msg
        VB: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage.msg
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: msg
        path: ''
        startLine: 25884
      syntax:
        content:
          CSharp: public string msg
          VB: Public msg As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
    language: CSharp
    name:
      CSharp: ConnectionResponse
      VB: ConnectionResponse
    nameWithType:
      CSharp: ConnectionResponse
      VB: ConnectionResponse
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
      VB: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: ConnectionResponse
      path: ''
      startLine: 26234
    syntax:
      content:
        CSharp: public class ConnectionResponse
        VB: Public Class ConnectionResponse
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.connectionId
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.connectionId
      language: CSharp
      name:
        CSharp: connectionId
        VB: connectionId
      nameWithType:
        CSharp: ConnectionResponse.connectionId
        VB: ConnectionResponse.connectionId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.connectionId
        VB: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.connectionId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: connectionId
        path: ''
        startLine: 26237
      syntax:
        content:
          CSharp: public ulong connectionId
          VB: Public connectionId As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.lobbyId
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.lobbyId
      language: CSharp
      name:
        CSharp: lobbyId
        VB: lobbyId
      nameWithType:
        CSharp: ConnectionResponse.lobbyId
        VB: ConnectionResponse.lobbyId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.lobbyId
        VB: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.lobbyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: lobbyId
        path: ''
        startLine: 26238
      syntax:
        content:
          CSharp: public int lobbyId
          VB: Public lobbyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.currentVersion
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.currentVersion
      language: CSharp
      name:
        CSharp: currentVersion
        VB: currentVersion
      nameWithType:
        CSharp: ConnectionResponse.currentVersion
        VB: ConnectionResponse.currentVersion
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.currentVersion
        VB: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse.currentVersion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: currentVersion
        path: ''
        startLine: 26239
      syntax:
        content:
          CSharp: public string currentVersion
          VB: Public currentVersion As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
    language: CSharp
    name:
      CSharp: PlayersStreamData
      VB: PlayersStreamData
    nameWithType:
      CSharp: PlayersStreamData
      VB: PlayersStreamData
    qualifiedName:
      CSharp: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
      VB: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.LobbyNetworking
    source:
      id: PlayersStreamData
      path: ''
      startLine: 26242
    syntax:
      content:
        CSharp: public class PlayersStreamData
        VB: Public Class PlayersStreamData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Value
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: PlayersStreamData.Value
        VB: PlayersStreamData.Value
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Value
        VB: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: Value
        path: ''
        startLine: 26245
      syntax:
        content:
          CSharp: public string Value
          VB: Public Value As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.LastUpdated
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.LastUpdated
      language: CSharp
      name:
        CSharp: LastUpdated
        VB: LastUpdated
      nameWithType:
        CSharp: PlayersStreamData.LastUpdated
        VB: PlayersStreamData.LastUpdated
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.LastUpdated
        VB: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.LastUpdated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: LastUpdated
        path: ''
        startLine: 26246
      syntax:
        content:
          CSharp: public string LastUpdated
          VB: Public LastUpdated As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Permission
      commentId: F:Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Permission
      language: CSharp
      name:
        CSharp: Permission
        VB: Permission
      nameWithType:
        CSharp: PlayersStreamData.Permission
        VB: PlayersStreamData.Permission
      qualifiedName:
        CSharp: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Permission
        VB: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData.Permission
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.LobbyNetworking
      source:
        id: Permission
        path: ''
        startLine: 26247
      syntax:
        content:
          CSharp: public string Permission
          VB: Public Permission As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.BattleModule
  commentId: N:Timba.Games.SacredTails.BattleModule
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.BattleModule
    VB: Timba.Games.SacredTails.BattleModule
  nameWithType:
    CSharp: Timba.Games.SacredTails.BattleModule
    VB: Timba.Games.SacredTails.BattleModule
  qualifiedName:
    CSharp: Timba.Games.SacredTails.BattleModule
    VB: Timba.Games.SacredTails.BattleModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.BattleModule.UIHelper
    commentId: T:Timba.Games.SacredTails.BattleModule.UIHelper
    language: CSharp
    name:
      CSharp: UIHelper
      VB: UIHelper
    nameWithType:
      CSharp: UIHelper
      VB: UIHelper
    qualifiedName:
      CSharp: Timba.Games.SacredTails.BattleModule.UIHelper
      VB: Timba.Games.SacredTails.BattleModule.UIHelper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.BattleModule
    source:
      id: UIHelper
      path: ''
      startLine: 30125
    syntax:
      content:
        CSharp: 'public class UIHelper : MonoBehaviour'
        VB: >-
          Public Class UIHelper

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.BattleModule.UIHelper.turnsController
      commentId: F:Timba.Games.SacredTails.BattleModule.UIHelper.turnsController
      language: CSharp
      name:
        CSharp: turnsController
        VB: turnsController
      nameWithType:
        CSharp: UIHelper.turnsController
        VB: UIHelper.turnsController
      qualifiedName:
        CSharp: Timba.Games.SacredTails.BattleModule.UIHelper.turnsController
        VB: Timba.Games.SacredTails.BattleModule.UIHelper.turnsController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.BattleModule
      source:
        id: turnsController
        path: ''
        startLine: 30127
      syntax:
        content:
          CSharp: public TurnsController turnsController
          VB: Public turnsController As TurnsController
        return:
          type: Global.TurnsController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.BattleModule.UIHelper.battleGameMode
      commentId: F:Timba.Games.SacredTails.BattleModule.UIHelper.battleGameMode
      language: CSharp
      name:
        CSharp: battleGameMode
        VB: battleGameMode
      nameWithType:
        CSharp: UIHelper.battleGameMode
        VB: UIHelper.battleGameMode
      qualifiedName:
        CSharp: Timba.Games.SacredTails.BattleModule.UIHelper.battleGameMode
        VB: Timba.Games.SacredTails.BattleModule.UIHelper.battleGameMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.BattleModule
      source:
        id: battleGameMode
        path: ''
        startLine: 30128
      syntax:
        content:
          CSharp: public BattleGameMode battleGameMode
          VB: Public battleGameMode As BattleGameMode
        return:
          type: Global.BattleGameMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup
      commentId: M:Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup
      language: CSharp
      name:
        CSharp: OpenSkipTurnPopup()
        VB: OpenSkipTurnPopup()
      nameWithType:
        CSharp: UIHelper.OpenSkipTurnPopup()
        VB: UIHelper.OpenSkipTurnPopup()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup()
        VB: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.BattleModule
      source:
        id: OpenSkipTurnPopup
        path: ''
        startLine: 30129
      syntax:
        content:
          CSharp: public void OpenSkipTurnPopup()
          VB: Public Sub OpenSkipTurnPopup
      overload: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup
      commentId: M:Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup
      language: CSharp
      name:
        CSharp: OpenSurrenderPopup()
        VB: OpenSurrenderPopup()
      nameWithType:
        CSharp: UIHelper.OpenSurrenderPopup()
        VB: UIHelper.OpenSurrenderPopup()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup()
        VB: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.BattleModule
      source:
        id: OpenSurrenderPopup
        path: ''
        startLine: 30142
      syntax:
        content:
          CSharp: public void OpenSurrenderPopup()
          VB: Public Sub OpenSurrenderPopup
      overload: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.PopupModule
  commentId: N:Timba.Games.SacredTails.PopupModule
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.PopupModule
    VB: Timba.Games.SacredTails.PopupModule
  nameWithType:
    CSharp: Timba.Games.SacredTails.PopupModule
    VB: Timba.Games.SacredTails.PopupModule
  qualifiedName:
    CSharp: Timba.Games.SacredTails.PopupModule
    VB: Timba.Games.SacredTails.PopupModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.PopupModule.IPopupManager
    commentId: T:Timba.Games.SacredTails.PopupModule.IPopupManager
    language: CSharp
    name:
      CSharp: IPopupManager
      VB: IPopupManager
    nameWithType:
      CSharp: IPopupManager
      VB: IPopupManager
    qualifiedName:
      CSharp: Timba.Games.SacredTails.PopupModule.IPopupManager
      VB: Timba.Games.SacredTails.PopupModule.IPopupManager
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.PopupModule
    source:
      id: IPopupManager
      path: ''
      startLine: 31186
    syntax:
      content:
        CSharp: public interface IPopupManager
        VB: >-
          Public Interface IPopupManager

              Inherits IService
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
      commentId: M:Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
      language: CSharp
      name:
        CSharp: ShowInfoPopup(String, Dictionary<PopupManager.ButtonType, Action>)
        VB: ShowInfoPopup(String, Dictionary(Of PopupManager.ButtonType, Action))
      nameWithType:
        CSharp: IPopupManager.ShowInfoPopup(String, Dictionary<PopupManager.ButtonType, Action>)
        VB: IPopupManager.ShowInfoPopup(String, Dictionary(Of PopupManager.ButtonType, Action))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String, System.Collections.Generic.Dictionary<Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType, Action>)
        VB: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String, System.Collections.Generic.Dictionary(Of Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType, Action))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: ShowInfoPopup
        path: ''
        startLine: 31188
      syntax:
        content:
          CSharp: void ShowInfoPopup(string textInfo, Dictionary<PopupManager.ButtonType, Action> buttonsActionsPair = null)
          VB: Sub ShowInfoPopup(textInfo As String, buttonsActionsPair As Dictionary(Of PopupManager.ButtonType, Action) = Nothing)
        parameters:
        - id: textInfo
          type: System.String
        - id: buttonsActionsPair
          type: System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action}
      overload: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      commentId: M:Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      language: CSharp
      name:
        CSharp: HideInfoPopup()
        VB: HideInfoPopup()
      nameWithType:
        CSharp: IPopupManager.HideInfoPopup()
        VB: IPopupManager.HideInfoPopup()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup()
        VB: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: HideInfoPopup
        path: ''
        startLine: 31190
      syntax:
        content:
          CSharp: void HideInfoPopup()
          VB: Sub HideInfoPopup
      overload: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Games.SacredTails.PopupModule.PopupManager
    commentId: T:Timba.Games.SacredTails.PopupModule.PopupManager
    language: CSharp
    name:
      CSharp: PopupManager
      VB: PopupManager
    nameWithType:
      CSharp: PopupManager
      VB: PopupManager
    qualifiedName:
      CSharp: Timba.Games.SacredTails.PopupModule.PopupManager
      VB: Timba.Games.SacredTails.PopupModule.PopupManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.PopupModule
    source:
      id: PopupManager
      path: ''
      startLine: 31202
    syntax:
      content:
        CSharp: 'public class PopupManager : MonoBehaviour, IPopupManager'
        VB: >-
          Public Class PopupManager

              Inherits MonoBehaviour

              Implements IPopupManager
    inheritance:
    - System.Object
    implements:
    - Timba.Games.SacredTails.PopupModule.IPopupManager
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady
      commentId: M:Timba.Games.SacredTails.PopupModule.PopupManager.IsReady
      language: CSharp
      name:
        CSharp: IsReady()
        VB: IsReady()
      nameWithType:
        CSharp: PopupManager.IsReady()
        VB: PopupManager.IsReady()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady()
        VB: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: IsReady
        path: ''
        startLine: 31217
      syntax:
        content:
          CSharp: public bool IsReady()
          VB: Public Function IsReady As Boolean
        return:
          type: System.Boolean
      overload: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
      commentId: M:Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
      language: CSharp
      name:
        CSharp: ShowInfoPopup(String, Dictionary<PopupManager.ButtonType, Action>)
        VB: ShowInfoPopup(String, Dictionary(Of PopupManager.ButtonType, Action))
      nameWithType:
        CSharp: PopupManager.ShowInfoPopup(String, Dictionary<PopupManager.ButtonType, Action>)
        VB: PopupManager.ShowInfoPopup(String, Dictionary(Of PopupManager.ButtonType, Action))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup(System.String, System.Collections.Generic.Dictionary<Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType, Action>)
        VB: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup(System.String, System.Collections.Generic.Dictionary(Of Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType, Action))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: ShowInfoPopup
        path: ''
        startLine: 31222
      syntax:
        content:
          CSharp: public void ShowInfoPopup(string textInfo, Dictionary<PopupManager.ButtonType, Action> buttonsActionsPair = null)
          VB: Public Sub ShowInfoPopup(textInfo As String, buttonsActionsPair As Dictionary(Of PopupManager.ButtonType, Action) = Nothing)
        parameters:
        - id: textInfo
          type: System.String
        - id: buttonsActionsPair
          type: System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action}
      overload: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup*
      implements:
      - Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup
      commentId: M:Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup
      language: CSharp
      name:
        CSharp: HideInfoPopup()
        VB: HideInfoPopup()
      nameWithType:
        CSharp: PopupManager.HideInfoPopup()
        VB: PopupManager.HideInfoPopup()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup()
        VB: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: HideInfoPopup
        path: ''
        startLine: 31245
      syntax:
        content:
          CSharp: public void HideInfoPopup()
          VB: Public Sub HideInfoPopup
      overload: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup*
      implements:
      - Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
    commentId: T:Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
    language: CSharp
    name:
      CSharp: PopupManager.ButtonType
      VB: PopupManager.ButtonType
    nameWithType:
      CSharp: PopupManager.ButtonType
      VB: PopupManager.ButtonType
    qualifiedName:
      CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      VB: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.PopupModule
    source:
      id: ButtonType
      path: ''
      startLine: 31209
    syntax:
      content:
        CSharp: public enum ButtonType
        VB: Public Enum ButtonType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.BACK_BUTTON
      commentId: F:Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.BACK_BUTTON
      language: CSharp
      name:
        CSharp: BACK_BUTTON
        VB: BACK_BUTTON
      nameWithType:
        CSharp: PopupManager.ButtonType.BACK_BUTTON
        VB: PopupManager.ButtonType.BACK_BUTTON
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.BACK_BUTTON
        VB: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.BACK_BUTTON
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: BACK_BUTTON
        path: ''
        startLine: 31211
      syntax:
        content:
          CSharp: BACK_BUTTON = 0
          VB: BACK_BUTTON = 0
        return:
          type: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.CONFIRM_BUTTON
      commentId: F:Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.CONFIRM_BUTTON
      language: CSharp
      name:
        CSharp: CONFIRM_BUTTON
        VB: CONFIRM_BUTTON
      nameWithType:
        CSharp: PopupManager.ButtonType.CONFIRM_BUTTON
        VB: PopupManager.ButtonType.CONFIRM_BUTTON
      qualifiedName:
        CSharp: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.CONFIRM_BUTTON
        VB: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType.CONFIRM_BUTTON
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.PopupModule
      source:
        id: CONFIRM_BUTTON
        path: ''
        startLine: 31212
      syntax:
        content:
          CSharp: CONFIRM_BUTTON = 1
          VB: CONFIRM_BUTTON = 1
        return:
          type: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: Timba.Games.SacredTails.StoreModule
  commentId: N:Timba.Games.SacredTails.StoreModule
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.StoreModule
    VB: Timba.Games.SacredTails.StoreModule
  nameWithType:
    CSharp: Timba.Games.SacredTails.StoreModule
    VB: Timba.Games.SacredTails.StoreModule
  qualifiedName:
    CSharp: Timba.Games.SacredTails.StoreModule
    VB: Timba.Games.SacredTails.StoreModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.StoreModule.StoreController
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreController
    language: CSharp
    name:
      CSharp: StoreController
      VB: StoreController
    nameWithType:
      CSharp: StoreController
      VB: StoreController
    qualifiedName:
      CSharp: Timba.Games.SacredTails.StoreModule.StoreController
      VB: Timba.Games.SacredTails.StoreModule.StoreController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.StoreModule
    source:
      id: StoreController
      path: ''
      startLine: 31264
    syntax:
      content:
        CSharp: 'public class StoreController : MonoBehaviour'
        VB: >-
          Public Class StoreController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.StoreModule.StoreController.Start
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: StoreController.Start()
        VB: StoreController.Start()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.Start()
        VB: Timba.Games.SacredTails.StoreModule.StoreController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: Start
        path: ''
        startLine: 31288
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Timba.Games.SacredTails.StoreModule.StoreController.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent
      language: CSharp
      name:
        CSharp: SubscribeToPurchaseEvent()
        VB: SubscribeToPurchaseEvent()
      nameWithType:
        CSharp: StoreController.SubscribeToPurchaseEvent()
        VB: StoreController.SubscribeToPurchaseEvent()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent()
        VB: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: SubscribeToPurchaseEvent
        path: ''
        startLine: 31293
      syntax:
        content:
          CSharp: public void SubscribeToPurchaseEvent()
          VB: Public Sub SubscribeToPurchaseEvent
      overload: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore
      language: CSharp
      name:
        CSharp: RequestCardsStore()
        VB: RequestCardsStore()
      nameWithType:
        CSharp: StoreController.RequestCardsStore()
        VB: StoreController.RequestCardsStore()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore()
        VB: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: RequestCardsStore
        path: ''
        startLine: 31307
      syntax:
        content:
          CSharp: public void RequestCardsStore()
          VB: Public Sub RequestCardsStore
      overload: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore(GetCatalogItemsResult)
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore(GetCatalogItemsResult)
      language: CSharp
      name:
        CSharp: SetCardStore(GetCatalogItemsResult)
        VB: SetCardStore(GetCatalogItemsResult)
      nameWithType:
        CSharp: StoreController.SetCardStore(GetCatalogItemsResult)
        VB: StoreController.SetCardStore(GetCatalogItemsResult)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore(GetCatalogItemsResult)
        VB: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore(GetCatalogItemsResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: SetCardStore
        path: ''
        startLine: 31314
      syntax:
        content:
          CSharp: public void SetCardStore(GetCatalogItemsResult result)
          VB: Public Sub SetCardStore(result As GetCatalogItemsResult)
        parameters:
        - id: result
          type: Global.GetCatalogItemsResult
      overload: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.HideStore
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.HideStore
      language: CSharp
      name:
        CSharp: HideStore()
        VB: HideStore()
      nameWithType:
        CSharp: StoreController.HideStore()
        VB: StoreController.HideStore()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.HideStore()
        VB: Timba.Games.SacredTails.StoreModule.StoreController.HideStore()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: HideStore
        path: ''
        startLine: 31319
      syntax:
        content:
          CSharp: public void HideStore()
          VB: Public Sub HideStore
      overload: Timba.Games.SacredTails.StoreModule.StoreController.HideStore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.CreatePool
      language: CSharp
      name:
        CSharp: CreatePool()
        VB: CreatePool()
      nameWithType:
        CSharp: StoreController.CreatePool()
        VB: StoreController.CreatePool()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool()
        VB: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: CreatePool
        path: ''
        startLine: 31327
      syntax:
        content:
          CSharp: public void CreatePool()
          VB: Public Sub CreatePool
      overload: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.FillPool(System.Collections.Generic.List{CatalogItem})
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.FillPool(System.Collections.Generic.List{CatalogItem})
      language: CSharp
      name:
        CSharp: FillPool(List<CatalogItem>)
        VB: FillPool(List(Of CatalogItem))
      nameWithType:
        CSharp: StoreController.FillPool(List<CatalogItem>)
        VB: StoreController.FillPool(List(Of CatalogItem))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.FillPool(System.Collections.Generic.List<CatalogItem>)
        VB: Timba.Games.SacredTails.StoreModule.StoreController.FillPool(System.Collections.Generic.List(Of CatalogItem))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: FillPool
        path: ''
        startLine: 31340
      syntax:
        content:
          CSharp: public void FillPool(List<CatalogItem> items)
          VB: Public Sub FillPool(items As List(Of CatalogItem))
        parameters:
        - id: items
          type: System.Collections.Generic.List{CatalogItem}
      overload: Timba.Games.SacredTails.StoreModule.StoreController.FillPool*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem(System.Int32,System.UInt32)
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreController.BuyItem(System.Int32,System.UInt32)
      language: CSharp
      name:
        CSharp: BuyItem(Int32, UInt32)
        VB: BuyItem(Int32, UInt32)
      nameWithType:
        CSharp: StoreController.BuyItem(Int32, UInt32)
        VB: StoreController.BuyItem(Int32, UInt32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem(System.Int32, System.UInt32)
        VB: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem(System.Int32, System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: BuyItem
        path: ''
        startLine: 31370
      syntax:
        content:
          CSharp: public void BuyItem(int itemId, uint itemPrice)
          VB: Public Sub BuyItem(itemId As Integer, itemPrice As UInteger)
        parameters:
        - id: itemId
          type: System.Int32
        - id: itemPrice
          type: System.UInt32
      overload: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.StoreModule.StoreItem
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreItem
    language: CSharp
    name:
      CSharp: StoreItem
      VB: StoreItem
    nameWithType:
      CSharp: StoreItem
      VB: StoreItem
    qualifiedName:
      CSharp: Timba.Games.SacredTails.StoreModule.StoreItem
      VB: Timba.Games.SacredTails.StoreModule.StoreItem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.StoreModule
    source:
      id: StoreItem
      path: ''
      startLine: 31393
    syntax:
      content:
        CSharp: 'public class StoreItem : MonoBehaviour'
        VB: >-
          Public Class StoreItem

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.StoreModule.StoreItem.data
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItem.data
      language: CSharp
      name:
        CSharp: data
        VB: data
      nameWithType:
        CSharp: StoreItem.data
        VB: StoreItem.data
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItem.data
        VB: Timba.Games.SacredTails.StoreModule.StoreItem.data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: data
        path: ''
        startLine: 31396
      syntax:
        content:
          CSharp: public StoreItemData data
          VB: Public data As StoreItemData
        return:
          type: Timba.Games.SacredTails.StoreModule.StoreItemData
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItem.cardButton
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItem.cardButton
      language: CSharp
      name:
        CSharp: cardButton
        VB: cardButton
      nameWithType:
        CSharp: StoreItem.cardButton
        VB: StoreItem.cardButton
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItem.cardButton
        VB: Timba.Games.SacredTails.StoreModule.StoreItem.cardButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: cardButton
        path: ''
        startLine: 31405
      syntax:
        content:
          CSharp: public Button cardButton
          VB: Public cardButton As Button
        return:
          type: Global.Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItem.Init
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreItem.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: StoreItem.Init()
        VB: StoreItem.Init()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItem.Init()
        VB: Timba.Games.SacredTails.StoreModule.StoreItem.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: Init
        path: ''
        startLine: 31409
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Timba.Games.SacredTails.StoreModule.StoreItem.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction(System.Int32,Action{System.Int32})
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction(System.Int32,Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetCardButtonAction(Int32, Action<Int32>)
        VB: SetCardButtonAction(Int32, Action(Of Int32))
      nameWithType:
        CSharp: StoreItem.SetCardButtonAction(Int32, Action<Int32>)
        VB: StoreItem.SetCardButtonAction(Int32, Action(Of Int32))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction(System.Int32, Action<System.Int32>)
        VB: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction(System.Int32, Action(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: SetCardButtonAction
        path: ''
        startLine: 31421
      syntax:
        content:
          CSharp: public void SetCardButtonAction(int index, Action<int> callback)
          VB: Public Sub SetCardButtonAction(index As Integer, callback As Action(Of Integer))
        parameters:
        - id: index
          type: System.Int32
        - id: callback
          type: Global.Action{System.Int32}
      overload: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.StoreModule.StoreItemData
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreItemData
    language: CSharp
    name:
      CSharp: StoreItemData
      VB: StoreItemData
    nameWithType:
      CSharp: StoreItemData
      VB: StoreItemData
    qualifiedName:
      CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData
      VB: Timba.Games.SacredTails.StoreModule.StoreItemData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.StoreModule
    source:
      id: StoreItemData
      path: ''
      startLine: 31432
    syntax:
      content:
        CSharp: public struct StoreItemData
        VB: Public Structure StoreItemData
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Timba.Games.SacredTails.StoreModule.StoreItemData.itemId
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItemData.itemId
      language: CSharp
      name:
        CSharp: itemId
        VB: itemId
      nameWithType:
        CSharp: StoreItemData.itemId
        VB: StoreItemData.itemId
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData.itemId
        VB: Timba.Games.SacredTails.StoreModule.StoreItemData.itemId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: itemId
        path: ''
        startLine: 31434
      syntax:
        content:
          CSharp: public int itemId
          VB: Public itemId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItemData.itemName
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItemData.itemName
      language: CSharp
      name:
        CSharp: itemName
        VB: itemName
      nameWithType:
        CSharp: StoreItemData.itemName
        VB: StoreItemData.itemName
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData.itemName
        VB: Timba.Games.SacredTails.StoreModule.StoreItemData.itemName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: itemName
        path: ''
        startLine: 31435
      syntax:
        content:
          CSharp: public string itemName
          VB: Public itemName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItemData.itemSprite
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItemData.itemSprite
      language: CSharp
      name:
        CSharp: itemSprite
        VB: itemSprite
      nameWithType:
        CSharp: StoreItemData.itemSprite
        VB: StoreItemData.itemSprite
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData.itemSprite
        VB: Timba.Games.SacredTails.StoreModule.StoreItemData.itemSprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: itemSprite
        path: ''
        startLine: 31436
      syntax:
        content:
          CSharp: public Sprite itemSprite
          VB: Public itemSprite As Sprite
        return:
          type: Global.Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItemData.itemPrice
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItemData.itemPrice
      language: CSharp
      name:
        CSharp: itemPrice
        VB: itemPrice
      nameWithType:
        CSharp: StoreItemData.itemPrice
        VB: StoreItemData.itemPrice
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData.itemPrice
        VB: Timba.Games.SacredTails.StoreModule.StoreItemData.itemPrice
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: itemPrice
        path: ''
        startLine: 31437
      syntax:
        content:
          CSharp: public uint itemPrice
          VB: Public itemPrice As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreItemData.priceCurrency
      commentId: F:Timba.Games.SacredTails.StoreModule.StoreItemData.priceCurrency
      language: CSharp
      name:
        CSharp: priceCurrency
        VB: priceCurrency
      nameWithType:
        CSharp: StoreItemData.priceCurrency
        VB: StoreItemData.priceCurrency
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreItemData.priceCurrency
        VB: Timba.Games.SacredTails.StoreModule.StoreItemData.priceCurrency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: priceCurrency
        path: ''
        startLine: 31438
      syntax:
        content:
          CSharp: public string priceCurrency
          VB: Public priceCurrency As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Games.SacredTails.StoreModule.StoreView
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreView
    language: CSharp
    name:
      CSharp: StoreView
      VB: StoreView
    nameWithType:
      CSharp: StoreView
      VB: StoreView
    qualifiedName:
      CSharp: Timba.Games.SacredTails.StoreModule.StoreView
      VB: Timba.Games.SacredTails.StoreModule.StoreView
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.StoreModule
    source:
      id: StoreView
      path: ''
      startLine: 31453
    syntax:
      content:
        CSharp: 'public class StoreView : MonoBehaviour'
        VB: >-
          Public Class StoreView

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard(System.Int32,System.UInt32,Action{System.Int32,System.UInt32})
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard(System.Int32,System.UInt32,Action{System.Int32,System.UInt32})
      language: CSharp
      name:
        CSharp: ShowPopupPurchaseCard(Int32, UInt32, Action<Int32, UInt32>)
        VB: ShowPopupPurchaseCard(Int32, UInt32, Action(Of Int32, UInt32))
      nameWithType:
        CSharp: StoreView.ShowPopupPurchaseCard(Int32, UInt32, Action<Int32, UInt32>)
        VB: StoreView.ShowPopupPurchaseCard(Int32, UInt32, Action(Of Int32, UInt32))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard(System.Int32, System.UInt32, Action<System.Int32, System.UInt32>)
        VB: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard(System.Int32, System.UInt32, Action(Of System.Int32, System.UInt32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: ShowPopupPurchaseCard
        path: ''
        startLine: 31461
      syntax:
        content:
          CSharp: public void ShowPopupPurchaseCard(int itemId, uint itemPrice, Action<int, uint> onPurchaseCard)
          VB: Public Sub ShowPopupPurchaseCard(itemId As Integer, itemPrice As UInteger, onPurchaseCard As Action(Of Integer, UInteger))
        parameters:
        - id: itemId
          type: System.Int32
        - id: itemPrice
          type: System.UInt32
        - id: onPurchaseCard
          type: Global.Action{System.Int32,System.UInt32}
      overload: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult(System.String)
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult(System.String)
      language: CSharp
      name:
        CSharp: ShowPopupPurchaseResult(String)
        VB: ShowPopupPurchaseResult(String)
      nameWithType:
        CSharp: StoreView.ShowPopupPurchaseResult(String)
        VB: StoreView.ShowPopupPurchaseResult(String)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult(System.String)
        VB: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: ShowPopupPurchaseResult
        path: ''
        startLine: 31470
      syntax:
        content:
          CSharp: public void ShowPopupPurchaseResult(string message)
          VB: Public Sub ShowPopupPurchaseResult(message As String)
        parameters:
        - id: message
          type: System.String
      overload: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreView.HidePopup
      language: CSharp
      name:
        CSharp: HidePopup()
        VB: HidePopup()
      nameWithType:
        CSharp: StoreView.HidePopup()
        VB: StoreView.HidePopup()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup()
        VB: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: HidePopup
        path: ''
        startLine: 31478
      syntax:
        content:
          CSharp: public void HidePopup()
          VB: Public Sub HidePopup
      overload: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase
      language: CSharp
      name:
        CSharp: HidePanelAfterPurchase()
        VB: HidePanelAfterPurchase()
      nameWithType:
        CSharp: StoreView.HidePanelAfterPurchase()
        VB: StoreView.HidePanelAfterPurchase()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase()
        VB: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: HidePanelAfterPurchase
        path: ''
        startLine: 31485
      syntax:
        content:
          CSharp: public void HidePanelAfterPurchase()
          VB: Public Sub HidePanelAfterPurchase
      overload: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.StoreModule.StoreView.HideStore(System.Collections.Generic.List{Timba.Games.SacredTails.StoreModule.StoreItem})
      commentId: M:Timba.Games.SacredTails.StoreModule.StoreView.HideStore(System.Collections.Generic.List{Timba.Games.SacredTails.StoreModule.StoreItem})
      language: CSharp
      name:
        CSharp: HideStore(List<StoreItem>)
        VB: HideStore(List(Of StoreItem))
      nameWithType:
        CSharp: StoreView.HideStore(List<StoreItem>)
        VB: StoreView.HideStore(List(Of StoreItem))
      qualifiedName:
        CSharp: Timba.Games.SacredTails.StoreModule.StoreView.HideStore(System.Collections.Generic.List<Timba.Games.SacredTails.StoreModule.StoreItem>)
        VB: Timba.Games.SacredTails.StoreModule.StoreView.HideStore(System.Collections.Generic.List(Of Timba.Games.SacredTails.StoreModule.StoreItem))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.StoreModule
      source:
        id: HideStore
        path: ''
        startLine: 31491
      syntax:
        content:
          CSharp: public void HideStore(List<StoreItem> storeItems)
          VB: Public Sub HideStore(storeItems As List(Of StoreItem))
        parameters:
        - id: storeItems
          type: System.Collections.Generic.List{Timba.Games.SacredTails.StoreModule.StoreItem}
      overload: Timba.Games.SacredTails.StoreModule.StoreView.HideStore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.SacredTails.WalletModule
  commentId: N:Timba.Games.SacredTails.WalletModule
  language: CSharp
  name:
    CSharp: Timba.Games.SacredTails.WalletModule
    VB: Timba.Games.SacredTails.WalletModule
  nameWithType:
    CSharp: Timba.Games.SacredTails.WalletModule
    VB: Timba.Games.SacredTails.WalletModule
  qualifiedName:
    CSharp: Timba.Games.SacredTails.WalletModule
    VB: Timba.Games.SacredTails.WalletModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.SacredTails.WalletModule.WalletView
    commentId: T:Timba.Games.SacredTails.WalletModule.WalletView
    language: CSharp
    name:
      CSharp: WalletView
      VB: WalletView
    nameWithType:
      CSharp: WalletView
      VB: WalletView
    qualifiedName:
      CSharp: Timba.Games.SacredTails.WalletModule.WalletView
      VB: Timba.Games.SacredTails.WalletModule.WalletView
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.SacredTails.WalletModule
    source:
      id: WalletView
      path: ''
      startLine: 32504
    syntax:
      content:
        CSharp: 'public class WalletView : MonoBehaviour'
        VB: >-
          Public Class WalletView

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Games.SacredTails.WalletModule.WalletView.currencyText
      commentId: F:Timba.Games.SacredTails.WalletModule.WalletView.currencyText
      language: CSharp
      name:
        CSharp: currencyText
        VB: currencyText
      nameWithType:
        CSharp: WalletView.currencyText
        VB: WalletView.currencyText
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletModule.WalletView.currencyText
        VB: Timba.Games.SacredTails.WalletModule.WalletView.currencyText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.WalletModule
      source:
        id: currencyText
        path: ''
        startLine: 32506
      syntax:
        content:
          CSharp: public TMP_Text currencyText
          VB: Public currencyText As TMP_Text
        return:
          type: Global.TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletModule.WalletView.walletPanel
      commentId: F:Timba.Games.SacredTails.WalletModule.WalletView.walletPanel
      language: CSharp
      name:
        CSharp: walletPanel
        VB: walletPanel
      nameWithType:
        CSharp: WalletView.walletPanel
        VB: WalletView.walletPanel
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletModule.WalletView.walletPanel
        VB: Timba.Games.SacredTails.WalletModule.WalletView.walletPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.WalletModule
      source:
        id: walletPanel
        path: ''
        startLine: 32507
      syntax:
        content:
          CSharp: public GameObject walletPanel
          VB: Public walletPanel As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency(System.Int32)
      commentId: M:Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency(System.Int32)
      language: CSharp
      name:
        CSharp: ChangeCurrency(Int32)
        VB: ChangeCurrency(Int32)
      nameWithType:
        CSharp: WalletView.ChangeCurrency(Int32)
        VB: WalletView.ChangeCurrency(Int32)
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency(System.Int32)
        VB: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.WalletModule
      source:
        id: ChangeCurrency
        path: ''
        startLine: 32509
      syntax:
        content:
          CSharp: public void ChangeCurrency(int currentCurrency)
          VB: Public Sub ChangeCurrency(currentCurrency As Integer)
        parameters:
        - id: currentCurrency
          type: System.Int32
      overload: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet
      commentId: M:Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet
      language: CSharp
      name:
        CSharp: ShowUserWallet()
        VB: ShowUserWallet()
      nameWithType:
        CSharp: WalletView.ShowUserWallet()
        VB: WalletView.ShowUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet()
        VB: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.WalletModule
      source:
        id: ShowUserWallet
        path: ''
        startLine: 32514
      syntax:
        content:
          CSharp: public void ShowUserWallet()
          VB: Public Sub ShowUserWallet
      overload: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet
      commentId: M:Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet
      language: CSharp
      name:
        CSharp: HideUserWallet()
        VB: HideUserWallet()
      nameWithType:
        CSharp: WalletView.HideUserWallet()
        VB: WalletView.HideUserWallet()
      qualifiedName:
        CSharp: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet()
        VB: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Games.SacredTails.WalletModule
      source:
        id: HideUserWallet
        path: ''
        startLine: 32519
      syntax:
        content:
          CSharp: public void HideUserWallet()
          VB: Public Sub HideUserWallet
      overload: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Games.Networking.Testing
  commentId: N:Timba.Games.Networking.Testing
  language: CSharp
  name:
    CSharp: Timba.Games.Networking.Testing
    VB: Timba.Games.Networking.Testing
  nameWithType:
    CSharp: Timba.Games.Networking.Testing
    VB: Timba.Games.Networking.Testing
  qualifiedName:
    CSharp: Timba.Games.Networking.Testing
    VB: Timba.Games.Networking.Testing
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Games.Networking.Testing.NetworkingTestUI
    commentId: T:Timba.Games.Networking.Testing.NetworkingTestUI
    language: CSharp
    name:
      CSharp: NetworkingTestUI
      VB: NetworkingTestUI
    nameWithType:
      CSharp: NetworkingTestUI
      VB: NetworkingTestUI
    qualifiedName:
      CSharp: Timba.Games.Networking.Testing.NetworkingTestUI
      VB: Timba.Games.Networking.Testing.NetworkingTestUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Games.Networking.Testing
    source:
      id: NetworkingTestUI
      path: ''
      startLine: 32806
    syntax:
      content:
        CSharp: 'public class NetworkingTestUI : MonoBehaviour'
        VB: >-
          Public Class NetworkingTestUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: Timba.Characters
  commentId: N:Timba.Characters
  language: CSharp
  name:
    CSharp: Timba.Characters
    VB: Timba.Characters
  nameWithType:
    CSharp: Timba.Characters
    VB: Timba.Characters
  qualifiedName:
    CSharp: Timba.Characters
    VB: Timba.Characters
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Characters.PartVisual
    commentId: T:Timba.Characters.PartVisual
    language: CSharp
    name:
      CSharp: PartVisual
      VB: PartVisual
    nameWithType:
      CSharp: PartVisual
      VB: PartVisual
    qualifiedName:
      CSharp: Timba.Characters.PartVisual
      VB: Timba.Characters.PartVisual
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Characters
    source:
      id: PartVisual
      path: ''
      startLine: 16372
    syntax:
      content:
        CSharp: 'public class PartVisual : MonoBehaviour'
        VB: >-
          Public Class PartVisual

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Characters.PartVisual.OnPowered
      commentId: E:Timba.Characters.PartVisual.OnPowered
      language: CSharp
      name:
        CSharp: OnPowered
        VB: OnPowered
      nameWithType:
        CSharp: PartVisual.OnPowered
        VB: PartVisual.OnPowered
      qualifiedName:
        CSharp: Timba.Characters.PartVisual.OnPowered
        VB: Timba.Characters.PartVisual.OnPowered
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: Timba.Characters
      source:
        id: OnPowered
        path: ''
        startLine: 16375
      syntax:
        content:
          CSharp: public event Action<bool> OnPowered
          VB: Public Event OnPowered As Action(Of Boolean)
        return:
          type: Global.Action{System.Boolean}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Characters.PartVisual.ChangeSpritePalette(Color32[])
      commentId: M:Timba.Characters.PartVisual.ChangeSpritePalette(Color32[])
      language: CSharp
      name:
        CSharp: ChangeSpritePalette(Color32[])
        VB: ChangeSpritePalette(Color32())
      nameWithType:
        CSharp: PartVisual.ChangeSpritePalette(Color32[])
        VB: PartVisual.ChangeSpritePalette(Color32())
      qualifiedName:
        CSharp: Timba.Characters.PartVisual.ChangeSpritePalette(Color32[])
        VB: Timba.Characters.PartVisual.ChangeSpritePalette(Color32())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Characters
      source:
        id: ChangeSpritePalette
        path: ''
        startLine: 16451
      syntax:
        content:
          CSharp: public void ChangeSpritePalette(Color32[] _colors)
          VB: Public Sub ChangeSpritePalette(_colors As Color32())
        parameters:
        - id: _colors
          type: Global.Color32[]
      overload: Timba.Characters.PartVisual.ChangeSpritePalette*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Characters.PartVisual.RecolorPartSprites(Action{MaterialPropertyBlock})
      commentId: M:Timba.Characters.PartVisual.RecolorPartSprites(Action{MaterialPropertyBlock})
      language: CSharp
      name:
        CSharp: RecolorPartSprites(Action<MaterialPropertyBlock>)
        VB: RecolorPartSprites(Action(Of MaterialPropertyBlock))
      nameWithType:
        CSharp: PartVisual.RecolorPartSprites(Action<MaterialPropertyBlock>)
        VB: PartVisual.RecolorPartSprites(Action(Of MaterialPropertyBlock))
      qualifiedName:
        CSharp: Timba.Characters.PartVisual.RecolorPartSprites(Action<MaterialPropertyBlock>)
        VB: Timba.Characters.PartVisual.RecolorPartSprites(Action(Of MaterialPropertyBlock))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Characters
      source:
        id: RecolorPartSprites
        path: ''
        startLine: 16475
      syntax:
        content:
          CSharp: public void RecolorPartSprites(Action<MaterialPropertyBlock> _recolorAction)
          VB: Public Sub RecolorPartSprites(_recolorAction As Action(Of MaterialPropertyBlock))
        parameters:
        - id: _recolorAction
          type: Global.Action{MaterialPropertyBlock}
      overload: Timba.Characters.PartVisual.RecolorPartSprites*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Characters.PartVisual.RecolorPartImages(Action{Material})
      commentId: M:Timba.Characters.PartVisual.RecolorPartImages(Action{Material})
      language: CSharp
      name:
        CSharp: RecolorPartImages(Action<Material>)
        VB: RecolorPartImages(Action(Of Material))
      nameWithType:
        CSharp: PartVisual.RecolorPartImages(Action<Material>)
        VB: PartVisual.RecolorPartImages(Action(Of Material))
      qualifiedName:
        CSharp: Timba.Characters.PartVisual.RecolorPartImages(Action<Material>)
        VB: Timba.Characters.PartVisual.RecolorPartImages(Action(Of Material))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Characters
      source:
        id: RecolorPartImages
        path: ''
        startLine: 16485
      syntax:
        content:
          CSharp: public void RecolorPartImages(Action<Material> _recolorAction)
          VB: Public Sub RecolorPartImages(_recolorAction As Action(Of Material))
        parameters:
        - id: _recolorAction
          type: Global.Action{Material}
      overload: Timba.Characters.PartVisual.RecolorPartImages*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Characters.PartVisual.SetPowered(System.Boolean)
      commentId: M:Timba.Characters.PartVisual.SetPowered(System.Boolean)
      language: CSharp
      name:
        CSharp: SetPowered(Boolean)
        VB: SetPowered(Boolean)
      nameWithType:
        CSharp: PartVisual.SetPowered(Boolean)
        VB: PartVisual.SetPowered(Boolean)
      qualifiedName:
        CSharp: Timba.Characters.PartVisual.SetPowered(System.Boolean)
        VB: Timba.Characters.PartVisual.SetPowered(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Characters
      source:
        id: SetPowered
        path: ''
        startLine: 16506
      summary: "\nTurns on/off a part. Parts are turned off for building and other no-gameplay situations.\nCurrent implementation tries to be generic. Might need to change in the future\n"
      example: []
      syntax:
        content:
          CSharp: public void SetPowered(bool isPowered)
          VB: Public Sub SetPowered(isPowered As Boolean)
        parameters:
        - id: isPowered
          type: System.Boolean
      overload: Timba.Characters.PartVisual.SetPowered*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Recolor
  commentId: N:Timba.Recolor
  language: CSharp
  name:
    CSharp: Timba.Recolor
    VB: Timba.Recolor
  nameWithType:
    CSharp: Timba.Recolor
    VB: Timba.Recolor
  qualifiedName:
    CSharp: Timba.Recolor
    VB: Timba.Recolor
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Recolor.RecolorablePart3D
    commentId: T:Timba.Recolor.RecolorablePart3D
    language: CSharp
    name:
      CSharp: RecolorablePart3D
      VB: RecolorablePart3D
    nameWithType:
      CSharp: RecolorablePart3D
      VB: RecolorablePart3D
    qualifiedName:
      CSharp: Timba.Recolor.RecolorablePart3D
      VB: Timba.Recolor.RecolorablePart3D
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Recolor
    source:
      id: RecolorablePart3D
      path: ''
      startLine: 16518
    syntax:
      content:
        CSharp: 'public class RecolorablePart3D : MonoBehaviour'
        VB: >-
          Public Class RecolorablePart3D

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Recolor.RecolorablePart3D.colors
      commentId: F:Timba.Recolor.RecolorablePart3D.colors
      language: CSharp
      name:
        CSharp: colors
        VB: colors
      nameWithType:
        CSharp: RecolorablePart3D.colors
        VB: RecolorablePart3D.colors
      qualifiedName:
        CSharp: Timba.Recolor.RecolorablePart3D.colors
        VB: Timba.Recolor.RecolorablePart3D.colors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Recolor
      source:
        id: colors
        path: ''
        startLine: 16521
      syntax:
        content:
          CSharp: public Color32[] colors
          VB: Public colors As Color32()
        return:
          type: Global.Color32[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Recolor.RecolorablePart3D.SetColors(System.String[],Color32[])
      commentId: M:Timba.Recolor.RecolorablePart3D.SetColors(System.String[],Color32[])
      language: CSharp
      name:
        CSharp: SetColors(String[], Color32[])
        VB: SetColors(String(), Color32())
      nameWithType:
        CSharp: RecolorablePart3D.SetColors(String[], Color32[])
        VB: RecolorablePart3D.SetColors(String(), Color32())
      qualifiedName:
        CSharp: Timba.Recolor.RecolorablePart3D.SetColors(System.String[], Color32[])
        VB: Timba.Recolor.RecolorablePart3D.SetColors(System.String(), Color32())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Recolor
      source:
        id: SetColors
        path: ''
        startLine: 16533
      syntax:
        content:
          CSharp: public void SetColors(string[] materialPropertyName, Color32[] newColors)
          VB: Public Sub SetColors(materialPropertyName As String(), newColors As Color32())
        parameters:
        - id: materialPropertyName
          type: System.String[]
        - id: newColors
          type: Global.Color32[]
      overload: Timba.Recolor.RecolorablePart3D.SetColors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Packages.Games.PlayerControllerModule
  commentId: N:Timba.Packages.Games.PlayerControllerModule
  language: CSharp
  name:
    CSharp: Timba.Packages.Games.PlayerControllerModule
    VB: Timba.Packages.Games.PlayerControllerModule
  nameWithType:
    CSharp: Timba.Packages.Games.PlayerControllerModule
    VB: Timba.Packages.Games.PlayerControllerModule
  qualifiedName:
    CSharp: Timba.Packages.Games.PlayerControllerModule
    VB: Timba.Packages.Games.PlayerControllerModule
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Packages.Games.PlayerControllerModule.InputSource
    commentId: T:Timba.Packages.Games.PlayerControllerModule.InputSource
    language: CSharp
    name:
      CSharp: InputSource
      VB: InputSource
    nameWithType:
      CSharp: InputSource
      VB: InputSource
    qualifiedName:
      CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource
      VB: Timba.Packages.Games.PlayerControllerModule.InputSource
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.PlayerControllerModule
    source:
      id: InputSource
      path: ''
      startLine: 27765
    syntax:
      content:
        CSharp: 'public class InputSource : ScriptableObject'
        VB: >-
          Public Class InputSource

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.right
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputSource.right
      language: CSharp
      name:
        CSharp: right
        VB: right
      nameWithType:
        CSharp: InputSource.right
        VB: InputSource.right
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.right
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.right
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: right
        path: ''
        startLine: 27768
      syntax:
        content:
          CSharp: public KeyCode[] right
          VB: Public right As KeyCode()
        return:
          type: Global.KeyCode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.left
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputSource.left
      language: CSharp
      name:
        CSharp: left
        VB: left
      nameWithType:
        CSharp: InputSource.left
        VB: InputSource.left
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.left
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.left
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: left
        path: ''
        startLine: 27769
      syntax:
        content:
          CSharp: public KeyCode[] left
          VB: Public left As KeyCode()
        return:
          type: Global.KeyCode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.up
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputSource.up
      language: CSharp
      name:
        CSharp: up
        VB: up
      nameWithType:
        CSharp: InputSource.up
        VB: InputSource.up
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.up
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: up
        path: ''
        startLine: 27770
      syntax:
        content:
          CSharp: public KeyCode[] up
          VB: Public up As KeyCode()
        return:
          type: Global.KeyCode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.down
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputSource.down
      language: CSharp
      name:
        CSharp: down
        VB: down
      nameWithType:
        CSharp: InputSource.down
        VB: InputSource.down
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.down
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: down
        path: ''
        startLine: 27771
      syntax:
        content:
          CSharp: public KeyCode[] down
          VB: Public down As KeyCode()
        return:
          type: Global.KeyCode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.interact
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputSource.interact
      language: CSharp
      name:
        CSharp: interact
        VB: interact
      nameWithType:
        CSharp: InputSource.interact
        VB: InputSource.interact
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.interact
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.interact
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: interact
        path: ''
        startLine: 27772
      syntax:
        content:
          CSharp: public KeyCode[] interact
          VB: Public interact As KeyCode()
        return:
          type: Global.KeyCode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue(KeyCode[],KeyCode[])
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue(KeyCode[],KeyCode[])
      language: CSharp
      name:
        CSharp: SetMoveValue(KeyCode[], KeyCode[])
        VB: SetMoveValue(KeyCode(), KeyCode())
      nameWithType:
        CSharp: InputSource.SetMoveValue(KeyCode[], KeyCode[])
        VB: InputSource.SetMoveValue(KeyCode(), KeyCode())
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue(KeyCode[], KeyCode[])
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue(KeyCode(), KeyCode())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: SetMoveValue
        path: ''
        startLine: 27775
      syntax:
        content:
          CSharp: public float SetMoveValue(KeyCode[] aSet, KeyCode[] bSet)
          VB: Public Function SetMoveValue(aSet As KeyCode(), bSet As KeyCode()) As Single
        parameters:
        - id: aSet
          type: Global.KeyCode[]
        - id: bSet
          type: Global.KeyCode[]
        return:
          type: System.Single
      overload: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue
      language: CSharp
      name:
        CSharp: SetInteractValue()
        VB: SetInteractValue()
      nameWithType:
        CSharp: InputSource.SetInteractValue()
        VB: InputSource.SetInteractValue()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue()
        VB: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: SetInteractValue
        path: ''
        startLine: 27795
      syntax:
        content:
          CSharp: public bool SetInteractValue()
          VB: Public Function SetInteractValue As Boolean
        return:
          type: System.Boolean
      overload: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    commentId: T:Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    language: CSharp
    name:
      CSharp: IInputHandleable
      VB: IInputHandleable
    nameWithType:
      CSharp: IInputHandleable
      VB: IInputHandleable
    qualifiedName:
      CSharp: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
      VB: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.PlayerControllerModule
    source:
      id: IInputHandleable
      path: ''
      startLine: 27808
    syntax:
      content:
        CSharp: public interface IInputHandleable
        VB: Public Interface IInputHandleable
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: IInputHandleable.Init()
        VB: IInputHandleable.Init()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init()
        VB: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: Init
        path: ''
        startLine: 27810
      syntax:
        content:
          CSharp: void Init()
          VB: Sub Init
      overload: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      language: CSharp
      name:
        CSharp: GetHorizontalInput()
        VB: GetHorizontalInput()
      nameWithType:
        CSharp: IInputHandleable.GetHorizontalInput()
        VB: IInputHandleable.GetHorizontalInput()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput()
        VB: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: GetHorizontalInput
        path: ''
        startLine: 27812
      syntax:
        content:
          CSharp: float GetHorizontalInput()
          VB: Function GetHorizontalInput As Single
        return:
          type: System.Single
      overload: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput*
      modifiers:
        CSharp: []
        VB: []
    - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      language: CSharp
      name:
        CSharp: GetVerticalInput()
        VB: GetVerticalInput()
      nameWithType:
        CSharp: IInputHandleable.GetVerticalInput()
        VB: IInputHandleable.GetVerticalInput()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput()
        VB: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: GetVerticalInput
        path: ''
        startLine: 27814
      syntax:
        content:
          CSharp: float GetVerticalInput()
          VB: Function GetVerticalInput As Single
        return:
          type: System.Single
      overload: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput*
      modifiers:
        CSharp: []
        VB: []
  - id: Timba.Packages.Games.PlayerControllerModule.InputHandler
    commentId: T:Timba.Packages.Games.PlayerControllerModule.InputHandler
    language: CSharp
    name:
      CSharp: InputHandler
      VB: InputHandler
    nameWithType:
      CSharp: InputHandler
      VB: InputHandler
    qualifiedName:
      CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler
      VB: Timba.Packages.Games.PlayerControllerModule.InputHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.PlayerControllerModule
    source:
      id: InputHandler
      path: ''
      startLine: 27824
    syntax:
      content:
        CSharp: 'public class InputHandler : MonoBehaviour, IInputHandleable'
        VB: >-
          Public Class InputHandler

              Inherits MonoBehaviour

              Implements IInputHandleable
    inheritance:
    - System.Object
    implements:
    - Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.keyBindings
      commentId: F:Timba.Packages.Games.PlayerControllerModule.InputHandler.keyBindings
      language: CSharp
      name:
        CSharp: keyBindings
        VB: keyBindings
      nameWithType:
        CSharp: InputHandler.keyBindings
        VB: InputHandler.keyBindings
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler.keyBindings
        VB: Timba.Packages.Games.PlayerControllerModule.InputHandler.keyBindings
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: keyBindings
        path: ''
        startLine: 27826
      syntax:
        content:
          CSharp: public InputSource keyBindings
          VB: Public keyBindings As InputSource
        return:
          type: Timba.Packages.Games.PlayerControllerModule.InputSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputHandler.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: InputHandler.Init()
        VB: InputHandler.Init()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init()
        VB: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: Init
        path: ''
        startLine: 27828
      syntax:
        content:
          CSharp: public void Init()
          VB: Public Sub Init
      overload: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init*
      implements:
      - Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput
      language: CSharp
      name:
        CSharp: GetHorizontalInput()
        VB: GetHorizontalInput()
      nameWithType:
        CSharp: InputHandler.GetHorizontalInput()
        VB: InputHandler.GetHorizontalInput()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput()
        VB: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: GetHorizontalInput
        path: ''
        startLine: 27833
      syntax:
        content:
          CSharp: public float GetHorizontalInput()
          VB: Public Function GetHorizontalInput As Single
        return:
          type: System.Single
      overload: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput*
      implements:
      - Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput
      language: CSharp
      name:
        CSharp: GetVerticalInput()
        VB: GetVerticalInput()
      nameWithType:
        CSharp: InputHandler.GetVerticalInput()
        VB: InputHandler.GetVerticalInput()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput()
        VB: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: GetVerticalInput
        path: ''
        startLine: 27838
      syntax:
        content:
          CSharp: public float GetVerticalInput()
          VB: Public Function GetVerticalInput As Single
        return:
          type: System.Single
      overload: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput*
      implements:
      - Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput
      commentId: M:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput
      language: CSharp
      name:
        CSharp: GetInteractableInput()
        VB: GetInteractableInput()
      nameWithType:
        CSharp: InputHandler.GetInteractableInput()
        VB: InputHandler.GetInteractableInput()
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput()
        VB: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule
      source:
        id: GetInteractableInput
        path: ''
        startLine: 27844
      syntax:
        content:
          CSharp: public bool GetInteractableInput()
          VB: Public Function GetInteractableInput As Boolean
        return:
          type: System.Boolean
      overload: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Timba.Packages.Games.PlayerControllerModule.Core
  commentId: N:Timba.Packages.Games.PlayerControllerModule.Core
  language: CSharp
  name:
    CSharp: Timba.Packages.Games.PlayerControllerModule.Core
    VB: Timba.Packages.Games.PlayerControllerModule.Core
  nameWithType:
    CSharp: Timba.Packages.Games.PlayerControllerModule.Core
    VB: Timba.Packages.Games.PlayerControllerModule.Core
  qualifiedName:
    CSharp: Timba.Packages.Games.PlayerControllerModule.Core
    VB: Timba.Packages.Games.PlayerControllerModule.Core
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
    commentId: T:Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
    language: CSharp
    name:
      CSharp: ThirdPersonCoreController
      VB: ThirdPersonCoreController
    nameWithType:
      CSharp: ThirdPersonCoreController
      VB: ThirdPersonCoreController
    qualifiedName:
      CSharp: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
      VB: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Timba.Packages.Games.PlayerControllerModule.Core
    source:
      id: ThirdPersonCoreController
      path: ''
      startLine: 27753
    syntax:
      content:
        CSharp: 'public abstract class ThirdPersonCoreController : MonoBehaviour'
        VB: >-
          Public MustInherit Class ThirdPersonCoreController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.inputHandler
      commentId: F:Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.inputHandler
      language: CSharp
      name:
        CSharp: inputHandler
        VB: inputHandler
      nameWithType:
        CSharp: ThirdPersonCoreController.inputHandler
        VB: ThirdPersonCoreController.inputHandler
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.inputHandler
        VB: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.inputHandler
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule.Core
      source:
        id: inputHandler
        path: ''
        startLine: 27755
      syntax:
        content:
          CSharp: protected IInputHandleable inputHandler
          VB: Protected inputHandler As IInputHandleable
        return:
          type: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init``1(``0)
      commentId: M:Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init``1(``0)
      language: CSharp
      name:
        CSharp: Init<T>(T)
        VB: Init(Of T)(T)
      nameWithType:
        CSharp: ThirdPersonCoreController.Init<T>(T)
        VB: ThirdPersonCoreController.Init(Of T)(T)
      qualifiedName:
        CSharp: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init<T>(T)
        VB: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Timba.Packages.Games.PlayerControllerModule.Core
      source:
        id: Init
        path: ''
        startLine: 27757
      syntax:
        content:
          CSharp: public abstract void Init<T>(T data)
          VB: Public MustOverride Sub Init(Of T)(data As T)
        parameters:
        - id: data
          type: '{T}'
        typeParameters:
        - id: T
      overload: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
references:
  Global.Transform:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  Global.CharacterSlot:
    name:
      CSharp:
      - id: Global.CharacterSlot
        name: CharacterSlot
        nameWithType: CharacterSlot
        qualifiedName: CharacterSlot
      VB:
      - id: Global.CharacterSlot
        name: CharacterSlot
        nameWithType: CharacterSlot
        qualifiedName: CharacterSlot
    isDefinition: true
    commentId: T:Global.CharacterSlot
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*
        name: SpawnPlayerShinseis
        nameWithType: BattleShinseiSpawner.SpawnPlayerShinseis
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis
      VB:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis*
        name: SpawnPlayerShinseis
        nameWithType: BattleShinseiSpawner.SpawnPlayerShinseis
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnPlayerShinseis
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*
        name: SpawnShinseiEndGame
        nameWithType: BattleShinseiSpawner.SpawnShinseiEndGame
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame
      VB:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame*
        name: SpawnShinseiEndGame
        nameWithType: BattleShinseiSpawner.SpawnShinseiEndGame
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleShinseiSpawner.SpawnShinseiEndGame
  Timba.SacredTails.Arena.BattleShinseiSpawner:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner
        name: BattleShinseiSpawner
        nameWithType: BattleShinseiSpawner
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner
      VB:
      - id: Timba.SacredTails.Arena.BattleShinseiSpawner
        name: BattleShinseiSpawner
        nameWithType: BattleShinseiSpawner
        qualifiedName: Timba.SacredTails.Arena.BattleShinseiSpawner
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleShinseiSpawner
  Global.TMP_Text:
    name:
      CSharp:
      - id: Global.TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
      VB:
      - id: Global.TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
    isDefinition: true
  Global.VersusPanelController:
    name:
      CSharp:
      - id: Global.VersusPanelController
        name: VersusPanelController
        nameWithType: VersusPanelController
        qualifiedName: VersusPanelController
      VB:
      - id: Global.VersusPanelController
        name: VersusPanelController
        nameWithType: VersusPanelController
        qualifiedName: VersusPanelController
    isDefinition: true
    commentId: T:Global.VersusPanelController
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Global.BattleNotificationSystem:
    name:
      CSharp:
      - id: Global.BattleNotificationSystem
        name: BattleNotificationSystem
        nameWithType: BattleNotificationSystem
        qualifiedName: BattleNotificationSystem
      VB:
      - id: Global.BattleNotificationSystem
        name: BattleNotificationSystem
        nameWithType: BattleNotificationSystem
        qualifiedName: BattleNotificationSystem
    isDefinition: true
    commentId: T:Global.BattleNotificationSystem
  System.Collections.Generic.List{CardUI}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CardUI
        name: CardUI
        nameWithType: CardUI
        qualifiedName: CardUI
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CardUI
        name: CardUI
        nameWithType: CardUI
        qualifiedName: CardUI
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CardUI}
  Global.UIDisolver:
    name:
      CSharp:
      - id: Global.UIDisolver
        name: UIDisolver
        nameWithType: UIDisolver
        qualifiedName: UIDisolver
      VB:
      - id: Global.UIDisolver
        name: UIDisolver
        nameWithType: UIDisolver
        qualifiedName: UIDisolver
    isDefinition: true
    commentId: T:Global.UIDisolver
  Timba.SacredTails.Arena:
    name:
      CSharp:
      - name: Timba.SacredTails.Arena
        nameWithType: Timba.SacredTails.Arena
        qualifiedName: Timba.SacredTails.Arena
      VB:
      - name: Timba.SacredTails.Arena
        nameWithType: Timba.SacredTails.Arena
        qualifiedName: Timba.SacredTails.Arena
    isDefinition: true
    commentId: N:Timba.SacredTails.Arena
  Timba.SacredTails.Arena.ResourceBarValues:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
      VB:
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.ResourceBarValues
  Timba.SacredTails.Arena.BattleUIController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.Init*
        name: Init
        nameWithType: BattleUIController.Init
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.Init
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.Init*
        name: Init
        nameWithType: BattleUIController.Init
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.Init
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Global.Shinsei:
    name:
      CSharp:
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      VB:
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
    isDefinition: true
    commentId: T:Global.Shinsei
  Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*
        name: UpdateShinseiPicture
        nameWithType: BattleUIController.UpdateShinseiPicture
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture*
        name: UpdateShinseiPicture
        nameWithType: BattleUIController.UpdateShinseiPicture
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.UpdateShinseiPicture
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Timba.SacredTails.Arena.BattleUIController.UpdateTimer*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateTimer*
        name: UpdateTimer
        nameWithType: BattleUIController.UpdateTimer
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateTimer
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.UpdateTimer*
        name: UpdateTimer
        nameWithType: BattleUIController.UpdateTimer
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.UpdateTimer
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.UpdateTimer
  Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*
        name: ChangeHealthColorBar
        nameWithType: BattleUIController.ChangeHealthColorBar
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar*
        name: ChangeHealthColorBar
        nameWithType: BattleUIController.ChangeHealthColorBar
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ChangeHealthColorBar
  Timba.SacredTails.Arena.BattleUIController.InitializeBars*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.InitializeBars*
        name: InitializeBars
        nameWithType: BattleUIController.InitializeBars
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.InitializeBars
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.InitializeBars*
        name: InitializeBars
        nameWithType: BattleUIController.InitializeBars
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.InitializeBars
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.InitializeBars
  Timba.SacredTails.Arena.BattleUIController.ShowFaster*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowFaster*
        name: ShowFaster
        nameWithType: BattleUIController.ShowFaster
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowFaster
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowFaster*
        name: ShowFaster
        nameWithType: BattleUIController.ShowFaster
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowFaster
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ShowFaster
  Global.Func`1:
    name:
      CSharp:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.Func`1'
  Global.Func{System.Collections.Generic.List{System.Int32}}:
    name:
      CSharp:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Func`1
        name: Func
        nameWithType: Func
        qualifiedName: Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Func`1
    commentId: '!:Global.Func{System.Collections.Generic.List{System.Int32}}'
  Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*
        name: ChangeHealthbarView
        nameWithType: BattleUIController.ChangeHealthbarView
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView*
        name: ChangeHealthbarView
        nameWithType: BattleUIController.ChangeHealthbarView
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ChangeHealthbarView
  Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*
        name: ApplyEnergyChange
        nameWithType: BattleUIController.ApplyEnergyChange
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange*
        name: ApplyEnergyChange
        nameWithType: BattleUIController.ApplyEnergyChange
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ApplyEnergyChange
  Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*
        name: HideEverythingForWatchMatch
        nameWithType: BattleUIController.HideEverythingForWatchMatch
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch*
        name: HideEverythingForWatchMatch
        nameWithType: BattleUIController.HideEverythingForWatchMatch
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.HideEverythingForWatchMatch
  Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*
        name: ToggleWaitingPrompt
        nameWithType: BattleUIController.ToggleWaitingPrompt
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt*
        name: ToggleWaitingPrompt
        nameWithType: BattleUIController.ToggleWaitingPrompt
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ToggleWaitingPrompt
  Timba.SacredTails.Arena.BattleUIController.ShowCards*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowCards*
        name: ShowCards
        nameWithType: BattleUIController.ShowCards
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowCards
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController.ShowCards*
        name: ShowCards
        nameWithType: BattleUIController.ShowCards
        qualifiedName: Timba.SacredTails.Arena.BattleUIController.ShowCards
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleUIController.ShowCards
  Timba.SacredTails.Arena.BattleUIController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: Timba.SacredTails.Arena.BattleUIController
      VB:
      - id: Timba.SacredTails.Arena.BattleUIController
        name: BattleUIController
        nameWithType: BattleUIController
        qualifiedName: Timba.SacredTails.Arena.BattleUIController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleUIController
  Timba.SacredTails.Arena.VfxInfo:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.VfxInfo
        name: VfxInfo
        nameWithType: VfxInfo
        qualifiedName: Timba.SacredTails.Arena.VfxInfo
      VB:
      - id: Timba.SacredTails.Arena.VfxInfo
        name: VfxInfo
        nameWithType: VfxInfo
        qualifiedName: Timba.SacredTails.Arena.VfxInfo
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.VfxInfo
  Global.Action`2:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.Action{System.Boolean,System.Collections.Generic.List{System.Int32}}:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`2
    commentId: '!:Global.Action{System.Boolean,System.Collections.Generic.List{System.Int32}}'
  Global.MatchData:
    name:
      CSharp:
      - id: Global.MatchData
        name: MatchData
        nameWithType: MatchData
        qualifiedName: MatchData
      VB:
      - id: Global.MatchData
        name: MatchData
        nameWithType: MatchData
        qualifiedName: MatchData
    isDefinition: true
    commentId: T:Global.MatchData
  Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionController.Init
  Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*
        name: OnShinseiSelectionCompleted
        nameWithType: ArenaShinseiSelectionController.OnShinseiSelectionCompleted
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted*
        name: OnShinseiSelectionCompleted
        nameWithType: ArenaShinseiSelectionController.OnShinseiSelectionCompleted
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionController.OnShinseiSelectionCompleted
  Timba.SacredTails.Arena.ArenaShinseiSelectionController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController
        name: ArenaShinseiSelectionController
        nameWithType: ArenaShinseiSelectionController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionController
        name: ArenaShinseiSelectionController
        nameWithType: ArenaShinseiSelectionController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionController
  System.Collections.Generic.List{Image}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Image}
  Global.Sprite:
    name:
      CSharp:
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      VB:
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
    isDefinition: true
  Timba.SacredTails.Arena.ShinseiSlot:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.ShinseiSlot
  Global.TextMeshProUGUI:
    name:
      CSharp:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      VB:
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
    isDefinition: true
  Global.ShinseiPreviewPanelManager:
    name:
      CSharp:
      - id: Global.ShinseiPreviewPanelManager
        name: ShinseiPreviewPanelManager
        nameWithType: ShinseiPreviewPanelManager
        qualifiedName: ShinseiPreviewPanelManager
      VB:
      - id: Global.ShinseiPreviewPanelManager
        name: ShinseiPreviewPanelManager
        nameWithType: ShinseiPreviewPanelManager
        qualifiedName: ShinseiPreviewPanelManager
    isDefinition: true
    commentId: T:Global.ShinseiPreviewPanelManager
  Global.CombatPlayer:
    name:
      CSharp:
      - id: Global.CombatPlayer
        name: CombatPlayer
        nameWithType: CombatPlayer
        qualifiedName: CombatPlayer
      VB:
      - id: Global.CombatPlayer
        name: CombatPlayer
        nameWithType: CombatPlayer
        qualifiedName: CombatPlayer
    isDefinition: true
    commentId: T:Global.CombatPlayer
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionUserPanelController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init*
        name: Init
        nameWithType: ArenaShinseiSelectionUserPanelController.Init
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Init
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*
        name: ShowNext
        nameWithType: ArenaShinseiSelectionUserPanelController.ShowNext
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext*
        name: ShowNext
        nameWithType: ArenaShinseiSelectionUserPanelController.ShowNext
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.ShowNext
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*
        name: Show
        nameWithType: ArenaShinseiSelectionUserPanelController.Show
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show*
        name: Show
        nameWithType: ArenaShinseiSelectionUserPanelController.Show
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.Show
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*
        name: SelectShinseiForBattle
        nameWithType: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle*
        name: SelectShinseiForBattle
        nameWithType: ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.SelectShinseiForBattle
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*
        name: MakeSlotsUnclickeable
        nameWithType: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable*
        name: MakeSlotsUnclickeable
        nameWithType: ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.MakeSlotsUnclickeable
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*
        name: GetShinseisSelected
        nameWithType: ArenaShinseiSelectionUserPanelController.GetShinseisSelected
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected*
        name: GetShinseisSelected
        nameWithType: ArenaShinseiSelectionUserPanelController.GetShinseisSelected
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController.GetShinseisSelected
  Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
        name: ArenaShinseiSelectionUserPanelController
        nameWithType: ArenaShinseiSelectionUserPanelController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
      VB:
      - id: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
        name: ArenaShinseiSelectionUserPanelController
        nameWithType: ArenaShinseiSelectionUserPanelController
        qualifiedName: Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ArenaShinseiSelectionUserPanelController
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Arena.ResourceBarValues
        name: ResourceBarValues
        nameWithType: ResourceBarValues
        qualifiedName: Timba.SacredTails.Arena.ResourceBarValues
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.Arena.ResourceBarValues}
  System.Collections.Generic.List{Shinsei}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Shinsei
        name: Shinsei
        nameWithType: Shinsei
        qualifiedName: Shinsei
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Shinsei}
  System.Collections.Generic.List{BattleActionsBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleActionsBase}
  Timba.SacredTails.Arena.UserInfo:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: Timba.SacredTails.Arena.UserInfo
      VB:
      - id: Timba.SacredTails.Arena.UserInfo
        name: UserInfo
        nameWithType: UserInfo
        qualifiedName: Timba.SacredTails.Arena.UserInfo
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.UserInfo
  Timba.SacredTails.Arena.GameSceneManager:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager
        name: GameSceneManager
        nameWithType: GameSceneManager
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager
        name: GameSceneManager
        nameWithType: GameSceneManager
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.GameSceneManager
  Timba.SacredTails.Arena.TurnsController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController
        name: TurnsController
        nameWithType: TurnsController
        qualifiedName: Timba.SacredTails.Arena.TurnsController
      VB:
      - id: Timba.SacredTails.Arena.TurnsController
        name: TurnsController
        nameWithType: TurnsController
        qualifiedName: Timba.SacredTails.Arena.TurnsController
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.TurnsController
  Global.BattleTerrainBehavioursBase:
    name:
      CSharp:
      - id: Global.BattleTerrainBehavioursBase
        name: BattleTerrainBehavioursBase
        nameWithType: BattleTerrainBehavioursBase
        qualifiedName: BattleTerrainBehavioursBase
      VB:
      - id: Global.BattleTerrainBehavioursBase
        name: BattleTerrainBehavioursBase
        nameWithType: BattleTerrainBehavioursBase
        qualifiedName: BattleTerrainBehavioursBase
    isDefinition: true
    commentId: T:Global.BattleTerrainBehavioursBase
  Global.Combat:
    name:
      CSharp:
      - id: Global.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Combat
      VB:
      - id: Global.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Combat
    isDefinition: true
    commentId: T:Global.Combat
  System.Collections.Generic.List{Sprite}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Sprite}
  System.Collections.Generic.List{TextMeshProUGUI}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{TextMeshProUGUI}
  System.Collections.Generic.List{Color}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Color}
  Global.Camera:
    name:
      CSharp:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Camera'
  Global.GetMatchResult:
    name:
      CSharp:
      - id: Global.GetMatchResult
        name: GetMatchResult
        nameWithType: GetMatchResult
        qualifiedName: GetMatchResult
        isExternal: true
      VB:
      - id: Global.GetMatchResult
        name: GetMatchResult
        nameWithType: GetMatchResult
        qualifiedName: GetMatchResult
        isExternal: true
    isDefinition: true
  Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*
        name: OnStartMatch
        nameWithType: BattleGameMode.OnStartMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch*
        name: OnStartMatch
        nameWithType: BattleGameMode.OnStartMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnStartMatch
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
        isExternal: true
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerator
  Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*
        name: OnStartMatchRoutine
        nameWithType: BattleGameMode.OnStartMatchRoutine
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine*
        name: OnStartMatchRoutine
        nameWithType: BattleGameMode.OnStartMatchRoutine
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnStartMatchRoutine
  Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*
        name: MakeShinseiPartyUsingPlayfabId
        nameWithType: BattleGameMode.MakeShinseiPartyUsingPlayfabId
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId*
        name: MakeShinseiPartyUsingPlayfabId
        nameWithType: BattleGameMode.MakeShinseiPartyUsingPlayfabId
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.MakeShinseiPartyUsingPlayfabId
  Timba.SacredTails.Arena.BattleGameMode.Initialize*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.Initialize*
        name: Initialize
        nameWithType: BattleGameMode.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.Initialize
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.Initialize*
        name: Initialize
        nameWithType: BattleGameMode.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.Initialize
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.Initialize
  Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*
        name: ShinseiSelected
        nameWithType: BattleGameMode.ShinseiSelected
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected*
        name: ShinseiSelected
        nameWithType: BattleGameMode.ShinseiSelected
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.ShinseiSelected
  Timba.SacredTails.Arena.BattleGameMode.OnDisable*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnDisable*
        name: OnDisable
        nameWithType: BattleGameMode.OnDisable
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnDisable
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnDisable*
        name: OnDisable
        nameWithType: BattleGameMode.OnDisable
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnDisable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnDisable
  Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: BattleGameMode.OnApplicationQuit
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: BattleGameMode.OnApplicationQuit
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OnApplicationQuit
  Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*
        name: CancelSelectShinsei
        nameWithType: BattleGameMode.CancelSelectShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei*
        name: CancelSelectShinsei
        nameWithType: BattleGameMode.CancelSelectShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.CancelSelectShinsei
  Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*
        name: WaitForOpponentToSelectViewMatch
        nameWithType: BattleGameMode.WaitForOpponentToSelectViewMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch*
        name: WaitForOpponentToSelectViewMatch
        nameWithType: BattleGameMode.WaitForOpponentToSelectViewMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelectViewMatch
  Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*
        name: WaitForOpponentToSelect
        nameWithType: BattleGameMode.WaitForOpponentToSelect
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect*
        name: WaitForOpponentToSelect
        nameWithType: BattleGameMode.WaitForOpponentToSelect
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.WaitForOpponentToSelect
  Timba.SacredTails.Arena.BattleGameMode.InitBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.InitBattle*
        name: InitBattle
        nameWithType: BattleGameMode.InitBattle
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.InitBattle
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.InitBattle*
        name: InitBattle
        nameWithType: BattleGameMode.InitBattle
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.InitBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.InitBattle
  Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*
        name: OpenChangeShinseiPanel
        nameWithType: BattleGameMode.OpenChangeShinseiPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel*
        name: OpenChangeShinseiPanel
        nameWithType: BattleGameMode.OpenChangeShinseiPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.OpenChangeShinseiPanel
  Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*
        name: UpdateCurrentShinsei
        nameWithType: BattleGameMode.UpdateCurrentShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei*
        name: UpdateCurrentShinsei
        nameWithType: BattleGameMode.UpdateCurrentShinsei
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.UpdateCurrentShinsei
  Global.Action:
    name:
      CSharp:
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      VB:
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
    isDefinition: true
  Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*
        name: ShowPopupEndMatch
        nameWithType: BattleGameMode.ShowPopupEndMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch*
        name: ShowPopupEndMatch
        nameWithType: BattleGameMode.ShowPopupEndMatch
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.ShowPopupEndMatch
  Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*
        name: ShowEndResultPanel
        nameWithType: BattleGameMode.ShowEndResultPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel*
        name: ShowEndResultPanel
        nameWithType: BattleGameMode.ShowEndResultPanel
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.ShowEndResultPanel
  Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*
        name: SpawnWinnerShisneis
        nameWithType: BattleGameMode.SpawnWinnerShisneis
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis*
        name: SpawnWinnerShisneis
        nameWithType: BattleGameMode.SpawnWinnerShisneis
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.SpawnWinnerShisneis
  Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*
        name: GoBackToLobbyPopup
        nameWithType: BattleGameMode.GoBackToLobbyPopup
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup*
        name: GoBackToLobbyPopup
        nameWithType: BattleGameMode.GoBackToLobbyPopup
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobbyPopup
  Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*
        name: GoBackToLobby
        nameWithType: BattleGameMode.GoBackToLobby
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby*
        name: GoBackToLobby
        nameWithType: BattleGameMode.GoBackToLobby
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GoBackToLobby
  Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*
        name: EndMatchCheck
        nameWithType: BattleGameMode.EndMatchCheck
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck*
        name: EndMatchCheck
        nameWithType: BattleGameMode.EndMatchCheck
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.EndMatchCheck
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{System.String,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*
        name: AddTextToLog
        nameWithType: BattleGameMode.AddTextToLog
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog*
        name: AddTextToLog
        nameWithType: BattleGameMode.AddTextToLog
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.AddTextToLog
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.AddTextToLog
  Global.Action`1:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.Action{Combat}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Combat
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Combat
        name: Combat
        nameWithType: Combat
        qualifiedName: Combat
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{Combat}'
  Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*
        name: GetOwnCombatData
        nameWithType: BattleGameMode.GetOwnCombatData
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData*
        name: GetOwnCombatData
        nameWithType: BattleGameMode.GetOwnCombatData
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GetOwnCombatData
  Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*
        name: GetCurrentShinseiEnergy
        nameWithType: BattleGameMode.GetCurrentShinseiEnergy
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy*
        name: GetCurrentShinseiEnergy
        nameWithType: BattleGameMode.GetCurrentShinseiEnergy
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleGameMode.GetCurrentShinseiEnergy
  Timba.SacredTails.Arena.BattleGameMode:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode
      VB:
      - id: Timba.SacredTails.Arena.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: Timba.SacredTails.Arena.BattleGameMode
    isDefinition: true
    parent: Timba.SacredTails.Arena
    commentId: T:Timba.SacredTails.Arena.BattleGameMode
  Timba.SacredTails.Arena.BattleViewerController.Initialize*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleViewerController.Initialize*
        name: Initialize
        nameWithType: BattleViewerController.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController.Initialize
      VB:
      - id: Timba.SacredTails.Arena.BattleViewerController.Initialize*
        name: Initialize
        nameWithType: BattleViewerController.Initialize
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController.Initialize
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.BattleViewerController.Initialize
  Timba.SacredTails.Arena.BattleViewerController:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.BattleViewerController
        name: BattleViewerController
        nameWithType: BattleViewerController
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController
      VB:
      - id: Timba.SacredTails.Arena.BattleViewerController
        name: BattleViewerController
        nameWithType: BattleViewerController
        qualifiedName: Timba.SacredTails.Arena.BattleViewerController
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.BattleViewerController
  System.Collections.Generic.Dictionary{ActionTypeEnum,BattleActionsBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ActionTypeEnum
        name: ActionTypeEnum
        nameWithType: ActionTypeEnum
        qualifiedName: ActionTypeEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ActionTypeEnum
        name: ActionTypeEnum
        nameWithType: ActionTypeEnum
        qualifiedName: ActionTypeEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.BattleActionsBase
        name: BattleActionsBase
        nameWithType: BattleActionsBase
        qualifiedName: BattleActionsBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{ActionTypeEnum,BattleActionsBase}
  System.Collections.Generic.List{BattleAlteredStateBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleAlteredStateBase
        name: BattleAlteredStateBase
        nameWithType: BattleAlteredStateBase
        qualifiedName: BattleAlteredStateBase
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleAlteredStateBase
        name: BattleAlteredStateBase
        nameWithType: BattleAlteredStateBase
        qualifiedName: BattleAlteredStateBase
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleAlteredStateBase}
  System.Collections.Generic.List{VFXTypeData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.VFXTypeData
        name: VFXTypeData
        nameWithType: VFXTypeData
        qualifiedName: VFXTypeData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.VFXTypeData
        name: VFXTypeData
        nameWithType: VFXTypeData
        qualifiedName: VFXTypeData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{VFXTypeData}
  System.Collections.Generic.List{BattleActionData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.BattleActionData
        name: BattleActionData
        nameWithType: BattleActionData
        qualifiedName: BattleActionData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BattleActionData}
  Global.CameraPlaneController:
    name:
      CSharp:
      - id: Global.CameraPlaneController
        name: CameraPlaneController
        nameWithType: CameraPlaneController
        qualifiedName: CameraPlaneController
        isExternal: true
      VB:
      - id: Global.CameraPlaneController
        name: CameraPlaneController
        nameWithType: CameraPlaneController
        qualifiedName: CameraPlaneController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CameraPlaneController'
  System.Collections.Generic.List{VFXPositionData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.VFXPositionData
        name: VFXPositionData
        nameWithType: VFXPositionData
        qualifiedName: VFXPositionData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.VFXPositionData
        name: VFXPositionData
        nameWithType: VFXPositionData
        qualifiedName: VFXPositionData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{VFXPositionData}
  System.Collections.Generic.Dictionary{VFXPositionEnum,Transform}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.VFXPositionEnum
        name: VFXPositionEnum
        nameWithType: VFXPositionEnum
        qualifiedName: VFXPositionEnum
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{VFXPositionEnum,Transform}
  Timba.SacredTails.Arena.TurnsController.Init*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.Init*
        name: Init
        nameWithType: TurnsController.Init
        qualifiedName: Timba.SacredTails.Arena.TurnsController.Init
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.Init*
        name: Init
        nameWithType: TurnsController.Init
        qualifiedName: Timba.SacredTails.Arena.TurnsController.Init
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.Init
  Timba.SacredTails.Arena.TurnsController.InitCountDown*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.InitCountDown*
        name: InitCountDown
        nameWithType: TurnsController.InitCountDown
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitCountDown
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.InitCountDown*
        name: InitCountDown
        nameWithType: TurnsController.InitCountDown
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitCountDown
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.InitCountDown
  Timba.SacredTails.Arena.TurnsController.InitNewTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.InitNewTurn*
        name: InitNewTurn
        nameWithType: TurnsController.InitNewTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitNewTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.InitNewTurn*
        name: InitNewTurn
        nameWithType: TurnsController.InitNewTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitNewTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.InitNewTurn
  Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*
        name: CurrentActionsHasSkipTurnForLocalPlayer
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer*
        name: CurrentActionsHasSkipTurnForLocalPlayer
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForLocalPlayer
  Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*
        name: CurrentActionsHasSkipTurnForEnemy
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForEnemy
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy*
        name: CurrentActionsHasSkipTurnForEnemy
        nameWithType: TurnsController.CurrentActionsHasSkipTurnForEnemy
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CurrentActionsHasSkipTurnForEnemy
  Timba.SacredTails.Arena.TurnsController.ShowPopupStrike*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike*
        name: ShowPopupStrike
        nameWithType: TurnsController.ShowPopupStrike
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike*
        name: ShowPopupStrike
        nameWithType: TurnsController.ShowPopupStrike
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ShowPopupStrike
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ShowPopupStrike
  Timba.SacredTails.Arena.TurnsController.BtnSendTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.BtnSendTurn*
        name: BtnSendTurn
        nameWithType: TurnsController.BtnSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.BtnSendTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.BtnSendTurn*
        name: BtnSendTurn
        nameWithType: TurnsController.BtnSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.BtnSendTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.BtnSendTurn
  Timba.SacredTails.Arena.TurnsController.SendMyTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.SendMyTurn*
        name: SendMyTurn
        nameWithType: TurnsController.SendMyTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendMyTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.SendMyTurn*
        name: SendMyTurn
        nameWithType: TurnsController.SendMyTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendMyTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.SendMyTurn
  Timba.SacredTails.Arena.TurnsController.TestSendTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.TestSendTurn*
        name: TestSendTurn
        nameWithType: TurnsController.TestSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.TestSendTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.TestSendTurn*
        name: TestSendTurn
        nameWithType: TurnsController.TestSendTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.TestSendTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.TestSendTurn
  Timba.SacredTails.Arena.TurnsController.SendTurnRequest*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.SendTurnRequest*
        name: SendTurnRequest
        nameWithType: TurnsController.SendTurnRequest
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendTurnRequest
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.SendTurnRequest*
        name: SendTurnRequest
        nameWithType: TurnsController.SendTurnRequest
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SendTurnRequest
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.SendTurnRequest
  Global.ActionCard:
    name:
      CSharp:
      - id: Global.ActionCard
        name: ActionCard
        nameWithType: ActionCard
        qualifiedName: ActionCard
      VB:
      - id: Global.ActionCard
        name: ActionCard
        nameWithType: ActionCard
        qualifiedName: ActionCard
    isDefinition: true
    commentId: T:Global.ActionCard
  Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*
        name: ForbiddenActionCheck
        nameWithType: TurnsController.ForbiddenActionCheck
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck*
        name: ForbiddenActionCheck
        nameWithType: TurnsController.ForbiddenActionCheck
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ForbiddenActionCheck
  Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*
        name: SetForbiddenActions
        nameWithType: TurnsController.SetForbiddenActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions*
        name: SetForbiddenActions
        nameWithType: TurnsController.SetForbiddenActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.SetForbiddenActions
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.SetForbiddenActions
  Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*
        name: ReduceForbiddenActionsDuration
        nameWithType: TurnsController.ReduceForbiddenActionsDuration
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration*
        name: ReduceForbiddenActionsDuration
        nameWithType: TurnsController.ReduceForbiddenActionsDuration
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ReduceForbiddenActionsDuration
  Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*
        name: CalculateIncomingActions
        nameWithType: TurnsController.CalculateIncomingActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions*
        name: CalculateIncomingActions
        nameWithType: TurnsController.CalculateIncomingActions
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CalculateIncomingActions
  Timba.SacredTails.Arena.TurnsController.CheckEndMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEndMatch*
        name: CheckEndMatch
        nameWithType: TurnsController.CheckEndMatch
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEndMatch
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEndMatch*
        name: CheckEndMatch
        nameWithType: TurnsController.CheckEndMatch
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEndMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckEndMatch
  Timba.SacredTails.Arena.TurnsController.CheckDeadTime*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckDeadTime*
        name: CheckDeadTime
        nameWithType: TurnsController.CheckDeadTime
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckDeadTime
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckDeadTime*
        name: CheckDeadTime
        nameWithType: TurnsController.CheckDeadTime
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckDeadTime
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckDeadTime
  Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*
        name: WaitOponentTurn
        nameWithType: TurnsController.WaitOponentTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn*
        name: WaitOponentTurn
        nameWithType: TurnsController.WaitOponentTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.WaitOponentTurn
  Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch*
        name: ShowForcedEndMatch
        nameWithType: TurnsController.ShowForcedEndMatch
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch*
        name: ShowForcedEndMatch
        nameWithType: TurnsController.ShowForcedEndMatch
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ShowForcedEndMatch
  Global.ActionCardDto:
    name:
      CSharp:
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
      VB:
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
    isDefinition: true
    commentId: T:Global.ActionCardDto
  Timba.SacredTails.Arena.TurnsController.CheckAlteredStates*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates*
        name: CheckAlteredStates
        nameWithType: TurnsController.CheckAlteredStates
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates*
        name: CheckAlteredStates
        nameWithType: TurnsController.CheckAlteredStates
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckAlteredStates
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckAlteredStates
  System.Collections.Generic.List{ActionCardDto}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ActionCardDto
        name: ActionCardDto
        nameWithType: ActionCardDto
        qualifiedName: ActionCardDto
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{ActionCardDto}
  Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*
        name: CheckIfAnyoneSurrendered
        nameWithType: TurnsController.CheckIfAnyoneSurrendered
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered*
        name: CheckIfAnyoneSurrendered
        nameWithType: TurnsController.CheckIfAnyoneSurrendered
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckIfAnyoneSurrendered
  Timba.SacredTails.Arena.TurnsController.InitTurnFlow*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.InitTurnFlow*
        name: InitTurnFlow
        nameWithType: TurnsController.InitTurnFlow
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitTurnFlow
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.InitTurnFlow*
        name: InitTurnFlow
        nameWithType: TurnsController.InitTurnFlow
        qualifiedName: Timba.SacredTails.Arena.TurnsController.InitTurnFlow
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.InitTurnFlow
  Timba.SacredTails.Arena.TurnsController.WaitForSeconds*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.WaitForSeconds*
        name: WaitForSeconds
        nameWithType: TurnsController.WaitForSeconds
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitForSeconds
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.WaitForSeconds*
        name: WaitForSeconds
        nameWithType: TurnsController.WaitForSeconds
        qualifiedName: Timba.SacredTails.Arena.TurnsController.WaitForSeconds
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.WaitForSeconds
  Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*
        name: CheckEnergyBarsAndInitNextTurn
        nameWithType: TurnsController.CheckEnergyBarsAndInitNextTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn*
        name: CheckEnergyBarsAndInitNextTurn
        nameWithType: TurnsController.CheckEnergyBarsAndInitNextTurn
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CheckEnergyBarsAndInitNextTurn
  Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*
        name: CalculateEnergyRegen
        nameWithType: TurnsController.CalculateEnergyRegen
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen*
        name: CalculateEnergyRegen
        nameWithType: TurnsController.CalculateEnergyRegen
        qualifiedName: Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.CalculateEnergyRegen
  Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*
        name: ExecuteServerAction
        nameWithType: TurnsController.ExecuteServerAction
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction*
        name: ExecuteServerAction
        nameWithType: TurnsController.ExecuteServerAction
        qualifiedName: Timba.SacredTails.Arena.TurnsController.ExecuteServerAction
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.ExecuteServerAction
  Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*
        name: GetTrueIndexCard
        nameWithType: TurnsController.GetTrueIndexCard
        qualifiedName: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard
      VB:
      - id: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard*
        name: GetTrueIndexCard
        nameWithType: TurnsController.GetTrueIndexCard
        qualifiedName: Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.TurnsController.GetTrueIndexCard
  Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*
        name: IsCompanion
        nameWithType: ShinseiSlot.IsCompanion
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion*
        name: IsCompanion
        nameWithType: ShinseiSlot.IsCompanion
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.IsCompanion
  Global.Image:
    name:
      CSharp:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Image'
  Global.Button:
    name:
      CSharp:
      - id: Global.Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
      VB:
      - id: Global.Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
    isDefinition: true
  Global.Slider:
    name:
      CSharp:
      - id: Global.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
      VB:
      - id: Global.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
    isDefinition: true
  Global.Color:
    name:
      CSharp:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  Global.UnityEvent`2:
    name:
      CSharp:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityEvent`2'
  Global.UnityEvent{System.Int32,Timba.SacredTails.Arena.ShinseiSlot}:
    name:
      CSharp:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.SacredTails.Arena.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`2
    commentId: '!:Global.UnityEvent{System.Int32,Timba.SacredTails.Arena.ShinseiSlot}'
  Global.PointerEventData:
    name:
      CSharp:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      VB:
      - id: Global.PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
    isDefinition: true
    commentId: '!:Global.PointerEventData'
  Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*
        name: OnPointerClick
        nameWithType: ShinseiSlot.OnPointerClick
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick*
        name: OnPointerClick
        nameWithType: ShinseiSlot.OnPointerClick
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.OnPointerClick
  Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*
        name: UpdateVisual
        nameWithType: ShinseiSlot.UpdateVisual
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual*
        name: UpdateVisual
        nameWithType: ShinseiSlot.UpdateVisual
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.UpdateVisual
  Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*
        name: ChangeShinseiSlotValues
        nameWithType: ShinseiSlot.ChangeShinseiSlotValues
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues*
        name: ChangeShinseiSlotValues
        nameWithType: ShinseiSlot.ChangeShinseiSlotValues
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.ChangeShinseiSlotValues
  Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*
        name: ChangeInteractuable
        nameWithType: ShinseiSlot.ChangeInteractuable
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable*
        name: ChangeInteractuable
        nameWithType: ShinseiSlot.ChangeInteractuable
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.ChangeInteractuable
  Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*
        name: SetDataColor
        nameWithType: ShinseiSlot.SetDataColor
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor*
        name: SetDataColor
        nameWithType: ShinseiSlot.SetDataColor
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.SetDataColor
  Global.CharacterType:
    name:
      CSharp:
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
      VB:
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
    isDefinition: true
    commentId: T:Global.CharacterType
  Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*
        name: PopulateShinseiTypesSprites
        nameWithType: ShinseiSlot.PopulateShinseiTypesSprites
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites
      VB:
      - id: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites*
        name: PopulateShinseiTypesSprites
        nameWithType: ShinseiSlot.PopulateShinseiTypesSprites
        qualifiedName: Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiSlot.PopulateShinseiTypesSprites
  Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*
        name: GetClosestBattleSpawn
        nameWithType: GameSceneManager.GetClosestBattleSpawn
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn*
        name: GetClosestBattleSpawn
        nameWithType: GameSceneManager.GetClosestBattleSpawn
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.GameSceneManager.GetClosestBattleSpawn
  Timba.SacredTails.Arena.GameSceneManager.SendBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager.SendBattle*
        name: SendBattle
        nameWithType: GameSceneManager.SendBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.SendBattle
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager.SendBattle*
        name: SendBattle
        nameWithType: GameSceneManager.SendBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.SendBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.GameSceneManager.SendBattle
  Timba.SacredTails.Arena.GameSceneManager.EndBattle*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.GameSceneManager.EndBattle*
        name: EndBattle
        nameWithType: GameSceneManager.EndBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.EndBattle
      VB:
      - id: Timba.SacredTails.Arena.GameSceneManager.EndBattle*
        name: EndBattle
        nameWithType: GameSceneManager.EndBattle
        qualifiedName: Timba.SacredTails.Arena.GameSceneManager.EndBattle
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.GameSceneManager.EndBattle
  System.Collections.Generic.List{Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass}
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*
        name: GetShinseiTypes
        nameWithType: ShinseiTypeScriptable.GetShinseiTypes
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes*
        name: GetShinseiTypes
        nameWithType: ShinseiTypeScriptable.GetShinseiTypes
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetShinseiTypes
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*
        name: CompareTypesAndGetDamage
        nameWithType: ShinseiTypeScriptable.CompareTypesAndGetDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage*
        name: CompareTypesAndGetDamage
        nameWithType: ShinseiTypeScriptable.CompareTypesAndGetDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.CompareTypesAndGetDamage
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*
        name: GetMessageForTypeDamage
        nameWithType: ShinseiTypeScriptable.GetMessageForTypeDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage*
        name: GetMessageForTypeDamage
        nameWithType: ShinseiTypeScriptable.GetMessageForTypeDamage
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.GetMessageForTypeDamage
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*
        name: SerializeShinseiTypeMatrix
        nameWithType: ShinseiTypeScriptable.SerializeShinseiTypeMatrix
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix*
        name: SerializeShinseiTypeMatrix
        nameWithType: ShinseiTypeScriptable.SerializeShinseiTypeMatrix
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable.SerializeShinseiTypeMatrix
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
        name: ShinseiTypeScriptable
        nameWithType: ShinseiTypeScriptable
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
        name: ShinseiTypeScriptable
        nameWithType: ShinseiTypeScriptable
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeScriptable
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  System.Collections.Generic.List{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Single}
  Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass:
    name:
      CSharp:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
      VB:
      - id: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
        name: ShinseiTypeListClass
        nameWithType: ShinseiTypeListClass
        qualifiedName: Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
    isDefinition: true
    commentId: T:Timba.SacredTails.Arena.ShinseiType.ShinseiTypeListClass
  Timba.SacredTails.Arena.ShinseiType:
    name:
      CSharp:
      - name: Timba.SacredTails.Arena.ShinseiType
        nameWithType: Timba.SacredTails.Arena.ShinseiType
        qualifiedName: Timba.SacredTails.Arena.ShinseiType
      VB:
      - name: Timba.SacredTails.Arena.ShinseiType
        nameWithType: Timba.SacredTails.Arena.ShinseiType
        qualifiedName: Timba.SacredTails.Arena.ShinseiType
    isDefinition: true
    commentId: N:Timba.SacredTails.Arena.ShinseiType
  Utils.Singleton`1:
    name:
      CSharp:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:Utils.Singleton`1
  Utils:
    name:
      CSharp:
      - name: Utils
        nameWithType: Utils
        qualifiedName: Utils
      VB:
      - name: Utils
        nameWithType: Utils
        qualifiedName: Utils
    isDefinition: true
    commentId: N:Utils
  Utils.Singleton{Timba.SacredTails.Lobby.PlayerCameraFollow}:
    name:
      CSharp:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow
        name: PlayerCameraFollow
        nameWithType: PlayerCameraFollow
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow
        name: PlayerCameraFollow
        nameWithType: PlayerCameraFollow
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Utils.Singleton`1
    parent: Utils
    commentId: T:Utils.Singleton{Timba.SacredTails.Lobby.PlayerCameraFollow}
  Utils.Singleton:
    name:
      CSharp:
      - id: Utils.Singleton
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      VB:
      - id: Utils.Singleton
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
    isDefinition: true
    parent: Utils
    commentId: T:Utils.Singleton
  System.Collections.Generic.List{CinemachineVirtualCamera}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CinemachineVirtualCamera
        name: CinemachineVirtualCamera
        nameWithType: CinemachineVirtualCamera
        qualifiedName: CinemachineVirtualCamera
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CinemachineVirtualCamera
        name: CinemachineVirtualCamera
        nameWithType: CinemachineVirtualCamera
        qualifiedName: CinemachineVirtualCamera
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CinemachineVirtualCamera}
  Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer*:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer*
        name: FollowPlayer
        nameWithType: PlayerCameraFollow.FollowPlayer
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer
      VB:
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer*
        name: FollowPlayer
        nameWithType: PlayerCameraFollow.FollowPlayer
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Lobby.PlayerCameraFollow.FollowPlayer
  Timba.SacredTails.Lobby.PlayerCameraFollow:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow
        name: PlayerCameraFollow
        nameWithType: PlayerCameraFollow
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow
      VB:
      - id: Timba.SacredTails.Lobby.PlayerCameraFollow
        name: PlayerCameraFollow
        nameWithType: PlayerCameraFollow
        qualifiedName: Timba.SacredTails.Lobby.PlayerCameraFollow
    isDefinition: true
    commentId: T:Timba.SacredTails.Lobby.PlayerCameraFollow
  Global.Vector3:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei*
        name: SpawnOtherShinsei
        nameWithType: ShinseiSpawner.SpawnOtherShinsei
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei
      VB:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei*
        name: SpawnOtherShinsei
        nameWithType: ShinseiSpawner.SpawnOtherShinsei
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Lobby.ShinseiSpawner.SpawnOtherShinsei
  Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn*:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn*
        name: OnSpawn
        nameWithType: ShinseiSpawner.OnSpawn
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn
      VB:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn*
        name: OnSpawn
        nameWithType: ShinseiSpawner.OnSpawn
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Lobby.ShinseiSpawner.OnSpawn
  Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei*
        name: ChangeCurrentShinsei
        nameWithType: ShinseiSpawner.ChangeCurrentShinsei
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei
      VB:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei*
        name: ChangeCurrentShinsei
        nameWithType: ShinseiSpawner.ChangeCurrentShinsei
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Lobby.ShinseiSpawner.ChangeCurrentShinsei
  Timba.SacredTails.Lobby.ShinseiSpawner:
    name:
      CSharp:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner
        name: ShinseiSpawner
        nameWithType: ShinseiSpawner
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner
      VB:
      - id: Timba.SacredTails.Lobby.ShinseiSpawner
        name: ShinseiSpawner
        nameWithType: ShinseiSpawner
        qualifiedName: Timba.SacredTails.Lobby.ShinseiSpawner
    isDefinition: true
    commentId: T:Timba.SacredTails.Lobby.ShinseiSpawner
  Timba.SacredTails.Lobby:
    name:
      CSharp:
      - name: Timba.SacredTails.Lobby
        nameWithType: Timba.SacredTails.Lobby
        qualifiedName: Timba.SacredTails.Lobby
      VB:
      - name: Timba.SacredTails.Lobby
        nameWithType: Timba.SacredTails.Lobby
        qualifiedName: Timba.SacredTails.Lobby
    isDefinition: true
    commentId: N:Timba.SacredTails.Lobby
  Timba.SacredTails.Database:
    name:
      CSharp:
      - name: Timba.SacredTails.Database
        nameWithType: Timba.SacredTails.Database
        qualifiedName: Timba.SacredTails.Database
      VB:
      - name: Timba.SacredTails.Database
        nameWithType: Timba.SacredTails.Database
        qualifiedName: Timba.SacredTails.Database
    isDefinition: true
    commentId: N:Timba.SacredTails.Database
  Timba.SacredTails.Database.IDatabase:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase
        name: IDatabase
        nameWithType: IDatabase
        qualifiedName: Timba.SacredTails.Database.IDatabase
      VB:
      - id: Timba.SacredTails.Database.IDatabase
        name: IDatabase
        nameWithType: IDatabase
        qualifiedName: Timba.SacredTails.Database.IDatabase
    isDefinition: true
    parent: Timba.SacredTails.Database
    commentId: T:Timba.SacredTails.Database.IDatabase
  Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex*
        name: GetActionCardByIndex
        nameWithType: DatabaseConnection.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex*
        name: GetActionCardByIndex
        nameWithType: DatabaseConnection.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetActionCardByIndex
  Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
        name: GetActionCardByIndex
        nameWithType: IDatabase.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
        name: GetActionCardByIndex
        nameWithType: IDatabase.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetActionCardByIndex(System.Int32)
  Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount*
        name: CardDatabaseCount
        nameWithType: DatabaseConnection.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount*
        name: CardDatabaseCount
        nameWithType: DatabaseConnection.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.CardDatabaseCount
  Timba.SacredTails.Database.IDatabase.CardDatabaseCount:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
        name: CardDatabaseCount
        nameWithType: IDatabase.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
        name: CardDatabaseCount
        nameWithType: IDatabase.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.CardDatabaseCount
  Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType*
        name: GetDatabaseCardsIndexListByType
        nameWithType: DatabaseConnection.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType*
        name: GetDatabaseCardsIndexListByType
        nameWithType: DatabaseConnection.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetDatabaseCardsIndexListByType
  Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String}):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
        name: GetDatabaseCardsIndexListByType
        nameWithType: IDatabase.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
        name: GetDatabaseCardsIndexListByType
        nameWithType: IDatabase.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType(System.Collections.Generic.List{System.String})
  Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei*
        name: GetRandomShinsei
        nameWithType: DatabaseConnection.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei*
        name: GetRandomShinsei
        nameWithType: DatabaseConnection.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetRandomShinsei
  Timba.SacredTails.Database.IDatabase.GetRandomShinsei:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
        name: GetRandomShinsei
        nameWithType: IDatabase.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
        name: GetRandomShinsei
        nameWithType: IDatabase.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetRandomShinsei
  Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure*
        name: GetShinseiStructure
        nameWithType: DatabaseConnection.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure*
        name: GetShinseiStructure
        nameWithType: DatabaseConnection.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetShinseiStructure
  Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
        name: GetShinseiStructure
        nameWithType: IDatabase.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStructure
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
        name: GetShinseiStructure
        nameWithType: IDatabase.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStructure
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiStructure(System.String)
  Global.ShinseiStats:
    name:
      CSharp:
      - id: Global.ShinseiStats
        name: ShinseiStats
        nameWithType: ShinseiStats
        qualifiedName: ShinseiStats
      VB:
      - id: Global.ShinseiStats
        name: ShinseiStats
        nameWithType: ShinseiStats
        qualifiedName: ShinseiStats
    isDefinition: true
    commentId: T:Global.ShinseiStats
  Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats*
        name: GetShinseiStats
        nameWithType: DatabaseConnection.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats*
        name: GetShinseiStats
        nameWithType: DatabaseConnection.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetShinseiStats
  Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
        name: GetShinseiStats
        nameWithType: IDatabase.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStats
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
        name: GetShinseiStats
        nameWithType: IDatabase.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStats
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiStats(System.String)
  Timba.SacredTails.Database.DatabaseConnection.GetSetName*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetSetName*
        name: GetSetName
        nameWithType: DatabaseConnection.GetSetName
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetSetName
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetSetName*
        name: GetSetName
        nameWithType: DatabaseConnection.GetSetName
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetSetName
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetSetName
  Global.Enum:
    name:
      CSharp:
      - id: Global.Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
      VB:
      - id: Global.Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
    isDefinition: true
  Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes*
        name: GetShinseiPartsTypes
        nameWithType: DatabaseConnection.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes*
        name: GetShinseiPartsTypes
        nameWithType: DatabaseConnection.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.GetShinseiPartsTypes
  Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
        name: GetShinseiPartsTypes
        nameWithType: IDatabase.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
        name: GetShinseiPartsTypes
        nameWithType: IDatabase.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Enum
        name: Enum
        nameWithType: Enum
        qualifiedName: Enum
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes(System.String,Enum)
  Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType*
        name: ObtainShinseiType
        nameWithType: DatabaseConnection.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType*
        name: ObtainShinseiType
        nameWithType: DatabaseConnection.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiType
  Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
        name: ObtainShinseiType
        nameWithType: IDatabase.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiType
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
        name: ObtainShinseiType
        nameWithType: IDatabase.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiType
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.ObtainShinseiType(System.String)
  Global.RarityType:
    name:
      CSharp:
      - id: Global.RarityType
        name: RarityType
        nameWithType: RarityType
        qualifiedName: RarityType
      VB:
      - id: Global.RarityType
        name: RarityType
        nameWithType: RarityType
        qualifiedName: RarityType
    isDefinition: true
    commentId: T:Global.RarityType
  Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity*
        name: ObtainShinseiRarity
        nameWithType: DatabaseConnection.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity*
        name: ObtainShinseiRarity
        nameWithType: DatabaseConnection.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.ObtainShinseiRarity
  Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
        name: ObtainShinseiRarity
        nameWithType: IDatabase.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
        name: ObtainShinseiRarity
        nameWithType: IDatabase.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity(System.String)
  Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence*
        name: StartMatchmakingSequence
        nameWithType: DatabaseConnection.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence*
        name: StartMatchmakingSequence
        nameWithType: DatabaseConnection.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.StartMatchmakingSequence
  Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String):
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
        name: StartMatchmakingSequence
        nameWithType: IDatabase.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
        name: StartMatchmakingSequence
        nameWithType: IDatabase.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Database.IDatabase
    commentId: M:Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence(System.Int32,System.String)
  Global.CreateMatchmakingTicketResult:
    name:
      CSharp:
      - id: Global.CreateMatchmakingTicketResult
        name: CreateMatchmakingTicketResult
        nameWithType: CreateMatchmakingTicketResult
        qualifiedName: CreateMatchmakingTicketResult
        isExternal: true
      VB:
      - id: Global.CreateMatchmakingTicketResult
        name: CreateMatchmakingTicketResult
        nameWithType: CreateMatchmakingTicketResult
        qualifiedName: CreateMatchmakingTicketResult
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CreateMatchmakingTicketResult'
  Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus*
        name: CheckTicketStatus
        nameWithType: DatabaseConnection.CheckTicketStatus
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus*
        name: CheckTicketStatus
        nameWithType: DatabaseConnection.CheckTicketStatus
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.CheckTicketStatus
  Timba.SacredTails.Database.DatabaseConnection.IsReady*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection.IsReady*
        name: IsReady
        nameWithType: DatabaseConnection.IsReady
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.IsReady
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection.IsReady*
        name: IsReady
        nameWithType: DatabaseConnection.IsReady
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection.IsReady
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.DatabaseConnection.IsReady
  Timba.SacredTails.Database.DatabaseConnection:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.DatabaseConnection
        name: DatabaseConnection
        nameWithType: DatabaseConnection
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection
      VB:
      - id: Timba.SacredTails.Database.DatabaseConnection
        name: DatabaseConnection
        nameWithType: DatabaseConnection
        qualifiedName: Timba.SacredTails.Database.DatabaseConnection
    isDefinition: true
    commentId: T:Timba.SacredTails.Database.DatabaseConnection
  Timba.SacredTails.Database.IDatabase.GetRandomShinsei*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetRandomShinsei*
        name: GetRandomShinsei
        nameWithType: IDatabase.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetRandomShinsei*
        name: GetRandomShinsei
        nameWithType: IDatabase.GetRandomShinsei
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetRandomShinsei
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetRandomShinsei
  Timba.SacredTails.Database.IDatabase.GetShinseiStructure*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStructure*
        name: GetShinseiStructure
        nameWithType: IDatabase.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStructure
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStructure*
        name: GetShinseiStructure
        nameWithType: IDatabase.GetShinseiStructure
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStructure
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetShinseiStructure
  Timba.SacredTails.Database.IDatabase.GetShinseiStats*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStats*
        name: GetShinseiStats
        nameWithType: IDatabase.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStats
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiStats*
        name: GetShinseiStats
        nameWithType: IDatabase.GetShinseiStats
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiStats
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetShinseiStats
  Timba.SacredTails.Database.IDatabase.GetActionCardByIndex*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex*
        name: GetActionCardByIndex
        nameWithType: IDatabase.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex*
        name: GetActionCardByIndex
        nameWithType: IDatabase.GetActionCardByIndex
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetActionCardByIndex
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetActionCardByIndex
  Timba.SacredTails.Database.IDatabase.CardDatabaseCount*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.CardDatabaseCount*
        name: CardDatabaseCount
        nameWithType: IDatabase.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
      VB:
      - id: Timba.SacredTails.Database.IDatabase.CardDatabaseCount*
        name: CardDatabaseCount
        nameWithType: IDatabase.CardDatabaseCount
        qualifiedName: Timba.SacredTails.Database.IDatabase.CardDatabaseCount
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.CardDatabaseCount
  Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes*
        name: GetShinseiPartsTypes
        nameWithType: IDatabase.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes*
        name: GetShinseiPartsTypes
        nameWithType: IDatabase.GetShinseiPartsTypes
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetShinseiPartsTypes
  Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType*
        name: GetDatabaseCardsIndexListByType
        nameWithType: IDatabase.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType
      VB:
      - id: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType*
        name: GetDatabaseCardsIndexListByType
        nameWithType: IDatabase.GetDatabaseCardsIndexListByType
        qualifiedName: Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.GetDatabaseCardsIndexListByType
  Timba.SacredTails.Database.IDatabase.ObtainShinseiType*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiType*
        name: ObtainShinseiType
        nameWithType: IDatabase.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiType
      VB:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiType*
        name: ObtainShinseiType
        nameWithType: IDatabase.ObtainShinseiType
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiType
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.ObtainShinseiType
  Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity*
        name: ObtainShinseiRarity
        nameWithType: IDatabase.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity
      VB:
      - id: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity*
        name: ObtainShinseiRarity
        nameWithType: IDatabase.ObtainShinseiRarity
        qualifiedName: Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.ObtainShinseiRarity
  Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence*
        name: StartMatchmakingSequence
        nameWithType: IDatabase.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence
      VB:
      - id: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence*
        name: StartMatchmakingSequence
        nameWithType: IDatabase.StartMatchmakingSequence
        qualifiedName: Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.IDatabase.StartMatchmakingSequence
  Global.TMP_InputField:
    name:
      CSharp:
      - id: Global.TMP_InputField
        name: TMP_InputField
        nameWithType: TMP_InputField
        qualifiedName: TMP_InputField
        isExternal: true
      VB:
      - id: Global.TMP_InputField
        name: TMP_InputField
        nameWithType: TMP_InputField
        qualifiedName: TMP_InputField
        isExternal: true
    isDefinition: true
    commentId: '!:Global.TMP_InputField'
  Global.UnityTransport:
    name:
      CSharp:
      - id: Global.UnityTransport
        name: UnityTransport
        nameWithType: UnityTransport
        qualifiedName: UnityTransport
        isExternal: true
      VB:
      - id: Global.UnityTransport
        name: UnityTransport
        nameWithType: UnityTransport
        qualifiedName: UnityTransport
        isExternal: true
    isDefinition: true
    commentId: '!:Global.UnityTransport'
  Timba.SacredTails.Database.AuthController.LoadCachedData*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.LoadCachedData*
        name: LoadCachedData
        nameWithType: AuthController.LoadCachedData
        qualifiedName: Timba.SacredTails.Database.AuthController.LoadCachedData
      VB:
      - id: Timba.SacredTails.Database.AuthController.LoadCachedData*
        name: LoadCachedData
        nameWithType: AuthController.LoadCachedData
        qualifiedName: Timba.SacredTails.Database.AuthController.LoadCachedData
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.LoadCachedData
  Timba.SacredTails.Database.AuthController.SetIP*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.SetIP*
        name: SetIP
        nameWithType: AuthController.SetIP
        qualifiedName: Timba.SacredTails.Database.AuthController.SetIP
      VB:
      - id: Timba.SacredTails.Database.AuthController.SetIP*
        name: SetIP
        nameWithType: AuthController.SetIP
        qualifiedName: Timba.SacredTails.Database.AuthController.SetIP
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.SetIP
  Timba.SacredTails.Database.AuthController.OpenPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.OpenPanel*
        name: OpenPanel
        nameWithType: AuthController.OpenPanel
        qualifiedName: Timba.SacredTails.Database.AuthController.OpenPanel
      VB:
      - id: Timba.SacredTails.Database.AuthController.OpenPanel*
        name: OpenPanel
        nameWithType: AuthController.OpenPanel
        qualifiedName: Timba.SacredTails.Database.AuthController.OpenPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.OpenPanel
  Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel*
        name: OpenForgotPasswordPanel
        nameWithType: AuthController.OpenForgotPasswordPanel
        qualifiedName: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel
      VB:
      - id: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel*
        name: OpenForgotPasswordPanel
        nameWithType: AuthController.OpenForgotPasswordPanel
        qualifiedName: Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.OpenForgotPasswordPanel
  Timba.SacredTails.Database.AuthController.Login*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.Login*
        name: Login
        nameWithType: AuthController.Login
        qualifiedName: Timba.SacredTails.Database.AuthController.Login
      VB:
      - id: Timba.SacredTails.Database.AuthController.Login*
        name: Login
        nameWithType: AuthController.Login
        qualifiedName: Timba.SacredTails.Database.AuthController.Login
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.Login
  Timba.SacredTails.Database.AuthController.EventsListenging*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.EventsListenging*
        name: EventsListenging
        nameWithType: AuthController.EventsListenging
        qualifiedName: Timba.SacredTails.Database.AuthController.EventsListenging
      VB:
      - id: Timba.SacredTails.Database.AuthController.EventsListenging*
        name: EventsListenging
        nameWithType: AuthController.EventsListenging
        qualifiedName: Timba.SacredTails.Database.AuthController.EventsListenging
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.EventsListenging
  Timba.SacredTails.Database.AuthController.SignUp*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.SignUp*
        name: SignUp
        nameWithType: AuthController.SignUp
        qualifiedName: Timba.SacredTails.Database.AuthController.SignUp
      VB:
      - id: Timba.SacredTails.Database.AuthController.SignUp*
        name: SignUp
        nameWithType: AuthController.SignUp
        qualifiedName: Timba.SacredTails.Database.AuthController.SignUp
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.SignUp
  Timba.SacredTails.Database.AuthController.SendPasswordEmail*:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController.SendPasswordEmail*
        name: SendPasswordEmail
        nameWithType: AuthController.SendPasswordEmail
        qualifiedName: Timba.SacredTails.Database.AuthController.SendPasswordEmail
      VB:
      - id: Timba.SacredTails.Database.AuthController.SendPasswordEmail*
        name: SendPasswordEmail
        nameWithType: AuthController.SendPasswordEmail
        qualifiedName: Timba.SacredTails.Database.AuthController.SendPasswordEmail
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Database.AuthController.SendPasswordEmail
  Timba.SacredTails.Database.AuthController:
    name:
      CSharp:
      - id: Timba.SacredTails.Database.AuthController
        name: AuthController
        nameWithType: AuthController
        qualifiedName: Timba.SacredTails.Database.AuthController
      VB:
      - id: Timba.SacredTails.Database.AuthController
        name: AuthController
        nameWithType: AuthController
        qualifiedName: Timba.SacredTails.Database.AuthController
    isDefinition: true
    commentId: T:Timba.SacredTails.Database.AuthController
  Timba.SacredTails.Navigation.INavigation.GoToScene*:
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.INavigation.GoToScene*
        name: GoToScene
        nameWithType: INavigation.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.INavigation.GoToScene
      VB:
      - id: Timba.SacredTails.Navigation.INavigation.GoToScene*
        name: GoToScene
        nameWithType: INavigation.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.INavigation.GoToScene
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Navigation.INavigation.GoToScene
  Timba.SacredTails.Navigation.INavigation:
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.INavigation
        name: INavigation
        nameWithType: INavigation
        qualifiedName: Timba.SacredTails.Navigation.INavigation
      VB:
      - id: Timba.SacredTails.Navigation.INavigation
        name: INavigation
        nameWithType: INavigation
        qualifiedName: Timba.SacredTails.Navigation.INavigation
    isDefinition: true
    parent: Timba.SacredTails.Navigation
    commentId: T:Timba.SacredTails.Navigation.INavigation
  Timba.SacredTails.Navigation:
    name:
      CSharp:
      - name: Timba.SacredTails.Navigation
        nameWithType: Timba.SacredTails.Navigation
        qualifiedName: Timba.SacredTails.Navigation
      VB:
      - name: Timba.SacredTails.Navigation
        nameWithType: Timba.SacredTails.Navigation
        qualifiedName: Timba.SacredTails.Navigation
    isDefinition: true
    commentId: N:Timba.SacredTails.Navigation
  Timba.SacredTails.Navigation.NavigationManager.GoToScene*:
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.NavigationManager.GoToScene*
        name: GoToScene
        nameWithType: NavigationManager.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager.GoToScene
      VB:
      - id: Timba.SacredTails.Navigation.NavigationManager.GoToScene*
        name: GoToScene
        nameWithType: NavigationManager.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager.GoToScene
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Navigation.NavigationManager.GoToScene
  Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32):
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
        name: GoToScene
        nameWithType: INavigation.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.INavigation.GoToScene
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
        name: GoToScene
        nameWithType: INavigation.GoToScene
        qualifiedName: Timba.SacredTails.Navigation.INavigation.GoToScene
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.Navigation.INavigation
    commentId: M:Timba.SacredTails.Navigation.INavigation.GoToScene(System.Int32)
  Timba.SacredTails.Navigation.NavigationManager.IsReady*:
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.NavigationManager.IsReady*
        name: IsReady
        nameWithType: NavigationManager.IsReady
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager.IsReady
      VB:
      - id: Timba.SacredTails.Navigation.NavigationManager.IsReady*
        name: IsReady
        nameWithType: NavigationManager.IsReady
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager.IsReady
    isDefinition: true
    commentId: Overload:Timba.SacredTails.Navigation.NavigationManager.IsReady
  Timba.SacredTails.Navigation.NavigationManager:
    name:
      CSharp:
      - id: Timba.SacredTails.Navigation.NavigationManager
        name: NavigationManager
        nameWithType: NavigationManager
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager
      VB:
      - id: Timba.SacredTails.Navigation.NavigationManager
        name: NavigationManager
        nameWithType: NavigationManager
        qualifiedName: Timba.SacredTails.Navigation.NavigationManager
    isDefinition: true
    commentId: T:Timba.SacredTails.Navigation.NavigationManager
  Timba.SacredTails.UiHelpers:
    name:
      CSharp:
      - name: Timba.SacredTails.UiHelpers
        nameWithType: Timba.SacredTails.UiHelpers
        qualifiedName: Timba.SacredTails.UiHelpers
      VB:
      - name: Timba.SacredTails.UiHelpers
        nameWithType: Timba.SacredTails.UiHelpers
        qualifiedName: Timba.SacredTails.UiHelpers
    isDefinition: true
    commentId: N:Timba.SacredTails.UiHelpers
  Timba.SacredTails.UiHelpers.IconSet:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IconSet
        name: IconSet
        nameWithType: IconSet
        qualifiedName: Timba.SacredTails.UiHelpers.IconSet
      VB:
      - id: Timba.SacredTails.UiHelpers.IconSet
        name: IconSet
        nameWithType: IconSet
        qualifiedName: Timba.SacredTails.UiHelpers.IconSet
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.IconSet
  System.Collections.Generic.List{Timba.SacredTails.UiHelpers.IconSet}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.SacredTails.UiHelpers.IconSet
        name: IconSet
        nameWithType: IconSet
        qualifiedName: Timba.SacredTails.UiHelpers.IconSet
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.SacredTails.UiHelpers.IconSet
        name: IconSet
        nameWithType: IconSet
        qualifiedName: Timba.SacredTails.UiHelpers.IconSet
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.SacredTails.UiHelpers.IconSet}
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{CharacterType}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{CharacterType}
  Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon*
        name: AssignIcon
        nameWithType: IconContainerSO.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon
      VB:
      - id: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon*
        name: AssignIcon
        nameWithType: IconContainerSO.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.IconContainerSO.AssignIcon
  Timba.SacredTails.UiHelpers.IconContainerSO:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IconContainerSO
        name: IconContainerSO
        nameWithType: IconContainerSO
        qualifiedName: Timba.SacredTails.UiHelpers.IconContainerSO
      VB:
      - id: Timba.SacredTails.UiHelpers.IconContainerSO
        name: IconContainerSO
        nameWithType: IconContainerSO
        qualifiedName: Timba.SacredTails.UiHelpers.IconContainerSO
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.IconContainerSO
  Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon*
        name: AssignIcon
        nameWithType: IUIHelpable.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon
      VB:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon*
        name: AssignIcon
        nameWithType: IUIHelpable.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon
  Timba.SacredTails.UiHelpers.IUIHelpable:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable
        name: IUIHelpable
        nameWithType: IUIHelpable
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable
      VB:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable
        name: IUIHelpable
        nameWithType: IUIHelpable
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers
    commentId: T:Timba.SacredTails.UiHelpers.IUIHelpable
  Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon*
        name: AssignIcon
        nameWithType: TypeIconAsigner.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon
      VB:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon*
        name: AssignIcon
        nameWithType: TypeIconAsigner.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.TypeIconAsigner.AssignIcon
  Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType}):
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
        name: AssignIcon
        nameWithType: IUIHelpable.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
        name: AssignIcon
        nameWithType: IUIHelpable.AssignIcon
        qualifiedName: Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CharacterType
        name: CharacterType
        nameWithType: CharacterType
        qualifiedName: CharacterType
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.SacredTails.UiHelpers.IUIHelpable
    commentId: M:Timba.SacredTails.UiHelpers.IUIHelpable.AssignIcon(System.Nullable{CharacterType})
  Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady*:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady*
        name: IsReady
        nameWithType: TypeIconAsigner.IsReady
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady
      VB:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady*
        name: IsReady
        nameWithType: TypeIconAsigner.IsReady
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady
    isDefinition: true
    commentId: Overload:Timba.SacredTails.UiHelpers.TypeIconAsigner.IsReady
  Timba.SacredTails.UiHelpers.TypeIconAsigner:
    name:
      CSharp:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner
        name: TypeIconAsigner
        nameWithType: TypeIconAsigner
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner
      VB:
      - id: Timba.SacredTails.UiHelpers.TypeIconAsigner
        name: TypeIconAsigner
        nameWithType: TypeIconAsigner
        qualifiedName: Timba.SacredTails.UiHelpers.TypeIconAsigner
    isDefinition: true
    commentId: T:Timba.SacredTails.UiHelpers.TypeIconAsigner
  Utils.Singleton{Timba.Games.CharacterFactory.CharacterBuilder}:
    name:
      CSharp:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.CharacterFactory.CharacterBuilder
        name: CharacterBuilder
        nameWithType: CharacterBuilder
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.CharacterFactory.CharacterBuilder
        name: CharacterBuilder
        nameWithType: CharacterBuilder
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Utils.Singleton`1
    parent: Utils
    commentId: T:Utils.Singleton{Timba.Games.CharacterFactory.CharacterBuilder}
  Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter*
        name: InstantiateCharacter
        nameWithType: CharacterBuilder.InstantiateCharacter
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter
      VB:
      - id: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter*
        name: InstantiateCharacter
        nameWithType: CharacterBuilder.InstantiateCharacter
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterBuilder.InstantiateCharacter
  Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual*
        name: UpdateVisual
        nameWithType: CharacterBuilder.UpdateVisual
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual
      VB:
      - id: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual*
        name: UpdateVisual
        nameWithType: CharacterBuilder.UpdateVisual
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.CharacterBuilder.UpdateVisual
  Timba.Games.CharacterFactory.CharacterBuilder:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.CharacterBuilder
        name: CharacterBuilder
        nameWithType: CharacterBuilder
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder
      VB:
      - id: Timba.Games.CharacterFactory.CharacterBuilder
        name: CharacterBuilder
        nameWithType: CharacterBuilder
        qualifiedName: Timba.Games.CharacterFactory.CharacterBuilder
    isDefinition: true
    commentId: T:Timba.Games.CharacterFactory.CharacterBuilder
  Utils.Singleton{Timba.Games.CharacterFactory.ColorSwapper3D}:
    name:
      CSharp:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.CharacterFactory.ColorSwapper3D
        name: ColorSwapper3D
        nameWithType: ColorSwapper3D
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Utils.Singleton`1
        name: Singleton
        nameWithType: Singleton
        qualifiedName: Utils.Singleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.CharacterFactory.ColorSwapper3D
        name: ColorSwapper3D
        nameWithType: ColorSwapper3D
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Utils.Singleton`1
    parent: Utils
    commentId: T:Utils.Singleton{Timba.Games.CharacterFactory.ColorSwapper3D}
  Global.ColorsSO:
    name:
      CSharp:
      - id: Global.ColorsSO
        name: ColorsSO
        nameWithType: ColorsSO
        qualifiedName: ColorsSO
      VB:
      - id: Global.ColorsSO
        name: ColorsSO
        nameWithType: ColorsSO
        qualifiedName: ColorsSO
    isDefinition: true
    commentId: T:Global.ColorsSO
  Global.SwapColorPropertyNameSO:
    name:
      CSharp:
      - id: Global.SwapColorPropertyNameSO
        name: SwapColorPropertyNameSO
        nameWithType: SwapColorPropertyNameSO
        qualifiedName: SwapColorPropertyNameSO
      VB:
      - id: Global.SwapColorPropertyNameSO
        name: SwapColorPropertyNameSO
        nameWithType: SwapColorPropertyNameSO
        qualifiedName: SwapColorPropertyNameSO
    isDefinition: true
    commentId: T:Global.SwapColorPropertyNameSO
  Global.RecolorablePart3D:
    name:
      CSharp:
      - id: Global.RecolorablePart3D
        name: RecolorablePart3D
        nameWithType: RecolorablePart3D
        qualifiedName: RecolorablePart3D
        isExternal: true
      VB:
      - id: Global.RecolorablePart3D
        name: RecolorablePart3D
        nameWithType: RecolorablePart3D
        qualifiedName: RecolorablePart3D
        isExternal: true
    isDefinition: true
  Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList*
        name: AddTo3DPartList
        nameWithType: ColorSwapper3D.AddTo3DPartList
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList*
        name: AddTo3DPartList
        nameWithType: ColorSwapper3D.AddTo3DPartList
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ColorSwapper3D.AddTo3DPartList
  Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart*
        name: RemovePart
        nameWithType: ColorSwapper3D.RemovePart
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart*
        name: RemovePart
        nameWithType: ColorSwapper3D.RemovePart
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ColorSwapper3D.RemovePart
  Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette*
        name: SwapPallette
        nameWithType: ColorSwapper3D.SwapPallette
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette*
        name: SwapPallette
        nameWithType: ColorSwapper3D.SwapPallette
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ColorSwapper3D.SwapPallette
  Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette*
        name: UpdatePartPallette
        nameWithType: ColorSwapper3D.UpdatePartPallette
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette*
        name: UpdatePartPallette
        nameWithType: ColorSwapper3D.UpdatePartPallette
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ColorSwapper3D.UpdatePartPallette
  Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet*:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet*
        name: AssignPallet
        nameWithType: ColorSwapper3D.AssignPallet
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet*
        name: AssignPallet
        nameWithType: ColorSwapper3D.AssignPallet
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet
    isDefinition: true
    commentId: Overload:Timba.Games.CharacterFactory.ColorSwapper3D.AssignPallet
  Timba.Games.CharacterFactory.ColorSwapper3D:
    name:
      CSharp:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D
        name: ColorSwapper3D
        nameWithType: ColorSwapper3D
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D
      VB:
      - id: Timba.Games.CharacterFactory.ColorSwapper3D
        name: ColorSwapper3D
        nameWithType: ColorSwapper3D
        qualifiedName: Timba.Games.CharacterFactory.ColorSwapper3D
    isDefinition: true
    commentId: T:Timba.Games.CharacterFactory.ColorSwapper3D
  Timba.Games.CharacterFactory:
    name:
      CSharp:
      - name: Timba.Games.CharacterFactory
        nameWithType: Timba.Games.CharacterFactory
        qualifiedName: Timba.Games.CharacterFactory
      VB:
      - name: Timba.Games.CharacterFactory
        nameWithType: Timba.Games.CharacterFactory
        qualifiedName: Timba.Games.CharacterFactory
    isDefinition: true
    commentId: N:Timba.Games.CharacterFactory
  Global.Logout:
    name:
      CSharp:
      - id: Global.Logout
        name: Logout
        nameWithType: Logout
        qualifiedName: Logout
      VB:
      - id: Global.Logout
        name: Logout
        nameWithType: Logout
        qualifiedName: Logout
    isDefinition: true
    commentId: T:Global.Logout
  Timba.Games.SacredTails.DisconnectManager.LogIn*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.DisconnectManager.LogIn*
        name: LogIn
        nameWithType: DisconnectManager.LogIn
        qualifiedName: Timba.Games.SacredTails.DisconnectManager.LogIn
      VB:
      - id: Timba.Games.SacredTails.DisconnectManager.LogIn*
        name: LogIn
        nameWithType: DisconnectManager.LogIn
        qualifiedName: Timba.Games.SacredTails.DisconnectManager.LogIn
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.DisconnectManager.LogIn
  Timba.Games.SacredTails.DisconnectManager.Update*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.DisconnectManager.Update*
        name: Update
        nameWithType: DisconnectManager.Update
        qualifiedName: Timba.Games.SacredTails.DisconnectManager.Update
      VB:
      - id: Timba.Games.SacredTails.DisconnectManager.Update*
        name: Update
        nameWithType: DisconnectManager.Update
        qualifiedName: Timba.Games.SacredTails.DisconnectManager.Update
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.DisconnectManager.Update
  Timba.Games.SacredTails.DisconnectManager:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.DisconnectManager
        name: DisconnectManager
        nameWithType: DisconnectManager
        qualifiedName: Timba.Games.SacredTails.DisconnectManager
      VB:
      - id: Timba.Games.SacredTails.DisconnectManager
        name: DisconnectManager
        nameWithType: DisconnectManager
        qualifiedName: Timba.Games.SacredTails.DisconnectManager
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.DisconnectManager
  Timba.Games.SacredTails.IWallet.UpdateUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.UpdateUserWallet*
        name: UpdateUserWallet
        nameWithType: IWallet.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.UpdateUserWallet
      VB:
      - id: Timba.Games.SacredTails.IWallet.UpdateUserWallet*
        name: UpdateUserWallet
        nameWithType: IWallet.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.UpdateUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.IWallet.UpdateUserWallet
  Timba.Games.SacredTails.IWallet.GetUserCurrentCoins*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins*
        name: GetUserCurrentCoins
        nameWithType: IWallet.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      VB:
      - id: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins*
        name: GetUserCurrentCoins
        nameWithType: IWallet.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
  Timba.Games.SacredTails.IWallet.HideUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.HideUserWallet*
        name: HideUserWallet
        nameWithType: IWallet.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.HideUserWallet
      VB:
      - id: Timba.Games.SacredTails.IWallet.HideUserWallet*
        name: HideUserWallet
        nameWithType: IWallet.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.HideUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.IWallet.HideUserWallet
  Timba.Games.SacredTails.IWallet.ShowUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: IWallet.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.ShowUserWallet
      VB:
      - id: Timba.Games.SacredTails.IWallet.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: IWallet.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.ShowUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.IWallet.ShowUserWallet
  Timba.Games.SacredTails.IWallet:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet
        name: IWallet
        nameWithType: IWallet
        qualifiedName: Timba.Games.SacredTails.IWallet
      VB:
      - id: Timba.Games.SacredTails.IWallet
        name: IWallet
        nameWithType: IWallet
        qualifiedName: Timba.Games.SacredTails.IWallet
    isDefinition: true
    parent: Timba.Games.SacredTails
    commentId: T:Timba.Games.SacredTails.IWallet
  Timba.Games.SacredTails:
    name:
      CSharp:
      - name: Timba.Games.SacredTails
        nameWithType: Timba.Games.SacredTails
        qualifiedName: Timba.Games.SacredTails
      VB:
      - name: Timba.Games.SacredTails
        nameWithType: Timba.Games.SacredTails
        qualifiedName: Timba.Games.SacredTails
    isDefinition: true
    commentId: N:Timba.Games.SacredTails
  Timba.Games.SacredTails.WalletController.Start*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.Start*
        name: Start
        nameWithType: WalletController.Start
        qualifiedName: Timba.Games.SacredTails.WalletController.Start
      VB:
      - id: Timba.Games.SacredTails.WalletController.Start*
        name: Start
        nameWithType: WalletController.Start
        qualifiedName: Timba.Games.SacredTails.WalletController.Start
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.Start
  Global.GetUserInventoryResult:
    name:
      CSharp:
      - id: Global.GetUserInventoryResult
        name: GetUserInventoryResult
        nameWithType: GetUserInventoryResult
        qualifiedName: GetUserInventoryResult
        isExternal: true
      VB:
      - id: Global.GetUserInventoryResult
        name: GetUserInventoryResult
        nameWithType: GetUserInventoryResult
        qualifiedName: GetUserInventoryResult
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GetUserInventoryResult'
  Timba.Games.SacredTails.WalletController.GetPlayerCurrency*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.GetPlayerCurrency*
        name: GetPlayerCurrency
        nameWithType: WalletController.GetPlayerCurrency
        qualifiedName: Timba.Games.SacredTails.WalletController.GetPlayerCurrency
      VB:
      - id: Timba.Games.SacredTails.WalletController.GetPlayerCurrency*
        name: GetPlayerCurrency
        nameWithType: WalletController.GetPlayerCurrency
        qualifiedName: Timba.Games.SacredTails.WalletController.GetPlayerCurrency
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.GetPlayerCurrency
  Timba.Games.SacredTails.WalletController.GetUserCurrentCoins*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins*
        name: GetUserCurrentCoins
        nameWithType: WalletController.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins
      VB:
      - id: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins*
        name: GetUserCurrentCoins
        nameWithType: WalletController.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.WalletController.GetUserCurrentCoins
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.GetUserCurrentCoins
  Timba.Games.SacredTails.IWallet.GetUserCurrentCoins:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
        name: GetUserCurrentCoins
        nameWithType: IWallet.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
        name: GetUserCurrentCoins
        nameWithType: IWallet.GetUserCurrentCoins
        qualifiedName: Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.IWallet
    commentId: M:Timba.Games.SacredTails.IWallet.GetUserCurrentCoins
  Timba.Games.SacredTails.WalletController.UpdateUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.UpdateUserWallet*
        name: UpdateUserWallet
        nameWithType: WalletController.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.UpdateUserWallet
      VB:
      - id: Timba.Games.SacredTails.WalletController.UpdateUserWallet*
        name: UpdateUserWallet
        nameWithType: WalletController.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.UpdateUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.UpdateUserWallet
  Timba.Games.SacredTails.IWallet.UpdateUserWallet:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.UpdateUserWallet
        name: UpdateUserWallet
        nameWithType: IWallet.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.UpdateUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.IWallet.UpdateUserWallet
        name: UpdateUserWallet
        nameWithType: IWallet.UpdateUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.UpdateUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.IWallet
    commentId: M:Timba.Games.SacredTails.IWallet.UpdateUserWallet
  Timba.Games.SacredTails.WalletController.ShowUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: WalletController.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.ShowUserWallet
      VB:
      - id: Timba.Games.SacredTails.WalletController.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: WalletController.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.ShowUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.ShowUserWallet
  Timba.Games.SacredTails.IWallet.ShowUserWallet:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.ShowUserWallet
        name: ShowUserWallet
        nameWithType: IWallet.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.ShowUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.IWallet.ShowUserWallet
        name: ShowUserWallet
        nameWithType: IWallet.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.ShowUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.IWallet
    commentId: M:Timba.Games.SacredTails.IWallet.ShowUserWallet
  Timba.Games.SacredTails.WalletController.HideUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.HideUserWallet*
        name: HideUserWallet
        nameWithType: WalletController.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.HideUserWallet
      VB:
      - id: Timba.Games.SacredTails.WalletController.HideUserWallet*
        name: HideUserWallet
        nameWithType: WalletController.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletController.HideUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.HideUserWallet
  Timba.Games.SacredTails.IWallet.HideUserWallet:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.IWallet.HideUserWallet
        name: HideUserWallet
        nameWithType: IWallet.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.HideUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.IWallet.HideUserWallet
        name: HideUserWallet
        nameWithType: IWallet.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.IWallet.HideUserWallet
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.IWallet
    commentId: M:Timba.Games.SacredTails.IWallet.HideUserWallet
  Timba.Games.SacredTails.WalletController.IsReady*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController.IsReady*
        name: IsReady
        nameWithType: WalletController.IsReady
        qualifiedName: Timba.Games.SacredTails.WalletController.IsReady
      VB:
      - id: Timba.Games.SacredTails.WalletController.IsReady*
        name: IsReady
        nameWithType: WalletController.IsReady
        qualifiedName: Timba.Games.SacredTails.WalletController.IsReady
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletController.IsReady
  Timba.Games.SacredTails.WalletController:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletController
        name: WalletController
        nameWithType: WalletController
        qualifiedName: Timba.Games.SacredTails.WalletController
      VB:
      - id: Timba.Games.SacredTails.WalletController
        name: WalletController
        nameWithType: WalletController
        qualifiedName: Timba.Games.SacredTails.WalletController
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.WalletController
  Global.Action`3:
    name:
      CSharp:
      - id: Global.Action`3
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`3
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.Action`3'
  Global.Action{System.Boolean,System.UInt32,System.String}:
    name:
      CSharp:
      - id: Global.Action`3
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`3
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`3
    commentId: '!:Global.Action{System.Boolean,System.UInt32,System.String}'
  Timba.Games.SacredTails.Lobby.LobbySceneController.Init*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.LobbySceneController.Init*
        name: Init
        nameWithType: LobbySceneController.Init
        qualifiedName: Timba.Games.SacredTails.Lobby.LobbySceneController.Init
      VB:
      - id: Timba.Games.SacredTails.Lobby.LobbySceneController.Init*
        name: Init
        nameWithType: LobbySceneController.Init
        qualifiedName: Timba.Games.SacredTails.Lobby.LobbySceneController.Init
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.LobbySceneController.Init
  Timba.Games.SacredTails.Lobby.LobbySceneController:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.LobbySceneController
        name: LobbySceneController
        nameWithType: LobbySceneController
        qualifiedName: Timba.Games.SacredTails.Lobby.LobbySceneController
      VB:
      - id: Timba.Games.SacredTails.Lobby.LobbySceneController
        name: LobbySceneController
        nameWithType: LobbySceneController
        qualifiedName: Timba.Games.SacredTails.Lobby.LobbySceneController
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.LobbySceneController
  Global.ShinseiSpawner:
    name:
      CSharp:
      - id: Global.ShinseiSpawner
        name: ShinseiSpawner
        nameWithType: ShinseiSpawner
        qualifiedName: ShinseiSpawner
        isExternal: true
      VB:
      - id: Global.ShinseiSpawner
        name: ShinseiSpawner
        nameWithType: ShinseiSpawner
        qualifiedName: ShinseiSpawner
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ShinseiSpawner'
  Timba.Games.SacredTails.Lobby.PartyManager.Start*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Start*
        name: Start
        nameWithType: PartyManager.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Start
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Start*
        name: Start
        nameWithType: PartyManager.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Start
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.Start
  Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis*
        name: UpdateShinseis
        nameWithType: PartyManager.UpdateShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis*
        name: UpdateShinseis
        nameWithType: PartyManager.UpdateShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
  Global.Action{System.Int32,ShinseiSlot}:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`2
    commentId: '!:Global.Action{System.Int32,ShinseiSlot}'
  Timba.Games.SacredTails.Lobby.PartyManager.Initialize*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Initialize*
        name: Initialize
        nameWithType: PartyManager.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Initialize
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Initialize*
        name: Initialize
        nameWithType: PartyManager.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Initialize
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.Initialize
  Global.UnityAction`2:
    name:
      CSharp:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityAction`2'
  Global.UnityAction{System.Int32,ShinseiSlot}:
    name:
      CSharp:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityAction`2
    commentId: '!:Global.UnityAction{System.Int32,ShinseiSlot}'
  Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction*
        name: ChangeOnClickSlotAction
        nameWithType: PartyManager.ChangeOnClickSlotAction
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction*
        name: ChangeOnClickSlotAction
        nameWithType: PartyManager.ChangeOnClickSlotAction
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction
  Global.ShinseiSlot:
    name:
      CSharp:
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      VB:
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
    isDefinition: true
  Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManager.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManager.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot
  Timba.Games.SacredTails.Lobby.PartyManager.HidePanel*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel*
        name: HidePanel
        nameWithType: PartyManager.HidePanel
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel*
        name: HidePanel
        nameWithType: PartyManager.HidePanel
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
  Timba.Games.SacredTails.Lobby.PartyManager:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager
        name: PartyManager
        nameWithType: PartyManager
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager
        name: PartyManager
        nameWithType: PartyManager
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManager
  Timba.Games.SacredTails.Lobby:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.Lobby
        nameWithType: Timba.Games.SacredTails.Lobby
        qualifiedName: Timba.Games.SacredTails.Lobby
      VB:
      - name: Timba.Games.SacredTails.Lobby
        nameWithType: Timba.Games.SacredTails.Lobby
        qualifiedName: Timba.Games.SacredTails.Lobby
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.Lobby
  Timba.Games.SacredTails.Lobby.PartyManager.selectorPos:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
        name: selectorPos
        nameWithType: PartyManager.selectorPos
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
        name: selectorPos
        nameWithType: PartyManager.selectorPos
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: F:Timba.Games.SacredTails.Lobby.PartyManager.selectorPos
  Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
        name: shinseiSpawner
        nameWithType: PartyManager.shinseiSpawner
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
        name: shinseiSpawner
        nameWithType: PartyManager.shinseiSpawner
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: F:Timba.Games.SacredTails.Lobby.PartyManager.shinseiSpawner
  Timba.Games.SacredTails.Lobby.PartyManager.Start:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Start
        name: Start
        nameWithType: PartyManager.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Start
        name: Start
        nameWithType: PartyManager.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.Start
  Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
        name: UpdateShinseis
        nameWithType: PartyManager.UpdateShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
        name: UpdateShinseis
        nameWithType: PartyManager.UpdateShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.UpdateShinseis
  Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot}):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
        name: ChangeOnClickSlotAction
        nameWithType: PartyManager.ChangeOnClickSlotAction
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
        name: ChangeOnClickSlotAction
        nameWithType: PartyManager.ChangeOnClickSlotAction
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.ChangeOnClickSlotAction(UnityAction{System.Int32,ShinseiSlot})
  Timba.Games.SacredTails.Lobby.PartyManager.HidePanel:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
        name: HidePanel
        nameWithType: PartyManager.HidePanel
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
        name: HidePanel
        nameWithType: PartyManager.HidePanel
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.HidePanel
  Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot}):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
        name: Initialize
        nameWithType: PartyManager.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
        name: Initialize
        nameWithType: PartyManager.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.Initialize(Action{System.Int32,ShinseiSlot})
  Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize*
        name: Initialize
        nameWithType: PartyManagerLobby.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize*
        name: Initialize
        nameWithType: PartyManagerLobby.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerLobby.Initialize
  Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
        name: OnClickSlot
        nameWithType: PartyManager.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
        name: OnClickSlot
        nameWithType: PartyManager.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ShinseiSlot
        name: ShinseiSlot
        nameWithType: ShinseiSlot
        qualifiedName: ShinseiSlot
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.Lobby.PartyManager
    commentId: M:Timba.Games.SacredTails.Lobby.PartyManager.OnClickSlot(System.Int32,ShinseiSlot)
  Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManagerLobby.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManagerLobby.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerLobby.OnClickSlot
  Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn*
        name: SwapShinseiBtn
        nameWithType: PartyManagerLobby.SwapShinseiBtn
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn*
        name: SwapShinseiBtn
        nameWithType: PartyManagerLobby.SwapShinseiBtn
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerLobby.SwapShinseiBtn
  Timba.Games.SacredTails.Lobby.PartyManagerLobby:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby
        name: PartyManagerLobby
        nameWithType: PartyManagerLobby
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerLobby
        name: PartyManagerLobby
        nameWithType: PartyManagerLobby
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerLobby
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManagerLobby
  Global.SelectableUi:
    name:
      CSharp:
      - id: Global.SelectableUi
        name: SelectableUi
        nameWithType: SelectableUi
        qualifiedName: SelectableUi
      VB:
      - id: Global.SelectableUi
        name: SelectableUi
        nameWithType: SelectableUi
        qualifiedName: SelectableUi
    isDefinition: true
    commentId: T:Global.SelectableUi
  Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize*
        name: Initialize
        nameWithType: PartyManagerVault.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize*
        name: Initialize
        nameWithType: PartyManagerVault.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerVault.Initialize
  Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManagerVault.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot*
        name: OnClickSlot
        nameWithType: PartyManagerVault.OnClickSlot
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerVault.OnClickSlot
  Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei*
        name: DisplayPreviewForShisnei
        nameWithType: PartyManagerVault.DisplayPreviewForShisnei
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei*
        name: DisplayPreviewForShisnei
        nameWithType: PartyManagerVault.DisplayPreviewForShisnei
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerVault.DisplayPreviewForShisnei
  Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis*
        name: ChangeShinseis
        nameWithType: PartyManagerVault.ChangeShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis*
        name: ChangeShinseis
        nameWithType: PartyManagerVault.ChangeShinseis
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.PartyManagerVault.ChangeShinseis
  Timba.Games.SacredTails.Lobby.PartyManagerVault:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault
        name: PartyManagerVault
        nameWithType: PartyManagerVault
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault
      VB:
      - id: Timba.Games.SacredTails.Lobby.PartyManagerVault
        name: PartyManagerVault
        nameWithType: PartyManagerVault
        qualifiedName: Timba.Games.SacredTails.Lobby.PartyManagerVault
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.PartyManagerVault
  Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start*
        name: Start
        nameWithType: ShinseiVaultController.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start*
        name: Start
        nameWithType: ShinseiVaultController.Start
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.ShinseiVaultController.Start
  Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize*
        name: Initialize
        nameWithType: ShinseiVaultController.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize*
        name: Initialize
        nameWithType: ShinseiVaultController.Initialize
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.ShinseiVaultController.Initialize
  Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected*
        name: OnVaultShinseiSelected
        nameWithType: ShinseiVaultController.OnVaultShinseiSelected
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected*
        name: OnVaultShinseiSelected
        nameWithType: ShinseiVaultController.OnVaultShinseiSelected
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.ShinseiVaultController.OnVaultShinseiSelected
  Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei*
        name: DisplayPreviewForShisnei
        nameWithType: ShinseiVaultController.DisplayPreviewForShisnei
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei*
        name: DisplayPreviewForShisnei
        nameWithType: ShinseiVaultController.DisplayPreviewForShisnei
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.Lobby.ShinseiVaultController.DisplayPreviewForShisnei
  Timba.Games.SacredTails.Lobby.ShinseiVaultController:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController
        name: ShinseiVaultController
        nameWithType: ShinseiVaultController
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController
      VB:
      - id: Timba.Games.SacredTails.Lobby.ShinseiVaultController
        name: ShinseiVaultController
        nameWithType: ShinseiVaultController
        qualifiedName: Timba.Games.SacredTails.Lobby.ShinseiVaultController
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.Lobby.ShinseiVaultController
  Timba.Games.SacredTails.LobbyDatabase:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.LobbyDatabase
        nameWithType: Timba.Games.SacredTails.LobbyDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase
      VB:
      - name: Timba.Games.SacredTails.LobbyDatabase
        nameWithType: Timba.Games.SacredTails.LobbyDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.LobbyDatabase
  Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData*
        name: CurrentUserData
        nameWithType: ILobbydatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData*
        name: CurrentUserData
        nameWithType: ILobbydatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
  Global.Action{ExecuteFunctionResult}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{ExecuteFunctionResult}'
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: ILobbydatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: ILobbydatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData*
        name: SetGetPlayersData
        nameWithType: ILobbydatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData*
        name: SetGetPlayersData
        nameWithType: ILobbydatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData
  Global.Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}}'
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData*
        name: RecievePlayersData
        nameWithType: ILobbydatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData*
        name: RecievePlayersData
        nameWithType: ILobbydatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData
  Global.Action{System.Boolean}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.Boolean}'
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData*
        name: SendPlayerData
        nameWithType: ILobbydatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData*
        name: SendPlayerData
        nameWithType: ILobbydatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby*
        name: DisconnectFromLobby
        nameWithType: ILobbydatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby*
        name: DisconnectFromLobby
        nameWithType: ILobbydatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
        name: ILobbydatabase
        nameWithType: ILobbydatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
        name: ILobbydatabase
        nameWithType: ILobbydatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
  Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        name: TypeOfTournamentRequest
        nameWithType: TypeOfTournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        name: TypeOfTournamentRequest
        nameWithType: TypeOfTournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
  Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest*
        name: TournamentRequest
        nameWithType: ITournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest*
        name: TournamentRequest
        nameWithType: ITournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest
  Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
        name: ITournamentDatabase
        nameWithType: ITournamentDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
        name: ITournamentDatabase
        nameWithType: ITournamentDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
  System.UInt64:
    name:
      CSharp:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      VB:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt64
  System.Collections.Generic.List{Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload}
  Global.SerializableVector3:
    name:
      CSharp:
      - id: Global.SerializableVector3
        name: SerializableVector3
        nameWithType: SerializableVector3
        qualifiedName: SerializableVector3
      VB:
      - id: Global.SerializableVector3
        name: SerializableVector3
        nameWithType: SerializableVector3
        qualifiedName: SerializableVector3
    isDefinition: true
    commentId: T:Global.SerializableVector3
  Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
        name: ChatMessagePayload
        nameWithType: ChatMessagePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.ChatMessagePayload
  Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
        name: CharacterStateEnum
        nameWithType: CharacterStateEnum
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
        name: CharacterStateEnum
        nameWithType: CharacterStateEnum
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.CharacterStateEnum
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData*
        name: CurrentUserData
        nameWithType: PlayfabLobbyDatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData*
        name: CurrentUserData
        nameWithType: PlayfabLobbyDatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.CurrentUserData
  Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
        name: CurrentUserData
        nameWithType: ILobbydatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
        name: CurrentUserData
        nameWithType: ILobbydatabase.CurrentUserData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: P:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.CurrentUserData
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake*
        name: Awake
        nameWithType: PlayfabLobbyDatabase.Awake
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake*
        name: Awake
        nameWithType: PlayfabLobbyDatabase.Awake
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.Awake
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady*
        name: IsReady
        nameWithType: PlayfabLobbyDatabase.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady*
        name: IsReady
        nameWithType: PlayfabLobbyDatabase.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.IsReady
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: PlayfabLobbyDatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: PlayfabLobbyDatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.ConnectToLobby
  ? Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
        name: ConnectToLobby
        nameWithType: ILobbydatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
        name: ConnectToLobby
        nameWithType: ILobbydatabase.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.ConnectToLobby(System.Int32,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData*
        name: SetGetPlayersData
        nameWithType: PlayfabLobbyDatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData*
        name: SetGetPlayersData
        nameWithType: PlayfabLobbyDatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SetGetPlayersData
  ? Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
        name: SetGetPlayersData
        nameWithType: ILobbydatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
        name: SetGetPlayersData
        nameWithType: ILobbydatabase.SetGetPlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SetGetPlayersData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{ExecuteFunctionResult})
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData*
        name: RecievePlayersData
        nameWithType: PlayfabLobbyDatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData*
        name: RecievePlayersData
        nameWithType: PlayfabLobbyDatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.RecievePlayersData
  ? Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
        name: RecievePlayersData
        nameWithType: ILobbydatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
        name: RecievePlayersData
        nameWithType: ILobbydatabase.RecievePlayersData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.RecievePlayersData(Action{System.Collections.Generic.Dictionary{System.String,Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload}})
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData*
        name: SendPlayerData
        nameWithType: PlayfabLobbyDatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData*
        name: SendPlayerData
        nameWithType: PlayfabLobbyDatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.SendPlayerData
  ? Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
        name: SendPlayerData
        nameWithType: ILobbydatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
        name: SendPlayerData
        nameWithType: ILobbydatabase.SendPlayerData
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.SendPlayerData(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload,Action{System.Boolean})
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby*
        name: DisconnectFromLobby
        nameWithType: PlayfabLobbyDatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby*
        name: DisconnectFromLobby
        nameWithType: PlayfabLobbyDatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase.DisconnectFromLobby
  ? Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
        name: DisconnectFromLobby
        nameWithType: ILobbydatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
        name: DisconnectFromLobby
        nameWithType: ILobbydatabase.DisconnectFromLobby
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ILobbydatabase.DisconnectFromLobby(Timba.Games.SacredTails.LobbyDatabase.LobbyPlayerBasePayload)
  Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
        name: PlayfabLobbyDatabase
        nameWithType: PlayfabLobbyDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
        name: PlayfabLobbyDatabase
        nameWithType: PlayfabLobbyDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.PlayfabLobbyDatabase
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  Timba.Games.SacredTails.LobbyDatabase.DeletePayload:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
        name: DeletePayload
        nameWithType: DeletePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
        name: DeletePayload
        nameWithType: DeletePayload
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.DeletePayload
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.DeletePayload
  Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady*
        name: IsReady
        nameWithType: PlayfabTournamentDatabase.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady*
        name: IsReady
        nameWithType: PlayfabTournamentDatabase.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.IsReady
  Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest*
        name: TournamentRequest
        nameWithType: PlayfabTournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest*
        name: TournamentRequest
        nameWithType: PlayfabTournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase.TournamentRequest
  ? Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
        name: TournamentRequest
        nameWithType: ITournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        name: TypeOfTournamentRequest
        nameWithType: TypeOfTournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
        name: TournamentRequest
        nameWithType: ITournamentDatabase.TournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
        name: TypeOfTournamentRequest
        nameWithType: TypeOfTournamentRequest
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ExecuteFunctionResult
        name: ExecuteFunctionResult
        nameWithType: ExecuteFunctionResult
        qualifiedName: ExecuteFunctionResult
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase
    commentId: M:Timba.Games.SacredTails.LobbyDatabase.ITournamentDatabase.TournamentRequest(System.String,Timba.Games.SacredTails.LobbyDatabase.TypeOfTournamentRequest,Action{ExecuteFunctionResult},System.Boolean,System.Int32)
  Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
        name: PlayfabTournamentDatabase
        nameWithType: PlayfabTournamentDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
        name: PlayfabTournamentDatabase
        nameWithType: PlayfabTournamentDatabase
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.PlayfabTournamentDatabase
  Timba.Games.SacredTails.LobbyDatabase.RequestConstants:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
        name: RequestConstants
        nameWithType: RequestConstants
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
      VB:
      - id: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
        name: RequestConstants
        nameWithType: RequestConstants
        qualifiedName: Timba.Games.SacredTails.LobbyDatabase.RequestConstants
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyDatabase.RequestConstants
  Global.ThirdPersonController:
    name:
      CSharp:
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      VB:
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
    isDefinition: true
    commentId: T:Global.ThirdPersonController
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: ILobbyNetworkManager.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: ILobbyNetworkManager.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition*
        name: CurrentSecondsBetweenPetition
        nameWithType: ILobbyNetworkManager.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition*
        name: CurrentSecondsBetweenPetition
        nameWithType: ILobbyNetworkManager.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: ILobbyNetworkManager.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: ILobbyNetworkManager.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby
  System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload}
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers*
        name: ManageLobbyPlayers
        nameWithType: ILobbyNetworkManager.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers*
        name: ManageLobbyPlayers
        nameWithType: ILobbyNetworkManager.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode*
        name: ToggleBattleMode
        nameWithType: ILobbyNetworkManager.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode*
        name: ToggleBattleMode
        nameWithType: ILobbyNetworkManager.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates*
        name: TickCheckActivates
        nameWithType: ILobbyNetworkManager.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates*
        name: TickCheckActivates
        nameWithType: ILobbyNetworkManager.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
  Global.Action{ThirdPersonController}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{ThirdPersonController}'
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected*
        name: OnConnected
        nameWithType: ILobbyNetworkManager.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected*
        name: OnConnected
        nameWithType: ILobbyNetworkManager.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging*
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging*
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId*
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId*
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI*
        name: ShowPlayerPersonalUI
        nameWithType: ILobbyNetworkManager.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI*
        name: ShowPlayerPersonalUI
        nameWithType: ILobbyNetworkManager.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI
  Global.CharacterStateEnum:
    name:
      CSharp:
      - id: Global.CharacterStateEnum
        name: CharacterStateEnum
        nameWithType: CharacterStateEnum
        qualifiedName: CharacterStateEnum
        isExternal: true
      VB:
      - id: Global.CharacterStateEnum
        name: CharacterStateEnum
        nameWithType: CharacterStateEnum
        qualifiedName: CharacterStateEnum
        isExternal: true
    isDefinition: true
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState*
        name: GetPlayerState
        nameWithType: ILobbyNetworkManager.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState*
        name: GetPlayerState
        nameWithType: ILobbyNetworkManager.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
        name: ILobbyNetworkManager
        nameWithType: ILobbyNetworkManager
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
        name: ILobbyNetworkManager
        nameWithType: ILobbyNetworkManager
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
  Timba.Games.SacredTails.LobbyNetworking:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.LobbyNetworking
        nameWithType: Timba.Games.SacredTails.LobbyNetworking
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking
      VB:
      - name: Timba.Games.SacredTails.LobbyNetworking
        nameWithType: Timba.Games.SacredTails.LobbyNetworking
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.LobbyNetworking
  Global.PlayerDataManager:
    name:
      CSharp:
      - id: Global.PlayerDataManager
        name: PlayerDataManager
        nameWithType: PlayerDataManager
        qualifiedName: PlayerDataManager
      VB:
      - id: Global.PlayerDataManager
        name: PlayerDataManager
        nameWithType: PlayerDataManager
        qualifiedName: PlayerDataManager
    isDefinition: true
    commentId: T:Global.PlayerDataManager
  System.Collections.Generic.Dictionary{System.String,ThirdPersonController}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,ThirdPersonController}
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: LobbyNetworkingController.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: LobbyNetworkingController.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentPlayer
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
        name: CurrentPlayer
        nameWithType: ILobbyNetworkManager.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
        name: CurrentPlayer
        nameWithType: ILobbyNetworkManager.CurrentPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentPlayer
  System.Collections.Generic.Dictionary{System.String,System.Boolean}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,System.Boolean}
  Global.ILobbydatabase:
    name:
      CSharp:
      - id: Global.ILobbydatabase
        name: ILobbydatabase
        nameWithType: ILobbydatabase
        qualifiedName: ILobbydatabase
        isExternal: true
      VB:
      - id: Global.ILobbydatabase
        name: ILobbydatabase
        nameWithType: ILobbydatabase
        qualifiedName: ILobbydatabase
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ILobbydatabase'
  Global.ChatTextBox:
    name:
      CSharp:
      - id: Global.ChatTextBox
        name: ChatTextBox
        nameWithType: ChatTextBox
        qualifiedName: ChatTextBox
      VB:
      - id: Global.ChatTextBox
        name: ChatTextBox
        nameWithType: ChatTextBox
        qualifiedName: ChatTextBox
    isDefinition: true
    commentId: T:Global.ChatTextBox
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition*
        name: CurrentSecondsBetweenPetition
        nameWithType: LobbyNetworkingController.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition*
        name: CurrentSecondsBetweenPetition
        nameWithType: LobbyNetworkingController.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CurrentSecondsBetweenPetition
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
        name: CurrentSecondsBetweenPetition
        nameWithType: ILobbyNetworkManager.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
        name: CurrentSecondsBetweenPetition
        nameWithType: ILobbyNetworkManager.CurrentSecondsBetweenPetition
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CurrentSecondsBetweenPetition
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected*
        name: OnConnected
        nameWithType: LobbyNetworkingController.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected*
        name: OnConnected
        nameWithType: LobbyNetworkingController.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnConnected
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
        name: OnConnected
        nameWithType: ILobbyNetworkManager.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
        name: OnConnected
        nameWithType: ILobbyNetworkManager.OnConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: P:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.OnConnected
  Global.UnityEvent`1:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityEvent`1'
  Global.UnityEvent{ThirdPersonController}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ThirdPersonController
        name: ThirdPersonController
        nameWithType: ThirdPersonController
        qualifiedName: ThirdPersonController
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{ThirdPersonController}'
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start*
        name: Start
        nameWithType: LobbyNetworkingController.Start
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start*
        name: Start
        nameWithType: LobbyNetworkingController.Start
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.Start
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: LobbyNetworkingController.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby*
        name: ConnectToLobby
        nameWithType: LobbyNetworkingController.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ConnectToLobby
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
        name: ConnectToLobby
        nameWithType: ILobbyNetworkManager.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
        name: ConnectToLobby
        nameWithType: ILobbyNetworkManager.ConnectToLobby
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ConnectToLobby(System.Int32)
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates*
        name: TickCheckActivates
        nameWithType: LobbyNetworkingController.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates*
        name: TickCheckActivates
        nameWithType: LobbyNetworkingController.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheckActivates
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
        name: TickCheckActivates
        nameWithType: ILobbyNetworkManager.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
        name: TickCheckActivates
        nameWithType: ILobbyNetworkManager.TickCheckActivates
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.TickCheckActivates
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck*
        name: TickCheck
        nameWithType: LobbyNetworkingController.TickCheck
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck*
        name: TickCheck
        nameWithType: LobbyNetworkingController.TickCheck
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.TickCheck
  Global.LobbyPlayerBasePayload:
    name:
      CSharp:
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      VB:
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
    isDefinition: true
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving*
        name: CheckIfIsMoving
        nameWithType: LobbyNetworkingController.CheckIfIsMoving
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving*
        name: CheckIfIsMoving
        nameWithType: LobbyNetworkingController.CheckIfIsMoving
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfIsMoving
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers*
        name: ManageLobbyPlayers
        nameWithType: LobbyNetworkingController.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers*
        name: ManageLobbyPlayers
        nameWithType: LobbyNetworkingController.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ManageLobbyPlayers
  ? Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
        name: ManageLobbyPlayers
        nameWithType: ILobbyNetworkManager.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
        name: ManageLobbyPlayers
        nameWithType: ILobbyNetworkManager.ManageLobbyPlayers
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ManageLobbyPlayers(System.Collections.Generic.Dictionary{System.String,LobbyPlayerBasePayload})
  System.Collections.Generic.KeyValuePair`2:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.KeyValuePair`2
  System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload}:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: System.Collections.Generic.KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.LobbyPlayerBasePayload
        name: LobbyPlayerBasePayload
        nameWithType: LobbyPlayerBasePayload
        qualifiedName: LobbyPlayerBasePayload
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.KeyValuePair`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.KeyValuePair{System.String,LobbyPlayerBasePayload}
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected*
        name: NewPlayerConnected
        nameWithType: LobbyNetworkingController.NewPlayerConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected*
        name: NewPlayerConnected
        nameWithType: LobbyNetworkingController.NewPlayerConnected
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.NewPlayerConnected
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState*
        name: GetPlayerState
        nameWithType: LobbyNetworkingController.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState*
        name: GetPlayerState
        nameWithType: LobbyNetworkingController.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GetPlayerState
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
        name: GetPlayerState
        nameWithType: ILobbyNetworkManager.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
        name: GetPlayerState
        nameWithType: ILobbyNetworkManager.GetPlayerState
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.GetPlayerState(System.String)
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification*
        name: PlayerChallengeVerification
        nameWithType: LobbyNetworkingController.PlayerChallengeVerification
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification*
        name: PlayerChallengeVerification
        nameWithType: LobbyNetworkingController.PlayerChallengeVerification
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PlayerChallengeVerification
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId*
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId*
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfOtherPlayerHasChallengeForPlayfabId
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
        name: CheckIfOtherPlayerHasChallengeForPlayfabId
        nameWithType: ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfOtherPlayerHasChallengeForPlayfabId(System.String)
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging*
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging*
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.CheckIfPlayerHasChallengeOrIsChallenging
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
        name: CheckIfPlayerHasChallengeOrIsChallenging
        nameWithType: ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.CheckIfPlayerHasChallengeOrIsChallenging(System.String)
  Global.CharacterRecolor:
    name:
      CSharp:
      - id: Global.CharacterRecolor
        name: CharacterRecolor
        nameWithType: CharacterRecolor
        qualifiedName: CharacterRecolor
      VB:
      - id: Global.CharacterRecolor
        name: CharacterRecolor
        nameWithType: CharacterRecolor
        qualifiedName: CharacterRecolor
    isDefinition: true
    commentId: T:Global.CharacterRecolor
  System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: PartsOfCharacter
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.CharacterStyleInfo
        name: CharacterStyleInfo
        nameWithType: CharacterStyleInfo
        qualifiedName: CharacterStyleInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.PartsOfCharacter
        name: PartsOfCharacter
        nameWithType: PartsOfCharacter
        qualifiedName: PartsOfCharacter
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.CharacterStyleInfo
        name: CharacterStyleInfo
        nameWithType: CharacterStyleInfo
        qualifiedName: CharacterStyleInfo
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{PartsOfCharacter,CharacterStyleInfo}
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer*
        name: PaintOtherPlayer
        nameWithType: LobbyNetworkingController.PaintOtherPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer*
        name: PaintOtherPlayer
        nameWithType: LobbyNetworkingController.PaintOtherPlayer
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.PaintOtherPlayer
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: LobbyNetworkingController.OnApplicationQuit
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit*
        name: OnApplicationQuit
        nameWithType: LobbyNetworkingController.OnApplicationQuit
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.OnApplicationQuit
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI*
        name: ShowPlayerPersonalUI
        nameWithType: LobbyNetworkingController.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI*
        name: ShowPlayerPersonalUI
        nameWithType: LobbyNetworkingController.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ShowPlayerPersonalUI
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
        name: ShowPlayerPersonalUI
        nameWithType: ILobbyNetworkManager.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
        name: ShowPlayerPersonalUI
        nameWithType: ILobbyNetworkManager.ShowPlayerPersonalUI
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ShowPlayerPersonalUI(System.Boolean)
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode*
        name: ToogleChatMode
        nameWithType: LobbyNetworkingController.ToogleChatMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode*
        name: ToogleChatMode
        nameWithType: LobbyNetworkingController.ToogleChatMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToogleChatMode
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode*
        name: UntoogleChatMode
        nameWithType: LobbyNetworkingController.UntoogleChatMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode*
        name: UntoogleChatMode
        nameWithType: LobbyNetworkingController.UntoogleChatMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.UntoogleChatMode
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode*
        name: ToggleBattleMode
        nameWithType: LobbyNetworkingController.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode*
        name: ToggleBattleMode
        nameWithType: LobbyNetworkingController.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.ToggleBattleMode
  Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean):
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
        name: ToggleBattleMode
        nameWithType: ILobbyNetworkManager.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
        name: ToggleBattleMode
        nameWithType: ILobbyNetworkManager.ToggleBattleMode
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager
    commentId: M:Timba.Games.SacredTails.LobbyNetworking.ILobbyNetworkManager.ToggleBattleMode(System.Boolean)
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash*
        name: GeneratePlayfabIdHash
        nameWithType: LobbyNetworkingController.GeneratePlayfabIdHash
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash*
        name: GeneratePlayfabIdHash
        nameWithType: LobbyNetworkingController.GeneratePlayfabIdHash
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.GeneratePlayfabIdHash
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady*
        name: IsReady
        nameWithType: LobbyNetworkingController.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady*
        name: IsReady
        nameWithType: LobbyNetworkingController.IsReady
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.IsReady
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
        name: LobbyNetworkingController
        nameWithType: LobbyNetworkingController
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
        name: LobbyNetworkingController
        nameWithType: LobbyNetworkingController
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController
  System.Collections.Generic.List{Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
        name: LobbyNetworkingController.DirectMessage
        nameWithType: LobbyNetworkingController.DirectMessage
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
        name: LobbyNetworkingController.DirectMessage
        nameWithType: LobbyNetworkingController.DirectMessage
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage}
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
        name: LobbyNetworkingController.MessageObject
        nameWithType: LobbyNetworkingController.MessageObject
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
        name: LobbyNetworkingController.MessageObject
        nameWithType: LobbyNetworkingController.MessageObject
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.MessageObject
  Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
        name: LobbyNetworkingController.DirectMessage
        nameWithType: LobbyNetworkingController.DirectMessage
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
        name: LobbyNetworkingController.DirectMessage
        nameWithType: LobbyNetworkingController.DirectMessage
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.LobbyNetworkingController.DirectMessage
  Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
        name: ConnectionResponse
        nameWithType: ConnectionResponse
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
        name: ConnectionResponse
        nameWithType: ConnectionResponse
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.ConnectionResponse
  Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
        name: PlayersStreamData
        nameWithType: PlayersStreamData
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
      VB:
      - id: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
        name: PlayersStreamData
        nameWithType: PlayersStreamData
        qualifiedName: Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.LobbyNetworking.PlayersStreamData
  Global.TurnsController:
    name:
      CSharp:
      - id: Global.TurnsController
        name: TurnsController
        nameWithType: TurnsController
        qualifiedName: TurnsController
        isExternal: true
      VB:
      - id: Global.TurnsController
        name: TurnsController
        nameWithType: TurnsController
        qualifiedName: TurnsController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.TurnsController'
  Global.BattleGameMode:
    name:
      CSharp:
      - id: Global.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: BattleGameMode
        isExternal: true
      VB:
      - id: Global.BattleGameMode
        name: BattleGameMode
        nameWithType: BattleGameMode
        qualifiedName: BattleGameMode
        isExternal: true
    isDefinition: true
    commentId: '!:Global.BattleGameMode'
  Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup*
        name: OpenSkipTurnPopup
        nameWithType: UIHelper.OpenSkipTurnPopup
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup
      VB:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup*
        name: OpenSkipTurnPopup
        nameWithType: UIHelper.OpenSkipTurnPopup
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.BattleModule.UIHelper.OpenSkipTurnPopup
  Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup*
        name: OpenSurrenderPopup
        nameWithType: UIHelper.OpenSurrenderPopup
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup
      VB:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup*
        name: OpenSurrenderPopup
        nameWithType: UIHelper.OpenSurrenderPopup
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.BattleModule.UIHelper.OpenSurrenderPopup
  Timba.Games.SacredTails.BattleModule.UIHelper:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper
        name: UIHelper
        nameWithType: UIHelper
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper
      VB:
      - id: Timba.Games.SacredTails.BattleModule.UIHelper
        name: UIHelper
        nameWithType: UIHelper
        qualifiedName: Timba.Games.SacredTails.BattleModule.UIHelper
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.BattleModule.UIHelper
  Timba.Games.SacredTails.BattleModule:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.BattleModule
        nameWithType: Timba.Games.SacredTails.BattleModule
        qualifiedName: Timba.Games.SacredTails.BattleModule
      VB:
      - name: Timba.Games.SacredTails.BattleModule
        nameWithType: Timba.Games.SacredTails.BattleModule
        qualifiedName: Timba.Games.SacredTails.BattleModule
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.BattleModule
  System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action}
  Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup*
        name: ShowInfoPopup
        nameWithType: IPopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup
      VB:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup*
        name: ShowInfoPopup
        nameWithType: IPopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup
  Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup*
        name: HideInfoPopup
        nameWithType: IPopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      VB:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup*
        name: HideInfoPopup
        nameWithType: IPopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
  Timba.Games.SacredTails.PopupModule.IPopupManager:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager
        name: IPopupManager
        nameWithType: IPopupManager
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager
      VB:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager
        name: IPopupManager
        nameWithType: IPopupManager
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager
    isDefinition: true
    parent: Timba.Games.SacredTails.PopupModule
    commentId: T:Timba.Games.SacredTails.PopupModule.IPopupManager
  Timba.Games.SacredTails.PopupModule:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.PopupModule
        nameWithType: Timba.Games.SacredTails.PopupModule
        qualifiedName: Timba.Games.SacredTails.PopupModule
      VB:
      - name: Timba.Games.SacredTails.PopupModule
        nameWithType: Timba.Games.SacredTails.PopupModule
        qualifiedName: Timba.Games.SacredTails.PopupModule
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.PopupModule
  Timba.Games.SacredTails.PopupModule.PopupManager.IsReady*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady*
        name: IsReady
        nameWithType: PopupManager.IsReady
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady
      VB:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady*
        name: IsReady
        nameWithType: PopupManager.IsReady
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.IsReady
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.PopupModule.PopupManager.IsReady
  Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup*
        name: ShowInfoPopup
        nameWithType: PopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup
      VB:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup*
        name: ShowInfoPopup
        nameWithType: PopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.PopupModule.PopupManager.ShowInfoPopup
  ? Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
  : name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
        name: ShowInfoPopup
        nameWithType: IPopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
        name: ShowInfoPopup
        nameWithType: IPopupManager.ShowInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.PopupModule.IPopupManager
    commentId: M:Timba.Games.SacredTails.PopupModule.IPopupManager.ShowInfoPopup(System.String,System.Collections.Generic.Dictionary{Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType,Action})
  Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup*
        name: HideInfoPopup
        nameWithType: PopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup
      VB:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup*
        name: HideInfoPopup
        nameWithType: PopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.PopupModule.PopupManager.HideInfoPopup
  Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
        name: HideInfoPopup
        nameWithType: IPopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
        name: HideInfoPopup
        nameWithType: IPopupManager.HideInfoPopup
        qualifiedName: Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Games.SacredTails.PopupModule.IPopupManager
    commentId: M:Timba.Games.SacredTails.PopupModule.IPopupManager.HideInfoPopup
  Timba.Games.SacredTails.PopupModule.PopupManager:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager
        name: PopupManager
        nameWithType: PopupManager
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager
      VB:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager
        name: PopupManager
        nameWithType: PopupManager
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.PopupModule.PopupManager
  Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
      VB:
      - id: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
        name: PopupManager.ButtonType
        nameWithType: PopupManager.ButtonType
        qualifiedName: Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
    isDefinition: true
    parent: Timba.Games.SacredTails.PopupModule
    commentId: T:Timba.Games.SacredTails.PopupModule.PopupManager.ButtonType
  Timba.Games.SacredTails.StoreModule.StoreController.Start*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.Start*
        name: Start
        nameWithType: StoreController.Start
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.Start
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.Start*
        name: Start
        nameWithType: StoreController.Start
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.Start
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.Start
  Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent*
        name: SubscribeToPurchaseEvent
        nameWithType: StoreController.SubscribeToPurchaseEvent
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent*
        name: SubscribeToPurchaseEvent
        nameWithType: StoreController.SubscribeToPurchaseEvent
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.SubscribeToPurchaseEvent
  Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore*
        name: RequestCardsStore
        nameWithType: StoreController.RequestCardsStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore*
        name: RequestCardsStore
        nameWithType: StoreController.RequestCardsStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.RequestCardsStore
  Global.GetCatalogItemsResult:
    name:
      CSharp:
      - id: Global.GetCatalogItemsResult
        name: GetCatalogItemsResult
        nameWithType: GetCatalogItemsResult
        qualifiedName: GetCatalogItemsResult
        isExternal: true
      VB:
      - id: Global.GetCatalogItemsResult
        name: GetCatalogItemsResult
        nameWithType: GetCatalogItemsResult
        qualifiedName: GetCatalogItemsResult
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GetCatalogItemsResult'
  Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore*
        name: SetCardStore
        nameWithType: StoreController.SetCardStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore*
        name: SetCardStore
        nameWithType: StoreController.SetCardStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.SetCardStore
  Timba.Games.SacredTails.StoreModule.StoreController.HideStore*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.HideStore*
        name: HideStore
        nameWithType: StoreController.HideStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.HideStore
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.HideStore*
        name: HideStore
        nameWithType: StoreController.HideStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.HideStore
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.HideStore
  Timba.Games.SacredTails.StoreModule.StoreController.CreatePool*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool*
        name: CreatePool
        nameWithType: StoreController.CreatePool
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool*
        name: CreatePool
        nameWithType: StoreController.CreatePool
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.CreatePool
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.CreatePool
  System.Collections.Generic.List{CatalogItem}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.CatalogItem
        name: CatalogItem
        nameWithType: CatalogItem
        qualifiedName: CatalogItem
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.CatalogItem
        name: CatalogItem
        nameWithType: CatalogItem
        qualifiedName: CatalogItem
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CatalogItem}
  Timba.Games.SacredTails.StoreModule.StoreController.FillPool*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.FillPool*
        name: FillPool
        nameWithType: StoreController.FillPool
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.FillPool
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.FillPool*
        name: FillPool
        nameWithType: StoreController.FillPool
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.FillPool
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.FillPool
  System.UInt32:
    name:
      CSharp:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      VB:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt32
  Timba.Games.SacredTails.StoreModule.StoreController.BuyItem*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem*
        name: BuyItem
        nameWithType: StoreController.BuyItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem*
        name: BuyItem
        nameWithType: StoreController.BuyItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController.BuyItem
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreController.BuyItem
  Timba.Games.SacredTails.StoreModule.StoreController:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreController
        name: StoreController
        nameWithType: StoreController
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreController
        name: StoreController
        nameWithType: StoreController
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreController
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreController
  Timba.Games.SacredTails.StoreModule:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.StoreModule
        nameWithType: Timba.Games.SacredTails.StoreModule
        qualifiedName: Timba.Games.SacredTails.StoreModule
      VB:
      - name: Timba.Games.SacredTails.StoreModule
        nameWithType: Timba.Games.SacredTails.StoreModule
        qualifiedName: Timba.Games.SacredTails.StoreModule
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.StoreModule
  Timba.Games.SacredTails.StoreModule.StoreItemData:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreItemData
        name: StoreItemData
        nameWithType: StoreItemData
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItemData
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreItemData
        name: StoreItemData
        nameWithType: StoreItemData
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItemData
    isDefinition: true
    parent: Timba.Games.SacredTails.StoreModule
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreItemData
  Timba.Games.SacredTails.StoreModule.StoreItem.Init*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem.Init*
        name: Init
        nameWithType: StoreItem.Init
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem.Init
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem.Init*
        name: Init
        nameWithType: StoreItem.Init
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem.Init
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreItem.Init
  Global.Action{System.Int32}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{System.Int32}'
  Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction*
        name: SetCardButtonAction
        nameWithType: StoreItem.SetCardButtonAction
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction*
        name: SetCardButtonAction
        nameWithType: StoreItem.SetCardButtonAction
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreItem.SetCardButtonAction
  Timba.Games.SacredTails.StoreModule.StoreItem:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem
        name: StoreItem
        nameWithType: StoreItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreItem
        name: StoreItem
        nameWithType: StoreItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreItem
  Global.Action{System.Int32,System.UInt32}:
    name:
      CSharp:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`2
    commentId: '!:Global.Action{System.Int32,System.UInt32}'
  Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard*
        name: ShowPopupPurchaseCard
        nameWithType: StoreView.ShowPopupPurchaseCard
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard*
        name: ShowPopupPurchaseCard
        nameWithType: StoreView.ShowPopupPurchaseCard
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseCard
  Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult*
        name: ShowPopupPurchaseResult
        nameWithType: StoreView.ShowPopupPurchaseResult
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult*
        name: ShowPopupPurchaseResult
        nameWithType: StoreView.ShowPopupPurchaseResult
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreView.ShowPopupPurchaseResult
  Timba.Games.SacredTails.StoreModule.StoreView.HidePopup*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup*
        name: HidePopup
        nameWithType: StoreView.HidePopup
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup*
        name: HidePopup
        nameWithType: StoreView.HidePopup
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HidePopup
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreView.HidePopup
  Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase*
        name: HidePanelAfterPurchase
        nameWithType: StoreView.HidePanelAfterPurchase
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase*
        name: HidePanelAfterPurchase
        nameWithType: StoreView.HidePanelAfterPurchase
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreView.HidePanelAfterPurchase
  System.Collections.Generic.List{Timba.Games.SacredTails.StoreModule.StoreItem}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Timba.Games.SacredTails.StoreModule.StoreItem
        name: StoreItem
        nameWithType: StoreItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Timba.Games.SacredTails.StoreModule.StoreItem
        name: StoreItem
        nameWithType: StoreItem
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreItem
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Timba.Games.SacredTails.StoreModule.StoreItem}
  Timba.Games.SacredTails.StoreModule.StoreView.HideStore*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HideStore*
        name: HideStore
        nameWithType: StoreView.HideStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HideStore
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView.HideStore*
        name: HideStore
        nameWithType: StoreView.HideStore
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView.HideStore
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.StoreModule.StoreView.HideStore
  Timba.Games.SacredTails.StoreModule.StoreView:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.StoreModule.StoreView
        name: StoreView
        nameWithType: StoreView
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView
      VB:
      - id: Timba.Games.SacredTails.StoreModule.StoreView
        name: StoreView
        nameWithType: StoreView
        qualifiedName: Timba.Games.SacredTails.StoreModule.StoreView
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.StoreModule.StoreView
  Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency*
        name: ChangeCurrency
        nameWithType: WalletView.ChangeCurrency
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency
      VB:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency*
        name: ChangeCurrency
        nameWithType: WalletView.ChangeCurrency
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletModule.WalletView.ChangeCurrency
  Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: WalletView.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet
      VB:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet*
        name: ShowUserWallet
        nameWithType: WalletView.ShowUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletModule.WalletView.ShowUserWallet
  Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet*:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet*
        name: HideUserWallet
        nameWithType: WalletView.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet
      VB:
      - id: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet*
        name: HideUserWallet
        nameWithType: WalletView.HideUserWallet
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet
    isDefinition: true
    commentId: Overload:Timba.Games.SacredTails.WalletModule.WalletView.HideUserWallet
  Timba.Games.SacredTails.WalletModule.WalletView:
    name:
      CSharp:
      - id: Timba.Games.SacredTails.WalletModule.WalletView
        name: WalletView
        nameWithType: WalletView
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView
      VB:
      - id: Timba.Games.SacredTails.WalletModule.WalletView
        name: WalletView
        nameWithType: WalletView
        qualifiedName: Timba.Games.SacredTails.WalletModule.WalletView
    isDefinition: true
    commentId: T:Timba.Games.SacredTails.WalletModule.WalletView
  Timba.Games.SacredTails.WalletModule:
    name:
      CSharp:
      - name: Timba.Games.SacredTails.WalletModule
        nameWithType: Timba.Games.SacredTails.WalletModule
        qualifiedName: Timba.Games.SacredTails.WalletModule
      VB:
      - name: Timba.Games.SacredTails.WalletModule
        nameWithType: Timba.Games.SacredTails.WalletModule
        qualifiedName: Timba.Games.SacredTails.WalletModule
    isDefinition: true
    commentId: N:Timba.Games.SacredTails.WalletModule
  Timba.Games.Networking.Testing.NetworkingTestUI:
    name:
      CSharp:
      - id: Timba.Games.Networking.Testing.NetworkingTestUI
        name: NetworkingTestUI
        nameWithType: NetworkingTestUI
        qualifiedName: Timba.Games.Networking.Testing.NetworkingTestUI
      VB:
      - id: Timba.Games.Networking.Testing.NetworkingTestUI
        name: NetworkingTestUI
        nameWithType: NetworkingTestUI
        qualifiedName: Timba.Games.Networking.Testing.NetworkingTestUI
    isDefinition: true
    commentId: T:Timba.Games.Networking.Testing.NetworkingTestUI
  Timba.Games.Networking.Testing:
    name:
      CSharp:
      - name: Timba.Games.Networking.Testing
        nameWithType: Timba.Games.Networking.Testing
        qualifiedName: Timba.Games.Networking.Testing
      VB:
      - name: Timba.Games.Networking.Testing
        nameWithType: Timba.Games.Networking.Testing
        qualifiedName: Timba.Games.Networking.Testing
    isDefinition: true
    commentId: N:Timba.Games.Networking.Testing
  Global.Color32[]:
    name:
      CSharp:
      - id: Global.Color32
        name: Color32
        nameWithType: Color32
        qualifiedName: Color32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Color32
        name: Color32
        nameWithType: Color32
        qualifiedName: Color32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Timba.Characters.PartVisual.ChangeSpritePalette*:
    name:
      CSharp:
      - id: Timba.Characters.PartVisual.ChangeSpritePalette*
        name: ChangeSpritePalette
        nameWithType: PartVisual.ChangeSpritePalette
        qualifiedName: Timba.Characters.PartVisual.ChangeSpritePalette
      VB:
      - id: Timba.Characters.PartVisual.ChangeSpritePalette*
        name: ChangeSpritePalette
        nameWithType: PartVisual.ChangeSpritePalette
        qualifiedName: Timba.Characters.PartVisual.ChangeSpritePalette
    isDefinition: true
    commentId: Overload:Timba.Characters.PartVisual.ChangeSpritePalette
  Global.Action{MaterialPropertyBlock}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.MaterialPropertyBlock
        name: MaterialPropertyBlock
        nameWithType: MaterialPropertyBlock
        qualifiedName: MaterialPropertyBlock
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.MaterialPropertyBlock
        name: MaterialPropertyBlock
        nameWithType: MaterialPropertyBlock
        qualifiedName: MaterialPropertyBlock
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{MaterialPropertyBlock}'
  Timba.Characters.PartVisual.RecolorPartSprites*:
    name:
      CSharp:
      - id: Timba.Characters.PartVisual.RecolorPartSprites*
        name: RecolorPartSprites
        nameWithType: PartVisual.RecolorPartSprites
        qualifiedName: Timba.Characters.PartVisual.RecolorPartSprites
      VB:
      - id: Timba.Characters.PartVisual.RecolorPartSprites*
        name: RecolorPartSprites
        nameWithType: PartVisual.RecolorPartSprites
        qualifiedName: Timba.Characters.PartVisual.RecolorPartSprites
    isDefinition: true
    commentId: Overload:Timba.Characters.PartVisual.RecolorPartSprites
  Global.Action{Material}:
    name:
      CSharp:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Action`1
    commentId: '!:Global.Action{Material}'
  Timba.Characters.PartVisual.RecolorPartImages*:
    name:
      CSharp:
      - id: Timba.Characters.PartVisual.RecolorPartImages*
        name: RecolorPartImages
        nameWithType: PartVisual.RecolorPartImages
        qualifiedName: Timba.Characters.PartVisual.RecolorPartImages
      VB:
      - id: Timba.Characters.PartVisual.RecolorPartImages*
        name: RecolorPartImages
        nameWithType: PartVisual.RecolorPartImages
        qualifiedName: Timba.Characters.PartVisual.RecolorPartImages
    isDefinition: true
    commentId: Overload:Timba.Characters.PartVisual.RecolorPartImages
  Timba.Characters.PartVisual.SetPowered*:
    name:
      CSharp:
      - id: Timba.Characters.PartVisual.SetPowered*
        name: SetPowered
        nameWithType: PartVisual.SetPowered
        qualifiedName: Timba.Characters.PartVisual.SetPowered
      VB:
      - id: Timba.Characters.PartVisual.SetPowered*
        name: SetPowered
        nameWithType: PartVisual.SetPowered
        qualifiedName: Timba.Characters.PartVisual.SetPowered
    isDefinition: true
    commentId: Overload:Timba.Characters.PartVisual.SetPowered
  Timba.Characters.PartVisual:
    name:
      CSharp:
      - id: Timba.Characters.PartVisual
        name: PartVisual
        nameWithType: PartVisual
        qualifiedName: Timba.Characters.PartVisual
      VB:
      - id: Timba.Characters.PartVisual
        name: PartVisual
        nameWithType: PartVisual
        qualifiedName: Timba.Characters.PartVisual
    isDefinition: true
    commentId: T:Timba.Characters.PartVisual
  Timba.Characters:
    name:
      CSharp:
      - name: Timba.Characters
        nameWithType: Timba.Characters
        qualifiedName: Timba.Characters
      VB:
      - name: Timba.Characters
        nameWithType: Timba.Characters
        qualifiedName: Timba.Characters
    isDefinition: true
    commentId: N:Timba.Characters
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Timba.Recolor.RecolorablePart3D.SetColors*:
    name:
      CSharp:
      - id: Timba.Recolor.RecolorablePart3D.SetColors*
        name: SetColors
        nameWithType: RecolorablePart3D.SetColors
        qualifiedName: Timba.Recolor.RecolorablePart3D.SetColors
      VB:
      - id: Timba.Recolor.RecolorablePart3D.SetColors*
        name: SetColors
        nameWithType: RecolorablePart3D.SetColors
        qualifiedName: Timba.Recolor.RecolorablePart3D.SetColors
    isDefinition: true
    commentId: Overload:Timba.Recolor.RecolorablePart3D.SetColors
  Timba.Recolor.RecolorablePart3D:
    name:
      CSharp:
      - id: Timba.Recolor.RecolorablePart3D
        name: RecolorablePart3D
        nameWithType: RecolorablePart3D
        qualifiedName: Timba.Recolor.RecolorablePart3D
      VB:
      - id: Timba.Recolor.RecolorablePart3D
        name: RecolorablePart3D
        nameWithType: RecolorablePart3D
        qualifiedName: Timba.Recolor.RecolorablePart3D
    isDefinition: true
    commentId: T:Timba.Recolor.RecolorablePart3D
  Timba.Recolor:
    name:
      CSharp:
      - name: Timba.Recolor
        nameWithType: Timba.Recolor
        qualifiedName: Timba.Recolor
      VB:
      - name: Timba.Recolor
        nameWithType: Timba.Recolor
        qualifiedName: Timba.Recolor
    isDefinition: true
    commentId: N:Timba.Recolor
  Global.KeyCode[]:
    name:
      CSharp:
      - id: Global.KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue*
        name: SetMoveValue
        nameWithType: InputSource.SetMoveValue
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue*
        name: SetMoveValue
        nameWithType: InputSource.SetMoveValue
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputSource.SetMoveValue
  Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue*
        name: SetInteractValue
        nameWithType: InputSource.SetInteractValue
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue*
        name: SetInteractValue
        nameWithType: InputSource.SetInteractValue
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputSource.SetInteractValue
  Timba.Packages.Games.PlayerControllerModule.InputSource:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource
        name: InputSource
        nameWithType: InputSource
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputSource
        name: InputSource
        nameWithType: InputSource
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputSource
    isDefinition: true
    parent: Timba.Packages.Games.PlayerControllerModule
    commentId: T:Timba.Packages.Games.PlayerControllerModule.InputSource
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init*
        name: Init
        nameWithType: IInputHandleable.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init*
        name: Init
        nameWithType: IInputHandleable.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput*
        name: GetHorizontalInput
        nameWithType: IInputHandleable.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput*
        name: GetHorizontalInput
        nameWithType: IInputHandleable.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput*
        name: GetVerticalInput
        nameWithType: IInputHandleable.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput*
        name: GetVerticalInput
        nameWithType: IInputHandleable.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
        name: IInputHandleable
        nameWithType: IInputHandleable
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
        name: IInputHandleable
        nameWithType: IInputHandleable
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    isDefinition: true
    parent: Timba.Packages.Games.PlayerControllerModule
    commentId: T:Timba.Packages.Games.PlayerControllerModule.IInputHandleable
  Timba.Packages.Games.PlayerControllerModule:
    name:
      CSharp:
      - name: Timba.Packages.Games.PlayerControllerModule
        nameWithType: Timba.Packages.Games.PlayerControllerModule
        qualifiedName: Timba.Packages.Games.PlayerControllerModule
      VB:
      - name: Timba.Packages.Games.PlayerControllerModule
        nameWithType: Timba.Packages.Games.PlayerControllerModule
        qualifiedName: Timba.Packages.Games.PlayerControllerModule
    isDefinition: true
    commentId: N:Timba.Packages.Games.PlayerControllerModule
  Timba.Packages.Games.PlayerControllerModule.InputHandler.Init*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init*
        name: Init
        nameWithType: InputHandler.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init*
        name: Init
        nameWithType: InputHandler.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.Init
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputHandler.Init
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
        name: Init
        nameWithType: IInputHandleable.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
        name: Init
        nameWithType: IInputHandleable.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.Init
  Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput*
        name: GetHorizontalInput
        nameWithType: InputHandler.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput*
        name: GetHorizontalInput
        nameWithType: InputHandler.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetHorizontalInput
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
        name: GetHorizontalInput
        nameWithType: IInputHandleable.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
        name: GetHorizontalInput
        nameWithType: IInputHandleable.GetHorizontalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetHorizontalInput
  Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput*
        name: GetVerticalInput
        nameWithType: InputHandler.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput*
        name: GetVerticalInput
        nameWithType: InputHandler.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetVerticalInput
  Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
        name: GetVerticalInput
        nameWithType: IInputHandleable.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
        name: GetVerticalInput
        nameWithType: IInputHandleable.GetVerticalInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Timba.Packages.Games.PlayerControllerModule.IInputHandleable
    commentId: M:Timba.Packages.Games.PlayerControllerModule.IInputHandleable.GetVerticalInput
  Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput*
        name: GetInteractableInput
        nameWithType: InputHandler.GetInteractableInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput*
        name: GetInteractableInput
        nameWithType: InputHandler.GetInteractableInput
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.InputHandler.GetInteractableInput
  Timba.Packages.Games.PlayerControllerModule.InputHandler:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler
        name: InputHandler
        nameWithType: InputHandler
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.InputHandler
        name: InputHandler
        nameWithType: InputHandler
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.InputHandler
    isDefinition: true
    commentId: T:Timba.Packages.Games.PlayerControllerModule.InputHandler
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
    commentId: '!:T'
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init*:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init*
        name: Init
        nameWithType: ThirdPersonCoreController.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init*
        name: Init
        nameWithType: ThirdPersonCoreController.Init
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init
    isDefinition: true
    commentId: Overload:Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController.Init
  Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController:
    name:
      CSharp:
      - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
        name: ThirdPersonCoreController
        nameWithType: ThirdPersonCoreController
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
      VB:
      - id: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
        name: ThirdPersonCoreController
        nameWithType: ThirdPersonCoreController
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
    isDefinition: true
    commentId: T:Timba.Packages.Games.PlayerControllerModule.Core.ThirdPersonCoreController
  Timba.Packages.Games.PlayerControllerModule.Core:
    name:
      CSharp:
      - name: Timba.Packages.Games.PlayerControllerModule.Core
        nameWithType: Timba.Packages.Games.PlayerControllerModule.Core
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core
      VB:
      - name: Timba.Packages.Games.PlayerControllerModule.Core
        nameWithType: Timba.Packages.Games.PlayerControllerModule.Core
        qualifiedName: Timba.Packages.Games.PlayerControllerModule.Core
    isDefinition: true
    commentId: N:Timba.Packages.Games.PlayerControllerModule.Core
